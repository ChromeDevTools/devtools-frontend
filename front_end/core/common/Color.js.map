{"version":3,"file":"Color.js","sourceRoot":"","sources":["../../../../../../front_end/core/common/Color.ts"],"names":[],"mappings":"AAAA,sCAAsC;AACtC,yEAAyE;AACzE,6BAA6B;AAE7B;;;;;;;;;;;;;;;;;;;;;;;;;;;GA2BG;AAEH,OAAO,KAAK,QAAQ,MAAM,yBAAyB,CAAC;AAEpD,OAAO,EAAC,cAAc,EAAC,MAAM,qBAAqB,CAAC;AACnD,OAAO,EACL,WAAW,EAIX,iBAAiB,EACjB,oBAAoB,EACpB,SAAS,EACT,aAAa,EACb,QAAQ,EACR,QAAQ,GACT,MAAM,iBAAiB,CAAC;AAEzB;;;;;;IAMI;AACJ,SAAS,YAAY,CAAC,GAAW;IAC/B,gDAAgD;IAChD,8CAA8C;IAC9C,iDAAiD;IACjD,qCAAqC;IACrC,OAAO,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;AACnC,CAAC;AAED;;;;IAII;AACJ,SAAS,UAAU,CAAC,SAAiB;IACnC,MAAM,KAAK,GAAG,SAAS,CAAC,OAAO,CAAC,mBAAmB,EAAE,EAAE,CAAC,CAAC;IACzD,6CAA6C;IAC7C,IAAI,KAAK,CAAC,KAAK,CAAC,IAAI,SAAS,CAAC,KAAK,CAAC,qBAAqB,CAAC,EAAE,CAAC;QAC3D,OAAO,IAAI,CAAC;IACd,CAAC;IAED,MAAM,MAAM,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC;IACjC,IAAI,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC;QAC/B,mBAAmB;QACnB,OAAO,MAAM,GAAG,GAAG,CAAC;IACtB,CAAC;IAED,IAAI,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC;QAC/B,mBAAmB;QACnB,OAAO,MAAM,GAAG,CAAC,GAAG,EAAE,CAAC;IACzB,CAAC;IAED,IAAI,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC;QAC9B,kBAAkB;QAClB,OAAO,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC;IAChC,CAAC;IAED,oBAAoB;IACpB,OAAO,MAAM,CAAC;AAChB,CAAC;AAED,4DAA4D;AAC5D,MAAM,UAAU,SAAS,CAAC,UAAkB;IAC1C,QAAQ,UAAU,EAAE,CAAC;QACnB;YACE,8BAAkB;QACpB;YACE,gCAAmB;QACrB;YACE,8BAAkB;QACpB;YACE,gCAAmB;QACrB;YACE,8BAAkB;QACpB;YACE,gCAAmB;QACrB;YACE,8BAAkB;QACpB;YACE,gCAAmB;QACrB;YACE,8BAAkB;QACpB;YACE,kCAAoB;QACtB;YACE,8BAAkB;QACpB;YACE,kCAAoB;IACxB,CAAC;IAED,OAAO,aAAa,CAAC,UAAU,CAAC,CAAC;AACnC,CAAC;AAKD,SAAS,aAAa,CAAC,cAAsB;IAC3C,QAAQ,cAAc,EAAE,CAAC;QACvB;YACE,gCAAmB;QACrB;YACE,8CAA0B;QAC5B;YACE,4CAAyB;QAC3B;YACE,sCAAsB;QACxB;YACE,gDAA2B;QAC7B;YACE,uCAAuB;QACzB;YACE,8BAAkB;QACpB;YACE,sCAAsB;QACxB;YACE,sCAAsB;IAC1B,CAAC;IAED,OAAO,IAAI,CAAC;AACd,CAAC;AAkBD;;;;;;;;;;GAUG;AACH,SAAS,iBAAiB,CAAC,OAAe,EAAE,KAAuB;IACjE,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAChC,MAAM,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;IACrC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,GAAG,KAAK,CAAC;IAE/B,OAAO,IAAI,GAAG,CAAC,UAAU,GAAG,CAAC,MAAM,GAAG,MAAM,CAAC,GAAG,GAAG,GAAG,MAAM,CAAC,CAAC;AAChE,CAAC;AAOD,MAAM,UAAU,KAAK,CAAC,IAAY;IAChC,iBAAiB;IACjB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC;QACtB,MAAM,KAAK,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,uDAAuD,CAAC,CAAC;QAChG,IAAI,KAAK,EAAE,CAAC;YACV,IAAI,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC;gBACb,OAAO,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;YACxC,CAAC;YAED,IAAI,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC;gBACb,OAAO,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;YAC3C,CAAC;YAED,OAAO,IAAI,CAAC;QACd,CAAC;IACH,CAAC;IAED,iFAAiF;IACjF,MAAM,KAAK,GACP,IAAI,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,iFAAiF,CAAC,CAAC;IAChH,IAAI,KAAK,EAAE,CAAC;QACV,MAAM,WAAW,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAG,aAAa;QACtD,MAAM,WAAW,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAG,aAAa;QACtD,MAAM,WAAW,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAG,aAAa;QACtD,MAAM,UAAU,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAI,QAAQ;QACjD,MAAM,YAAY,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAE,UAAU;QACnD,MAAM,UAAU,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAI,QAAQ;QACjD,MAAM,YAAY,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAE,UAAU;QACnD,MAAM,YAAY,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAE,UAAU;QACnD,MAAM,UAAU,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;QAE5B,2DAA2D;QAC3D,kDAAkD;QAClD,8CAA8C;QAC9C,IAAI,YAAY,EAAE,CAAC;YACjB,OAAO,aAAa,CAAC,QAAQ,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;QAClD,CAAC;QAED,MAAM,WAAW,GAAG,WAAW,IAAI,WAAW,IAAI,WAAW,CAAC;QAC9D,MAAM,WAAW,GAAG,WAAW,IAAI,WAAW,CAAC;QAC/C,MAAM,iBAAiB,GAAG,CAAC,WAAW,CAAC,CAAE,iDAAiD;QAE1F,MAAM,MAAM,GAAG,4BAA4B,CAAC,UAAU,EAAE,EAAC,WAAW,EAAE,iBAAiB,EAAC,CAAC,CAAC;QAC1F,IAAI,CAAC,MAAM,EAAE,CAAC;YACZ,OAAO,IAAI,CAAC;QACd,CAAC;QACD,MAAM,IAAI,GAAuB,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;QAC9E,IAAI,WAAW,EAAE,CAAC;YAChB,OAAO,MAAM,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;QACnF,CAAC;QAED,IAAI,WAAW,EAAE,CAAC;YAChB,OAAO,GAAG,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QAClC,CAAC;QAED,IAAI,WAAW,EAAE,CAAC;YAChB,OAAO,GAAG,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QAClC,CAAC;QAED,IAAI,UAAU,EAAE,CAAC;YACf,OAAO,GAAG,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QAClC,CAAC;QAED,IAAI,YAAY,EAAE,CAAC;YACjB,OAAO,KAAK,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACpC,CAAC;QAED,IAAI,UAAU,EAAE,CAAC;YACf,OAAO,GAAG,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QAClC,CAAC;QAED,IAAI,YAAY,EAAE,CAAC;YACjB,OAAO,KAAK,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACpC,CAAC;IACH,CAAC;IAED,OAAO,IAAI,CAAC;AACd,CAAC;AAED;;GAEG;AACH,SAAS,4BAA4B,CACjC,OAAe,EAAE,EAAC,WAAW,EAAE,iBAAiB,EAAsC;IACxF,MAAM,UAAU,GAAG,OAAO,CAAC,IAAI,EAAE,CAAC;IAClC,IAAI,MAAM,GAAa,EAAE,CAAC;IAE1B,IAAI,WAAW,EAAE,CAAC;QAChB,MAAM,GAAG,UAAU,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;IACvC,CAAC;IACD,IAAI,CAAC,WAAW,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;QACxC,MAAM,GAAG,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACjC,IAAI,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE,CAAC;YACtB,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACpB,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;gBACxB,OAAO,IAAI,CAAC;YACd,CAAC;QACH,CAAC;aAAM,IACH,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC;YACjH,MAAM,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YAC1C,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QAChF,CAAC;aAAM,IAAI,MAAM,CAAC,MAAM,IAAI,CAAC,EAAE,CAAC;YAC9B,OAAO,IAAI,CAAC;QACd,CAAC;IACH,CAAC;IACD,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;QAC1E,OAAO,IAAI,CAAC;IACd,CAAC;IAED,uDAAuD;IACvD,IAAI,iBAAiB,EAAE,CAAC;QACtB,OAAO,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,KAAK,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;IAC7D,CAAC;IAED,OAAO,MAAM,CAAC;AAChB,CAAC;AAKD,SAAS,KAAK,CAAC,KAAkB,EAAE,EAAC,GAAG,EAAE,GAAG,EAA+B;IACzE,IAAI,KAAK,KAAK,IAAI,EAAE,CAAC;QACnB,OAAO,KAAK,CAAC;IACf,CAAC;IACD,IAAI,GAAG,KAAK,SAAS,EAAE,CAAC;QACtB,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;IAC/B,CAAC;IACD,IAAI,GAAG,KAAK,SAAS,EAAE,CAAC;QACtB,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;IAC/B,CAAC;IACD,OAAO,KAAK,CAAC;AACf,CAAC;AAED,SAAS,eAAe,CAAC,KAAa,EAAE,KAAuB;IAC7D,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC;QACzB,OAAO,IAAI,CAAC;IACd,CAAC;IACD,MAAM,UAAU,GAAG,UAAU,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;IACjE,OAAO,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,iBAAiB,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;AACzE,CAAC;AAED,SAAS,WAAW,CAAC,KAAa;IAChC,MAAM,MAAM,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC;IACjC,OAAO,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC;AACvC,CAAC;AAED,SAAS,UAAU,CAAC,KAAuB;IACzC,IAAI,KAAK,KAAK,SAAS,EAAE,CAAC;QACxB,OAAO,IAAI,CAAC;IACd,CAAC;IACD,OAAO,KAAK,CAAC,eAAe,CAAC,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,WAAW,CAAC,KAAK,CAAC,EAAE,EAAC,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAC,CAAC,CAAC;AACvF,CAAC;AAED;;;;;;;;GAQG;AACH,SAAS,oBAAoB,CAAC,KAAa,EAAE,QAA0B,CAAC,CAAC,EAAE,CAAC,CAAC;IAC3E,6CAA6C;IAC7C,IAAI,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC;QAClC,OAAO,IAAI,CAAC;IACd,CAAC;IACD,MAAM,MAAM,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC;IAEjC,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC;QAC9B,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;YAC5C,OAAO,IAAI,CAAC;QACd,CAAC;QACD,OAAO,iBAAiB,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;IAC1C,CAAC;IACD,OAAO,MAAM,CAAC;AAChB,CAAC;AAED,SAAS,eAAe,CAAC,KAAa;IACpC,MAAM,MAAM,GAAG,oBAAoB,CAAC,KAAK,CAAC,CAAC;IAC3C,IAAI,MAAM,KAAK,IAAI,EAAE,CAAC;QACpB,OAAO,IAAI,CAAC;IACd,CAAC;IAED,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC;QAC9B,OAAO,MAAM,CAAC;IAChB,CAAC;IACD,OAAO,MAAM,GAAG,GAAG,CAAC;AACtB,CAAC;AAED,MAAM,UAAU,eAAe,CAAC,KAAa;IAC3C,MAAM,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,mBAAmB,EAAE,EAAE,CAAC,CAAC;IACrD,6CAA6C;IAC7C,IAAI,KAAK,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,KAAK,CAAC,qBAAqB,CAAC,EAAE,CAAC;QACvD,OAAO,IAAI,CAAC;IACd,CAAC;IACD,MAAM,MAAM,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC;IAEjC,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC;QACjC,OAAO,MAAM,GAAG,CAAC,CAAC;IACpB,CAAC;IACD,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC;QACjC,OAAO,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;IAC5B,CAAC;IACD,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC;QAChC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC;IACtC,CAAC;IACD,OAAO,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;AAC5B,CAAC;AAED,SAAS,oBAAoB,CAAC,KAAa;IACzC,6CAA6C;IAC7C,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,KAAK,CAAC,MAAM,GAAG,CAAC,IAAI,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC;QAC7E,OAAO,IAAI,CAAC;IACd,CAAC;IACD,MAAM,MAAM,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC;IACjC,OAAO,MAAM,GAAG,GAAG,CAAC;AACtB,CAAC;AAED,SAAS,iBAAiB,CAAC,KAAa;IACtC,OAAO,oBAAoB,CAAC,KAAK,CAAC,CAAC;AACrC,CAAC;AAED,SAAS,SAAS,CAAC,IAAa;IAC9B,MAAM,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;IAClB,IAAI,CAAC,GAAa,IAAI,CAAC,CAAC,CAAC,CAAC;IAC1B,MAAM,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;IAElB,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;IACtB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC;QACvB,CAAC,GAAG,CAAC,CAAC;IACR,CAAC;SAAM,CAAC;QACN,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IAC/B,CAAC;IAED,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC;AAED,MAAM,UAAU,OAAO,CAAC,GAAY;IAClC,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;IACjB,IAAI,CAAC,GAAa,GAAG,CAAC,CAAC,CAAC,CAAC;IACzB,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;IAEjB,SAAS,OAAO,CAAC,CAAS,EAAE,CAAS,EAAE,CAAS;QAC9C,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC;YACV,CAAC,IAAI,CAAC,CAAC;QACT,CAAC;aAAM,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC;YACjB,CAAC,IAAI,CAAC,CAAC;QACT,CAAC;QAED,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC;YAChB,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QAC7B,CAAC;QACD,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC;YAChB,OAAO,CAAC,CAAC;QACX,CAAC;QACD,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC;YAChB,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;QACzC,CAAC;QACD,OAAO,CAAC,CAAC;IACX,CAAC;IAED,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC;QACV,CAAC,GAAG,CAAC,CAAC;IACR,CAAC;IAED,IAAI,CAAC,CAAC;IACN,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;QACb,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IAClB,CAAC;SAAM,CAAC;QACN,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IACtB,CAAC;IAED,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAEpB,MAAM,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IACvB,MAAM,EAAE,GAAG,CAAC,CAAC;IACb,MAAM,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IAEvB,OAAO,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3E,CAAC;AAED,SAAS,OAAO,CAAC,GAAY;IAC3B,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;IACjB,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;IACjB,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;IAEjB,MAAM,UAAU,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IAC/B,IAAI,MAAM,GAAY,CAAC,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAEnE,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC;QACd,MAAM,GAAG,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACtC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC;YAC3B,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;QACvC,CAAC;IACH,CAAC;IAED,OAAO,MAAM,CAAC;AAChB,CAAC;AAED,MAAM,UAAU,SAAS,CAAC,IAAa;IACrC,OAAO,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;AAClC,CAAC;AAED,MAAM,UAAU,OAAO,CAAC,IAAa;IACnC,MAAM,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC;IAC5B,MAAM,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;IAClB,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;IAChB,MAAM,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;IAElB,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IACzB,OAAO,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AACrD,CAAC;AAED;;;GAGG;AACH,MAAM,UAAU,gBAAgB,CAAC,SAAiB,EAAE,QAAgB,EAAE,OAAgB;IACpF,SAAS,gBAAgB;QACvB,IAAI,OAAO,EAAE,CAAC;YACZ,OAAO,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,QAAQ,GAAG,IAAI,CAAC;QAC9C,CAAC;QACD,OAAO,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,QAAQ,GAAG,IAAI,CAAC;IAC9C,CAAC;IACD,IAAI,gBAAgB,GAAG,gBAAgB,EAAE,CAAC;IAC1C,IAAI,gBAAgB,GAAG,CAAC,IAAI,gBAAgB,GAAG,CAAC,EAAE,CAAC;QACjD,OAAO,GAAG,CAAC,OAAO,CAAC;QACnB,gBAAgB,GAAG,gBAAgB,EAAE,CAAC;IACxC,CAAC;IACD,OAAO,gBAAgB,CAAC;AAC1B,CAAC;AAED;;;GAGG;AACH,MAAM,UAAU,kBAAkB,CAC9B,aAAsB,EAAE,KAAa,EAAE,gBAAwB,EAC/D,kBAA6C;IAC/C,MAAM,OAAO,GAAG,MAAM,CAAC;IAEvB,IAAI,CAAC,GAAG,aAAa,CAAC,KAAK,CAAC,CAAC;IAC7B,IAAI,UAAU,GAAG,CAAC,CAAC;IACnB,IAAI,UAAU,GAAW,kBAAkB,CAAC,aAAa,CAAC,GAAG,gBAAgB,CAAC;IAC9E,IAAI,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IAEzC,KAAK,IAAI,KAAK,GAAG,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,CAAC;QACrC,IAAI,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,OAAO,EAAE,CAAC;YACnC,aAAa,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACzB,OAAO,CAAC,CAAC;QACX,CAAC;QAED,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACnC,IAAI,IAAI,KAAK,YAAY,EAAE,CAAC;YAC1B,4DAA4D;YAC5D,UAAU,IAAI,CAAC,CAAC;YAChB,YAAY,GAAG,IAAI,CAAC;QACtB,CAAC;aAAM,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC;YAC1B,iEAAiE;YACjE,4BAA4B;YAC5B,OAAO,IAAI,CAAC;QACd,CAAC;QAED,oEAAoE;QACpE,0DAA0D;QAC1D,CAAC,IAAI,UAAU,GAAG,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC;QAE3D,aAAa,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAEzB,UAAU,GAAG,kBAAkB,CAAC,aAAa,CAAC,GAAG,gBAAgB,CAAC;IACpE,CAAC;IAED,OAAO,IAAI,CAAC;AACd,CAAC;AAED,MAAM,UAAU,sBAAsB,CAAC,OAAe,EAAE,OAAe,EAAE,gBAAwB;IAC/F,MAAM,aAAa,GAAG,OAAO,CAAC,EAAE,wBAAY,CAAC,IAAI,EAAE,CAAC;IACpD,MAAM,MAAM,GAAG,OAAO,CAAC,IAAI,EAAE,CAAC;IAE9B,MAAM,kBAAkB,GAAG,CAAC,aAAsB,EAAU,EAAE;QAC5D,OAAO,SAAS,CAAC,WAAW,CAAC,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,IAAI,EAAE,EAAE,MAAM,CAAC,CAAC,CAAC;IAC/E,CAAC,CAAC;IAEF,MAAM,WAAW,GAAG,SAAS,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC;IAC9C,MAAM,WAAW,GAAG,kBAAkB,CAAC,aAAa,CAAC,CAAC;IACtD,MAAM,WAAW,GAAG,WAAW,GAAG,WAAW,CAAC;IAE9C,MAAM,OAAO,GAAG,gBAAgB,CAAC,WAAW,EAAE,gBAAgB,EAAE,WAAW,CAAC,CAAC;IAE7E,MAAM,wBAAwB,GAAG,CAAC,CAAC;IACnC,MAAM,mBAAmB,GAAG,CAAC,CAAC;IAE9B,IAAI,kBAAkB,CAAC,aAAa,EAAE,mBAAmB,EAAE,OAAO,EAAE,kBAAkB,CAAC,EAAE,CAAC;QACxF,OAAO,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;IACxC,CAAC;IAED,aAAa,CAAC,mBAAmB,CAAC,GAAG,CAAC,CAAC;IACvC,IAAI,kBAAkB,CAAC,aAAa,EAAE,wBAAwB,EAAE,OAAO,EAAE,kBAAkB,CAAC,EAAE,CAAC;QAC7F,OAAO,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;IACxC,CAAC;IAED,OAAO,IAAI,CAAC;AACd,CAAC;AAED,MAAM,UAAU,0BAA0B,CAAC,OAAe,EAAE,OAAe,EAAE,gBAAwB;IACnG,MAAM,aAAa,GAAG,OAAO,CAAC,EAAE,wBAAY,CAAC,IAAI,EAAE,CAAC;IAEpD,MAAM,kBAAkB,GAAG,CAAC,aAAsB,EAAU,EAAE;QAC5D,OAAO,aAAa,CAAC,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC;IAC9D,CAAC,CAAC;IAEF,MAAM,WAAW,GAAG,aAAa,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC;IAClD,MAAM,WAAW,GAAG,kBAAkB,CAAC,aAAa,CAAC,CAAC;IACtD,MAAM,WAAW,GAAG,WAAW,IAAI,WAAW,CAAC;IAC/C,MAAM,gBAAgB,GAAG,oBAAoB,CAAC,WAAW,EAAE,gBAAgB,EAAE,WAAW,CAAC,CAAC;IAE1F,MAAM,wBAAwB,GAAG,CAAC,CAAC;IACnC,MAAM,mBAAmB,GAAG,CAAC,CAAC;IAE9B,IAAI,kBAAkB,CAAC,aAAa,EAAE,mBAAmB,EAAE,gBAAgB,EAAE,kBAAkB,CAAC,EAAE,CAAC;QACjG,MAAM,SAAS,GAAG,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;QACjD,IAAI,IAAI,CAAC,GAAG,CAAC,iBAAiB,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,SAAS,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,gBAAgB,EAAE,CAAC;YACtF,OAAO,SAAS,CAAC;QACnB,CAAC;IACH,CAAC;IAED,aAAa,CAAC,mBAAmB,CAAC,GAAG,CAAC,CAAC;IACvC,IAAI,kBAAkB,CAAC,aAAa,EAAE,wBAAwB,EAAE,gBAAgB,EAAE,kBAAkB,CAAC,EAAE,CAAC;QACtG,MAAM,SAAS,GAAG,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;QACjD,IAAI,IAAI,CAAC,GAAG,CAAC,iBAAiB,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,SAAS,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,gBAAgB,EAAE,CAAC;YACtF,OAAO,SAAS,CAAC;QACnB,CAAC;IACH,CAAC;IAED,OAAO,IAAI,CAAC;AACd,CAAC;AAoDD,MAAM,OAAO,GAAG,IAAI,CAAC;AACrB,MAAM,kBAAkB,GAAG,CAAC,CAAC,CAAE,4DAA4D;AAG3F,SAAS,MAAM,CAAC,CAAuB,EAAE,CAAuB,EAAE,QAAQ,GAAG,OAAO;IAClF,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC;QACzC,IAAI,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,MAAM,EAAE,CAAC;YAC1B,OAAO,KAAK,CAAC;QACf,CAAC;QACD,KAAK,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC;YAClB,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;gBACxB,OAAO,KAAK,CAAC;YACf,CAAC;QACH,CAAC;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IACD,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC;QACzC,OAAO,KAAK,CAAC;IACf,CAAC;IACD,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC;QAC7B,OAAO,CAAC,KAAK,CAAC,CAAC;IACjB,CAAC;IACD,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC;AACpC,CAAC;AACD,SAAS,YAAY,CAAC,CAAS,EAAE,CAAS,EAAE,QAAQ,GAAG,OAAO;IAC5D,OAAO,CAAC,GAAG,CAAC,IAAI,QAAQ,CAAC;AAC3B,CAAC;AA0BD,MAAM,OAAO,GAAG;IACL,CAAC,CAAS;IACV,CAAC,CAAS;IACV,CAAC,CAAS;IACV,KAAK,CAAc;IACnB,aAAa,CAAU;IACvB,UAAU,CAAU;IACpB,QAAQ,GACb,gHAAoE,CAAC;IAEzE,MAAM,CAAU,YAAY,GAA0B;QACpD,wBAAY,EAAE,CAAC,IAAS,EAAE,EAAE,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,KAAK,CAAC,yBAAa;QAC9F,0BAAa,EAAE,CAAC,IAAS,EAAE,EAAE,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,IAAI,CAAC,2BAAc;QAC/F,wBAAY,EAAE,CAAC,IAAS,EAAE,EAAE,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,KAAK,CAAC,yBAAa;QAC9F,0BAAa,EAAE,CAAC,IAAS,EAAE,EAAE,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,IAAI,CAAC,2BAAc;QAC/F,wBAAY,EAAE,CAAC,IAAS,EAAE,EAAE,CAAC,IAAI,GAAG,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QACxG,0BAAa,EAAE,CAAC,IAAS,EAAE,EAAE,CAAC,IAAI,GAAG,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QACzG,wBAAY,EAAE,CAAC,IAAS,EAAE,EAAE,CAAC,IAAI,GAAG,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QACxG,0BAAa,EAAE,CAAC,IAAS,EAAE,EAAE,CAAC,IAAI,GAAG,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QACzG,wBAAY,EAAE,CAAC,IAAS,EAAE,EAAE,CAAC,IAAI,GAAG,CAAC,GAAG,cAAc,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QACpG,4BAAc,EAAE,CAAC,IAAS,EAAE,EAAE,CAAC,IAAI,KAAK,CAAC,GAAG,cAAc,CAAC,aAAa,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QAC1G,wBAAY,EAAE,CAAC,IAAS,EAAE,EAAE,CAAC,IAAI;QACjC,4BAAc,EAAE,CAAC,IAAS,EAAE,EAAE,CAC1B,IAAI,KAAK,CAAC,GAAG,cAAc,CAAC,aAAa,CAAC,GAAG,cAAc,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QAE9G,0BAAa,EAAE,CAAC,IAAS,EAAE,EAAE,CACzB,IAAI,aAAa,2BAAc,GAAG,cAAc,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QACnG,wCAAoB,EAAE,CAAC,IAAS,EAAE,EAAE,CAChC,IAAI,aAAa,yCAAqB,GAAG,cAAc,CAAC,kBAAkB,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QAChH,sCAAmB,EAAE,CAAC,IAAS,EAAE,EAAE,CAC/B,IAAI,aAAa,uCAAoB,GAAG,cAAc,CAAC,iBAAiB,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QAC9G,gCAAgB,EAAE,CAAC,IAAS,EAAE,EAAE,CAC5B,IAAI,aAAa,iCAAiB,GAAG,cAAc,CAAC,gBAAgB,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QAC1G,0CAAqB,EAAE,CAAC,IAAS,EAAE,EAAE,CACjC,IAAI,aAAa,2CAAsB,GAAG,cAAc,CAAC,gBAAgB,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QAC/G,iCAAiB,EAAE,CAAC,IAAS,EAAE,EAAE,CAC7B,IAAI,aAAa,kCAAkB,GAAG,cAAc,CAAC,eAAe,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QAC1G,wBAAY,EAAE,CAAC,IAAS,EAAE,EAAE,CACxB,IAAI,aAAa,yBAAa,GAAG,cAAc,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QACjG,gCAAgB,EAAE,CAAC,IAAS,EAAE,EAAE,CAAC,IAAI,aAAa,iCAAiB,GAAG,IAAI,CAAC,SAAS,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC;QACnG,gCAAgB,EAAE,CAAC,IAAS,EAAE,EAAE,CAC5B,IAAI,aAAa,iCAAiB,GAAG,cAAc,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;KACtG,CAAC;IAEF,SAAS;QACP,OAAO,cAAc,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IAC5D,CAAC;IAID,YAAY,CAAC,SAAS,GAAG,IAAI;QAC3B,MAAM,MAAM,GAAG,cAAc,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;QAChE,IAAI,SAAS,EAAE,CAAC;YACd,OAAO,CAAC,GAAG,MAAM,EAAE,IAAI,CAAC,KAAK,IAAI,SAAS,CAAC,CAAC;QAC9C,CAAC;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,YAAY,CAAS,EAAE,CAAS,EAAE,CAAS,EAAE,KAAkB,EAAE,YAA+B;QAC9F,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAC5B,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,EAAC,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAC,CAAC,CAAC;QACtC,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,kBAAkB,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,GAAG,EAAE,kBAAkB,CAAC,EAAE,CAAC;YACrF,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACZ,CAAC;QACD,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,EAAE,EAAC,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAC,CAAC,CAAC;QAC5C,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;IACpC,CAAC;IACD,EAAE,CAAmB,MAAS;QAC5B,OAAO,MAAM,KAAK,IAAI,CAAC,MAAM,EAAE,CAAC;IAClC,CAAC;IACD,EAAE,CAAmB,MAAS;QAC5B,OAAO,GAAG,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,IAAI,CAAoC,CAAC;IAC3E,CAAC;IACD,aAAa;QACX,OAAO,IAAI,CAAC,EAAE,0BAAa,CAAC;IAC9B,CAAC;IACD,KAAK,CAAC,KAAY;QAChB,MAAM,GAAG,GAAG,KAAK,CAAC,EAAE,wBAAY,CAAC;QACjC,OAAO,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,kBAAkB,CAAC,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;YAC9F,MAAM,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;IACpC,CAAC;IACD,MAAM;QACJ,8BAAkB;IACpB,CAAC;IACD,QAAQ,CAAC,KAAa;QACpB,OAAO,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,KAAK,EAAE,SAAS,CAAC,CAAC;IAC3D,CAAC;IACD,QAAQ,CAAC,MAAe;QACtB,IAAI,MAAM,EAAE,CAAC;YACX,OAAO,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,QAAQ,EAAE,CAAC;QACpC,CAAC;QACD,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IACjD,CAAC;IACD,UAAU,CAAC,CAAS,EAAE,CAAS,EAAE,CAAS;QACxC,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,KAAK,IAAI,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC;YACxD,EAAE,CAAC,CAAC;YACJ,MAAM,QAAQ,CAAC,eAAe,CAAC,sBAAsB,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC;QACxE,OAAO,OAAO,QAAQ,CAAC,eAAe,CAAC,sBAAsB,CAAC,CAAC,EAAE,CAAC,CAAC,IAC/D,QAAQ,CAAC,eAAe,CAAC,sBAAsB,CAC3C,CAAC,CAAC,IAAI,QAAQ,CAAC,eAAe,CAAC,sBAAsB,CAAC,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC;IAC9E,CAAC;IACD,eAAe;QACb,OAAO,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC;IACpC,CAAC;IAED,gBAAgB;QACd,OAAO,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;IAC9B,CAAC;IACD,cAAc,CAAC,MAAe;QAC5B,IAAI,MAAM,EAAE,CAAC;YACX,OAAO,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,cAAc,EAAE,CAAC;QAC1C,CAAC;QACD,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;IAC7C,CAAC;IACD,cAAc;QACZ,OAAO,KAAK,CAAC;IACf,CAAC;IAED,MAAM,CAAC,QAAQ,CAAC,IAAwB,EAAE,IAAY;QACpD,MAAM,CAAC,GAAG,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,IAAI,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QACrE,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC;YACf,OAAO,IAAI,CAAC;QACd,CAAC;QACD,MAAM,CAAC,GAAG,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,IAAI,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QACrE,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC;YACf,OAAO,IAAI,CAAC;QACd,CAAC;QACD,MAAM,CAAC,GAAG,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,IAAI,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QACrE,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC;YACf,OAAO,IAAI,CAAC;QACd,CAAC;QACD,MAAM,KAAK,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QAElC,OAAO,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;IACvC,CAAC;;AAGH,MAAM,OAAO,GAAG;IACL,UAAU,CAAU;IACpB,CAAC,CAAS;IACV,CAAC,CAAS;IACV,CAAC,CAAS;IACV,KAAK,CAAc;IACnB,aAAa,CAAU;IACvB,QAAQ,GACb,gHAAoE,CAAC;IAEzE,MAAM,CAAU,YAAY,GAA0B;QACpD,wBAAY,EAAE,CAAC,IAAS,EAAE,EAAE,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,KAAK,CAAC,yBAAa;QAC9F,0BAAa,EAAE,CAAC,IAAS,EAAE,EAAE,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,IAAI,CAAC,2BAAc;QAC/F,wBAAY,EAAE,CAAC,IAAS,EAAE,EAAE,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,KAAK,CAAC,yBAAa;QAC9F,0BAAa,EAAE,CAAC,IAAS,EAAE,EAAE,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,IAAI,CAAC,2BAAc;QAC/F,wBAAY,EAAE,CAAC,IAAS,EAAE,EAAE,CAAC,IAAI,GAAG,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QACxG,0BAAa,EAAE,CAAC,IAAS,EAAE,EAAE,CAAC,IAAI,GAAG,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QACzG,wBAAY,EAAE,CAAC,IAAS,EAAE,EAAE,CAAC,IAAI,GAAG,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QACxG,0BAAa,EAAE,CAAC,IAAS,EAAE,EAAE,CAAC,IAAI,GAAG,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QACzG,wBAAY,EAAE,CAAC,IAAS,EAAE,EAAE,CAAC,IAAI;QACjC,4BAAc,EAAE,CAAC,IAAS,EAAE,EAAE,CAAC,IAAI,KAAK,CAAC,GAAG,cAAc,CAAC,aAAa,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QAC1G,wBAAY,EAAE,CAAC,IAAS,EAAE,EAAE,CAAC,IAAI,GAAG,CAAC,GAAG,cAAc,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QACpG,4BAAc,EAAE,CAAC,IAAS,EAAE,EAAE,CAC1B,IAAI,KAAK,CAAC,GAAG,cAAc,CAAC,aAAa,CAAC,GAAG,cAAc,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QAE9G,0BAAa,EAAE,CAAC,IAAS,EAAE,EAAE,CACzB,IAAI,aAAa,2BAAc,GAAG,cAAc,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QACnG,wCAAoB,EAAE,CAAC,IAAS,EAAE,EAAE,CAChC,IAAI,aAAa,yCAAqB,GAAG,cAAc,CAAC,kBAAkB,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QAChH,sCAAmB,EAAE,CAAC,IAAS,EAAE,EAAE,CAC/B,IAAI,aAAa,uCAAoB,GAAG,cAAc,CAAC,iBAAiB,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QAC9G,gCAAgB,EAAE,CAAC,IAAS,EAAE,EAAE,CAC5B,IAAI,aAAa,iCAAiB,GAAG,cAAc,CAAC,gBAAgB,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QAC1G,0CAAqB,EAAE,CAAC,IAAS,EAAE,EAAE,CACjC,IAAI,aAAa,2CAAsB,GAAG,cAAc,CAAC,gBAAgB,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QAC/G,iCAAiB,EAAE,CAAC,IAAS,EAAE,EAAE,CAC7B,IAAI,aAAa,kCAAkB,GAAG,cAAc,CAAC,eAAe,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QAC1G,wBAAY,EAAE,CAAC,IAAS,EAAE,EAAE,CACxB,IAAI,aAAa,yBAAa,GAAG,cAAc,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QACjG,gCAAgB,EAAE,CAAC,IAAS,EAAE,EAAE,CAAC,IAAI,aAAa,iCAAiB,GAAG,IAAI,CAAC,SAAS,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC;QACnG,gCAAgB,EAAE,CAAC,IAAS,EAAE,EAAE,CAC5B,IAAI,aAAa,iCAAiB,GAAG,cAAc,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;KACtG,CAAC;IAEF,SAAS;QACP,OAAO,cAAc,CAAC,WAAW,CAAC,GAAG,cAAc,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACxF,CAAC;IAID,YAAY,CAAC,SAAS,GAAG,IAAI;QAC3B,MAAM,MAAM,GAAG,cAAc,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;QAChE,IAAI,SAAS,EAAE,CAAC;YACd,OAAO,CAAC,GAAG,MAAM,EAAE,IAAI,CAAC,KAAK,IAAI,SAAS,CAAC,CAAC;QAC9C,CAAC;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,YAAY,CAAS,EAAE,CAAS,EAAE,CAAS,EAAE,KAAkB,EAAE,YAA+B;QAC9F,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAC5B,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,EAAC,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAC,CAAC,CAAC;QACtC,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,kBAAkB,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,GAAG,EAAE,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7F,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,EAAC,GAAG,EAAE,CAAC,EAAC,CAAC,CAAC;QAC5B,CAAC,GAAG,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACzB,IAAI,CAAC,CAAC,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;QACzB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,EAAE,EAAC,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAC,CAAC,CAAC;QAC5C,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;IACpC,CAAC;IACD,aAAa;QACX,OAAO,IAAI,CAAC,EAAE,0BAAa,CAAC;IAC9B,CAAC;IACD,EAAE,CAAmB,MAAS;QAC5B,OAAO,MAAM,KAAK,IAAI,CAAC,MAAM,EAAE,CAAC;IAClC,CAAC;IACD,EAAE,CAAmB,MAAS;QAC5B,OAAO,GAAG,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,IAAI,CAAoC,CAAC;IAC3E,CAAC;IACD,KAAK,CAAC,KAAY;QAChB,MAAM,GAAG,GAAG,KAAK,CAAC,EAAE,wBAAY,CAAC;QACjC,OAAO,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,kBAAkB,CAAC,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;YAC9F,MAAM,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;IACpC,CAAC;IACD,MAAM;QACJ,8BAAkB;IACpB,CAAC;IACD,QAAQ,CAAC,KAAa;QACpB,OAAO,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IAChD,CAAC;IACD,QAAQ,CAAC,MAAe;QACtB,IAAI,MAAM,EAAE,CAAC;YACX,OAAO,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,QAAQ,EAAE,CAAC;QACpC,CAAC;QACD,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IACjD,CAAC;IACD,UAAU,CAAC,CAAS,EAAE,CAAS,EAAE,CAAS;QACxC,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,KAAK,IAAI,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC;YACxD,EAAE,CAAC,CAAC;YACJ,MAAM,QAAQ,CAAC,eAAe,CAAC,sBAAsB,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC;QACxE,OAAO,OAAO,QAAQ,CAAC,eAAe,CAAC,sBAAsB,CAAC,CAAC,EAAE,CAAC,CAAC,IAC/D,QAAQ,CAAC,eAAe,CAAC,sBAAsB,CAC3C,CAAC,CAAC,IAAI,QAAQ,CAAC,eAAe,CAAC,sBAAsB,CAAC,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC;IAC9E,CAAC;IACD,eAAe;QACb,OAAO,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC;IACpC,CAAC;IAED,gBAAgB;QACd,OAAO,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;IAC9B,CAAC;IACD,cAAc,CAAC,MAAe;QAC5B,IAAI,MAAM,EAAE,CAAC;YACX,OAAO,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,cAAc,EAAE,CAAC;QAC1C,CAAC;QACD,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;IAC7C,CAAC;IACD,cAAc;QACZ,OAAO,KAAK,CAAC;IACf,CAAC;IACD,2CAA2C;IAC3C,wDAAwD;IACxD,cAAc;QACZ,OAAO,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3B,CAAC;IACD,MAAM,CAAC,QAAQ,CAAC,IAAwB,EAAE,IAAY;QACpD,MAAM,CAAC,GAAG,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,IAAI,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QACrE,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC;YACf,OAAO,IAAI,CAAC;QACd,CAAC;QACD,MAAM,CAAC,GAAG,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,IAAI,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QACrE,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC;YACf,OAAO,IAAI,CAAC;QACd,CAAC;QACD,MAAM,CAAC,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QAC9B,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC;YACf,OAAO,IAAI,CAAC;QACd,CAAC;QACD,MAAM,KAAK,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QAElC,OAAO,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;IACvC,CAAC;;AAGH,MAAM,OAAO,KAAK;IACP,UAAU,CAAU;IACpB,CAAC,CAAS;IACV,CAAC,CAAS;IACV,CAAC,CAAS;IACV,KAAK,CAAc;IACnB,aAAa,CAAU;IACvB,QAAQ,GACb,gHAAoE,CAAC;IAEzE,MAAM,CAAU,YAAY,GAA4B;QACtD,wBAAY,EAAE,CAAC,IAAW,EAAE,EAAE,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,KAAK,CAAC,yBAAa;QAChG,0BAAa,EAAE,CAAC,IAAW,EAAE,EAAE,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,IAAI,CAAC,2BAAc;QACjG,wBAAY,EAAE,CAAC,IAAW,EAAE,EAAE,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,KAAK,CAAC,yBAAa;QAChG,0BAAa,EAAE,CAAC,IAAW,EAAE,EAAE,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,IAAI,CAAC,2BAAc;QACjG,wBAAY,EAAE,CAAC,IAAW,EAAE,EAAE,CAAC,IAAI,GAAG,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QAC1G,0BAAa,EAAE,CAAC,IAAW,EAAE,EAAE,CAAC,IAAI,GAAG,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QAC3G,wBAAY,EAAE,CAAC,IAAW,EAAE,EAAE,CAAC,IAAI,GAAG,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QAC1G,0BAAa,EAAE,CAAC,IAAW,EAAE,EAAE,CAAC,IAAI,GAAG,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QAC3G,wBAAY,EAAE,CAAC,IAAW,EAAE,EAAE,CAC1B,IAAI,GAAG,CAAC,GAAG,cAAc,CAAC,QAAQ,CAAC,GAAG,cAAc,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QACvG,4BAAc,EAAE,CAAC,IAAW,EAAE,EAAE,CAAC,IAAI,KAAK,CAAC,GAAG,cAAc,CAAC,aAAa,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QAC5G,wBAAY,EAAE,CAAC,IAAW,EAAE,EAAE,CAAC,IAAI,GAAG,CAAC,GAAG,cAAc,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QACtG,4BAAc,EAAE,CAAC,IAAW,EAAE,EAAE,CAAC,IAAI;QAErC,0BAAa,EAAE,CAAC,IAAW,EAAE,EAAE,CAC3B,IAAI,aAAa,2BAAc,GAAG,cAAc,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QACnG,wCAAoB,EAAE,CAAC,IAAW,EAAE,EAAE,CAClC,IAAI,aAAa,yCAAqB,GAAG,cAAc,CAAC,kBAAkB,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QAChH,sCAAmB,EAAE,CAAC,IAAW,EAAE,EAAE,CACjC,IAAI,aAAa,uCAAoB,GAAG,cAAc,CAAC,iBAAiB,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QAC9G,gCAAgB,EAAE,CAAC,IAAW,EAAE,EAAE,CAC9B,IAAI,aAAa,iCAAiB,GAAG,cAAc,CAAC,gBAAgB,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QAC1G,0CAAqB,EAAE,CAAC,IAAW,EAAE,EAAE,CACnC,IAAI,aAAa,2CAAsB,GAAG,cAAc,CAAC,gBAAgB,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QAC/G,iCAAiB,EAAE,CAAC,IAAW,EAAE,EAAE,CAC/B,IAAI,aAAa,kCAAkB,GAAG,cAAc,CAAC,eAAe,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QAC1G,wBAAY,EAAE,CAAC,IAAW,EAAE,EAAE,CAC1B,IAAI,aAAa,yBAAa,GAAG,cAAc,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QACjG,gCAAgB,EAAE,CAAC,IAAW,EAAE,EAAE,CAAC,IAAI,aAAa,iCAAiB,GAAG,IAAI,CAAC,SAAS,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC;QACrG,gCAAgB,EAAE,CAAC,IAAW,EAAE,EAAE,CAC9B,IAAI,aAAa,iCAAiB,GAAG,cAAc,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;KACtG,CAAC;IAEF,SAAS;QACP,OAAO,cAAc,CAAC,WAAW,CAAC,GAAG,cAAc,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7F,CAAC;IAID,YAAY,CAAC,SAAS,GAAG,IAAI;QAC3B,MAAM,MAAM,GAAG,cAAc,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;QAChE,IAAI,SAAS,EAAE,CAAC;YACd,OAAO,CAAC,GAAG,MAAM,EAAE,IAAI,CAAC,KAAK,IAAI,SAAS,CAAC,CAAC;QAC9C,CAAC;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,YAAY,CAAS,EAAE,CAAS,EAAE,CAAS,EAAE,KAAkB,EAAE,YAA+B;QAC9F,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAC5B,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,EAAC,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAC,CAAC,CAAC;QACpC,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC;YAC3C,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACZ,CAAC;QACD,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,EAAE,EAAC,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAC,CAAC,CAAC;QAC5C,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;IACpC,CAAC;IACD,aAAa;QACX,OAAO,IAAI,CAAC,EAAE,0BAAa,CAAC;IAC9B,CAAC;IACD,EAAE,CAAmB,MAAS;QAC5B,OAAO,MAAM,KAAK,IAAI,CAAC,MAAM,EAAE,CAAC;IAClC,CAAC;IACD,EAAE,CAAmB,MAAS;QAC5B,OAAO,KAAK,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,IAAI,CAAoC,CAAC;IAC7E,CAAC;IACD,KAAK,CAAC,KAAY;QAChB,MAAM,KAAK,GAAG,KAAK,CAAC,EAAE,4BAAc,CAAC;QACrC,OAAO,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;YAChF,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;IACtC,CAAC;IACD,MAAM;QACJ,kCAAoB;IACtB,CAAC;IACD,QAAQ,CAAC,KAAa;QACpB,OAAO,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IAClD,CAAC;IACD,QAAQ,CAAC,MAAe;QACtB,IAAI,MAAM,EAAE,CAAC;YACX,OAAO,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,QAAQ,EAAE,CAAC;QACpC,CAAC;QACD,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IACjD,CAAC;IACD,UAAU,CAAC,CAAS,EAAE,CAAS,EAAE,CAAS;QACxC,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,KAAK,IAAI,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC;YACxD,EAAE,CAAC,CAAC;YACJ,MAAM,QAAQ,CAAC,eAAe,CAAC,sBAAsB,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC;QACxE,OAAO,SAAS,QAAQ,CAAC,eAAe,CAAC,sBAAsB,CAAC,CAAC,CAAC,IAC9D,QAAQ,CAAC,eAAe,CAAC,sBAAsB,CAC3C,CAAC,CAAC,IAAI,QAAQ,CAAC,eAAe,CAAC,sBAAsB,CAAC,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC;IAC9E,CAAC;IACD,eAAe;QACb,OAAO,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC;IACpC,CAAC;IAED,gBAAgB;QACd,OAAO,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;IAC9B,CAAC;IACD,cAAc,CAAC,MAAe;QAC5B,IAAI,MAAM,EAAE,CAAC;YACX,OAAO,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,cAAc,EAAE,CAAC;QAC1C,CAAC;QACD,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;IAC7C,CAAC;IACD,cAAc;QACZ,OAAO,KAAK,CAAC;IACf,CAAC;IAED,MAAM,CAAC,QAAQ,CAAC,IAAwB,EAAE,IAAY;QACpD,MAAM,CAAC,GAAG,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QACnE,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC;YACf,OAAO,IAAI,CAAC;QACd,CAAC;QACD,MAAM,CAAC,GAAG,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,IAAI,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QACrE,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC;YACf,OAAO,IAAI,CAAC;QACd,CAAC;QACD,MAAM,CAAC,GAAG,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,IAAI,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QACrE,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC;YACf,OAAO,IAAI,CAAC;QACd,CAAC;QACD,MAAM,KAAK,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QAElC,OAAO,IAAI,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;IACzC,CAAC;;AAGH,MAAM,OAAO,KAAK;IACP,UAAU,CAAU;IACpB,CAAC,CAAS;IACV,CAAC,CAAS;IACV,CAAC,CAAS;IACV,KAAK,CAAc;IACnB,aAAa,CAAU;IACvB,QAAQ,GACb,gHAAoE,CAAC;IAEzE,MAAM,CAAU,YAAY,GAA4B;QACtD,wBAAY,EAAE,CAAC,IAAW,EAAE,EAAE,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,KAAK,CAAC,yBAAa;QAChG,0BAAa,EAAE,CAAC,IAAW,EAAE,EAAE,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,IAAI,CAAC,2BAAc;QACjG,wBAAY,EAAE,CAAC,IAAW,EAAE,EAAE,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,KAAK,CAAC,yBAAa;QAChG,0BAAa,EAAE,CAAC,IAAW,EAAE,EAAE,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,IAAI,CAAC,2BAAc;QACjG,wBAAY,EAAE,CAAC,IAAW,EAAE,EAAE,CAAC,IAAI,GAAG,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QAC1G,0BAAa,EAAE,CAAC,IAAW,EAAE,EAAE,CAAC,IAAI,GAAG,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QAC3G,wBAAY,EAAE,CAAC,IAAW,EAAE,EAAE,CAAC,IAAI,GAAG,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QAC1G,0BAAa,EAAE,CAAC,IAAW,EAAE,EAAE,CAAC,IAAI,GAAG,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QAC3G,wBAAY,EAAE,CAAC,IAAW,EAAE,EAAE,CAC1B,IAAI,GAAG,CAAC,GAAG,cAAc,CAAC,QAAQ,CAAC,GAAG,cAAc,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QACvG,4BAAc,EAAE,CAAC,IAAW,EAAE,EAAE,CAAC,IAAI;QACrC,wBAAY,EAAE,CAAC,IAAW,EAAE,EAAE,CAAC,IAAI,GAAG,CAAC,GAAG,cAAc,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QACtG,4BAAc,EAAE,CAAC,IAAW,EAAE,EAAE,CAC5B,IAAI,KAAK,CAAC,GAAG,cAAc,CAAC,aAAa,CAAC,GAAG,cAAc,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QAC9G,0BAAa,EAAE,CAAC,IAAW,EAAE,EAAE,CAC3B,IAAI,aAAa,2BAAc,GAAG,cAAc,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QACnG,wCAAoB,EAAE,CAAC,IAAW,EAAE,EAAE,CAClC,IAAI,aAAa,yCAAqB,GAAG,cAAc,CAAC,kBAAkB,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QAChH,sCAAmB,EAAE,CAAC,IAAW,EAAE,EAAE,CACjC,IAAI,aAAa,uCAAoB,GAAG,cAAc,CAAC,iBAAiB,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QAC9G,gCAAgB,EAAE,CAAC,IAAW,EAAE,EAAE,CAC9B,IAAI,aAAa,iCAAiB,GAAG,cAAc,CAAC,gBAAgB,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QAC1G,0CAAqB,EAAE,CAAC,IAAW,EAAE,EAAE,CACnC,IAAI,aAAa,2CAAsB,GAAG,cAAc,CAAC,gBAAgB,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QAC/G,iCAAiB,EAAE,CAAC,IAAW,EAAE,EAAE,CAC/B,IAAI,aAAa,kCAAkB,GAAG,cAAc,CAAC,eAAe,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QAC1G,wBAAY,EAAE,CAAC,IAAW,EAAE,EAAE,CAC1B,IAAI,aAAa,yBAAa,GAAG,cAAc,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QACjG,gCAAgB,EAAE,CAAC,IAAW,EAAE,EAAE,CAAC,IAAI,aAAa,iCAAiB,GAAG,IAAI,CAAC,SAAS,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC;QACrG,gCAAgB,EAAE,CAAC,IAAW,EAAE,EAAE,CAC9B,IAAI,aAAa,iCAAiB,GAAG,cAAc,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;KACtG,CAAC;IAEF,SAAS;QACP,OAAO,cAAc,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IAC9D,CAAC;IAID,YAAY,CAAC,SAAS,GAAG,IAAI;QAC3B,MAAM,MAAM,GAAG,cAAc,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;QAChE,IAAI,SAAS,EAAE,CAAC;YACd,OAAO,CAAC,GAAG,MAAM,EAAE,IAAI,CAAC,KAAK,IAAI,SAAS,CAAC,CAAC;QAC9C,CAAC;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,YAAY,CAAS,EAAE,CAAS,EAAE,CAAS,EAAE,KAAkB,EAAE,YAA+B;QAC9F,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAC5B,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,EAAC,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAC,CAAC,CAAC;QACpC,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACnD,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,EAAC,GAAG,EAAE,CAAC,EAAC,CAAC,CAAC;QAC5B,CAAC,GAAG,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACzB,IAAI,CAAC,CAAC,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;QACzB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,EAAE,EAAC,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAC,CAAC,CAAC;QAC5C,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;IACpC,CAAC;IACD,aAAa;QACX,OAAO,IAAI,CAAC,EAAE,0BAAa,CAAC;IAC9B,CAAC;IACD,EAAE,CAAmB,MAAS;QAC5B,OAAO,MAAM,KAAK,IAAI,CAAC,MAAM,EAAE,CAAC;IAClC,CAAC;IACD,EAAE,CAAmB,MAAS;QAC5B,OAAO,KAAK,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,IAAI,CAAoC,CAAC;IAC7E,CAAC;IACD,KAAK,CAAC,KAAY;QAChB,MAAM,KAAK,GAAG,KAAK,CAAC,EAAE,4BAAc,CAAC;QACrC,OAAO,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;YAChF,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;IACtC,CAAC;IACD,MAAM;QACJ,kCAAoB;IACtB,CAAC;IACD,QAAQ,CAAC,KAAa;QACpB,OAAO,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IAClD,CAAC;IACD,QAAQ,CAAC,MAAe;QACtB,IAAI,MAAM,EAAE,CAAC;YACX,OAAO,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,QAAQ,EAAE,CAAC;QACpC,CAAC;QACD,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IACjD,CAAC;IACD,UAAU,CAAC,CAAS,EAAE,CAAS,EAAE,CAAS;QACxC,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,KAAK,IAAI,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC;YACxD,EAAE,CAAC,CAAC;YACJ,MAAM,QAAQ,CAAC,eAAe,CAAC,sBAAsB,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC;QACxE,OAAO,SAAS,QAAQ,CAAC,eAAe,CAAC,sBAAsB,CAAC,CAAC,CAAC,IAC9D,QAAQ,CAAC,eAAe,CAAC,sBAAsB,CAC3C,CAAC,CAAC,IAAI,QAAQ,CAAC,eAAe,CAAC,sBAAsB,CAAC,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC;IAC9E,CAAC;IACD,eAAe;QACb,OAAO,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC;IACpC,CAAC;IAED,gBAAgB;QACd,OAAO,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;IAC9B,CAAC;IACD,cAAc,CAAC,MAAe;QAC5B,IAAI,MAAM,EAAE,CAAC;YACX,OAAO,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,cAAc,EAAE,CAAC;QAC1C,CAAC;QACD,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;IAC7C,CAAC;IACD,cAAc;QACZ,OAAO,KAAK,CAAC;IACf,CAAC;IAED,MAAM,CAAC,QAAQ,CAAC,IAAwB,EAAE,IAAY;QACpD,MAAM,CAAC,GAAG,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QACnE,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC;YACf,OAAO,IAAI,CAAC;QACd,CAAC;QACD,MAAM,CAAC,GAAG,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,IAAI,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QACrE,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC;YACf,OAAO,IAAI,CAAC;QACd,CAAC;QACD,MAAM,CAAC,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QAC9B,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC;YACf,OAAO,IAAI,CAAC;QACd,CAAC;QACD,MAAM,KAAK,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QAElC,OAAO,IAAI,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;IACzC,CAAC;;AAGH,MAAM,OAAO,aAAa;IACf,UAAU,CAAU;IACpB,EAAE,CAAS;IACX,EAAE,CAAS;IACX,EAAE,CAAS;IACX,KAAK,CAAc;IACnB,UAAU,CAAa;IACvB,aAAa,CAAU;IAChC,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,gHAAoE,CAAC,CAAC;YACtE,gHAAoE,CAAC;IAC7F,CAAC;IAED,MAAM,CAAU,YAAY,GAAoC;QAC9D,wBAAY,EAAE,CAAC,IAAmB,EAAE,EAAE,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,KAAK,CAAC,yBAAa;QACxG,0BAAa,EAAE,CAAC,IAAmB,EAAE,EAAE,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,IAAI,CAAC,2BAAc;QACzG,wBAAY,EAAE,CAAC,IAAmB,EAAE,EAAE,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,KAAK,CAAC,yBAAa;QACxG,0BAAa,EAAE,CAAC,IAAmB,EAAE,EAAE,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,IAAI,CAAC,2BAAc;QACzG,wBAAY,EAAE,CAAC,IAAmB,EAAE,EAAE,CAAC,IAAI,GAAG,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QAClH,0BAAa,EAAE,CAAC,IAAmB,EAAE,EAAE,CAAC,IAAI,GAAG,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QACnH,wBAAY,EAAE,CAAC,IAAmB,EAAE,EAAE,CAAC,IAAI,GAAG,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QAClH,0BAAa,EAAE,CAAC,IAAmB,EAAE,EAAE,CAAC,IAAI,GAAG,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QACnH,wBAAY,EAAE,CAAC,IAAmB,EAAE,EAAE,CAClC,IAAI,GAAG,CAAC,GAAG,cAAc,CAAC,QAAQ,CAAC,GAAG,cAAc,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QACvG,4BAAc,EAAE,CAAC,IAAmB,EAAE,EAAE,CACpC,IAAI,KAAK,CAAC,GAAG,cAAc,CAAC,aAAa,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QAC/E,wBAAY,EAAE,CAAC,IAAmB,EAAE,EAAE,CAAC,IAAI,GAAG,CAAC,GAAG,cAAc,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QAC9G,4BAAc,EAAE,CAAC,IAAmB,EAAE,EAAE,CACpC,IAAI,KAAK,CAAC,GAAG,cAAc,CAAC,aAAa,CAAC,GAAG,cAAc,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QAE9G,0BAAa,EAAE,CAAC,IAAmB,EAAE,EAAE,CACnC,IAAI,aAAa,2BAAc,GAAG,cAAc,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QACnG,wCAAoB,EAAE,CAAC,IAAmB,EAAE,EAAE,CAC1C,IAAI,aAAa,yCAAqB,GAAG,cAAc,CAAC,kBAAkB,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QAChH,sCAAmB,EAAE,CAAC,IAAmB,EAAE,EAAE,CACzC,IAAI,aAAa,uCAAoB,GAAG,cAAc,CAAC,iBAAiB,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QAC9G,gCAAgB,EAAE,CAAC,IAAmB,EAAE,EAAE,CACtC,IAAI,aAAa,iCAAiB,GAAG,cAAc,CAAC,gBAAgB,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QAC1G,0CAAqB,EAAE,CAAC,IAAmB,EAAE,EAAE,CAC3C,IAAI,aAAa,2CAAsB,GAAG,cAAc,CAAC,gBAAgB,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QAC/G,iCAAiB,EAAE,CAAC,IAAmB,EAAE,EAAE,CACvC,IAAI,aAAa,kCAAkB,GAAG,cAAc,CAAC,eAAe,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QAC1G,wBAAY,EAAE,CAAC,IAAmB,EAAE,EAAE,CAClC,IAAI,aAAa,yBAAa,GAAG,cAAc,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QACjG,gCAAgB,EAAE,CAAC,IAAmB,EAAE,EAAE,CAAC,IAAI,aAAa,iCAAiB,GAAG,IAAI,CAAC,SAAS,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC;QAC7G,gCAAgB,EAAE,CAAC,IAAmB,EAAE,EAAE,CACtC,IAAI,aAAa,iCAAiB,GAAG,cAAc,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;KACtG,CAAC;IAEF,SAAS;QACP,iFAAiF;QACjF,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC;QACrC,QAAQ,IAAI,CAAC,UAAU,EAAE,CAAC;YACxB;gBACE,OAAO,cAAc,CAAC,YAAY,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;YACjD;gBACE,OAAO,cAAc,CAAC,kBAAkB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;YACvD;gBACE,OAAO,cAAc,CAAC,iBAAiB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;YACtD;gBACE,OAAO,cAAc,CAAC,gBAAgB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;YACrD;gBACE,OAAO,cAAc,CAAC,gBAAgB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;YACrD;gBACE,OAAO,cAAc,CAAC,eAAe,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;YACpD;gBACE,OAAO,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;YACtB,4BAAgB;YAChB;gBACE,OAAO,cAAc,CAAC,WAAW,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;QAClD,CAAC;QACD,MAAM,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAC;IACzC,CAAC;IAID,YAAY,CAAC,SAAS,GAAG,IAAI;QAC3B,iFAAiF;QACjF,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC;QACrC,MAAM,MAAM,GACR,IAAI,CAAC,UAAU,6BAAgB,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,cAAc,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;QAC3G,IAAI,SAAS,EAAE,CAAC;YACd,OAAO,CAAC,GAAG,MAAM,EAAE,IAAI,CAAC,KAAK,IAAI,SAAS,CAAC,CAAC;QAC9C,CAAC;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,YACI,UAAsB,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,KAAkB,EAAE,YAA+B;QACjH,IAAI,CAAC,UAAU,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;QAC/B,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;QAClC,IAAI,IAAI,CAAC,UAAU,mCAAmB,IAAI,IAAI,CAAC,UAAU,mCAAmB,IAAI,IAAI,CAAC,UAAU,2BAAe,EAAE,CAAC;YAC/G,EAAE,GAAG,KAAK,CAAC,EAAE,EAAE,EAAC,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAC,CAAC,CAAC;YACjC,EAAE,GAAG,KAAK,CAAC,EAAE,EAAE,EAAC,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAC,CAAC,CAAC;YACjC,EAAE,GAAG,KAAK,CAAC,EAAE,EAAE,EAAC,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAC,CAAC,CAAC;QACnC,CAAC;QAED,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,EAAE,EAAC,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAC,CAAC,CAAC;IAC9C,CAAC;IACD,aAAa;QACX,OAAO,IAAI,CAAC,EAAE,0BAAa,CAAC;IAC9B,CAAC;IACD,EAAE,CAAmB,MAAS;QAC5B,OAAO,MAAM,KAAK,IAAI,CAAC,MAAM,EAAE,CAAC;IAClC,CAAC;IACD,EAAE,CAAmB,MAAS;QAC5B,IAAI,IAAI,CAAC,UAAU,KAAK,MAAM,EAAE,CAAC;YAC/B,OAAO,IAAuC,CAAC;QACjD,CAAC;QACD,OAAO,aAAa,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,IAAI,CAAoC,CAAC;IACrF,CAAC;IACD,KAAK,CAAC,KAAY;QAChB,MAAM,KAAK,GAAG,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACxC,OAAO,MAAM,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,CAAC,EAAE,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,CAAC,EAAE,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,CAAC,EAAE,CAAC;YACtF,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;IACtC,CAAC;IACD,MAAM;QACJ,OAAO,IAAI,CAAC,UAAU,CAAC;IACzB,CAAC;IACD,QAAQ,CAAC,KAAa;QACpB,OAAO,IAAI,aAAa,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;IAC9E,CAAC;IACD,QAAQ,CAAC,MAAe;QACtB,IAAI,MAAM,EAAE,CAAC;YACX,OAAO,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,QAAQ,EAAE,CAAC;QACpC,CAAC;QACD,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;IACpD,CAAC;IACD,UAAU,CAAC,EAAU,EAAE,EAAU,EAAE,EAAU;QAC3C,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,KAAK,IAAI,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC;YACxD,EAAE,CAAC,CAAC;YACJ,MAAM,QAAQ,CAAC,eAAe,CAAC,sBAAsB,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC;QACxE,OAAO,SAAS,IAAI,CAAC,UAAU,IAAI,QAAQ,CAAC,eAAe,CAAC,sBAAsB,CAAC,EAAE,CAAC,IAClF,QAAQ,CAAC,eAAe,CAAC,sBAAsB,CAC3C,EAAE,CAAC,IAAI,QAAQ,CAAC,eAAe,CAAC,sBAAsB,CAAC,EAAE,CAAC,GAAG,KAAK,GAAG,CAAC;IAChF,CAAC;IACD,eAAe;QACb,OAAO,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC;IACpC,CAAC;IAED,gBAAgB;QACd,OAAO,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;IAC9B,CAAC;IACD,cAAc,CAAC,MAAe;QAC5B,IAAI,MAAM,EAAE,CAAC;YACX,OAAO,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,cAAc,EAAE,CAAC;QAC1C,CAAC;QACD,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;IAC7C,CAAC;IACD,cAAc;QACZ,IAAI,IAAI,CAAC,UAAU,mCAAmB,IAAI,IAAI,CAAC,UAAU,mCAAmB,IAAI,IAAI,CAAC,UAAU,2BAAe,EAAE,CAAC;YAC/G,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;QAC/D,CAAC;QACD,OAAO,KAAK,CAAC;IACf,CAAC;IAED,KAAK;QACH,QAAQ,IAAI,CAAC,UAAU,EAAE,CAAC;YACxB,4BAAgB;YAChB,oCAAoB;YACpB;gBACE,OAAO,IAAI,CAAC;QAChB,CAAC;QACD,OAAO,KAAK,CAAC;IACf,CAAC;IAED;;;;;;;;;;;OAWG;IACH,MAAM,CAAC,QAAQ,CAAC,YAAoB,EAAE,uBAA+B;QACnE,MAAM,CAAC,cAAc,EAAE,SAAS,CAAC,GAAG,uBAAuB,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;QAC1E,MAAM,UAAU,GAAG,cAAc,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACtD,MAAM,CAAC,cAAc,EAAE,GAAG,eAAe,CAAC,GAAG,UAAU,CAAC;QACxD,MAAM,UAAU,GAAG,aAAa,CAAC,cAAc,CAAC,CAAC;QACjD,0DAA0D;QAC1D,IAAI,CAAC,UAAU,EAAE,CAAC;YAChB,OAAO,IAAI,CAAC;QACd,CAAC;QAED,2CAA2C;QAC3C,IAAI,eAAe,CAAC,MAAM,KAAK,CAAC,IAAI,SAAS,KAAK,SAAS,EAAE,CAAC;YAC5D,OAAO,IAAI,aAAa,CAAC,UAAU,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,YAAY,CAAC,CAAC;QACpE,CAAC;QAED,wEAAwE;QACxE,IAAI,eAAe,CAAC,MAAM,KAAK,CAAC,IAAI,SAAS,KAAK,SAAS,IAAI,SAAS,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;YACxG,2DAA2D;YAC3D,OAAO,IAAI,CAAC;QACd,CAAC;QAED,8DAA8D;QAC9D,IAAI,eAAe,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;YAC/B,OAAO,IAAI,CAAC;QACd,CAAC;QAED,0BAA0B;QAC1B,MAAM,mBAAmB,GAAG,eAAe,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,KAAK,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;QAEzF,iEAAiE;QACjE,6DAA6D;QAC7D,MAAM,MAAM,GAAG,mBAAmB,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,oBAAoB,CAAC,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QACrF,MAAM,YAAY,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAC3C,kEAAkE;QAClE,IAAI,YAAY,EAAE,CAAC;YACjB,OAAO,IAAI,CAAC;QACd,CAAC;QAED,MAAM,UAAU,GAAG,SAAS,CAAC,CAAC,CAAC,oBAAoB,CAAC,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAEhF,+BAA+B;QAC/B,4DAA4D;QAC5D,gDAAgD;QAChD,MAAM,SAAS,GAAY;YACzB,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC;YACd,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC;YACd,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC;YACd,UAAU;SACX,CAAC;QAEF,OAAO,IAAI,aAAa,CAAC,UAAU,EAAE,GAAG,SAAS,EAAE,YAAY,CAAC,CAAC;IACnE,CAAC;;AAGH,MAAM,OAAO,GAAG;IACL,CAAC,CAAS;IACV,CAAC,CAAS;IACV,CAAC,CAAS;IACV,KAAK,CAAc;IACnB,UAAU,CAAU;IAC7B,aAAa,CAAmB;IACvB,QAAQ,GACb,gHAAoE,CAAC;IAEzE,MAAM,CAAU,YAAY,GAA0B;QACpD,wBAAY,EAAE,CAAC,IAAS,EAAE,EAAE,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,KAAK,CAAC,yBAAa;QAC9F,0BAAa,EAAE,CAAC,IAAS,EAAE,EAAE,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,IAAI,CAAC,2BAAc;QAC/F,wBAAY,EAAE,CAAC,IAAS,EAAE,EAAE,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,KAAK,CAAC,yBAAa;QAC9F,0BAAa,EAAE,CAAC,IAAS,EAAE,EAAE,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,IAAI,CAAC,2BAAc;QAC/F,wBAAY,EAAE,CAAC,IAAS,EAAE,EAAE,CAAC,IAAI;QACjC,0BAAa,EAAE,CAAC,IAAS,EAAE,EAAE,CAAC,IAAI;QAClC,wBAAY,EAAE,CAAC,IAAS,EAAE,EAAE,CAAC,IAAI,GAAG,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QACxG,0BAAa,EAAE,CAAC,IAAS,EAAE,EAAE,CAAC,IAAI,GAAG,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QACzG,wBAAY,EAAE,CAAC,IAAS,EAAE,EAAE,CACxB,IAAI,GAAG,CAAC,GAAG,cAAc,CAAC,QAAQ,CAAC,GAAG,cAAc,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QACvG,4BAAc,EAAE,CAAC,IAAS,EAAE,EAAE,CAAC,IAAI,KAAK,CAAC,GAAG,cAAc,CAAC,aAAa,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QAC1G,wBAAY,EAAE,CAAC,IAAS,EAAE,EAAE,CAAC,IAAI,GAAG,CAAC,GAAG,cAAc,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QACpG,4BAAc,EAAE,CAAC,IAAS,EAAE,EAAE,CAC1B,IAAI,KAAK,CAAC,GAAG,cAAc,CAAC,aAAa,CAAC,GAAG,cAAc,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QAE9G,0BAAa,EAAE,CAAC,IAAS,EAAE,EAAE,CACzB,IAAI,aAAa,2BAAc,GAAG,cAAc,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QACnG,wCAAoB,EAAE,CAAC,IAAS,EAAE,EAAE,CAChC,IAAI,aAAa,yCAAqB,GAAG,cAAc,CAAC,kBAAkB,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QAChH,sCAAmB,EAAE,CAAC,IAAS,EAAE,EAAE,CAC/B,IAAI,aAAa,uCAAoB,GAAG,cAAc,CAAC,iBAAiB,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QAC9G,gCAAgB,EAAE,CAAC,IAAS,EAAE,EAAE,CAC5B,IAAI,aAAa,iCAAiB,GAAG,cAAc,CAAC,gBAAgB,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QAC1G,0CAAqB,EAAE,CAAC,IAAS,EAAE,EAAE,CACjC,IAAI,aAAa,2CAAsB,GAAG,cAAc,CAAC,gBAAgB,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QAC/G,iCAAiB,EAAE,CAAC,IAAS,EAAE,EAAE,CAC7B,IAAI,aAAa,kCAAkB,GAAG,cAAc,CAAC,eAAe,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QAC1G,wBAAY,EAAE,CAAC,IAAS,EAAE,EAAE,CACxB,IAAI,aAAa,yBAAa,GAAG,cAAc,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QACjG,gCAAgB,EAAE,CAAC,IAAS,EAAE,EAAE,CAAC,IAAI,aAAa,iCAAiB,GAAG,IAAI,CAAC,SAAS,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC;QACnG,gCAAgB,EAAE,CAAC,IAAS,EAAE,EAAE,CAC5B,IAAI,aAAa,iCAAiB,GAAG,cAAc,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;KACtG,CAAC;IAIF,YAAY,CAAC,SAAS,GAAG,IAAI;QAC3B,MAAM,GAAG,GAAG,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACjD,IAAI,SAAS,EAAE,CAAC;YACd,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,IAAI,SAAS,CAAC,CAAC;QAC3D,CAAC;QACD,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAClC,CAAC;IAED,SAAS;QACP,MAAM,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;QACrC,OAAO,cAAc,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7D,CAAC;IAED,YAAY,CAAS,EAAE,CAAS,EAAE,CAAS,EAAE,KAA4B,EAAE,YAAqB;QAC9F,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAC5B,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,EAAC,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAC,CAAC,CAAC;QACpC,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACnD,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,EAAC,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAC,CAAC,CAAC;QACpC,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC9B,IAAI,CAAC,CAAC,GAAG,YAAY,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;QACrC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,IAAI,IAAI,EAAE,EAAC,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAC,CAAC,CAAC;QACpD,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;IACpC,CAAC;IAED,KAAK,CAAC,KAAY;QAChB,MAAM,GAAG,GAAG,KAAK,CAAC,EAAE,wBAAY,CAAC;QACjC,OAAO,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC;IAClH,CAAC;IACD,QAAQ,CAAC,MAAyB;QAChC,IAAI,MAAM,EAAE,CAAC;YACX,OAAO,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,QAAQ,EAAE,CAAC;QACpC,CAAC;QACD,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IACjD,CAAC;IACD,UAAU,CAAC,CAAS,EAAE,CAAS,EAAE,CAAS;QACxC,MAAM,KAAK,GAAG,QAAQ,CAAC,eAAe,CAAC,OAAO,CAC1C,mBAAmB,EAAE,QAAQ,CAAC,eAAe,CAAC,sBAAsB,CAAC,CAAC,GAAG,GAAG,CAAC,EAC7E,QAAQ,CAAC,eAAe,CAAC,sBAAsB,CAAC,CAAC,GAAG,GAAG,CAAC,EACxD,QAAQ,CAAC,eAAe,CAAC,sBAAsB,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;QAC9D,IAAI,IAAI,CAAC,KAAK,KAAK,IAAI,IAAI,IAAI,CAAC,KAAK,KAAK,CAAC,EAAE,CAAC;YAC5C,OAAO,KAAK;gBACR,QAAQ,CAAC,eAAe,CAAC,OAAO,CAC5B,SAAS,EAAE,QAAQ,CAAC,eAAe,CAAC,sBAAsB,CAAC,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC,CAAC,CAAC;QACxF,CAAC;QACD,OAAO,KAAK,GAAG,GAAG,CAAC;IACrB,CAAC;IACD,QAAQ,CAAC,KAAa;QACpB,OAAO,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IAChD,CAAC;IACD,MAAM;QACJ,OAAO,IAAI,CAAC,KAAK,KAAK,IAAI,IAAI,IAAI,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,wBAAY,CAAC,yBAAY,CAAC;IAC5E,CAAC;IACD,EAAE,CAAmB,MAAS;QAC5B,OAAO,MAAM,KAAK,IAAI,CAAC,MAAM,EAAE,CAAC;IAClC,CAAC;IACD,EAAE,CAAmB,MAAS;QAC5B,IAAI,MAAM,KAAK,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC;YAC7B,OAAO,IAAuC,CAAC;QACjD,CAAC;QACD,OAAO,GAAG,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,IAAI,CAAoC,CAAC;IAC3E,CAAC;IACD,aAAa;QACX,OAAO,IAAI,CAAC,EAAE,0BAAa,CAAC;IAC9B,CAAC;IACD,eAAe;QACb,OAAO,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC;IACpC,CAAC;IACD,gBAAgB;QACd,OAAO,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;IAC9B,CAAC;IACD,cAAc,CAAC,MAAe;QAC5B,IAAI,MAAM,EAAE,CAAC;YACX,OAAO,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,cAAc,EAAE,CAAC;QAC1C,CAAC;QACD,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;IAC7C,CAAC;IACD,cAAc;QACZ,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;IACtF,CAAC;IAED,MAAM,CAAC,QAAQ,CAAC,IAAwB,EAAE,IAAY;QACpD,MAAM,CAAC,GAAG,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QACnC,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC;YACf,OAAO,IAAI,CAAC;QACd,CAAC;QACD,MAAM,CAAC,GAAG,oBAAoB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QACxC,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC;YACf,OAAO,IAAI,CAAC;QACd,CAAC;QACD,MAAM,CAAC,GAAG,oBAAoB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QACxC,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC;YACf,OAAO,IAAI,CAAC;QACd,CAAC;QACD,MAAM,KAAK,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QAElC,OAAO,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;IACvC,CAAC;IAED,IAAI;QACF,MAAM,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;QACxD,OAAO,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC;IACrF,CAAC;IACD,aAAa;QACX,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,EAAE,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC;IACzG,CAAC;;AAGH,MAAM,OAAO,GAAG;IACL,CAAC,CAAS;IACV,CAAC,CAAS;IACV,CAAC,CAAS;IACV,KAAK,CAAc;IACnB,UAAU,CAAU;IAC7B,aAAa,CAAmB;IACvB,QAAQ,GACb,gHAAoE,CAAC;IAEzE,MAAM,CAAU,YAAY,GAA0B;QACpD,wBAAY,EAAE,CAAC,IAAS,EAAE,EAAE,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,KAAK,CAAC,yBAAa;QAC9F,0BAAa,EAAE,CAAC,IAAS,EAAE,EAAE,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,IAAI,CAAC,2BAAc;QAC/F,wBAAY,EAAE,CAAC,IAAS,EAAE,EAAE,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,KAAK,CAAC,yBAAa;QAC9F,0BAAa,EAAE,CAAC,IAAS,EAAE,EAAE,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,IAAI,CAAC,2BAAc;QAC/F,wBAAY,EAAE,CAAC,IAAS,EAAE,EAAE,CAAC,IAAI,GAAG,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QACxG,0BAAa,EAAE,CAAC,IAAS,EAAE,EAAE,CAAC,IAAI,GAAG,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QACzG,wBAAY,EAAE,CAAC,IAAS,EAAE,EAAE,CAAC,IAAI;QACjC,0BAAa,EAAE,CAAC,IAAS,EAAE,EAAE,CAAC,IAAI;QAClC,wBAAY,EAAE,CAAC,IAAS,EAAE,EAAE,CACxB,IAAI,GAAG,CAAC,GAAG,cAAc,CAAC,QAAQ,CAAC,GAAG,cAAc,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QACvG,4BAAc,EAAE,CAAC,IAAS,EAAE,EAAE,CAAC,IAAI,KAAK,CAAC,GAAG,cAAc,CAAC,aAAa,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QAC1G,wBAAY,EAAE,CAAC,IAAS,EAAE,EAAE,CAAC,IAAI,GAAG,CAAC,GAAG,cAAc,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QACpG,4BAAc,EAAE,CAAC,IAAS,EAAE,EAAE,CAC1B,IAAI,KAAK,CAAC,GAAG,cAAc,CAAC,aAAa,CAAC,GAAG,cAAc,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QAE9G,0BAAa,EAAE,CAAC,IAAS,EAAE,EAAE,CACzB,IAAI,aAAa,2BAAc,GAAG,cAAc,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QACnG,wCAAoB,EAAE,CAAC,IAAS,EAAE,EAAE,CAChC,IAAI,aAAa,yCAAqB,GAAG,cAAc,CAAC,kBAAkB,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QAChH,sCAAmB,EAAE,CAAC,IAAS,EAAE,EAAE,CAC/B,IAAI,aAAa,uCAAoB,GAAG,cAAc,CAAC,iBAAiB,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QAC9G,gCAAgB,EAAE,CAAC,IAAS,EAAE,EAAE,CAC5B,IAAI,aAAa,iCAAiB,GAAG,cAAc,CAAC,gBAAgB,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QAC1G,0CAAqB,EAAE,CAAC,IAAS,EAAE,EAAE,CACjC,IAAI,aAAa,2CAAsB,GAAG,cAAc,CAAC,gBAAgB,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QAC/G,iCAAiB,EAAE,CAAC,IAAS,EAAE,EAAE,CAC7B,IAAI,aAAa,kCAAkB,GAAG,cAAc,CAAC,eAAe,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QAC1G,wBAAY,EAAE,CAAC,IAAS,EAAE,EAAE,CACxB,IAAI,aAAa,yBAAa,GAAG,cAAc,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QACjG,gCAAgB,EAAE,CAAC,IAAS,EAAE,EAAE,CAAC,IAAI,aAAa,iCAAiB,GAAG,IAAI,CAAC,SAAS,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC;QACnG,gCAAgB,EAAE,CAAC,IAAS,EAAE,EAAE,CAC5B,IAAI,aAAa,iCAAiB,GAAG,cAAc,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;KACtG,CAAC;IAIF,YAAY,CAAC,SAAS,GAAG,IAAI;QAC3B,MAAM,GAAG,GAAG,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACjD,IAAI,SAAS,EAAE,CAAC;YACd,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,IAAI,SAAS,CAAC,CAAC;QAC3D,CAAC;QACD,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAClC,CAAC;IAED,SAAS;QACP,MAAM,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;QACrC,OAAO,cAAc,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7D,CAAC;IACD,YAAY,CAAS,EAAE,CAAS,EAAE,CAAS,EAAE,KAAkB,EAAE,YAAqB;QACpF,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAC5B,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,EAAC,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAC,CAAC,CAAC;QACpC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,EAAC,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAC,CAAC,CAAC;QACpC,CAAC,GAAG,YAAY,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7C,IAAI,CAAC,CAAC,GAAG,YAAY,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;QACrC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,EAAE,EAAC,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAC,CAAC,CAAC;QAC5C,IAAI,YAAY,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;YACrC,2GAA2G;YAC3G,MAAM,KAAK,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;YAC9B,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;YACzB,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;QACtB,CAAC;QACD,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;IACpC,CAAC;IACD,KAAK,CAAC,KAAY;QAChB,MAAM,GAAG,GAAG,KAAK,CAAC,EAAE,wBAAY,CAAC;QACjC,OAAO,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC;IAClH,CAAC;IACD,QAAQ,CAAC,MAAyB;QAChC,IAAI,MAAM,EAAE,CAAC;YACX,OAAO,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,QAAQ,EAAE,CAAC;QACpC,CAAC;QACD,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IACjD,CAAC;IACD,UAAU,CAAC,CAAS,EAAE,CAAS,EAAE,CAAS;QACxC,MAAM,KAAK,GAAG,QAAQ,CAAC,eAAe,CAAC,OAAO,CAC1C,mBAAmB,EAAE,QAAQ,CAAC,eAAe,CAAC,sBAAsB,CAAC,CAAC,GAAG,GAAG,CAAC,EAC7E,QAAQ,CAAC,eAAe,CAAC,sBAAsB,CAAC,CAAC,GAAG,GAAG,CAAC,EACxD,QAAQ,CAAC,eAAe,CAAC,sBAAsB,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;QAC9D,IAAI,IAAI,CAAC,KAAK,KAAK,IAAI,IAAI,IAAI,CAAC,KAAK,KAAK,CAAC,EAAE,CAAC;YAC5C,OAAO,KAAK;gBACR,QAAQ,CAAC,eAAe,CAAC,OAAO,CAC5B,SAAS,EAAE,QAAQ,CAAC,eAAe,CAAC,sBAAsB,CAAC,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC,CAAC,CAAC;QACxF,CAAC;QACD,OAAO,KAAK,GAAG,GAAG,CAAC;IACrB,CAAC;IACD,QAAQ,CAAC,KAAa;QACpB,OAAO,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;IACpE,CAAC;IACD,MAAM;QACJ,OAAO,IAAI,CAAC,KAAK,KAAK,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,0BAAa,CAAC,uBAAW,CAAC;IAClF,CAAC;IACD,EAAE,CAAmB,MAAS;QAC5B,OAAO,MAAM,KAAK,IAAI,CAAC,MAAM,EAAE,CAAC;IAClC,CAAC;IACD,EAAE,CAAmB,MAAS;QAC5B,IAAI,MAAM,KAAK,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC;YAC7B,OAAO,IAAuC,CAAC;QACjD,CAAC;QACD,OAAO,GAAG,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,IAAI,CAAoC,CAAC;IAC3E,CAAC;IACD,aAAa;QACX,OAAO,IAAI,CAAC,EAAE,0BAAa,CAAC;IAC9B,CAAC;IACD,eAAe;QACb,OAAO,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC;IACpC,CAAC;IAED,aAAa;QACX,OAAO;YACL,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC;YACxB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC;YACxB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC;YACxB,IAAI,CAAC,KAAK,IAAI,CAAC;SAChB,CAAC;IACJ,CAAC;IACD,gBAAgB;QACd,OAAO,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;IAC9B,CAAC;IACD,cAAc,CAAC,MAAe;QAC5B,IAAI,MAAM,EAAE,CAAC;YACX,OAAO,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,cAAc,EAAE,CAAC;QAC1C,CAAC;QACD,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;IAC7C,CAAC;IACD,cAAc;QACZ,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YAC/E,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;IACnF,CAAC;IAED,MAAM,CAAC,QAAQ,CAAC,IAAwB,EAAE,IAAY;QACpD,MAAM,CAAC,GAAG,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QACnC,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC;YACf,OAAO,IAAI,CAAC;QACd,CAAC;QACD,MAAM,CAAC,GAAG,oBAAoB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QACxC,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC;YACf,OAAO,IAAI,CAAC;QACd,CAAC;QACD,MAAM,CAAC,GAAG,oBAAoB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QACxC,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC;YACf,OAAO,IAAI,CAAC;QACd,CAAC;QACD,MAAM,KAAK,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QAClC,OAAO,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;IACvC,CAAC;;AAKH,SAAS,UAAU,CAAC,KAAa;IAC/B,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,GAAG,CAAC,CAAC;AACjC,CAAC;AAED,MAAe,oBAAoB;IACd,KAAK,CAAS;IACxB,QAAQ,GACb,gHAAoE,CAAC;IACzE,YAAY,KAAa;QACvB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACrB,CAAC;IACD,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;IAC1B,CAAC;IACD,IAAI;QACF,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;IAC3B,CAAC;IACD,KAAK,CAAC,KAAY;QAChB,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IACjC,CAAC;IACD,QAAQ,CAAC,KAAa;QACpB,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IACpC,CAAC;IACD,MAAM;QACJ,OAAO,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,0BAAa,CAAC,uBAAW,CAAC;IAC5D,CAAC;IACD,EAAE,CAAmB,MAAS;QAC5B,OAAO,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;IAC/B,CAAC;IACD,EAAE,CAAmB,MAAS;QAC5B,OAAO,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;IAC/B,CAAC;IACD,aAAa;QACX,OAAO,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;IACpC,CAAC;IACD,eAAe;QACb,OAAO,IAAI,CAAC,KAAK,CAAC,eAAe,EAAE,CAAC;IACtC,CAAC;IACD,gBAAgB;QACd,OAAO,IAAI,CAAC,KAAK,CAAC,gBAAgB,EAAE,CAAC;IACvC,CAAC;IACD,cAAc;QACZ,OAAO,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE,CAAC;IACrC,CAAC;IACD,QAAQ,CAAC,MAAyB;QAChC,IAAI,MAAM,EAAE,CAAC;YACX,OAAO,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,QAAQ,EAAE,CAAC;QACpC,CAAC;QACD,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;QACpC,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACjC,CAAC;IACD,cAAc,CAAC,MAAe;QAC5B,IAAI,MAAM,EAAE,CAAC;YACX,OAAO,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,cAAc,EAAE,CAAC;QAC1C,CAAC;QACD,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAC1C,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACjC,CAAC;CAGF;AAED,MAAM,OAAO,QAAS,SAAQ,oBAAoB;IACvC,QAAQ,CAAC,KAAa;QAC7B,OAAO,IAAI,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;IAClD,CAAC;IAEQ,QAAQ,CAAC,MAAyB;QACzC,OAAO,MAAM,IAAI,MAAM,KAAK,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;IAC7F,CAAC;IAEkB,SAAS,CAAC,CAAS,EAAE,CAAS,EAAE,CAAS;QAC1D,SAAS,eAAe,CAAC,KAAa;YACpC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QACrD,CAAC;QAED,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,EAAE,CAAC;YAC1B,OAAO,QAAQ,CAAC,eAAe;iBAC1B,OAAO,CACJ,WAAW,EAAE,eAAe,CAAC,CAAC,CAAC,EAAE,eAAe,CAAC,CAAC,CAAC,EAAE,eAAe,CAAC,CAAC,CAAC,EAAE,eAAe,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC;iBAC7G,WAAW,EAAE,CAAC;QACrB,CAAC;QACD,OAAO,QAAQ,CAAC,eAAe,CAAC,OAAO,CAAC,SAAS,EAAE,eAAe,CAAC,CAAC,CAAC,EAAE,eAAe,CAAC,CAAC,CAAC,EAAE,eAAe,CAAC,CAAC,CAAC,CAAC;aACzG,WAAW,EAAE,CAAC;IACrB,CAAC;CACF;AAED,MAAM,OAAO,QAAS,SAAQ,oBAAoB;IACvC,QAAQ,CAAS;IAC1B,YAAY,QAAgB,EAAE,KAAa;QACzC,KAAK,CAAC,KAAK,CAAC,CAAC;QACb,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC3B,CAAC;IAED,MAAM,CAAC,QAAQ,CAAC,IAAY,EAAE,IAAY;QACxC,MAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QACpC,MAAM,IAAI,GAAG,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACrC,IAAI,IAAI,KAAK,SAAS,EAAE,CAAC;YACvB,OAAO,IAAI,QAAQ,CAAC,QAAQ,EAAE,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;QAC7D,CAAC;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAEkB,SAAS;QAC1B,OAAO,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;IAEQ,cAAc,CAAC,MAAyB;QAC/C,OAAO,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;IAC3C,CAAC;CACF;AAED,MAAM,OAAO,MAAM;IACR,UAAU,CAAU;IAC7B,KAAK,CAAU;IACN,aAAa,CAAc;IACpC,OAAO,CAAc;IACZ,QAAQ,GACb,gHAAoE,CAAC;IAEzE,MAAM,CAAU,YAAY,GAA6B;QACvD,wBAAY,EAAE,CAAC,IAAY,EAAE,EAAE,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,yBAAa;QAClE,0BAAa,EAAE,CAAC,IAAY,EAAE,EAAE,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,2BAAc;QACpE,wBAAY,EAAE,CAAC,IAAY,EAAE,EAAE,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,yBAAa;QAClE,0BAAa,EAAE,CAAC,IAAY,EAAE,EAAE,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,2BAAc;QACpE,wBAAY,EAAE,CAAC,IAAY,EAAE,EAAE,CAAC,IAAI,GAAG,CAAC,GAAG,QAAQ,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QAC/G,0BAAa,EAAE,CAAC,IAAY,EAAE,EAAE,CAAC,IAAI,GAAG,CAAC,GAAG,QAAQ,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QAChH,wBAAY,EAAE,CAAC,IAAY,EAAE,EAAE,CAAC,IAAI,GAAG,CAAC,GAAG,QAAQ,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QAC/G,0BAAa,EAAE,CAAC,IAAY,EAAE,EAAE,CAAC,IAAI,GAAG,CAAC,GAAG,QAAQ,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QAChH,wBAAY,EAAE,CAAC,IAAY,EAAE,EAAE,CAC3B,IAAI,GAAG,CAAC,GAAG,cAAc,CAAC,QAAQ,CAAC,GAAG,cAAc,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QACvG,4BAAc,EAAE,CAAC,IAAY,EAAE,EAAE,CAAC,IAAI,KAAK,CAAC,GAAG,cAAc,CAAC,aAAa,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QAC7G,wBAAY,EAAE,CAAC,IAAY,EAAE,EAAE,CAAC,IAAI,GAAG,CAAC,GAAG,cAAc,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QACvG,4BAAc,EAAE,CAAC,IAAY,EAAE,EAAE,CAC7B,IAAI,KAAK,CAAC,GAAG,cAAc,CAAC,aAAa,CAAC,GAAG,cAAc,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QAC9G,0BAAa,EAAE,CAAC,IAAY,EAAE,EAAE,CAC5B,IAAI,aAAa,2BAAc,GAAG,cAAc,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QACnG,wCAAoB,EAAE,CAAC,IAAY,EAAE,EAAE,CACnC,IAAI,aAAa,yCAAqB,GAAG,cAAc,CAAC,kBAAkB,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QAChH,sCAAmB,EAAE,CAAC,IAAY,EAAE,EAAE,CAClC,IAAI,aAAa,uCAAoB,GAAG,cAAc,CAAC,iBAAiB,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QAC9G,gCAAgB,EAAE,CAAC,IAAY,EAAE,EAAE,CAC/B,IAAI,aAAa,iCAAiB,GAAG,cAAc,CAAC,gBAAgB,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QAC1G,0CAAqB,EAAE,CAAC,IAAY,EAAE,EAAE,CACpC,IAAI,aAAa,2CAAsB,GAAG,cAAc,CAAC,gBAAgB,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QAC/G,iCAAiB,EAAE,CAAC,IAAY,EAAE,EAAE,CAChC,IAAI,aAAa,kCAAkB,GAAG,cAAc,CAAC,eAAe,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QAC1G,wBAAY,EAAE,CAAC,IAAY,EAAE,EAAE,CAC3B,IAAI,aAAa,yBAAa,GAAG,cAAc,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;QACjG,gCAAgB,EAAE,CAAC,IAAY,EAAE,EAAE,CAAC,IAAI,aAAa,iCAAiB,GAAG,IAAI,CAAC,SAAS,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC;QACtG,gCAAgB,EAAE,CAAC,IAAY,EAAE,EAAE,CAC/B,IAAI,aAAa,iCAAiB,GAAG,cAAc,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;KACtG,CAAC;IAEF,SAAS;QACP,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC;QAC7B,OAAO,cAAc,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC9C,CAAC;IAED,IAAI,KAAK;QACP,QAAQ,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC;YACtB,8BAAiB;YACjB;gBACE,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACvB;gBACE,OAAO,IAAI,CAAC;QAChB,CAAC;IACH,CAAC;IAED,aAAa;QACX,OAAO,IAAI,CAAC;IACd,CAAC;IAED,QAAQ;QACN,MAAM,QAAQ,GAAG,cAAc,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;QAClE,OAAO,QAAQ,CAAC,CAAC,CAAC,IAAI,QAAQ,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;IACxD,CAAC;IAED,QAAQ;QACN,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC;YAC3B,MAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;YAC1C,iEAAiE;YACjE,IAAI,CAAC,GAAG,IAAI,EAAE,CAAC;gBACb,OAAO,IAAI,CAAC;YACd,CAAC;QACH,CAAC;QACD,OAAO,IAAI,QAAQ,CAAC,IAAI,CAAC,CAAC;IAC5B,CAAC;IAED,YAAY,IAAyB,EAAE,MAAmB,EAAE,YAAqB;QAC/E,IAAI,CAAC,aAAa,GAAG,YAAY,IAAI,IAAI,CAAC;QAC1C,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACtB,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QAE9C,IAAI,CAAC,KAAK,GAAG;YACX,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAC,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAC,CAAC;YAChC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAC,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAC,CAAC;YAChC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAC,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAC,CAAC;YAChC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,EAAC,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAC,CAAC;SACtC,CAAC;IACJ,CAAC;IAED,MAAM,CAAC,OAAO,CAAC,GAAW,EAAE,IAAY;QACtC,GAAG,GAAG,GAAG,CAAC,WAAW,EAAE,CAAC;QACxB,gEAAgE;QAChE,MAAM,QAAQ,GAAG,GAAG,CAAC,MAAM,KAAK,CAAC,IAAI,GAAG,CAAC,MAAM,KAAK,CAAC,CAAC;QACtD,MAAM,MAAM,GAAG,QAAQ,CAAC,CAAC,0BAAa,CAAC,uBAAW,CAAC;QACnD,MAAM,OAAO,GAAG,GAAG,CAAC,MAAM,IAAI,CAAC,CAAC;QAChC,IAAI,OAAO,EAAE,CAAC;YACZ,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;gBAC/F,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QACpC,CAAC;QACD,MAAM,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;QAC5C,MAAM,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;QAC5C,MAAM,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;QAC5C,IAAI,CAAC,GAAG,CAAC,CAAC;QACV,IAAI,GAAG,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;YACrB,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,GAAG,CAAC;QAC9C,CAAC;QACD,MAAM,KAAK,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;QACvE,OAAO,OAAO,CAAC,CAAC,CAAC,IAAI,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;IAC/C,CAAC;IAED,MAAM,CAAC,gBAAgB,CAAC,CAAS,EAAE,CAAS,EAAE,CAAS,EAAE,KAAuB,EAAE,IAAY;QAC5F,MAAM,IAAI,GAAG;YACX,eAAe,CAAC,CAAC,CAAC;YAClB,eAAe,CAAC,CAAC,CAAC;YAClB,eAAe,CAAC,CAAC,CAAC;YAClB,KAAK,CAAC,CAAC,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;SACrC,CAAC;QAEF,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,kCAAkC,CAAC,IAAI,CAAC,EAAE,CAAC;YACtE,OAAO,IAAI,CAAC;QACd,CAAC;QACD,OAAO,IAAI,MAAM,CAAC,IAAe,EAAE,KAAK,CAAC,CAAC,0BAAa,CAAC,uBAAW,EAAE,IAAI,CAAC,CAAC;IAC7E,CAAC;IAED,MAAM,CAAC,QAAQ,CAAC,IAAc,EAAE,YAAqB;QACnD,OAAO,IAAI,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,4BAAe,YAAY,CAAC,CAAC;IACvG,CAAC;IAED,MAAM,CAAC,QAAQ,CAAC,IAAa;QAC3B,MAAM,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC;QAC7B,OAAO,IAAI,MAAM,CAAC,IAAI,2BAAc,CAAC;IACvC,CAAC;IAED,EAAE,CAAmB,MAAS;QAC5B,OAAO,MAAM,KAAK,IAAI,CAAC,MAAM,EAAE,CAAC;IAClC,CAAC;IACD,EAAE,CAAmB,MAAS;QAC5B,IAAI,MAAM,KAAK,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC;YAC7B,OAAO,IAAuC,CAAC;QACjD,CAAC;QACD,OAAO,MAAM,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,IAAI,CAAoC,CAAC;IAC9E,CAAC;IAED,MAAM;QACJ,OAAO,IAAI,CAAC,OAAO,CAAC;IACtB,CAAC;IAED,QAAQ;QACN,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;IAC7B,CAAC;IAED,eAAe;QACb,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QACjC,OAAO,QAAQ,CAAC,CAAC,0BAAa,CAAC,uBAAW,CAAC;IAC7C,CAAC;IAED,QAAQ,CAAC,MAAe;QACtB,IAAI,MAAM,EAAE,CAAC;YACX,OAAO,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,QAAQ,EAAE,CAAC;QACpC,CAAC;QACD,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9E,CAAC;IACD,UAAU,CAAC,MAA6B,EAAE,CAAS,EAAE,CAAS,EAAE,CAAS;QACvE,IAAI,CAAC,MAAM,EAAE,CAAC;YACZ,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC;QACxB,CAAC;QAED,SAAS,UAAU,CAAC,KAAa;YAC/B,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,GAAG,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;YACjD,OAAO,GAAG,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;QAC5C,CAAC;QAED,QAAQ,MAAM,EAAE,CAAC;YACf,4BAAgB;YAChB,6BAAgB,CAAC,CAAC,CAAC;gBACjB,MAAM,KAAK,GAAG,QAAQ,CAAC,eAAe,CAAC,OAAO,CAAC,cAAc,EAAE,UAAU,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC5G,IAAI,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC;oBACpB,OAAO,KAAK,GAAG,QAAQ,CAAC,eAAe,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;gBAC9F,CAAC;gBACD,OAAO,KAAK,GAAG,GAAG,CAAC;YACrB,CAAC;YACD,4BAAgB;YAChB,6BAAgB,CAAC,CAAC,CAAC;gBACjB,IAAI,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC;oBACpB,OAAO,QAAQ,CAAC,eAAe;yBAC1B,OAAO,CAAC,WAAW,EAAE,UAAU,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;yBAC5F,WAAW,EAAE,CAAC;gBACrB,CAAC;gBACD,OAAO,QAAQ,CAAC,eAAe,CAAC,OAAO,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;YAChH,CAAC;QACH,CAAC;IACH,CAAC;IACD,eAAe;QACb,OAAO,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC;IACpC,CAAC;IAED,gBAAgB;QACd,OAAO,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;IAC9B,CAAC;IACD,cAAc,CAAC,MAAe;QAC5B,IAAI,MAAM,EAAE,CAAC;YACX,OAAO,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,cAAc,EAAE,CAAC;QAC1C,CAAC;QACD,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;IACrD,CAAC;IACD,cAAc;QACZ,OAAO,CAAC,MAAM,CACV,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,EAC9F,kBAAkB,CAAC,CAAC;IAC1B,CAAC;IAED,IAAI;QACF,OAAO,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;IACzB,CAAC;IAED,aAAa;QACX,MAAM,IAAI,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;QAC1B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC;YAC3B,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;QAC5C,CAAC;QACD,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QACxB,OAAO,IAAe,CAAC;IACzB,CAAC;IAED,cAAc;QAMZ,MAAM,IAAI,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;QAClC,MAAM,MAAM,GAKR,EAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,SAAS,EAAC,CAAC;QACvD,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC;YAClB,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;QACrB,CAAC;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,MAAM;QACJ,MAAM,IAAI,GAAY,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QACnC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAC5B,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAC5B,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAC5B,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QACxB,OAAO,IAAI,MAAM,CAAC,IAAI,2BAAc,CAAC;IACvC,CAAC;IAED;;;OAGG;IACH,SAAS;QACP,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC;QAC7B,MAAM,IAAI,GAAG,CAAC,GAAG,KAAK,GAAG,CAAC,GAAG,KAAK,GAAG,CAAC,GAAG,KAAK,CAAC;QAC/C,OAAO,IAAI,MAAM,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,CAAC,2BAAc,CAAC;IAC1D,CAAC;IAED,QAAQ,CAAC,KAAa;QACpB,MAAM,IAAI,GAAY,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;QACtC,IAAI,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;QAChB,OAAO,IAAI,MAAM,CAAC,IAAI,2BAAc,CAAC;IACvC,CAAC;IAED,SAAS,CAAC,OAAe;QACvB,MAAM,IAAI,GAAY,WAAW,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;QAC7D,OAAO,IAAI,MAAM,CAAC,IAAI,2BAAc,CAAC;IACvC,CAAC;IAED,cAAc,CAAC,KAAa;QAC1B,MAAM,IAAI,GAAY,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;QACtC,IAAI,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC;QACjB,OAAO,IAAI,MAAM,CAAC,IAAI,2BAAc,CAAC;IACvC,CAAC;IAED,SAAS,CAAC,MAAmB;QAC3B,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;IACxB,CAAC;IAED,KAAK,CAAC,KAAY;QAChB,MAAM,MAAM,GAAG,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACtC,OAAO,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,kBAAkB,CAAC;YACrF,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,kBAAkB,CAAC;YAClF,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,kBAAkB,CAAC;YAClF,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7C,CAAC;;AAGH,MAAM,CAAC,MAAM,KAAK,GACd,kIAAkI,CAAC;AACvI,MAAM,CAAC,MAAM,aAAa,GAAG,mEAAmE,CAAC;AAEjG,MAAM,qBAAqB,GAAsC;IAC/D,CAAC,WAAW,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAC9B,CAAC,cAAc,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IACjC,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IACvB,CAAC,YAAY,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAC/B,CAAC,OAAO,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAC1B,CAAC,OAAO,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAC1B,CAAC,QAAQ,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAC3B,CAAC,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACpB,CAAC,gBAAgB,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IACnC,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;IACrB,CAAC,YAAY,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC;IAC9B,CAAC,OAAO,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;IACxB,CAAC,WAAW,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAC9B,CAAC,WAAW,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAC7B,CAAC,YAAY,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;IAC7B,CAAC,WAAW,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;IAC7B,CAAC,OAAO,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;IACzB,CAAC,gBAAgB,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IACnC,CAAC,UAAU,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAC7B,CAAC,SAAS,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;IAC1B,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IACvB,CAAC,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;IACzB,CAAC,UAAU,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAC3B,CAAC,eAAe,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;IACjC,CAAC,UAAU,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAC7B,CAAC,UAAU,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAC7B,CAAC,WAAW,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;IAC1B,CAAC,WAAW,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAC9B,CAAC,aAAa,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;IAC9B,CAAC,gBAAgB,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;IACjC,CAAC,YAAY,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;IAC7B,CAAC,YAAY,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC;IAC9B,CAAC,SAAS,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACxB,CAAC,YAAY,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAC/B,CAAC,cAAc,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IACjC,CAAC,eAAe,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC;IAChC,CAAC,eAAe,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;IAC/B,CAAC,eAAe,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;IAC/B,CAAC,eAAe,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAChC,CAAC,YAAY,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;IAC7B,CAAC,UAAU,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC;IAC5B,CAAC,aAAa,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAC9B,CAAC,SAAS,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAC5B,CAAC,SAAS,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAC5B,CAAC,YAAY,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAC9B,CAAC,WAAW,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;IAC5B,CAAC,aAAa,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAChC,CAAC,aAAa,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;IAC9B,CAAC,SAAS,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;IAC1B,CAAC,WAAW,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAC9B,CAAC,YAAY,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAC/B,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;IACvB,CAAC,WAAW,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;IAC7B,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IACzB,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IACzB,CAAC,OAAO,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;IACtB,CAAC,aAAa,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;IAC/B,CAAC,UAAU,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAC7B,CAAC,SAAS,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAC5B,CAAC,WAAW,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;IAC5B,CAAC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;IACxB,CAAC,OAAO,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAC1B,CAAC,OAAO,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAC1B,CAAC,UAAU,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAC7B,CAAC,eAAe,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAClC,CAAC,WAAW,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;IAC5B,CAAC,cAAc,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IACjC,CAAC,WAAW,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAC9B,CAAC,YAAY,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAC/B,CAAC,WAAW,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAC9B,CAAC,sBAAsB,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IACzC,CAAC,YAAY,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAC/B,CAAC,WAAW,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAC9B,CAAC,WAAW,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAC9B,CAAC,WAAW,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAC9B,CAAC,aAAa,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAChC,CAAC,eAAe,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IACjC,CAAC,cAAc,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IACjC,CAAC,gBAAgB,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IACnC,CAAC,gBAAgB,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IACnC,CAAC,gBAAgB,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IACnC,CAAC,aAAa,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAChC,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;IACrB,CAAC,WAAW,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;IAC5B,CAAC,OAAO,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAC1B,CAAC,SAAS,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;IAC1B,CAAC,QAAQ,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACvB,CAAC,kBAAkB,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IACrC,CAAC,YAAY,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;IAC3B,CAAC,cAAc,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC;IAChC,CAAC,cAAc,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IACjC,CAAC,gBAAgB,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAClC,CAAC,iBAAiB,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IACpC,CAAC,mBAAmB,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IACpC,CAAC,iBAAiB,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IACnC,CAAC,iBAAiB,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC;IACnC,CAAC,cAAc,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC;IAC/B,CAAC,WAAW,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAC9B,CAAC,WAAW,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAC9B,CAAC,UAAU,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAC7B,CAAC,aAAa,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAChC,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;IACrB,CAAC,SAAS,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAC5B,CAAC,OAAO,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;IACxB,CAAC,WAAW,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;IAC7B,CAAC,QAAQ,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;IACzB,CAAC,WAAW,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;IAC3B,CAAC,QAAQ,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAC3B,CAAC,eAAe,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAClC,CAAC,WAAW,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAC9B,CAAC,eAAe,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAClC,CAAC,eAAe,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAClC,CAAC,YAAY,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAC/B,CAAC,WAAW,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAC9B,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;IACxB,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IACzB,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IACzB,CAAC,YAAY,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAC/B,CAAC,QAAQ,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;IACzB,CAAC,eAAe,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC;IACjC,CAAC,KAAK,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACpB,CAAC,WAAW,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAC9B,CAAC,WAAW,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAC7B,CAAC,aAAa,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;IAC9B,CAAC,QAAQ,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAC3B,CAAC,YAAY,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;IAC9B,CAAC,UAAU,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;IAC3B,CAAC,UAAU,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAC7B,CAAC,QAAQ,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;IACzB,CAAC,QAAQ,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAC3B,CAAC,SAAS,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAC5B,CAAC,WAAW,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC;IAC7B,CAAC,WAAW,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAC9B,CAAC,WAAW,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAC9B,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IACzB,CAAC,aAAa,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAC9B,CAAC,WAAW,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAC7B,CAAC,KAAK,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IACxB,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IACvB,CAAC,SAAS,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAC5B,CAAC,QAAQ,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;IACzB,CAAC,WAAW,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAC7B,CAAC,QAAQ,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAC3B,CAAC,OAAO,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAC1B,CAAC,OAAO,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAC1B,CAAC,YAAY,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAC/B,CAAC,QAAQ,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;IACzB,CAAC,aAAa,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;IAC/B,CAAC,aAAa,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;CAC9B,CAAC;AAEF,OAAO,CAAC,MAAM,CACV,qBAAqB,CAAC,KAAK,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC,QAAQ,CAAC,WAAW,EAAE,KAAK,QAAQ,CAAC,EAChF,wCAAwC,CAAC,CAAC;AAE9C,MAAM,CAAC,MAAM,SAAS,GAAG,IAAI,GAAG,CAAC,qBAAqB,CAAC,CAAC;AAExD,MAAM,cAAc,GAAG,IAAI,GAAG;AAC1B,8DAA8D;AAC9D,qBAAqB,CAAC,GAAG,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE;IACzD,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC;AAC1C,CAAC,CAAC,CACL,CAAC;AAEF,MAAM,4BAA4B,GAAG,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC;AAEpD,MAAM,CAAC,MAAM,aAAa,GAAG;IAC3B,OAAO,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAC9C,YAAY,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;IAClD,cAAc,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC;IAC7C,OAAO,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAC9C,YAAY,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;IAClD,MAAM,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAC7C,WAAW,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;IACjD,MAAM,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAC7C,WAAW,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;IACjD,WAAW,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAClD,KAAK,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAC1C,WAAW,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;IAC/C,OAAO,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;IAC5C,UAAU,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,4BAA4B,EAAE,CAAC,CAAC,CAAC;IACjE,UAAU,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,4BAA4B,EAAE,CAAC,CAAC,CAAC;IACjE,aAAa,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,4BAA4B,EAAE,EAAE,CAAC,CAAC;IACrE,QAAQ,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,4BAA4B,EAAE,EAAE,CAAC,CAAC;IAChE,cAAc,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;CACnD,CAAC;AAEF,MAAM,CAAC,MAAM,oBAAoB,GAAG;IAClC,aAAa,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;IACjD,YAAY,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;CAChD,CAAC;AAEF,MAAM,CAAC,MAAM,sBAAsB,GAAG;IACpC,OAAO,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,EAAG,iCAAiC;IAChF,aAAa,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;IAClD,IAAI,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;CAC1C,CAAC;AAQF,MAAM,OAAO,SAAS;IACX,SAAS,CAAQ;IACjB,SAAS,CAAQ;IACjB,eAAe,CAAQ;IACvB,WAAW,CAAQ;IACnB,OAAO,GAAG,IAAI,GAAG,EAAkB,CAAC;IAC7C,YAAY,QAAgB,EAAE,QAAgB,EAAE,cAAsB,EAAE,UAAkB;QACxF,IAAI,CAAC,SAAS,GAAG,QAAQ,IAAI,EAAC,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,SAAS,EAAC,CAAC;QAClE,IAAI,CAAC,SAAS,GAAG,QAAQ,IAAI,EAAE,CAAC;QAChC,IAAI,CAAC,eAAe,GAAG,cAAc,IAAI,EAAE,CAAC;QAC5C,IAAI,CAAC,WAAW,GAAG,UAAU,IAAI,CAAC,CAAC;IACrC,CAAC;IAED,aAAa,CAAC,EAAU,EAAE,KAAa;QACrC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;IAC9B,CAAC;IAED,UAAU,CAAC,EAAU;QACnB,IAAI,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;QACjC,IAAI,CAAC,KAAK,EAAE,CAAC;YACX,KAAK,GAAG,IAAI,CAAC,kBAAkB,CAAC,EAAE,CAAC,CAAC;YACpC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;QAC9B,CAAC;QACD,OAAO,KAAK,CAAC;IACf,CAAC;IAEO,kBAAkB,CAAC,EAAU;QACnC,MAAM,IAAI,GAAG,QAAQ,CAAC,eAAe,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QACnD,MAAM,CAAC,GAAG,IAAI,CAAC,mBAAmB,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QACzD,MAAM,CAAC,GAAG,IAAI,CAAC,mBAAmB,CAAC,IAAI,IAAI,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QAC9D,MAAM,CAAC,GAAG,IAAI,CAAC,mBAAmB,CAAC,IAAI,IAAI,EAAE,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;QACrE,MAAM,CAAC,GAAG,IAAI,CAAC,mBAAmB,CAAC,IAAI,IAAI,EAAE,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;QACjE,MAAM,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC;QACxC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC;YACZ,OAAO,GAAG,KAAK,MAAM,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC;QAC/C,CAAC;QACD,OAAO,GAAG,KAAK,GAAG,CAAC;IACrB,CAAC;IAEO,mBAAmB,CAAC,KAAa,EAAE,KAAY;QACrD,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE,CAAC;YAC9B,OAAO,KAAK,CAAC;QACf,CAAC;QACD,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,IAAI,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC;QACnD,KAAK,IAAI,KAAK,CAAC;QACf,OAAO,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;IAC/E,CAAC;CACF","sourcesContent":["// Copyright 2021 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/*\n * Copyright (C) 2009 Apple Inc.  All rights reserved.\n * Copyright (C) 2009 Joseph Pecoraro\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1.  Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n * 2.  Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\n *     its contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Platform from '../platform/platform.js';\n\nimport {ColorConverter} from './ColorConverter.js';\nimport {\n  blendColors,\n  type Color3D,\n  type Color4D,\n  type Color4DOr3D,\n  contrastRatioAPCA,\n  desiredLuminanceAPCA,\n  luminance,\n  luminanceAPCA,\n  rgbToHsl,\n  rgbToHwb,\n} from './ColorUtils.js';\n\n/**\n * <hue> is defined as a <number> or <angle>\n * and we hold this in degrees. However, after\n * the conversions, these degrees can result in\n * negative values. That's why we normalize the hue to be\n * between [0 - 360].\n **/\nfunction normalizeHue(hue: number): number {\n  // Even though it is highly unlikely, hue can be\n  // very negative like -400. The initial modulo\n  // operation makes sure that the if the number is\n  // negative, it is between [-360, 0].\n  return ((hue % 360) + 360) % 360;\n}\n\n/**\n * Parses angle in the form of\n * `<angle>deg`, `<angle>turn`, `<angle>grad and `<angle>rad`\n * and returns the canonicalized `degree`.\n **/\nfunction parseAngle(angleText: string): number|null {\n  const angle = angleText.replace(/(deg|g?rad|turn)$/, '');\n  // @ts-expect-error: isNaN can accept strings\n  if (isNaN(angle) || angleText.match(/\\s+(deg|g?rad|turn)/)) {\n    return null;\n  }\n\n  const number = parseFloat(angle);\n  if (angleText.includes('turn')) {\n    // 1turn === 360deg\n    return number * 360;\n  }\n\n  if (angleText.includes('grad')) {\n    // 1grad === 0.9deg\n    return number * 9 / 10;\n  }\n\n  if (angleText.includes('rad')) {\n    // πrad === 180deg\n    return number * 180 / Math.PI;\n  }\n\n  // 1deg === 1deg ^_^\n  return number;\n}\n\n/** Returns the `Format` equivalent from the format text **/\nexport function getFormat(formatText: string): Format|null {\n  switch (formatText) {\n    case Format.HEX:\n      return Format.HEX;\n    case Format.HEXA:\n      return Format.HEXA;\n    case Format.RGB:\n      return Format.RGB;\n    case Format.RGBA:\n      return Format.RGBA;\n    case Format.HSL:\n      return Format.HSL;\n    case Format.HSLA:\n      return Format.HSLA;\n    case Format.HWB:\n      return Format.HWB;\n    case Format.HWBA:\n      return Format.HWBA;\n    case Format.LCH:\n      return Format.LCH;\n    case Format.OKLCH:\n      return Format.OKLCH;\n    case Format.LAB:\n      return Format.LAB;\n    case Format.OKLAB:\n      return Format.OKLAB;\n  }\n\n  return getColorSpace(formatText);\n}\n\n// Returns the `ColorSpace` equivalent from the color space text\ntype ColorSpace = Format.SRGB|Format.SRGB_LINEAR|Format.DISPLAY_P3|Format.A98_RGB|Format.PROPHOTO_RGB|\n                  Format.REC_2020|Format.XYZ|Format.XYZ_D50|Format.XYZ_D65;\nfunction getColorSpace(colorSpaceText: string): ColorSpace|null {\n  switch (colorSpaceText) {\n    case Format.SRGB:\n      return Format.SRGB;\n    case Format.SRGB_LINEAR:\n      return Format.SRGB_LINEAR;\n    case Format.DISPLAY_P3:\n      return Format.DISPLAY_P3;\n    case Format.A98_RGB:\n      return Format.A98_RGB;\n    case Format.PROPHOTO_RGB:\n      return Format.PROPHOTO_RGB;\n    case Format.REC_2020:\n      return Format.REC_2020;\n    case Format.XYZ:\n      return Format.XYZ;\n    case Format.XYZ_D50:\n      return Format.XYZ_D50;\n    case Format.XYZ_D65:\n      return Format.XYZ_D65;\n  }\n\n  return null;\n}\n\nexport const enum ColorChannel {\n  A = 'a',\n  ALPHA = 'alpha',\n  B = 'b',\n  C = 'c',\n  G = 'g',\n  H = 'h',\n  L = 'l',\n  R = 'r',\n  S = 's',\n  W = 'w',\n  X = 'x',\n  Y = 'y',\n  Z = 'z',\n}\n\n/**\n * Percents in color spaces are mapped to ranges.\n * These ranges change based on the syntax.\n * For example, for 'C' in lch() c: 0% = 0, 100% = 150.\n * See: https://www.w3.org/TR/css-color-4/#funcdef-lch\n * Some percentage values can be negative\n * though their ranges don't change depending on the sign\n * (for now, according to spec).\n * @param percent % value of the number. 42 for 42%.\n * @param range Range of [min, max]. Including `min` and `max`.\n */\nfunction mapPercentToRange(percent: number, range: [number, number]): number {\n  const sign = Math.sign(percent);\n  const absPercent = Math.abs(percent);\n  const [outMin, outMax] = range;\n\n  return sign * (absPercent * (outMax - outMin) / 100 + outMin);\n}\n\ninterface SplitColorFunctionParametersOptions {\n  allowCommas: boolean;\n  convertNoneToZero: boolean;\n}\n\nexport function parse(text: string): Color|null {\n  // #hex, nickname\n  if (!text.match(/\\s/)) {\n    const match = text.toLowerCase().match(/^(?:#([0-9a-f]{3,4}|[0-9a-f]{6}|[0-9a-f]{8})|(\\w+))$/i);\n    if (match) {\n      if (match[1]) {\n        return Legacy.fromHex(match[1], text);\n      }\n\n      if (match[2]) {\n        return Nickname.fromName(match[2], text);\n      }\n\n      return null;\n    }\n  }\n\n  // rgb/rgba(), hsl/hsla(), hwb/hwba(), lch(), oklch(), lab(), oklab() and color()\n  const match =\n      text.toLowerCase().match(/^\\s*(?:(rgba?)|(hsla?)|(hwba?)|(lch)|(oklch)|(lab)|(oklab)|(color))\\((.*)\\)\\s*$/);\n  if (match) {\n    const isRgbaMatch = Boolean(match[1]);   // rgb/rgba()\n    const isHslaMatch = Boolean(match[2]);   // hsl/hsla()\n    const isHwbaMatch = Boolean(match[3]);   // hwb/hwba()\n    const isLchMatch = Boolean(match[4]);    // lch()\n    const isOklchMatch = Boolean(match[5]);  // oklch()\n    const isLabMatch = Boolean(match[6]);    // lab()\n    const isOklabMatch = Boolean(match[7]);  // oklab()\n    const isColorMatch = Boolean(match[8]);  // color()\n    const valuesText = match[9];\n\n    // Parse color function first because extracting values for\n    // this function is not the same as the other ones\n    // so, we're not using any of the logic below.\n    if (isColorMatch) {\n      return ColorFunction.fromSpec(text, valuesText);\n    }\n\n    const isOldSyntax = isRgbaMatch || isHslaMatch || isHwbaMatch;\n    const allowCommas = isRgbaMatch || isHslaMatch;\n    const convertNoneToZero = !isOldSyntax;  // Convert 'none' keyword to zero in new syntaxes\n\n    const values = splitColorFunctionParameters(valuesText, {allowCommas, convertNoneToZero});\n    if (!values) {\n      return null;\n    }\n    const spec: ColorParameterSpec = [values[0], values[1], values[2], values[3]];\n    if (isRgbaMatch) {\n      return Legacy.fromRGBAFunction(values[0], values[1], values[2], values[3], text);\n    }\n\n    if (isHslaMatch) {\n      return HSL.fromSpec(spec, text);\n    }\n\n    if (isHwbaMatch) {\n      return HWB.fromSpec(spec, text);\n    }\n\n    if (isLchMatch) {\n      return LCH.fromSpec(spec, text);\n    }\n\n    if (isOklchMatch) {\n      return Oklch.fromSpec(spec, text);\n    }\n\n    if (isLabMatch) {\n      return Lab.fromSpec(spec, text);\n    }\n\n    if (isOklabMatch) {\n      return Oklab.fromSpec(spec, text);\n    }\n  }\n\n  return null;\n}\n\n/**\n * Split the color parameters of (e.g.) rgb(a), hsl(a), hwb(a) functions.\n */\nfunction splitColorFunctionParameters(\n    content: string, {allowCommas, convertNoneToZero}: SplitColorFunctionParametersOptions): string[]|null {\n  const components = content.trim();\n  let values: string[] = [];\n\n  if (allowCommas) {\n    values = components.split(/\\s*,\\s*/);\n  }\n  if (!allowCommas || values.length === 1) {\n    values = components.split(/\\s+/);\n    if (values[3] === '/') {\n      values.splice(3, 1);\n      if (values.length !== 4) {\n        return null;\n      }\n    } else if (\n        (values.length > 2 && values[2].indexOf('/') !== -1) || (values.length > 3 && values[3].indexOf('/') !== -1)) {\n      const alpha = values.slice(2, 4).join('');\n      values = values.slice(0, 2).concat(alpha.split(/\\//)).concat(values.slice(4));\n    } else if (values.length >= 4) {\n      return null;\n    }\n  }\n  if (values.length !== 3 && values.length !== 4 || values.indexOf('') > -1) {\n    return null;\n  }\n\n  // Question: what should we do with `alpha` being none?\n  if (convertNoneToZero) {\n    return values.map(value => value === 'none' ? '0' : value);\n  }\n\n  return values;\n}\n\nfunction clamp(value: number, {min, max}: {min?: number, max?: number}): number;\nfunction clamp(value: null, {min, max}: {min?: number, max?: number}): null;\nfunction clamp(value: number|null, {min, max}: {min?: number, max?: number}): number|null;\nfunction clamp(value: number|null, {min, max}: {min?: number, max?: number}): number|null {\n  if (value === null) {\n    return value;\n  }\n  if (min !== undefined) {\n    value = Math.max(value, min);\n  }\n  if (max !== undefined) {\n    value = Math.min(value, max);\n  }\n  return value;\n}\n\nfunction parsePercentage(value: string, range: [number, number]): number|null {\n  if (!value.endsWith('%')) {\n    return null;\n  }\n  const percentage = parseFloat(value.substr(0, value.length - 1));\n  return isNaN(percentage) ? null : mapPercentToRange(percentage, range);\n}\n\nfunction parseNumber(value: string): number|null {\n  const number = parseFloat(value);\n  return isNaN(number) ? null : number;\n}\n\nfunction parseAlpha(value: string|undefined): number|null {\n  if (value === undefined) {\n    return null;\n  }\n  return clamp(parsePercentage(value, [0, 1]) ?? parseNumber(value), {min: 0, max: 1});\n}\n\n/**\n *\n * @param value Text value to be parsed in the form of 'number|percentage'.\n * @param range Range to map the percentage.\n * @returns If it is not percentage, returns number directly; otherwise,\n * maps the percentage to the range. For example:\n * - 30% in range [0, 100] is 30\n * - 20% in range [0, 1] is 0.5\n */\nfunction parsePercentOrNumber(value: string, range: [number, number] = [0, 1]): number|null {\n  // @ts-expect-error: isNaN can accept strings\n  if (isNaN(value.replace('%', ''))) {\n    return null;\n  }\n  const parsed = parseFloat(value);\n\n  if (value.indexOf('%') !== -1) {\n    if (value.indexOf('%') !== value.length - 1) {\n      return null;\n    }\n    return mapPercentToRange(parsed, range);\n  }\n  return parsed;\n}\n\nfunction parseRgbNumeric(value: string): number|null {\n  const parsed = parsePercentOrNumber(value);\n  if (parsed === null) {\n    return null;\n  }\n\n  if (value.indexOf('%') !== -1) {\n    return parsed;\n  }\n  return parsed / 255;\n}\n\nexport function parseHueNumeric(value: string): number|null {\n  const angle = value.replace(/(deg|g?rad|turn)$/, '');\n  // @ts-expect-error: isNaN can accept strings\n  if (isNaN(angle) || value.match(/\\s+(deg|g?rad|turn)/)) {\n    return null;\n  }\n  const number = parseFloat(angle);\n\n  if (value.indexOf('turn') !== -1) {\n    return number % 1;\n  }\n  if (value.indexOf('grad') !== -1) {\n    return (number / 400) % 1;\n  }\n  if (value.indexOf('rad') !== -1) {\n    return (number / (2 * Math.PI)) % 1;\n  }\n  return (number / 360) % 1;\n}\n\nfunction parseSatLightNumeric(value: string): number|null {\n  // @ts-expect-error: isNaN can accept strings\n  if (value.indexOf('%') !== value.length - 1 || isNaN(value.replace('%', ''))) {\n    return null;\n  }\n  const parsed = parseFloat(value);\n  return parsed / 100;\n}\n\nfunction parseAlphaNumeric(value: string): number|null {\n  return parsePercentOrNumber(value);\n}\n\nfunction hsva2hsla(hsva: Color4D): Color4D {\n  const h = hsva[0];\n  let s: 0|number = hsva[1];\n  const v = hsva[2];\n\n  const t = (2 - s) * v;\n  if (v === 0 || s === 0) {\n    s = 0;\n  } else {\n    s *= v / (t < 1 ? t : 2 - t);\n  }\n\n  return [h, s, t / 2, hsva[3]];\n}\n\nexport function hsl2rgb(hsl: Color4D): Color4D {\n  const h = hsl[0];\n  let s: 0|number = hsl[1];\n  const l = hsl[2];\n\n  function hue2rgb(p: number, q: number, h: number): number {\n    if (h < 0) {\n      h += 1;\n    } else if (h > 1) {\n      h -= 1;\n    }\n\n    if ((h * 6) < 1) {\n      return p + (q - p) * h * 6;\n    }\n    if ((h * 2) < 1) {\n      return q;\n    }\n    if ((h * 3) < 2) {\n      return p + (q - p) * ((2 / 3) - h) * 6;\n    }\n    return p;\n  }\n\n  if (s < 0) {\n    s = 0;\n  }\n\n  let q;\n  if (l <= 0.5) {\n    q = l * (1 + s);\n  } else {\n    q = l + s - (l * s);\n  }\n\n  const p = 2 * l - q;\n\n  const tr = h + (1 / 3);\n  const tg = h;\n  const tb = h - (1 / 3);\n\n  return [hue2rgb(p, q, tr), hue2rgb(p, q, tg), hue2rgb(p, q, tb), hsl[3]];\n}\n\nfunction hwb2rgb(hwb: Color4D): Color4D {\n  const h = hwb[0];\n  const w = hwb[1];\n  const b = hwb[2];\n\n  const whiteRatio = w / (w + b);\n  let result: Color4D = [whiteRatio, whiteRatio, whiteRatio, hwb[3]];\n\n  if (w + b < 1) {\n    result = hsl2rgb([h, 1, 0.5, hwb[3]]);\n    for (let i = 0; i < 3; ++i) {\n      result[i] += w - (w + b) * result[i];\n    }\n  }\n\n  return result;\n}\n\nexport function hsva2rgba(hsva: Color4D): Color4D {\n  return hsl2rgb(hsva2hsla(hsva));\n}\n\nexport function rgb2hsv(rgba: Color3D): Color3D {\n  const hsla = rgbToHsl(rgba);\n  const h = hsla[0];\n  let s = hsla[1];\n  const l = hsla[2];\n\n  s *= l < 0.5 ? l : 1 - l;\n  return [h, s !== 0 ? 2 * s / (l + s) : 0, (l + s)];\n}\n\n/**\n * Compute a desired luminance given a given luminance and a desired contrast\n * ratio.\n */\nexport function desiredLuminance(luminance: number, contrast: number, lighter: boolean): number {\n  function computeLuminance(): number {\n    if (lighter) {\n      return (luminance + 0.05) * contrast - 0.05;\n    }\n    return (luminance + 0.05) / contrast - 0.05;\n  }\n  let desiredLuminance = computeLuminance();\n  if (desiredLuminance < 0 || desiredLuminance > 1) {\n    lighter = !lighter;\n    desiredLuminance = computeLuminance();\n  }\n  return desiredLuminance;\n}\n\n/**\n * Approach a value of the given component of `candidateHSVA` such that the\n * calculated luminance of `candidateHSVA` approximates `desiredLuminance`.\n */\nexport function approachColorValue(\n    candidateHSVA: Color4D, index: number, desiredLuminance: number,\n    candidateLuminance: (arg0: Color4D) => number): number|null {\n  const epsilon = 0.0002;\n\n  let x = candidateHSVA[index];\n  let multiplier = 1;\n  let dLuminance: number = candidateLuminance(candidateHSVA) - desiredLuminance;\n  let previousSign = Math.sign(dLuminance);\n\n  for (let guard = 100; guard; guard--) {\n    if (Math.abs(dLuminance) < epsilon) {\n      candidateHSVA[index] = x;\n      return x;\n    }\n\n    const sign = Math.sign(dLuminance);\n    if (sign !== previousSign) {\n      // If `x` overshoots the correct value, halve the step size.\n      multiplier /= 2;\n      previousSign = sign;\n    } else if (x < 0 || x > 1) {\n      // If there is no overshoot and `x` is out of bounds, there is no\n      // acceptable value for `x`.\n      return null;\n    }\n\n    // Adjust `x` by a multiple of `dLuminance` to decrease step size as\n    // the computed luminance converges on `desiredLuminance`.\n    x += multiplier * (index === 2 ? -dLuminance : dLuminance);\n\n    candidateHSVA[index] = x;\n\n    dLuminance = candidateLuminance(candidateHSVA) - desiredLuminance;\n  }\n\n  return null;\n}\n\nexport function findFgColorForContrast(fgColor: Legacy, bgColor: Legacy, requiredContrast: number): Legacy|null {\n  const candidateHSVA = fgColor.as(Format.HSL).hsva();\n  const bgRGBA = bgColor.rgba();\n\n  const candidateLuminance = (candidateHSVA: Color4D): number => {\n    return luminance(blendColors(Legacy.fromHSVA(candidateHSVA).rgba(), bgRGBA));\n  };\n\n  const bgLuminance = luminance(bgColor.rgba());\n  const fgLuminance = candidateLuminance(candidateHSVA);\n  const fgIsLighter = fgLuminance > bgLuminance;\n\n  const desired = desiredLuminance(bgLuminance, requiredContrast, fgIsLighter);\n\n  const saturationComponentIndex = 1;\n  const valueComponentIndex = 2;\n\n  if (approachColorValue(candidateHSVA, valueComponentIndex, desired, candidateLuminance)) {\n    return Legacy.fromHSVA(candidateHSVA);\n  }\n\n  candidateHSVA[valueComponentIndex] = 1;\n  if (approachColorValue(candidateHSVA, saturationComponentIndex, desired, candidateLuminance)) {\n    return Legacy.fromHSVA(candidateHSVA);\n  }\n\n  return null;\n}\n\nexport function findFgColorForContrastAPCA(fgColor: Legacy, bgColor: Legacy, requiredContrast: number): Legacy|null {\n  const candidateHSVA = fgColor.as(Format.HSL).hsva();\n\n  const candidateLuminance = (candidateHSVA: Color4D): number => {\n    return luminanceAPCA(Legacy.fromHSVA(candidateHSVA).rgba());\n  };\n\n  const bgLuminance = luminanceAPCA(bgColor.rgba());\n  const fgLuminance = candidateLuminance(candidateHSVA);\n  const fgIsLighter = fgLuminance >= bgLuminance;\n  const desiredLuminance = desiredLuminanceAPCA(bgLuminance, requiredContrast, fgIsLighter);\n\n  const saturationComponentIndex = 1;\n  const valueComponentIndex = 2;\n\n  if (approachColorValue(candidateHSVA, valueComponentIndex, desiredLuminance, candidateLuminance)) {\n    const candidate = Legacy.fromHSVA(candidateHSVA);\n    if (Math.abs(contrastRatioAPCA(bgColor.rgba(), candidate.rgba())) >= requiredContrast) {\n      return candidate;\n    }\n  }\n\n  candidateHSVA[valueComponentIndex] = 1;\n  if (approachColorValue(candidateHSVA, saturationComponentIndex, desiredLuminance, candidateLuminance)) {\n    const candidate = Legacy.fromHSVA(candidateHSVA);\n    if (Math.abs(contrastRatioAPCA(bgColor.rgba(), candidate.rgba())) >= requiredContrast) {\n      return candidate;\n    }\n  }\n\n  return null;\n}\n\ntype ColorParameterSpec = [string, string, string, string | undefined];\n\ninterface ColorConversions<T = void> {\n  [Format.HEX](self: T): Legacy;\n  [Format.HEXA](self: T): Legacy;\n  [Format.RGB](self: T): Legacy;\n  [Format.RGBA](self: T): Legacy;\n  [Format.HSL](self: T): HSL;\n  [Format.HSLA](self: T): HSL;\n  [Format.HWB](self: T): HWB;\n  [Format.HWBA](self: T): HWB;\n  [Format.LCH](self: T): LCH;\n  [Format.OKLCH](self: T): Oklch;\n  [Format.LAB](self: T): Lab;\n  [Format.OKLAB](self: T): Oklab;\n\n  [Format.SRGB](self: T): ColorFunction;\n  [Format.SRGB_LINEAR](self: T): ColorFunction;\n  [Format.DISPLAY_P3](self: T): ColorFunction;\n  [Format.A98_RGB](self: T): ColorFunction;\n  [Format.PROPHOTO_RGB](self: T): ColorFunction;\n  [Format.REC_2020](self: T): ColorFunction;\n  [Format.XYZ](self: T): ColorFunction;\n  [Format.XYZ_D50](self: T): ColorFunction;\n  [Format.XYZ_D65](self: T): ColorFunction;\n}\n\nexport interface Color {\n  readonly alpha: number|null;\n  readonly channels: [ColorChannel, ColorChannel, ColorChannel, ColorChannel];\n\n  equal(color: Color): boolean;\n  asString(format?: Format): string;\n  setAlpha(alpha: number): Color;\n  format(): Format;\n  as<T extends Format>(format: T): ReturnType<ColorConversions[T]>;\n  is<T extends Format>(format: T): this is ReturnType<ColorConversions[T]>;\n  asLegacyColor(): Legacy;\n\n  // The authored text is the text that was used to define the color. If set, it may be different from what `asString`\n  // returns, for example if the latter normalizes or clamps color channel values. It is also possible that the authored\n  // text is not a parsable color outside of the context in which the color was produced, e.g., when the color stems\n  // from a custom property, the authored text may look like \"var(--color)\".\n  getAuthoredText(): string|null;\n\n  getRawParameters(): Color3D;\n  getAsRawString(format?: Format): string;\n  isGamutClipped(): boolean;\n}\n\nconst EPSILON = 0.01;\nconst WIDE_RANGE_EPSILON = 1;  // For comparisons on channels with a wider range than [0,1]\nfunction equals(a: number[], b: number[], accuracy?: number): boolean;\nfunction equals(a: number|null, b: number|null, accuracy?: number): boolean;\nfunction equals(a: number|null|number[], b: number|null|number[], accuracy = EPSILON): boolean {\n  if (Array.isArray(a) && Array.isArray(b)) {\n    if (a.length !== b.length) {\n      return false;\n    }\n    for (const i in a) {\n      if (!equals(a[i], b[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  if (Array.isArray(a) || Array.isArray(b)) {\n    return false;\n  }\n  if (a === null || b === null) {\n    return a === b;\n  }\n  return Math.abs(a - b) < accuracy;\n}\nfunction lessOrEquals(a: number, b: number, accuracy = EPSILON): boolean {\n  return a - b <= accuracy;\n}\n\nexport const enum Format {\n  HEX = 'hex',\n  HEXA = 'hexa',\n  RGB = 'rgb',\n  RGBA = 'rgba',\n  HSL = 'hsl',\n  HSLA = 'hsla',\n  HWB = 'hwb',\n  HWBA = 'hwba',\n  LCH = 'lch',\n  OKLCH = 'oklch',\n  LAB = 'lab',\n  OKLAB = 'oklab',\n  SRGB = 'srgb',\n  SRGB_LINEAR = 'srgb-linear',\n  DISPLAY_P3 = 'display-p3',\n  A98_RGB = 'a98-rgb',\n  PROPHOTO_RGB = 'prophoto-rgb',\n  REC_2020 = 'rec2020',\n  XYZ = 'xyz',\n  XYZ_D50 = 'xyz-d50',\n  XYZ_D65 = 'xyz-d65',\n}\n\nexport class Lab implements Color {\n  readonly l: number;\n  readonly a: number;\n  readonly b: number;\n  readonly alpha: number|null;\n  readonly #authoredText?: string;\n  readonly #rawParams: Color3D;\n  readonly channels: [ColorChannel, ColorChannel, ColorChannel, ColorChannel] =\n      [ColorChannel.L, ColorChannel.A, ColorChannel.B, ColorChannel.ALPHA];\n\n  static readonly #conversions: ColorConversions<Lab> = {\n    [Format.HEX]: (self: Lab) => new Legacy(self.#getRGBArray(/* withAlpha= */ false), Format.HEX),\n    [Format.HEXA]: (self: Lab) => new Legacy(self.#getRGBArray(/* withAlpha= */ true), Format.HEXA),\n    [Format.RGB]: (self: Lab) => new Legacy(self.#getRGBArray(/* withAlpha= */ false), Format.RGB),\n    [Format.RGBA]: (self: Lab) => new Legacy(self.#getRGBArray(/* withAlpha= */ true), Format.RGBA),\n    [Format.HSL]: (self: Lab) => new HSL(...rgbToHsl(self.#getRGBArray(/* withAlpha= */ false)), self.alpha),\n    [Format.HSLA]: (self: Lab) => new HSL(...rgbToHsl(self.#getRGBArray(/* withAlpha= */ false)), self.alpha),\n    [Format.HWB]: (self: Lab) => new HWB(...rgbToHwb(self.#getRGBArray(/* withAlpha= */ false)), self.alpha),\n    [Format.HWBA]: (self: Lab) => new HWB(...rgbToHwb(self.#getRGBArray(/* withAlpha= */ false)), self.alpha),\n    [Format.LCH]: (self: Lab) => new LCH(...ColorConverter.labToLch(self.l, self.a, self.b), self.alpha),\n    [Format.OKLCH]: (self: Lab) => new Oklch(...ColorConverter.xyzd50ToOklch(...self.#toXyzd50()), self.alpha),\n    [Format.LAB]: (self: Lab) => self,\n    [Format.OKLAB]: (self: Lab) =>\n        new Oklab(...ColorConverter.xyzd65ToOklab(...ColorConverter.xyzd50ToD65(...self.#toXyzd50())), self.alpha),\n\n    [Format.SRGB]: (self: Lab) =>\n        new ColorFunction(Format.SRGB, ...ColorConverter.xyzd50ToSrgb(...self.#toXyzd50()), self.alpha),\n    [Format.SRGB_LINEAR]: (self: Lab) =>\n        new ColorFunction(Format.SRGB_LINEAR, ...ColorConverter.xyzd50TosRGBLinear(...self.#toXyzd50()), self.alpha),\n    [Format.DISPLAY_P3]: (self: Lab) =>\n        new ColorFunction(Format.DISPLAY_P3, ...ColorConverter.xyzd50ToDisplayP3(...self.#toXyzd50()), self.alpha),\n    [Format.A98_RGB]: (self: Lab) =>\n        new ColorFunction(Format.A98_RGB, ...ColorConverter.xyzd50ToAdobeRGB(...self.#toXyzd50()), self.alpha),\n    [Format.PROPHOTO_RGB]: (self: Lab) =>\n        new ColorFunction(Format.PROPHOTO_RGB, ...ColorConverter.xyzd50ToProPhoto(...self.#toXyzd50()), self.alpha),\n    [Format.REC_2020]: (self: Lab) =>\n        new ColorFunction(Format.REC_2020, ...ColorConverter.xyzd50ToRec2020(...self.#toXyzd50()), self.alpha),\n    [Format.XYZ]: (self: Lab) =>\n        new ColorFunction(Format.XYZ, ...ColorConverter.xyzd50ToD65(...self.#toXyzd50()), self.alpha),\n    [Format.XYZ_D50]: (self: Lab) => new ColorFunction(Format.XYZ_D50, ...self.#toXyzd50(), self.alpha),\n    [Format.XYZ_D65]: (self: Lab) =>\n        new ColorFunction(Format.XYZ_D65, ...ColorConverter.xyzd50ToD65(...self.#toXyzd50()), self.alpha),\n  };\n\n  #toXyzd50(): Color3D {\n    return ColorConverter.labToXyzd50(this.l, this.a, this.b);\n  }\n\n  #getRGBArray(withAlpha: true): Color4DOr3D;\n  #getRGBArray(withAlpha: false): Color3D;\n  #getRGBArray(withAlpha = true): Color3D|Color4DOr3D {\n    const params = ColorConverter.xyzd50ToSrgb(...this.#toXyzd50());\n    if (withAlpha) {\n      return [...params, this.alpha ?? undefined];\n    }\n    return params;\n  }\n\n  constructor(l: number, a: number, b: number, alpha: number|null, authoredText?: string|undefined) {\n    this.#rawParams = [l, a, b];\n    this.l = clamp(l, {min: 0, max: 100});\n    if (equals(this.l, 0, WIDE_RANGE_EPSILON) || equals(this.l, 100, WIDE_RANGE_EPSILON)) {\n      a = b = 0;\n    }\n    this.a = a;\n    this.b = b;\n    this.alpha = clamp(alpha, {min: 0, max: 1});\n    this.#authoredText = authoredText;\n  }\n  is<T extends Format>(format: T): this is ReturnType<ColorConversions[T]> {\n    return format === this.format();\n  }\n  as<T extends Format>(format: T): ReturnType<ColorConversions[T]> {\n    return Lab.#conversions[format](this) as ReturnType<ColorConversions[T]>;\n  }\n  asLegacyColor(): Legacy {\n    return this.as(Format.RGBA);\n  }\n  equal(color: Color): boolean {\n    const lab = color.as(Format.LAB);\n    return equals(lab.l, this.l, WIDE_RANGE_EPSILON) && equals(lab.a, this.a) && equals(lab.b, this.b) &&\n        equals(lab.alpha, this.alpha);\n  }\n  format(): Format {\n    return Format.LAB;\n  }\n  setAlpha(alpha: number): Lab {\n    return new Lab(this.l, this.a, this.b, alpha, undefined);\n  }\n  asString(format?: Format): string {\n    if (format) {\n      return this.as(format).asString();\n    }\n    return this.#stringify(this.l, this.a, this.b);\n  }\n  #stringify(l: number, a: number, b: number): string {\n    const alpha = this.alpha === null || equals(this.alpha, 1) ?\n        '' :\n        ` / ${Platform.StringUtilities.stringifyWithPrecision(this.alpha)}`;\n    return `lab(${Platform.StringUtilities.stringifyWithPrecision(l, 0)} ${\n        Platform.StringUtilities.stringifyWithPrecision(\n            a)} ${Platform.StringUtilities.stringifyWithPrecision(b)}${alpha})`;\n  }\n  getAuthoredText(): string|null {\n    return this.#authoredText ?? null;\n  }\n\n  getRawParameters(): Color3D {\n    return [...this.#rawParams];\n  }\n  getAsRawString(format?: Format): string {\n    if (format) {\n      return this.as(format).getAsRawString();\n    }\n    return this.#stringify(...this.#rawParams);\n  }\n  isGamutClipped(): boolean {\n    return false;\n  }\n\n  static fromSpec(spec: ColorParameterSpec, text: string): Lab|null {\n    const L = parsePercentage(spec[0], [0, 100]) ?? parseNumber(spec[0]);\n    if (L === null) {\n      return null;\n    }\n    const a = parsePercentage(spec[1], [0, 125]) ?? parseNumber(spec[1]);\n    if (a === null) {\n      return null;\n    }\n    const b = parsePercentage(spec[2], [0, 125]) ?? parseNumber(spec[2]);\n    if (b === null) {\n      return null;\n    }\n    const alpha = parseAlpha(spec[3]);\n\n    return new Lab(L, a, b, alpha, text);\n  }\n}\n\nexport class LCH implements Color {\n  readonly #rawParams: Color3D;\n  readonly l: number;\n  readonly c: number;\n  readonly h: number;\n  readonly alpha: number|null;\n  readonly #authoredText?: string;\n  readonly channels: [ColorChannel, ColorChannel, ColorChannel, ColorChannel] =\n      [ColorChannel.L, ColorChannel.C, ColorChannel.H, ColorChannel.ALPHA];\n\n  static readonly #conversions: ColorConversions<LCH> = {\n    [Format.HEX]: (self: LCH) => new Legacy(self.#getRGBArray(/* withAlpha= */ false), Format.HEX),\n    [Format.HEXA]: (self: LCH) => new Legacy(self.#getRGBArray(/* withAlpha= */ true), Format.HEXA),\n    [Format.RGB]: (self: LCH) => new Legacy(self.#getRGBArray(/* withAlpha= */ false), Format.RGB),\n    [Format.RGBA]: (self: LCH) => new Legacy(self.#getRGBArray(/* withAlpha= */ true), Format.RGBA),\n    [Format.HSL]: (self: LCH) => new HSL(...rgbToHsl(self.#getRGBArray(/* withAlpha= */ false)), self.alpha),\n    [Format.HSLA]: (self: LCH) => new HSL(...rgbToHsl(self.#getRGBArray(/* withAlpha= */ false)), self.alpha),\n    [Format.HWB]: (self: LCH) => new HWB(...rgbToHwb(self.#getRGBArray(/* withAlpha= */ false)), self.alpha),\n    [Format.HWBA]: (self: LCH) => new HWB(...rgbToHwb(self.#getRGBArray(/* withAlpha= */ false)), self.alpha),\n    [Format.LCH]: (self: LCH) => self,\n    [Format.OKLCH]: (self: LCH) => new Oklch(...ColorConverter.xyzd50ToOklch(...self.#toXyzd50()), self.alpha),\n    [Format.LAB]: (self: LCH) => new Lab(...ColorConverter.lchToLab(self.l, self.c, self.h), self.alpha),\n    [Format.OKLAB]: (self: LCH) =>\n        new Oklab(...ColorConverter.xyzd65ToOklab(...ColorConverter.xyzd50ToD65(...self.#toXyzd50())), self.alpha),\n\n    [Format.SRGB]: (self: LCH) =>\n        new ColorFunction(Format.SRGB, ...ColorConverter.xyzd50ToSrgb(...self.#toXyzd50()), self.alpha),\n    [Format.SRGB_LINEAR]: (self: LCH) =>\n        new ColorFunction(Format.SRGB_LINEAR, ...ColorConverter.xyzd50TosRGBLinear(...self.#toXyzd50()), self.alpha),\n    [Format.DISPLAY_P3]: (self: LCH) =>\n        new ColorFunction(Format.DISPLAY_P3, ...ColorConverter.xyzd50ToDisplayP3(...self.#toXyzd50()), self.alpha),\n    [Format.A98_RGB]: (self: LCH) =>\n        new ColorFunction(Format.A98_RGB, ...ColorConverter.xyzd50ToAdobeRGB(...self.#toXyzd50()), self.alpha),\n    [Format.PROPHOTO_RGB]: (self: LCH) =>\n        new ColorFunction(Format.PROPHOTO_RGB, ...ColorConverter.xyzd50ToProPhoto(...self.#toXyzd50()), self.alpha),\n    [Format.REC_2020]: (self: LCH) =>\n        new ColorFunction(Format.REC_2020, ...ColorConverter.xyzd50ToRec2020(...self.#toXyzd50()), self.alpha),\n    [Format.XYZ]: (self: LCH) =>\n        new ColorFunction(Format.XYZ, ...ColorConverter.xyzd50ToD65(...self.#toXyzd50()), self.alpha),\n    [Format.XYZ_D50]: (self: LCH) => new ColorFunction(Format.XYZ_D50, ...self.#toXyzd50(), self.alpha),\n    [Format.XYZ_D65]: (self: LCH) =>\n        new ColorFunction(Format.XYZ_D65, ...ColorConverter.xyzd50ToD65(...self.#toXyzd50()), self.alpha),\n  };\n\n  #toXyzd50(): Color3D {\n    return ColorConverter.labToXyzd50(...ColorConverter.lchToLab(this.l, this.c, this.h));\n  }\n\n  #getRGBArray(withAlpha: true): Color4DOr3D;\n  #getRGBArray(withAlpha: false): Color3D;\n  #getRGBArray(withAlpha = true): Color4DOr3D|Color3D {\n    const params = ColorConverter.xyzd50ToSrgb(...this.#toXyzd50());\n    if (withAlpha) {\n      return [...params, this.alpha ?? undefined];\n    }\n    return params;\n  }\n\n  constructor(l: number, c: number, h: number, alpha: number|null, authoredText?: string|undefined) {\n    this.#rawParams = [l, c, h];\n    this.l = clamp(l, {min: 0, max: 100});\n    c = equals(this.l, 0, WIDE_RANGE_EPSILON) || equals(this.l, 100, WIDE_RANGE_EPSILON) ? 0 : c;\n    this.c = clamp(c, {min: 0});\n    h = equals(c, 0) ? 0 : h;\n    this.h = normalizeHue(h);\n    this.alpha = clamp(alpha, {min: 0, max: 1});\n    this.#authoredText = authoredText;\n  }\n  asLegacyColor(): Legacy {\n    return this.as(Format.RGBA);\n  }\n  is<T extends Format>(format: T): this is ReturnType<ColorConversions[T]> {\n    return format === this.format();\n  }\n  as<T extends Format>(format: T): ReturnType<ColorConversions[T]> {\n    return LCH.#conversions[format](this) as ReturnType<ColorConversions[T]>;\n  }\n  equal(color: Color): boolean {\n    const lch = color.as(Format.LCH);\n    return equals(lch.l, this.l, WIDE_RANGE_EPSILON) && equals(lch.c, this.c) && equals(lch.h, this.h) &&\n        equals(lch.alpha, this.alpha);\n  }\n  format(): Format {\n    return Format.LCH;\n  }\n  setAlpha(alpha: number): Color {\n    return new LCH(this.l, this.c, this.h, alpha);\n  }\n  asString(format?: Format): string {\n    if (format) {\n      return this.as(format).asString();\n    }\n    return this.#stringify(this.l, this.c, this.h);\n  }\n  #stringify(l: number, c: number, h: number): string {\n    const alpha = this.alpha === null || equals(this.alpha, 1) ?\n        '' :\n        ` / ${Platform.StringUtilities.stringifyWithPrecision(this.alpha)}`;\n    return `lch(${Platform.StringUtilities.stringifyWithPrecision(l, 0)} ${\n        Platform.StringUtilities.stringifyWithPrecision(\n            c)} ${Platform.StringUtilities.stringifyWithPrecision(h)}${alpha})`;\n  }\n  getAuthoredText(): string|null {\n    return this.#authoredText ?? null;\n  }\n\n  getRawParameters(): Color3D {\n    return [...this.#rawParams];\n  }\n  getAsRawString(format?: Format): string {\n    if (format) {\n      return this.as(format).getAsRawString();\n    }\n    return this.#stringify(...this.#rawParams);\n  }\n  isGamutClipped(): boolean {\n    return false;\n  }\n  // See \"powerless\" component definitions in\n  // https://www.w3.org/TR/css-color-4/#specifying-lab-lch\n  isHuePowerless(): boolean {\n    return equals(this.c, 0);\n  }\n  static fromSpec(spec: ColorParameterSpec, text: string): LCH|null {\n    const L = parsePercentage(spec[0], [0, 100]) ?? parseNumber(spec[0]);\n    if (L === null) {\n      return null;\n    }\n    const c = parsePercentage(spec[1], [0, 150]) ?? parseNumber(spec[1]);\n    if (c === null) {\n      return null;\n    }\n    const h = parseAngle(spec[2]);\n    if (h === null) {\n      return null;\n    }\n    const alpha = parseAlpha(spec[3]);\n\n    return new LCH(L, c, h, alpha, text);\n  }\n}\n\nexport class Oklab implements Color {\n  readonly #rawParams: Color3D;\n  readonly l: number;\n  readonly a: number;\n  readonly b: number;\n  readonly alpha: number|null;\n  readonly #authoredText?: string;\n  readonly channels: [ColorChannel, ColorChannel, ColorChannel, ColorChannel] =\n      [ColorChannel.L, ColorChannel.A, ColorChannel.B, ColorChannel.ALPHA];\n\n  static readonly #conversions: ColorConversions<Oklab> = {\n    [Format.HEX]: (self: Oklab) => new Legacy(self.#getRGBArray(/* withAlpha= */ false), Format.HEX),\n    [Format.HEXA]: (self: Oklab) => new Legacy(self.#getRGBArray(/* withAlpha= */ true), Format.HEXA),\n    [Format.RGB]: (self: Oklab) => new Legacy(self.#getRGBArray(/* withAlpha= */ false), Format.RGB),\n    [Format.RGBA]: (self: Oklab) => new Legacy(self.#getRGBArray(/* withAlpha= */ true), Format.RGBA),\n    [Format.HSL]: (self: Oklab) => new HSL(...rgbToHsl(self.#getRGBArray(/* withAlpha= */ false)), self.alpha),\n    [Format.HSLA]: (self: Oklab) => new HSL(...rgbToHsl(self.#getRGBArray(/* withAlpha= */ false)), self.alpha),\n    [Format.HWB]: (self: Oklab) => new HWB(...rgbToHwb(self.#getRGBArray(/* withAlpha= */ false)), self.alpha),\n    [Format.HWBA]: (self: Oklab) => new HWB(...rgbToHwb(self.#getRGBArray(/* withAlpha= */ false)), self.alpha),\n    [Format.LCH]: (self: Oklab) =>\n        new LCH(...ColorConverter.labToLch(...ColorConverter.xyzd50ToLab(...self.#toXyzd50())), self.alpha),\n    [Format.OKLCH]: (self: Oklab) => new Oklch(...ColorConverter.xyzd50ToOklch(...self.#toXyzd50()), self.alpha),\n    [Format.LAB]: (self: Oklab) => new Lab(...ColorConverter.xyzd50ToLab(...self.#toXyzd50()), self.alpha),\n    [Format.OKLAB]: (self: Oklab) => self,\n\n    [Format.SRGB]: (self: Oklab) =>\n        new ColorFunction(Format.SRGB, ...ColorConverter.xyzd50ToSrgb(...self.#toXyzd50()), self.alpha),\n    [Format.SRGB_LINEAR]: (self: Oklab) =>\n        new ColorFunction(Format.SRGB_LINEAR, ...ColorConverter.xyzd50TosRGBLinear(...self.#toXyzd50()), self.alpha),\n    [Format.DISPLAY_P3]: (self: Oklab) =>\n        new ColorFunction(Format.DISPLAY_P3, ...ColorConverter.xyzd50ToDisplayP3(...self.#toXyzd50()), self.alpha),\n    [Format.A98_RGB]: (self: Oklab) =>\n        new ColorFunction(Format.A98_RGB, ...ColorConverter.xyzd50ToAdobeRGB(...self.#toXyzd50()), self.alpha),\n    [Format.PROPHOTO_RGB]: (self: Oklab) =>\n        new ColorFunction(Format.PROPHOTO_RGB, ...ColorConverter.xyzd50ToProPhoto(...self.#toXyzd50()), self.alpha),\n    [Format.REC_2020]: (self: Oklab) =>\n        new ColorFunction(Format.REC_2020, ...ColorConverter.xyzd50ToRec2020(...self.#toXyzd50()), self.alpha),\n    [Format.XYZ]: (self: Oklab) =>\n        new ColorFunction(Format.XYZ, ...ColorConverter.xyzd50ToD65(...self.#toXyzd50()), self.alpha),\n    [Format.XYZ_D50]: (self: Oklab) => new ColorFunction(Format.XYZ_D50, ...self.#toXyzd50(), self.alpha),\n    [Format.XYZ_D65]: (self: Oklab) =>\n        new ColorFunction(Format.XYZ_D65, ...ColorConverter.xyzd50ToD65(...self.#toXyzd50()), self.alpha),\n  };\n\n  #toXyzd50(): Color3D {\n    return ColorConverter.xyzd65ToD50(...ColorConverter.oklabToXyzd65(this.l, this.a, this.b));\n  }\n\n  #getRGBArray(withAlpha: true): Color4DOr3D;\n  #getRGBArray(withAlpha: false): Color3D;\n  #getRGBArray(withAlpha = true): Color4DOr3D|Color3D {\n    const params = ColorConverter.xyzd50ToSrgb(...this.#toXyzd50());\n    if (withAlpha) {\n      return [...params, this.alpha ?? undefined];\n    }\n    return params;\n  }\n\n  constructor(l: number, a: number, b: number, alpha: number|null, authoredText?: string|undefined) {\n    this.#rawParams = [l, a, b];\n    this.l = clamp(l, {min: 0, max: 1});\n    if (equals(this.l, 0) || equals(this.l, 1)) {\n      a = b = 0;\n    }\n    this.a = a;\n    this.b = b;\n    this.alpha = clamp(alpha, {min: 0, max: 1});\n    this.#authoredText = authoredText;\n  }\n  asLegacyColor(): Legacy {\n    return this.as(Format.RGBA);\n  }\n  is<T extends Format>(format: T): this is ReturnType<ColorConversions[T]> {\n    return format === this.format();\n  }\n  as<T extends Format>(format: T): ReturnType<ColorConversions[T]> {\n    return Oklab.#conversions[format](this) as ReturnType<ColorConversions[T]>;\n  }\n  equal(color: Color): boolean {\n    const oklab = color.as(Format.OKLAB);\n    return equals(oklab.l, this.l) && equals(oklab.a, this.a) && equals(oklab.b, this.b) &&\n        equals(oklab.alpha, this.alpha);\n  }\n  format(): Format {\n    return Format.OKLAB;\n  }\n  setAlpha(alpha: number): Color {\n    return new Oklab(this.l, this.a, this.b, alpha);\n  }\n  asString(format?: Format): string {\n    if (format) {\n      return this.as(format).asString();\n    }\n    return this.#stringify(this.l, this.a, this.b);\n  }\n  #stringify(l: number, a: number, b: number): string {\n    const alpha = this.alpha === null || equals(this.alpha, 1) ?\n        '' :\n        ` / ${Platform.StringUtilities.stringifyWithPrecision(this.alpha)}`;\n    return `oklab(${Platform.StringUtilities.stringifyWithPrecision(l)} ${\n        Platform.StringUtilities.stringifyWithPrecision(\n            a)} ${Platform.StringUtilities.stringifyWithPrecision(b)}${alpha})`;\n  }\n  getAuthoredText(): string|null {\n    return this.#authoredText ?? null;\n  }\n\n  getRawParameters(): Color3D {\n    return [...this.#rawParams];\n  }\n  getAsRawString(format?: Format): string {\n    if (format) {\n      return this.as(format).getAsRawString();\n    }\n    return this.#stringify(...this.#rawParams);\n  }\n  isGamutClipped(): boolean {\n    return false;\n  }\n\n  static fromSpec(spec: ColorParameterSpec, text: string): Oklab|null {\n    const L = parsePercentage(spec[0], [0, 1]) ?? parseNumber(spec[0]);\n    if (L === null) {\n      return null;\n    }\n    const a = parsePercentage(spec[1], [0, 0.4]) ?? parseNumber(spec[1]);\n    if (a === null) {\n      return null;\n    }\n    const b = parsePercentage(spec[2], [0, 0.4]) ?? parseNumber(spec[2]);\n    if (b === null) {\n      return null;\n    }\n    const alpha = parseAlpha(spec[3]);\n\n    return new Oklab(L, a, b, alpha, text);\n  }\n}\n\nexport class Oklch implements Color {\n  readonly #rawParams: Color3D;\n  readonly l: number;\n  readonly c: number;\n  readonly h: number;\n  readonly alpha: number|null;\n  readonly #authoredText?: string;\n  readonly channels: [ColorChannel, ColorChannel, ColorChannel, ColorChannel] =\n      [ColorChannel.L, ColorChannel.C, ColorChannel.H, ColorChannel.ALPHA];\n\n  static readonly #conversions: ColorConversions<Oklch> = {\n    [Format.HEX]: (self: Oklch) => new Legacy(self.#getRGBArray(/* withAlpha= */ false), Format.HEX),\n    [Format.HEXA]: (self: Oklch) => new Legacy(self.#getRGBArray(/* withAlpha= */ true), Format.HEXA),\n    [Format.RGB]: (self: Oklch) => new Legacy(self.#getRGBArray(/* withAlpha= */ false), Format.RGB),\n    [Format.RGBA]: (self: Oklch) => new Legacy(self.#getRGBArray(/* withAlpha= */ true), Format.RGBA),\n    [Format.HSL]: (self: Oklch) => new HSL(...rgbToHsl(self.#getRGBArray(/* withAlpha= */ false)), self.alpha),\n    [Format.HSLA]: (self: Oklch) => new HSL(...rgbToHsl(self.#getRGBArray(/* withAlpha= */ false)), self.alpha),\n    [Format.HWB]: (self: Oklch) => new HWB(...rgbToHwb(self.#getRGBArray(/* withAlpha= */ false)), self.alpha),\n    [Format.HWBA]: (self: Oklch) => new HWB(...rgbToHwb(self.#getRGBArray(/* withAlpha= */ false)), self.alpha),\n    [Format.LCH]: (self: Oklch) =>\n        new LCH(...ColorConverter.labToLch(...ColorConverter.xyzd50ToLab(...self.#toXyzd50())), self.alpha),\n    [Format.OKLCH]: (self: Oklch) => self,\n    [Format.LAB]: (self: Oklch) => new Lab(...ColorConverter.xyzd50ToLab(...self.#toXyzd50()), self.alpha),\n    [Format.OKLAB]: (self: Oklch) =>\n        new Oklab(...ColorConverter.xyzd65ToOklab(...ColorConverter.xyzd50ToD65(...self.#toXyzd50())), self.alpha),\n    [Format.SRGB]: (self: Oklch) =>\n        new ColorFunction(Format.SRGB, ...ColorConverter.xyzd50ToSrgb(...self.#toXyzd50()), self.alpha),\n    [Format.SRGB_LINEAR]: (self: Oklch) =>\n        new ColorFunction(Format.SRGB_LINEAR, ...ColorConverter.xyzd50TosRGBLinear(...self.#toXyzd50()), self.alpha),\n    [Format.DISPLAY_P3]: (self: Oklch) =>\n        new ColorFunction(Format.DISPLAY_P3, ...ColorConverter.xyzd50ToDisplayP3(...self.#toXyzd50()), self.alpha),\n    [Format.A98_RGB]: (self: Oklch) =>\n        new ColorFunction(Format.A98_RGB, ...ColorConverter.xyzd50ToAdobeRGB(...self.#toXyzd50()), self.alpha),\n    [Format.PROPHOTO_RGB]: (self: Oklch) =>\n        new ColorFunction(Format.PROPHOTO_RGB, ...ColorConverter.xyzd50ToProPhoto(...self.#toXyzd50()), self.alpha),\n    [Format.REC_2020]: (self: Oklch) =>\n        new ColorFunction(Format.REC_2020, ...ColorConverter.xyzd50ToRec2020(...self.#toXyzd50()), self.alpha),\n    [Format.XYZ]: (self: Oklch) =>\n        new ColorFunction(Format.XYZ, ...ColorConverter.xyzd50ToD65(...self.#toXyzd50()), self.alpha),\n    [Format.XYZ_D50]: (self: Oklch) => new ColorFunction(Format.XYZ_D50, ...self.#toXyzd50(), self.alpha),\n    [Format.XYZ_D65]: (self: Oklch) =>\n        new ColorFunction(Format.XYZ_D65, ...ColorConverter.xyzd50ToD65(...self.#toXyzd50()), self.alpha),\n  };\n\n  #toXyzd50(): Color3D {\n    return ColorConverter.oklchToXyzd50(this.l, this.c, this.h);\n  }\n\n  #getRGBArray(withAlpha: true): Color4DOr3D;\n  #getRGBArray(withAlpha: false): Color3D;\n  #getRGBArray(withAlpha = true): Color4DOr3D|Color3D {\n    const params = ColorConverter.xyzd50ToSrgb(...this.#toXyzd50());\n    if (withAlpha) {\n      return [...params, this.alpha ?? undefined];\n    }\n    return params;\n  }\n\n  constructor(l: number, c: number, h: number, alpha: number|null, authoredText?: string|undefined) {\n    this.#rawParams = [l, c, h];\n    this.l = clamp(l, {min: 0, max: 1});\n    c = equals(this.l, 0) || equals(this.l, 1) ? 0 : c;\n    this.c = clamp(c, {min: 0});\n    h = equals(c, 0) ? 0 : h;\n    this.h = normalizeHue(h);\n    this.alpha = clamp(alpha, {min: 0, max: 1});\n    this.#authoredText = authoredText;\n  }\n  asLegacyColor(): Legacy {\n    return this.as(Format.RGBA);\n  }\n  is<T extends Format>(format: T): this is ReturnType<ColorConversions[T]> {\n    return format === this.format();\n  }\n  as<T extends Format>(format: T): ReturnType<ColorConversions[T]> {\n    return Oklch.#conversions[format](this) as ReturnType<ColorConversions[T]>;\n  }\n  equal(color: Color): boolean {\n    const oklch = color.as(Format.OKLCH);\n    return equals(oklch.l, this.l) && equals(oklch.c, this.c) && equals(oklch.h, this.h) &&\n        equals(oklch.alpha, this.alpha);\n  }\n  format(): Format {\n    return Format.OKLCH;\n  }\n  setAlpha(alpha: number): Color {\n    return new Oklch(this.l, this.c, this.h, alpha);\n  }\n  asString(format?: Format): string {\n    if (format) {\n      return this.as(format).asString();\n    }\n    return this.#stringify(this.l, this.c, this.h);\n  }\n  #stringify(l: number, c: number, h: number): string {\n    const alpha = this.alpha === null || equals(this.alpha, 1) ?\n        '' :\n        ` / ${Platform.StringUtilities.stringifyWithPrecision(this.alpha)}`;\n    return `oklch(${Platform.StringUtilities.stringifyWithPrecision(l)} ${\n        Platform.StringUtilities.stringifyWithPrecision(\n            c)} ${Platform.StringUtilities.stringifyWithPrecision(h)}${alpha})`;\n  }\n  getAuthoredText(): string|null {\n    return this.#authoredText ?? null;\n  }\n\n  getRawParameters(): Color3D {\n    return [...this.#rawParams];\n  }\n  getAsRawString(format?: Format): string {\n    if (format) {\n      return this.as(format).getAsRawString();\n    }\n    return this.#stringify(...this.#rawParams);\n  }\n  isGamutClipped(): boolean {\n    return false;\n  }\n\n  static fromSpec(spec: ColorParameterSpec, text: string): Oklch|null {\n    const L = parsePercentage(spec[0], [0, 1]) ?? parseNumber(spec[0]);\n    if (L === null) {\n      return null;\n    }\n    const c = parsePercentage(spec[1], [0, 0.4]) ?? parseNumber(spec[1]);\n    if (c === null) {\n      return null;\n    }\n    const h = parseAngle(spec[2]);\n    if (h === null) {\n      return null;\n    }\n    const alpha = parseAlpha(spec[3]);\n\n    return new Oklch(L, c, h, alpha, text);\n  }\n}\n\nexport class ColorFunction implements Color {\n  readonly #rawParams: Color3D;\n  readonly p0: number;\n  readonly p1: number;\n  readonly p2: number;\n  readonly alpha: number|null;\n  readonly colorSpace: ColorSpace;\n  readonly #authoredText?: string;\n  get channels(): [ColorChannel, ColorChannel, ColorChannel, ColorChannel] {\n    return this.isXYZ() ? [ColorChannel.X, ColorChannel.Y, ColorChannel.Z, ColorChannel.ALPHA] :\n                          [ColorChannel.R, ColorChannel.G, ColorChannel.B, ColorChannel.ALPHA];\n  }\n\n  static readonly #conversions: ColorConversions<ColorFunction> = {\n    [Format.HEX]: (self: ColorFunction) => new Legacy(self.#getRGBArray(/* withAlpha= */ false), Format.HEX),\n    [Format.HEXA]: (self: ColorFunction) => new Legacy(self.#getRGBArray(/* withAlpha= */ true), Format.HEXA),\n    [Format.RGB]: (self: ColorFunction) => new Legacy(self.#getRGBArray(/* withAlpha= */ false), Format.RGB),\n    [Format.RGBA]: (self: ColorFunction) => new Legacy(self.#getRGBArray(/* withAlpha= */ true), Format.RGBA),\n    [Format.HSL]: (self: ColorFunction) => new HSL(...rgbToHsl(self.#getRGBArray(/* withAlpha= */ false)), self.alpha),\n    [Format.HSLA]: (self: ColorFunction) => new HSL(...rgbToHsl(self.#getRGBArray(/* withAlpha= */ false)), self.alpha),\n    [Format.HWB]: (self: ColorFunction) => new HWB(...rgbToHwb(self.#getRGBArray(/* withAlpha= */ false)), self.alpha),\n    [Format.HWBA]: (self: ColorFunction) => new HWB(...rgbToHwb(self.#getRGBArray(/* withAlpha= */ false)), self.alpha),\n    [Format.LCH]: (self: ColorFunction) =>\n        new LCH(...ColorConverter.labToLch(...ColorConverter.xyzd50ToLab(...self.#toXyzd50())), self.alpha),\n    [Format.OKLCH]: (self: ColorFunction) =>\n        new Oklch(...ColorConverter.xyzd50ToOklch(...self.#toXyzd50()), self.alpha),\n    [Format.LAB]: (self: ColorFunction) => new Lab(...ColorConverter.xyzd50ToLab(...self.#toXyzd50()), self.alpha),\n    [Format.OKLAB]: (self: ColorFunction) =>\n        new Oklab(...ColorConverter.xyzd65ToOklab(...ColorConverter.xyzd50ToD65(...self.#toXyzd50())), self.alpha),\n\n    [Format.SRGB]: (self: ColorFunction) =>\n        new ColorFunction(Format.SRGB, ...ColorConverter.xyzd50ToSrgb(...self.#toXyzd50()), self.alpha),\n    [Format.SRGB_LINEAR]: (self: ColorFunction) =>\n        new ColorFunction(Format.SRGB_LINEAR, ...ColorConverter.xyzd50TosRGBLinear(...self.#toXyzd50()), self.alpha),\n    [Format.DISPLAY_P3]: (self: ColorFunction) =>\n        new ColorFunction(Format.DISPLAY_P3, ...ColorConverter.xyzd50ToDisplayP3(...self.#toXyzd50()), self.alpha),\n    [Format.A98_RGB]: (self: ColorFunction) =>\n        new ColorFunction(Format.A98_RGB, ...ColorConverter.xyzd50ToAdobeRGB(...self.#toXyzd50()), self.alpha),\n    [Format.PROPHOTO_RGB]: (self: ColorFunction) =>\n        new ColorFunction(Format.PROPHOTO_RGB, ...ColorConverter.xyzd50ToProPhoto(...self.#toXyzd50()), self.alpha),\n    [Format.REC_2020]: (self: ColorFunction) =>\n        new ColorFunction(Format.REC_2020, ...ColorConverter.xyzd50ToRec2020(...self.#toXyzd50()), self.alpha),\n    [Format.XYZ]: (self: ColorFunction) =>\n        new ColorFunction(Format.XYZ, ...ColorConverter.xyzd50ToD65(...self.#toXyzd50()), self.alpha),\n    [Format.XYZ_D50]: (self: ColorFunction) => new ColorFunction(Format.XYZ_D50, ...self.#toXyzd50(), self.alpha),\n    [Format.XYZ_D65]: (self: ColorFunction) =>\n        new ColorFunction(Format.XYZ_D65, ...ColorConverter.xyzd50ToD65(...self.#toXyzd50()), self.alpha),\n  };\n\n  #toXyzd50(): Color3D {\n    // With color(), out-of-gamut inputs are to be used for intermediate computations\n    const [p0, p1, p2] = this.#rawParams;\n    switch (this.colorSpace) {\n      case Format.SRGB:\n        return ColorConverter.srgbToXyzd50(p0, p1, p2);\n      case Format.SRGB_LINEAR:\n        return ColorConverter.srgbLinearToXyzd50(p0, p1, p2);\n      case Format.DISPLAY_P3:\n        return ColorConverter.displayP3ToXyzd50(p0, p1, p2);\n      case Format.A98_RGB:\n        return ColorConverter.adobeRGBToXyzd50(p0, p1, p2);\n      case Format.PROPHOTO_RGB:\n        return ColorConverter.proPhotoToXyzd50(p0, p1, p2);\n      case Format.REC_2020:\n        return ColorConverter.rec2020ToXyzd50(p0, p1, p2);\n      case Format.XYZ_D50:\n        return [p0, p1, p2];\n      case Format.XYZ:\n      case Format.XYZ_D65:\n        return ColorConverter.xyzd65ToD50(p0, p1, p2);\n    }\n    throw new Error('Invalid color space');\n  }\n\n  #getRGBArray(withAlpha: true): Color4DOr3D;\n  #getRGBArray(withAlpha: false): Color3D;\n  #getRGBArray(withAlpha = true): Color4DOr3D|Color3D {\n    // With color(), out-of-gamut inputs are to be used for intermediate computations\n    const [p0, p1, p2] = this.#rawParams;\n    const params: Color3D =\n        this.colorSpace === Format.SRGB ? [p0, p1, p2] : [...ColorConverter.xyzd50ToSrgb(...this.#toXyzd50())];\n    if (withAlpha) {\n      return [...params, this.alpha ?? undefined];\n    }\n    return params;\n  }\n\n  constructor(\n      colorSpace: ColorSpace, p0: number, p1: number, p2: number, alpha: number|null, authoredText?: string|undefined) {\n    this.#rawParams = [p0, p1, p2];\n    this.colorSpace = colorSpace;\n    this.#authoredText = authoredText;\n    if (this.colorSpace !== Format.XYZ_D50 && this.colorSpace !== Format.XYZ_D65 && this.colorSpace !== Format.XYZ) {\n      p0 = clamp(p0, {min: 0, max: 1});\n      p1 = clamp(p1, {min: 0, max: 1});\n      p2 = clamp(p2, {min: 0, max: 1});\n    }\n\n    this.p0 = p0;\n    this.p1 = p1;\n    this.p2 = p2;\n    this.alpha = clamp(alpha, {min: 0, max: 1});\n  }\n  asLegacyColor(): Legacy {\n    return this.as(Format.RGBA);\n  }\n  is<T extends Format>(format: T): this is ReturnType<ColorConversions[T]> {\n    return format === this.format();\n  }\n  as<T extends Format>(format: T): ReturnType<ColorConversions[T]> {\n    if (this.colorSpace === format) {\n      return this as ReturnType<ColorConversions[T]>;\n    }\n    return ColorFunction.#conversions[format](this) as ReturnType<ColorConversions[T]>;\n  }\n  equal(color: Color): boolean {\n    const space = color.as(this.colorSpace);\n    return equals(this.p0, space.p0) && equals(this.p1, space.p1) && equals(this.p2, space.p2) &&\n        equals(this.alpha, space.alpha);\n  }\n  format(): Format {\n    return this.colorSpace;\n  }\n  setAlpha(alpha: number): Color {\n    return new ColorFunction(this.colorSpace, this.p0, this.p1, this.p2, alpha);\n  }\n  asString(format?: Format): string {\n    if (format) {\n      return this.as(format).asString();\n    }\n    return this.#stringify(this.p0, this.p1, this.p2);\n  }\n  #stringify(p0: number, p1: number, p2: number): string {\n    const alpha = this.alpha === null || equals(this.alpha, 1) ?\n        '' :\n        ` / ${Platform.StringUtilities.stringifyWithPrecision(this.alpha)}`;\n    return `color(${this.colorSpace} ${Platform.StringUtilities.stringifyWithPrecision(p0)} ${\n        Platform.StringUtilities.stringifyWithPrecision(\n            p1)} ${Platform.StringUtilities.stringifyWithPrecision(p2)}${alpha})`;\n  }\n  getAuthoredText(): string|null {\n    return this.#authoredText ?? null;\n  }\n\n  getRawParameters(): Color3D {\n    return [...this.#rawParams];\n  }\n  getAsRawString(format?: Format): string {\n    if (format) {\n      return this.as(format).getAsRawString();\n    }\n    return this.#stringify(...this.#rawParams);\n  }\n  isGamutClipped(): boolean {\n    if (this.colorSpace !== Format.XYZ_D50 && this.colorSpace !== Format.XYZ_D65 && this.colorSpace !== Format.XYZ) {\n      return !equals(this.#rawParams, [this.p0, this.p1, this.p2]);\n    }\n    return false;\n  }\n\n  isXYZ(): boolean {\n    switch (this.colorSpace) {\n      case Format.XYZ:\n      case Format.XYZ_D50:\n      case Format.XYZ_D65:\n        return true;\n    }\n    return false;\n  }\n\n  /**\n   * Parses given `color()` function definition and returns the `Color` object.\n   * We want to special case its parsing here because it's a bit different\n   * than other color functions: rgb, lch etc. accepts 3 arguments with\n   * optional alpha. This accepts 4 arguments with optional alpha.\n   *\n   * Instead of making `splitColorFunctionParameters` work for this case too\n   * I've decided to implement it specifically.\n   * @param authoredText Original definition of the color with `color`\n   * @param parametersText Inside of the `color()` function. ex, `display-p3 0.1 0.2 0.3 / 0%`\n   * @returns `Color` object\n   */\n  static fromSpec(authoredText: string, parametersWithAlphaText: string): ColorFunction|null {\n    const [parametersText, alphaText] = parametersWithAlphaText.split('/', 2);\n    const parameters = parametersText.trim().split(/\\s+/);\n    const [colorSpaceText, ...remainingParams] = parameters;\n    const colorSpace = getColorSpace(colorSpaceText);\n    // Color space is not known to us, do not parse the Color.\n    if (!colorSpace) {\n      return null;\n    }\n\n    // `color(<color-space>)` is a valid syntax\n    if (remainingParams.length === 0 && alphaText === undefined) {\n      return new ColorFunction(colorSpace, 0, 0, 0, null, authoredText);\n    }\n\n    // Check if it contains `/ <alpha>` part, if so, it should be at the end\n    if (remainingParams.length === 0 && alphaText !== undefined && alphaText.trim().split(/\\s+/).length > 1) {\n      // Invalid syntax: like `color(<space> / <alpha> <number>)`\n      return null;\n    }\n\n    // `color` cannot contain more than 3 parameters without alpha\n    if (remainingParams.length > 3) {\n      return null;\n    }\n\n    // Replace `none`s with 0s\n    const nonesReplacedParams = remainingParams.map(param => param === 'none' ? '0' : param);\n\n    // At this point, we know that all the values are there so we can\n    // safely try to parse all the values as number or percentage\n    const values = nonesReplacedParams.map(param => parsePercentOrNumber(param, [0, 1]));\n    const containsNull = values.includes(null);\n    // At least one value is malformatted (not a number or percentage)\n    if (containsNull) {\n      return null;\n    }\n\n    const alphaValue = alphaText ? parsePercentOrNumber(alphaText, [0, 1]) ?? 1 : 1;\n\n    // Depending on the color space\n    // this either reflects `rgb` parameters in that color space\n    // or `xyz` parameters in the given `xyz` space.\n    const rgbOrXyza: Color4D = [\n      values[0] ?? 0,\n      values[1] ?? 0,\n      values[2] ?? 0,\n      alphaValue,\n    ];\n\n    return new ColorFunction(colorSpace, ...rgbOrXyza, authoredText);\n  }\n}\n\nexport class HSL implements Color {\n  readonly h: number;\n  readonly s: number;\n  readonly l: number;\n  readonly alpha: number|null;\n  readonly #rawParams: Color3D;\n  #authoredText: string|undefined;\n  readonly channels: [ColorChannel, ColorChannel, ColorChannel, ColorChannel] =\n      [ColorChannel.H, ColorChannel.S, ColorChannel.L, ColorChannel.ALPHA];\n\n  static readonly #conversions: ColorConversions<HSL> = {\n    [Format.HEX]: (self: HSL) => new Legacy(self.#getRGBArray(/* withAlpha= */ false), Format.HEX),\n    [Format.HEXA]: (self: HSL) => new Legacy(self.#getRGBArray(/* withAlpha= */ true), Format.HEXA),\n    [Format.RGB]: (self: HSL) => new Legacy(self.#getRGBArray(/* withAlpha= */ false), Format.RGB),\n    [Format.RGBA]: (self: HSL) => new Legacy(self.#getRGBArray(/* withAlpha= */ true), Format.RGBA),\n    [Format.HSL]: (self: HSL) => self,\n    [Format.HSLA]: (self: HSL) => self,\n    [Format.HWB]: (self: HSL) => new HWB(...rgbToHwb(self.#getRGBArray(/* withAlpha= */ false)), self.alpha),\n    [Format.HWBA]: (self: HSL) => new HWB(...rgbToHwb(self.#getRGBArray(/* withAlpha= */ false)), self.alpha),\n    [Format.LCH]: (self: HSL) =>\n        new LCH(...ColorConverter.labToLch(...ColorConverter.xyzd50ToLab(...self.#toXyzd50())), self.alpha),\n    [Format.OKLCH]: (self: HSL) => new Oklch(...ColorConverter.xyzd50ToOklch(...self.#toXyzd50()), self.alpha),\n    [Format.LAB]: (self: HSL) => new Lab(...ColorConverter.xyzd50ToLab(...self.#toXyzd50()), self.alpha),\n    [Format.OKLAB]: (self: HSL) =>\n        new Oklab(...ColorConverter.xyzd65ToOklab(...ColorConverter.xyzd50ToD65(...self.#toXyzd50())), self.alpha),\n\n    [Format.SRGB]: (self: HSL) =>\n        new ColorFunction(Format.SRGB, ...ColorConverter.xyzd50ToSrgb(...self.#toXyzd50()), self.alpha),\n    [Format.SRGB_LINEAR]: (self: HSL) =>\n        new ColorFunction(Format.SRGB_LINEAR, ...ColorConverter.xyzd50TosRGBLinear(...self.#toXyzd50()), self.alpha),\n    [Format.DISPLAY_P3]: (self: HSL) =>\n        new ColorFunction(Format.DISPLAY_P3, ...ColorConverter.xyzd50ToDisplayP3(...self.#toXyzd50()), self.alpha),\n    [Format.A98_RGB]: (self: HSL) =>\n        new ColorFunction(Format.A98_RGB, ...ColorConverter.xyzd50ToAdobeRGB(...self.#toXyzd50()), self.alpha),\n    [Format.PROPHOTO_RGB]: (self: HSL) =>\n        new ColorFunction(Format.PROPHOTO_RGB, ...ColorConverter.xyzd50ToProPhoto(...self.#toXyzd50()), self.alpha),\n    [Format.REC_2020]: (self: HSL) =>\n        new ColorFunction(Format.REC_2020, ...ColorConverter.xyzd50ToRec2020(...self.#toXyzd50()), self.alpha),\n    [Format.XYZ]: (self: HSL) =>\n        new ColorFunction(Format.XYZ, ...ColorConverter.xyzd50ToD65(...self.#toXyzd50()), self.alpha),\n    [Format.XYZ_D50]: (self: HSL) => new ColorFunction(Format.XYZ_D50, ...self.#toXyzd50(), self.alpha),\n    [Format.XYZ_D65]: (self: HSL) =>\n        new ColorFunction(Format.XYZ_D65, ...ColorConverter.xyzd50ToD65(...self.#toXyzd50()), self.alpha),\n  };\n\n  #getRGBArray(withAlpha: true): Color4DOr3D;\n  #getRGBArray(withAlpha: false): Color3D;\n  #getRGBArray(withAlpha = true): Color4DOr3D|Color3D {\n    const rgb = hsl2rgb([this.h, this.s, this.l, 0]);\n    if (withAlpha) {\n      return [rgb[0], rgb[1], rgb[2], this.alpha ?? undefined];\n    }\n    return [rgb[0], rgb[1], rgb[2]];\n  }\n\n  #toXyzd50(): Color3D {\n    const rgb = this.#getRGBArray(false);\n    return ColorConverter.srgbToXyzd50(rgb[0], rgb[1], rgb[2]);\n  }\n\n  constructor(h: number, s: number, l: number, alpha: number|null|undefined, authoredText?: string) {\n    this.#rawParams = [h, s, l];\n    this.l = clamp(l, {min: 0, max: 1});\n    s = equals(this.l, 0) || equals(this.l, 1) ? 0 : s;\n    this.s = clamp(s, {min: 0, max: 1});\n    h = equals(this.s, 0) ? 0 : h;\n    this.h = normalizeHue(h * 360) / 360;\n    this.alpha = clamp(alpha ?? null, {min: 0, max: 1});\n    this.#authoredText = authoredText;\n  }\n\n  equal(color: Color): boolean {\n    const hsl = color.as(Format.HSL);\n    return equals(this.h, hsl.h) && equals(this.s, hsl.s) && equals(this.l, hsl.l) && equals(this.alpha, hsl.alpha);\n  }\n  asString(format?: Format|undefined): string {\n    if (format) {\n      return this.as(format).asString();\n    }\n    return this.#stringify(this.h, this.s, this.l);\n  }\n  #stringify(h: number, s: number, l: number): string {\n    const start = Platform.StringUtilities.sprintf(\n        'hsl(%sdeg %s% %s%', Platform.StringUtilities.stringifyWithPrecision(h * 360),\n        Platform.StringUtilities.stringifyWithPrecision(s * 100),\n        Platform.StringUtilities.stringifyWithPrecision(l * 100));\n    if (this.alpha !== null && this.alpha !== 1) {\n      return start +\n          Platform.StringUtilities.sprintf(\n              ' / %s%)', Platform.StringUtilities.stringifyWithPrecision(this.alpha * 100));\n    }\n    return start + ')';\n  }\n  setAlpha(alpha: number): HSL {\n    return new HSL(this.h, this.s, this.l, alpha);\n  }\n  format(): Format {\n    return this.alpha === null || this.alpha === 1 ? Format.HSL : Format.HSLA;\n  }\n  is<T extends Format>(format: T): this is ReturnType<ColorConversions[T]> {\n    return format === this.format();\n  }\n  as<T extends Format>(format: T): ReturnType<ColorConversions[T]> {\n    if (format === this.format()) {\n      return this as ReturnType<ColorConversions[T]>;\n    }\n    return HSL.#conversions[format](this) as ReturnType<ColorConversions[T]>;\n  }\n  asLegacyColor(): Legacy {\n    return this.as(Format.RGBA);\n  }\n  getAuthoredText(): string|null {\n    return this.#authoredText ?? null;\n  }\n  getRawParameters(): Color3D {\n    return [...this.#rawParams];\n  }\n  getAsRawString(format?: Format): string {\n    if (format) {\n      return this.as(format).getAsRawString();\n    }\n    return this.#stringify(...this.#rawParams);\n  }\n  isGamutClipped(): boolean {\n    return !lessOrEquals(this.#rawParams[1], 1) || !lessOrEquals(0, this.#rawParams[1]);\n  }\n\n  static fromSpec(spec: ColorParameterSpec, text: string): HSL|null {\n    const h = parseHueNumeric(spec[0]);\n    if (h === null) {\n      return null;\n    }\n    const s = parseSatLightNumeric(spec[1]);\n    if (s === null) {\n      return null;\n    }\n    const l = parseSatLightNumeric(spec[2]);\n    if (l === null) {\n      return null;\n    }\n    const alpha = parseAlpha(spec[3]);\n\n    return new HSL(h, s, l, alpha, text);\n  }\n\n  hsva(): Color4D {\n    const s = this.s * (this.l < 0.5 ? this.l : 1 - this.l);\n    return [this.h, s !== 0 ? 2 * s / (this.l + s) : 0, (this.l + s), this.alpha ?? 1];\n  }\n  canonicalHSLA(): number[] {\n    return [Math.round(this.h * 360), Math.round(this.s * 100), Math.round(this.l * 100), this.alpha ?? 1];\n  }\n}\n\nexport class HWB implements Color {\n  readonly h: number;\n  readonly w: number;\n  readonly b: number;\n  readonly alpha: number|null;\n  readonly #rawParams: Color3D;\n  #authoredText: string|undefined;\n  readonly channels: [ColorChannel, ColorChannel, ColorChannel, ColorChannel] =\n      [ColorChannel.H, ColorChannel.W, ColorChannel.B, ColorChannel.ALPHA];\n\n  static readonly #conversions: ColorConversions<HWB> = {\n    [Format.HEX]: (self: HWB) => new Legacy(self.#getRGBArray(/* withAlpha= */ false), Format.HEX),\n    [Format.HEXA]: (self: HWB) => new Legacy(self.#getRGBArray(/* withAlpha= */ true), Format.HEXA),\n    [Format.RGB]: (self: HWB) => new Legacy(self.#getRGBArray(/* withAlpha= */ false), Format.RGB),\n    [Format.RGBA]: (self: HWB) => new Legacy(self.#getRGBArray(/* withAlpha= */ true), Format.RGBA),\n    [Format.HSL]: (self: HWB) => new HSL(...rgbToHsl(self.#getRGBArray(/* withAlpha= */ false)), self.alpha),\n    [Format.HSLA]: (self: HWB) => new HSL(...rgbToHsl(self.#getRGBArray(/* withAlpha= */ false)), self.alpha),\n    [Format.HWB]: (self: HWB) => self,\n    [Format.HWBA]: (self: HWB) => self,\n    [Format.LCH]: (self: HWB) =>\n        new LCH(...ColorConverter.labToLch(...ColorConverter.xyzd50ToLab(...self.#toXyzd50())), self.alpha),\n    [Format.OKLCH]: (self: HWB) => new Oklch(...ColorConverter.xyzd50ToOklch(...self.#toXyzd50()), self.alpha),\n    [Format.LAB]: (self: HWB) => new Lab(...ColorConverter.xyzd50ToLab(...self.#toXyzd50()), self.alpha),\n    [Format.OKLAB]: (self: HWB) =>\n        new Oklab(...ColorConverter.xyzd65ToOklab(...ColorConverter.xyzd50ToD65(...self.#toXyzd50())), self.alpha),\n\n    [Format.SRGB]: (self: HWB) =>\n        new ColorFunction(Format.SRGB, ...ColorConverter.xyzd50ToSrgb(...self.#toXyzd50()), self.alpha),\n    [Format.SRGB_LINEAR]: (self: HWB) =>\n        new ColorFunction(Format.SRGB_LINEAR, ...ColorConverter.xyzd50TosRGBLinear(...self.#toXyzd50()), self.alpha),\n    [Format.DISPLAY_P3]: (self: HWB) =>\n        new ColorFunction(Format.DISPLAY_P3, ...ColorConverter.xyzd50ToDisplayP3(...self.#toXyzd50()), self.alpha),\n    [Format.A98_RGB]: (self: HWB) =>\n        new ColorFunction(Format.A98_RGB, ...ColorConverter.xyzd50ToAdobeRGB(...self.#toXyzd50()), self.alpha),\n    [Format.PROPHOTO_RGB]: (self: HWB) =>\n        new ColorFunction(Format.PROPHOTO_RGB, ...ColorConverter.xyzd50ToProPhoto(...self.#toXyzd50()), self.alpha),\n    [Format.REC_2020]: (self: HWB) =>\n        new ColorFunction(Format.REC_2020, ...ColorConverter.xyzd50ToRec2020(...self.#toXyzd50()), self.alpha),\n    [Format.XYZ]: (self: HWB) =>\n        new ColorFunction(Format.XYZ, ...ColorConverter.xyzd50ToD65(...self.#toXyzd50()), self.alpha),\n    [Format.XYZ_D50]: (self: HWB) => new ColorFunction(Format.XYZ_D50, ...self.#toXyzd50(), self.alpha),\n    [Format.XYZ_D65]: (self: HWB) =>\n        new ColorFunction(Format.XYZ_D65, ...ColorConverter.xyzd50ToD65(...self.#toXyzd50()), self.alpha),\n  };\n\n  #getRGBArray(withAlpha: true): Color4DOr3D;\n  #getRGBArray(withAlpha: false): Color3D;\n  #getRGBArray(withAlpha = true): Color4DOr3D|Color3D {\n    const rgb = hwb2rgb([this.h, this.w, this.b, 0]);\n    if (withAlpha) {\n      return [rgb[0], rgb[1], rgb[2], this.alpha ?? undefined];\n    }\n    return [rgb[0], rgb[1], rgb[2]];\n  }\n\n  #toXyzd50(): Color3D {\n    const rgb = this.#getRGBArray(false);\n    return ColorConverter.srgbToXyzd50(rgb[0], rgb[1], rgb[2]);\n  }\n  constructor(h: number, w: number, b: number, alpha: number|null, authoredText?: string) {\n    this.#rawParams = [h, w, b];\n    this.w = clamp(w, {min: 0, max: 1});\n    this.b = clamp(b, {min: 0, max: 1});\n    h = lessOrEquals(1, this.w + this.b) ? 0 : h;\n    this.h = normalizeHue(h * 360) / 360;\n    this.alpha = clamp(alpha, {min: 0, max: 1});\n    if (lessOrEquals(1, this.w + this.b)) {\n      // normalize to a sum of 100% respecting the ratio, see https://www.w3.org/TR/css-color-4/#the-hwb-notation\n      const ratio = this.w / this.b;\n      this.b = 1 / (1 + ratio);\n      this.w = 1 - this.b;\n    }\n    this.#authoredText = authoredText;\n  }\n  equal(color: Color): boolean {\n    const hwb = color.as(Format.HWB);\n    return equals(this.h, hwb.h) && equals(this.w, hwb.w) && equals(this.b, hwb.b) && equals(this.alpha, hwb.alpha);\n  }\n  asString(format?: Format|undefined): string {\n    if (format) {\n      return this.as(format).asString();\n    }\n    return this.#stringify(this.h, this.w, this.b);\n  }\n  #stringify(h: number, w: number, b: number): string {\n    const start = Platform.StringUtilities.sprintf(\n        'hwb(%sdeg %s% %s%', Platform.StringUtilities.stringifyWithPrecision(h * 360),\n        Platform.StringUtilities.stringifyWithPrecision(w * 100),\n        Platform.StringUtilities.stringifyWithPrecision(b * 100));\n    if (this.alpha !== null && this.alpha !== 1) {\n      return start +\n          Platform.StringUtilities.sprintf(\n              ' / %s%)', Platform.StringUtilities.stringifyWithPrecision(this.alpha * 100));\n    }\n    return start + ')';\n  }\n  setAlpha(alpha: number): HWB {\n    return new HWB(this.h, this.w, this.b, alpha, this.#authoredText);\n  }\n  format(): Format {\n    return this.alpha !== null && !equals(this.alpha, 1) ? Format.HWBA : Format.HWB;\n  }\n  is<T extends Format>(format: T): this is ReturnType<ColorConversions[T]> {\n    return format === this.format();\n  }\n  as<T extends Format>(format: T): ReturnType<ColorConversions[T]> {\n    if (format === this.format()) {\n      return this as ReturnType<ColorConversions[T]>;\n    }\n    return HWB.#conversions[format](this) as ReturnType<ColorConversions[T]>;\n  }\n  asLegacyColor(): Legacy {\n    return this.as(Format.RGBA);\n  }\n  getAuthoredText(): string|null {\n    return this.#authoredText ?? null;\n  }\n\n  canonicalHWBA(): number[] {\n    return [\n      Math.round(this.h * 360),\n      Math.round(this.w * 100),\n      Math.round(this.b * 100),\n      this.alpha ?? 1,\n    ];\n  }\n  getRawParameters(): Color3D {\n    return [...this.#rawParams];\n  }\n  getAsRawString(format?: Format): string {\n    if (format) {\n      return this.as(format).getAsRawString();\n    }\n    return this.#stringify(...this.#rawParams);\n  }\n  isGamutClipped(): boolean {\n    return !lessOrEquals(this.#rawParams[1], 1) || !lessOrEquals(0, this.#rawParams[1]) ||\n        !lessOrEquals(this.#rawParams[2], 1) || !lessOrEquals(0, this.#rawParams[2]);\n  }\n\n  static fromSpec(spec: ColorParameterSpec, text: string): HWB|null {\n    const h = parseHueNumeric(spec[0]);\n    if (h === null) {\n      return null;\n    }\n    const w = parseSatLightNumeric(spec[1]);\n    if (w === null) {\n      return null;\n    }\n    const b = parseSatLightNumeric(spec[2]);\n    if (b === null) {\n      return null;\n    }\n    const alpha = parseAlpha(spec[3]);\n    return new HWB(h, w, b, alpha, text);\n  }\n}\n\ntype LegacyColor = Format.HEX|Format.HEXA|Format.RGB|Format.RGBA;\n\nfunction toRgbValue(value: number): number {\n  return Math.round(value * 255);\n}\n\nabstract class ShortFormatColorBase implements Color {\n  protected readonly color: Legacy;\n  readonly channels: [ColorChannel, ColorChannel, ColorChannel, ColorChannel] =\n      [ColorChannel.R, ColorChannel.G, ColorChannel.B, ColorChannel.ALPHA];\n  constructor(color: Legacy) {\n    this.color = color;\n  }\n  get alpha(): number|null {\n    return this.color.alpha;\n  }\n  rgba(): Color4D {\n    return this.color.rgba();\n  }\n  equal(color: Color): boolean {\n    return this.color.equal(color);\n  }\n  setAlpha(alpha: number): Color {\n    return this.color.setAlpha(alpha);\n  }\n  format(): Format {\n    return (this.alpha ?? 1) !== 1 ? Format.HEXA : Format.HEX;\n  }\n  as<T extends Format>(format: T): ReturnType<ColorConversions<void>[T]> {\n    return this.color.as(format);\n  }\n  is<T extends Format>(format: T): this is ReturnType<ColorConversions<void>[T]> {\n    return this.color.is(format);\n  }\n  asLegacyColor(): Legacy {\n    return this.color.asLegacyColor();\n  }\n  getAuthoredText(): string|null {\n    return this.color.getAuthoredText();\n  }\n  getRawParameters(): Color3D {\n    return this.color.getRawParameters();\n  }\n  isGamutClipped(): boolean {\n    return this.color.isGamutClipped();\n  }\n  asString(format?: Format|undefined): string {\n    if (format) {\n      return this.as(format).asString();\n    }\n    const [r, g, b] = this.color.rgba();\n    return this.stringify(r, g, b);\n  }\n  getAsRawString(format?: Format): string {\n    if (format) {\n      return this.as(format).getAsRawString();\n    }\n    const [r, g, b] = this.getRawParameters();\n    return this.stringify(r, g, b);\n  }\n\n  protected abstract stringify(r: number, g: number, b: number): string;\n}\n\nexport class ShortHex extends ShortFormatColorBase {\n  override setAlpha(alpha: number): Color {\n    return new ShortHex(this.color.setAlpha(alpha));\n  }\n\n  override asString(format?: Format|undefined): string {\n    return format && format !== this.format() ? super.as(format).asString() : super.asString();\n  }\n\n  protected override stringify(r: number, g: number, b: number): string {\n    function toShortHexValue(value: number): string {\n      return (Math.round(value * 255) / 17).toString(16);\n    }\n\n    if (this.color.hasAlpha()) {\n      return Platform.StringUtilities\n          .sprintf(\n              '#%s%s%s%s', toShortHexValue(r), toShortHexValue(g), toShortHexValue(b), toShortHexValue(this.alpha ?? 1))\n          .toLowerCase();\n    }\n    return Platform.StringUtilities.sprintf('#%s%s%s', toShortHexValue(r), toShortHexValue(g), toShortHexValue(b))\n        .toLowerCase();\n  }\n}\n\nexport class Nickname extends ShortFormatColorBase {\n  readonly nickname: string;\n  constructor(nickname: string, color: Legacy) {\n    super(color);\n    this.nickname = nickname;\n  }\n\n  static fromName(name: string, text: string): Nickname|null {\n    const nickname = name.toLowerCase();\n    const rgba = Nicknames.get(nickname);\n    if (rgba !== undefined) {\n      return new Nickname(nickname, Legacy.fromRGBA(rgba, text));\n    }\n    return null;\n  }\n\n  protected override stringify(): string {\n    return this.nickname;\n  }\n\n  override getAsRawString(format?: Format|undefined): string {\n    return this.color.getAsRawString(format);\n  }\n}\n\nexport class Legacy implements Color {\n  readonly #rawParams: Color3D;\n  #rgba: Color4D;\n  readonly #authoredText: string|null;\n  #format: LegacyColor;\n  readonly channels: [ColorChannel, ColorChannel, ColorChannel, ColorChannel] =\n      [ColorChannel.R, ColorChannel.G, ColorChannel.B, ColorChannel.ALPHA];\n\n  static readonly #conversions: ColorConversions<Legacy> = {\n    [Format.HEX]: (self: Legacy) => new Legacy(self.#rgba, Format.HEX),\n    [Format.HEXA]: (self: Legacy) => new Legacy(self.#rgba, Format.HEXA),\n    [Format.RGB]: (self: Legacy) => new Legacy(self.#rgba, Format.RGB),\n    [Format.RGBA]: (self: Legacy) => new Legacy(self.#rgba, Format.RGBA),\n    [Format.HSL]: (self: Legacy) => new HSL(...rgbToHsl([self.#rgba[0], self.#rgba[1], self.#rgba[2]]), self.alpha),\n    [Format.HSLA]: (self: Legacy) => new HSL(...rgbToHsl([self.#rgba[0], self.#rgba[1], self.#rgba[2]]), self.alpha),\n    [Format.HWB]: (self: Legacy) => new HWB(...rgbToHwb([self.#rgba[0], self.#rgba[1], self.#rgba[2]]), self.alpha),\n    [Format.HWBA]: (self: Legacy) => new HWB(...rgbToHwb([self.#rgba[0], self.#rgba[1], self.#rgba[2]]), self.alpha),\n    [Format.LCH]: (self: Legacy) =>\n        new LCH(...ColorConverter.labToLch(...ColorConverter.xyzd50ToLab(...self.#toXyzd50())), self.alpha),\n    [Format.OKLCH]: (self: Legacy) => new Oklch(...ColorConverter.xyzd50ToOklch(...self.#toXyzd50()), self.alpha),\n    [Format.LAB]: (self: Legacy) => new Lab(...ColorConverter.xyzd50ToLab(...self.#toXyzd50()), self.alpha),\n    [Format.OKLAB]: (self: Legacy) =>\n        new Oklab(...ColorConverter.xyzd65ToOklab(...ColorConverter.xyzd50ToD65(...self.#toXyzd50())), self.alpha),\n    [Format.SRGB]: (self: Legacy) =>\n        new ColorFunction(Format.SRGB, ...ColorConverter.xyzd50ToSrgb(...self.#toXyzd50()), self.alpha),\n    [Format.SRGB_LINEAR]: (self: Legacy) =>\n        new ColorFunction(Format.SRGB_LINEAR, ...ColorConverter.xyzd50TosRGBLinear(...self.#toXyzd50()), self.alpha),\n    [Format.DISPLAY_P3]: (self: Legacy) =>\n        new ColorFunction(Format.DISPLAY_P3, ...ColorConverter.xyzd50ToDisplayP3(...self.#toXyzd50()), self.alpha),\n    [Format.A98_RGB]: (self: Legacy) =>\n        new ColorFunction(Format.A98_RGB, ...ColorConverter.xyzd50ToAdobeRGB(...self.#toXyzd50()), self.alpha),\n    [Format.PROPHOTO_RGB]: (self: Legacy) =>\n        new ColorFunction(Format.PROPHOTO_RGB, ...ColorConverter.xyzd50ToProPhoto(...self.#toXyzd50()), self.alpha),\n    [Format.REC_2020]: (self: Legacy) =>\n        new ColorFunction(Format.REC_2020, ...ColorConverter.xyzd50ToRec2020(...self.#toXyzd50()), self.alpha),\n    [Format.XYZ]: (self: Legacy) =>\n        new ColorFunction(Format.XYZ, ...ColorConverter.xyzd50ToD65(...self.#toXyzd50()), self.alpha),\n    [Format.XYZ_D50]: (self: Legacy) => new ColorFunction(Format.XYZ_D50, ...self.#toXyzd50(), self.alpha),\n    [Format.XYZ_D65]: (self: Legacy) =>\n        new ColorFunction(Format.XYZ_D65, ...ColorConverter.xyzd50ToD65(...self.#toXyzd50()), self.alpha),\n  };\n\n  #toXyzd50(): Color3D {\n    const [r, g, b] = this.#rgba;\n    return ColorConverter.srgbToXyzd50(r, g, b);\n  }\n\n  get alpha(): number|null {\n    switch (this.format()) {\n      case Format.HEXA:\n      case Format.RGBA:\n        return this.#rgba[3];\n      default:\n        return null;\n    }\n  }\n\n  asLegacyColor(): Legacy {\n    return this;\n  }\n\n  nickname(): Nickname|null {\n    const nickname = RGBAToNickname.get(String(this.canonicalRGBA()));\n    return nickname ? new Nickname(nickname, this) : null;\n  }\n\n  shortHex(): ShortHex|null {\n    for (let i = 0; i < 4; ++i) {\n      const c = Math.round(this.#rgba[i] * 255);\n      // Check if the two digits of each are identical: #aabbcc => #abc\n      if (c % 0x11) {\n        return null;\n      }\n    }\n    return new ShortHex(this);\n  }\n\n  constructor(rgba: Color3D|Color4DOr3D, format: LegacyColor, authoredText?: string) {\n    this.#authoredText = authoredText || null;\n    this.#format = format;\n    this.#rawParams = [rgba[0], rgba[1], rgba[2]];\n\n    this.#rgba = [\n      clamp(rgba[0], {min: 0, max: 1}),\n      clamp(rgba[1], {min: 0, max: 1}),\n      clamp(rgba[2], {min: 0, max: 1}),\n      clamp(rgba[3] ?? 1, {min: 0, max: 1}),\n    ];\n  }\n\n  static fromHex(hex: string, text: string): Legacy|ShortHex {\n    hex = hex.toLowerCase();\n    // Possible hex representations with alpha are fffA and ffffffAA\n    const hasAlpha = hex.length === 4 || hex.length === 8;\n    const format = hasAlpha ? Format.HEXA : Format.HEX;\n    const isShort = hex.length <= 4;\n    if (isShort) {\n      hex = hex.charAt(0) + hex.charAt(0) + hex.charAt(1) + hex.charAt(1) + hex.charAt(2) + hex.charAt(2) +\n          hex.charAt(3) + hex.charAt(3);\n    }\n    const r = parseInt(hex.substring(0, 2), 16);\n    const g = parseInt(hex.substring(2, 4), 16);\n    const b = parseInt(hex.substring(4, 6), 16);\n    let a = 1;\n    if (hex.length === 8) {\n      a = parseInt(hex.substring(6, 8), 16) / 255;\n    }\n    const color = new Legacy([r / 255, g / 255, b / 255, a], format, text);\n    return isShort ? new ShortHex(color) : color;\n  }\n\n  static fromRGBAFunction(r: string, g: string, b: string, alpha: string|undefined, text: string): Legacy|null {\n    const rgba = [\n      parseRgbNumeric(r),\n      parseRgbNumeric(g),\n      parseRgbNumeric(b),\n      alpha ? parseAlphaNumeric(alpha) : 1,\n    ];\n\n    if (!Platform.ArrayUtilities.arrayDoesNotContainNullOrUndefined(rgba)) {\n      return null;\n    }\n    return new Legacy(rgba as Color4D, alpha ? Format.RGBA : Format.RGB, text);\n  }\n\n  static fromRGBA(rgba: number[], authoredText?: string): Legacy {\n    return new Legacy([rgba[0] / 255, rgba[1] / 255, rgba[2] / 255, rgba[3]], Format.RGBA, authoredText);\n  }\n\n  static fromHSVA(hsva: Color4D): Legacy {\n    const rgba = hsva2rgba(hsva);\n    return new Legacy(rgba, Format.RGBA);\n  }\n\n  is<T extends Format>(format: T): this is ReturnType<ColorConversions[T]> {\n    return format === this.format();\n  }\n  as<T extends Format>(format: T): ReturnType<ColorConversions[T]> {\n    if (format === this.format()) {\n      return this as ReturnType<ColorConversions[T]>;\n    }\n    return Legacy.#conversions[format](this) as ReturnType<ColorConversions[T]>;\n  }\n\n  format(): LegacyColor {\n    return this.#format;\n  }\n\n  hasAlpha(): boolean {\n    return this.#rgba[3] !== 1;\n  }\n\n  detectHEXFormat(): Format {\n    const hasAlpha = this.hasAlpha();\n    return hasAlpha ? Format.HEXA : Format.HEX;\n  }\n\n  asString(format?: Format): string {\n    if (format) {\n      return this.as(format).asString();\n    }\n    return this.#stringify(format, this.#rgba[0], this.#rgba[1], this.#rgba[2]);\n  }\n  #stringify(format: LegacyColor|undefined, r: number, g: number, b: number): string {\n    if (!format) {\n      format = this.#format;\n    }\n\n    function toHexValue(value: number): string {\n      const hex = Math.round(value * 255).toString(16);\n      return hex.length === 1 ? '0' + hex : hex;\n    }\n\n    switch (format) {\n      case Format.RGB:\n      case Format.RGBA: {\n        const start = Platform.StringUtilities.sprintf('rgb(%d %d %d', toRgbValue(r), toRgbValue(g), toRgbValue(b));\n        if (this.hasAlpha()) {\n          return start + Platform.StringUtilities.sprintf(' / %d%)', Math.round(this.#rgba[3] * 100));\n        }\n        return start + ')';\n      }\n      case Format.HEX:\n      case Format.HEXA: {\n        if (this.hasAlpha()) {\n          return Platform.StringUtilities\n              .sprintf('#%s%s%s%s', toHexValue(r), toHexValue(g), toHexValue(b), toHexValue(this.#rgba[3]))\n              .toLowerCase();\n        }\n        return Platform.StringUtilities.sprintf('#%s%s%s', toHexValue(r), toHexValue(g), toHexValue(b)).toLowerCase();\n      }\n    }\n  }\n  getAuthoredText(): string|null {\n    return this.#authoredText ?? null;\n  }\n\n  getRawParameters(): Color3D {\n    return [...this.#rawParams];\n  }\n  getAsRawString(format?: Format): string {\n    if (format) {\n      return this.as(format).getAsRawString();\n    }\n    return this.#stringify(format, ...this.#rawParams);\n  }\n  isGamutClipped(): boolean {\n    return !equals(\n        this.#rawParams.map(toRgbValue), [this.#rgba[0], this.#rgba[1], this.#rgba[2]].map(toRgbValue),\n        WIDE_RANGE_EPSILON);\n  }\n\n  rgba(): Color4D {\n    return [...this.#rgba];\n  }\n\n  canonicalRGBA(): Color4D {\n    const rgba = new Array(4);\n    for (let i = 0; i < 3; ++i) {\n      rgba[i] = Math.round(this.#rgba[i] * 255);\n    }\n    rgba[3] = this.#rgba[3];\n    return rgba as Color4D;\n  }\n\n  toProtocolRGBA(): {\n    r: number,\n    g: number,\n    b: number,\n    a: (number|undefined),\n  } {\n    const rgba = this.canonicalRGBA();\n    const result: {\n      r: number,\n      g: number,\n      b: number,\n      a: number|undefined,\n    } = {r: rgba[0], g: rgba[1], b: rgba[2], a: undefined};\n    if (rgba[3] !== 1) {\n      result.a = rgba[3];\n    }\n    return result;\n  }\n\n  invert(): Legacy {\n    const rgba: Color4D = [0, 0, 0, 0];\n    rgba[0] = 1 - this.#rgba[0];\n    rgba[1] = 1 - this.#rgba[1];\n    rgba[2] = 1 - this.#rgba[2];\n    rgba[3] = this.#rgba[3];\n    return new Legacy(rgba, Format.RGBA);\n  }\n\n  /**\n   * Returns a new color using the NTSC formula for making a RGB color grayscale.\n   * Note: We override with an alpha of 50% to enhance the dimming effect.\n   */\n  grayscale(): Legacy {\n    const [r, g, b] = this.#rgba;\n    const gray = r * 0.299 + g * 0.587 + b * 0.114;\n    return new Legacy([gray, gray, gray, 0.5], Format.RGBA);\n  }\n\n  setAlpha(alpha: number): Legacy {\n    const rgba: Color4D = [...this.#rgba];\n    rgba[3] = alpha;\n    return new Legacy(rgba, Format.RGBA);\n  }\n\n  blendWith(fgColor: Legacy): Legacy {\n    const rgba: Color4D = blendColors(fgColor.#rgba, this.#rgba);\n    return new Legacy(rgba, Format.RGBA);\n  }\n\n  blendWithAlpha(alpha: number): Legacy {\n    const rgba: Color4D = [...this.#rgba];\n    rgba[3] *= alpha;\n    return new Legacy(rgba, Format.RGBA);\n  }\n\n  setFormat(format: LegacyColor): void {\n    this.#format = format;\n  }\n\n  equal(other: Color): boolean {\n    const legacy = other.as(this.#format);\n    return equals(toRgbValue(this.#rgba[0]), toRgbValue(legacy.#rgba[0]), WIDE_RANGE_EPSILON) &&\n        equals(toRgbValue(this.#rgba[1]), toRgbValue(legacy.#rgba[1]), WIDE_RANGE_EPSILON) &&\n        equals(toRgbValue(this.#rgba[2]), toRgbValue(legacy.#rgba[2]), WIDE_RANGE_EPSILON) &&\n        equals(this.#rgba[3], legacy.#rgba[3]);\n  }\n}\n\nexport const Regex =\n    /((?:rgba?|hsla?|hwba?|lab|lch|oklab|oklch|color)\\([^)]+\\)|#[0-9a-fA-F]{8}|#[0-9a-fA-F]{6}|#[0-9a-fA-F]{3,4}|\\b[a-zA-Z]+\\b(?!-))/g;\nexport const ColorMixRegex = /color-mix\\(.*,\\s*(?<firstColor>.+)\\s*,\\s*(?<secondColor>.+)\\s*\\)/g;\n\nconst COLOR_TO_RGBA_ENTRIES: Array<readonly[string, number[]]> = [\n  ['aliceblue', [240, 248, 255]],\n  ['antiquewhite', [250, 235, 215]],\n  ['aqua', [0, 255, 255]],\n  ['aquamarine', [127, 255, 212]],\n  ['azure', [240, 255, 255]],\n  ['beige', [245, 245, 220]],\n  ['bisque', [255, 228, 196]],\n  ['black', [0, 0, 0]],\n  ['blanchedalmond', [255, 235, 205]],\n  ['blue', [0, 0, 255]],\n  ['blueviolet', [138, 43, 226]],\n  ['brown', [165, 42, 42]],\n  ['burlywood', [222, 184, 135]],\n  ['cadetblue', [95, 158, 160]],\n  ['chartreuse', [127, 255, 0]],\n  ['chocolate', [210, 105, 30]],\n  ['coral', [255, 127, 80]],\n  ['cornflowerblue', [100, 149, 237]],\n  ['cornsilk', [255, 248, 220]],\n  ['crimson', [237, 20, 61]],\n  ['cyan', [0, 255, 255]],\n  ['darkblue', [0, 0, 139]],\n  ['darkcyan', [0, 139, 139]],\n  ['darkgoldenrod', [184, 134, 11]],\n  ['darkgray', [169, 169, 169]],\n  ['darkgrey', [169, 169, 169]],\n  ['darkgreen', [0, 100, 0]],\n  ['darkkhaki', [189, 183, 107]],\n  ['darkmagenta', [139, 0, 139]],\n  ['darkolivegreen', [85, 107, 47]],\n  ['darkorange', [255, 140, 0]],\n  ['darkorchid', [153, 50, 204]],\n  ['darkred', [139, 0, 0]],\n  ['darksalmon', [233, 150, 122]],\n  ['darkseagreen', [143, 188, 143]],\n  ['darkslateblue', [72, 61, 139]],\n  ['darkslategray', [47, 79, 79]],\n  ['darkslategrey', [47, 79, 79]],\n  ['darkturquoise', [0, 206, 209]],\n  ['darkviolet', [148, 0, 211]],\n  ['deeppink', [255, 20, 147]],\n  ['deepskyblue', [0, 191, 255]],\n  ['dimgray', [105, 105, 105]],\n  ['dimgrey', [105, 105, 105]],\n  ['dodgerblue', [30, 144, 255]],\n  ['firebrick', [178, 34, 34]],\n  ['floralwhite', [255, 250, 240]],\n  ['forestgreen', [34, 139, 34]],\n  ['fuchsia', [255, 0, 255]],\n  ['gainsboro', [220, 220, 220]],\n  ['ghostwhite', [248, 248, 255]],\n  ['gold', [255, 215, 0]],\n  ['goldenrod', [218, 165, 32]],\n  ['gray', [128, 128, 128]],\n  ['grey', [128, 128, 128]],\n  ['green', [0, 128, 0]],\n  ['greenyellow', [173, 255, 47]],\n  ['honeydew', [240, 255, 240]],\n  ['hotpink', [255, 105, 180]],\n  ['indianred', [205, 92, 92]],\n  ['indigo', [75, 0, 130]],\n  ['ivory', [255, 255, 240]],\n  ['khaki', [240, 230, 140]],\n  ['lavender', [230, 230, 250]],\n  ['lavenderblush', [255, 240, 245]],\n  ['lawngreen', [124, 252, 0]],\n  ['lemonchiffon', [255, 250, 205]],\n  ['lightblue', [173, 216, 230]],\n  ['lightcoral', [240, 128, 128]],\n  ['lightcyan', [224, 255, 255]],\n  ['lightgoldenrodyellow', [250, 250, 210]],\n  ['lightgreen', [144, 238, 144]],\n  ['lightgray', [211, 211, 211]],\n  ['lightgrey', [211, 211, 211]],\n  ['lightpink', [255, 182, 193]],\n  ['lightsalmon', [255, 160, 122]],\n  ['lightseagreen', [32, 178, 170]],\n  ['lightskyblue', [135, 206, 250]],\n  ['lightslategray', [119, 136, 153]],\n  ['lightslategrey', [119, 136, 153]],\n  ['lightsteelblue', [176, 196, 222]],\n  ['lightyellow', [255, 255, 224]],\n  ['lime', [0, 255, 0]],\n  ['limegreen', [50, 205, 50]],\n  ['linen', [250, 240, 230]],\n  ['magenta', [255, 0, 255]],\n  ['maroon', [128, 0, 0]],\n  ['mediumaquamarine', [102, 205, 170]],\n  ['mediumblue', [0, 0, 205]],\n  ['mediumorchid', [186, 85, 211]],\n  ['mediumpurple', [147, 112, 219]],\n  ['mediumseagreen', [60, 179, 113]],\n  ['mediumslateblue', [123, 104, 238]],\n  ['mediumspringgreen', [0, 250, 154]],\n  ['mediumturquoise', [72, 209, 204]],\n  ['mediumvioletred', [199, 21, 133]],\n  ['midnightblue', [25, 25, 112]],\n  ['mintcream', [245, 255, 250]],\n  ['mistyrose', [255, 228, 225]],\n  ['moccasin', [255, 228, 181]],\n  ['navajowhite', [255, 222, 173]],\n  ['navy', [0, 0, 128]],\n  ['oldlace', [253, 245, 230]],\n  ['olive', [128, 128, 0]],\n  ['olivedrab', [107, 142, 35]],\n  ['orange', [255, 165, 0]],\n  ['orangered', [255, 69, 0]],\n  ['orchid', [218, 112, 214]],\n  ['palegoldenrod', [238, 232, 170]],\n  ['palegreen', [152, 251, 152]],\n  ['paleturquoise', [175, 238, 238]],\n  ['palevioletred', [219, 112, 147]],\n  ['papayawhip', [255, 239, 213]],\n  ['peachpuff', [255, 218, 185]],\n  ['peru', [205, 133, 63]],\n  ['pink', [255, 192, 203]],\n  ['plum', [221, 160, 221]],\n  ['powderblue', [176, 224, 230]],\n  ['purple', [128, 0, 128]],\n  ['rebeccapurple', [102, 51, 153]],\n  ['red', [255, 0, 0]],\n  ['rosybrown', [188, 143, 143]],\n  ['royalblue', [65, 105, 225]],\n  ['saddlebrown', [139, 69, 19]],\n  ['salmon', [250, 128, 114]],\n  ['sandybrown', [244, 164, 96]],\n  ['seagreen', [46, 139, 87]],\n  ['seashell', [255, 245, 238]],\n  ['sienna', [160, 82, 45]],\n  ['silver', [192, 192, 192]],\n  ['skyblue', [135, 206, 235]],\n  ['slateblue', [106, 90, 205]],\n  ['slategray', [112, 128, 144]],\n  ['slategrey', [112, 128, 144]],\n  ['snow', [255, 250, 250]],\n  ['springgreen', [0, 255, 127]],\n  ['steelblue', [70, 130, 180]],\n  ['tan', [210, 180, 140]],\n  ['teal', [0, 128, 128]],\n  ['thistle', [216, 191, 216]],\n  ['tomato', [255, 99, 71]],\n  ['turquoise', [64, 224, 208]],\n  ['violet', [238, 130, 238]],\n  ['wheat', [245, 222, 179]],\n  ['white', [255, 255, 255]],\n  ['whitesmoke', [245, 245, 245]],\n  ['yellow', [255, 255, 0]],\n  ['yellowgreen', [154, 205, 50]],\n  ['transparent', [0, 0, 0, 0]],\n];\n\nconsole.assert(\n    COLOR_TO_RGBA_ENTRIES.every(([nickname]) => nickname.toLowerCase() === nickname),\n    'All color nicknames must be lowercase.');\n\nexport const Nicknames = new Map(COLOR_TO_RGBA_ENTRIES);\n\nconst RGBAToNickname = new Map(\n    // Default opacity to 1 if the color only specified 3 channels\n    COLOR_TO_RGBA_ENTRIES.map(([nickname, [r, g, b, a = 1]]) => {\n      return [String([r, g, b, a]), nickname];\n    }),\n);\n\nconst LAYOUT_LINES_HIGHLIGHT_COLOR = [127, 32, 210];\n\nexport const PageHighlight = {\n  Content: Legacy.fromRGBA([111, 168, 220, .66]),\n  ContentLight: Legacy.fromRGBA([111, 168, 220, .5]),\n  ContentOutline: Legacy.fromRGBA([9, 83, 148]),\n  Padding: Legacy.fromRGBA([147, 196, 125, .55]),\n  PaddingLight: Legacy.fromRGBA([147, 196, 125, .4]),\n  Border: Legacy.fromRGBA([255, 229, 153, .66]),\n  BorderLight: Legacy.fromRGBA([255, 229, 153, .5]),\n  Margin: Legacy.fromRGBA([246, 178, 107, .66]),\n  MarginLight: Legacy.fromRGBA([246, 178, 107, .5]),\n  EventTarget: Legacy.fromRGBA([255, 196, 196, .66]),\n  Shape: Legacy.fromRGBA([96, 82, 177, 0.8]),\n  ShapeMargin: Legacy.fromRGBA([96, 82, 127, .6]),\n  CssGrid: Legacy.fromRGBA([0x4b, 0, 0x82, 1]),\n  LayoutLine: Legacy.fromRGBA([...LAYOUT_LINES_HIGHLIGHT_COLOR, 1]),\n  GridBorder: Legacy.fromRGBA([...LAYOUT_LINES_HIGHLIGHT_COLOR, 1]),\n  GapBackground: Legacy.fromRGBA([...LAYOUT_LINES_HIGHLIGHT_COLOR, .3]),\n  GapHatch: Legacy.fromRGBA([...LAYOUT_LINES_HIGHLIGHT_COLOR, .8]),\n  GridAreaBorder: Legacy.fromRGBA([26, 115, 232, 1]),\n};\n\nexport const SourceOrderHighlight = {\n  ParentOutline: Legacy.fromRGBA([224, 90, 183, 1]),\n  ChildOutline: Legacy.fromRGBA([0, 120, 212, 1]),\n};\n\nexport const IsolationModeHighlight = {\n  Resizer: Legacy.fromRGBA([222, 225, 230, 1]),  // --color-background-elevation-2\n  ResizerHandle: Legacy.fromRGBA([166, 166, 166, 1]),\n  Mask: Legacy.fromRGBA([248, 249, 249, 1]),\n};\n\ntype Space = number|{\n  min: number,\n  max: number,\n  count: (number|undefined),\n};\n\nexport class Generator {\n  readonly #hueSpace: Space;\n  readonly #satSpace: Space;\n  readonly #lightnessSpace: Space;\n  readonly #alphaSpace: Space;\n  readonly #colors = new Map<string, string>();\n  constructor(hueSpace?: Space, satSpace?: Space, lightnessSpace?: Space, alphaSpace?: Space) {\n    this.#hueSpace = hueSpace || {min: 0, max: 360, count: undefined};\n    this.#satSpace = satSpace || 67;\n    this.#lightnessSpace = lightnessSpace || 80;\n    this.#alphaSpace = alphaSpace || 1;\n  }\n\n  setColorForID(id: string, color: string): void {\n    this.#colors.set(id, color);\n  }\n\n  colorForID(id: string): string {\n    let color = this.#colors.get(id);\n    if (!color) {\n      color = this.generateColorForID(id);\n      this.#colors.set(id, color);\n    }\n    return color;\n  }\n\n  private generateColorForID(id: string): string {\n    const hash = Platform.StringUtilities.hashCode(id);\n    const h = this.indexToValueInSpace(hash, this.#hueSpace);\n    const s = this.indexToValueInSpace(hash >> 8, this.#satSpace);\n    const l = this.indexToValueInSpace(hash >> 16, this.#lightnessSpace);\n    const a = this.indexToValueInSpace(hash >> 24, this.#alphaSpace);\n    const start = `hsl(${h}deg ${s}% ${l}%`;\n    if (a !== 1) {\n      return `${start} / ${Math.floor(a * 100)}%)`;\n    }\n    return `${start})`;\n  }\n\n  private indexToValueInSpace(index: number, space: Space): number {\n    if (typeof space === 'number') {\n      return space;\n    }\n    const count = space.count || space.max - space.min;\n    index %= count;\n    return space.min + Math.floor(index / (count - 1) * (space.max - space.min));\n  }\n}\n"]}