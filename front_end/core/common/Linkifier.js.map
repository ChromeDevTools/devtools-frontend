{
  "version": 3,
  "sources": ["../../../../../../front_end/core/common/Linkifier.ts"],
  "sourcesContent": ["// Copyright 2019 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Platform from '../platform/platform.js';\n\nexport abstract class Linkifier {\n  abstract linkify(object: Object, options?: Options): Node;\n\n  static async linkify(object: Object|null, options?: Options): Promise<Node> {\n    if (!object) {\n      throw new Error('Can\\'t linkify ' + object);\n    }\n    const linkifierRegistration = getApplicableRegisteredlinkifiers(object)[0];\n    if (!linkifierRegistration) {\n      throw new Error('No linkifiers registered for object ' + object);\n    }\n    const linkifier = await linkifierRegistration.loadLinkifier();\n    return linkifier.linkify(object, options);\n  }\n}\nexport interface Options {\n  tooltip?: string;\n  preventKeyboardFocus?: boolean;\n  textContent?: string;\n  // Dynamic links include hyperlinks and anchorlinks -- links that navigate the content.\n  isDynamicLink?: boolean;\n}\n\nconst registeredLinkifiers: LinkifierRegistration[] = [];\n\nexport function registerLinkifier(registration: LinkifierRegistration): void {\n  registeredLinkifiers.push(registration);\n}\n\nexport function getApplicableRegisteredlinkifiers(object: Object): LinkifierRegistration[] {\n  return registeredLinkifiers.filter(isLinkifierApplicableToContextTypes);\n\n  function isLinkifierApplicableToContextTypes(linkifierRegistration: LinkifierRegistration): boolean {\n    if (!linkifierRegistration.contextTypes) {\n      return true;\n    }\n    for (const contextType of linkifierRegistration.contextTypes()) {\n      if (object instanceof contextType) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\nexport interface LinkifierRegistration {\n  loadLinkifier: () => Promise<Linkifier>;\n  contextTypes?: () => Array<Platform.Constructor.Constructor<unknown>>;\n}\n"],
  "mappings": ";AAMO,aAAe,UAAU;AAAA,EAG9B,aAAa,QAAQ,QAAqB,SAAkC;AAC1E,QAAI,CAAC,QAAQ;AACX,YAAM,IAAI,MAAM,mBAAoB,MAAM;AAAA,IAC5C;AACA,UAAM,wBAAwB,kCAAkC,MAAM,EAAE,CAAC;AACzE,QAAI,CAAC,uBAAuB;AAC1B,YAAM,IAAI,MAAM,yCAAyC,MAAM;AAAA,IACjE;AACA,UAAM,YAAY,MAAM,sBAAsB,cAAc;AAC5D,WAAO,UAAU,QAAQ,QAAQ,OAAO;AAAA,EAC1C;AACF;AASA,MAAM,uBAAgD,CAAC;AAEhD,gBAAS,kBAAkB,cAA2C;AAC3E,uBAAqB,KAAK,YAAY;AACxC;AAEO,gBAAS,kCAAkC,QAAyC;AACzF,SAAO,qBAAqB,OAAO,mCAAmC;AAEtE,WAAS,oCAAoC,uBAAuD;AAClG,QAAI,CAAC,sBAAsB,cAAc;AACvC,aAAO;AAAA,IACT;AACA,eAAW,eAAe,sBAAsB,aAAa,GAAG;AAC9D,UAAI,kBAAkB,aAAa;AACjC,eAAO;AAAA,MACT;AAAA,IACF;AACA,WAAO;AAAA,EACT;AACF;",
  "names": []
}
