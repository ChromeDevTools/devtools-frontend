{
  "version": 3,
  "sources": ["../../../../../../front_end/core/common/Mutex.ts"],
  "sourcesContent": ["// Copyright 2022 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\ntype ReleaseFunction = () => void;\n\n/**\n * Use Mutex class to coordinate local concurrent operations.\n * Once `acquire` promise resolves, you hold the lock and must\n * call `release` function returned by `acquire` to release the\n * lock. Failing to `release` the lock may lead to deadlocks.\n */\nexport class Mutex {\n  #locked = false;\n  #acquirers: Array<() => void> = [];\n\n  // This is FIFO.\n  acquire(): Promise<ReleaseFunction> {\n    const state = {resolved: false};\n    if (this.#locked) {\n      return new Promise(resolve => {\n        this.#acquirers.push(() => resolve(this.#release.bind(this, state)));\n      });\n    }\n    this.#locked = true;\n    return Promise.resolve(this.#release.bind(this, state));\n  }\n\n  #release(state: {resolved: boolean}): void {\n    if (state.resolved) {\n      throw new Error('Cannot release more than once.');\n    }\n    state.resolved = true;\n\n    const resolve = this.#acquirers.shift();\n    if (!resolve) {\n      this.#locked = false;\n      return;\n    }\n    resolve();\n  }\n\n  async run<T>(action: () => Promise<T>): Promise<T> {\n    const release = await this.acquire();\n    try {\n      // Note we need to await here because we want the await to release AFTER\n      // that await happens. Returning action() will trigger the release\n      // immediately which is counter to what we want.\n      const result = await action();\n      return result;\n    } finally {\n      release();\n    }\n  }\n}\n"],
  "mappings": ";AAYO,aAAM,MAAM;AAAA,EACjB,UAAU;AAAA,EACV,aAAgC,CAAC;AAAA;AAAA,EAGjC,UAAoC;AAClC,UAAM,QAAQ,EAAC,UAAU,MAAK;AAC9B,QAAI,KAAK,SAAS;AAChB,aAAO,IAAI,QAAQ,aAAW;AAC5B,aAAK,WAAW,KAAK,MAAM,QAAQ,KAAK,SAAS,KAAK,MAAM,KAAK,CAAC,CAAC;AAAA,MACrE,CAAC;AAAA,IACH;AACA,SAAK,UAAU;AACf,WAAO,QAAQ,QAAQ,KAAK,SAAS,KAAK,MAAM,KAAK,CAAC;AAAA,EACxD;AAAA,EAEA,SAAS,OAAkC;AACzC,QAAI,MAAM,UAAU;AAClB,YAAM,IAAI,MAAM,gCAAgC;AAAA,IAClD;AACA,UAAM,WAAW;AAEjB,UAAM,UAAU,KAAK,WAAW,MAAM;AACtC,QAAI,CAAC,SAAS;AACZ,WAAK,UAAU;AACf;AAAA,IACF;AACA,YAAQ;AAAA,EACV;AAAA,EAEA,MAAM,IAAO,QAAsC;AACjD,UAAM,UAAU,MAAM,KAAK,QAAQ;AACnC,QAAI;AAIF,YAAM,SAAS,MAAM,OAAO;AAC5B,aAAO;AAAA,IACT,UAAE;AACA,cAAQ;AAAA,IACV;AAAA,EACF;AACF;",
  "names": []
}
