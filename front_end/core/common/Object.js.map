{"version":3,"file":"Object.js","sourceRoot":"","sources":["../../../../../../front_end/core/common/Object.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2021 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/*\n * Copyright (C) 2008 Apple Inc. All Rights Reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in the\n *    documentation and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\n * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport type * as Platform from '../platform/platform.js';\n\nimport type {\n  EventDescriptor, EventListener, EventPayloadToRestParameters, EventTarget, EventTargetEvent} from './EventTarget.js';\n\nexport interface ListenerCallbackTuple<Events, T extends keyof Events> {\n  thisObject?: Object;\n  listener: EventListener<Events, T>;\n  disposed?: boolean;\n}\n\nexport class ObjectWrapper<Events> implements EventTarget<Events> {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  listeners?: Map<keyof Events, Set<ListenerCallbackTuple<Events, any>>>;\n\n  addEventListener<T extends keyof Events>(eventType: T, listener: EventListener<Events, T>, thisObject?: Object):\n      EventDescriptor<Events, T> {\n    if (!this.listeners) {\n      this.listeners = new Map();\n    }\n\n    let listenersForEventType = this.listeners.get(eventType);\n    if (!listenersForEventType) {\n      listenersForEventType = new Set();\n      this.listeners.set(eventType, listenersForEventType);\n    }\n    listenersForEventType.add({thisObject, listener});\n    return {eventTarget: this, eventType, thisObject, listener};\n  }\n\n  once<T extends keyof Events>(eventType: T): Promise<Events[T]> {\n    return new Promise(resolve => {\n      const descriptor = this.addEventListener(eventType, event => {\n        this.removeEventListener(eventType, descriptor.listener);\n        resolve(event.data);\n      });\n    });\n  }\n\n  removeEventListener<T extends keyof Events>(eventType: T, listener: EventListener<Events, T>, thisObject?: Object):\n      void {\n    const listeners = this.listeners?.get(eventType);\n    if (!listeners) {\n      return;\n    }\n    for (const listenerTuple of listeners) {\n      if (listenerTuple.listener === listener && listenerTuple.thisObject === thisObject) {\n        listenerTuple.disposed = true;\n        listeners.delete(listenerTuple);\n      }\n    }\n\n    if (!listeners.size) {\n      this.listeners?.delete(eventType);\n    }\n  }\n\n  hasEventListeners(eventType: keyof Events): boolean {\n    return Boolean(this.listeners?.has(eventType));\n  }\n\n  dispatchEventToListeners<T extends keyof Events>(\n      eventType: Platform.TypeScriptUtilities.NoUnion<T>,\n      ...[eventData]: EventPayloadToRestParameters<Events, T>): void {\n    const listeners = this.listeners?.get(eventType);\n    if (!listeners) {\n      return;\n    }\n    // `eventData` is typed as `Events[T] | undefined`:\n    //   - `undefined` when `Events[T]` is void.\n    //   - `Events[T]` otherwise.\n    // We cast it to `Events[T]` which is the correct type in all instances, as\n    // `void` will be cast and used as `undefined`.\n    const event = {data: eventData as Events[T], source: this};\n    // Work on a snapshot of the current listeners, callbacks might remove/add\n    // new listeners.\n    for (const listener of [...listeners]) {\n      if (!listener.disposed) {\n        listener.listener.call(listener.thisObject, event);\n      }\n    }\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nexport function eventMixin<Events, Base extends Platform.Constructor.Constructor<object>>(base: Base) {\n  console.assert(base !== HTMLElement);\n  return class EventHandling extends base implements EventTarget<Events> {\n    #events = new ObjectWrapper<Events>();\n\n    addEventListener<T extends keyof Events>(\n        eventType: T, listener: (arg0: EventTargetEvent<Events[T]>) => void,\n        thisObject?: Object): EventDescriptor<Events, T> {\n      return this.#events.addEventListener(eventType, listener, thisObject);\n    }\n\n    once<T extends keyof Events>(eventType: T): Promise<Events[T]> {\n      return this.#events.once(eventType);\n    }\n\n    removeEventListener<T extends keyof Events>(\n        eventType: T, listener: (arg0: EventTargetEvent<Events[T]>) => void, thisObject?: Object): void {\n      this.#events.removeEventListener(eventType, listener, thisObject);\n    }\n\n    hasEventListeners(eventType: keyof Events): boolean {\n      return this.#events.hasEventListeners(eventType);\n    }\n\n    dispatchEventToListeners<T extends keyof Events>(\n        eventType: Platform.TypeScriptUtilities.NoUnion<T>,\n        ...eventData: EventPayloadToRestParameters<Events, T>): void {\n      this.#events.dispatchEventToListeners(eventType, ...eventData);\n    }\n  };\n}\n"]}