{
  "version": 3,
  "sources": ["../../../../../../front_end/core/common/ResourceType.ts"],
  "sourcesContent": ["// Copyright 2021 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/*\n * Copyright (C) 2012 Google Inc.  All rights reserved.\n * Copyright (C) 2007, 2008 Apple Inc.  All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1.  Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n * 2.  Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\n *     its contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as i18n from '../i18n/i18n.js';\nimport type * as Platform from '../platform/platform.js';\n\nimport {ParsedURL} from './ParsedURL.js';\n\nconst UIStrings = {\n  /**\n   * @description Text that appears in a tooltip the fetch and xhr resource types filter.\n   */\n  fetchAndXHR: '`Fetch` and `XHR`',\n  /**\n   * @description Text that appears in a tooltip for the JavaScript types filter.\n   */\n  javascript: 'JavaScript',\n  /**\n   * @description Text that appears on a button for the JavaScript resource type filter.\n   */\n  js: 'JS',\n  /**\n   * @description Text that appears on a button for the css resource type filter.\n   */\n  css: 'CSS',\n  /**\n   * @description Text that appears on a button for the image resource type filter.\n   */\n  img: 'Img',\n  /**\n   * @description Text that appears on a button for the media resource type filter.\n   */\n  media: 'Media',\n  /**\n   * @description Text that appears on a button for the font resource type filter.\n   */\n  font: 'Font',\n  /**\n   * @description Text that appears on a button for the document resource type filter.\n   */\n  doc: 'Doc',\n  /**\n   * @description Text that appears on a button for the websocket, webtransport, directsocket resource type filter.\n   */\n  socketShort: 'Socket',\n  /**\n   * @description Text that appears in a tooltip for the WebAssembly types filter.\n   */\n  webassembly: 'WebAssembly',\n  /**\n   * @description Text that appears on a button for the WebAssembly resource type filter.\n   */\n  wasm: 'Wasm',\n  /**\n   * @description Text that appears on a button for the manifest resource type filter.\n   */\n  manifest: 'Manifest',\n  /**\n   * @description Text for other types of items\n   */\n  other: 'Other',\n  /**\n   * @description Name of a network resource type\n   */\n  document: 'Document',\n  /**\n   * @description Name of a network resource type\n   */\n  stylesheet: 'Stylesheet',\n  /**\n   * @description Text in Image View of the Sources panel\n   */\n  image: 'Image',\n  /**\n   * @description Label for a group of JavaScript files\n   */\n  script: 'Script',\n  /**\n   * @description Name of a network resource type\n   */\n  texttrack: 'TextTrack',\n  /**\n   * @description Name of a network resource type\n   */\n  fetch: 'Fetch',\n  /**\n   * @description Name of a network resource type\n   */\n  eventsource: 'EventSource',\n  /**\n   * @description Name of a network resource type\n   */\n  websocket: 'WebSocket',\n  /**\n   * @description Name of a network resource type\n   */\n  webtransport: 'WebTransport',\n  /**\n   * @description Name of a network resource type\n   */\n  directsocket: 'DirectSocket',\n  /**\n   * @description Name of a network resource type\n   */\n  signedexchange: 'SignedExchange',\n  /**\n   * @description Name of a network resource type\n   */\n  ping: 'Ping',\n  /**\n   * @description Name of a network resource type\n   */\n  cspviolationreport: 'CSPViolationReport',\n  /**\n   * @description Name of a network initiator type\n   */\n  preflight: 'Preflight',\n  /**\n   * @description Name of a network initiator type for FedCM requests\n   */\n  fedcm: 'FedCM',\n} as const;\n\nconst str_ = i18n.i18n.registerUIStrings('core/common/ResourceType.ts', UIStrings);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\n\nexport class ResourceType {\n  readonly #name: string;\n  readonly #title: () => Platform.UIString.LocalizedString;\n  readonly #category: ResourceCategory;\n  readonly #isTextType: boolean;\n\n  constructor(\n      name: string, title: () => Platform.UIString.LocalizedString, category: ResourceCategory, isTextType: boolean) {\n    this.#name = name;\n    this.#title = title;\n    this.#category = category;\n    this.#isTextType = isTextType;\n  }\n\n  static fromMimeType(mimeType: string|null): ResourceType {\n    if (!mimeType) {\n      return resourceTypes.Other;\n    }\n    if (mimeType.startsWith('text/html')) {\n      return resourceTypes.Document;\n    }\n    if (mimeType.startsWith('text/css')) {\n      return resourceTypes.Stylesheet;\n    }\n    if (mimeType.startsWith('image/')) {\n      return resourceTypes.Image;\n    }\n    if (mimeType.startsWith('text/')) {\n      return resourceTypes.Script;\n    }\n\n    if (mimeType.includes('font')) {\n      return resourceTypes.Font;\n    }\n    if (mimeType.includes('script')) {\n      return resourceTypes.Script;\n    }\n    if (mimeType.includes('octet')) {\n      return resourceTypes.Other;\n    }\n    if (mimeType.includes('application')) {\n      return resourceTypes.Script;\n    }\n\n    return resourceTypes.Other;\n  }\n\n  static fromMimeTypeOverride(mimeType: string|null): ResourceType|null {\n    if (mimeType === 'application/manifest+json') {\n      return resourceTypes.Manifest;\n    }\n    if (mimeType === 'application/wasm') {\n      return resourceTypes.Wasm;\n    }\n\n    return null;\n  }\n\n  static fromURL(url: string): ResourceType|null {\n    return resourceTypeByExtension.get(ParsedURL.extractExtension(url)) || null;\n  }\n\n  static fromName(name: string): ResourceType|null {\n    for (const resourceType of Object.values(resourceTypes)) {\n      if (resourceType.name() === name) {\n        return resourceType;\n      }\n    }\n    return null;\n  }\n\n  static mimeFromURL(url: Platform.DevToolsPath.UrlString): string|undefined {\n    if (url.startsWith('snippet://') || url.startsWith('debugger://')) {\n      return 'text/javascript';\n    }\n    const name = ParsedURL.extractName(url);\n    if (mimeTypeByName.has(name)) {\n      return mimeTypeByName.get(name);\n    }\n\n    let ext = ParsedURL.extractExtension(url).toLowerCase();\n    if (ext === 'html' && name.endsWith('.component.html')) {\n      ext = 'component.html';\n    }\n    return mimeTypeByExtension.get(ext);\n  }\n\n  static mimeFromExtension(ext: string): string|undefined {\n    return mimeTypeByExtension.get(ext);\n  }\n\n  static simplifyContentType(contentType: string): string {\n    const regex = new RegExp('^application(.*json$|\\/json\\+.*)');\n    return regex.test(contentType) ? 'application/json' : contentType;\n  }\n\n  /**\n   * Adds suffixes iff the mimeType is 'text/javascript' to denote whether the JS is minified or from\n   * a source map.\n   */\n  static mediaTypeForMetrics(\n      mimeType: string, isFromSourceMap: boolean, isMinified: boolean, isSnippet: boolean,\n      isDebugger: boolean): string {\n    if (mimeType !== 'text/javascript') {\n      return mimeType;\n    }\n\n    if (isFromSourceMap) {\n      // SourceMap has precedence as that is a known fact, whereas minification is a heuristic we\n      // apply to the JS content.\n      return 'text/javascript+sourcemapped';\n    }\n    if (isMinified) {\n      return 'text/javascript+minified';\n    }\n    if (isSnippet) {\n      return 'text/javascript+snippet';\n    }\n    if (isDebugger) {\n      return 'text/javascript+eval';\n    }\n    return 'text/javascript+plain';\n  }\n\n  name(): string {\n    return this.#name;\n  }\n\n  title(): string {\n    return this.#title();\n  }\n\n  category(): ResourceCategory {\n    return this.#category;\n  }\n\n  isTextType(): boolean {\n    return this.#isTextType;\n  }\n\n  isScript(): boolean {\n    return this.#name === 'script' || this.#name === 'sm-script';\n  }\n\n  hasScripts(): boolean {\n    return this.isScript() || this.isDocument();\n  }\n\n  isStyleSheet(): boolean {\n    return this.#name === 'stylesheet' || this.#name === 'sm-stylesheet';\n  }\n\n  hasStyleSheets(): boolean {\n    return this.isStyleSheet() || this.isDocument();\n  }\n\n  isDocument(): boolean {\n    return this.#name === 'document';\n  }\n\n  isDocumentOrScriptOrStyleSheet(): boolean {\n    return this.isDocument() || this.isScript() || this.isStyleSheet();\n  }\n\n  isFont(): boolean {\n    return this.#name === 'font';\n  }\n\n  isImage(): boolean {\n    return this.#name === 'image';\n  }\n\n  isFromSourceMap(): boolean {\n    return this.#name.startsWith('sm-');\n  }\n\n  toString(): string {\n    return this.#name;\n  }\n\n  canonicalMimeType(): string {\n    if (this.isDocument()) {\n      return 'text/html';\n    }\n    if (this.isScript()) {\n      return 'text/javascript';\n    }\n    if (this.isStyleSheet()) {\n      return 'text/css';\n    }\n    return '';\n  }\n}\n\nexport class ResourceCategory {\n  readonly name: string;\n  title: () => Platform.UIString.LocalizedString;\n  shortTitle: () => Platform.UIString.LocalizedString;\n  constructor(\n      name: string, title: () => Platform.UIString.LocalizedString,\n      shortTitle: () => Platform.UIString.LocalizedString) {\n    this.name = name;\n    this.title = title;\n    this.shortTitle = shortTitle;\n  }\n}\n\nexport const resourceCategories = {\n  XHR: new ResourceCategory(\n      'Fetch and XHR', i18nLazyString(UIStrings.fetchAndXHR), i18n.i18n.lockedLazyString('Fetch/XHR')),\n  Document: new ResourceCategory(UIStrings.document, i18nLazyString(UIStrings.document), i18nLazyString(UIStrings.doc)),\n  Stylesheet: new ResourceCategory(UIStrings.css, i18nLazyString(UIStrings.css), i18nLazyString(UIStrings.css)),\n  Script:\n      new ResourceCategory(UIStrings.javascript, i18nLazyString(UIStrings.javascript), i18nLazyString(UIStrings.js)),\n  Font: new ResourceCategory(UIStrings.font, i18nLazyString(UIStrings.font), i18nLazyString(UIStrings.font)),\n  Image: new ResourceCategory(UIStrings.image, i18nLazyString(UIStrings.image), i18nLazyString(UIStrings.img)),\n  Media: new ResourceCategory(UIStrings.media, i18nLazyString(UIStrings.media), i18nLazyString(UIStrings.media)),\n  Manifest:\n      new ResourceCategory(UIStrings.manifest, i18nLazyString(UIStrings.manifest), i18nLazyString(UIStrings.manifest)),\n  Socket: new ResourceCategory(\n      'Socket', i18n.i18n.lockedLazyString('WebSocket | WebTransport | DirectSocket'),\n      i18nLazyString(UIStrings.socketShort)),\n  Wasm: new ResourceCategory(\n      UIStrings.webassembly, i18nLazyString(UIStrings.webassembly), i18nLazyString(UIStrings.wasm)),\n  Other: new ResourceCategory(UIStrings.other, i18nLazyString(UIStrings.other), i18nLazyString(UIStrings.other)),\n};\n\n/**\n * This enum is a superset of all types defined in WebCore::InspectorPageAgent::resourceTypeJson\n * For DevTools-only types that are based on MIME-types that are backed by other request types\n * (for example Wasm that is based on Fetch), additional types are added here.\n * For these types, make sure to update `fromMimeTypeOverride` to implement the custom logic.\n */\nexport const resourceTypes = {\n  Document: new ResourceType('document', i18nLazyString(UIStrings.document), resourceCategories.Document, true),\n  Stylesheet: new ResourceType('stylesheet', i18nLazyString(UIStrings.stylesheet), resourceCategories.Stylesheet, true),\n  Image: new ResourceType('image', i18nLazyString(UIStrings.image), resourceCategories.Image, false),\n  Media: new ResourceType('media', i18nLazyString(UIStrings.media), resourceCategories.Media, false),\n  Font: new ResourceType('font', i18nLazyString(UIStrings.font), resourceCategories.Font, false),\n  Script: new ResourceType('script', i18nLazyString(UIStrings.script), resourceCategories.Script, true),\n  TextTrack: new ResourceType('texttrack', i18nLazyString(UIStrings.texttrack), resourceCategories.Other, true),\n  XHR: new ResourceType('xhr', i18n.i18n.lockedLazyString('XHR'), resourceCategories.XHR, true),\n  Fetch: new ResourceType('fetch', i18nLazyString(UIStrings.fetch), resourceCategories.XHR, true),\n  Prefetch: new ResourceType('prefetch', i18n.i18n.lockedLazyString('Prefetch'), resourceCategories.Document, true),\n  EventSource: new ResourceType('eventsource', i18nLazyString(UIStrings.eventsource), resourceCategories.XHR, true),\n  WebSocket: new ResourceType('websocket', i18nLazyString(UIStrings.websocket), resourceCategories.Socket, false),\n  WebTransport:\n      new ResourceType('webtransport', i18nLazyString(UIStrings.webtransport), resourceCategories.Socket, false),\n  DirectSocket:\n      new ResourceType('directsocket', i18nLazyString(UIStrings.directsocket), resourceCategories.Socket, false),\n  Wasm: new ResourceType('wasm', i18nLazyString(UIStrings.wasm), resourceCategories.Wasm, false),\n  Manifest: new ResourceType('manifest', i18nLazyString(UIStrings.manifest), resourceCategories.Manifest, true),\n  SignedExchange:\n      new ResourceType('signed-exchange', i18nLazyString(UIStrings.signedexchange), resourceCategories.Other, false),\n  Ping: new ResourceType('ping', i18nLazyString(UIStrings.ping), resourceCategories.Other, false),\n  CSPViolationReport: new ResourceType(\n      'csp-violation-report', i18nLazyString(UIStrings.cspviolationreport), resourceCategories.Other, false),\n  Other: new ResourceType('other', i18nLazyString(UIStrings.other), resourceCategories.Other, false),\n  Preflight: new ResourceType('preflight', i18nLazyString(UIStrings.preflight), resourceCategories.Other, true),\n  SourceMapScript: new ResourceType('sm-script', i18nLazyString(UIStrings.script), resourceCategories.Script, true),\n  SourceMapStyleSheet:\n      new ResourceType('sm-stylesheet', i18nLazyString(UIStrings.stylesheet), resourceCategories.Stylesheet, true),\n  FedCM: new ResourceType('fedcm', i18nLazyString(UIStrings.fedcm), resourceCategories.Other, false),\n} as const;\n\nconst mimeTypeByName = new Map([\n  // CoffeeScript\n  ['Cakefile', 'text/x-coffeescript'],\n]);\n\n// clang-format off\nexport const resourceTypeByExtension = new Map([\n  ['js', resourceTypes.Script],\n  ['mjs', resourceTypes.Script],\n\n  ['css', resourceTypes.Stylesheet],\n  ['xsl', resourceTypes.Stylesheet],\n\n  ['avif', resourceTypes.Image],\n  ['bmp', resourceTypes.Image],\n  ['gif', resourceTypes.Image],\n  ['ico', resourceTypes.Image],\n  ['jpeg', resourceTypes.Image],\n  ['jpg', resourceTypes.Image],\n  ['jxl', resourceTypes.Image],\n  ['png', resourceTypes.Image],\n  ['svg', resourceTypes.Image],\n  ['tif', resourceTypes.Image],\n  ['tiff', resourceTypes.Image],\n\n  ['vue', resourceTypes.Document],\n\n  ['webmanifest', resourceTypes.Manifest],\n\n  ['webp', resourceTypes.Media],\n\n  ['otf', resourceTypes.Font],\n  ['ttc', resourceTypes.Font],\n  ['ttf', resourceTypes.Font],\n  ['woff', resourceTypes.Font],\n  ['woff2', resourceTypes.Font],\n\n  ['wasm', resourceTypes.Wasm],\n]);\n// clang-format on\n\nexport const mimeTypeByExtension = new Map([\n  // Web extensions\n  ['js', 'text/javascript'],\n  ['mjs', 'text/javascript'],\n  ['css', 'text/css'],\n  ['html', 'text/html'],\n  ['htm', 'text/html'],\n  ['xml', 'application/xml'],\n  ['xsl', 'application/xml'],\n  ['wasm', 'application/wasm'],\n  ['webmanifest', 'application/manifest+json'],\n\n  // HTML Embedded Scripts, ASP], JSP\n  ['asp', 'application/x-aspx'],\n  ['aspx', 'application/x-aspx'],\n  ['jsp', 'application/x-jsp'],\n\n  // C/C++\n  ['c', 'text/x-c++src'],\n  ['cc', 'text/x-c++src'],\n  ['cpp', 'text/x-c++src'],\n  ['h', 'text/x-c++src'],\n  ['m', 'text/x-c++src'],\n  ['mm', 'text/x-c++src'],\n\n  // CoffeeScript\n  ['coffee', 'text/x-coffeescript'],\n\n  // Dart\n  ['dart', 'application/vnd.dart'],\n\n  // TypeScript\n  ['ts', 'text/typescript'],\n  ['tsx', 'text/typescript-jsx'],\n\n  // JSON\n  ['json', 'application/json'],\n  ['gyp', 'application/json'],\n  ['gypi', 'application/json'],\n  ['map', 'application/json'],\n\n  // C#\n  ['cs', 'text/x-csharp'],\n\n  // Go\n  ['go', 'text/x-go'],\n\n  // Java\n  ['java', 'text/x-java'],\n\n  // Kotlin\n  ['kt', 'text/x-kotlin'],\n\n  // Scala\n  ['scala', 'text/x-scala'],\n\n  // Less\n  ['less', 'text/x-less'],\n\n  // PHP\n  ['php', 'application/x-httpd-php'],\n  ['phtml', 'application/x-httpd-php'],\n\n  // Python\n  ['py', 'text/x-python'],\n\n  // Shell\n  ['sh', 'text/x-sh'],\n\n  // Google Stylesheets (GSS)\n  ['gss', 'text/x-gss'],\n\n  // SASS (.sass & .scss)\n  ['sass', 'text/x-sass'],\n  ['scss', 'text/x-scss'],\n\n  // Video Text Tracks.\n  ['vtt', 'text/vtt'],\n\n  // LiveScript\n  ['ls', 'text/x-livescript'],\n\n  // Markdown\n  ['md', 'text/markdown'],\n\n  // ClojureScript\n  ['cljs', 'text/x-clojure'],\n  ['cljc', 'text/x-clojure'],\n  ['cljx', 'text/x-clojure'],\n\n  // Stylus\n  ['styl', 'text/x-styl'],\n\n  // JSX\n  ['jsx', 'text/jsx'],\n\n  // Image\n  ['avif', 'image/avif'],\n  ['bmp', 'image/bmp'],\n  ['gif', 'image/gif'],\n  ['ico', 'image/ico'],\n  ['jpeg', 'image/jpeg'],\n  ['jpg', 'image/jpeg'],\n  ['jxl', 'image/jxl'],\n  ['png', 'image/png'],\n  ['svg', 'image/svg+xml'],\n  ['tif', 'image/tif'],\n  ['tiff', 'image/tiff'],\n  ['webp', 'image/webp'],\n\n  // Font\n  ['otf', 'font/otf'],\n  ['ttc', 'font/collection'],\n  ['ttf', 'font/ttf'],\n  ['woff', 'font/woff'],\n  ['woff2', 'font/woff2'],\n\n  // Angular\n  ['component.html', 'text/x.angular'],\n\n  // Svelte\n  ['svelte', 'text/x.svelte'],\n\n  // Vue\n  ['vue', 'text/x.vue'],\n]);\n"],
  "mappings": "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",
  "names": []
}
