{"version":3,"file":"Runnable.js","sourceRoot":"","sources":["../../../../../../front_end/core/common/Runnable.ts"],"names":[],"mappings":"AAAA,sCAAsC;AACtC,yEAAyE;AACzE,6BAA6B;AAY7B,MAAM,qCAAqC,GAAG,IAAI,GAAG,EAAoC,CAAC;AAE1F,MAAM,UAAU,kCAAkC,CAAC,OAAyC;IAC1F,MAAM,EAAC,EAAE,EAAE,YAAY,EAAC,GAAG,OAAO,CAAC;IACnC,IAAI,qCAAqC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC;QAClD,MAAM,IAAI,KAAK,CAAC,6CAA6C,EAAE,GAAG,CAAC,CAAC;IACtE,CAAC;IACD,qCAAqC,CAAC,GAAG,CAAC,EAAE,EAAE,YAAY,CAAC,CAAC;AAC9D,CAAC;AAED,MAAM,UAAU,qCAAqC,CAAC,UAAkB;IACtE,OAAO,qCAAqC,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;AAClE,CAAC;AAED,MAAM,UAAU,2BAA2B;IACzC,OAAO,CAAC,GAAG,qCAAqC,CAAC,MAAM,EAAE,CAAC,CAAC;AAC7D,CAAC;AAED,MAAM,sCAAsC,GAA0B,EAAE,CAAC;AAEzE,MAAM,UAAU,mCAAmC,CAAC,QAAwB;IAC1E,sCAAsC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AACxD,CAAC;AAED,MAAM,UAAU,4BAA4B;IAC1C,OAAO,sCAAsC,CAAC;AAChD,CAAC","sourcesContent":["// Copyright 2019 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nexport interface Runnable {\n  run(): Promise<void>;\n}\n\ntype LateInitializationLoader = () => Promise<Runnable>;\nexport interface LateInitializableRunnableSetting {\n  id: string;\n  loadRunnable: LateInitializationLoader;\n}\n\nconst registeredLateInitializationRunnables = new Map<string, LateInitializationLoader>();\n\nexport function registerLateInitializationRunnable(setting: LateInitializableRunnableSetting): void {\n  const {id, loadRunnable} = setting;\n  if (registeredLateInitializationRunnables.has(id)) {\n    throw new Error(`Duplicate late Initializable runnable id '${id}'`);\n  }\n  registeredLateInitializationRunnables.set(id, loadRunnable);\n}\n\nexport function maybeRemoveLateInitializationRunnable(runnableId: string): boolean {\n  return registeredLateInitializationRunnables.delete(runnableId);\n}\n\nexport function lateInitializationRunnables(): LateInitializationLoader[] {\n  return [...registeredLateInitializationRunnables.values()];\n}\n\nconst registeredEarlyInitializationRunnables: Array<() => Runnable> = [];\n\nexport function registerEarlyInitializationRunnable(runnable: () => Runnable): void {\n  registeredEarlyInitializationRunnables.push(runnable);\n}\n\nexport function earlyInitializationRunnables(): Array<() => Runnable> {\n  return registeredEarlyInitializationRunnables;\n}\n"]}