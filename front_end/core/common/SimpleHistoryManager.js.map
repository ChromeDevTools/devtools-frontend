{"version":3,"file":"SimpleHistoryManager.js","sourceRoot":"","sources":["../../../../../../front_end/core/common/SimpleHistoryManager.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2014 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nexport interface HistoryEntry {\n  valid(): boolean;\n\n  reveal(): void;\n}\n\nexport class SimpleHistoryManager {\n  #entries: HistoryEntry[];\n  #activeEntryIndex: number;\n  #coalescingReadonly: number;\n  readonly #historyDepth: number;\n  constructor(historyDepth: number) {\n    this.#entries = [];\n    this.#activeEntryIndex = -1;\n\n    // Lock is used to make sure that reveal() does not\n    // make any changes to the history while we are\n    // rolling back or rolling over.\n    this.#coalescingReadonly = 0;\n    this.#historyDepth = historyDepth;\n  }\n\n  private readOnlyLock(): void {\n    ++this.#coalescingReadonly;\n  }\n\n  private releaseReadOnlyLock(): void {\n    --this.#coalescingReadonly;\n  }\n\n  private getPreviousValidIndex(): number {\n    if (this.empty()) {\n      return -1;\n    }\n\n    let revealIndex = this.#activeEntryIndex - 1;\n    while (revealIndex >= 0 && !this.#entries[revealIndex].valid()) {\n      --revealIndex;\n    }\n    if (revealIndex < 0) {\n      return -1;\n    }\n\n    return revealIndex;\n  }\n\n  private getNextValidIndex(): number {\n    let revealIndex = this.#activeEntryIndex + 1;\n\n    while (revealIndex < this.#entries.length && !this.#entries[revealIndex].valid()) {\n      ++revealIndex;\n    }\n    if (revealIndex >= this.#entries.length) {\n      return -1;\n    }\n\n    return revealIndex;\n  }\n\n  private readOnly(): boolean {\n    return Boolean(this.#coalescingReadonly);\n  }\n\n  empty(): boolean {\n    return !this.#entries.length;\n  }\n\n  active(): HistoryEntry|null {\n    return this.empty() ? null : this.#entries[this.#activeEntryIndex];\n  }\n\n  push(entry: HistoryEntry): void {\n    if (this.readOnly()) {\n      return;\n    }\n    if (!this.empty()) {\n      this.#entries.splice(this.#activeEntryIndex + 1);\n    }\n    this.#entries.push(entry);\n    if (this.#entries.length > this.#historyDepth) {\n      this.#entries.shift();\n    }\n    this.#activeEntryIndex = this.#entries.length - 1;\n  }\n\n  canRollback(): boolean {\n    return this.getPreviousValidIndex() >= 0;\n  }\n\n  canRollover(): boolean {\n    return this.getNextValidIndex() >= 0;\n  }\n\n  rollback(): boolean {\n    const revealIndex = this.getPreviousValidIndex();\n    if (revealIndex === -1) {\n      return false;\n    }\n    this.readOnlyLock();\n    this.#activeEntryIndex = revealIndex;\n    this.#entries[revealIndex].reveal();\n    this.releaseReadOnlyLock();\n\n    return true;\n  }\n\n  rollover(): boolean {\n    const revealIndex = this.getNextValidIndex();\n    if (revealIndex === -1) {\n      return false;\n    }\n\n    this.readOnlyLock();\n    this.#activeEntryIndex = revealIndex;\n    this.#entries[revealIndex].reveal();\n    this.releaseReadOnlyLock();\n\n    return true;\n  }\n}\n"]}