{
  "version": 3,
  "sources": ["../../../../../../front_end/core/common/TextDictionary.ts"],
  "sourcesContent": ["// Copyright 2013 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {Trie} from './Trie.js';\n\nexport class TextDictionary {\n  readonly words = new Map<string, number>();\n  readonly index = Trie.newStringTrie();\n\n  addWord(word: string): void {\n    let count = this.words.get(word) || 0;\n    ++count;\n    this.words.set(word, count);\n    this.index.add(word);\n  }\n\n  removeWord(word: string): void {\n    let count = this.words.get(word) || 0;\n    if (!count) {\n      return;\n    }\n    if (count === 1) {\n      this.words.delete(word);\n      this.index.remove(word);\n      return;\n    }\n    --count;\n    this.words.set(word, count);\n  }\n\n  wordsWithPrefix(prefix: string): string[] {\n    return this.index.words(prefix);\n  }\n\n  hasWord(word: string): boolean {\n    return this.words.has(word);\n  }\n\n  wordCount(word: string): number {\n    return this.words.get(word) || 0;\n  }\n\n  reset(): void {\n    this.words.clear();\n    this.index.clear();\n  }\n}\n"],
  "mappings": ";AAIA,SAAQ,YAAW;AAEZ,aAAM,eAAe;AAAA,EACjB,QAAQ,oBAAI,IAAoB;AAAA,EAChC,QAAQ,KAAK,cAAc;AAAA,EAEpC,QAAQ,MAAoB;AAC1B,QAAI,QAAQ,KAAK,MAAM,IAAI,IAAI,KAAK;AACpC,MAAE;AACF,SAAK,MAAM,IAAI,MAAM,KAAK;AAC1B,SAAK,MAAM,IAAI,IAAI;AAAA,EACrB;AAAA,EAEA,WAAW,MAAoB;AAC7B,QAAI,QAAQ,KAAK,MAAM,IAAI,IAAI,KAAK;AACpC,QAAI,CAAC,OAAO;AACV;AAAA,IACF;AACA,QAAI,UAAU,GAAG;AACf,WAAK,MAAM,OAAO,IAAI;AACtB,WAAK,MAAM,OAAO,IAAI;AACtB;AAAA,IACF;AACA,MAAE;AACF,SAAK,MAAM,IAAI,MAAM,KAAK;AAAA,EAC5B;AAAA,EAEA,gBAAgB,QAA0B;AACxC,WAAO,KAAK,MAAM,MAAM,MAAM;AAAA,EAChC;AAAA,EAEA,QAAQ,MAAuB;AAC7B,WAAO,KAAK,MAAM,IAAI,IAAI;AAAA,EAC5B;AAAA,EAEA,UAAU,MAAsB;AAC9B,WAAO,KAAK,MAAM,IAAI,IAAI,KAAK;AAAA,EACjC;AAAA,EAEA,QAAc;AACZ,SAAK,MAAM,MAAM;AACjB,SAAK,MAAM,MAAM;AAAA,EACnB;AACF;",
  "names": []
}
