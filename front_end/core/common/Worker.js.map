{
  "version": 3,
  "sources": ["../../../../../../front_end/core/common/Worker.ts"],
  "sourcesContent": ["// Copyright 2014 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nexport class WorkerWrapper {\n  readonly #workerPromise: Promise<Worker>;\n  #disposed?: boolean;\n  #rejectWorkerPromise?: (error: Error) => void;\n\n  private constructor(workerLocation: URL) {\n    this.#workerPromise = new Promise((fulfill, reject) => {\n      this.#rejectWorkerPromise = reject;\n      const worker = new Worker(workerLocation, {type: 'module'});\n      worker.onerror = event => {\n        console.error(`Failed to load worker for ${workerLocation.href}:`, event);\n      };\n      worker.onmessage = (event: MessageEvent<unknown>) => {\n        console.assert(event.data === 'workerReady');\n        worker.onmessage = null;\n        fulfill(worker);\n      };\n    });\n  }\n\n  static fromURL(url: URL): WorkerWrapper {\n    return new WorkerWrapper(url);\n  }\n\n  postMessage(message: unknown, transfer?: Transferable[]): void {\n    void this.#workerPromise.then(worker => {\n      if (!this.#disposed) {\n        worker.postMessage(message, transfer ?? []);\n      }\n    });\n  }\n\n  dispose(): void {\n    this.#disposed = true;\n    void this.#workerPromise.then(worker => worker.terminate());\n  }\n\n  terminate(immediately = false): void {\n    if (immediately) {\n      this.#rejectWorkerPromise?.(new Error('Worker terminated'));\n    }\n    this.dispose();\n  }\n\n  set onmessage(listener: (event: MessageEvent) => void) {\n    void this.#workerPromise.then(worker => {\n      worker.onmessage = listener;\n    });\n  }\n\n  set onerror(listener: (event: Event) => void) {\n    void this.#workerPromise.then(worker => {\n      worker.onerror = listener;\n    });\n  }\n}\n"],
  "mappings": ";AAIO,aAAM,cAAc;AAAA,EAChB;AAAA,EACT;AAAA,EACA;AAAA,EAEQ,YAAY,gBAAqB;AACvC,SAAK,iBAAiB,IAAI,QAAQ,CAAC,SAAS,WAAW;AACrD,WAAK,uBAAuB;AAC5B,YAAM,SAAS,IAAI,OAAO,gBAAgB,EAAC,MAAM,SAAQ,CAAC;AAC1D,aAAO,UAAU,WAAS;AACxB,gBAAQ,MAAM,6BAA6B,eAAe,IAAI,KAAK,KAAK;AAAA,MAC1E;AACA,aAAO,YAAY,CAAC,UAAiC;AACnD,gBAAQ,OAAO,MAAM,SAAS,aAAa;AAC3C,eAAO,YAAY;AACnB,gBAAQ,MAAM;AAAA,MAChB;AAAA,IACF,CAAC;AAAA,EACH;AAAA,EAEA,OAAO,QAAQ,KAAyB;AACtC,WAAO,IAAI,cAAc,GAAG;AAAA,EAC9B;AAAA,EAEA,YAAY,SAAkB,UAAiC;AAC7D,SAAK,KAAK,eAAe,KAAK,YAAU;AACtC,UAAI,CAAC,KAAK,WAAW;AACnB,eAAO,YAAY,SAAS,YAAY,CAAC,CAAC;AAAA,MAC5C;AAAA,IACF,CAAC;AAAA,EACH;AAAA,EAEA,UAAgB;AACd,SAAK,YAAY;AACjB,SAAK,KAAK,eAAe,KAAK,YAAU,OAAO,UAAU,CAAC;AAAA,EAC5D;AAAA,EAEA,UAAU,cAAc,OAAa;AACnC,QAAI,aAAa;AACf,WAAK,uBAAuB,IAAI,MAAM,mBAAmB,CAAC;AAAA,IAC5D;AACA,SAAK,QAAQ;AAAA,EACf;AAAA,EAEA,IAAI,UAAU,UAAyC;AACrD,SAAK,KAAK,eAAe,KAAK,YAAU;AACtC,aAAO,YAAY;AAAA,IACrB,CAAC;AAAA,EACH;AAAA,EAEA,IAAI,QAAQ,UAAkC;AAC5C,SAAK,KAAK,eAAe,KAAK,YAAU;AACtC,aAAO,UAAU;AAAA,IACnB,CAAC;AAAA,EACH;AACF;",
  "names": []
}
