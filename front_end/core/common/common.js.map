{
  "version": 3,
  "sources": ["../../../../../../front_end/core/common/App.ts", "../../../../../../front_end/core/common/AppProvider.ts", "../../../../../../front_end/core/common/Base64.ts", "../../../../../../front_end/core/common/CharacterIdMap.ts", "../../../../../../front_end/core/common/Color.ts", "../../../../../../front_end/core/common/ColorConverter.ts", "../../../../../../front_end/core/common/ColorUtils.ts", "../../../../../../front_end/core/common/Console.ts", "../../../../../../front_end/core/common/Object.ts", "../../../../../../front_end/core/common/Revealer.ts", "../../../../../../front_end/core/common/Debouncer.ts", "../../../../../../front_end/core/common/EventTarget.ts", "../../../../../../front_end/core/common/Gzip.ts", "../../../../../../front_end/core/common/JavaScriptMetaData.ts", "../../../../../../front_end/core/common/Lazy.ts", "../../../../../../front_end/core/common/Linkifier.ts", "../../../../../../front_end/core/common/MapWithDefault.ts", "../../../../../../front_end/core/common/Mutex.ts", "../../../../../../front_end/core/common/ParsedURL.ts", "../../../../../../front_end/core/common/Progress.ts", "../../../../../../front_end/core/common/QueryParamHandler.ts", "../../../../../../front_end/core/common/ResolverBase.ts", "../../../../../../front_end/core/common/ResourceType.ts", "../../../../../../front_end/core/common/ReturnToPanel.ts", "../../../../../../front_end/core/common/Runnable.ts", "../../../../../../front_end/core/common/SegmentedRange.ts", "../../../../../../front_end/core/common/SettingRegistration.ts", "../../../../../../front_end/core/common/Settings.ts", "../../../../../../front_end/core/common/SimpleHistoryManager.ts", "../../../../../../front_end/core/common/StringOutputStream.ts", "../../../../../../front_end/core/common/TextDictionary.ts", "../../../../../../front_end/core/common/Trie.ts", "../../../../../../front_end/core/common/Throttler.ts", "../../../../../../front_end/core/common/Worker.ts", "common.prebundle.ts"],
  "sourcesContent": ["// Copyright 2019 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nexport interface App {\n  presentUI(document: Document): void;\n}\n", "// Copyright 2019 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Root from '../root/root.js';\n\nimport type {App} from './App.js';\n\nexport interface AppProvider {\n  createApp(): App;\n}\n\nconst registeredAppProvider: AppProviderRegistration[] = [];\n\nexport function registerAppProvider(registration: AppProviderRegistration): void {\n  registeredAppProvider.push(registration);\n}\nexport function getRegisteredAppProviders(): AppProviderRegistration[] {\n  return registeredAppProvider\n      .filter(\n          provider => Root.Runtime.Runtime.isDescriptorEnabled({experiment: undefined, condition: provider.condition}))\n      .sort((firstProvider, secondProvider) => {\n        const order1 = firstProvider.order || 0;\n        const order2 = secondProvider.order || 0;\n        return order1 - order2;\n      });\n}\nexport interface AppProviderRegistration {\n  loadAppProvider: () => Promise<AppProvider>;\n  condition?: Root.Runtime.Condition;\n  order: number;\n}\n", "// Copyright 2020 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nexport const BASE64_CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\nexport const BASE64_CODES = new Uint8Array(123);\nfor (let index = 0; index < BASE64_CHARS.length; ++index) {\n  BASE64_CODES[BASE64_CHARS.charCodeAt(index)] = index;\n}\n\n/**\n * Decodes Base64-encoded data from a string without performing any kind of checking.\n */\nexport function decode(input: string): Uint8Array<ArrayBuffer> {\n  let bytesLength = ((input.length * 3) / 4) >>> 0;\n  if (input.charCodeAt(input.length - 2) === 0x3d /* '=' */) {\n    bytesLength -= 2;\n  } else if (input.charCodeAt(input.length - 1) === 0x3d /* '=' */) {\n    bytesLength -= 1;\n  }\n\n  const bytes = new Uint8Array(bytesLength);\n  for (let index = 0, offset = 0; index < input.length; index += 4) {\n    const a = BASE64_CODES[input.charCodeAt(index + 0)];\n    const b = BASE64_CODES[input.charCodeAt(index + 1)];\n    const c = BASE64_CODES[input.charCodeAt(index + 2)];\n    const d = BASE64_CODES[input.charCodeAt(index + 3)];\n    bytes[offset++] = (a << 2) | (b >> 4);\n    bytes[offset++] = ((b & 0x0f) << 4) | (c >> 2);\n    bytes[offset++] = ((c & 0x03) << 6) | (d & 0x3f);\n  }\n  return bytes;\n}\n\nexport function encode(input: BlobPart): Promise<string> {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onerror = () => reject(new Error('failed to convert to base64'));\n    reader.onload = () => {\n      const blobAsUrl = reader.result as string;\n      const [, base64] = blobAsUrl.split(',', 2);\n      resolve(base64);\n    };\n\n    reader.readAsDataURL(new Blob([input]));\n  });\n}\n", "// Copyright 2016 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nexport class CharacterIdMap<T> {\n  readonly #elementToCharacter = new Map<T, string>();\n  readonly #characterToElement = new Map<string, T>();\n  #charCode = 33;\n\n  toChar(object: T): string {\n    let character = this.#elementToCharacter.get(object);\n    if (!character) {\n      if (this.#charCode >= 0xFFFF) {\n        throw new Error('CharacterIdMap ran out of capacity!');\n      }\n      character = String.fromCharCode(this.#charCode++);\n      this.#elementToCharacter.set(object, character);\n      this.#characterToElement.set(character, object);\n    }\n    return character;\n  }\n\n  fromChar(character: string): T|null {\n    const object = this.#characterToElement.get(character);\n    if (object === undefined) {\n      return null;\n    }\n    return object;\n  }\n}\n", "// Copyright 2021 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/*\n * Copyright (C) 2009 Apple Inc.  All rights reserved.\n * Copyright (C) 2009 Joseph Pecoraro\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1.  Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n * 2.  Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\n *     its contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Platform from '../platform/platform.js';\n\nimport {ColorConverter} from './ColorConverter.js';\nimport {\n  blendColors,\n  type Color3D,\n  type Color4D,\n  type Color4DOr3D,\n  contrastRatioAPCA,\n  desiredLuminanceAPCA,\n  luminance,\n  luminanceAPCA,\n  rgbToHsl,\n  rgbToHwb,\n} from './ColorUtils.js';\n\n/**\n * <hue> is defined as a <number> or <angle>\n * and we hold this in degrees. However, after\n * the conversions, these degrees can result in\n * negative values. That's why we normalize the hue to be\n * between [0 - 360].\n **/\nfunction normalizeHue(hue: number): number {\n  // Even though it is highly unlikely, hue can be\n  // very negative like -400. The initial modulo\n  // operation makes sure that the if the number is\n  // negative, it is between [-360, 0].\n  return ((hue % 360) + 360) % 360;\n}\n\n/**\n * Parses angle in the form of\n * `<angle>deg`, `<angle>turn`, `<angle>grad and `<angle>rad`\n * and returns the canonicalized `degree`.\n **/\nfunction parseAngle(angleText: string): number|null {\n  const angle = angleText.replace(/(deg|g?rad|turn)$/, '');\n  // @ts-expect-error: isNaN can accept strings\n  if (isNaN(angle) || angleText.match(/\\s+(deg|g?rad|turn)/)) {\n    return null;\n  }\n\n  const number = parseFloat(angle);\n  if (angleText.includes('turn')) {\n    // 1turn === 360deg\n    return number * 360;\n  }\n\n  if (angleText.includes('grad')) {\n    // 1grad === 0.9deg\n    return number * 9 / 10;\n  }\n\n  if (angleText.includes('rad')) {\n    // πrad === 180deg\n    return number * 180 / Math.PI;\n  }\n\n  // 1deg === 1deg ^_^\n  return number;\n}\n\n/** Returns the `Format` equivalent from the format text **/\nexport function getFormat(formatText: string): Format|null {\n  switch (formatText) {\n    case Format.HEX:\n      return Format.HEX;\n    case Format.HEXA:\n      return Format.HEXA;\n    case Format.RGB:\n      return Format.RGB;\n    case Format.RGBA:\n      return Format.RGBA;\n    case Format.HSL:\n      return Format.HSL;\n    case Format.HSLA:\n      return Format.HSLA;\n    case Format.HWB:\n      return Format.HWB;\n    case Format.HWBA:\n      return Format.HWBA;\n    case Format.LCH:\n      return Format.LCH;\n    case Format.OKLCH:\n      return Format.OKLCH;\n    case Format.LAB:\n      return Format.LAB;\n    case Format.OKLAB:\n      return Format.OKLAB;\n  }\n\n  return getColorSpace(formatText);\n}\n\n// Returns the `ColorSpace` equivalent from the color space text\ntype ColorSpace = Format.SRGB|Format.SRGB_LINEAR|Format.DISPLAY_P3|Format.A98_RGB|Format.PROPHOTO_RGB|\n                  Format.REC_2020|Format.XYZ|Format.XYZ_D50|Format.XYZ_D65;\nfunction getColorSpace(colorSpaceText: string): ColorSpace|null {\n  switch (colorSpaceText) {\n    case Format.SRGB:\n      return Format.SRGB;\n    case Format.SRGB_LINEAR:\n      return Format.SRGB_LINEAR;\n    case Format.DISPLAY_P3:\n      return Format.DISPLAY_P3;\n    case Format.A98_RGB:\n      return Format.A98_RGB;\n    case Format.PROPHOTO_RGB:\n      return Format.PROPHOTO_RGB;\n    case Format.REC_2020:\n      return Format.REC_2020;\n    case Format.XYZ:\n      return Format.XYZ;\n    case Format.XYZ_D50:\n      return Format.XYZ_D50;\n    case Format.XYZ_D65:\n      return Format.XYZ_D65;\n  }\n\n  return null;\n}\n\nexport const enum ColorChannel {\n  A = 'a',\n  ALPHA = 'alpha',\n  B = 'b',\n  C = 'c',\n  G = 'g',\n  H = 'h',\n  L = 'l',\n  R = 'r',\n  S = 's',\n  W = 'w',\n  X = 'x',\n  Y = 'y',\n  Z = 'z',\n}\n\n/**\n * Percents in color spaces are mapped to ranges.\n * These ranges change based on the syntax.\n * For example, for 'C' in lch() c: 0% = 0, 100% = 150.\n * See: https://www.w3.org/TR/css-color-4/#funcdef-lch\n * Some percentage values can be negative\n * though their ranges don't change depending on the sign\n * (for now, according to spec).\n * @param percent % value of the number. 42 for 42%.\n * @param range Range of [min, max]. Including `min` and `max`.\n */\nfunction mapPercentToRange(percent: number, range: [number, number]): number {\n  const sign = Math.sign(percent);\n  const absPercent = Math.abs(percent);\n  const [outMin, outMax] = range;\n\n  return sign * (absPercent * (outMax - outMin) / 100 + outMin);\n}\n\ninterface SplitColorFunctionParametersOptions {\n  allowCommas: boolean;\n  convertNoneToZero: boolean;\n}\n\nexport function parse(text: string): Color|null {\n  // #hex, nickname\n  if (!text.match(/\\s/)) {\n    const match = text.toLowerCase().match(/^(?:#([0-9a-f]{3,4}|[0-9a-f]{6}|[0-9a-f]{8})|(\\w+))$/i);\n    if (match) {\n      if (match[1]) {\n        return Legacy.fromHex(match[1], text);\n      }\n\n      if (match[2]) {\n        return Nickname.fromName(match[2], text);\n      }\n\n      return null;\n    }\n  }\n\n  // rgb/rgba(), hsl/hsla(), hwb/hwba(), lch(), oklch(), lab(), oklab() and color()\n  const match =\n      text.toLowerCase().match(/^\\s*(?:(rgba?)|(hsla?)|(hwba?)|(lch)|(oklch)|(lab)|(oklab)|(color))\\((.*)\\)\\s*$/);\n  if (match) {\n    const isRgbaMatch = Boolean(match[1]);   // rgb/rgba()\n    const isHslaMatch = Boolean(match[2]);   // hsl/hsla()\n    const isHwbaMatch = Boolean(match[3]);   // hwb/hwba()\n    const isLchMatch = Boolean(match[4]);    // lch()\n    const isOklchMatch = Boolean(match[5]);  // oklch()\n    const isLabMatch = Boolean(match[6]);    // lab()\n    const isOklabMatch = Boolean(match[7]);  // oklab()\n    const isColorMatch = Boolean(match[8]);  // color()\n    const valuesText = match[9];\n\n    // Parse color function first because extracting values for\n    // this function is not the same as the other ones\n    // so, we're not using any of the logic below.\n    if (isColorMatch) {\n      return ColorFunction.fromSpec(text, valuesText);\n    }\n\n    const isOldSyntax = isRgbaMatch || isHslaMatch || isHwbaMatch;\n    const allowCommas = isRgbaMatch || isHslaMatch;\n    const convertNoneToZero = !isOldSyntax;  // Convert 'none' keyword to zero in new syntaxes\n\n    const values = splitColorFunctionParameters(valuesText, {allowCommas, convertNoneToZero});\n    if (!values) {\n      return null;\n    }\n    const spec: ColorParameterSpec = [values[0], values[1], values[2], values[3]];\n    if (isRgbaMatch) {\n      return Legacy.fromRGBAFunction(values[0], values[1], values[2], values[3], text);\n    }\n\n    if (isHslaMatch) {\n      return HSL.fromSpec(spec, text);\n    }\n\n    if (isHwbaMatch) {\n      return HWB.fromSpec(spec, text);\n    }\n\n    if (isLchMatch) {\n      return LCH.fromSpec(spec, text);\n    }\n\n    if (isOklchMatch) {\n      return Oklch.fromSpec(spec, text);\n    }\n\n    if (isLabMatch) {\n      return Lab.fromSpec(spec, text);\n    }\n\n    if (isOklabMatch) {\n      return Oklab.fromSpec(spec, text);\n    }\n  }\n\n  return null;\n}\n\n/**\n * Split the color parameters of (e.g.) rgb(a), hsl(a), hwb(a) functions.\n */\nfunction splitColorFunctionParameters(\n    content: string, {allowCommas, convertNoneToZero}: SplitColorFunctionParametersOptions): string[]|null {\n  const components = content.trim();\n  let values: string[] = [];\n\n  if (allowCommas) {\n    values = components.split(/\\s*,\\s*/);\n  }\n  if (!allowCommas || values.length === 1) {\n    values = components.split(/\\s+/);\n    if (values[3] === '/') {\n      values.splice(3, 1);\n      if (values.length !== 4) {\n        return null;\n      }\n    } else if (\n        (values.length > 2 && values[2].indexOf('/') !== -1) || (values.length > 3 && values[3].indexOf('/') !== -1)) {\n      const alpha = values.slice(2, 4).join('');\n      values = values.slice(0, 2).concat(alpha.split(/\\//)).concat(values.slice(4));\n    } else if (values.length >= 4) {\n      return null;\n    }\n  }\n  if (values.length !== 3 && values.length !== 4 || values.indexOf('') > -1) {\n    return null;\n  }\n\n  // Question: what should we do with `alpha` being none?\n  if (convertNoneToZero) {\n    return values.map(value => value === 'none' ? '0' : value);\n  }\n\n  return values;\n}\n\nfunction clamp(value: number, {min, max}: {min?: number, max?: number}): number;\nfunction clamp(value: null, {min, max}: {min?: number, max?: number}): null;\nfunction clamp(value: number|null, {min, max}: {min?: number, max?: number}): number|null;\nfunction clamp(value: number|null, {min, max}: {min?: number, max?: number}): number|null {\n  if (value === null) {\n    return value;\n  }\n  if (min !== undefined) {\n    value = Math.max(value, min);\n  }\n  if (max !== undefined) {\n    value = Math.min(value, max);\n  }\n  return value;\n}\n\nfunction parsePercentage(value: string, range: [number, number]): number|null {\n  if (!value.endsWith('%')) {\n    return null;\n  }\n  const percentage = parseFloat(value.substr(0, value.length - 1));\n  return isNaN(percentage) ? null : mapPercentToRange(percentage, range);\n}\n\nfunction parseNumber(value: string): number|null {\n  const number = parseFloat(value);\n  return isNaN(number) ? null : number;\n}\n\nfunction parseAlpha(value: string|undefined): number|null {\n  if (value === undefined) {\n    return null;\n  }\n  return clamp(parsePercentage(value, [0, 1]) ?? parseNumber(value), {min: 0, max: 1});\n}\n\n/**\n *\n * @param value Text value to be parsed in the form of 'number|percentage'.\n * @param range Range to map the percentage.\n * @returns If it is not percentage, returns number directly; otherwise,\n * maps the percentage to the range. For example:\n * - 30% in range [0, 100] is 30\n * - 20% in range [0, 1] is 0.5\n */\nfunction parsePercentOrNumber(value: string, range: [number, number] = [0, 1]): number|null {\n  // @ts-expect-error: isNaN can accept strings\n  if (isNaN(value.replace('%', ''))) {\n    return null;\n  }\n  const parsed = parseFloat(value);\n\n  if (value.indexOf('%') !== -1) {\n    if (value.indexOf('%') !== value.length - 1) {\n      return null;\n    }\n    return mapPercentToRange(parsed, range);\n  }\n  return parsed;\n}\n\nfunction parseRgbNumeric(value: string): number|null {\n  const parsed = parsePercentOrNumber(value);\n  if (parsed === null) {\n    return null;\n  }\n\n  if (value.indexOf('%') !== -1) {\n    return parsed;\n  }\n  return parsed / 255;\n}\n\nexport function parseHueNumeric(value: string): number|null {\n  const angle = value.replace(/(deg|g?rad|turn)$/, '');\n  // @ts-expect-error: isNaN can accept strings\n  if (isNaN(angle) || value.match(/\\s+(deg|g?rad|turn)/)) {\n    return null;\n  }\n  const number = parseFloat(angle);\n\n  if (value.indexOf('turn') !== -1) {\n    return number % 1;\n  }\n  if (value.indexOf('grad') !== -1) {\n    return (number / 400) % 1;\n  }\n  if (value.indexOf('rad') !== -1) {\n    return (number / (2 * Math.PI)) % 1;\n  }\n  return (number / 360) % 1;\n}\n\nfunction parseSatLightNumeric(value: string): number|null {\n  // @ts-expect-error: isNaN can accept strings\n  if (value.indexOf('%') !== value.length - 1 || isNaN(value.replace('%', ''))) {\n    return null;\n  }\n  const parsed = parseFloat(value);\n  return parsed / 100;\n}\n\nfunction parseAlphaNumeric(value: string): number|null {\n  return parsePercentOrNumber(value);\n}\n\nfunction hsva2hsla(hsva: Color4D): Color4D {\n  const h = hsva[0];\n  let s: 0|number = hsva[1];\n  const v = hsva[2];\n\n  const t = (2 - s) * v;\n  if (v === 0 || s === 0) {\n    s = 0;\n  } else {\n    s *= v / (t < 1 ? t : 2 - t);\n  }\n\n  return [h, s, t / 2, hsva[3]];\n}\n\nexport function hsl2rgb(hsl: Color4D): Color4D {\n  const h = hsl[0];\n  let s: 0|number = hsl[1];\n  const l = hsl[2];\n\n  function hue2rgb(p: number, q: number, h: number): number {\n    if (h < 0) {\n      h += 1;\n    } else if (h > 1) {\n      h -= 1;\n    }\n\n    if ((h * 6) < 1) {\n      return p + (q - p) * h * 6;\n    }\n    if ((h * 2) < 1) {\n      return q;\n    }\n    if ((h * 3) < 2) {\n      return p + (q - p) * ((2 / 3) - h) * 6;\n    }\n    return p;\n  }\n\n  if (s < 0) {\n    s = 0;\n  }\n\n  let q;\n  if (l <= 0.5) {\n    q = l * (1 + s);\n  } else {\n    q = l + s - (l * s);\n  }\n\n  const p = 2 * l - q;\n\n  const tr = h + (1 / 3);\n  const tg = h;\n  const tb = h - (1 / 3);\n\n  return [hue2rgb(p, q, tr), hue2rgb(p, q, tg), hue2rgb(p, q, tb), hsl[3]];\n}\n\nfunction hwb2rgb(hwb: Color4D): Color4D {\n  const h = hwb[0];\n  const w = hwb[1];\n  const b = hwb[2];\n\n  const whiteRatio = w / (w + b);\n  let result: Color4D = [whiteRatio, whiteRatio, whiteRatio, hwb[3]];\n\n  if (w + b < 1) {\n    result = hsl2rgb([h, 1, 0.5, hwb[3]]);\n    for (let i = 0; i < 3; ++i) {\n      result[i] += w - (w + b) * result[i];\n    }\n  }\n\n  return result;\n}\n\nexport function hsva2rgba(hsva: Color4D): Color4D {\n  return hsl2rgb(hsva2hsla(hsva));\n}\n\nexport function rgb2hsv(rgba: Color3D): Color3D {\n  const hsla = rgbToHsl(rgba);\n  const h = hsla[0];\n  let s = hsla[1];\n  const l = hsla[2];\n\n  s *= l < 0.5 ? l : 1 - l;\n  return [h, s !== 0 ? 2 * s / (l + s) : 0, (l + s)];\n}\n\n/**\n * Compute a desired luminance given a given luminance and a desired contrast\n * ratio.\n */\nexport function desiredLuminance(luminance: number, contrast: number, lighter: boolean): number {\n  function computeLuminance(): number {\n    if (lighter) {\n      return (luminance + 0.05) * contrast - 0.05;\n    }\n    return (luminance + 0.05) / contrast - 0.05;\n  }\n  let desiredLuminance = computeLuminance();\n  if (desiredLuminance < 0 || desiredLuminance > 1) {\n    lighter = !lighter;\n    desiredLuminance = computeLuminance();\n  }\n  return desiredLuminance;\n}\n\n/**\n * Approach a value of the given component of `candidateHSVA` such that the\n * calculated luminance of `candidateHSVA` approximates `desiredLuminance`.\n */\nexport function approachColorValue(\n    candidateHSVA: Color4D, index: number, desiredLuminance: number,\n    candidateLuminance: (arg0: Color4D) => number): number|null {\n  const epsilon = 0.0002;\n\n  let x = candidateHSVA[index];\n  let multiplier = 1;\n  let dLuminance: number = candidateLuminance(candidateHSVA) - desiredLuminance;\n  let previousSign = Math.sign(dLuminance);\n\n  for (let guard = 100; guard; guard--) {\n    if (Math.abs(dLuminance) < epsilon) {\n      candidateHSVA[index] = x;\n      return x;\n    }\n\n    const sign = Math.sign(dLuminance);\n    if (sign !== previousSign) {\n      // If `x` overshoots the correct value, halve the step size.\n      multiplier /= 2;\n      previousSign = sign;\n    } else if (x < 0 || x > 1) {\n      // If there is no overshoot and `x` is out of bounds, there is no\n      // acceptable value for `x`.\n      return null;\n    }\n\n    // Adjust `x` by a multiple of `dLuminance` to decrease step size as\n    // the computed luminance converges on `desiredLuminance`.\n    x += multiplier * (index === 2 ? -dLuminance : dLuminance);\n\n    candidateHSVA[index] = x;\n\n    dLuminance = candidateLuminance(candidateHSVA) - desiredLuminance;\n  }\n\n  return null;\n}\n\nexport function findFgColorForContrast(fgColor: Legacy, bgColor: Legacy, requiredContrast: number): Legacy|null {\n  const candidateHSVA = fgColor.as(Format.HSL).hsva();\n  const bgRGBA = bgColor.rgba();\n\n  const candidateLuminance = (candidateHSVA: Color4D): number => {\n    return luminance(blendColors(Legacy.fromHSVA(candidateHSVA).rgba(), bgRGBA));\n  };\n\n  const bgLuminance = luminance(bgColor.rgba());\n  const fgLuminance = candidateLuminance(candidateHSVA);\n  const fgIsLighter = fgLuminance > bgLuminance;\n\n  const desired = desiredLuminance(bgLuminance, requiredContrast, fgIsLighter);\n\n  const saturationComponentIndex = 1;\n  const valueComponentIndex = 2;\n\n  if (approachColorValue(candidateHSVA, valueComponentIndex, desired, candidateLuminance)) {\n    return Legacy.fromHSVA(candidateHSVA);\n  }\n\n  candidateHSVA[valueComponentIndex] = 1;\n  if (approachColorValue(candidateHSVA, saturationComponentIndex, desired, candidateLuminance)) {\n    return Legacy.fromHSVA(candidateHSVA);\n  }\n\n  return null;\n}\n\nexport function findFgColorForContrastAPCA(fgColor: Legacy, bgColor: Legacy, requiredContrast: number): Legacy|null {\n  const candidateHSVA = fgColor.as(Format.HSL).hsva();\n\n  const candidateLuminance = (candidateHSVA: Color4D): number => {\n    return luminanceAPCA(Legacy.fromHSVA(candidateHSVA).rgba());\n  };\n\n  const bgLuminance = luminanceAPCA(bgColor.rgba());\n  const fgLuminance = candidateLuminance(candidateHSVA);\n  const fgIsLighter = fgLuminance >= bgLuminance;\n  const desiredLuminance = desiredLuminanceAPCA(bgLuminance, requiredContrast, fgIsLighter);\n\n  const saturationComponentIndex = 1;\n  const valueComponentIndex = 2;\n\n  if (approachColorValue(candidateHSVA, valueComponentIndex, desiredLuminance, candidateLuminance)) {\n    const candidate = Legacy.fromHSVA(candidateHSVA);\n    if (Math.abs(contrastRatioAPCA(bgColor.rgba(), candidate.rgba())) >= requiredContrast) {\n      return candidate;\n    }\n  }\n\n  candidateHSVA[valueComponentIndex] = 1;\n  if (approachColorValue(candidateHSVA, saturationComponentIndex, desiredLuminance, candidateLuminance)) {\n    const candidate = Legacy.fromHSVA(candidateHSVA);\n    if (Math.abs(contrastRatioAPCA(bgColor.rgba(), candidate.rgba())) >= requiredContrast) {\n      return candidate;\n    }\n  }\n\n  return null;\n}\n\ntype ColorParameterSpec = [string, string, string, string | undefined];\n\ninterface ColorConversions<T = void> {\n  [Format.HEX](self: T): Legacy;\n  [Format.HEXA](self: T): Legacy;\n  [Format.RGB](self: T): Legacy;\n  [Format.RGBA](self: T): Legacy;\n  [Format.HSL](self: T): HSL;\n  [Format.HSLA](self: T): HSL;\n  [Format.HWB](self: T): HWB;\n  [Format.HWBA](self: T): HWB;\n  [Format.LCH](self: T): LCH;\n  [Format.OKLCH](self: T): Oklch;\n  [Format.LAB](self: T): Lab;\n  [Format.OKLAB](self: T): Oklab;\n\n  [Format.SRGB](self: T): ColorFunction;\n  [Format.SRGB_LINEAR](self: T): ColorFunction;\n  [Format.DISPLAY_P3](self: T): ColorFunction;\n  [Format.A98_RGB](self: T): ColorFunction;\n  [Format.PROPHOTO_RGB](self: T): ColorFunction;\n  [Format.REC_2020](self: T): ColorFunction;\n  [Format.XYZ](self: T): ColorFunction;\n  [Format.XYZ_D50](self: T): ColorFunction;\n  [Format.XYZ_D65](self: T): ColorFunction;\n}\n\nexport interface Color {\n  readonly alpha: number|null;\n  readonly channels: [ColorChannel, ColorChannel, ColorChannel, ColorChannel];\n\n  equal(color: Color): boolean;\n  asString(format?: Format): string;\n  setAlpha(alpha: number): Color;\n  format(): Format;\n  as<T extends Format>(format: T): ReturnType<ColorConversions[T]>;\n  is<T extends Format>(format: T): this is ReturnType<ColorConversions[T]>;\n  asLegacyColor(): Legacy;\n\n  // The authored text is the text that was used to define the color. If set, it may be different from what `asString`\n  // returns, for example if the latter normalizes or clamps color channel values. It is also possible that the authored\n  // text is not a parsable color outside of the context in which the color was produced, e.g., when the color stems\n  // from a custom property, the authored text may look like \"var(--color)\".\n  getAuthoredText(): string|null;\n\n  getRawParameters(): Color3D;\n  getAsRawString(format?: Format): string;\n  isGamutClipped(): boolean;\n}\n\nconst EPSILON = 0.01;\nconst WIDE_RANGE_EPSILON = 1;  // For comparisons on channels with a wider range than [0,1]\nfunction equals(a: number[], b: number[], accuracy?: number): boolean;\nfunction equals(a: number|null, b: number|null, accuracy?: number): boolean;\nfunction equals(a: number|null|number[], b: number|null|number[], accuracy = EPSILON): boolean {\n  if (Array.isArray(a) && Array.isArray(b)) {\n    if (a.length !== b.length) {\n      return false;\n    }\n    for (const i in a) {\n      if (!equals(a[i], b[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  if (Array.isArray(a) || Array.isArray(b)) {\n    return false;\n  }\n  if (a === null || b === null) {\n    return a === b;\n  }\n  return Math.abs(a - b) < accuracy;\n}\nfunction lessOrEquals(a: number, b: number, accuracy = EPSILON): boolean {\n  return a - b <= accuracy;\n}\n\nexport const enum Format {\n  HEX = 'hex',\n  HEXA = 'hexa',\n  RGB = 'rgb',\n  RGBA = 'rgba',\n  HSL = 'hsl',\n  HSLA = 'hsla',\n  HWB = 'hwb',\n  HWBA = 'hwba',\n  LCH = 'lch',\n  OKLCH = 'oklch',\n  LAB = 'lab',\n  OKLAB = 'oklab',\n  SRGB = 'srgb',\n  SRGB_LINEAR = 'srgb-linear',\n  DISPLAY_P3 = 'display-p3',\n  A98_RGB = 'a98-rgb',\n  PROPHOTO_RGB = 'prophoto-rgb',\n  REC_2020 = 'rec2020',\n  XYZ = 'xyz',\n  XYZ_D50 = 'xyz-d50',\n  XYZ_D65 = 'xyz-d65',\n}\n\nexport class Lab implements Color {\n  readonly l: number;\n  readonly a: number;\n  readonly b: number;\n  readonly alpha: number|null;\n  readonly #authoredText?: string;\n  readonly #rawParams: Color3D;\n  readonly channels: [ColorChannel, ColorChannel, ColorChannel, ColorChannel] =\n      [ColorChannel.L, ColorChannel.A, ColorChannel.B, ColorChannel.ALPHA];\n\n  static readonly #conversions: ColorConversions<Lab> = {\n    [Format.HEX]: (self: Lab) => new Legacy(self.#getRGBArray(/* withAlpha= */ false), Format.HEX),\n    [Format.HEXA]: (self: Lab) => new Legacy(self.#getRGBArray(/* withAlpha= */ true), Format.HEXA),\n    [Format.RGB]: (self: Lab) => new Legacy(self.#getRGBArray(/* withAlpha= */ false), Format.RGB),\n    [Format.RGBA]: (self: Lab) => new Legacy(self.#getRGBArray(/* withAlpha= */ true), Format.RGBA),\n    [Format.HSL]: (self: Lab) => new HSL(...rgbToHsl(self.#getRGBArray(/* withAlpha= */ false)), self.alpha),\n    [Format.HSLA]: (self: Lab) => new HSL(...rgbToHsl(self.#getRGBArray(/* withAlpha= */ false)), self.alpha),\n    [Format.HWB]: (self: Lab) => new HWB(...rgbToHwb(self.#getRGBArray(/* withAlpha= */ false)), self.alpha),\n    [Format.HWBA]: (self: Lab) => new HWB(...rgbToHwb(self.#getRGBArray(/* withAlpha= */ false)), self.alpha),\n    [Format.LCH]: (self: Lab) => new LCH(...ColorConverter.labToLch(self.l, self.a, self.b), self.alpha),\n    [Format.OKLCH]: (self: Lab) => new Oklch(...ColorConverter.xyzd50ToOklch(...self.#toXyzd50()), self.alpha),\n    [Format.LAB]: (self: Lab) => self,\n    [Format.OKLAB]: (self: Lab) =>\n        new Oklab(...ColorConverter.xyzd65ToOklab(...ColorConverter.xyzd50ToD65(...self.#toXyzd50())), self.alpha),\n\n    [Format.SRGB]: (self: Lab) =>\n        new ColorFunction(Format.SRGB, ...ColorConverter.xyzd50ToSrgb(...self.#toXyzd50()), self.alpha),\n    [Format.SRGB_LINEAR]: (self: Lab) =>\n        new ColorFunction(Format.SRGB_LINEAR, ...ColorConverter.xyzd50TosRGBLinear(...self.#toXyzd50()), self.alpha),\n    [Format.DISPLAY_P3]: (self: Lab) =>\n        new ColorFunction(Format.DISPLAY_P3, ...ColorConverter.xyzd50ToDisplayP3(...self.#toXyzd50()), self.alpha),\n    [Format.A98_RGB]: (self: Lab) =>\n        new ColorFunction(Format.A98_RGB, ...ColorConverter.xyzd50ToAdobeRGB(...self.#toXyzd50()), self.alpha),\n    [Format.PROPHOTO_RGB]: (self: Lab) =>\n        new ColorFunction(Format.PROPHOTO_RGB, ...ColorConverter.xyzd50ToProPhoto(...self.#toXyzd50()), self.alpha),\n    [Format.REC_2020]: (self: Lab) =>\n        new ColorFunction(Format.REC_2020, ...ColorConverter.xyzd50ToRec2020(...self.#toXyzd50()), self.alpha),\n    [Format.XYZ]: (self: Lab) =>\n        new ColorFunction(Format.XYZ, ...ColorConverter.xyzd50ToD65(...self.#toXyzd50()), self.alpha),\n    [Format.XYZ_D50]: (self: Lab) => new ColorFunction(Format.XYZ_D50, ...self.#toXyzd50(), self.alpha),\n    [Format.XYZ_D65]: (self: Lab) =>\n        new ColorFunction(Format.XYZ_D65, ...ColorConverter.xyzd50ToD65(...self.#toXyzd50()), self.alpha),\n  };\n\n  #toXyzd50(): Color3D {\n    return ColorConverter.labToXyzd50(this.l, this.a, this.b);\n  }\n\n  #getRGBArray(withAlpha: true): Color4DOr3D;\n  #getRGBArray(withAlpha: false): Color3D;\n  #getRGBArray(withAlpha = true): Color3D|Color4DOr3D {\n    const params = ColorConverter.xyzd50ToSrgb(...this.#toXyzd50());\n    if (withAlpha) {\n      return [...params, this.alpha ?? undefined];\n    }\n    return params;\n  }\n\n  constructor(l: number, a: number, b: number, alpha: number|null, authoredText?: string|undefined) {\n    this.#rawParams = [l, a, b];\n    this.l = clamp(l, {min: 0, max: 100});\n    if (equals(this.l, 0, WIDE_RANGE_EPSILON) || equals(this.l, 100, WIDE_RANGE_EPSILON)) {\n      a = b = 0;\n    }\n    this.a = a;\n    this.b = b;\n    this.alpha = clamp(alpha, {min: 0, max: 1});\n    this.#authoredText = authoredText;\n  }\n  is<T extends Format>(format: T): this is ReturnType<ColorConversions[T]> {\n    return format === this.format();\n  }\n  as<T extends Format>(format: T): ReturnType<ColorConversions[T]> {\n    return Lab.#conversions[format](this) as ReturnType<ColorConversions[T]>;\n  }\n  asLegacyColor(): Legacy {\n    return this.as(Format.RGBA);\n  }\n  equal(color: Color): boolean {\n    const lab = color.as(Format.LAB);\n    return equals(lab.l, this.l, WIDE_RANGE_EPSILON) && equals(lab.a, this.a) && equals(lab.b, this.b) &&\n        equals(lab.alpha, this.alpha);\n  }\n  format(): Format {\n    return Format.LAB;\n  }\n  setAlpha(alpha: number): Lab {\n    return new Lab(this.l, this.a, this.b, alpha, undefined);\n  }\n  asString(format?: Format): string {\n    if (format) {\n      return this.as(format).asString();\n    }\n    return this.#stringify(this.l, this.a, this.b);\n  }\n  #stringify(l: number, a: number, b: number): string {\n    const alpha = this.alpha === null || equals(this.alpha, 1) ?\n        '' :\n        ` / ${Platform.StringUtilities.stringifyWithPrecision(this.alpha)}`;\n    return `lab(${Platform.StringUtilities.stringifyWithPrecision(l, 0)} ${\n        Platform.StringUtilities.stringifyWithPrecision(\n            a)} ${Platform.StringUtilities.stringifyWithPrecision(b)}${alpha})`;\n  }\n  getAuthoredText(): string|null {\n    return this.#authoredText ?? null;\n  }\n\n  getRawParameters(): Color3D {\n    return [...this.#rawParams];\n  }\n  getAsRawString(format?: Format): string {\n    if (format) {\n      return this.as(format).getAsRawString();\n    }\n    return this.#stringify(...this.#rawParams);\n  }\n  isGamutClipped(): boolean {\n    return false;\n  }\n\n  static fromSpec(spec: ColorParameterSpec, text: string): Lab|null {\n    const L = parsePercentage(spec[0], [0, 100]) ?? parseNumber(spec[0]);\n    if (L === null) {\n      return null;\n    }\n    const a = parsePercentage(spec[1], [0, 125]) ?? parseNumber(spec[1]);\n    if (a === null) {\n      return null;\n    }\n    const b = parsePercentage(spec[2], [0, 125]) ?? parseNumber(spec[2]);\n    if (b === null) {\n      return null;\n    }\n    const alpha = parseAlpha(spec[3]);\n\n    return new Lab(L, a, b, alpha, text);\n  }\n}\n\nexport class LCH implements Color {\n  readonly #rawParams: Color3D;\n  readonly l: number;\n  readonly c: number;\n  readonly h: number;\n  readonly alpha: number|null;\n  readonly #authoredText?: string;\n  readonly channels: [ColorChannel, ColorChannel, ColorChannel, ColorChannel] =\n      [ColorChannel.L, ColorChannel.C, ColorChannel.H, ColorChannel.ALPHA];\n\n  static readonly #conversions: ColorConversions<LCH> = {\n    [Format.HEX]: (self: LCH) => new Legacy(self.#getRGBArray(/* withAlpha= */ false), Format.HEX),\n    [Format.HEXA]: (self: LCH) => new Legacy(self.#getRGBArray(/* withAlpha= */ true), Format.HEXA),\n    [Format.RGB]: (self: LCH) => new Legacy(self.#getRGBArray(/* withAlpha= */ false), Format.RGB),\n    [Format.RGBA]: (self: LCH) => new Legacy(self.#getRGBArray(/* withAlpha= */ true), Format.RGBA),\n    [Format.HSL]: (self: LCH) => new HSL(...rgbToHsl(self.#getRGBArray(/* withAlpha= */ false)), self.alpha),\n    [Format.HSLA]: (self: LCH) => new HSL(...rgbToHsl(self.#getRGBArray(/* withAlpha= */ false)), self.alpha),\n    [Format.HWB]: (self: LCH) => new HWB(...rgbToHwb(self.#getRGBArray(/* withAlpha= */ false)), self.alpha),\n    [Format.HWBA]: (self: LCH) => new HWB(...rgbToHwb(self.#getRGBArray(/* withAlpha= */ false)), self.alpha),\n    [Format.LCH]: (self: LCH) => self,\n    [Format.OKLCH]: (self: LCH) => new Oklch(...ColorConverter.xyzd50ToOklch(...self.#toXyzd50()), self.alpha),\n    [Format.LAB]: (self: LCH) => new Lab(...ColorConverter.lchToLab(self.l, self.c, self.h), self.alpha),\n    [Format.OKLAB]: (self: LCH) =>\n        new Oklab(...ColorConverter.xyzd65ToOklab(...ColorConverter.xyzd50ToD65(...self.#toXyzd50())), self.alpha),\n\n    [Format.SRGB]: (self: LCH) =>\n        new ColorFunction(Format.SRGB, ...ColorConverter.xyzd50ToSrgb(...self.#toXyzd50()), self.alpha),\n    [Format.SRGB_LINEAR]: (self: LCH) =>\n        new ColorFunction(Format.SRGB_LINEAR, ...ColorConverter.xyzd50TosRGBLinear(...self.#toXyzd50()), self.alpha),\n    [Format.DISPLAY_P3]: (self: LCH) =>\n        new ColorFunction(Format.DISPLAY_P3, ...ColorConverter.xyzd50ToDisplayP3(...self.#toXyzd50()), self.alpha),\n    [Format.A98_RGB]: (self: LCH) =>\n        new ColorFunction(Format.A98_RGB, ...ColorConverter.xyzd50ToAdobeRGB(...self.#toXyzd50()), self.alpha),\n    [Format.PROPHOTO_RGB]: (self: LCH) =>\n        new ColorFunction(Format.PROPHOTO_RGB, ...ColorConverter.xyzd50ToProPhoto(...self.#toXyzd50()), self.alpha),\n    [Format.REC_2020]: (self: LCH) =>\n        new ColorFunction(Format.REC_2020, ...ColorConverter.xyzd50ToRec2020(...self.#toXyzd50()), self.alpha),\n    [Format.XYZ]: (self: LCH) =>\n        new ColorFunction(Format.XYZ, ...ColorConverter.xyzd50ToD65(...self.#toXyzd50()), self.alpha),\n    [Format.XYZ_D50]: (self: LCH) => new ColorFunction(Format.XYZ_D50, ...self.#toXyzd50(), self.alpha),\n    [Format.XYZ_D65]: (self: LCH) =>\n        new ColorFunction(Format.XYZ_D65, ...ColorConverter.xyzd50ToD65(...self.#toXyzd50()), self.alpha),\n  };\n\n  #toXyzd50(): Color3D {\n    return ColorConverter.labToXyzd50(...ColorConverter.lchToLab(this.l, this.c, this.h));\n  }\n\n  #getRGBArray(withAlpha: true): Color4DOr3D;\n  #getRGBArray(withAlpha: false): Color3D;\n  #getRGBArray(withAlpha = true): Color4DOr3D|Color3D {\n    const params = ColorConverter.xyzd50ToSrgb(...this.#toXyzd50());\n    if (withAlpha) {\n      return [...params, this.alpha ?? undefined];\n    }\n    return params;\n  }\n\n  constructor(l: number, c: number, h: number, alpha: number|null, authoredText?: string|undefined) {\n    this.#rawParams = [l, c, h];\n    this.l = clamp(l, {min: 0, max: 100});\n    c = equals(this.l, 0, WIDE_RANGE_EPSILON) || equals(this.l, 100, WIDE_RANGE_EPSILON) ? 0 : c;\n    this.c = clamp(c, {min: 0});\n    h = equals(c, 0) ? 0 : h;\n    this.h = normalizeHue(h);\n    this.alpha = clamp(alpha, {min: 0, max: 1});\n    this.#authoredText = authoredText;\n  }\n  asLegacyColor(): Legacy {\n    return this.as(Format.RGBA);\n  }\n  is<T extends Format>(format: T): this is ReturnType<ColorConversions[T]> {\n    return format === this.format();\n  }\n  as<T extends Format>(format: T): ReturnType<ColorConversions[T]> {\n    return LCH.#conversions[format](this) as ReturnType<ColorConversions[T]>;\n  }\n  equal(color: Color): boolean {\n    const lch = color.as(Format.LCH);\n    return equals(lch.l, this.l, WIDE_RANGE_EPSILON) && equals(lch.c, this.c) && equals(lch.h, this.h) &&\n        equals(lch.alpha, this.alpha);\n  }\n  format(): Format {\n    return Format.LCH;\n  }\n  setAlpha(alpha: number): Color {\n    return new LCH(this.l, this.c, this.h, alpha);\n  }\n  asString(format?: Format): string {\n    if (format) {\n      return this.as(format).asString();\n    }\n    return this.#stringify(this.l, this.c, this.h);\n  }\n  #stringify(l: number, c: number, h: number): string {\n    const alpha = this.alpha === null || equals(this.alpha, 1) ?\n        '' :\n        ` / ${Platform.StringUtilities.stringifyWithPrecision(this.alpha)}`;\n    return `lch(${Platform.StringUtilities.stringifyWithPrecision(l, 0)} ${\n        Platform.StringUtilities.stringifyWithPrecision(\n            c)} ${Platform.StringUtilities.stringifyWithPrecision(h)}${alpha})`;\n  }\n  getAuthoredText(): string|null {\n    return this.#authoredText ?? null;\n  }\n\n  getRawParameters(): Color3D {\n    return [...this.#rawParams];\n  }\n  getAsRawString(format?: Format): string {\n    if (format) {\n      return this.as(format).getAsRawString();\n    }\n    return this.#stringify(...this.#rawParams);\n  }\n  isGamutClipped(): boolean {\n    return false;\n  }\n  // See \"powerless\" component definitions in\n  // https://www.w3.org/TR/css-color-4/#specifying-lab-lch\n  isHuePowerless(): boolean {\n    return equals(this.c, 0);\n  }\n  static fromSpec(spec: ColorParameterSpec, text: string): LCH|null {\n    const L = parsePercentage(spec[0], [0, 100]) ?? parseNumber(spec[0]);\n    if (L === null) {\n      return null;\n    }\n    const c = parsePercentage(spec[1], [0, 150]) ?? parseNumber(spec[1]);\n    if (c === null) {\n      return null;\n    }\n    const h = parseAngle(spec[2]);\n    if (h === null) {\n      return null;\n    }\n    const alpha = parseAlpha(spec[3]);\n\n    return new LCH(L, c, h, alpha, text);\n  }\n}\n\nexport class Oklab implements Color {\n  readonly #rawParams: Color3D;\n  readonly l: number;\n  readonly a: number;\n  readonly b: number;\n  readonly alpha: number|null;\n  readonly #authoredText?: string;\n  readonly channels: [ColorChannel, ColorChannel, ColorChannel, ColorChannel] =\n      [ColorChannel.L, ColorChannel.A, ColorChannel.B, ColorChannel.ALPHA];\n\n  static readonly #conversions: ColorConversions<Oklab> = {\n    [Format.HEX]: (self: Oklab) => new Legacy(self.#getRGBArray(/* withAlpha= */ false), Format.HEX),\n    [Format.HEXA]: (self: Oklab) => new Legacy(self.#getRGBArray(/* withAlpha= */ true), Format.HEXA),\n    [Format.RGB]: (self: Oklab) => new Legacy(self.#getRGBArray(/* withAlpha= */ false), Format.RGB),\n    [Format.RGBA]: (self: Oklab) => new Legacy(self.#getRGBArray(/* withAlpha= */ true), Format.RGBA),\n    [Format.HSL]: (self: Oklab) => new HSL(...rgbToHsl(self.#getRGBArray(/* withAlpha= */ false)), self.alpha),\n    [Format.HSLA]: (self: Oklab) => new HSL(...rgbToHsl(self.#getRGBArray(/* withAlpha= */ false)), self.alpha),\n    [Format.HWB]: (self: Oklab) => new HWB(...rgbToHwb(self.#getRGBArray(/* withAlpha= */ false)), self.alpha),\n    [Format.HWBA]: (self: Oklab) => new HWB(...rgbToHwb(self.#getRGBArray(/* withAlpha= */ false)), self.alpha),\n    [Format.LCH]: (self: Oklab) =>\n        new LCH(...ColorConverter.labToLch(...ColorConverter.xyzd50ToLab(...self.#toXyzd50())), self.alpha),\n    [Format.OKLCH]: (self: Oklab) => new Oklch(...ColorConverter.xyzd50ToOklch(...self.#toXyzd50()), self.alpha),\n    [Format.LAB]: (self: Oklab) => new Lab(...ColorConverter.xyzd50ToLab(...self.#toXyzd50()), self.alpha),\n    [Format.OKLAB]: (self: Oklab) => self,\n\n    [Format.SRGB]: (self: Oklab) =>\n        new ColorFunction(Format.SRGB, ...ColorConverter.xyzd50ToSrgb(...self.#toXyzd50()), self.alpha),\n    [Format.SRGB_LINEAR]: (self: Oklab) =>\n        new ColorFunction(Format.SRGB_LINEAR, ...ColorConverter.xyzd50TosRGBLinear(...self.#toXyzd50()), self.alpha),\n    [Format.DISPLAY_P3]: (self: Oklab) =>\n        new ColorFunction(Format.DISPLAY_P3, ...ColorConverter.xyzd50ToDisplayP3(...self.#toXyzd50()), self.alpha),\n    [Format.A98_RGB]: (self: Oklab) =>\n        new ColorFunction(Format.A98_RGB, ...ColorConverter.xyzd50ToAdobeRGB(...self.#toXyzd50()), self.alpha),\n    [Format.PROPHOTO_RGB]: (self: Oklab) =>\n        new ColorFunction(Format.PROPHOTO_RGB, ...ColorConverter.xyzd50ToProPhoto(...self.#toXyzd50()), self.alpha),\n    [Format.REC_2020]: (self: Oklab) =>\n        new ColorFunction(Format.REC_2020, ...ColorConverter.xyzd50ToRec2020(...self.#toXyzd50()), self.alpha),\n    [Format.XYZ]: (self: Oklab) =>\n        new ColorFunction(Format.XYZ, ...ColorConverter.xyzd50ToD65(...self.#toXyzd50()), self.alpha),\n    [Format.XYZ_D50]: (self: Oklab) => new ColorFunction(Format.XYZ_D50, ...self.#toXyzd50(), self.alpha),\n    [Format.XYZ_D65]: (self: Oklab) =>\n        new ColorFunction(Format.XYZ_D65, ...ColorConverter.xyzd50ToD65(...self.#toXyzd50()), self.alpha),\n  };\n\n  #toXyzd50(): Color3D {\n    return ColorConverter.xyzd65ToD50(...ColorConverter.oklabToXyzd65(this.l, this.a, this.b));\n  }\n\n  #getRGBArray(withAlpha: true): Color4DOr3D;\n  #getRGBArray(withAlpha: false): Color3D;\n  #getRGBArray(withAlpha = true): Color4DOr3D|Color3D {\n    const params = ColorConverter.xyzd50ToSrgb(...this.#toXyzd50());\n    if (withAlpha) {\n      return [...params, this.alpha ?? undefined];\n    }\n    return params;\n  }\n\n  constructor(l: number, a: number, b: number, alpha: number|null, authoredText?: string|undefined) {\n    this.#rawParams = [l, a, b];\n    this.l = clamp(l, {min: 0, max: 1});\n    if (equals(this.l, 0) || equals(this.l, 1)) {\n      a = b = 0;\n    }\n    this.a = a;\n    this.b = b;\n    this.alpha = clamp(alpha, {min: 0, max: 1});\n    this.#authoredText = authoredText;\n  }\n  asLegacyColor(): Legacy {\n    return this.as(Format.RGBA);\n  }\n  is<T extends Format>(format: T): this is ReturnType<ColorConversions[T]> {\n    return format === this.format();\n  }\n  as<T extends Format>(format: T): ReturnType<ColorConversions[T]> {\n    return Oklab.#conversions[format](this) as ReturnType<ColorConversions[T]>;\n  }\n  equal(color: Color): boolean {\n    const oklab = color.as(Format.OKLAB);\n    return equals(oklab.l, this.l) && equals(oklab.a, this.a) && equals(oklab.b, this.b) &&\n        equals(oklab.alpha, this.alpha);\n  }\n  format(): Format {\n    return Format.OKLAB;\n  }\n  setAlpha(alpha: number): Color {\n    return new Oklab(this.l, this.a, this.b, alpha);\n  }\n  asString(format?: Format): string {\n    if (format) {\n      return this.as(format).asString();\n    }\n    return this.#stringify(this.l, this.a, this.b);\n  }\n  #stringify(l: number, a: number, b: number): string {\n    const alpha = this.alpha === null || equals(this.alpha, 1) ?\n        '' :\n        ` / ${Platform.StringUtilities.stringifyWithPrecision(this.alpha)}`;\n    return `oklab(${Platform.StringUtilities.stringifyWithPrecision(l)} ${\n        Platform.StringUtilities.stringifyWithPrecision(\n            a)} ${Platform.StringUtilities.stringifyWithPrecision(b)}${alpha})`;\n  }\n  getAuthoredText(): string|null {\n    return this.#authoredText ?? null;\n  }\n\n  getRawParameters(): Color3D {\n    return [...this.#rawParams];\n  }\n  getAsRawString(format?: Format): string {\n    if (format) {\n      return this.as(format).getAsRawString();\n    }\n    return this.#stringify(...this.#rawParams);\n  }\n  isGamutClipped(): boolean {\n    return false;\n  }\n\n  static fromSpec(spec: ColorParameterSpec, text: string): Oklab|null {\n    const L = parsePercentage(spec[0], [0, 1]) ?? parseNumber(spec[0]);\n    if (L === null) {\n      return null;\n    }\n    const a = parsePercentage(spec[1], [0, 0.4]) ?? parseNumber(spec[1]);\n    if (a === null) {\n      return null;\n    }\n    const b = parsePercentage(spec[2], [0, 0.4]) ?? parseNumber(spec[2]);\n    if (b === null) {\n      return null;\n    }\n    const alpha = parseAlpha(spec[3]);\n\n    return new Oklab(L, a, b, alpha, text);\n  }\n}\n\nexport class Oklch implements Color {\n  readonly #rawParams: Color3D;\n  readonly l: number;\n  readonly c: number;\n  readonly h: number;\n  readonly alpha: number|null;\n  readonly #authoredText?: string;\n  readonly channels: [ColorChannel, ColorChannel, ColorChannel, ColorChannel] =\n      [ColorChannel.L, ColorChannel.C, ColorChannel.H, ColorChannel.ALPHA];\n\n  static readonly #conversions: ColorConversions<Oklch> = {\n    [Format.HEX]: (self: Oklch) => new Legacy(self.#getRGBArray(/* withAlpha= */ false), Format.HEX),\n    [Format.HEXA]: (self: Oklch) => new Legacy(self.#getRGBArray(/* withAlpha= */ true), Format.HEXA),\n    [Format.RGB]: (self: Oklch) => new Legacy(self.#getRGBArray(/* withAlpha= */ false), Format.RGB),\n    [Format.RGBA]: (self: Oklch) => new Legacy(self.#getRGBArray(/* withAlpha= */ true), Format.RGBA),\n    [Format.HSL]: (self: Oklch) => new HSL(...rgbToHsl(self.#getRGBArray(/* withAlpha= */ false)), self.alpha),\n    [Format.HSLA]: (self: Oklch) => new HSL(...rgbToHsl(self.#getRGBArray(/* withAlpha= */ false)), self.alpha),\n    [Format.HWB]: (self: Oklch) => new HWB(...rgbToHwb(self.#getRGBArray(/* withAlpha= */ false)), self.alpha),\n    [Format.HWBA]: (self: Oklch) => new HWB(...rgbToHwb(self.#getRGBArray(/* withAlpha= */ false)), self.alpha),\n    [Format.LCH]: (self: Oklch) =>\n        new LCH(...ColorConverter.labToLch(...ColorConverter.xyzd50ToLab(...self.#toXyzd50())), self.alpha),\n    [Format.OKLCH]: (self: Oklch) => self,\n    [Format.LAB]: (self: Oklch) => new Lab(...ColorConverter.xyzd50ToLab(...self.#toXyzd50()), self.alpha),\n    [Format.OKLAB]: (self: Oklch) =>\n        new Oklab(...ColorConverter.xyzd65ToOklab(...ColorConverter.xyzd50ToD65(...self.#toXyzd50())), self.alpha),\n    [Format.SRGB]: (self: Oklch) =>\n        new ColorFunction(Format.SRGB, ...ColorConverter.xyzd50ToSrgb(...self.#toXyzd50()), self.alpha),\n    [Format.SRGB_LINEAR]: (self: Oklch) =>\n        new ColorFunction(Format.SRGB_LINEAR, ...ColorConverter.xyzd50TosRGBLinear(...self.#toXyzd50()), self.alpha),\n    [Format.DISPLAY_P3]: (self: Oklch) =>\n        new ColorFunction(Format.DISPLAY_P3, ...ColorConverter.xyzd50ToDisplayP3(...self.#toXyzd50()), self.alpha),\n    [Format.A98_RGB]: (self: Oklch) =>\n        new ColorFunction(Format.A98_RGB, ...ColorConverter.xyzd50ToAdobeRGB(...self.#toXyzd50()), self.alpha),\n    [Format.PROPHOTO_RGB]: (self: Oklch) =>\n        new ColorFunction(Format.PROPHOTO_RGB, ...ColorConverter.xyzd50ToProPhoto(...self.#toXyzd50()), self.alpha),\n    [Format.REC_2020]: (self: Oklch) =>\n        new ColorFunction(Format.REC_2020, ...ColorConverter.xyzd50ToRec2020(...self.#toXyzd50()), self.alpha),\n    [Format.XYZ]: (self: Oklch) =>\n        new ColorFunction(Format.XYZ, ...ColorConverter.xyzd50ToD65(...self.#toXyzd50()), self.alpha),\n    [Format.XYZ_D50]: (self: Oklch) => new ColorFunction(Format.XYZ_D50, ...self.#toXyzd50(), self.alpha),\n    [Format.XYZ_D65]: (self: Oklch) =>\n        new ColorFunction(Format.XYZ_D65, ...ColorConverter.xyzd50ToD65(...self.#toXyzd50()), self.alpha),\n  };\n\n  #toXyzd50(): Color3D {\n    return ColorConverter.oklchToXyzd50(this.l, this.c, this.h);\n  }\n\n  #getRGBArray(withAlpha: true): Color4DOr3D;\n  #getRGBArray(withAlpha: false): Color3D;\n  #getRGBArray(withAlpha = true): Color4DOr3D|Color3D {\n    const params = ColorConverter.xyzd50ToSrgb(...this.#toXyzd50());\n    if (withAlpha) {\n      return [...params, this.alpha ?? undefined];\n    }\n    return params;\n  }\n\n  constructor(l: number, c: number, h: number, alpha: number|null, authoredText?: string|undefined) {\n    this.#rawParams = [l, c, h];\n    this.l = clamp(l, {min: 0, max: 1});\n    c = equals(this.l, 0) || equals(this.l, 1) ? 0 : c;\n    this.c = clamp(c, {min: 0});\n    h = equals(c, 0) ? 0 : h;\n    this.h = normalizeHue(h);\n    this.alpha = clamp(alpha, {min: 0, max: 1});\n    this.#authoredText = authoredText;\n  }\n  asLegacyColor(): Legacy {\n    return this.as(Format.RGBA);\n  }\n  is<T extends Format>(format: T): this is ReturnType<ColorConversions[T]> {\n    return format === this.format();\n  }\n  as<T extends Format>(format: T): ReturnType<ColorConversions[T]> {\n    return Oklch.#conversions[format](this) as ReturnType<ColorConversions[T]>;\n  }\n  equal(color: Color): boolean {\n    const oklch = color.as(Format.OKLCH);\n    return equals(oklch.l, this.l) && equals(oklch.c, this.c) && equals(oklch.h, this.h) &&\n        equals(oklch.alpha, this.alpha);\n  }\n  format(): Format {\n    return Format.OKLCH;\n  }\n  setAlpha(alpha: number): Color {\n    return new Oklch(this.l, this.c, this.h, alpha);\n  }\n  asString(format?: Format): string {\n    if (format) {\n      return this.as(format).asString();\n    }\n    return this.#stringify(this.l, this.c, this.h);\n  }\n  #stringify(l: number, c: number, h: number): string {\n    const alpha = this.alpha === null || equals(this.alpha, 1) ?\n        '' :\n        ` / ${Platform.StringUtilities.stringifyWithPrecision(this.alpha)}`;\n    return `oklch(${Platform.StringUtilities.stringifyWithPrecision(l)} ${\n        Platform.StringUtilities.stringifyWithPrecision(\n            c)} ${Platform.StringUtilities.stringifyWithPrecision(h)}${alpha})`;\n  }\n  getAuthoredText(): string|null {\n    return this.#authoredText ?? null;\n  }\n\n  getRawParameters(): Color3D {\n    return [...this.#rawParams];\n  }\n  getAsRawString(format?: Format): string {\n    if (format) {\n      return this.as(format).getAsRawString();\n    }\n    return this.#stringify(...this.#rawParams);\n  }\n  isGamutClipped(): boolean {\n    return false;\n  }\n\n  static fromSpec(spec: ColorParameterSpec, text: string): Oklch|null {\n    const L = parsePercentage(spec[0], [0, 1]) ?? parseNumber(spec[0]);\n    if (L === null) {\n      return null;\n    }\n    const c = parsePercentage(spec[1], [0, 0.4]) ?? parseNumber(spec[1]);\n    if (c === null) {\n      return null;\n    }\n    const h = parseAngle(spec[2]);\n    if (h === null) {\n      return null;\n    }\n    const alpha = parseAlpha(spec[3]);\n\n    return new Oklch(L, c, h, alpha, text);\n  }\n}\n\nexport class ColorFunction implements Color {\n  readonly #rawParams: Color3D;\n  readonly p0: number;\n  readonly p1: number;\n  readonly p2: number;\n  readonly alpha: number|null;\n  readonly colorSpace: ColorSpace;\n  readonly #authoredText?: string;\n  get channels(): [ColorChannel, ColorChannel, ColorChannel, ColorChannel] {\n    return this.isXYZ() ? [ColorChannel.X, ColorChannel.Y, ColorChannel.Z, ColorChannel.ALPHA] :\n                          [ColorChannel.R, ColorChannel.G, ColorChannel.B, ColorChannel.ALPHA];\n  }\n\n  static readonly #conversions: ColorConversions<ColorFunction> = {\n    [Format.HEX]: (self: ColorFunction) => new Legacy(self.#getRGBArray(/* withAlpha= */ false), Format.HEX),\n    [Format.HEXA]: (self: ColorFunction) => new Legacy(self.#getRGBArray(/* withAlpha= */ true), Format.HEXA),\n    [Format.RGB]: (self: ColorFunction) => new Legacy(self.#getRGBArray(/* withAlpha= */ false), Format.RGB),\n    [Format.RGBA]: (self: ColorFunction) => new Legacy(self.#getRGBArray(/* withAlpha= */ true), Format.RGBA),\n    [Format.HSL]: (self: ColorFunction) => new HSL(...rgbToHsl(self.#getRGBArray(/* withAlpha= */ false)), self.alpha),\n    [Format.HSLA]: (self: ColorFunction) => new HSL(...rgbToHsl(self.#getRGBArray(/* withAlpha= */ false)), self.alpha),\n    [Format.HWB]: (self: ColorFunction) => new HWB(...rgbToHwb(self.#getRGBArray(/* withAlpha= */ false)), self.alpha),\n    [Format.HWBA]: (self: ColorFunction) => new HWB(...rgbToHwb(self.#getRGBArray(/* withAlpha= */ false)), self.alpha),\n    [Format.LCH]: (self: ColorFunction) =>\n        new LCH(...ColorConverter.labToLch(...ColorConverter.xyzd50ToLab(...self.#toXyzd50())), self.alpha),\n    [Format.OKLCH]: (self: ColorFunction) =>\n        new Oklch(...ColorConverter.xyzd50ToOklch(...self.#toXyzd50()), self.alpha),\n    [Format.LAB]: (self: ColorFunction) => new Lab(...ColorConverter.xyzd50ToLab(...self.#toXyzd50()), self.alpha),\n    [Format.OKLAB]: (self: ColorFunction) =>\n        new Oklab(...ColorConverter.xyzd65ToOklab(...ColorConverter.xyzd50ToD65(...self.#toXyzd50())), self.alpha),\n\n    [Format.SRGB]: (self: ColorFunction) =>\n        new ColorFunction(Format.SRGB, ...ColorConverter.xyzd50ToSrgb(...self.#toXyzd50()), self.alpha),\n    [Format.SRGB_LINEAR]: (self: ColorFunction) =>\n        new ColorFunction(Format.SRGB_LINEAR, ...ColorConverter.xyzd50TosRGBLinear(...self.#toXyzd50()), self.alpha),\n    [Format.DISPLAY_P3]: (self: ColorFunction) =>\n        new ColorFunction(Format.DISPLAY_P3, ...ColorConverter.xyzd50ToDisplayP3(...self.#toXyzd50()), self.alpha),\n    [Format.A98_RGB]: (self: ColorFunction) =>\n        new ColorFunction(Format.A98_RGB, ...ColorConverter.xyzd50ToAdobeRGB(...self.#toXyzd50()), self.alpha),\n    [Format.PROPHOTO_RGB]: (self: ColorFunction) =>\n        new ColorFunction(Format.PROPHOTO_RGB, ...ColorConverter.xyzd50ToProPhoto(...self.#toXyzd50()), self.alpha),\n    [Format.REC_2020]: (self: ColorFunction) =>\n        new ColorFunction(Format.REC_2020, ...ColorConverter.xyzd50ToRec2020(...self.#toXyzd50()), self.alpha),\n    [Format.XYZ]: (self: ColorFunction) =>\n        new ColorFunction(Format.XYZ, ...ColorConverter.xyzd50ToD65(...self.#toXyzd50()), self.alpha),\n    [Format.XYZ_D50]: (self: ColorFunction) => new ColorFunction(Format.XYZ_D50, ...self.#toXyzd50(), self.alpha),\n    [Format.XYZ_D65]: (self: ColorFunction) =>\n        new ColorFunction(Format.XYZ_D65, ...ColorConverter.xyzd50ToD65(...self.#toXyzd50()), self.alpha),\n  };\n\n  #toXyzd50(): Color3D {\n    // With color(), out-of-gamut inputs are to be used for intermediate computations\n    const [p0, p1, p2] = this.#rawParams;\n    switch (this.colorSpace) {\n      case Format.SRGB:\n        return ColorConverter.srgbToXyzd50(p0, p1, p2);\n      case Format.SRGB_LINEAR:\n        return ColorConverter.srgbLinearToXyzd50(p0, p1, p2);\n      case Format.DISPLAY_P3:\n        return ColorConverter.displayP3ToXyzd50(p0, p1, p2);\n      case Format.A98_RGB:\n        return ColorConverter.adobeRGBToXyzd50(p0, p1, p2);\n      case Format.PROPHOTO_RGB:\n        return ColorConverter.proPhotoToXyzd50(p0, p1, p2);\n      case Format.REC_2020:\n        return ColorConverter.rec2020ToXyzd50(p0, p1, p2);\n      case Format.XYZ_D50:\n        return [p0, p1, p2];\n      case Format.XYZ:\n      case Format.XYZ_D65:\n        return ColorConverter.xyzd65ToD50(p0, p1, p2);\n    }\n    throw new Error('Invalid color space');\n  }\n\n  #getRGBArray(withAlpha: true): Color4DOr3D;\n  #getRGBArray(withAlpha: false): Color3D;\n  #getRGBArray(withAlpha = true): Color4DOr3D|Color3D {\n    // With color(), out-of-gamut inputs are to be used for intermediate computations\n    const [p0, p1, p2] = this.#rawParams;\n    const params: Color3D =\n        this.colorSpace === Format.SRGB ? [p0, p1, p2] : [...ColorConverter.xyzd50ToSrgb(...this.#toXyzd50())];\n    if (withAlpha) {\n      return [...params, this.alpha ?? undefined];\n    }\n    return params;\n  }\n\n  constructor(\n      colorSpace: ColorSpace, p0: number, p1: number, p2: number, alpha: number|null, authoredText?: string|undefined) {\n    this.#rawParams = [p0, p1, p2];\n    this.colorSpace = colorSpace;\n    this.#authoredText = authoredText;\n    if (this.colorSpace !== Format.XYZ_D50 && this.colorSpace !== Format.XYZ_D65 && this.colorSpace !== Format.XYZ) {\n      p0 = clamp(p0, {min: 0, max: 1});\n      p1 = clamp(p1, {min: 0, max: 1});\n      p2 = clamp(p2, {min: 0, max: 1});\n    }\n\n    this.p0 = p0;\n    this.p1 = p1;\n    this.p2 = p2;\n    this.alpha = clamp(alpha, {min: 0, max: 1});\n  }\n  asLegacyColor(): Legacy {\n    return this.as(Format.RGBA);\n  }\n  is<T extends Format>(format: T): this is ReturnType<ColorConversions[T]> {\n    return format === this.format();\n  }\n  as<T extends Format>(format: T): ReturnType<ColorConversions[T]> {\n    if (this.colorSpace === format) {\n      return this as ReturnType<ColorConversions[T]>;\n    }\n    return ColorFunction.#conversions[format](this) as ReturnType<ColorConversions[T]>;\n  }\n  equal(color: Color): boolean {\n    const space = color.as(this.colorSpace);\n    return equals(this.p0, space.p0) && equals(this.p1, space.p1) && equals(this.p2, space.p2) &&\n        equals(this.alpha, space.alpha);\n  }\n  format(): Format {\n    return this.colorSpace;\n  }\n  setAlpha(alpha: number): Color {\n    return new ColorFunction(this.colorSpace, this.p0, this.p1, this.p2, alpha);\n  }\n  asString(format?: Format): string {\n    if (format) {\n      return this.as(format).asString();\n    }\n    return this.#stringify(this.p0, this.p1, this.p2);\n  }\n  #stringify(p0: number, p1: number, p2: number): string {\n    const alpha = this.alpha === null || equals(this.alpha, 1) ?\n        '' :\n        ` / ${Platform.StringUtilities.stringifyWithPrecision(this.alpha)}`;\n    return `color(${this.colorSpace} ${Platform.StringUtilities.stringifyWithPrecision(p0)} ${\n        Platform.StringUtilities.stringifyWithPrecision(\n            p1)} ${Platform.StringUtilities.stringifyWithPrecision(p2)}${alpha})`;\n  }\n  getAuthoredText(): string|null {\n    return this.#authoredText ?? null;\n  }\n\n  getRawParameters(): Color3D {\n    return [...this.#rawParams];\n  }\n  getAsRawString(format?: Format): string {\n    if (format) {\n      return this.as(format).getAsRawString();\n    }\n    return this.#stringify(...this.#rawParams);\n  }\n  isGamutClipped(): boolean {\n    if (this.colorSpace !== Format.XYZ_D50 && this.colorSpace !== Format.XYZ_D65 && this.colorSpace !== Format.XYZ) {\n      return !equals(this.#rawParams, [this.p0, this.p1, this.p2]);\n    }\n    return false;\n  }\n\n  isXYZ(): boolean {\n    switch (this.colorSpace) {\n      case Format.XYZ:\n      case Format.XYZ_D50:\n      case Format.XYZ_D65:\n        return true;\n    }\n    return false;\n  }\n\n  /**\n   * Parses given `color()` function definition and returns the `Color` object.\n   * We want to special case its parsing here because it's a bit different\n   * than other color functions: rgb, lch etc. accepts 3 arguments with\n   * optional alpha. This accepts 4 arguments with optional alpha.\n   *\n   * Instead of making `splitColorFunctionParameters` work for this case too\n   * I've decided to implement it specifically.\n   * @param authoredText Original definition of the color with `color`\n   * @param parametersText Inside of the `color()` function. ex, `display-p3 0.1 0.2 0.3 / 0%`\n   * @returns `Color` object\n   */\n  static fromSpec(authoredText: string, parametersWithAlphaText: string): ColorFunction|null {\n    const [parametersText, alphaText] = parametersWithAlphaText.split('/', 2);\n    const parameters = parametersText.trim().split(/\\s+/);\n    const [colorSpaceText, ...remainingParams] = parameters;\n    const colorSpace = getColorSpace(colorSpaceText);\n    // Color space is not known to us, do not parse the Color.\n    if (!colorSpace) {\n      return null;\n    }\n\n    // `color(<color-space>)` is a valid syntax\n    if (remainingParams.length === 0 && alphaText === undefined) {\n      return new ColorFunction(colorSpace, 0, 0, 0, null, authoredText);\n    }\n\n    // Check if it contains `/ <alpha>` part, if so, it should be at the end\n    if (remainingParams.length === 0 && alphaText !== undefined && alphaText.trim().split(/\\s+/).length > 1) {\n      // Invalid syntax: like `color(<space> / <alpha> <number>)`\n      return null;\n    }\n\n    // `color` cannot contain more than 3 parameters without alpha\n    if (remainingParams.length > 3) {\n      return null;\n    }\n\n    // Replace `none`s with 0s\n    const nonesReplacedParams = remainingParams.map(param => param === 'none' ? '0' : param);\n\n    // At this point, we know that all the values are there so we can\n    // safely try to parse all the values as number or percentage\n    const values = nonesReplacedParams.map(param => parsePercentOrNumber(param, [0, 1]));\n    const containsNull = values.includes(null);\n    // At least one value is malformatted (not a number or percentage)\n    if (containsNull) {\n      return null;\n    }\n\n    const alphaValue = alphaText ? parsePercentOrNumber(alphaText, [0, 1]) ?? 1 : 1;\n\n    // Depending on the color space\n    // this either reflects `rgb` parameters in that color space\n    // or `xyz` parameters in the given `xyz` space.\n    const rgbOrXyza: Color4D = [\n      values[0] ?? 0,\n      values[1] ?? 0,\n      values[2] ?? 0,\n      alphaValue,\n    ];\n\n    return new ColorFunction(colorSpace, ...rgbOrXyza, authoredText);\n  }\n}\n\nexport class HSL implements Color {\n  readonly h: number;\n  readonly s: number;\n  readonly l: number;\n  readonly alpha: number|null;\n  readonly #rawParams: Color3D;\n  #authoredText: string|undefined;\n  readonly channels: [ColorChannel, ColorChannel, ColorChannel, ColorChannel] =\n      [ColorChannel.H, ColorChannel.S, ColorChannel.L, ColorChannel.ALPHA];\n\n  static readonly #conversions: ColorConversions<HSL> = {\n    [Format.HEX]: (self: HSL) => new Legacy(self.#getRGBArray(/* withAlpha= */ false), Format.HEX),\n    [Format.HEXA]: (self: HSL) => new Legacy(self.#getRGBArray(/* withAlpha= */ true), Format.HEXA),\n    [Format.RGB]: (self: HSL) => new Legacy(self.#getRGBArray(/* withAlpha= */ false), Format.RGB),\n    [Format.RGBA]: (self: HSL) => new Legacy(self.#getRGBArray(/* withAlpha= */ true), Format.RGBA),\n    [Format.HSL]: (self: HSL) => self,\n    [Format.HSLA]: (self: HSL) => self,\n    [Format.HWB]: (self: HSL) => new HWB(...rgbToHwb(self.#getRGBArray(/* withAlpha= */ false)), self.alpha),\n    [Format.HWBA]: (self: HSL) => new HWB(...rgbToHwb(self.#getRGBArray(/* withAlpha= */ false)), self.alpha),\n    [Format.LCH]: (self: HSL) =>\n        new LCH(...ColorConverter.labToLch(...ColorConverter.xyzd50ToLab(...self.#toXyzd50())), self.alpha),\n    [Format.OKLCH]: (self: HSL) => new Oklch(...ColorConverter.xyzd50ToOklch(...self.#toXyzd50()), self.alpha),\n    [Format.LAB]: (self: HSL) => new Lab(...ColorConverter.xyzd50ToLab(...self.#toXyzd50()), self.alpha),\n    [Format.OKLAB]: (self: HSL) =>\n        new Oklab(...ColorConverter.xyzd65ToOklab(...ColorConverter.xyzd50ToD65(...self.#toXyzd50())), self.alpha),\n\n    [Format.SRGB]: (self: HSL) =>\n        new ColorFunction(Format.SRGB, ...ColorConverter.xyzd50ToSrgb(...self.#toXyzd50()), self.alpha),\n    [Format.SRGB_LINEAR]: (self: HSL) =>\n        new ColorFunction(Format.SRGB_LINEAR, ...ColorConverter.xyzd50TosRGBLinear(...self.#toXyzd50()), self.alpha),\n    [Format.DISPLAY_P3]: (self: HSL) =>\n        new ColorFunction(Format.DISPLAY_P3, ...ColorConverter.xyzd50ToDisplayP3(...self.#toXyzd50()), self.alpha),\n    [Format.A98_RGB]: (self: HSL) =>\n        new ColorFunction(Format.A98_RGB, ...ColorConverter.xyzd50ToAdobeRGB(...self.#toXyzd50()), self.alpha),\n    [Format.PROPHOTO_RGB]: (self: HSL) =>\n        new ColorFunction(Format.PROPHOTO_RGB, ...ColorConverter.xyzd50ToProPhoto(...self.#toXyzd50()), self.alpha),\n    [Format.REC_2020]: (self: HSL) =>\n        new ColorFunction(Format.REC_2020, ...ColorConverter.xyzd50ToRec2020(...self.#toXyzd50()), self.alpha),\n    [Format.XYZ]: (self: HSL) =>\n        new ColorFunction(Format.XYZ, ...ColorConverter.xyzd50ToD65(...self.#toXyzd50()), self.alpha),\n    [Format.XYZ_D50]: (self: HSL) => new ColorFunction(Format.XYZ_D50, ...self.#toXyzd50(), self.alpha),\n    [Format.XYZ_D65]: (self: HSL) =>\n        new ColorFunction(Format.XYZ_D65, ...ColorConverter.xyzd50ToD65(...self.#toXyzd50()), self.alpha),\n  };\n\n  #getRGBArray(withAlpha: true): Color4DOr3D;\n  #getRGBArray(withAlpha: false): Color3D;\n  #getRGBArray(withAlpha = true): Color4DOr3D|Color3D {\n    const rgb = hsl2rgb([this.h, this.s, this.l, 0]);\n    if (withAlpha) {\n      return [rgb[0], rgb[1], rgb[2], this.alpha ?? undefined];\n    }\n    return [rgb[0], rgb[1], rgb[2]];\n  }\n\n  #toXyzd50(): Color3D {\n    const rgb = this.#getRGBArray(false);\n    return ColorConverter.srgbToXyzd50(rgb[0], rgb[1], rgb[2]);\n  }\n\n  constructor(h: number, s: number, l: number, alpha: number|null|undefined, authoredText?: string) {\n    this.#rawParams = [h, s, l];\n    this.l = clamp(l, {min: 0, max: 1});\n    s = equals(this.l, 0) || equals(this.l, 1) ? 0 : s;\n    this.s = clamp(s, {min: 0, max: 1});\n    h = equals(this.s, 0) ? 0 : h;\n    this.h = normalizeHue(h * 360) / 360;\n    this.alpha = clamp(alpha ?? null, {min: 0, max: 1});\n    this.#authoredText = authoredText;\n  }\n\n  equal(color: Color): boolean {\n    const hsl = color.as(Format.HSL);\n    return equals(this.h, hsl.h) && equals(this.s, hsl.s) && equals(this.l, hsl.l) && equals(this.alpha, hsl.alpha);\n  }\n  asString(format?: Format|undefined): string {\n    if (format) {\n      return this.as(format).asString();\n    }\n    return this.#stringify(this.h, this.s, this.l);\n  }\n  #stringify(h: number, s: number, l: number): string {\n    const start = Platform.StringUtilities.sprintf(\n        'hsl(%sdeg %s% %s%', Platform.StringUtilities.stringifyWithPrecision(h * 360),\n        Platform.StringUtilities.stringifyWithPrecision(s * 100),\n        Platform.StringUtilities.stringifyWithPrecision(l * 100));\n    if (this.alpha !== null && this.alpha !== 1) {\n      return start +\n          Platform.StringUtilities.sprintf(\n              ' / %s%)', Platform.StringUtilities.stringifyWithPrecision(this.alpha * 100));\n    }\n    return start + ')';\n  }\n  setAlpha(alpha: number): HSL {\n    return new HSL(this.h, this.s, this.l, alpha);\n  }\n  format(): Format {\n    return this.alpha === null || this.alpha === 1 ? Format.HSL : Format.HSLA;\n  }\n  is<T extends Format>(format: T): this is ReturnType<ColorConversions[T]> {\n    return format === this.format();\n  }\n  as<T extends Format>(format: T): ReturnType<ColorConversions[T]> {\n    if (format === this.format()) {\n      return this as ReturnType<ColorConversions[T]>;\n    }\n    return HSL.#conversions[format](this) as ReturnType<ColorConversions[T]>;\n  }\n  asLegacyColor(): Legacy {\n    return this.as(Format.RGBA);\n  }\n  getAuthoredText(): string|null {\n    return this.#authoredText ?? null;\n  }\n  getRawParameters(): Color3D {\n    return [...this.#rawParams];\n  }\n  getAsRawString(format?: Format): string {\n    if (format) {\n      return this.as(format).getAsRawString();\n    }\n    return this.#stringify(...this.#rawParams);\n  }\n  isGamutClipped(): boolean {\n    return !lessOrEquals(this.#rawParams[1], 1) || !lessOrEquals(0, this.#rawParams[1]);\n  }\n\n  static fromSpec(spec: ColorParameterSpec, text: string): HSL|null {\n    const h = parseHueNumeric(spec[0]);\n    if (h === null) {\n      return null;\n    }\n    const s = parseSatLightNumeric(spec[1]);\n    if (s === null) {\n      return null;\n    }\n    const l = parseSatLightNumeric(spec[2]);\n    if (l === null) {\n      return null;\n    }\n    const alpha = parseAlpha(spec[3]);\n\n    return new HSL(h, s, l, alpha, text);\n  }\n\n  hsva(): Color4D {\n    const s = this.s * (this.l < 0.5 ? this.l : 1 - this.l);\n    return [this.h, s !== 0 ? 2 * s / (this.l + s) : 0, (this.l + s), this.alpha ?? 1];\n  }\n  canonicalHSLA(): number[] {\n    return [Math.round(this.h * 360), Math.round(this.s * 100), Math.round(this.l * 100), this.alpha ?? 1];\n  }\n}\n\nexport class HWB implements Color {\n  readonly h: number;\n  readonly w: number;\n  readonly b: number;\n  readonly alpha: number|null;\n  readonly #rawParams: Color3D;\n  #authoredText: string|undefined;\n  readonly channels: [ColorChannel, ColorChannel, ColorChannel, ColorChannel] =\n      [ColorChannel.H, ColorChannel.W, ColorChannel.B, ColorChannel.ALPHA];\n\n  static readonly #conversions: ColorConversions<HWB> = {\n    [Format.HEX]: (self: HWB) => new Legacy(self.#getRGBArray(/* withAlpha= */ false), Format.HEX),\n    [Format.HEXA]: (self: HWB) => new Legacy(self.#getRGBArray(/* withAlpha= */ true), Format.HEXA),\n    [Format.RGB]: (self: HWB) => new Legacy(self.#getRGBArray(/* withAlpha= */ false), Format.RGB),\n    [Format.RGBA]: (self: HWB) => new Legacy(self.#getRGBArray(/* withAlpha= */ true), Format.RGBA),\n    [Format.HSL]: (self: HWB) => new HSL(...rgbToHsl(self.#getRGBArray(/* withAlpha= */ false)), self.alpha),\n    [Format.HSLA]: (self: HWB) => new HSL(...rgbToHsl(self.#getRGBArray(/* withAlpha= */ false)), self.alpha),\n    [Format.HWB]: (self: HWB) => self,\n    [Format.HWBA]: (self: HWB) => self,\n    [Format.LCH]: (self: HWB) =>\n        new LCH(...ColorConverter.labToLch(...ColorConverter.xyzd50ToLab(...self.#toXyzd50())), self.alpha),\n    [Format.OKLCH]: (self: HWB) => new Oklch(...ColorConverter.xyzd50ToOklch(...self.#toXyzd50()), self.alpha),\n    [Format.LAB]: (self: HWB) => new Lab(...ColorConverter.xyzd50ToLab(...self.#toXyzd50()), self.alpha),\n    [Format.OKLAB]: (self: HWB) =>\n        new Oklab(...ColorConverter.xyzd65ToOklab(...ColorConverter.xyzd50ToD65(...self.#toXyzd50())), self.alpha),\n\n    [Format.SRGB]: (self: HWB) =>\n        new ColorFunction(Format.SRGB, ...ColorConverter.xyzd50ToSrgb(...self.#toXyzd50()), self.alpha),\n    [Format.SRGB_LINEAR]: (self: HWB) =>\n        new ColorFunction(Format.SRGB_LINEAR, ...ColorConverter.xyzd50TosRGBLinear(...self.#toXyzd50()), self.alpha),\n    [Format.DISPLAY_P3]: (self: HWB) =>\n        new ColorFunction(Format.DISPLAY_P3, ...ColorConverter.xyzd50ToDisplayP3(...self.#toXyzd50()), self.alpha),\n    [Format.A98_RGB]: (self: HWB) =>\n        new ColorFunction(Format.A98_RGB, ...ColorConverter.xyzd50ToAdobeRGB(...self.#toXyzd50()), self.alpha),\n    [Format.PROPHOTO_RGB]: (self: HWB) =>\n        new ColorFunction(Format.PROPHOTO_RGB, ...ColorConverter.xyzd50ToProPhoto(...self.#toXyzd50()), self.alpha),\n    [Format.REC_2020]: (self: HWB) =>\n        new ColorFunction(Format.REC_2020, ...ColorConverter.xyzd50ToRec2020(...self.#toXyzd50()), self.alpha),\n    [Format.XYZ]: (self: HWB) =>\n        new ColorFunction(Format.XYZ, ...ColorConverter.xyzd50ToD65(...self.#toXyzd50()), self.alpha),\n    [Format.XYZ_D50]: (self: HWB) => new ColorFunction(Format.XYZ_D50, ...self.#toXyzd50(), self.alpha),\n    [Format.XYZ_D65]: (self: HWB) =>\n        new ColorFunction(Format.XYZ_D65, ...ColorConverter.xyzd50ToD65(...self.#toXyzd50()), self.alpha),\n  };\n\n  #getRGBArray(withAlpha: true): Color4DOr3D;\n  #getRGBArray(withAlpha: false): Color3D;\n  #getRGBArray(withAlpha = true): Color4DOr3D|Color3D {\n    const rgb = hwb2rgb([this.h, this.w, this.b, 0]);\n    if (withAlpha) {\n      return [rgb[0], rgb[1], rgb[2], this.alpha ?? undefined];\n    }\n    return [rgb[0], rgb[1], rgb[2]];\n  }\n\n  #toXyzd50(): Color3D {\n    const rgb = this.#getRGBArray(false);\n    return ColorConverter.srgbToXyzd50(rgb[0], rgb[1], rgb[2]);\n  }\n  constructor(h: number, w: number, b: number, alpha: number|null, authoredText?: string) {\n    this.#rawParams = [h, w, b];\n    this.w = clamp(w, {min: 0, max: 1});\n    this.b = clamp(b, {min: 0, max: 1});\n    h = lessOrEquals(1, this.w + this.b) ? 0 : h;\n    this.h = normalizeHue(h * 360) / 360;\n    this.alpha = clamp(alpha, {min: 0, max: 1});\n    if (lessOrEquals(1, this.w + this.b)) {\n      // normalize to a sum of 100% respecting the ratio, see https://www.w3.org/TR/css-color-4/#the-hwb-notation\n      const ratio = this.w / this.b;\n      this.b = 1 / (1 + ratio);\n      this.w = 1 - this.b;\n    }\n    this.#authoredText = authoredText;\n  }\n  equal(color: Color): boolean {\n    const hwb = color.as(Format.HWB);\n    return equals(this.h, hwb.h) && equals(this.w, hwb.w) && equals(this.b, hwb.b) && equals(this.alpha, hwb.alpha);\n  }\n  asString(format?: Format|undefined): string {\n    if (format) {\n      return this.as(format).asString();\n    }\n    return this.#stringify(this.h, this.w, this.b);\n  }\n  #stringify(h: number, w: number, b: number): string {\n    const start = Platform.StringUtilities.sprintf(\n        'hwb(%sdeg %s% %s%', Platform.StringUtilities.stringifyWithPrecision(h * 360),\n        Platform.StringUtilities.stringifyWithPrecision(w * 100),\n        Platform.StringUtilities.stringifyWithPrecision(b * 100));\n    if (this.alpha !== null && this.alpha !== 1) {\n      return start +\n          Platform.StringUtilities.sprintf(\n              ' / %s%)', Platform.StringUtilities.stringifyWithPrecision(this.alpha * 100));\n    }\n    return start + ')';\n  }\n  setAlpha(alpha: number): HWB {\n    return new HWB(this.h, this.w, this.b, alpha, this.#authoredText);\n  }\n  format(): Format {\n    return this.alpha !== null && !equals(this.alpha, 1) ? Format.HWBA : Format.HWB;\n  }\n  is<T extends Format>(format: T): this is ReturnType<ColorConversions[T]> {\n    return format === this.format();\n  }\n  as<T extends Format>(format: T): ReturnType<ColorConversions[T]> {\n    if (format === this.format()) {\n      return this as ReturnType<ColorConversions[T]>;\n    }\n    return HWB.#conversions[format](this) as ReturnType<ColorConversions[T]>;\n  }\n  asLegacyColor(): Legacy {\n    return this.as(Format.RGBA);\n  }\n  getAuthoredText(): string|null {\n    return this.#authoredText ?? null;\n  }\n\n  canonicalHWBA(): number[] {\n    return [\n      Math.round(this.h * 360),\n      Math.round(this.w * 100),\n      Math.round(this.b * 100),\n      this.alpha ?? 1,\n    ];\n  }\n  getRawParameters(): Color3D {\n    return [...this.#rawParams];\n  }\n  getAsRawString(format?: Format): string {\n    if (format) {\n      return this.as(format).getAsRawString();\n    }\n    return this.#stringify(...this.#rawParams);\n  }\n  isGamutClipped(): boolean {\n    return !lessOrEquals(this.#rawParams[1], 1) || !lessOrEquals(0, this.#rawParams[1]) ||\n        !lessOrEquals(this.#rawParams[2], 1) || !lessOrEquals(0, this.#rawParams[2]);\n  }\n\n  static fromSpec(spec: ColorParameterSpec, text: string): HWB|null {\n    const h = parseHueNumeric(spec[0]);\n    if (h === null) {\n      return null;\n    }\n    const w = parseSatLightNumeric(spec[1]);\n    if (w === null) {\n      return null;\n    }\n    const b = parseSatLightNumeric(spec[2]);\n    if (b === null) {\n      return null;\n    }\n    const alpha = parseAlpha(spec[3]);\n    return new HWB(h, w, b, alpha, text);\n  }\n}\n\ntype LegacyColor = Format.HEX|Format.HEXA|Format.RGB|Format.RGBA;\n\nfunction toRgbValue(value: number): number {\n  return Math.round(value * 255);\n}\n\nabstract class ShortFormatColorBase implements Color {\n  protected readonly color: Legacy;\n  readonly channels: [ColorChannel, ColorChannel, ColorChannel, ColorChannel] =\n      [ColorChannel.R, ColorChannel.G, ColorChannel.B, ColorChannel.ALPHA];\n  constructor(color: Legacy) {\n    this.color = color;\n  }\n  get alpha(): number|null {\n    return this.color.alpha;\n  }\n  rgba(): Color4D {\n    return this.color.rgba();\n  }\n  equal(color: Color): boolean {\n    return this.color.equal(color);\n  }\n  setAlpha(alpha: number): Color {\n    return this.color.setAlpha(alpha);\n  }\n  format(): Format {\n    return (this.alpha ?? 1) !== 1 ? Format.HEXA : Format.HEX;\n  }\n  as<T extends Format>(format: T): ReturnType<ColorConversions<void>[T]> {\n    return this.color.as(format);\n  }\n  is<T extends Format>(format: T): this is ReturnType<ColorConversions<void>[T]> {\n    return this.color.is(format);\n  }\n  asLegacyColor(): Legacy {\n    return this.color.asLegacyColor();\n  }\n  getAuthoredText(): string|null {\n    return this.color.getAuthoredText();\n  }\n  getRawParameters(): Color3D {\n    return this.color.getRawParameters();\n  }\n  isGamutClipped(): boolean {\n    return this.color.isGamutClipped();\n  }\n  asString(format?: Format|undefined): string {\n    if (format) {\n      return this.as(format).asString();\n    }\n    const [r, g, b] = this.color.rgba();\n    return this.stringify(r, g, b);\n  }\n  getAsRawString(format?: Format): string {\n    if (format) {\n      return this.as(format).getAsRawString();\n    }\n    const [r, g, b] = this.getRawParameters();\n    return this.stringify(r, g, b);\n  }\n\n  protected abstract stringify(r: number, g: number, b: number): string;\n}\n\nexport class ShortHex extends ShortFormatColorBase {\n  override setAlpha(alpha: number): Color {\n    return new ShortHex(this.color.setAlpha(alpha));\n  }\n\n  override asString(format?: Format|undefined): string {\n    return format && format !== this.format() ? super.as(format).asString() : super.asString();\n  }\n\n  protected override stringify(r: number, g: number, b: number): string {\n    function toShortHexValue(value: number): string {\n      return (Math.round(value * 255) / 17).toString(16);\n    }\n\n    if (this.color.hasAlpha()) {\n      return Platform.StringUtilities\n          .sprintf(\n              '#%s%s%s%s', toShortHexValue(r), toShortHexValue(g), toShortHexValue(b), toShortHexValue(this.alpha ?? 1))\n          .toLowerCase();\n    }\n    return Platform.StringUtilities.sprintf('#%s%s%s', toShortHexValue(r), toShortHexValue(g), toShortHexValue(b))\n        .toLowerCase();\n  }\n}\n\nexport class Nickname extends ShortFormatColorBase {\n  readonly nickname: string;\n  constructor(nickname: string, color: Legacy) {\n    super(color);\n    this.nickname = nickname;\n  }\n\n  static fromName(name: string, text: string): Nickname|null {\n    const nickname = name.toLowerCase();\n    const rgba = Nicknames.get(nickname);\n    if (rgba !== undefined) {\n      return new Nickname(nickname, Legacy.fromRGBA(rgba, text));\n    }\n    return null;\n  }\n\n  protected override stringify(): string {\n    return this.nickname;\n  }\n\n  override getAsRawString(format?: Format|undefined): string {\n    return this.color.getAsRawString(format);\n  }\n}\n\nexport class Legacy implements Color {\n  readonly #rawParams: Color3D;\n  #rgba: Color4D;\n  readonly #authoredText: string|null;\n  #format: LegacyColor;\n  readonly channels: [ColorChannel, ColorChannel, ColorChannel, ColorChannel] =\n      [ColorChannel.R, ColorChannel.G, ColorChannel.B, ColorChannel.ALPHA];\n\n  static readonly #conversions: ColorConversions<Legacy> = {\n    [Format.HEX]: (self: Legacy) => new Legacy(self.#rgba, Format.HEX),\n    [Format.HEXA]: (self: Legacy) => new Legacy(self.#rgba, Format.HEXA),\n    [Format.RGB]: (self: Legacy) => new Legacy(self.#rgba, Format.RGB),\n    [Format.RGBA]: (self: Legacy) => new Legacy(self.#rgba, Format.RGBA),\n    [Format.HSL]: (self: Legacy) => new HSL(...rgbToHsl([self.#rgba[0], self.#rgba[1], self.#rgba[2]]), self.alpha),\n    [Format.HSLA]: (self: Legacy) => new HSL(...rgbToHsl([self.#rgba[0], self.#rgba[1], self.#rgba[2]]), self.alpha),\n    [Format.HWB]: (self: Legacy) => new HWB(...rgbToHwb([self.#rgba[0], self.#rgba[1], self.#rgba[2]]), self.alpha),\n    [Format.HWBA]: (self: Legacy) => new HWB(...rgbToHwb([self.#rgba[0], self.#rgba[1], self.#rgba[2]]), self.alpha),\n    [Format.LCH]: (self: Legacy) =>\n        new LCH(...ColorConverter.labToLch(...ColorConverter.xyzd50ToLab(...self.#toXyzd50())), self.alpha),\n    [Format.OKLCH]: (self: Legacy) => new Oklch(...ColorConverter.xyzd50ToOklch(...self.#toXyzd50()), self.alpha),\n    [Format.LAB]: (self: Legacy) => new Lab(...ColorConverter.xyzd50ToLab(...self.#toXyzd50()), self.alpha),\n    [Format.OKLAB]: (self: Legacy) =>\n        new Oklab(...ColorConverter.xyzd65ToOklab(...ColorConverter.xyzd50ToD65(...self.#toXyzd50())), self.alpha),\n    [Format.SRGB]: (self: Legacy) =>\n        new ColorFunction(Format.SRGB, ...ColorConverter.xyzd50ToSrgb(...self.#toXyzd50()), self.alpha),\n    [Format.SRGB_LINEAR]: (self: Legacy) =>\n        new ColorFunction(Format.SRGB_LINEAR, ...ColorConverter.xyzd50TosRGBLinear(...self.#toXyzd50()), self.alpha),\n    [Format.DISPLAY_P3]: (self: Legacy) =>\n        new ColorFunction(Format.DISPLAY_P3, ...ColorConverter.xyzd50ToDisplayP3(...self.#toXyzd50()), self.alpha),\n    [Format.A98_RGB]: (self: Legacy) =>\n        new ColorFunction(Format.A98_RGB, ...ColorConverter.xyzd50ToAdobeRGB(...self.#toXyzd50()), self.alpha),\n    [Format.PROPHOTO_RGB]: (self: Legacy) =>\n        new ColorFunction(Format.PROPHOTO_RGB, ...ColorConverter.xyzd50ToProPhoto(...self.#toXyzd50()), self.alpha),\n    [Format.REC_2020]: (self: Legacy) =>\n        new ColorFunction(Format.REC_2020, ...ColorConverter.xyzd50ToRec2020(...self.#toXyzd50()), self.alpha),\n    [Format.XYZ]: (self: Legacy) =>\n        new ColorFunction(Format.XYZ, ...ColorConverter.xyzd50ToD65(...self.#toXyzd50()), self.alpha),\n    [Format.XYZ_D50]: (self: Legacy) => new ColorFunction(Format.XYZ_D50, ...self.#toXyzd50(), self.alpha),\n    [Format.XYZ_D65]: (self: Legacy) =>\n        new ColorFunction(Format.XYZ_D65, ...ColorConverter.xyzd50ToD65(...self.#toXyzd50()), self.alpha),\n  };\n\n  #toXyzd50(): Color3D {\n    const [r, g, b] = this.#rgba;\n    return ColorConverter.srgbToXyzd50(r, g, b);\n  }\n\n  get alpha(): number|null {\n    switch (this.format()) {\n      case Format.HEXA:\n      case Format.RGBA:\n        return this.#rgba[3];\n      default:\n        return null;\n    }\n  }\n\n  asLegacyColor(): Legacy {\n    return this;\n  }\n\n  nickname(): Nickname|null {\n    const nickname = RGBAToNickname.get(String(this.canonicalRGBA()));\n    return nickname ? new Nickname(nickname, this) : null;\n  }\n\n  shortHex(): ShortHex|null {\n    for (let i = 0; i < 4; ++i) {\n      const c = Math.round(this.#rgba[i] * 255);\n      // Check if the two digits of each are identical: #aabbcc => #abc\n      if (c % 0x11) {\n        return null;\n      }\n    }\n    return new ShortHex(this);\n  }\n\n  constructor(rgba: Color3D|Color4DOr3D, format: LegacyColor, authoredText?: string) {\n    this.#authoredText = authoredText || null;\n    this.#format = format;\n    this.#rawParams = [rgba[0], rgba[1], rgba[2]];\n\n    this.#rgba = [\n      clamp(rgba[0], {min: 0, max: 1}),\n      clamp(rgba[1], {min: 0, max: 1}),\n      clamp(rgba[2], {min: 0, max: 1}),\n      clamp(rgba[3] ?? 1, {min: 0, max: 1}),\n    ];\n  }\n\n  static fromHex(hex: string, text: string): Legacy|ShortHex {\n    hex = hex.toLowerCase();\n    // Possible hex representations with alpha are fffA and ffffffAA\n    const hasAlpha = hex.length === 4 || hex.length === 8;\n    const format = hasAlpha ? Format.HEXA : Format.HEX;\n    const isShort = hex.length <= 4;\n    if (isShort) {\n      hex = hex.charAt(0) + hex.charAt(0) + hex.charAt(1) + hex.charAt(1) + hex.charAt(2) + hex.charAt(2) +\n          hex.charAt(3) + hex.charAt(3);\n    }\n    const r = parseInt(hex.substring(0, 2), 16);\n    const g = parseInt(hex.substring(2, 4), 16);\n    const b = parseInt(hex.substring(4, 6), 16);\n    let a = 1;\n    if (hex.length === 8) {\n      a = parseInt(hex.substring(6, 8), 16) / 255;\n    }\n    const color = new Legacy([r / 255, g / 255, b / 255, a], format, text);\n    return isShort ? new ShortHex(color) : color;\n  }\n\n  static fromRGBAFunction(r: string, g: string, b: string, alpha: string|undefined, text: string): Legacy|null {\n    const rgba = [\n      parseRgbNumeric(r),\n      parseRgbNumeric(g),\n      parseRgbNumeric(b),\n      alpha ? parseAlphaNumeric(alpha) : 1,\n    ];\n\n    if (!Platform.ArrayUtilities.arrayDoesNotContainNullOrUndefined(rgba)) {\n      return null;\n    }\n    return new Legacy(rgba as Color4D, alpha ? Format.RGBA : Format.RGB, text);\n  }\n\n  static fromRGBA(rgba: number[], authoredText?: string): Legacy {\n    return new Legacy([rgba[0] / 255, rgba[1] / 255, rgba[2] / 255, rgba[3]], Format.RGBA, authoredText);\n  }\n\n  static fromHSVA(hsva: Color4D): Legacy {\n    const rgba = hsva2rgba(hsva);\n    return new Legacy(rgba, Format.RGBA);\n  }\n\n  is<T extends Format>(format: T): this is ReturnType<ColorConversions[T]> {\n    return format === this.format();\n  }\n  as<T extends Format>(format: T): ReturnType<ColorConversions[T]> {\n    if (format === this.format()) {\n      return this as ReturnType<ColorConversions[T]>;\n    }\n    return Legacy.#conversions[format](this) as ReturnType<ColorConversions[T]>;\n  }\n\n  format(): LegacyColor {\n    return this.#format;\n  }\n\n  hasAlpha(): boolean {\n    return this.#rgba[3] !== 1;\n  }\n\n  detectHEXFormat(): Format {\n    const hasAlpha = this.hasAlpha();\n    return hasAlpha ? Format.HEXA : Format.HEX;\n  }\n\n  asString(format?: Format): string {\n    if (format) {\n      return this.as(format).asString();\n    }\n    return this.#stringify(format, this.#rgba[0], this.#rgba[1], this.#rgba[2]);\n  }\n  #stringify(format: LegacyColor|undefined, r: number, g: number, b: number): string {\n    if (!format) {\n      format = this.#format;\n    }\n\n    function toHexValue(value: number): string {\n      const hex = Math.round(value * 255).toString(16);\n      return hex.length === 1 ? '0' + hex : hex;\n    }\n\n    switch (format) {\n      case Format.RGB:\n      case Format.RGBA: {\n        const start = Platform.StringUtilities.sprintf('rgb(%d %d %d', toRgbValue(r), toRgbValue(g), toRgbValue(b));\n        if (this.hasAlpha()) {\n          return start + Platform.StringUtilities.sprintf(' / %d%)', Math.round(this.#rgba[3] * 100));\n        }\n        return start + ')';\n      }\n      case Format.HEX:\n      case Format.HEXA: {\n        if (this.hasAlpha()) {\n          return Platform.StringUtilities\n              .sprintf('#%s%s%s%s', toHexValue(r), toHexValue(g), toHexValue(b), toHexValue(this.#rgba[3]))\n              .toLowerCase();\n        }\n        return Platform.StringUtilities.sprintf('#%s%s%s', toHexValue(r), toHexValue(g), toHexValue(b)).toLowerCase();\n      }\n    }\n  }\n  getAuthoredText(): string|null {\n    return this.#authoredText ?? null;\n  }\n\n  getRawParameters(): Color3D {\n    return [...this.#rawParams];\n  }\n  getAsRawString(format?: Format): string {\n    if (format) {\n      return this.as(format).getAsRawString();\n    }\n    return this.#stringify(format, ...this.#rawParams);\n  }\n  isGamutClipped(): boolean {\n    return !equals(\n        this.#rawParams.map(toRgbValue), [this.#rgba[0], this.#rgba[1], this.#rgba[2]].map(toRgbValue),\n        WIDE_RANGE_EPSILON);\n  }\n\n  rgba(): Color4D {\n    return [...this.#rgba];\n  }\n\n  canonicalRGBA(): Color4D {\n    const rgba = new Array(4);\n    for (let i = 0; i < 3; ++i) {\n      rgba[i] = Math.round(this.#rgba[i] * 255);\n    }\n    rgba[3] = this.#rgba[3];\n    return rgba as Color4D;\n  }\n\n  toProtocolRGBA(): {\n    r: number,\n    g: number,\n    b: number,\n    a: (number|undefined),\n  } {\n    const rgba = this.canonicalRGBA();\n    const result: {\n      r: number,\n      g: number,\n      b: number,\n      a: number|undefined,\n    } = {r: rgba[0], g: rgba[1], b: rgba[2], a: undefined};\n    if (rgba[3] !== 1) {\n      result.a = rgba[3];\n    }\n    return result;\n  }\n\n  invert(): Legacy {\n    const rgba: Color4D = [0, 0, 0, 0];\n    rgba[0] = 1 - this.#rgba[0];\n    rgba[1] = 1 - this.#rgba[1];\n    rgba[2] = 1 - this.#rgba[2];\n    rgba[3] = this.#rgba[3];\n    return new Legacy(rgba, Format.RGBA);\n  }\n\n  /**\n   * Returns a new color using the NTSC formula for making a RGB color grayscale.\n   * Note: We override with an alpha of 50% to enhance the dimming effect.\n   */\n  grayscale(): Legacy {\n    const [r, g, b] = this.#rgba;\n    const gray = r * 0.299 + g * 0.587 + b * 0.114;\n    return new Legacy([gray, gray, gray, 0.5], Format.RGBA);\n  }\n\n  setAlpha(alpha: number): Legacy {\n    const rgba: Color4D = [...this.#rgba];\n    rgba[3] = alpha;\n    return new Legacy(rgba, Format.RGBA);\n  }\n\n  blendWith(fgColor: Legacy): Legacy {\n    const rgba: Color4D = blendColors(fgColor.#rgba, this.#rgba);\n    return new Legacy(rgba, Format.RGBA);\n  }\n\n  blendWithAlpha(alpha: number): Legacy {\n    const rgba: Color4D = [...this.#rgba];\n    rgba[3] *= alpha;\n    return new Legacy(rgba, Format.RGBA);\n  }\n\n  setFormat(format: LegacyColor): void {\n    this.#format = format;\n  }\n\n  equal(other: Color): boolean {\n    const legacy = other.as(this.#format);\n    return equals(toRgbValue(this.#rgba[0]), toRgbValue(legacy.#rgba[0]), WIDE_RANGE_EPSILON) &&\n        equals(toRgbValue(this.#rgba[1]), toRgbValue(legacy.#rgba[1]), WIDE_RANGE_EPSILON) &&\n        equals(toRgbValue(this.#rgba[2]), toRgbValue(legacy.#rgba[2]), WIDE_RANGE_EPSILON) &&\n        equals(this.#rgba[3], legacy.#rgba[3]);\n  }\n}\n\nexport const Regex =\n    /((?:rgba?|hsla?|hwba?|lab|lch|oklab|oklch|color)\\([^)]+\\)|#[0-9a-fA-F]{8}|#[0-9a-fA-F]{6}|#[0-9a-fA-F]{3,4}|\\b[a-zA-Z]+\\b(?!-))/g;\nexport const ColorMixRegex = /color-mix\\(.*,\\s*(?<firstColor>.+)\\s*,\\s*(?<secondColor>.+)\\s*\\)/g;\n\nconst COLOR_TO_RGBA_ENTRIES: Array<readonly[string, number[]]> = [\n  ['aliceblue', [240, 248, 255]],\n  ['antiquewhite', [250, 235, 215]],\n  ['aqua', [0, 255, 255]],\n  ['aquamarine', [127, 255, 212]],\n  ['azure', [240, 255, 255]],\n  ['beige', [245, 245, 220]],\n  ['bisque', [255, 228, 196]],\n  ['black', [0, 0, 0]],\n  ['blanchedalmond', [255, 235, 205]],\n  ['blue', [0, 0, 255]],\n  ['blueviolet', [138, 43, 226]],\n  ['brown', [165, 42, 42]],\n  ['burlywood', [222, 184, 135]],\n  ['cadetblue', [95, 158, 160]],\n  ['chartreuse', [127, 255, 0]],\n  ['chocolate', [210, 105, 30]],\n  ['coral', [255, 127, 80]],\n  ['cornflowerblue', [100, 149, 237]],\n  ['cornsilk', [255, 248, 220]],\n  ['crimson', [237, 20, 61]],\n  ['cyan', [0, 255, 255]],\n  ['darkblue', [0, 0, 139]],\n  ['darkcyan', [0, 139, 139]],\n  ['darkgoldenrod', [184, 134, 11]],\n  ['darkgray', [169, 169, 169]],\n  ['darkgrey', [169, 169, 169]],\n  ['darkgreen', [0, 100, 0]],\n  ['darkkhaki', [189, 183, 107]],\n  ['darkmagenta', [139, 0, 139]],\n  ['darkolivegreen', [85, 107, 47]],\n  ['darkorange', [255, 140, 0]],\n  ['darkorchid', [153, 50, 204]],\n  ['darkred', [139, 0, 0]],\n  ['darksalmon', [233, 150, 122]],\n  ['darkseagreen', [143, 188, 143]],\n  ['darkslateblue', [72, 61, 139]],\n  ['darkslategray', [47, 79, 79]],\n  ['darkslategrey', [47, 79, 79]],\n  ['darkturquoise', [0, 206, 209]],\n  ['darkviolet', [148, 0, 211]],\n  ['deeppink', [255, 20, 147]],\n  ['deepskyblue', [0, 191, 255]],\n  ['dimgray', [105, 105, 105]],\n  ['dimgrey', [105, 105, 105]],\n  ['dodgerblue', [30, 144, 255]],\n  ['firebrick', [178, 34, 34]],\n  ['floralwhite', [255, 250, 240]],\n  ['forestgreen', [34, 139, 34]],\n  ['fuchsia', [255, 0, 255]],\n  ['gainsboro', [220, 220, 220]],\n  ['ghostwhite', [248, 248, 255]],\n  ['gold', [255, 215, 0]],\n  ['goldenrod', [218, 165, 32]],\n  ['gray', [128, 128, 128]],\n  ['grey', [128, 128, 128]],\n  ['green', [0, 128, 0]],\n  ['greenyellow', [173, 255, 47]],\n  ['honeydew', [240, 255, 240]],\n  ['hotpink', [255, 105, 180]],\n  ['indianred', [205, 92, 92]],\n  ['indigo', [75, 0, 130]],\n  ['ivory', [255, 255, 240]],\n  ['khaki', [240, 230, 140]],\n  ['lavender', [230, 230, 250]],\n  ['lavenderblush', [255, 240, 245]],\n  ['lawngreen', [124, 252, 0]],\n  ['lemonchiffon', [255, 250, 205]],\n  ['lightblue', [173, 216, 230]],\n  ['lightcoral', [240, 128, 128]],\n  ['lightcyan', [224, 255, 255]],\n  ['lightgoldenrodyellow', [250, 250, 210]],\n  ['lightgreen', [144, 238, 144]],\n  ['lightgray', [211, 211, 211]],\n  ['lightgrey', [211, 211, 211]],\n  ['lightpink', [255, 182, 193]],\n  ['lightsalmon', [255, 160, 122]],\n  ['lightseagreen', [32, 178, 170]],\n  ['lightskyblue', [135, 206, 250]],\n  ['lightslategray', [119, 136, 153]],\n  ['lightslategrey', [119, 136, 153]],\n  ['lightsteelblue', [176, 196, 222]],\n  ['lightyellow', [255, 255, 224]],\n  ['lime', [0, 255, 0]],\n  ['limegreen', [50, 205, 50]],\n  ['linen', [250, 240, 230]],\n  ['magenta', [255, 0, 255]],\n  ['maroon', [128, 0, 0]],\n  ['mediumaquamarine', [102, 205, 170]],\n  ['mediumblue', [0, 0, 205]],\n  ['mediumorchid', [186, 85, 211]],\n  ['mediumpurple', [147, 112, 219]],\n  ['mediumseagreen', [60, 179, 113]],\n  ['mediumslateblue', [123, 104, 238]],\n  ['mediumspringgreen', [0, 250, 154]],\n  ['mediumturquoise', [72, 209, 204]],\n  ['mediumvioletred', [199, 21, 133]],\n  ['midnightblue', [25, 25, 112]],\n  ['mintcream', [245, 255, 250]],\n  ['mistyrose', [255, 228, 225]],\n  ['moccasin', [255, 228, 181]],\n  ['navajowhite', [255, 222, 173]],\n  ['navy', [0, 0, 128]],\n  ['oldlace', [253, 245, 230]],\n  ['olive', [128, 128, 0]],\n  ['olivedrab', [107, 142, 35]],\n  ['orange', [255, 165, 0]],\n  ['orangered', [255, 69, 0]],\n  ['orchid', [218, 112, 214]],\n  ['palegoldenrod', [238, 232, 170]],\n  ['palegreen', [152, 251, 152]],\n  ['paleturquoise', [175, 238, 238]],\n  ['palevioletred', [219, 112, 147]],\n  ['papayawhip', [255, 239, 213]],\n  ['peachpuff', [255, 218, 185]],\n  ['peru', [205, 133, 63]],\n  ['pink', [255, 192, 203]],\n  ['plum', [221, 160, 221]],\n  ['powderblue', [176, 224, 230]],\n  ['purple', [128, 0, 128]],\n  ['rebeccapurple', [102, 51, 153]],\n  ['red', [255, 0, 0]],\n  ['rosybrown', [188, 143, 143]],\n  ['royalblue', [65, 105, 225]],\n  ['saddlebrown', [139, 69, 19]],\n  ['salmon', [250, 128, 114]],\n  ['sandybrown', [244, 164, 96]],\n  ['seagreen', [46, 139, 87]],\n  ['seashell', [255, 245, 238]],\n  ['sienna', [160, 82, 45]],\n  ['silver', [192, 192, 192]],\n  ['skyblue', [135, 206, 235]],\n  ['slateblue', [106, 90, 205]],\n  ['slategray', [112, 128, 144]],\n  ['slategrey', [112, 128, 144]],\n  ['snow', [255, 250, 250]],\n  ['springgreen', [0, 255, 127]],\n  ['steelblue', [70, 130, 180]],\n  ['tan', [210, 180, 140]],\n  ['teal', [0, 128, 128]],\n  ['thistle', [216, 191, 216]],\n  ['tomato', [255, 99, 71]],\n  ['turquoise', [64, 224, 208]],\n  ['violet', [238, 130, 238]],\n  ['wheat', [245, 222, 179]],\n  ['white', [255, 255, 255]],\n  ['whitesmoke', [245, 245, 245]],\n  ['yellow', [255, 255, 0]],\n  ['yellowgreen', [154, 205, 50]],\n  ['transparent', [0, 0, 0, 0]],\n];\n\nconsole.assert(\n    COLOR_TO_RGBA_ENTRIES.every(([nickname]) => nickname.toLowerCase() === nickname),\n    'All color nicknames must be lowercase.');\n\nexport const Nicknames = new Map(COLOR_TO_RGBA_ENTRIES);\n\nconst RGBAToNickname = new Map(\n    // Default opacity to 1 if the color only specified 3 channels\n    COLOR_TO_RGBA_ENTRIES.map(([nickname, [r, g, b, a = 1]]) => {\n      return [String([r, g, b, a]), nickname];\n    }),\n);\n\nconst LAYOUT_LINES_HIGHLIGHT_COLOR = [127, 32, 210];\n\nexport const PageHighlight = {\n  Content: Legacy.fromRGBA([111, 168, 220, .66]),\n  ContentLight: Legacy.fromRGBA([111, 168, 220, .5]),\n  ContentOutline: Legacy.fromRGBA([9, 83, 148]),\n  Padding: Legacy.fromRGBA([147, 196, 125, .55]),\n  PaddingLight: Legacy.fromRGBA([147, 196, 125, .4]),\n  Border: Legacy.fromRGBA([255, 229, 153, .66]),\n  BorderLight: Legacy.fromRGBA([255, 229, 153, .5]),\n  Margin: Legacy.fromRGBA([246, 178, 107, .66]),\n  MarginLight: Legacy.fromRGBA([246, 178, 107, .5]),\n  EventTarget: Legacy.fromRGBA([255, 196, 196, .66]),\n  Shape: Legacy.fromRGBA([96, 82, 177, 0.8]),\n  ShapeMargin: Legacy.fromRGBA([96, 82, 127, .6]),\n  CssGrid: Legacy.fromRGBA([0x4b, 0, 0x82, 1]),\n  LayoutLine: Legacy.fromRGBA([...LAYOUT_LINES_HIGHLIGHT_COLOR, 1]),\n  GridBorder: Legacy.fromRGBA([...LAYOUT_LINES_HIGHLIGHT_COLOR, 1]),\n  GapBackground: Legacy.fromRGBA([...LAYOUT_LINES_HIGHLIGHT_COLOR, .3]),\n  GapHatch: Legacy.fromRGBA([...LAYOUT_LINES_HIGHLIGHT_COLOR, .8]),\n  GridAreaBorder: Legacy.fromRGBA([26, 115, 232, 1]),\n};\n\nexport const SourceOrderHighlight = {\n  ParentOutline: Legacy.fromRGBA([224, 90, 183, 1]),\n  ChildOutline: Legacy.fromRGBA([0, 120, 212, 1]),\n};\n\nexport const IsolationModeHighlight = {\n  Resizer: Legacy.fromRGBA([222, 225, 230, 1]),  // --color-background-elevation-2\n  ResizerHandle: Legacy.fromRGBA([166, 166, 166, 1]),\n  Mask: Legacy.fromRGBA([248, 249, 249, 1]),\n};\n\ntype Space = number|{\n  min: number,\n  max: number,\n  count: (number|undefined),\n};\n\nexport class Generator {\n  readonly #hueSpace: Space;\n  readonly #satSpace: Space;\n  readonly #lightnessSpace: Space;\n  readonly #alphaSpace: Space;\n  readonly #colors = new Map<string, string>();\n  constructor(hueSpace?: Space, satSpace?: Space, lightnessSpace?: Space, alphaSpace?: Space) {\n    this.#hueSpace = hueSpace || {min: 0, max: 360, count: undefined};\n    this.#satSpace = satSpace || 67;\n    this.#lightnessSpace = lightnessSpace || 80;\n    this.#alphaSpace = alphaSpace || 1;\n  }\n\n  setColorForID(id: string, color: string): void {\n    this.#colors.set(id, color);\n  }\n\n  colorForID(id: string): string {\n    let color = this.#colors.get(id);\n    if (!color) {\n      color = this.generateColorForID(id);\n      this.#colors.set(id, color);\n    }\n    return color;\n  }\n\n  private generateColorForID(id: string): string {\n    const hash = Platform.StringUtilities.hashCode(id);\n    const h = this.indexToValueInSpace(hash, this.#hueSpace);\n    const s = this.indexToValueInSpace(hash >> 8, this.#satSpace);\n    const l = this.indexToValueInSpace(hash >> 16, this.#lightnessSpace);\n    const a = this.indexToValueInSpace(hash >> 24, this.#alphaSpace);\n    const start = `hsl(${h}deg ${s}% ${l}%`;\n    if (a !== 1) {\n      return `${start} / ${Math.floor(a * 100)}%)`;\n    }\n    return `${start})`;\n  }\n\n  private indexToValueInSpace(index: number, space: Space): number {\n    if (typeof space === 'number') {\n      return space;\n    }\n    const count = space.count || space.max - space.min;\n    index %= count;\n    return space.min + Math.floor(index / (count - 1) * (space.max - space.min));\n  }\n}\n", "// Copyright 2022 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/**\n * Implementation of this module and all the tests are heavily influenced by\n * https://source.chromium.org/chromium/chromium/src/+/main:ui/gfx/color_conversions.cc\n */\n\n// https://en.wikipedia.org/wiki/CIELAB_color_space#Converting_between_CIELAB_and_CIEXYZ_coordinates\nconst D50_X = 0.9642;\nconst D50_Y = 1.0;\nconst D50_Z = 0.8251;\n\ntype Array3x3 = [\n  [number, number, number],\n  [number, number, number],\n  [number, number, number],\n];\n\nclass Vector3 {\n  values: [number, number, number] = [0, 0, 0];\n  constructor(values?: [number, number, number]) {\n    if (values) {\n      this.values = values;\n    }\n  }\n}\n\nclass Matrix3x3 {\n  values: Array3x3 = [\n    [0, 0, 0],\n    [0, 0, 0],\n    [0, 0, 0],\n  ];\n\n  constructor(values?: Array3x3) {\n    if (values) {\n      this.values = values;\n    }\n  }\n\n  multiply(other: Vector3): Vector3 {\n    const dst = new Vector3();\n    for (let row = 0; row < 3; ++row) {\n      dst.values[row] = this.values[row][0] * other.values[0] + this.values[row][1] * other.values[1] +\n          this.values[row][2] * other.values[2];\n    }\n    return dst;\n  }\n}\n\n/**\n * A transfer function mapping encoded values to linear values,\n * represented by this 7-parameter piecewise function:\n *\n * linear = sign(encoded) *  (c*|encoded| + f)       , 0 <= |encoded| < d\n * = sign(encoded) * ((a*|encoded| + b)^g + e), d <= |encoded|\n *\n * (A simple gamma transfer function sets g to gamma and a to 1.)\n **/\nclass TransferFunction {\n  g: number;\n  a: number;\n  b: number;\n  c: number;\n  d: number;\n  e: number;\n  f: number;\n\n  constructor(g: number, a: number, b = 0, c = 0, d = 0, e = 0, f = 0) {\n    this.g = g;\n    this.a = a;\n    this.b = b;\n    this.c = c;\n    this.d = d;\n    this.e = e;\n    this.f = f;\n  }\n\n  eval(val: number): number {\n    const sign = val < 0 ? -1.0 : 1.0;\n    const abs = val * sign;\n\n    // 0 <= |encoded| < d path\n    if (abs < this.d) {\n      return sign * (this.c * abs + this.f);\n    }\n\n    // d <= |encoded| path\n    return sign * (Math.pow(this.a * abs + this.b, this.g) + this.e);\n  }\n}\n\nconst NAMED_TRANSFER_FN = {\n  sRGB: new TransferFunction(2.4, (1 / 1.055), (0.055 / 1.055), (1 / 12.92), 0.04045, 0.0, 0.0),\n  sRGB_INVERSE: new TransferFunction(0.416667, 1.13728, -0, 12.92, 0.0031308, -0.0549698, -0),\n\n  proPhotoRGB: new TransferFunction(1.8, 1),\n  proPhotoRGB_INVERSE: new TransferFunction(0.555556, 1, -0, 0, 0, 0, 0),\n\n  k2Dot2: new TransferFunction(2.2, 1.0),\n  k2Dot2_INVERSE: new TransferFunction(0.454545, 1),\n\n  rec2020: new TransferFunction(2.22222, 0.909672, 0.0903276, 0.222222, 0.0812429, 0, 0),\n  rec2020_INVERSE: new TransferFunction(0.45, 1.23439, -0, 4.5, 0.018054, -0.0993195, -0),\n};\n\nconst NAMED_GAMUTS = {\n  sRGB: new Matrix3x3([\n    [0.436065674, 0.385147095, 0.143066406],\n    [0.222488403, 0.716873169, 0.060607910],\n    [0.013916016, 0.097076416, 0.714096069],\n  ]),\n  sRGB_INVERSE: new Matrix3x3([\n    [3.134112151374599, -1.6173924597114966, -0.4906334036481285],\n    [-0.9787872938826594, 1.9162795854799963, 0.0334547139520088],\n    [0.07198304248352326, -0.2289858493321844, 1.4053851325241447],\n  ]),\n  displayP3: new Matrix3x3([\n    [0.515102, 0.291965, 0.157153],\n    [0.241182, 0.692236, 0.0665819],\n    [-0.00104941, 0.0418818, 0.784378],\n  ]),\n  displayP3_INVERSE: new Matrix3x3([\n    [2.404045155982687, -0.9898986932663839, -0.3976317191366333],\n    [-0.8422283799266768, 1.7988505115115485, 0.016048170293157416],\n    [0.04818705979712955, -0.09737385156228891, 1.2735066448052303],\n  ]),\n  adobeRGB: new Matrix3x3([\n    [0.60974, 0.20528, 0.14919],\n    [0.31111, 0.62567, 0.06322],\n    [0.01947, 0.06087, 0.74457],\n  ]),\n  adobeRGB_INVERSE: new Matrix3x3([\n    [1.9625385510109137, -0.6106892546501431, -0.3413827467482388],\n    [-0.9787580455521, 1.9161624707082339, 0.03341676594241408],\n    [0.028696263137883395, -0.1406807819331586, 1.349252109991369],\n  ]),\n  rec2020: new Matrix3x3([\n    [0.673459, 0.165661, 0.125100],\n    [0.279033, 0.675338, 0.0456288],\n    [-0.00193139, 0.0299794, 0.797162],\n  ]),\n  rec2020_INVERSE: new Matrix3x3([\n    [1.647275201661012, -0.3936024771460771, -0.23598028884792507],\n    [-0.6826176165196962, 1.647617775014935, 0.01281626807852422],\n    [0.029662725298529837, -0.06291668721366285, 1.2533964313435522],\n  ]),\n  xyz: new Matrix3x3([\n    [1.0, 0.0, 0.0],\n    [0.0, 1.0, 0.0],\n    [0.0, 0.0, 1.0],\n  ]),\n\n};\n\nfunction degToRad(deg: number): number {\n  return deg * (Math.PI / 180);\n}\n\nfunction radToDeg(rad: number): number {\n  return rad * (180 / Math.PI);\n}\n\nfunction applyTransferFns(fn: TransferFunction, r: number, g: number, b: number): [number, number, number] {\n  return [fn.eval(r), fn.eval(g), fn.eval(b)];\n}\n\nconst OKLAB_TO_LMS_MATRIX = new Matrix3x3([\n  [0.99999999845051981432, 0.39633779217376785678, 0.21580375806075880339],\n  [1.0000000088817607767, -0.1055613423236563494, -0.063854174771705903402],\n  [1.0000000546724109177, -0.089484182094965759684, -1.2914855378640917399],\n]);\n\n// Inverse of the OKLAB_TO_LMS_MATRIX\nconst LMS_TO_OKLAB_MATRIX = new Matrix3x3([\n  [0.2104542553, 0.7936177849999999, -0.0040720468],\n  [1.9779984951000003, -2.4285922049999997, 0.4505937099000001],\n  [0.025904037099999982, 0.7827717662, -0.8086757660000001],\n]);\n\nconst XYZ_TO_LMS_MATRIX = new Matrix3x3([\n  [0.8190224432164319, 0.3619062562801221, -0.12887378261216414],\n  [0.0329836671980271, 0.9292868468965546, 0.03614466816999844],\n  [0.048177199566046255, 0.26423952494422764, 0.6335478258136937],\n]);\n// Inverse of XYZ_TO_LMS_MATRIX\nconst LMS_TO_XYZ_MATRIX = new Matrix3x3([\n  [1.226879873374156, -0.5578149965554814, 0.2813910501772159],\n  [-0.040575762624313734, 1.1122868293970596, -0.07171106666151703],\n  [-0.07637294974672144, -0.4214933239627915, 1.586924024427242],\n]);\n\nconst PRO_PHOTO_TO_XYZD50_MATRIX = new Matrix3x3([\n  [0.7976700747153241, 0.13519395152800417, 0.03135596341127167],\n  [0.28803902352472205, 0.7118744007923554, 0.00008661179538844252],\n  [2.739876695467402e-7, -0.0000014405226518969991, 0.825211112593861],\n]);\n// Inverse of PRO_PHOTO_TO_XYZD50_MATRIX\nconst XYZD50_TO_PRO_PHOTO_MATRIX = new Matrix3x3([\n  [1.3459533710138858, -0.25561367037652133, -0.051116041522131374],\n  [-0.544600415668951, 1.5081687311475767, 0.020535163968720935],\n  [-0.0000013975622054109725, 0.000002717590904589903, 1.2118111696814942],\n]);\n\nconst XYZD65_TO_XYZD50_MATRIX = new Matrix3x3([\n  [1.0478573189120088, 0.022907374491829943, -0.050162247377152525],\n  [0.029570500050499514, 0.9904755577034089, -0.017061518194840468],\n  [-0.00924047197558879, 0.015052921526981566, 0.7519708530777581],\n]);\n// Inverse of XYZD65_TO_XYZD50_MATRIX\nconst XYZD50_TO_XYZD65_MATRIX = new Matrix3x3([\n  [0.9555366447632887, -0.02306009252137888, 0.06321844147263304],\n  [-0.028315378228764922, 1.009951351591575, 0.021026001591792402],\n  [0.012308773293784308, -0.02050053471777469, 1.3301947294775631],\n]);\n\nexport class ColorConverter {\n  static labToXyzd50(l: number, a: number, b: number): [number, number, number] {\n    let y = (l + 16.0) / 116.0;\n    let x = y + a / 500.0;\n    let z = y - b / 200.0;\n\n    function labInverseTransferFunction(t: number): number {\n      const delta = (24.0 / 116.0);\n\n      if (t <= delta) {\n        return (108.0 / 841.0) * (t - (16.0 / 116.0));\n      }\n\n      return t * t * t;\n    }\n\n    x = labInverseTransferFunction(x) * D50_X;\n    y = labInverseTransferFunction(y) * D50_Y;\n    z = labInverseTransferFunction(z) * D50_Z;\n\n    return [x, y, z];\n  }\n\n  static xyzd50ToLab(x: number, y: number, z: number): [number, number, number] {\n    function labTransferFunction(t: number): number {\n      const deltaLimit: number = (24.0 / 116.0) * (24.0 / 116.0) * (24.0 / 116.0);\n\n      if (t <= deltaLimit) {\n        return (841.0 / 108.0) * t + (16.0 / 116.0);\n      }\n      return Math.pow(t, 1.0 / 3.0);\n    }\n\n    x = labTransferFunction(x / D50_X);\n    y = labTransferFunction(y / D50_Y);\n    z = labTransferFunction(z / D50_Z);\n\n    const l = 116.0 * y - 16.0;\n    const a = 500.0 * (x - y);\n    const b = 200.0 * (y - z);\n\n    return [l, a, b];\n  }\n\n  static oklabToXyzd65(l: number, a: number, b: number): [number, number, number] {\n    const labInput = new Vector3([l, a, b]);\n    const lmsIntermediate = OKLAB_TO_LMS_MATRIX.multiply(labInput);\n    lmsIntermediate.values[0] = lmsIntermediate.values[0] * lmsIntermediate.values[0] * lmsIntermediate.values[0];\n    lmsIntermediate.values[1] = lmsIntermediate.values[1] * lmsIntermediate.values[1] * lmsIntermediate.values[1];\n    lmsIntermediate.values[2] = lmsIntermediate.values[2] * lmsIntermediate.values[2] * lmsIntermediate.values[2];\n    const xyzOutput = LMS_TO_XYZ_MATRIX.multiply(lmsIntermediate);\n    return xyzOutput.values;\n  }\n\n  static xyzd65ToOklab(x: number, y: number, z: number): [number, number, number] {\n    const xyzInput = new Vector3([x, y, z]);\n    const lmsIntermediate = XYZ_TO_LMS_MATRIX.multiply(xyzInput);\n\n    lmsIntermediate.values[0] = Math.pow(lmsIntermediate.values[0], 1.0 / 3.0);\n    lmsIntermediate.values[1] = Math.pow(lmsIntermediate.values[1], 1.0 / 3.0);\n    lmsIntermediate.values[2] = Math.pow(lmsIntermediate.values[2], 1.0 / 3.0);\n\n    const labOutput = LMS_TO_OKLAB_MATRIX.multiply(lmsIntermediate);\n    return [labOutput.values[0], labOutput.values[1], labOutput.values[2]];\n  }\n\n  static lchToLab(l: number, c: number, h: number|undefined): [number, number, number] {\n    if (h === undefined) {\n      return [l, 0, 0];\n    }\n\n    return [l, c * Math.cos(degToRad(h)), c * Math.sin(degToRad(h))];\n  }\n\n  static labToLch(l: number, a: number, b: number): [number, number, number] {\n    return [l, Math.sqrt(a * a + b * b), radToDeg(Math.atan2(b, a))];\n  }\n\n  static displayP3ToXyzd50(r: number, g: number, b: number): [number, number, number] {\n    const [mappedR, mappedG, mappedB] = applyTransferFns(NAMED_TRANSFER_FN.sRGB, r, g, b);\n    const rgbInput = new Vector3([mappedR, mappedG, mappedB]);\n    const xyzOutput = NAMED_GAMUTS.displayP3.multiply(rgbInput);\n    return xyzOutput.values;\n  }\n\n  static xyzd50ToDisplayP3(x: number, y: number, z: number): [number, number, number] {\n    const xyzInput = new Vector3([x, y, z]);\n    const rgbOutput = NAMED_GAMUTS.displayP3_INVERSE.multiply(xyzInput);\n    return applyTransferFns(\n        NAMED_TRANSFER_FN.sRGB_INVERSE, rgbOutput.values[0], rgbOutput.values[1], rgbOutput.values[2]);\n  }\n\n  static proPhotoToXyzd50(r: number, g: number, b: number): [number, number, number] {\n    const [mappedR, mappedG, mappedB] = applyTransferFns(NAMED_TRANSFER_FN.proPhotoRGB, r, g, b);\n    const rgbInput = new Vector3([mappedR, mappedG, mappedB]);\n    const xyzOutput = PRO_PHOTO_TO_XYZD50_MATRIX.multiply(rgbInput);\n    return xyzOutput.values;\n  }\n\n  static xyzd50ToProPhoto(x: number, y: number, z: number): [number, number, number] {\n    const xyzInput = new Vector3([x, y, z]);\n    const rgbOutput = XYZD50_TO_PRO_PHOTO_MATRIX.multiply(xyzInput);\n    return applyTransferFns(\n        NAMED_TRANSFER_FN.proPhotoRGB_INVERSE, rgbOutput.values[0], rgbOutput.values[1], rgbOutput.values[2]);\n  }\n\n  static adobeRGBToXyzd50(r: number, g: number, b: number): [number, number, number] {\n    const [mappedR, mappedG, mappedB] = applyTransferFns(NAMED_TRANSFER_FN.k2Dot2, r, g, b);\n    const rgbInput = new Vector3([mappedR, mappedG, mappedB]);\n    const xyzOutput = NAMED_GAMUTS.adobeRGB.multiply(rgbInput);\n    return xyzOutput.values;\n  }\n\n  static xyzd50ToAdobeRGB(x: number, y: number, z: number): [number, number, number] {\n    const xyzInput = new Vector3([x, y, z]);\n    const rgbOutput = NAMED_GAMUTS.adobeRGB_INVERSE.multiply(xyzInput);\n    return applyTransferFns(\n        NAMED_TRANSFER_FN.k2Dot2_INVERSE, rgbOutput.values[0], rgbOutput.values[1], rgbOutput.values[2]);\n  }\n\n  static rec2020ToXyzd50(r: number, g: number, b: number): [number, number, number] {\n    const [mappedR, mappedG, mappedB] = applyTransferFns(NAMED_TRANSFER_FN.rec2020, r, g, b);\n    const rgbInput = new Vector3([mappedR, mappedG, mappedB]);\n    const xyzOutput = NAMED_GAMUTS.rec2020.multiply(rgbInput);\n    return xyzOutput.values;\n  }\n\n  static xyzd50ToRec2020(x: number, y: number, z: number): [number, number, number] {\n    const xyzInput = new Vector3([x, y, z]);\n    const rgbOutput = NAMED_GAMUTS.rec2020_INVERSE.multiply(xyzInput);\n    return applyTransferFns(\n        NAMED_TRANSFER_FN.rec2020_INVERSE, rgbOutput.values[0], rgbOutput.values[1], rgbOutput.values[2]);\n  }\n\n  static xyzd50ToD65(x: number, y: number, z: number): [number, number, number] {\n    const xyzInput = new Vector3([x, y, z]);\n    const xyzOutput = XYZD50_TO_XYZD65_MATRIX.multiply(xyzInput);\n    return xyzOutput.values;\n  }\n\n  static xyzd65ToD50(x: number, y: number, z: number): [number, number, number] {\n    const xyzInput = new Vector3([x, y, z]);\n    const xyzOutput = XYZD65_TO_XYZD50_MATRIX.multiply(xyzInput);\n    return xyzOutput.values;\n  }\n\n  static xyzd50TosRGBLinear(x: number, y: number, z: number): [number, number, number] {\n    const xyzInput = new Vector3([x, y, z]);\n    const rgbResult = NAMED_GAMUTS.sRGB_INVERSE.multiply(xyzInput);\n    return rgbResult.values;\n  }\n\n  static srgbLinearToXyzd50(r: number, g: number, b: number): [number, number, number] {\n    const rgbInput = new Vector3([r, g, b]);\n    const xyzOutput = NAMED_GAMUTS.sRGB.multiply(rgbInput);\n    return xyzOutput.values;\n  }\n\n  static srgbToXyzd50(r: number, g: number, b: number): [number, number, number] {\n    const [mappedR, mappedG, mappedB] = applyTransferFns(NAMED_TRANSFER_FN.sRGB, r, g, b);\n    const rgbInput = new Vector3([mappedR, mappedG, mappedB]);\n    const xyzOutput = NAMED_GAMUTS.sRGB.multiply(rgbInput);\n    return xyzOutput.values;\n  }\n\n  static xyzd50ToSrgb(x: number, y: number, z: number): [number, number, number] {\n    const xyzInput = new Vector3([x, y, z]);\n    const rgbOutput = NAMED_GAMUTS.sRGB_INVERSE.multiply(xyzInput);\n    return applyTransferFns(\n        NAMED_TRANSFER_FN.sRGB_INVERSE, rgbOutput.values[0], rgbOutput.values[1], rgbOutput.values[2]);\n  }\n\n  static oklchToXyzd50(lInput: number, c: number, h: number): [number, number, number] {\n    const [l, a, b] = ColorConverter.lchToLab(lInput, c, h);\n    const [x65, y65, z65] = ColorConverter.oklabToXyzd65(l, a, b);\n    return ColorConverter.xyzd65ToD50(x65, y65, z65);\n  }\n\n  static xyzd50ToOklch(x: number, y: number, z: number): [number, number, number] {\n    const [x65, y65, z65] = ColorConverter.xyzd50ToD65(x, y, z);\n    const [l, a, b] = ColorConverter.xyzd65ToOklab(x65, y65, z65);\n    return ColorConverter.labToLch(l, a, b);\n  }\n}\n", "// Copyright 2020 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/**\n * Combine the two given colors according to alpha blending.\n */\nexport type Color4D = [number, number, number, number];\nexport type Color3D = [number, number, number];\nexport type Color4DOr3D = [number, number, number, number | undefined];\nexport function blendColors(fgRGBA: Color4D, bgRGBA: Color4D): Color4D {\n  const alpha = fgRGBA[3];\n  return [\n    ((1 - alpha) * bgRGBA[0]) + (alpha * fgRGBA[0]),\n    ((1 - alpha) * bgRGBA[1]) + (alpha * fgRGBA[1]),\n    ((1 - alpha) * bgRGBA[2]) + (alpha * fgRGBA[2]),\n    alpha + (bgRGBA[3] * (1 - alpha)),\n  ];\n}\n\nfunction rgbToHue([r, g, b]: number[]): number {\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const diff = max - min;\n\n  let h;\n  if (min === max) {\n    h = 0;\n  } else if (r === max) {\n    h = ((1 / 6 * (g - b) / diff) + 1) % 1;\n  } else if (g === max) {\n    h = (1 / 6 * (b - r) / diff) + 1 / 3;\n  } else {\n    h = (1 / 6 * (r - g) / diff) + 2 / 3;\n  }\n  return h;\n}\n\nexport function rgbToHsl(rgb: Color3D): Color3D {\n  const [h, s, l] = rgbaToHsla([...rgb, undefined]);\n  return [h, s, l];\n}\nexport function rgbaToHsla([r, g, b, a]: Color4DOr3D): Color4DOr3D {\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const diff = max - min;\n  const sum = max + min;\n\n  const h = rgbToHue([r, g, b]);\n  const l = 0.5 * sum;\n\n  let s;\n  if (l === 0) {\n    s = 0;\n  } else if (l === 1) {\n    s = 0;\n  } else if (l <= 0.5) {\n    s = diff / sum;\n  } else {\n    s = diff / (2 - sum);\n  }\n\n  return [h, s, l, a];\n}\n\nexport function rgbToHwb(rgb: Color3D): Color3D {\n  const [h, w, b] = rgbaToHwba([...rgb, undefined]);\n  return [h, w, b];\n}\nexport function rgbaToHwba([r, g, b, a]: Color4DOr3D): Color4DOr3D {\n  const h = rgbToHue([r, g, b]);\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n\n  return [h, min, 1 - max, a];\n}\n\n/**\n * Calculate the luminance of this color using the WCAG algorithm.\n * See https://www.w3.org/TR/WCAG21/#dfn-relative-luminance.\n */\nexport function luminance([rSRGB, gSRGB, bSRGB]: number[]): number {\n  const r = rSRGB <= 0.04045 ? rSRGB / 12.92 : Math.pow(((rSRGB + 0.055) / 1.055), 2.4);\n  const g = gSRGB <= 0.04045 ? gSRGB / 12.92 : Math.pow(((gSRGB + 0.055) / 1.055), 2.4);\n  const b = bSRGB <= 0.04045 ? bSRGB / 12.92 : Math.pow(((bSRGB + 0.055) / 1.055), 2.4);\n\n  return 0.2126 * r + 0.7152 * g + 0.0722 * b;\n}\n\n/**\n * Calculate the contrast ratio between a foreground and a background color.\n * Returns the ratio to 1, for example for two two colors with a contrast ratio of 21:1, this function will return 21.\n * See http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef\n */\nexport function contrastRatio(fgRGBA: Color4D, bgRGBA: Color4D): number {\n  const blendedFg = blendColors(fgRGBA, bgRGBA);\n  const fgLuminance = luminance(blendedFg);\n  const bgLuminance = luminance(bgRGBA);\n  const contrastRatio = (Math.max(fgLuminance, bgLuminance) + 0.05) / (Math.min(fgLuminance, bgLuminance) + 0.05);\n  return contrastRatio;\n}\n\n// Constants for basic APCA version.\n// See https://github.com/Myndex/SAPC-APCA\nconst mainTRC = 2.4;\nconst normBgExp = 0.56;\nconst normFgExp = 0.57;\nconst revBgExp = 0.65;\nconst revFgExp = 0.62;\nconst blkThrs = 0.022;\nconst blkClmp = 1.414;\nconst scaleBoW = 1.14;\nconst scaleWoB = 1.14;\nconst loConOffset = 0.027;\nconst loClip = 0.1;\nconst deltaLuminanceMin = 0.0005;\n\n/**\n * Calculate relative luminance of a color.\n * See https://github.com/Myndex/SAPC-APCA\n */\nexport function luminanceAPCA([rSRGB, gSRGB, bSRGB]: number[]): number {\n  const r = Math.pow(rSRGB, mainTRC);\n  const g = Math.pow(gSRGB, mainTRC);\n  const b = Math.pow(bSRGB, mainTRC);\n\n  return 0.2126729 * r + 0.7151522 * g + 0.0721750 * b;\n}\n\n/**\n * Calculate the contrast ratio between a foreground and a background color.\n * Returns the percentage of the predicted visual contrast.\n * See https://github.com/Myndex/SAPC-APCA\n */\nexport function contrastRatioAPCA(fgRGBA: Color4D, bgRGBA: Color4D): number {\n  const blendedFg = blendColors(fgRGBA, bgRGBA);\n  return contrastRatioByLuminanceAPCA(luminanceAPCA(blendedFg), luminanceAPCA(bgRGBA));\n}\n\nfunction clampLuminance(value: number): number {\n  return value > blkThrs ? value : (value + Math.pow(blkThrs - value, blkClmp));\n}\n\nexport function contrastRatioByLuminanceAPCA(fgLuminance: number, bgLuminance: number): number {\n  fgLuminance = clampLuminance(fgLuminance);\n  bgLuminance = clampLuminance(bgLuminance);\n  if (Math.abs(fgLuminance - bgLuminance) < deltaLuminanceMin) {\n    return 0;\n  }\n  let result = 0;\n  if (bgLuminance > fgLuminance) {  // Black text on white.\n    result = (Math.pow(bgLuminance, normBgExp) - Math.pow(fgLuminance, normFgExp)) * scaleBoW;\n    result = result < loClip ? 0 : result - loConOffset;\n  } else {\n    // White text on black.\n    result = (Math.pow(bgLuminance, revBgExp) - Math.pow(fgLuminance, revFgExp)) * scaleWoB;\n    result = result > -loClip ? 0 : result + loConOffset;\n  }\n  return result * 100;\n}\n\n/**\n * Compute a desired luminance given a given luminance and a desired contrast\n * percentage according to APCA.\n */\nexport function desiredLuminanceAPCA(luminance: number, contrast: number, lighter: boolean): number {\n  luminance = clampLuminance(luminance);\n  contrast /= 100;\n  function computeLuminance(): number {\n    if (!lighter) {  // Black text on white.\n      return Math.pow(Math.abs(Math.pow(luminance, normBgExp) - (contrast + loConOffset) / scaleBoW), 1 / normFgExp);\n    }\n    // White text on black.\n    return Math.pow(Math.abs(Math.pow(luminance, revBgExp) - (-contrast - loConOffset) / scaleWoB), 1 / revFgExp);\n  }\n  let desiredLuminance = computeLuminance();\n  if (desiredLuminance < 0 || desiredLuminance > 1) {\n    lighter = !lighter;\n    desiredLuminance = computeLuminance();\n  }\n  return desiredLuminance;\n}\n\n// clang-format off\nconst contrastAPCALookupTable = [\n  // See https://github.com/Myndex/SAPC-APCA\n  // font size in px | 100 | 200 | 300 | 400 | 500 | 600 | 700 | 800 | 900 weights\n  [12, -1, -1, -1, -1, 100, 90, 80, -1, -1],\n  [14, -1, -1, -1, 100, 90, 80, 60, 60, -1],\n  [16, -1, -1, 100, 90, 80, 60, 55, 50, 50],\n  [18, -1, -1, 90, 80, 60, 55, 50, 40, 40],\n  [24, -1, 100, 80, 60, 55, 50, 40, 38, 35],\n  [30, -1, 90, 70, 55, 50, 40, 38, 35, 40],\n  [36, -1, 80, 60, 50, 40, 38, 35, 30, 25],\n  [48, 100, 70, 55, 40, 38, 35, 30, 25, 20],\n  [60, 90, 60, 50, 38, 35, 30, 25, 20, 20],\n  [72, 80, 55, 40, 35, 30, 25, 20, 20, 20],\n  [96, 70, 50, 35, 30, 25, 20, 20, 20, 20],\n  [120, 60, 40, 30, 25, 20, 20, 20, 20, 20],\n];\n// clang-format on\n\ncontrastAPCALookupTable.reverse();\n\nexport function getAPCAThreshold(fontSize: string, fontWeight: string): number|null {\n  const size = parseFloat(fontSize.replace('px', ''));\n  const weight = parseFloat(fontWeight);\n\n  // Go over the table backwards to find the first matching font size and then the weight.\n  // Fonts larger than 96px, use the thresholds for 96px.\n  // Fonts smaller than 12px, don't get any threshold meaning the font size needs to be increased.\n  for (const [rowSize, ...rowWeights] of contrastAPCALookupTable) {\n    if (size >= rowSize) {\n      for (const [idx, keywordWeight] of [900, 800, 700, 600, 500, 400, 300, 200, 100].entries()) {\n        if (weight >= keywordWeight) {\n          const threshold = rowWeights[rowWeights.length - 1 - idx];\n          return threshold === -1 ? null : threshold;\n        }\n      }\n    }\n  }\n\n  return null;\n}\n\nexport function isLargeFont(fontSize: string, fontWeight: string): boolean {\n  const boldWeights = ['bold', 'bolder'];\n\n  const fontSizePx = parseFloat(fontSize.replace('px', ''));\n  const isBold = isNaN(Number(fontWeight)) ? boldWeights.includes(fontWeight) : Number(fontWeight) >= 600;\n\n  const fontSizePt = fontSizePx * 72 / 96;\n  if (isBold) {\n    return fontSizePt >= 14;\n  }\n  return fontSizePt >= 18;\n}\n\nconst contrastThresholds = {\n  largeFont: {aa: 3.0, aaa: 4.5},\n  normalFont: {aa: 4.5, aaa: 7.0},\n};\n\nexport function getContrastThreshold(fontSize: string, fontWeight: string): {\n  aa: number,\n  aaa: number,\n} {\n  if (isLargeFont(fontSize, fontWeight)) {\n    return contrastThresholds.largeFont;\n  }\n  return contrastThresholds.normalFont;\n}\n", "// Copyright 2014 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {ObjectWrapper} from './Object.js';\nimport {reveal} from './Revealer.js';\n\nlet consoleInstance: Console|undefined;\n\nexport class Console extends ObjectWrapper<EventTypes> {\n  readonly #messages: Message[] = [];\n\n  static instance(opts?: {forceNew: boolean}): Console {\n    if (!consoleInstance || opts?.forceNew) {\n      consoleInstance = new Console();\n    }\n\n    return consoleInstance;\n  }\n\n  static removeInstance(): void {\n    consoleInstance = undefined;\n  }\n\n  /**\n   * Add a message to the Console panel.\n   *\n   * @param text the message text.\n   * @param level the message level.\n   * @param show whether to show the Console panel (if it's not already shown).\n   * @param source the message source.\n   */\n  addMessage(text: string, level = MessageLevel.INFO, show = false, source?: FrontendMessageSource): void {\n    const message = new Message(text, level, Date.now(), show, source);\n    this.#messages.push(message);\n    this.dispatchEventToListeners(Events.MESSAGE_ADDED, message);\n  }\n\n  log(text: string): void {\n    this.addMessage(text, MessageLevel.INFO);\n  }\n\n  warn(text: string, source?: FrontendMessageSource): void {\n    this.addMessage(text, MessageLevel.WARNING, undefined, source);\n  }\n\n  /**\n   * Adds an error message to the Console panel.\n   *\n   * @param text the message text.\n   * @param show whether to show the Console panel (if it's not already shown).\n   */\n  error(text: string, show = true): void {\n    this.addMessage(text, MessageLevel.ERROR, show);\n  }\n\n  messages(): Message[] {\n    return this.#messages;\n  }\n\n  show(): void {\n    void this.showPromise();\n  }\n\n  showPromise(): Promise<void> {\n    return reveal(this);\n  }\n}\n\nexport const enum Events {\n  MESSAGE_ADDED = 'messageAdded',\n}\n\nexport interface EventTypes {\n  [Events.MESSAGE_ADDED]: Message;\n}\n\nexport const enum MessageLevel {\n  INFO = 'info',\n  WARNING = 'warning',\n  ERROR = 'error',\n}\n\nexport enum FrontendMessageSource {\n  CSS = 'css',\n  // eslint-disable-next-line @typescript-eslint/naming-convention -- Used by web_tests.\n  ConsoleAPI = 'console-api',\n  ISSUE_PANEL = 'issue-panel',\n  SELF_XSS = 'self-xss',\n}\n\nexport class Message {\n  text: string;\n  level: MessageLevel;\n  timestamp: number;\n  show: boolean;\n  source?: FrontendMessageSource;\n  constructor(text: string, level: MessageLevel, timestamp: number, show: boolean, source?: FrontendMessageSource) {\n    this.text = text;\n    this.level = level;\n    this.timestamp = (typeof timestamp === 'number') ? timestamp : Date.now();\n    this.show = show;\n    if (source) {\n      this.source = source;\n    }\n  }\n}\n", "// Copyright 2021 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/*\n * Copyright (C) 2008 Apple Inc. All Rights Reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in the\n *    documentation and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\n * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport type * as Platform from '../platform/platform.js';\n\nimport type {\n  EventDescriptor, EventListener, EventPayloadToRestParameters, EventTarget, EventTargetEvent} from './EventTarget.js';\n\nexport interface ListenerCallbackTuple<Events, T extends keyof Events> {\n  thisObject?: Object;\n  listener: EventListener<Events, T>;\n  disposed?: boolean;\n}\n\nexport class ObjectWrapper<Events> implements EventTarget<Events> {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  listeners?: Map<keyof Events, Set<ListenerCallbackTuple<Events, any>>>;\n\n  addEventListener<T extends keyof Events>(eventType: T, listener: EventListener<Events, T>, thisObject?: Object):\n      EventDescriptor<Events, T> {\n    if (!this.listeners) {\n      this.listeners = new Map();\n    }\n\n    let listenersForEventType = this.listeners.get(eventType);\n    if (!listenersForEventType) {\n      listenersForEventType = new Set();\n      this.listeners.set(eventType, listenersForEventType);\n    }\n    listenersForEventType.add({thisObject, listener});\n    return {eventTarget: this, eventType, thisObject, listener};\n  }\n\n  once<T extends keyof Events>(eventType: T): Promise<Events[T]> {\n    return new Promise(resolve => {\n      const descriptor = this.addEventListener(eventType, event => {\n        this.removeEventListener(eventType, descriptor.listener);\n        resolve(event.data);\n      });\n    });\n  }\n\n  removeEventListener<T extends keyof Events>(eventType: T, listener: EventListener<Events, T>, thisObject?: Object):\n      void {\n    const listeners = this.listeners?.get(eventType);\n    if (!listeners) {\n      return;\n    }\n    for (const listenerTuple of listeners) {\n      if (listenerTuple.listener === listener && listenerTuple.thisObject === thisObject) {\n        listenerTuple.disposed = true;\n        listeners.delete(listenerTuple);\n      }\n    }\n\n    if (!listeners.size) {\n      this.listeners?.delete(eventType);\n    }\n  }\n\n  hasEventListeners(eventType: keyof Events): boolean {\n    return Boolean(this.listeners?.has(eventType));\n  }\n\n  dispatchEventToListeners<T extends keyof Events>(\n      eventType: Platform.TypeScriptUtilities.NoUnion<T>,\n      ...[eventData]: EventPayloadToRestParameters<Events, T>): void {\n    const listeners = this.listeners?.get(eventType);\n    if (!listeners) {\n      return;\n    }\n    // `eventData` is typed as `Events[T] | undefined`:\n    //   - `undefined` when `Events[T]` is void.\n    //   - `Events[T]` otherwise.\n    // We cast it to `Events[T]` which is the correct type in all instances, as\n    // `void` will be cast and used as `undefined`.\n    const event = {data: eventData as Events[T], source: this};\n    // Work on a snapshot of the current listeners, callbacks might remove/add\n    // new listeners.\n    for (const listener of [...listeners]) {\n      if (!listener.disposed) {\n        listener.listener.call(listener.thisObject, event);\n      }\n    }\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nexport function eventMixin<Events, Base extends Platform.Constructor.Constructor<object>>(base: Base) {\n  console.assert(base !== HTMLElement);\n  return class EventHandling extends base implements EventTarget<Events> {\n    #events = new ObjectWrapper<Events>();\n\n    addEventListener<T extends keyof Events>(\n        eventType: T, listener: (arg0: EventTargetEvent<Events[T]>) => void,\n        thisObject?: Object): EventDescriptor<Events, T> {\n      return this.#events.addEventListener(eventType, listener, thisObject);\n    }\n\n    once<T extends keyof Events>(eventType: T): Promise<Events[T]> {\n      return this.#events.once(eventType);\n    }\n\n    removeEventListener<T extends keyof Events>(\n        eventType: T, listener: (arg0: EventTargetEvent<Events[T]>) => void, thisObject?: Object): void {\n      this.#events.removeEventListener(eventType, listener, thisObject);\n    }\n\n    hasEventListeners(eventType: keyof Events): boolean {\n      return this.#events.hasEventListeners(eventType);\n    }\n\n    dispatchEventToListeners<T extends keyof Events>(\n        eventType: Platform.TypeScriptUtilities.NoUnion<T>,\n        ...eventData: EventPayloadToRestParameters<Events, T>): void {\n      this.#events.dispatchEventToListeners(eventType, ...eventData);\n    }\n  };\n}\n", "// Copyright 2014 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../i18n/i18n.js';\nimport type * as Platform from '../platform/platform.js';\n\nconst UIStrings = {\n  /**\n   * @description The UI destination when right clicking an item that can be revealed\n   */\n  elementsPanel: 'Elements panel',\n  /**\n   * @description The UI destination when right clicking an item that can be revealed\n   */\n  stylesSidebar: 'styles sidebar',\n  /**\n   * @description The UI destination when right clicking an item that can be revealed\n   */\n  changesDrawer: 'Changes drawer',\n  /**\n   * @description The UI destination when right clicking an item that can be revealed\n   */\n  issuesView: 'Issues view',\n  /**\n   * @description The UI destination when right clicking an item that can be revealed\n   */\n  networkPanel: 'Network panel',\n  /**\n   * @description The UI destination when right clicking an item that can be revealed\n   */\n  applicationPanel: 'Application panel',\n  /**\n   * @description The UI destination when right clicking an item that can be revealed\n   */\n  securityPanel: 'Security panel',\n  /**\n   * @description The UI destination when right clicking an item that can be revealed\n   */\n  sourcesPanel: 'Sources panel',\n  /**\n   * @description The UI destination when right clicking an item that can be revealed\n   */\n  timelinePanel: 'Performance panel',\n  /**\n   * @description The UI destination when right clicking an item that can be revealed\n   */\n  memoryInspectorPanel: 'Memory inspector panel',\n  /**\n   * @description The UI destination when revealing loaded resources through the Developer Resources Panel\n   */\n  developerResourcesPanel: 'Developer Resources panel',\n  /**\n   * @description The UI destination when revealing loaded resources through the Animations panel\n   */\n  animationsPanel: 'Animations panel',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('core/common/Revealer.ts', UIStrings);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\n\n/**\n * Interface for global revealers, which are entities responsible for\n * dealing with revealing certain types of objects. For example, the\n * Sources panel will register a revealer for `UISourceCode` objects,\n * which will ensure that its visible in an editor tab.\n */\nexport interface Revealer<T> {\n  reveal(revealable: T, omitFocus?: boolean): Promise<void>;\n}\n\nlet revealerRegistry: RevealerRegistry|undefined;\n\n/**\n * Registration for revealers, which deals with keeping a list of all possible\n * revealers, lazily instantiating them as necessary and invoking their `reveal`\n * methods depending on the _context types_ they were registered for.\n *\n * @see Revealer\n */\nexport class RevealerRegistry {\n  private readonly registeredRevealers: Array<RevealerRegistration<unknown>> = [];\n\n  /**\n   * Yields the singleton instance, creating it on-demand when necessary.\n   *\n   * @returns the singleton instance.\n   */\n  static instance(): RevealerRegistry {\n    if (revealerRegistry === undefined) {\n      revealerRegistry = new RevealerRegistry();\n    }\n    return revealerRegistry;\n  }\n\n  /**\n   * Clears the singleton instance (if any).\n   */\n  static removeInstance(): void {\n    revealerRegistry = undefined;\n  }\n\n  /**\n   * Register a new `Revealer` as described by the `registration`.\n   *\n   * @param registration the description.\n   */\n  register(registration: RevealerRegistration<unknown>): void {\n    this.registeredRevealers.push(registration);\n  }\n\n  /**\n   * Reveals the `revealable`.\n   *\n   * @param revealable the object to reveal.\n   * @param omitFocus whether to omit focusing on the presentation of `revealable` afterwards.\n   */\n  async reveal(revealable: unknown, omitFocus: boolean): Promise<void> {\n    const revealers = await Promise.all(\n        this.getApplicableRegisteredRevealers(revealable).map(registration => registration.loadRevealer()));\n    if (revealers.length < 1) {\n      throw new Error(`No revealers found for ${revealable}`);\n    }\n    if (revealers.length > 1) {\n      throw new Error(`Conflicting reveals found for ${revealable}`);\n    }\n    return await revealers[0].reveal(revealable, omitFocus);\n  }\n\n  getApplicableRegisteredRevealers(revealable: unknown): Array<RevealerRegistration<unknown>> {\n    return this.registeredRevealers.filter(registration => {\n      for (const contextType of registration.contextTypes()) {\n        if (revealable instanceof contextType) {\n          return true;\n        }\n      }\n      return false;\n    });\n  }\n}\n\nexport function revealDestination(revealable: unknown): string|null {\n  const revealers = RevealerRegistry.instance().getApplicableRegisteredRevealers(revealable);\n  for (const {destination} of revealers) {\n    if (destination) {\n      return destination();\n    }\n  }\n  return null;\n}\n\n/**\n * Register a new `Revealer` as described by the `registration` on the singleton\n * {@link RevealerRegistry} instance.\n *\n * @param registration the description.\n */\nexport function registerRevealer<T>(registration: RevealerRegistration<T>): void {\n  RevealerRegistry.instance().register(registration);\n}\n\n/**\n * Reveals the `revealable` via the singleton {@link RevealerRegistry} instance.\n *\n * @param revealable the object to reveal.\n * @param omitFocus whether to omit focusing on the presentation of `revealable` afterwards.\n */\nexport async function reveal(revealable: unknown, omitFocus = false): Promise<void> {\n  await RevealerRegistry.instance().reveal(revealable, omitFocus);\n}\n\nexport interface RevealerRegistration<T> {\n  contextTypes: () => Array<abstract new(...any: any[]) => T>;\n  loadRevealer: () => Promise<Revealer<T>>;\n  destination?: RevealerDestination;\n}\n\nexport const RevealerDestination = {\n  DEVELOPER_RESOURCES_PANEL: i18nLazyString(UIStrings.developerResourcesPanel),\n  ELEMENTS_PANEL: i18nLazyString(UIStrings.elementsPanel),\n  STYLES_SIDEBAR: i18nLazyString(UIStrings.stylesSidebar),\n  CHANGES_DRAWER: i18nLazyString(UIStrings.changesDrawer),\n  ISSUES_VIEW: i18nLazyString(UIStrings.issuesView),\n  NETWORK_PANEL: i18nLazyString(UIStrings.networkPanel),\n  TIMELINE_PANEL: i18nLazyString(UIStrings.timelinePanel),\n  APPLICATION_PANEL: i18nLazyString(UIStrings.applicationPanel),\n  SOURCES_PANEL: i18nLazyString(UIStrings.sourcesPanel),\n  SECURITY_PANEL: i18nLazyString(UIStrings.securityPanel),\n  MEMORY_INSPECTOR_PANEL: i18nLazyString(UIStrings.memoryInspectorPanel),\n  ANIMATIONS_PANEL: i18nLazyString(UIStrings.animationsPanel),\n};\n\nexport type RevealerDestination = () => Platform.UIString.LocalizedString;\n", "// Copyright 2020 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/**\n * Debounce utility function, ensures that the function passed in is only called once the function stops being called and the delay has expired.\n */\nexport const debounce = function(func: (...args: any[]) => void, delay: number): (...args: any[]) => void {\n  let timer = 0;\n  const debounced = (...args: any[]): void => {\n    clearTimeout(timer);\n    timer = window.setTimeout(() => func(...args), delay);\n  };\n  return debounced;\n};\n", "// Copyright 2021 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Platform from '../platform/platform.js';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport interface EventDescriptor<Events = any, T extends keyof Events = any> {\n  eventTarget: EventTarget<Events>;\n  eventType: T;\n  thisObject?: Object;\n  listener: EventListener<Events, T>;\n}\n\nexport function removeEventListeners(eventList: EventDescriptor[]): void {\n  for (const eventInfo of eventList) {\n    eventInfo.eventTarget.removeEventListener(eventInfo.eventType, eventInfo.listener, eventInfo.thisObject);\n  }\n  // Do not hold references on unused event descriptors.\n  eventList.splice(0);\n}\n\n// This type can be used as the type parameter for `EventTarget`/`ObjectWrapper`\n// when the set of events is not known at compile time.\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type GenericEvents = Record<string, any>;\n\nexport type EventPayloadToRestParameters<Events, T extends keyof Events> = Events[T] extends void ? [] : [Events[T]];\nexport type EventListener<Events, T extends keyof Events> = (arg0: EventTargetEvent<Events[T], Events>) => void;\n\nexport interface EventTarget<Events> {\n  addEventListener<T extends keyof Events>(eventType: T, listener: EventListener<Events, T>, thisObject?: Object):\n      EventDescriptor<Events, T>;\n  once<T extends keyof Events>(eventType: T): Promise<Events[T]>;\n  removeEventListener<T extends keyof Events>(eventType: T, listener: EventListener<Events, T>, thisObject?: Object):\n      void;\n  hasEventListeners(eventType: keyof Events): boolean;\n  dispatchEventToListeners<T extends keyof Events>(\n      eventType: Platform.TypeScriptUtilities.NoUnion<T>,\n      ...[eventData]: EventPayloadToRestParameters<Events, T>): void;\n}\n\nexport function fireEvent(name: string, detail: unknown = {}, target: HTMLElement|Window = window): void {\n  const evt = new CustomEvent(name, {bubbles: true, cancelable: true, detail});\n  target.dispatchEvent(evt);\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport interface EventTargetEvent<T, Events = any> {\n  data: T;\n  source?: EventTarget<Events>;\n}\n", "// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/**\n * Quickly determine if gzipped, by seeing if the first 3 bytes of the file header match the gzip signature\n */\nexport function isGzip(ab: ArrayBuffer): boolean {\n  const buf = new Uint8Array(ab);\n  if (!buf || buf.length < 3) {\n    return false;\n  }\n  // https://www.rfc-editor.org/rfc/rfc1952#page-6\n  return buf[0] === 0x1F && buf[1] === 0x8B && buf[2] === 0x08;\n}\n\n/** Decode a gzipped _or_ plain text ArrayBuffer to a decoded string */\nexport async function arrayBufferToString(ab: ArrayBuffer): Promise<string> {\n  if (isGzip(ab)) {\n    return await decompress(ab);\n  }\n  const str = new TextDecoder('utf-8').decode(ab);\n  return str;\n}\n\nexport async function fileToString(file: File): Promise<string> {\n  let stream = file.stream();\n  if (file.type.endsWith('gzip')) {\n    stream = decompressStream(stream);\n  }\n  const arrayBuffer = await new Response(stream).arrayBuffer();\n  const str = new TextDecoder('utf-8').decode(arrayBuffer);\n  return str;\n}\n\n/**\n * Decompress a gzipped ArrayBuffer to a string.\n * Consider using `arrayBufferToString` instead, which can handle both gzipped and plain text buffers.\n */\nexport async function decompress(gzippedBuffer: ArrayBuffer): Promise<string> {\n  const buffer = await gzipCodec(gzippedBuffer, new DecompressionStream('gzip'));\n  const str = new TextDecoder('utf-8').decode(buffer);\n  return str;\n}\nexport async function compress(str: string): Promise<ArrayBuffer> {\n  const encoded = new TextEncoder().encode(str);\n  const buffer = await gzipCodec(encoded, new CompressionStream('gzip'));\n  return buffer;\n}\n\n/** Private coder/decoder **/\nasync function gzipCodec(\n    buffer: Uint8Array<ArrayBufferLike>|ArrayBuffer,\n    codecStream: CompressionStream|DecompressionStream): Promise<ArrayBuffer> {\n  const readable = new ReadableStream({\n    start(controller) {\n      controller.enqueue(buffer);\n      controller.close();\n    }\n  });\n  const codecReadable = readable.pipeThrough(codecStream);\n  // A response is a convenient way to get an ArrayBuffer from a ReadableStream.\n  return await new Response(codecReadable).arrayBuffer();\n}\n\nexport function decompressStream(stream: ReadableStream): ReadableStream {\n  // https://github.com/wicg/compression/blob/main/explainer.md#deflate-compress-an-arraybuffer\n  const ds = new DecompressionStream('gzip');\n  return stream.pipeThrough(ds);\n}\nexport function compressStream(stream: ReadableStream): ReadableStream {\n  const cs = new CompressionStream('gzip');\n  return stream.pipeThrough(cs);\n}\n", "// Copyright 2019 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nexport interface DOMPinnedWebIDLProp {\n  global?: boolean;\n  specs?: number;\n  rules?: DOMPinnedWebIDLRule[];\n}\n\nexport interface DOMPinnedWebIDLType {\n  inheritance?: string;\n  includes?: string[];\n  props?: Record<string, DOMPinnedWebIDLProp>;\n  rules?: DOMPinnedWebIDLRule[];\n}\n\nexport interface DOMPinnedWebIDLRule {\n  when: string;\n  is: string;\n}\n\nexport interface JavaScriptMetaData {\n  signaturesForNativeFunction(name: string): string[][]|null;\n\n  signaturesForInstanceMethod(name: string, receiverClassName: string): string[][]|null;\n\n  signaturesForStaticMethod(name: string, receiverConstructorName: string): string[][]|null;\n}\n", "// Copyright 2020 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nconst UNINITIALIZED = Symbol('uninitialized');\nconst ERROR_STATE = Symbol('error');\n\n/**\n * Very basic memoizer. Will only invoke its callback the first time, returning the cached value all subsequent calls.\n */\nexport function lazy<T>(producer: () => T): () => symbol | T {\n  let value: T|typeof ERROR_STATE|typeof UNINITIALIZED = UNINITIALIZED;\n  let error: Error = new Error('Initial');\n\n  return (): symbol|T => {\n    if (value === ERROR_STATE) {\n      throw error;\n    } else if (value !== UNINITIALIZED) {\n      return value;\n    }\n\n    try {\n      value = producer();\n      return value;\n    } catch (err) {\n      error = err instanceof Error ? err : new Error(err);\n      value = ERROR_STATE;\n      throw error;\n    }\n  };\n}\n", "// Copyright 2019 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Platform from '../platform/platform.js';\n\nexport abstract class Linkifier {\n  abstract linkify(object: Object, options?: Options): Node;\n\n  static async linkify(object: Object|null, options?: Options): Promise<Node> {\n    if (!object) {\n      throw new Error('Can\\'t linkify ' + object);\n    }\n    const linkifierRegistration = getApplicableRegisteredlinkifiers(object)[0];\n    if (!linkifierRegistration) {\n      throw new Error('No linkifiers registered for object ' + object);\n    }\n    const linkifier = await linkifierRegistration.loadLinkifier();\n    return linkifier.linkify(object, options);\n  }\n}\nexport interface Options {\n  tooltip?: string;\n  preventKeyboardFocus?: boolean;\n  textContent?: string;\n  // Dynamic links include hyperlinks and anchorlinks -- links that navigate the content.\n  isDynamicLink?: boolean;\n}\n\nconst registeredLinkifiers: LinkifierRegistration[] = [];\n\nexport function registerLinkifier(registration: LinkifierRegistration): void {\n  registeredLinkifiers.push(registration);\n}\n\nexport function getApplicableRegisteredlinkifiers(object: Object): LinkifierRegistration[] {\n  return registeredLinkifiers.filter(isLinkifierApplicableToContextTypes);\n\n  function isLinkifierApplicableToContextTypes(linkifierRegistration: LinkifierRegistration): boolean {\n    if (!linkifierRegistration.contextTypes) {\n      return true;\n    }\n    for (const contextType of linkifierRegistration.contextTypes()) {\n      if (object instanceof contextType) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\nexport interface LinkifierRegistration {\n  loadLinkifier: () => Promise<Linkifier>;\n  contextTypes?: () => Array<Platform.Constructor.Constructor<unknown>>;\n}\n", "// Copyright 2024 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/**\n * Polyfill of https://github.com/tc39/proposal-upsert with a subclass.\n *\n * TODO: Once the proposal is merged, just replace `MapWithDefault` with `Map` and remove it.\n **/\nexport class MapWithDefault<K, V> extends Map<K, V> {\n  getOrInsert(key: K, defaultValue: V): V {\n    if (!this.has(key)) {\n      this.set(key, defaultValue);\n    }\n\n    return this.get(key) as V;\n  }\n\n  getOrInsertComputed(key: K, callbackFunction: (key: K) => V): V {\n    if (!this.has(key)) {\n      this.set(key, callbackFunction(key));\n    }\n\n    return this.get(key) as V;\n  }\n}\n", "// Copyright 2022 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\ntype ReleaseFunction = () => void;\n\n/**\n * Use Mutex class to coordinate local concurrent operations.\n * Once `acquire` promise resolves, you hold the lock and must\n * call `release` function returned by `acquire` to release the\n * lock. Failing to `release` the lock may lead to deadlocks.\n */\nexport class Mutex {\n  #locked = false;\n  #acquirers: Array<() => void> = [];\n\n  // This is FIFO.\n  acquire(): Promise<ReleaseFunction> {\n    const state = {resolved: false};\n    if (this.#locked) {\n      return new Promise(resolve => {\n        this.#acquirers.push(() => resolve(this.#release.bind(this, state)));\n      });\n    }\n    this.#locked = true;\n    return Promise.resolve(this.#release.bind(this, state));\n  }\n\n  #release(state: {resolved: boolean}): void {\n    if (state.resolved) {\n      throw new Error('Cannot release more than once.');\n    }\n    state.resolved = true;\n\n    const resolve = this.#acquirers.shift();\n    if (!resolve) {\n      this.#locked = false;\n      return;\n    }\n    resolve();\n  }\n\n  async run<T>(action: () => Promise<T>): Promise<T> {\n    const release = await this.acquire();\n    try {\n      // Note we need to await here because we want the await to release AFTER\n      // that await happens. Returning action() will trigger the release\n      // immediately which is counter to what we want.\n      const result = await action();\n      return result;\n    } finally {\n      release();\n    }\n  }\n}\n", "// Copyright 2012 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Platform from '../platform/platform.js';\n\n/**\n * http://tools.ietf.org/html/rfc3986#section-5.2.4\n */\nexport function normalizePath(path: string): string {\n  if (path.indexOf('..') === -1 && path.indexOf('.') === -1) {\n    return path;\n  }\n\n  // Remove leading slash (will be added back below) so we\n  // can handle all (including empty) segments consistently.\n  const segments = (path[0] === '/' ? path.substring(1) : path).split('/');\n  const normalizedSegments = [];\n  for (const segment of segments) {\n    if (segment === '.') {\n      continue;\n    } else if (segment === '..') {\n      normalizedSegments.pop();\n    } else {\n      normalizedSegments.push(segment);\n    }\n  }\n  let normalizedPath = normalizedSegments.join('/');\n  if (path[0] === '/' && normalizedPath) {\n    normalizedPath = '/' + normalizedPath;\n  }\n  if (normalizedPath[normalizedPath.length - 1] !== '/' &&\n      ((path[path.length - 1] === '/') || (segments[segments.length - 1] === '.') ||\n       (segments[segments.length - 1] === '..'))) {\n    normalizedPath = normalizedPath + '/';\n  }\n\n  return normalizedPath;\n}\n\nexport function schemeIs(url: Platform.DevToolsPath.UrlString, scheme: string): boolean {\n  try {\n    return (new URL(url)).protocol === scheme;\n  } catch {\n    return false;\n  }\n}\n\n/**\n * File paths in DevTools that are represented either as unencoded absolute or relative paths, or encoded paths, or URLs.\n * @example\n * RawPathString: “/Hello World/file.js”\n * EncodedPathString: “/Hello%20World/file.js”\n * UrlString: “file:///Hello%20World/file/js”\n */\ntype BrandedPathString =\n    Platform.DevToolsPath.UrlString|Platform.DevToolsPath.RawPathString|Platform.DevToolsPath.EncodedPathString;\n\nexport class ParsedURL {\n  isValid = false;\n  url: string;\n  scheme = '';\n  user = '';\n  host = '';\n  port = '';\n  path = '';\n  queryParams = '';\n  fragment = '';\n  folderPathComponents = '';\n  lastPathComponent = '';\n  readonly blobInnerScheme: string|undefined;\n  #displayName?: string;\n  #dataURLDisplayName?: string;\n\n  constructor(url: string) {\n    this.url = url;\n\n    const isBlobUrl = this.url.startsWith('blob:');\n    const urlToMatch = isBlobUrl ? url.substring(5) : url;\n    const match = urlToMatch.match(ParsedURL.urlRegex());\n    if (match) {\n      this.isValid = true;\n      if (isBlobUrl) {\n        this.blobInnerScheme = match[2].toLowerCase();\n        this.scheme = 'blob';\n      } else {\n        this.scheme = match[2].toLowerCase();\n      }\n      this.user = match[3] ?? '';\n      this.host = match[4] ?? '';\n      this.port = match[5] ?? '';\n      this.path = match[6] ?? '/';\n      this.queryParams = match[7] ?? '';\n      this.fragment = match[8] ?? '';\n    } else {\n      if (this.url.startsWith('data:')) {\n        this.scheme = 'data';\n        return;\n      }\n      if (this.url.startsWith('blob:')) {\n        this.scheme = 'blob';\n        return;\n      }\n      if (this.url === 'about:blank') {\n        this.scheme = 'about';\n        return;\n      }\n      this.path = this.url;\n    }\n\n    const lastSlashExceptTrailingIndex = this.path.lastIndexOf('/', this.path.length - 2);\n    if (lastSlashExceptTrailingIndex !== -1) {\n      this.lastPathComponent = this.path.substring(lastSlashExceptTrailingIndex + 1);\n    } else {\n      this.lastPathComponent = this.path;\n    }\n    const lastSlashIndex = this.path.lastIndexOf('/');\n    if (lastSlashIndex !== -1) {\n      this.folderPathComponents = this.path.substring(0, lastSlashIndex);\n    }\n  }\n\n  static fromString(string: string): ParsedURL|null {\n    const parsedURL = new ParsedURL(string.toString());\n    if (parsedURL.isValid) {\n      return parsedURL;\n    }\n    return null;\n  }\n\n  static preEncodeSpecialCharactersInPath(path: string): string {\n    // Based on net::FilePathToFileURL. Ideally we would handle\n    // '\\\\' as well on non-Windows file systems.\n    for (const specialChar of ['%', ';', '#', '?', ' ']) {\n      (path) = path.replaceAll(specialChar, encodeURIComponent(specialChar));\n    }\n    return path;\n  }\n\n  static rawPathToEncodedPathString(path: Platform.DevToolsPath.RawPathString):\n      Platform.DevToolsPath.EncodedPathString {\n    const partiallyEncoded = ParsedURL.preEncodeSpecialCharactersInPath(path);\n    if (path.startsWith('/')) {\n      return new URL(partiallyEncoded, 'file:///').pathname as Platform.DevToolsPath.EncodedPathString;\n    }\n    // URL prepends a '/'\n    return new URL('/' + partiallyEncoded, 'file:///').pathname.substr(1) as Platform.DevToolsPath.EncodedPathString;\n  }\n\n  /**\n   * @param name Must not be encoded\n   */\n  static encodedFromParentPathAndName(parentPath: Platform.DevToolsPath.EncodedPathString, name: string):\n      Platform.DevToolsPath.EncodedPathString {\n    return ParsedURL.concatenate(parentPath, '/', ParsedURL.preEncodeSpecialCharactersInPath(name));\n  }\n\n  /**\n   * @param name Must not be encoded\n   */\n  static urlFromParentUrlAndName(parentUrl: Platform.DevToolsPath.UrlString, name: string):\n      Platform.DevToolsPath.UrlString {\n    return ParsedURL.concatenate(parentUrl, '/', ParsedURL.preEncodeSpecialCharactersInPath(name));\n  }\n\n  static encodedPathToRawPathString(encPath: Platform.DevToolsPath.EncodedPathString):\n      Platform.DevToolsPath.RawPathString {\n    return decodeURIComponent(encPath) as Platform.DevToolsPath.RawPathString;\n  }\n\n  static rawPathToUrlString(fileSystemPath: Platform.DevToolsPath.RawPathString): Platform.DevToolsPath.UrlString {\n    let preEncodedPath: string = ParsedURL.preEncodeSpecialCharactersInPath(\n        fileSystemPath.replace(/\\\\/g, '/') as Platform.DevToolsPath.RawPathString);\n    preEncodedPath = preEncodedPath.replace(/\\\\/g, '/');\n    if (!preEncodedPath.startsWith('file://')) {\n      if (preEncodedPath.startsWith('/')) {\n        preEncodedPath = 'file://' + preEncodedPath;\n      } else {\n        preEncodedPath = 'file:///' + preEncodedPath;\n      }\n    }\n    return new URL(preEncodedPath).toString() as Platform.DevToolsPath.UrlString;\n  }\n\n  static relativePathToUrlString(\n      relativePath: Platform.DevToolsPath.RawPathString,\n      baseURL: Platform.DevToolsPath.UrlString): Platform.DevToolsPath.UrlString {\n    const preEncodedPath: string = ParsedURL.preEncodeSpecialCharactersInPath(\n        relativePath.replace(/\\\\/g, '/') as Platform.DevToolsPath.RawPathString);\n    return new URL(preEncodedPath, baseURL).toString() as Platform.DevToolsPath.UrlString;\n  }\n\n  static urlToRawPathString(fileURL: Platform.DevToolsPath.UrlString, isWindows?: boolean):\n      Platform.DevToolsPath.RawPathString {\n    console.assert(fileURL.startsWith('file://'), 'This must be a file URL.');\n    const decodedFileURL = decodeURIComponent(fileURL);\n    if (isWindows) {\n      return decodedFileURL.substr('file:///'.length).replace(/\\//g, '\\\\') as Platform.DevToolsPath.RawPathString;\n    }\n    return decodedFileURL.substr('file://'.length) as Platform.DevToolsPath.RawPathString;\n  }\n\n  static sliceUrlToEncodedPathString(url: Platform.DevToolsPath.UrlString, start: number):\n      Platform.DevToolsPath.EncodedPathString {\n    return url.substring(start) as Platform.DevToolsPath.EncodedPathString;\n  }\n\n  static substr<DevToolsPathType extends BrandedPathString>(\n      devToolsPath: DevToolsPathType, from: number, length?: number): DevToolsPathType {\n    return devToolsPath.substr(from, length) as DevToolsPathType;\n  }\n\n  static substring<DevToolsPathType extends BrandedPathString>(\n      devToolsPath: DevToolsPathType, start: number, end?: number): DevToolsPathType {\n    return devToolsPath.substring(start, end) as DevToolsPathType;\n  }\n\n  static prepend<DevToolsPathType extends BrandedPathString>(prefix: string, devToolsPath: DevToolsPathType):\n      DevToolsPathType {\n    return prefix + devToolsPath as DevToolsPathType;\n  }\n\n  static concatenate<DevToolsPathType extends BrandedPathString>(\n      devToolsPath: DevToolsPathType, ...appendage: string[]): DevToolsPathType {\n    return devToolsPath.concat(...appendage) as DevToolsPathType;\n  }\n\n  static trim<DevToolsPathType extends BrandedPathString>(devToolsPath: DevToolsPathType): DevToolsPathType {\n    return devToolsPath.trim() as DevToolsPathType;\n  }\n\n  static slice<DevToolsPathType extends BrandedPathString>(\n      devToolsPath: DevToolsPathType, start?: number, end?: number): DevToolsPathType {\n    return devToolsPath.slice(start, end) as DevToolsPathType;\n  }\n\n  static join<DevToolsPathType extends BrandedPathString>(devToolsPaths: DevToolsPathType[], separator?: string):\n      DevToolsPathType {\n    return devToolsPaths.join(separator) as DevToolsPathType;\n  }\n\n  static split<DevToolsPathType extends BrandedPathString>(\n      devToolsPath: DevToolsPathType, separator: string|RegExp, limit?: number): DevToolsPathType[] {\n    return devToolsPath.split(separator, limit) as DevToolsPathType[];\n  }\n\n  static toLowerCase<DevToolsPathType extends BrandedPathString>(devToolsPath: DevToolsPathType): DevToolsPathType {\n    return devToolsPath.toLowerCase() as DevToolsPathType;\n  }\n\n  static isValidUrlString(str: string): str is Platform.DevToolsPath.UrlString {\n    return new ParsedURL(str).isValid;\n  }\n\n  static urlWithoutHash(url: string): string {\n    const hashIndex = url.indexOf('#');\n    if (hashIndex !== -1) {\n      return url.substr(0, hashIndex);\n    }\n    return url;\n  }\n\n  static urlRegex(): RegExp {\n    if (ParsedURL.urlRegexInstance) {\n      return ParsedURL.urlRegexInstance;\n    }\n    // RegExp groups:\n    // 1 - scheme, hostname, ?port\n    // 2 - scheme (using the RFC3986 grammar)\n    // 3 - ?user:password\n    // 4 - hostname\n    // 5 - ?port\n    // 6 - ?path\n    // 7 - ?query\n    // 8 - ?fragment\n    const schemeRegex = /([A-Za-z][A-Za-z0-9+.-]*):\\/\\//;\n    const userRegex = /(?:([A-Za-z0-9\\-._~%!$&'()*+,;=:]*)@)?/;\n    const hostRegex = /((?:\\[::\\d?\\])|(?:[^\\s\\/:]*))/;\n    const portRegex = /(?::([\\d]+))?/;\n    const pathRegex = /(\\/[^#?]*)?/;\n    const queryRegex = /(?:\\?([^#]*))?/;\n    const fragmentRegex = /(?:#(.*))?/;\n\n    ParsedURL.urlRegexInstance = new RegExp(\n        '^(' + schemeRegex.source + userRegex.source + hostRegex.source + portRegex.source + ')' + pathRegex.source +\n        queryRegex.source + fragmentRegex.source + '$');\n    return ParsedURL.urlRegexInstance;\n  }\n\n  static extractPath(url: Platform.DevToolsPath.UrlString): Platform.DevToolsPath.EncodedPathString {\n    const parsedURL = this.fromString(url);\n    return (parsedURL ? parsedURL.path : '') as Platform.DevToolsPath.EncodedPathString;\n  }\n\n  static extractOrigin(url: Platform.DevToolsPath.UrlString): Platform.DevToolsPath.UrlString {\n    const parsedURL = this.fromString(url);\n    return parsedURL ? parsedURL.securityOrigin() : Platform.DevToolsPath.EmptyUrlString;\n  }\n\n  static extractExtension(url: string): string {\n    url = ParsedURL.urlWithoutHash(url);\n    const indexOfQuestionMark = url.indexOf('?');\n    if (indexOfQuestionMark !== -1) {\n      url = url.substr(0, indexOfQuestionMark);\n    }\n    const lastIndexOfSlash = url.lastIndexOf('/');\n    if (lastIndexOfSlash !== -1) {\n      url = url.substr(lastIndexOfSlash + 1);\n    }\n    const lastIndexOfDot = url.lastIndexOf('.');\n    if (lastIndexOfDot !== -1) {\n      url = url.substr(lastIndexOfDot + 1);\n      const lastIndexOfPercent = url.indexOf('%');\n      if (lastIndexOfPercent !== -1) {\n        return url.substr(0, lastIndexOfPercent);\n      }\n      return url;\n    }\n    return '';\n  }\n\n  static extractName(url: string): string {\n    let index = url.lastIndexOf('/');\n    const pathAndQuery = index !== -1 ? url.substr(index + 1) : url;\n    index = pathAndQuery.indexOf('?');\n    return index < 0 ? pathAndQuery : pathAndQuery.substr(0, index);\n  }\n\n  static completeURL(baseURL: Platform.DevToolsPath.UrlString, href: string): Platform.DevToolsPath.UrlString|null {\n    // Return special URLs as-is.\n    if (href.startsWith('data:') || href.startsWith('blob:') || href.startsWith('javascript:') ||\n        href.startsWith('mailto:')) {\n      return href as Platform.DevToolsPath.UrlString;\n    }\n\n    // Return absolute URLs with normalized path and other components as-is.\n    const trimmedHref = href.trim();\n    const parsedHref = this.fromString(trimmedHref);\n    if (parsedHref?.scheme) {\n      const securityOrigin = parsedHref.securityOrigin();\n      const pathText = normalizePath(parsedHref.path);\n      const queryText = parsedHref.queryParams && `?${parsedHref.queryParams}`;\n      const fragmentText = parsedHref.fragment && `#${parsedHref.fragment}`;\n      return securityOrigin + pathText + queryText + fragmentText as Platform.DevToolsPath.UrlString;\n    }\n\n    const parsedURL = this.fromString(baseURL);\n    if (!parsedURL) {\n      return null;\n    }\n\n    if (parsedURL.isDataURL()) {\n      return href as Platform.DevToolsPath.UrlString;\n    }\n\n    if (href.length > 1 && href.charAt(0) === '/' && href.charAt(1) === '/') {\n      // href starts with \"//\" which is a full URL with the protocol dropped (use the baseURL protocol).\n      return parsedURL.scheme + ':' + href as Platform.DevToolsPath.UrlString;\n    }\n\n    const securityOrigin = parsedURL.securityOrigin();\n    const pathText = parsedURL.path;\n    const queryText = parsedURL.queryParams ? '?' + parsedURL.queryParams : '';\n\n    // Empty href resolves to a URL without fragment.\n    if (!href.length) {\n      return securityOrigin + pathText + queryText as Platform.DevToolsPath.UrlString;\n    }\n\n    if (href.charAt(0) === '#') {\n      return securityOrigin + pathText + queryText + href as Platform.DevToolsPath.UrlString;\n    }\n\n    if (href.charAt(0) === '?') {\n      return securityOrigin + pathText + href as Platform.DevToolsPath.UrlString;\n    }\n\n    const hrefMatches = href.match(/^[^#?]*/);\n    if (!hrefMatches || !href.length) {\n      throw new Error('Invalid href');\n    }\n    let hrefPath: string = hrefMatches[0];\n    const hrefSuffix = href.substring(hrefPath.length);\n    if (hrefPath.charAt(0) !== '/') {\n      hrefPath = parsedURL.folderPathComponents + '/' + hrefPath;\n    }\n    return securityOrigin + normalizePath(hrefPath) + hrefSuffix as Platform.DevToolsPath.UrlString;\n  }\n\n  static splitLineAndColumn(string: string): {\n    url: Platform.DevToolsPath.UrlString,\n    lineNumber: (number|undefined),\n    columnNumber: (number|undefined),\n  } {\n    // Only look for line and column numbers in the path to avoid matching port numbers.\n    const beforePathMatch = string.match(ParsedURL.urlRegex());\n    let beforePath = '';\n    let pathAndAfter: string = string;\n    if (beforePathMatch) {\n      beforePath = beforePathMatch[1];\n      pathAndAfter = string.substring(beforePathMatch[1].length);\n    }\n\n    const lineColumnRegEx = /(?::(\\d+))?(?::(\\d+))?$/;\n    const lineColumnMatch = lineColumnRegEx.exec(pathAndAfter);\n    let lineNumber;\n    let columnNumber;\n    console.assert(Boolean(lineColumnMatch));\n    if (!lineColumnMatch) {\n      return {url: string as Platform.DevToolsPath.UrlString, lineNumber: 0, columnNumber: 0};\n    }\n\n    if (typeof (lineColumnMatch[1]) === 'string') {\n      lineNumber = parseInt(lineColumnMatch[1], 10);\n      // Immediately convert line and column to 0-based numbers.\n      lineNumber = isNaN(lineNumber) ? undefined : lineNumber - 1;\n    }\n    if (typeof (lineColumnMatch[2]) === 'string') {\n      columnNumber = parseInt(lineColumnMatch[2], 10);\n      columnNumber = isNaN(columnNumber) ? undefined : columnNumber - 1;\n    }\n\n    let url: Platform.DevToolsPath.UrlString =\n        beforePath + pathAndAfter.substring(0, pathAndAfter.length - lineColumnMatch[0].length) as\n        Platform.DevToolsPath.UrlString;\n    if (lineColumnMatch[1] === undefined && lineColumnMatch[2] === undefined) {\n      const wasmCodeOffsetRegex = /wasm-function\\[\\d+\\]:0x([a-z0-9]+)$/g;\n      const wasmCodeOffsetMatch = wasmCodeOffsetRegex.exec(pathAndAfter);\n      if (wasmCodeOffsetMatch && typeof (wasmCodeOffsetMatch[1]) === 'string') {\n        url = ParsedURL.removeWasmFunctionInfoFromURL(url);\n        columnNumber = parseInt(wasmCodeOffsetMatch[1], 16);\n        columnNumber = isNaN(columnNumber) ? undefined : columnNumber;\n      }\n    }\n\n    return {url, lineNumber, columnNumber};\n  }\n\n  static removeWasmFunctionInfoFromURL(url: string): Platform.DevToolsPath.UrlString {\n    const wasmFunctionRegEx = /:wasm-function\\[\\d+\\]/;\n    const wasmFunctionIndex = url.search(wasmFunctionRegEx);\n    if (wasmFunctionIndex === -1) {\n      return url as Platform.DevToolsPath.UrlString;\n    }\n    return ParsedURL.substring(url as Platform.DevToolsPath.UrlString, 0, wasmFunctionIndex);\n  }\n\n  private static beginsWithWindowsDriveLetter(url: string): boolean {\n    return /^[A-Za-z]:/.test(url);\n  }\n\n  private static beginsWithScheme(url: string): boolean {\n    return /^[A-Za-z][A-Za-z0-9+.-]*:/.test(url);\n  }\n\n  static isRelativeURL(url: string): boolean {\n    return !this.beginsWithScheme(url) || this.beginsWithWindowsDriveLetter(url);\n  }\n\n  get displayName(): string {\n    if (this.#displayName) {\n      return this.#displayName;\n    }\n\n    if (this.isDataURL()) {\n      return this.dataURLDisplayName();\n    }\n    if (this.isBlobURL()) {\n      return this.url;\n    }\n    if (this.isAboutBlank()) {\n      return this.url;\n    }\n\n    this.#displayName = this.lastPathComponent;\n    if (!this.#displayName) {\n      this.#displayName = (this.host || '') + '/';\n    }\n    if (this.#displayName === '/') {\n      this.#displayName = this.url;\n    }\n    return this.#displayName;\n  }\n\n  dataURLDisplayName(): string {\n    if (this.#dataURLDisplayName) {\n      return this.#dataURLDisplayName;\n    }\n    if (!this.isDataURL()) {\n      return '';\n    }\n    this.#dataURLDisplayName = Platform.StringUtilities.trimEndWithMaxLength(this.url, 20);\n    return this.#dataURLDisplayName;\n  }\n\n  isAboutBlank(): boolean {\n    return this.url === 'about:blank';\n  }\n\n  isDataURL(): boolean {\n    return this.scheme === 'data';\n  }\n\n  extractDataUrlMimeType(): {type: string|undefined, subtype: string|undefined} {\n    const regexp = /^data:((?<type>\\w+)\\/(?<subtype>\\w+))?(;base64)?,/;\n    const match = this.url.match(regexp);\n    return {\n      type: match?.groups?.type,\n      subtype: match?.groups?.subtype,\n    };\n  }\n\n  isBlobURL(): boolean {\n    return this.url.startsWith('blob:');\n  }\n\n  lastPathComponentWithFragment(): string {\n    return this.lastPathComponent + (this.fragment ? '#' + this.fragment : '');\n  }\n\n  domain(): string {\n    if (this.isDataURL()) {\n      return 'data:';\n    }\n    return this.host + (this.port ? ':' + this.port : '');\n  }\n\n  securityOrigin(): Platform.DevToolsPath.UrlString {\n    if (this.isDataURL()) {\n      return 'data:' as Platform.DevToolsPath.UrlString;\n    }\n    const scheme = this.isBlobURL() ? this.blobInnerScheme : this.scheme;\n    return scheme + '://' + this.domain() as Platform.DevToolsPath.UrlString;\n  }\n\n  urlWithoutScheme(): string {\n    if (this.scheme && this.url.startsWith(this.scheme + '://')) {\n      return this.url.substring(this.scheme.length + 3);\n    }\n    return this.url;\n  }\n\n  static urlRegexInstance: RegExp|null = null;\n}\n", "// Copyright 2012 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nexport interface Progress {\n  totalWork: number;\n  worked: number;\n  title: string|undefined;\n  canceled: boolean;\n  done: boolean;\n}\n\nexport class Progress implements Progress {\n  totalWork = 0;\n  worked = 0;\n  title: string|undefined = undefined;\n  canceled = false;\n  done = false;\n}\n\nexport class CompositeProgress {\n  readonly parent: Progress;\n  readonly #children: SubProgress[];\n  #childrenDone: number;\n\n  constructor(parent: Progress) {\n    this.parent = parent;\n    this.#children = [];\n    this.#childrenDone = 0;\n    this.parent.totalWork = 1;\n    this.parent.worked = 0;\n  }\n\n  childDone(): void {\n    if (++this.#childrenDone !== this.#children.length) {\n      return;\n    }\n    this.parent.done = true;\n  }\n\n  createSubProgress(weight?: number): SubProgress {\n    const child = new SubProgress(this, weight);\n    this.#children.push(child);\n    return child;\n  }\n\n  update(): void {\n    let totalWeights = 0;\n    let done = 0;\n\n    for (let i = 0; i < this.#children.length; ++i) {\n      const child = this.#children[i];\n      if (child.totalWork) {\n        done += child.weight * child.worked / child.totalWork;\n      }\n      totalWeights += child.weight;\n    }\n    this.parent.worked = done / totalWeights;\n  }\n}\n\nexport class SubProgress implements Progress {\n  readonly #composite: CompositeProgress;\n  #weight: number;\n  #worked: number;\n  #totalWork: number;\n  constructor(composite: CompositeProgress, weight?: number) {\n    this.#composite = composite;\n    this.#weight = weight || 1;\n    this.#worked = 0;\n\n    this.#totalWork = 0;\n  }\n\n  get canceled(): boolean {\n    return this.#composite.parent.canceled;\n  }\n\n  set title(title: string) {\n    this.#composite.parent.title = title;\n  }\n\n  set done(done: boolean) {\n    if (!done) {\n      return;\n    }\n    this.worked = this.#totalWork;\n    this.#composite.childDone();\n  }\n\n  set totalWork(totalWork: number) {\n    this.#totalWork = totalWork;\n    this.#composite.update();\n  }\n\n  set worked(worked: number) {\n    this.#worked = worked;\n    this.#composite.update();\n  }\n\n  get weight(): number {\n    return this.#weight;\n  }\n\n  get worked(): number {\n    return this.#worked;\n  }\n\n  get totalWork(): number {\n    return this.#totalWork;\n  }\n}\n\nexport class ProgressProxy implements Progress {\n  readonly #delegate: Progress|null|undefined;\n  readonly #doneCallback: (() => void)|undefined;\n  readonly #updateCallback: (() => void)|undefined;\n\n  constructor(delegate?: Progress|null, doneCallback?: (() => void), updateCallback?: (() => void)) {\n    this.#delegate = delegate;\n    this.#doneCallback = doneCallback;\n    this.#updateCallback = updateCallback;\n  }\n\n  get canceled(): boolean {\n    return this.#delegate ? this.#delegate.canceled : false;\n  }\n\n  set title(title: string) {\n    if (this.#delegate) {\n      this.#delegate.title = title;\n    }\n    if (this.#updateCallback) {\n      this.#updateCallback();\n    }\n  }\n\n  get title(): string {\n    return this.#delegate?.title ?? '';\n  }\n\n  set done(done: boolean) {\n    if (this.#delegate) {\n      this.#delegate.done = done;\n    }\n    if (done && this.#doneCallback) {\n      this.#doneCallback();\n    }\n  }\n\n  get done(): boolean {\n    return this.#delegate ? this.#delegate.done : false;\n  }\n\n  set totalWork(totalWork: number) {\n    if (this.#delegate) {\n      this.#delegate.totalWork = totalWork;\n    }\n    if (this.#updateCallback) {\n      this.#updateCallback();\n    }\n  }\n\n  get totalWork(): number {\n    return this.#delegate ? this.#delegate.totalWork : 0;\n  }\n\n  set worked(worked: number) {\n    if (this.#delegate) {\n      this.#delegate.worked = worked;\n    }\n    if (this.#updateCallback) {\n      this.#updateCallback?.();\n    }\n  }\n\n  get worked(): number {\n    return this.#delegate ? this.#delegate.worked : 0;\n  }\n}\n", "// Copyright 2019 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nexport interface QueryParamHandler {\n  handleQueryParam(value: string): void;\n}\n", "// Copyright 2021 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\ninterface PromiseInfo<T> {\n  promise: Promise<T>;\n  resolve: (obj: T) => void;\n  reject: (error: Error) => void;\n}\n\n/**\n * A class that facilitates resolving a id to an object of type T. If the id does not yet resolve, a promise\n * is created that gets resolved once `onResolve` is called with the corresponding id.\n *\n * This class enables clients to control the duration of the wait and the lifetime of the associated\n * promises by using the `clear` method on this class.\n */\nexport abstract class ResolverBase<Id, T> {\n  #unresolvedIds = new Map<Id, PromiseInfo<T>>();\n\n  protected abstract getForId(id: Id): T|null;\n  protected abstract startListening(): void;\n  protected abstract stopListening(): void;\n\n  /**\n   * Returns a promise that resolves once the `id` can be resolved to an object.\n   */\n  async waitFor(id: Id): Promise<T> {\n    const obj = this.getForId(id);\n    if (!obj) {\n      return await this.getOrCreatePromise(id);\n    }\n    return obj;\n  }\n\n  /**\n   * Resolve the `id`. Returns the object immediately if it can be resolved,\n   * and otherwise waits for the object to appear and calls `callback` once\n   * it is resolved.\n   */\n  tryGet(id: Id, callback: (t: T) => void): T|null {\n    const obj = this.getForId(id);\n    if (!obj) {\n      const swallowTheError = (): void => {};\n      void this.getOrCreatePromise(id).catch(swallowTheError).then(obj => {\n        if (obj) {\n          callback(obj);\n        }\n      });\n      return null;\n    }\n    return obj;\n  }\n\n  /**\n   * Aborts all waiting and rejects all unresolved promises.\n   */\n  clear(): void {\n    this.stopListening();\n    for (const [id, {reject}] of this.#unresolvedIds.entries()) {\n      reject(new Error(`Object with ${id} never resolved.`));\n    }\n    this.#unresolvedIds.clear();\n  }\n\n  private getOrCreatePromise(id: Id): Promise<T> {\n    const promiseInfo = this.#unresolvedIds.get(id);\n    if (promiseInfo) {\n      return promiseInfo.promise;\n    }\n    const {resolve, reject, promise} = Promise.withResolvers<T>();\n    this.#unresolvedIds.set(id, {promise, resolve, reject});\n    this.startListening();\n    return promise;\n  }\n\n  protected onResolve(id: Id, t: T): void {\n    const promiseInfo = this.#unresolvedIds.get(id);\n    this.#unresolvedIds.delete(id);\n    if (this.#unresolvedIds.size === 0) {\n      this.stopListening();\n    }\n    promiseInfo?.resolve(t);\n  }\n}\n", "// Copyright 2021 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/*\n * Copyright (C) 2012 Google Inc.  All rights reserved.\n * Copyright (C) 2007, 2008 Apple Inc.  All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1.  Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n * 2.  Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\n *     its contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as i18n from '../i18n/i18n.js';\nimport type * as Platform from '../platform/platform.js';\n\nimport {ParsedURL} from './ParsedURL.js';\n\nconst UIStrings = {\n  /**\n   * @description Text that appears in a tooltip the fetch and xhr resource types filter.\n   */\n  fetchAndXHR: '`Fetch` and `XHR`',\n  /**\n   * @description Text that appears in a tooltip for the JavaScript types filter.\n   */\n  javascript: 'JavaScript',\n  /**\n   * @description Text that appears on a button for the JavaScript resource type filter.\n   */\n  js: 'JS',\n  /**\n   * @description Text that appears on a button for the css resource type filter.\n   */\n  css: 'CSS',\n  /**\n   * @description Text that appears on a button for the image resource type filter.\n   */\n  img: 'Img',\n  /**\n   * @description Text that appears on a button for the media resource type filter.\n   */\n  media: 'Media',\n  /**\n   * @description Text that appears on a button for the font resource type filter.\n   */\n  font: 'Font',\n  /**\n   * @description Text that appears on a button for the document resource type filter.\n   */\n  doc: 'Doc',\n  /**\n   * @description Text that appears on a button for the websocket, webtransport, directsocket resource type filter.\n   */\n  socketShort: 'Socket',\n  /**\n   * @description Text that appears in a tooltip for the WebAssembly types filter.\n   */\n  webassembly: 'WebAssembly',\n  /**\n   * @description Text that appears on a button for the WebAssembly resource type filter.\n   */\n  wasm: 'Wasm',\n  /**\n   * @description Text that appears on a button for the manifest resource type filter.\n   */\n  manifest: 'Manifest',\n  /**\n   * @description Text for other types of items\n   */\n  other: 'Other',\n  /**\n   * @description Name of a network resource type\n   */\n  document: 'Document',\n  /**\n   * @description Name of a network resource type\n   */\n  stylesheet: 'Stylesheet',\n  /**\n   * @description Text in Image View of the Sources panel\n   */\n  image: 'Image',\n  /**\n   * @description Label for a group of JavaScript files\n   */\n  script: 'Script',\n  /**\n   * @description Name of a network resource type\n   */\n  texttrack: 'TextTrack',\n  /**\n   * @description Name of a network resource type\n   */\n  fetch: 'Fetch',\n  /**\n   * @description Name of a network resource type\n   */\n  eventsource: 'EventSource',\n  /**\n   * @description Name of a network resource type\n   */\n  websocket: 'WebSocket',\n  /**\n   * @description Name of a network resource type\n   */\n  webtransport: 'WebTransport',\n  /**\n   * @description Name of a network resource type\n   */\n  directsocket: 'DirectSocket',\n  /**\n   * @description Name of a network resource type\n   */\n  signedexchange: 'SignedExchange',\n  /**\n   * @description Name of a network resource type\n   */\n  ping: 'Ping',\n  /**\n   * @description Name of a network resource type\n   */\n  cspviolationreport: 'CSPViolationReport',\n  /**\n   * @description Name of a network initiator type\n   */\n  preflight: 'Preflight',\n  /**\n   * @description Name of a network initiator type for FedCM requests\n   */\n  fedcm: 'FedCM',\n} as const;\n\nconst str_ = i18n.i18n.registerUIStrings('core/common/ResourceType.ts', UIStrings);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\n\nexport class ResourceType {\n  readonly #name: string;\n  readonly #title: () => Platform.UIString.LocalizedString;\n  readonly #category: ResourceCategory;\n  readonly #isTextType: boolean;\n\n  constructor(\n      name: string, title: () => Platform.UIString.LocalizedString, category: ResourceCategory, isTextType: boolean) {\n    this.#name = name;\n    this.#title = title;\n    this.#category = category;\n    this.#isTextType = isTextType;\n  }\n\n  static fromMimeType(mimeType: string|null): ResourceType {\n    if (!mimeType) {\n      return resourceTypes.Other;\n    }\n    if (mimeType.startsWith('text/html')) {\n      return resourceTypes.Document;\n    }\n    if (mimeType.startsWith('text/css')) {\n      return resourceTypes.Stylesheet;\n    }\n    if (mimeType.startsWith('image/')) {\n      return resourceTypes.Image;\n    }\n    if (mimeType.startsWith('text/')) {\n      return resourceTypes.Script;\n    }\n\n    if (mimeType.includes('font')) {\n      return resourceTypes.Font;\n    }\n    if (mimeType.includes('script')) {\n      return resourceTypes.Script;\n    }\n    if (mimeType.includes('octet')) {\n      return resourceTypes.Other;\n    }\n    if (mimeType.includes('application')) {\n      return resourceTypes.Script;\n    }\n\n    return resourceTypes.Other;\n  }\n\n  static fromMimeTypeOverride(mimeType: string|null): ResourceType|null {\n    if (mimeType === 'application/manifest+json') {\n      return resourceTypes.Manifest;\n    }\n    if (mimeType === 'application/wasm') {\n      return resourceTypes.Wasm;\n    }\n\n    return null;\n  }\n\n  static fromURL(url: string): ResourceType|null {\n    return resourceTypeByExtension.get(ParsedURL.extractExtension(url)) || null;\n  }\n\n  static fromName(name: string): ResourceType|null {\n    for (const resourceType of Object.values(resourceTypes)) {\n      if (resourceType.name() === name) {\n        return resourceType;\n      }\n    }\n    return null;\n  }\n\n  static mimeFromURL(url: Platform.DevToolsPath.UrlString): string|undefined {\n    if (url.startsWith('snippet://') || url.startsWith('debugger://')) {\n      return 'text/javascript';\n    }\n    const name = ParsedURL.extractName(url);\n    if (mimeTypeByName.has(name)) {\n      return mimeTypeByName.get(name);\n    }\n\n    let ext = ParsedURL.extractExtension(url).toLowerCase();\n    if (ext === 'html' && name.endsWith('.component.html')) {\n      ext = 'component.html';\n    }\n    return mimeTypeByExtension.get(ext);\n  }\n\n  static mimeFromExtension(ext: string): string|undefined {\n    return mimeTypeByExtension.get(ext);\n  }\n\n  static simplifyContentType(contentType: string): string {\n    const regex = new RegExp('^application(.*json$|\\/json\\+.*)');\n    return regex.test(contentType) ? 'application/json' : contentType;\n  }\n\n  /**\n   * Adds suffixes iff the mimeType is 'text/javascript' to denote whether the JS is minified or from\n   * a source map.\n   */\n  static mediaTypeForMetrics(\n      mimeType: string, isFromSourceMap: boolean, isMinified: boolean, isSnippet: boolean,\n      isDebugger: boolean): string {\n    if (mimeType !== 'text/javascript') {\n      return mimeType;\n    }\n\n    if (isFromSourceMap) {\n      // SourceMap has precedence as that is a known fact, whereas minification is a heuristic we\n      // apply to the JS content.\n      return 'text/javascript+sourcemapped';\n    }\n    if (isMinified) {\n      return 'text/javascript+minified';\n    }\n    if (isSnippet) {\n      return 'text/javascript+snippet';\n    }\n    if (isDebugger) {\n      return 'text/javascript+eval';\n    }\n    return 'text/javascript+plain';\n  }\n\n  name(): string {\n    return this.#name;\n  }\n\n  title(): string {\n    return this.#title();\n  }\n\n  category(): ResourceCategory {\n    return this.#category;\n  }\n\n  isTextType(): boolean {\n    return this.#isTextType;\n  }\n\n  isScript(): boolean {\n    return this.#name === 'script' || this.#name === 'sm-script';\n  }\n\n  hasScripts(): boolean {\n    return this.isScript() || this.isDocument();\n  }\n\n  isStyleSheet(): boolean {\n    return this.#name === 'stylesheet' || this.#name === 'sm-stylesheet';\n  }\n\n  hasStyleSheets(): boolean {\n    return this.isStyleSheet() || this.isDocument();\n  }\n\n  isDocument(): boolean {\n    return this.#name === 'document';\n  }\n\n  isDocumentOrScriptOrStyleSheet(): boolean {\n    return this.isDocument() || this.isScript() || this.isStyleSheet();\n  }\n\n  isFont(): boolean {\n    return this.#name === 'font';\n  }\n\n  isImage(): boolean {\n    return this.#name === 'image';\n  }\n\n  isFromSourceMap(): boolean {\n    return this.#name.startsWith('sm-');\n  }\n\n  toString(): string {\n    return this.#name;\n  }\n\n  canonicalMimeType(): string {\n    if (this.isDocument()) {\n      return 'text/html';\n    }\n    if (this.isScript()) {\n      return 'text/javascript';\n    }\n    if (this.isStyleSheet()) {\n      return 'text/css';\n    }\n    return '';\n  }\n}\n\nexport class ResourceCategory {\n  readonly name: string;\n  title: () => Platform.UIString.LocalizedString;\n  shortTitle: () => Platform.UIString.LocalizedString;\n  constructor(\n      name: string, title: () => Platform.UIString.LocalizedString,\n      shortTitle: () => Platform.UIString.LocalizedString) {\n    this.name = name;\n    this.title = title;\n    this.shortTitle = shortTitle;\n  }\n}\n\nexport const resourceCategories = {\n  XHR: new ResourceCategory(\n      'Fetch and XHR', i18nLazyString(UIStrings.fetchAndXHR), i18n.i18n.lockedLazyString('Fetch/XHR')),\n  Document: new ResourceCategory(UIStrings.document, i18nLazyString(UIStrings.document), i18nLazyString(UIStrings.doc)),\n  Stylesheet: new ResourceCategory(UIStrings.css, i18nLazyString(UIStrings.css), i18nLazyString(UIStrings.css)),\n  Script:\n      new ResourceCategory(UIStrings.javascript, i18nLazyString(UIStrings.javascript), i18nLazyString(UIStrings.js)),\n  Font: new ResourceCategory(UIStrings.font, i18nLazyString(UIStrings.font), i18nLazyString(UIStrings.font)),\n  Image: new ResourceCategory(UIStrings.image, i18nLazyString(UIStrings.image), i18nLazyString(UIStrings.img)),\n  Media: new ResourceCategory(UIStrings.media, i18nLazyString(UIStrings.media), i18nLazyString(UIStrings.media)),\n  Manifest:\n      new ResourceCategory(UIStrings.manifest, i18nLazyString(UIStrings.manifest), i18nLazyString(UIStrings.manifest)),\n  Socket: new ResourceCategory(\n      'Socket', i18n.i18n.lockedLazyString('WebSocket | WebTransport | DirectSocket'),\n      i18nLazyString(UIStrings.socketShort)),\n  Wasm: new ResourceCategory(\n      UIStrings.webassembly, i18nLazyString(UIStrings.webassembly), i18nLazyString(UIStrings.wasm)),\n  Other: new ResourceCategory(UIStrings.other, i18nLazyString(UIStrings.other), i18nLazyString(UIStrings.other)),\n};\n\n/**\n * This enum is a superset of all types defined in WebCore::InspectorPageAgent::resourceTypeJson\n * For DevTools-only types that are based on MIME-types that are backed by other request types\n * (for example Wasm that is based on Fetch), additional types are added here.\n * For these types, make sure to update `fromMimeTypeOverride` to implement the custom logic.\n */\nexport const resourceTypes = {\n  Document: new ResourceType('document', i18nLazyString(UIStrings.document), resourceCategories.Document, true),\n  Stylesheet: new ResourceType('stylesheet', i18nLazyString(UIStrings.stylesheet), resourceCategories.Stylesheet, true),\n  Image: new ResourceType('image', i18nLazyString(UIStrings.image), resourceCategories.Image, false),\n  Media: new ResourceType('media', i18nLazyString(UIStrings.media), resourceCategories.Media, false),\n  Font: new ResourceType('font', i18nLazyString(UIStrings.font), resourceCategories.Font, false),\n  Script: new ResourceType('script', i18nLazyString(UIStrings.script), resourceCategories.Script, true),\n  TextTrack: new ResourceType('texttrack', i18nLazyString(UIStrings.texttrack), resourceCategories.Other, true),\n  XHR: new ResourceType('xhr', i18n.i18n.lockedLazyString('XHR'), resourceCategories.XHR, true),\n  Fetch: new ResourceType('fetch', i18nLazyString(UIStrings.fetch), resourceCategories.XHR, true),\n  Prefetch: new ResourceType('prefetch', i18n.i18n.lockedLazyString('Prefetch'), resourceCategories.Document, true),\n  EventSource: new ResourceType('eventsource', i18nLazyString(UIStrings.eventsource), resourceCategories.XHR, true),\n  WebSocket: new ResourceType('websocket', i18nLazyString(UIStrings.websocket), resourceCategories.Socket, false),\n  WebTransport:\n      new ResourceType('webtransport', i18nLazyString(UIStrings.webtransport), resourceCategories.Socket, false),\n  DirectSocket:\n      new ResourceType('directsocket', i18nLazyString(UIStrings.directsocket), resourceCategories.Socket, false),\n  Wasm: new ResourceType('wasm', i18nLazyString(UIStrings.wasm), resourceCategories.Wasm, false),\n  Manifest: new ResourceType('manifest', i18nLazyString(UIStrings.manifest), resourceCategories.Manifest, true),\n  SignedExchange:\n      new ResourceType('signed-exchange', i18nLazyString(UIStrings.signedexchange), resourceCategories.Other, false),\n  Ping: new ResourceType('ping', i18nLazyString(UIStrings.ping), resourceCategories.Other, false),\n  CSPViolationReport: new ResourceType(\n      'csp-violation-report', i18nLazyString(UIStrings.cspviolationreport), resourceCategories.Other, false),\n  Other: new ResourceType('other', i18nLazyString(UIStrings.other), resourceCategories.Other, false),\n  Preflight: new ResourceType('preflight', i18nLazyString(UIStrings.preflight), resourceCategories.Other, true),\n  SourceMapScript: new ResourceType('sm-script', i18nLazyString(UIStrings.script), resourceCategories.Script, true),\n  SourceMapStyleSheet:\n      new ResourceType('sm-stylesheet', i18nLazyString(UIStrings.stylesheet), resourceCategories.Stylesheet, true),\n  FedCM: new ResourceType('fedcm', i18nLazyString(UIStrings.fedcm), resourceCategories.Other, false),\n} as const;\n\nconst mimeTypeByName = new Map([\n  // CoffeeScript\n  ['Cakefile', 'text/x-coffeescript'],\n]);\n\n// clang-format off\nexport const resourceTypeByExtension = new Map([\n  ['js', resourceTypes.Script],\n  ['mjs', resourceTypes.Script],\n\n  ['css', resourceTypes.Stylesheet],\n  ['xsl', resourceTypes.Stylesheet],\n\n  ['avif', resourceTypes.Image],\n  ['bmp', resourceTypes.Image],\n  ['gif', resourceTypes.Image],\n  ['ico', resourceTypes.Image],\n  ['jpeg', resourceTypes.Image],\n  ['jpg', resourceTypes.Image],\n  ['jxl', resourceTypes.Image],\n  ['png', resourceTypes.Image],\n  ['svg', resourceTypes.Image],\n  ['tif', resourceTypes.Image],\n  ['tiff', resourceTypes.Image],\n\n  ['vue', resourceTypes.Document],\n\n  ['webmanifest', resourceTypes.Manifest],\n\n  ['webp', resourceTypes.Media],\n\n  ['otf', resourceTypes.Font],\n  ['ttc', resourceTypes.Font],\n  ['ttf', resourceTypes.Font],\n  ['woff', resourceTypes.Font],\n  ['woff2', resourceTypes.Font],\n\n  ['wasm', resourceTypes.Wasm],\n]);\n// clang-format on\n\nexport const mimeTypeByExtension = new Map([\n  // Web extensions\n  ['js', 'text/javascript'],\n  ['mjs', 'text/javascript'],\n  ['css', 'text/css'],\n  ['html', 'text/html'],\n  ['htm', 'text/html'],\n  ['xml', 'application/xml'],\n  ['xsl', 'application/xml'],\n  ['wasm', 'application/wasm'],\n  ['webmanifest', 'application/manifest+json'],\n\n  // HTML Embedded Scripts, ASP], JSP\n  ['asp', 'application/x-aspx'],\n  ['aspx', 'application/x-aspx'],\n  ['jsp', 'application/x-jsp'],\n\n  // C/C++\n  ['c', 'text/x-c++src'],\n  ['cc', 'text/x-c++src'],\n  ['cpp', 'text/x-c++src'],\n  ['h', 'text/x-c++src'],\n  ['m', 'text/x-c++src'],\n  ['mm', 'text/x-c++src'],\n\n  // CoffeeScript\n  ['coffee', 'text/x-coffeescript'],\n\n  // Dart\n  ['dart', 'application/vnd.dart'],\n\n  // TypeScript\n  ['ts', 'text/typescript'],\n  ['tsx', 'text/typescript-jsx'],\n\n  // JSON\n  ['json', 'application/json'],\n  ['gyp', 'application/json'],\n  ['gypi', 'application/json'],\n  ['map', 'application/json'],\n\n  // C#\n  ['cs', 'text/x-csharp'],\n\n  // Go\n  ['go', 'text/x-go'],\n\n  // Java\n  ['java', 'text/x-java'],\n\n  // Kotlin\n  ['kt', 'text/x-kotlin'],\n\n  // Scala\n  ['scala', 'text/x-scala'],\n\n  // Less\n  ['less', 'text/x-less'],\n\n  // PHP\n  ['php', 'application/x-httpd-php'],\n  ['phtml', 'application/x-httpd-php'],\n\n  // Python\n  ['py', 'text/x-python'],\n\n  // Shell\n  ['sh', 'text/x-sh'],\n\n  // Google Stylesheets (GSS)\n  ['gss', 'text/x-gss'],\n\n  // SASS (.sass & .scss)\n  ['sass', 'text/x-sass'],\n  ['scss', 'text/x-scss'],\n\n  // Video Text Tracks.\n  ['vtt', 'text/vtt'],\n\n  // LiveScript\n  ['ls', 'text/x-livescript'],\n\n  // Markdown\n  ['md', 'text/markdown'],\n\n  // ClojureScript\n  ['cljs', 'text/x-clojure'],\n  ['cljc', 'text/x-clojure'],\n  ['cljx', 'text/x-clojure'],\n\n  // Stylus\n  ['styl', 'text/x-styl'],\n\n  // JSX\n  ['jsx', 'text/jsx'],\n\n  // Image\n  ['avif', 'image/avif'],\n  ['bmp', 'image/bmp'],\n  ['gif', 'image/gif'],\n  ['ico', 'image/ico'],\n  ['jpeg', 'image/jpeg'],\n  ['jpg', 'image/jpeg'],\n  ['jxl', 'image/jxl'],\n  ['png', 'image/png'],\n  ['svg', 'image/svg+xml'],\n  ['tif', 'image/tif'],\n  ['tiff', 'image/tiff'],\n  ['webp', 'image/webp'],\n\n  // Font\n  ['otf', 'font/otf'],\n  ['ttc', 'font/collection'],\n  ['ttf', 'font/ttf'],\n  ['woff', 'font/woff'],\n  ['woff2', 'font/woff2'],\n\n  // Angular\n  ['component.html', 'text/x.angular'],\n\n  // Svelte\n  ['svelte', 'text/x.svelte'],\n\n  // Vue\n  ['vue', 'text/x.vue'],\n]);\n", "// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/**\n * Set instance of this class as flavor to mark what panel triggered the\n * 'elements.toggle-element-search' action if it was not the elements panel.\n * This will cause specified panel to be made visible instead of the elements\n * panel after the inspection is done.\n **/\nexport class ReturnToPanelFlavor {\n  readonly viewId: string;\n\n  constructor(viewId: string) {\n    this.viewId = viewId;\n  }\n}\n", "// Copyright 2019 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nexport interface Runnable {\n  run(): Promise<void>;\n}\n\ntype LateInitializationLoader = () => Promise<Runnable>;\nexport interface LateInitializableRunnableSetting {\n  id: string;\n  loadRunnable: LateInitializationLoader;\n}\n\nconst registeredLateInitializationRunnables = new Map<string, LateInitializationLoader>();\n\nexport function registerLateInitializationRunnable(setting: LateInitializableRunnableSetting): void {\n  const {id, loadRunnable} = setting;\n  if (registeredLateInitializationRunnables.has(id)) {\n    throw new Error(`Duplicate late Initializable runnable id '${id}'`);\n  }\n  registeredLateInitializationRunnables.set(id, loadRunnable);\n}\n\nexport function maybeRemoveLateInitializationRunnable(runnableId: string): boolean {\n  return registeredLateInitializationRunnables.delete(runnableId);\n}\n\nexport function lateInitializationRunnables(): LateInitializationLoader[] {\n  return [...registeredLateInitializationRunnables.values()];\n}\n\nconst registeredEarlyInitializationRunnables: Array<() => Runnable> = [];\n\nexport function registerEarlyInitializationRunnable(runnable: () => Runnable): void {\n  registeredEarlyInitializationRunnables.push(runnable);\n}\n\nexport function earlyInitializationRunnables(): Array<() => Runnable> {\n  return registeredEarlyInitializationRunnables;\n}\n", "// Copyright 2016 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Platform from '../platform/platform.js';\n\nexport class Segment<T> {\n  begin: number;\n  end: number;\n  data: T;\n\n  constructor(begin: number, end: number, data: T) {\n    if (begin > end) {\n      throw new Error('Invalid segment');\n    }\n    this.begin = begin;\n    this.end = end;\n    this.data = data;\n  }\n\n  intersects(that: Segment<T>): boolean {\n    return this.begin < that.end && that.begin < this.end;\n  }\n}\n\nexport class SegmentedRange<T> {\n  #segments: Array<Segment<T>> = [];\n  readonly #mergeCallback: ((arg0: Segment<T>, arg1: Segment<T>) => Segment<T>| null)|undefined;\n\n  constructor(mergeCallback?: ((arg0: Segment<T>, arg1: Segment<T>) => Segment<T>| null)) {\n    this.#mergeCallback = mergeCallback;\n  }\n\n  append(newSegment: Segment<T>): void {\n    // 1. Find the proper insertion point for new segment\n    let startIndex = Platform.ArrayUtilities.lowerBound(this.#segments, newSegment, (a, b) => a.begin - b.begin);\n    let endIndex = startIndex;\n    let merged: (Segment<T>|null)|null = null;\n    if (startIndex > 0) {\n      // 2. Try mering the preceding segment\n      const precedingSegment = this.#segments[startIndex - 1];\n      merged = this.tryMerge(precedingSegment, newSegment);\n      if (merged) {\n        --startIndex;\n        newSegment = merged;\n      } else if (this.#segments[startIndex - 1].end >= newSegment.begin) {\n        // 2a. If merge failed and segments overlap, adjust preceding segment.\n        // If an old segment entirely contains new one, split it in two.\n        if (newSegment.end < precedingSegment.end) {\n          this.#segments.splice(\n              startIndex, 0, new Segment<T>(newSegment.end, precedingSegment.end, precedingSegment.data));\n        }\n        precedingSegment.end = newSegment.begin;\n      }\n    }\n    // 3. Consume all segments that are entirely covered by the new one.\n    while (endIndex < this.#segments.length && this.#segments[endIndex].end <= newSegment.end) {\n      ++endIndex;\n    }\n    // 4. Merge or adjust the succeeding segment if it overlaps.\n    if (endIndex < this.#segments.length) {\n      merged = this.tryMerge(newSegment, this.#segments[endIndex]);\n      if (merged) {\n        endIndex++;\n        newSegment = merged;\n      } else if (newSegment.intersects(this.#segments[endIndex])) {\n        this.#segments[endIndex].begin = newSegment.end;\n      }\n    }\n    this.#segments.splice(startIndex, endIndex - startIndex, newSegment);\n  }\n\n  segments(): Array<Segment<T>> {\n    return this.#segments;\n  }\n\n  private tryMerge(first: Segment<T>, second: Segment<T>): Segment<T>|null {\n    const merged = this.#mergeCallback && this.#mergeCallback(first, second);\n    if (!merged) {\n      return null;\n    }\n    merged.begin = first.begin;\n    merged.end = Math.max(first.end, second.end);\n    return merged;\n  }\n}\n", "// Copyright 2020 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../i18n/i18n.js';\nimport type * as Platform from '../platform/platform.js';\nimport * as Root from '../root/root.js';\n\nimport type {SettingStorageType} from './Settings.js';\n\nconst UIStrings = {\n  /**\n   * @description Title of the Elements Panel\n   */\n  elements: 'Elements',\n  /**\n   * @description Text for DevTools AI\n   */\n  ai: 'AI',\n  /**\n   * @description Text for DevTools appearance\n   */\n  appearance: 'Appearance',\n  /**\n   * @description Name of the Sources panel\n   */\n  sources: 'Sources',\n  /**\n   * @description Title of the Network tool\n   */\n  network: 'Network',\n  /**\n   * @description Text for the performance of something\n   */\n  performance: 'Performance',\n  /**\n   * @description Title of the Console tool\n   */\n  console: 'Console',\n  /**\n   * @description A title of the 'Persistence' setting category\n   */\n  persistence: 'Persistence',\n  /**\n   * @description Text that refers to the debugger\n   */\n  debugger: 'Debugger',\n  /**\n   * @description Text describing global shortcuts and settings that are available throughout the DevTools\n   */\n  global: 'Global',\n  /**\n   * @description Title of the Rendering tool\n   */\n  rendering: 'Rendering',\n  /**\n   * @description Title of a section on CSS Grid tooling\n   */\n  grid: 'Grid',\n  /**\n   * @description Text for the mobile platform, as opposed to desktop\n   */\n  mobile: 'Mobile',\n  /**\n   * @description Text for the memory of the page\n   */\n  memory: 'Memory',\n  /**\n   * @description Text for the extension of the page\n   */\n  extension: 'Extension',\n  /**\n   * @description Text for the adorner of the page\n   */\n  adorner: 'Adorner',\n  /**\n   * @description Header for the \"Account\" section in the settings UI. The \"Account\"\n   * section allows users see their signed in account and configure which DevTools data is synced via Chrome Sync.\n   */\n  account: 'Account',\n  /**\n   * @description Text for the privacy section of the page.\n   */\n  privacy: 'Privacy',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('core/common/SettingRegistration.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nlet registeredSettings: SettingRegistration[] = [];\nconst settingNameSet = new Set<string>();\n\nexport function registerSettingExtension(registration: SettingRegistration): void {\n  const settingName = registration.settingName;\n  if (settingNameSet.has(settingName)) {\n    throw new Error(`Duplicate setting name '${settingName}'`);\n  }\n  settingNameSet.add(settingName);\n  registeredSettings.push(registration);\n}\n\nexport function getRegisteredSettings(): SettingRegistration[] {\n  return registeredSettings.filter(setting => Root.Runtime.Runtime.isDescriptorEnabled(setting));\n}\n\nexport function registerSettingsForTest(settings: SettingRegistration[], forceReset = false): void {\n  if (registeredSettings.length === 0 || forceReset) {\n    registeredSettings = settings;\n    settingNameSet.clear();\n    for (const setting of settings) {\n      const settingName = setting.settingName;\n      if (settingNameSet.has(settingName)) {\n        throw new Error(`Duplicate setting name '${settingName}'`);\n      }\n      settingNameSet.add(settingName);\n    }\n  }\n}\n\nexport function resetSettings(): void {\n  registeredSettings = [];\n  settingNameSet.clear();\n}\n\nexport function maybeRemoveSettingExtension(settingName: string): boolean {\n  const settingIndex = registeredSettings.findIndex(setting => setting.settingName === settingName);\n  if (settingIndex < 0 || !settingNameSet.delete(settingName)) {\n    return false;\n  }\n  registeredSettings.splice(settingIndex, 1);\n  return true;\n}\n\nexport const enum SettingCategory {\n  NONE = '',  // `NONE` must be a falsy value. Legacy code uses if-checks for the category.\n  ELEMENTS = 'ELEMENTS',\n  AI = 'AI',\n  APPEARANCE = 'APPEARANCE',\n  SOURCES = 'SOURCES',\n  NETWORK = 'NETWORK',\n  PERFORMANCE = 'PERFORMANCE',\n  CONSOLE = 'CONSOLE',\n  PERSISTENCE = 'PERSISTENCE',\n  DEBUGGER = 'DEBUGGER',\n  GLOBAL = 'GLOBAL',\n  RENDERING = 'RENDERING',\n  GRID = 'GRID',\n  MOBILE = 'MOBILE',\n  EMULATION = 'EMULATION',\n  MEMORY = 'MEMORY',\n  EXTENSIONS = 'EXTENSIONS',\n  ADORNER = 'ADORNER',\n  ACCOUNT = 'ACCOUNT',\n  PRIVACY = 'PRIVACY',\n}\n\nexport function getLocalizedSettingsCategory(category: SettingCategory): Platform.UIString.LocalizedString {\n  switch (category) {\n    case SettingCategory.ELEMENTS:\n      return i18nString(UIStrings.elements);\n    case SettingCategory.AI:\n      return i18nString(UIStrings.ai);\n    case SettingCategory.APPEARANCE:\n      return i18nString(UIStrings.appearance);\n    case SettingCategory.SOURCES:\n      return i18nString(UIStrings.sources);\n    case SettingCategory.NETWORK:\n      return i18nString(UIStrings.network);\n    case SettingCategory.PERFORMANCE:\n      return i18nString(UIStrings.performance);\n    case SettingCategory.CONSOLE:\n      return i18nString(UIStrings.console);\n    case SettingCategory.PERSISTENCE:\n      return i18nString(UIStrings.persistence);\n    case SettingCategory.DEBUGGER:\n      return i18nString(UIStrings.debugger);\n    case SettingCategory.GLOBAL:\n      return i18nString(UIStrings.global);\n    case SettingCategory.RENDERING:\n      return i18nString(UIStrings.rendering);\n    case SettingCategory.GRID:\n      return i18nString(UIStrings.grid);\n    case SettingCategory.MOBILE:\n      return i18nString(UIStrings.mobile);\n    case SettingCategory.EMULATION:\n      return i18nString(UIStrings.console);\n    case SettingCategory.MEMORY:\n      return i18nString(UIStrings.memory);\n    case SettingCategory.EXTENSIONS:\n      return i18nString(UIStrings.extension);\n    case SettingCategory.ADORNER:\n      return i18nString(UIStrings.adorner);\n    case SettingCategory.NONE:\n      return i18n.i18n.lockedString('');\n    case SettingCategory.ACCOUNT:\n      return i18nString(UIStrings.account);\n    case SettingCategory.PRIVACY:\n      return i18nString(UIStrings.privacy);\n  }\n}\n\nexport const enum SettingType {\n  ARRAY = 'array',\n  REGEX = 'regex',\n  ENUM = 'enum',\n  BOOLEAN = 'boolean',\n}\n\nexport interface RegExpSettingItem {\n  /**\n   * A regular expression matched against URLs for ignore listing.\n   */\n  pattern: string;\n  /**\n   * If true, ignore this rule.\n   */\n  disabled?: boolean;\n  /**\n   * When a rule is disabled due to requesting through a script's context menu\n   * that it no longer be ignore listed, this field is set to the URL of that\n   * script, so that if the user requests through the same context menu to\n   * enable ignore listing, the rule can be reenabled.\n   */\n  disabledForUrl?: Platform.DevToolsPath.UrlString;\n}\n\nexport interface SettingRegistration {\n  /**\n   * The category with which the setting is displayed in the UI.\n   */\n  category?: SettingCategory;\n  /**\n   * Used to sort on screen the settings that belong to the same category.\n   */\n  order?: number;\n  /**\n   * The title with which the setting is shown on screen.\n   */\n  title?: () => Platform.UIString.LocalizedString;\n  /**\n   * The identifier of the setting.\n   */\n  settingName: string;\n  /**\n   * Determines how the possible values of the setting are expressed.\n   *\n   * - If the setting can only be enabled and disabled use BOOLEAN\n   * - If the setting has a list of possible values use ENUM\n   * - If each setting value is a set of objects use ARRAY\n   * - If the setting value is a regular expression use REGEX\n   */\n  settingType: SettingType;\n  /**\n   * The value set by default to the setting.\n   */\n  defaultValue: unknown;\n  /**\n   * Words used to find a setting in the Command Menu.\n   */\n  tags?: Array<() => Platform.UIString.LocalizedString>;\n  /**\n   * The possible values the setting can have, each with a description composed of a title and an optional text.\n   */\n  options?: SettingExtensionOption[];\n  /**\n   * Whether DevTools must be reloaded for a change in the setting to take effect.\n   */\n  reloadRequired?: boolean;\n  /**\n   * Determines if the setting value is stored in the global, local or session storage.\n   */\n  storageType?: SettingStorageType;\n  /**\n   * A condition that, when present in the queryParamsObject of Runtime, constraints the value\n   * of the setting to be changed only if the user set it.\n   */\n  userActionCondition?: string;\n  /**\n   * The name of the experiment a setting is associated with. Enabling and disabling the declared\n   * experiment will enable and disable the setting respectively.\n   */\n  experiment?: Root.Runtime.ExperimentName;\n  /**\n   * A condition is a function that will make the setting available if it\n   * returns true, and not available, otherwise. Make sure that objects you\n   * access from inside the condition function are ready at the time when the\n   * setting conditions are checked.\n   */\n  condition?: Root.Runtime.Condition;\n\n  /**\n   * A function that returns true if the setting should be disabled, along with\n   * the reason why.\n   */\n  disabledCondition?: (config?: Root.Runtime.HostConfig) => DisabledConditionResult;\n\n  /**\n   * If a setting is deprecated, define this notice to show an appropriate warning according to the `warning` property.\n   * If `disabled` is set, the setting will be disabled in the settings UI. In that case, `experiment` optionally can be\n   * set to link to an experiment (by experiment name). The information icon in the settings UI can then be clicked to\n   * jump to the experiment. If a setting is not disabled, the experiment entry will be ignored.\n   */\n  deprecationNotice?: {disabled: boolean, warning: () => Platform.UIString.LocalizedString, experiment?: string};\n  /**\n   * See {@link LearnMore} for more info.\n   */\n  learnMore?: LearnMore;\n}\n\n/**\n * Optional information to learn more about the setting.\n *\n * If tooltip is provided creates a (i) icon with rich tooltip with said tooltip\n *\n * If url is provided creates a (?) icon with a link to said url\n *\n * If both tooltip is provided creates a (i) icon with rich tooltip\n * and a link inside the rich tool tip with text `Learn more`\n */\nexport interface LearnMore {\n  tooltip?: () => Platform.UIString.LocalizedString;\n  url?: Platform.DevToolsPath.UrlString;\n}\n\ninterface LocalizedSettingExtensionOption {\n  value: boolean|string;\n  title: () => Platform.UIString.LocalizedString;\n  text?: () => Platform.UIString.LocalizedString;\n  raw?: false;\n}\ninterface RawSettingExtensionOption {\n  value: boolean|string;\n  title: () => Platform.UIString.LocalizedString;\n  /**\n   * Text used to describe the option. Must be localized if 'raw' is false.\n   */\n  text?: string;\n  raw: true;\n}\nexport type SettingExtensionOption = LocalizedSettingExtensionOption|RawSettingExtensionOption;\nexport type DisabledConditionResult = {\n  disabled: true,\n  reasons: Platform.UIString.LocalizedString[],\n}|{disabled: false};\n", "// Copyright 2009 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Platform from '../platform/platform.js';\nimport * as Root from '../root/root.js';\n\nimport {Console} from './Console.js';\nimport type {EventDescriptor, EventTargetEvent, GenericEvents} from './EventTarget.js';\nimport {ObjectWrapper} from './Object.js';\nimport {\n  getLocalizedSettingsCategory,\n  getRegisteredSettings as getRegisteredSettingsInternal,\n  type LearnMore,\n  maybeRemoveSettingExtension,\n  type RegExpSettingItem,\n  registerSettingExtension,\n  registerSettingsForTest,\n  resetSettings,\n  SettingCategory,\n  type SettingExtensionOption,\n  type SettingRegistration,\n  SettingType,\n} from './SettingRegistration.js';\n\nlet settingsInstance: Settings|undefined;\n\nexport class Settings {\n  readonly #sessionStorage = new SettingsStorage({});\n  settingNameSet = new Set<string>();\n  orderValuesBySettingCategory = new Map<SettingCategory, Set<number>>();\n  #eventSupport = new ObjectWrapper<GenericEvents>();\n  #registry = new Map<string, Setting<unknown>>();\n  readonly moduleSettings = new Map<string, Setting<unknown>>();\n  #logSettingAccess?: (name: string, value: number|string|boolean) => Promise<void>;\n\n  private constructor(\n      readonly syncedStorage: SettingsStorage,\n      readonly globalStorage: SettingsStorage,\n      readonly localStorage: SettingsStorage,\n      logSettingAccess?: (name: string, value: number|string|boolean) => Promise<void>,\n  ) {\n    this.#logSettingAccess = logSettingAccess;\n\n    for (const registration of this.getRegisteredSettings()) {\n      const {settingName, defaultValue, storageType} = registration;\n      const isRegex = registration.settingType === SettingType.REGEX;\n\n      const evaluatedDefaultValue =\n          typeof defaultValue === 'function' ? defaultValue(Root.Runtime.hostConfig) : defaultValue;\n      const setting = isRegex && typeof evaluatedDefaultValue === 'string' ?\n          this.createRegExpSetting(settingName, evaluatedDefaultValue, undefined, storageType) :\n          this.createSetting(settingName, evaluatedDefaultValue, storageType);\n\n      setting.setTitleFunction(registration.title);\n      if (registration.userActionCondition) {\n        setting.setRequiresUserAction(Boolean(Root.Runtime.Runtime.queryParam(registration.userActionCondition)));\n      }\n      setting.setRegistration(registration);\n\n      this.registerModuleSetting(setting);\n    }\n  }\n\n  getRegisteredSettings(): SettingRegistration[] {\n    return getRegisteredSettingsInternal();\n  }\n\n  static hasInstance(): boolean {\n    return typeof settingsInstance !== 'undefined';\n  }\n\n  static instance(opts: {\n    forceNew: boolean|null,\n    syncedStorage: SettingsStorage|null,\n    globalStorage: SettingsStorage|null,\n    localStorage: SettingsStorage|null,\n    logSettingAccess?: (name: string, value: number|string|boolean) => Promise<void>,\n  } = {forceNew: null, syncedStorage: null, globalStorage: null, localStorage: null}): Settings {\n    const {forceNew, syncedStorage, globalStorage, localStorage, logSettingAccess} = opts;\n    if (!settingsInstance || forceNew) {\n      if (!syncedStorage || !globalStorage || !localStorage) {\n        throw new Error(`Unable to create settings: global and local storage must be provided: ${new Error().stack}`);\n      }\n\n      settingsInstance = new Settings(syncedStorage, globalStorage, localStorage, logSettingAccess);\n    }\n\n    return settingsInstance;\n  }\n\n  static removeInstance(): void {\n    settingsInstance = undefined;\n  }\n\n  private registerModuleSetting(setting: Setting<unknown>): void {\n    const settingName = setting.name;\n    const category = setting.category();\n    const order = setting.order();\n    if (this.settingNameSet.has(settingName)) {\n      throw new Error(`Duplicate Setting name '${settingName}'`);\n    }\n    if (category && order) {\n      const orderValues = this.orderValuesBySettingCategory.get(category) || new Set();\n      if (orderValues.has(order)) {\n        throw new Error(`Duplicate order value '${order}' for settings category '${category}'`);\n      }\n      orderValues.add(order);\n      this.orderValuesBySettingCategory.set(category, orderValues);\n    }\n    this.settingNameSet.add(settingName);\n    this.moduleSettings.set(setting.name, setting);\n  }\n\n  static normalizeSettingName(name: string): string {\n    if ([\n          VersionController.GLOBAL_VERSION_SETTING_NAME,\n          VersionController.SYNCED_VERSION_SETTING_NAME,\n          VersionController.LOCAL_VERSION_SETTING_NAME,\n          'currentDockState',\n          'isUnderTest',\n        ].includes(name)) {\n      return name;\n    }\n    return Platform.StringUtilities.toKebabCase(name);\n  }\n\n  /**\n   * Prefer a module setting if this setting is one that you might not want to\n   * surface to the user to control themselves. Examples of these are settings\n   * to store UI state such as how a user choses to position a split widget or\n   * which panel they last opened.\n   * If you are creating a setting that you expect the user to control, and\n   * sync, prefer {@link Settings.createSetting}\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  moduleSetting<T = any>(settingName: string): Setting<T> {\n    const setting = this.moduleSettings.get(settingName) as Setting<T>;\n    if (!setting) {\n      throw new Error('No setting registered: ' + settingName);\n    }\n    return setting;\n  }\n\n  settingForTest(settingName: string): Setting<unknown> {\n    const setting = this.#registry.get(settingName);\n    if (!setting) {\n      throw new Error('No setting registered: ' + settingName);\n    }\n    return setting;\n  }\n\n  /**\n   * Get setting via key, and create a new setting if the requested setting does not exist.\n   * @param key kebab-case string ID\n   * @param defaultValue\n   * @param storageType If not specified, SettingStorageType.GLOBAL is used.\n   */\n  createSetting<T>(key: string, defaultValue: T, storageType?: SettingStorageType): Setting<T> {\n    const storage = this.storageFromType(storageType);\n    let setting = this.#registry.get(key) as Setting<T>;\n    if (!setting) {\n      setting = new Setting(key, defaultValue, this.#eventSupport, storage, this.#logSettingAccess);\n      this.#registry.set(key, setting);\n    }\n    return setting;\n  }\n\n  createLocalSetting<T>(key: string, defaultValue: T): Setting<T> {\n    return this.createSetting(key, defaultValue, SettingStorageType.LOCAL);\n  }\n\n  createRegExpSetting(key: string, defaultValue: string, regexFlags?: string, storageType?: SettingStorageType):\n      RegExpSetting {\n    if (!this.#registry.get(key)) {\n      this.#registry.set(\n          key,\n          new RegExpSetting(\n              key, defaultValue, this.#eventSupport, this.storageFromType(storageType), regexFlags,\n              this.#logSettingAccess));\n    }\n    return this.#registry.get(key) as RegExpSetting;\n  }\n\n  clearAll(): void {\n    this.globalStorage.removeAll();\n    this.syncedStorage.removeAll();\n    this.localStorage.removeAll();\n    new VersionController().resetToCurrent();\n  }\n\n  private storageFromType(storageType?: SettingStorageType): SettingsStorage {\n    switch (storageType) {\n      case SettingStorageType.LOCAL:\n        return this.localStorage;\n      case SettingStorageType.SESSION:\n        return this.#sessionStorage;\n      case SettingStorageType.GLOBAL:\n        return this.globalStorage;\n      case SettingStorageType.SYNCED:\n        return this.syncedStorage;\n    }\n    return this.globalStorage;\n  }\n\n  getRegistry(): Map<string, Setting<unknown>> {\n    return this.#registry;\n  }\n}\n\nexport interface SettingsBackingStore {\n  register(setting: string): void;\n  get(setting: string): Promise<string>;\n  set(setting: string, value: string): void;\n  remove(setting: string): void;\n  clear(): void;\n}\n\nexport const NOOP_STORAGE: SettingsBackingStore = {\n  register: () => {},\n  set: () => {},\n  get: () => Promise.resolve(''),\n  remove: () => {},\n  clear: () => {},\n};\n\nexport class SettingsStorage {\n  constructor(\n      private object: Record<string, string>, private readonly backingStore: SettingsBackingStore = NOOP_STORAGE,\n      private readonly storagePrefix = '') {\n  }\n\n  register(name: string): void {\n    name = this.storagePrefix + name;\n    this.backingStore.register(name);\n  }\n\n  set(name: string, value: string): void {\n    name = this.storagePrefix + name;\n    this.object[name] = value;\n    this.backingStore.set(name, value);\n  }\n\n  has(name: string): boolean {\n    name = this.storagePrefix + name;\n    return name in this.object;\n  }\n\n  get(name: string): string {\n    name = this.storagePrefix + name;\n    return this.object[name];\n  }\n\n  async forceGet(originalName: string): Promise<string> {\n    const name = this.storagePrefix + originalName;\n    const value = await this.backingStore.get(name);\n    if (value && value !== this.object[name]) {\n      this.set(originalName, value);\n    } else if (!value) {\n      this.remove(originalName);\n    }\n    return value;\n  }\n\n  remove(name: string): void {\n    name = this.storagePrefix + name;\n    delete this.object[name];\n    this.backingStore.remove(name);\n  }\n\n  removeAll(): void {\n    this.object = {};\n    this.backingStore.clear();\n  }\n\n  keys(): string[] {\n    return Object.keys(this.object);\n  }\n\n  dumpSizes(): void {\n    Console.instance().log('Ten largest settings: ');\n    // @ts-expect-error __proto__ optimization\n    const sizes: Record<string, number> = {__proto__: null};\n    for (const key in this.object) {\n      sizes[key] = this.object[key].length;\n    }\n    const keys = Object.keys(sizes);\n\n    function comparator(key1: string, key2: string): number {\n      return sizes[key2] - sizes[key1];\n    }\n\n    keys.sort(comparator);\n\n    for (let i = 0; i < 10 && i < keys.length; ++i) {\n      Console.instance().log('Setting: \\'' + keys[i] + '\\', size: ' + sizes[keys[i]]);\n    }\n  }\n}\n\nfunction removeSetting(setting: {name: string, storage: SettingsStorage}): void {\n  const name = setting.name;\n  const settings = Settings.instance();\n\n  settings.getRegistry().delete(name);\n  settings.moduleSettings.delete(name);\n\n  setting.storage.remove(name);\n}\n\nexport class Deprecation {\n  readonly disabled: boolean;\n  readonly warning: Platform.UIString.LocalizedString;\n  readonly experiment?: Root.Runtime.Experiment;\n\n  constructor({deprecationNotice}: SettingRegistration) {\n    if (!deprecationNotice) {\n      throw new Error('Cannot create deprecation info for a non-deprecated setting');\n    }\n    this.disabled = deprecationNotice.disabled;\n    this.warning = deprecationNotice.warning();\n    this.experiment = deprecationNotice.experiment ?\n        Root.Runtime.experiments.allConfigurableExperiments().find(e => e.name === deprecationNotice.experiment) :\n        undefined;\n  }\n}\n\nexport class Setting<V> {\n  #titleFunction?: () => Platform.UIString.LocalizedString;\n  #title!: Platform.UIString.LocalizedString;\n  #registration: SettingRegistration|null = null;\n  #requiresUserAction?: boolean;\n  #value?: V;\n  // TODO(crbug.com/1172300) Type cannot be inferred without changes to consumers. See above.\n  #serializer: Serializer<unknown, V> = JSON;\n  #hadUserAction?: boolean;\n  #disabled?: boolean;\n  #deprecation: Deprecation|null = null;\n  #loggedInitialAccess = false;\n  #logSettingAccess?: (name: string, value: number|string|boolean) => Promise<void>;\n\n  constructor(\n      readonly name: string, readonly defaultValue: V, private readonly eventSupport: ObjectWrapper<GenericEvents>,\n      readonly storage: SettingsStorage,\n      logSettingAccess?: (name: string, value: number|string|boolean) => Promise<void>) {\n    storage.register(this.name);\n    this.#logSettingAccess = logSettingAccess;\n  }\n\n  setSerializer(serializer: Serializer<unknown, V>): void {\n    this.#serializer = serializer;\n  }\n\n  addChangeListener(listener: (arg0: EventTargetEvent<V>) => void, thisObject?: Object): EventDescriptor {\n    return this.eventSupport.addEventListener(this.name, listener, thisObject);\n  }\n\n  removeChangeListener(listener: (arg0: EventTargetEvent<V>) => void, thisObject?: Object): void {\n    this.eventSupport.removeEventListener(this.name, listener, thisObject);\n  }\n\n  title(): Platform.UIString.LocalizedString {\n    if (this.#title) {\n      return this.#title;\n    }\n    if (this.#titleFunction) {\n      return this.#titleFunction();\n    }\n    return '' as Platform.UIString.LocalizedString;\n  }\n\n  setTitleFunction(titleFunction: (() => Platform.UIString.LocalizedString)|undefined): void {\n    if (titleFunction) {\n      this.#titleFunction = titleFunction;\n    }\n  }\n\n  setTitle(title: Platform.UIString.LocalizedString): void {\n    this.#title = title;\n  }\n\n  setRequiresUserAction(requiresUserAction: boolean): void {\n    this.#requiresUserAction = requiresUserAction;\n  }\n\n  disabled(): boolean {\n    if (this.#registration?.disabledCondition) {\n      const {disabled} = this.#registration.disabledCondition(Root.Runtime.hostConfig);\n      // If registration does not disable it, pass through to #disabled\n      // attribute check.\n      if (disabled) {\n        return true;\n      }\n    }\n    return this.#disabled || false;\n  }\n\n  disabledReasons(): Platform.UIString.LocalizedString[] {\n    if (this.#registration?.disabledCondition) {\n      const result = this.#registration.disabledCondition(Root.Runtime.hostConfig);\n      if (result.disabled) {\n        return result.reasons;\n      }\n    }\n    return [];\n  }\n\n  setDisabled(disabled: boolean): void {\n    this.#disabled = disabled;\n    this.eventSupport.dispatchEventToListeners(this.name);\n  }\n\n  #maybeLogAccess(value: V): void {\n    try {\n      const valueToLog = typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean' ?\n          value :\n          this.#serializer?.stringify(value);\n      if (valueToLog !== undefined && this.#logSettingAccess) {\n        void this.#logSettingAccess(this.name, valueToLog);\n      }\n    } catch {\n    }\n  }\n\n  #maybeLogInitialAccess(value: V): void {\n    if (!this.#loggedInitialAccess) {\n      this.#maybeLogAccess(value);\n      this.#loggedInitialAccess = true;\n    }\n  }\n\n  get(): V {\n    if (this.#requiresUserAction && !this.#hadUserAction) {\n      this.#maybeLogInitialAccess(this.defaultValue);\n      return this.defaultValue;\n    }\n\n    if (typeof this.#value !== 'undefined') {\n      this.#maybeLogInitialAccess(this.#value);\n      return this.#value;\n    }\n\n    this.#value = this.defaultValue;\n    if (this.storage.has(this.name)) {\n      try {\n        this.#value = this.#serializer.parse(this.storage.get(this.name));\n      } catch {\n        this.storage.remove(this.name);\n      }\n    }\n    this.#maybeLogInitialAccess(this.#value);\n    return this.#value;\n  }\n\n  // Prefer this getter for settings which are \"disableable\". The plain getter returns `this.#value`,\n  // even if the setting is disabled, which means the callsite has to explicitly call the `disabled()`\n  // getter and add its own logic for the disabled state.\n  getIfNotDisabled(): V|undefined {\n    if (this.disabled()) {\n      return;\n    }\n    return this.get();\n  }\n\n  async forceGet(): Promise<V> {\n    const name = this.name;\n    const oldValue = this.storage.get(name);\n    const value = await this.storage.forceGet(name);\n    this.#value = this.defaultValue;\n    if (value) {\n      try {\n        this.#value = this.#serializer.parse(value);\n      } catch {\n        this.storage.remove(this.name);\n      }\n    }\n\n    if (oldValue !== value) {\n      this.eventSupport.dispatchEventToListeners(this.name, this.#value);\n    }\n\n    this.#maybeLogInitialAccess(this.#value);\n    return this.#value;\n  }\n\n  set(value: V): void {\n    this.#maybeLogAccess(value);\n    this.#hadUserAction = true;\n    this.#value = value;\n    try {\n      const settingString = this.#serializer.stringify(value);\n      try {\n        this.storage.set(this.name, settingString);\n      } catch (e) {\n        this.printSettingsSavingError(e.message, settingString);\n      }\n    } catch (e) {\n      Console.instance().error('Cannot stringify setting with name: ' + this.name + ', error: ' + e.message);\n    }\n    this.eventSupport.dispatchEventToListeners(this.name, value);\n  }\n\n  setRegistration(registration: SettingRegistration): void {\n    this.#registration = registration;\n    const {deprecationNotice} = registration;\n    if (deprecationNotice?.disabled) {\n      const experiment = deprecationNotice.experiment ?\n          Root.Runtime.experiments.allConfigurableExperiments().find(e => e.name === deprecationNotice.experiment) :\n          undefined;\n      if ((!experiment || experiment.isEnabled())) {\n        this.set(this.defaultValue);\n        this.setDisabled(true);\n      }\n    }\n  }\n\n  type(): SettingType|null {\n    if (this.#registration) {\n      return this.#registration.settingType;\n    }\n    return null;\n  }\n\n  options(): SimpleSettingOption[] {\n    if (this.#registration && this.#registration.options) {\n      return this.#registration.options.map(opt => {\n        const {value, title, text, raw} = opt;\n        return {\n          value,\n          title: title(),\n          text: typeof text === 'function' ? text() : text,\n          raw,\n        };\n      });\n    }\n    return [];\n  }\n\n  reloadRequired(): boolean|null {\n    if (this.#registration) {\n      return this.#registration.reloadRequired || null;\n    }\n    return null;\n  }\n\n  category(): SettingCategory|null {\n    if (this.#registration) {\n      return this.#registration.category || null;\n    }\n    return null;\n  }\n\n  tags(): string|null {\n    if (this.#registration && this.#registration.tags) {\n      // Get localized keys and separate by null character to prevent fuzzy matching from matching across them.\n      return this.#registration.tags.map(tag => tag()).join('\\0');\n    }\n    return null;\n  }\n\n  order(): number|null {\n    if (this.#registration) {\n      return this.#registration.order || null;\n    }\n    return null;\n  }\n\n  /**\n   * See {@link LearnMore} for more info\n   */\n  learnMore(): LearnMore|null {\n    return this.#registration?.learnMore ?? null;\n  }\n\n  get deprecation(): Deprecation|null {\n    if (!this.#registration || !this.#registration.deprecationNotice) {\n      return null;\n    }\n    if (!this.#deprecation) {\n      this.#deprecation = new Deprecation(this.#registration);\n    }\n    return this.#deprecation;\n  }\n\n  private printSettingsSavingError(message: string, value: string): void {\n    const errorMessage =\n        'Error saving setting with name: ' + this.name + ', value length: ' + value.length + '. Error: ' + message;\n    console.error(errorMessage);\n    Console.instance().error(errorMessage);\n    this.storage.dumpSizes();\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport class RegExpSetting extends Setting<any> {\n  #regexFlags: string|undefined;\n  #regex?: RegExp|null;\n\n  constructor(\n      name: string, defaultValue: string, eventSupport: ObjectWrapper<GenericEvents>, storage: SettingsStorage,\n      regexFlags?: string, logSettingAccess?: (name: string, value: number|string|boolean) => Promise<void>) {\n    super(name, defaultValue ? [{pattern: defaultValue}] : [], eventSupport, storage, logSettingAccess);\n    this.#regexFlags = regexFlags;\n  }\n\n  override get(): string {\n    const result = [];\n    const items = this.getAsArray();\n    for (let i = 0; i < items.length; ++i) {\n      const item = items[i];\n      if (item.pattern && !item.disabled) {\n        result.push(item.pattern);\n      }\n    }\n    return result.join('|');\n  }\n\n  getAsArray(): RegExpSettingItem[] {\n    return super.get();\n  }\n\n  override set(value: string): void {\n    this.setAsArray([{pattern: value, disabled: false}]);\n  }\n\n  setAsArray(value: RegExpSettingItem[]): void {\n    this.#regex = undefined;\n    super.set(value);\n  }\n\n  asRegExp(): RegExp|null {\n    if (typeof this.#regex !== 'undefined') {\n      return this.#regex;\n    }\n    this.#regex = null;\n    try {\n      const pattern = this.get();\n      if (pattern) {\n        this.#regex = new RegExp(pattern, this.#regexFlags || '');\n      }\n    } catch {\n    }\n    return this.#regex;\n  }\n}\n\n// The VersionController does a lot of mapping and restructuring which often need\n// typecasting to any, allow it in there\n/* eslint-disable @typescript-eslint/no-explicit-any */\nexport class VersionController {\n  static readonly GLOBAL_VERSION_SETTING_NAME = 'inspectorVersion';\n  static readonly SYNCED_VERSION_SETTING_NAME = 'syncedInspectorVersion';\n  static readonly LOCAL_VERSION_SETTING_NAME = 'localInspectorVersion';\n\n  static readonly CURRENT_VERSION = 40;\n\n  readonly #globalVersionSetting: Setting<number>;\n  readonly #syncedVersionSetting: Setting<number>;\n  readonly #localVersionSetting: Setting<number>;\n\n  constructor() {\n    // If no version setting is found, we initialize with the current version and don't do anything.\n    this.#globalVersionSetting = Settings.instance().createSetting(\n        VersionController.GLOBAL_VERSION_SETTING_NAME, VersionController.CURRENT_VERSION, SettingStorageType.GLOBAL);\n    this.#syncedVersionSetting = Settings.instance().createSetting(\n        VersionController.SYNCED_VERSION_SETTING_NAME, VersionController.CURRENT_VERSION, SettingStorageType.SYNCED);\n    this.#localVersionSetting = Settings.instance().createSetting(\n        VersionController.LOCAL_VERSION_SETTING_NAME, VersionController.CURRENT_VERSION, SettingStorageType.LOCAL);\n  }\n\n  /**\n   * Force re-sets all version number settings to the current version without\n   * running any migrations.\n   */\n  resetToCurrent(): void {\n    this.#globalVersionSetting.set(VersionController.CURRENT_VERSION);\n    this.#syncedVersionSetting.set(VersionController.CURRENT_VERSION);\n    this.#localVersionSetting.set(VersionController.CURRENT_VERSION);\n  }\n\n  /**\n   * Runs the appropriate migrations and updates the version settings accordingly.\n   *\n   * To determine what migrations to run we take the minimum of all version number settings.\n   *\n   * IMPORTANT: All migrations must be idempotent since they might be applied multiple times.\n   */\n  updateVersion(): void {\n    const currentVersion = VersionController.CURRENT_VERSION;\n    const minimumVersion =\n        Math.min(this.#globalVersionSetting.get(), this.#syncedVersionSetting.get(), this.#localVersionSetting.get());\n    const methodsToRun = this.methodsToRunToUpdateVersion(minimumVersion, currentVersion);\n    console.assert(\n        // @ts-expect-error\n        this[`updateVersionFrom${currentVersion}To${currentVersion + 1}`] === undefined,\n        'Unexpected migration method found. Increment CURRENT_VERSION or remove the method.');\n    for (const method of methodsToRun) {\n      // @ts-expect-error Special version method matching\n      this[method].call(this);\n    }\n    this.resetToCurrent();\n  }\n\n  private methodsToRunToUpdateVersion(oldVersion: number, currentVersion: number): string[] {\n    const result = [];\n    for (let i = oldVersion; i < currentVersion; ++i) {\n      result.push('updateVersionFrom' + i + 'To' + (i + 1));\n    }\n    return result;\n  }\n\n  updateVersionFrom0To1(): void {\n    this.clearBreakpointsWhenTooMany(Settings.instance().createLocalSetting('breakpoints', []), 500000);\n  }\n\n  updateVersionFrom1To2(): void {\n    Settings.instance().createSetting('previouslyViewedFiles', []).set([]);\n  }\n\n  updateVersionFrom2To3(): void {\n    Settings.instance().createSetting('fileSystemMapping', {}).set({});\n    removeSetting(Settings.instance().createSetting('fileMappingEntries', []));\n  }\n\n  updateVersionFrom3To4(): void {\n    const advancedMode = Settings.instance().createSetting('showHeaSnapshotObjectsHiddenProperties', false);\n    moduleSetting('showAdvancedHeapSnapshotProperties').set(advancedMode.get());\n    removeSetting(advancedMode);\n  }\n\n  updateVersionFrom4To5(): void {\n    const settingNames: Record<string, string> = {\n      FileSystemViewSidebarWidth: 'fileSystemViewSplitViewState',\n      elementsSidebarWidth: 'elementsPanelSplitViewState',\n      StylesPaneSplitRatio: 'stylesPaneSplitViewState',\n      heapSnapshotRetainersViewSize: 'heapSnapshotSplitViewState',\n      'InspectorView.splitView': 'InspectorView.splitViewState',\n      'InspectorView.screencastSplitView': 'InspectorView.screencastSplitViewState',\n      'Inspector.drawerSplitView': 'Inspector.drawerSplitViewState',\n      layerDetailsSplitView: 'layerDetailsSplitViewState',\n      networkSidebarWidth: 'networkPanelSplitViewState',\n      sourcesSidebarWidth: 'sourcesPanelSplitViewState',\n      scriptsPanelNavigatorSidebarWidth: 'sourcesPanelNavigatorSplitViewState',\n      sourcesPanelSplitSidebarRatio: 'sourcesPanelDebuggerSidebarSplitViewState',\n      'timeline-details': 'timelinePanelDetailsSplitViewState',\n      'timeline-split': 'timelinePanelRecorsSplitViewState',\n      'timeline-view': 'timelinePanelTimelineStackSplitViewState',\n      auditsSidebarWidth: 'auditsPanelSplitViewState',\n      layersSidebarWidth: 'layersPanelSplitViewState',\n      profilesSidebarWidth: 'profilesPanelSplitViewState',\n      resourcesSidebarWidth: 'resourcesPanelSplitViewState',\n    };\n    const empty = {};\n    for (const oldName in settingNames) {\n      const newName = settingNames[oldName];\n      const oldNameH = oldName + 'H';\n\n      let newValue: object|null = null;\n      const oldSetting = Settings.instance().createSetting(oldName, empty);\n      if (oldSetting.get() !== empty) {\n        newValue = newValue || {};\n        // @ts-expect-error\n        newValue.vertical = {};\n        // @ts-expect-error\n        newValue.vertical.size = oldSetting.get();\n        removeSetting(oldSetting);\n      }\n      const oldSettingH = Settings.instance().createSetting(oldNameH, empty);\n      if (oldSettingH.get() !== empty) {\n        newValue = newValue || {};\n        // @ts-expect-error\n        newValue.horizontal = {};\n        // @ts-expect-error\n        newValue.horizontal.size = oldSettingH.get();\n        removeSetting(oldSettingH);\n      }\n      if (newValue) {\n        Settings.instance().createSetting(newName, {}).set(newValue);\n      }\n    }\n  }\n\n  updateVersionFrom5To6(): void {\n    const settingNames: Record<string, string> = {\n      debuggerSidebarHidden: 'sourcesPanelSplitViewState',\n      navigatorHidden: 'sourcesPanelNavigatorSplitViewState',\n      'WebInspector.Drawer.showOnLoad': 'Inspector.drawerSplitViewState',\n    };\n\n    for (const oldName in settingNames) {\n      const oldSetting = Settings.instance().createSetting(oldName, null);\n      if (oldSetting.get() === null) {\n        removeSetting(oldSetting);\n        continue;\n      }\n\n      const newName = settingNames[oldName];\n      const invert = oldName === 'WebInspector.Drawer.showOnLoad';\n      const hidden = oldSetting.get() !== invert;\n      removeSetting(oldSetting);\n      const showMode = hidden ? 'OnlyMain' : 'Both';\n\n      const newSetting = Settings.instance().createSetting(newName, {});\n      const newValue = newSetting.get() || {};\n\n      // @ts-expect-error\n      newValue.vertical = newValue.vertical || {};\n\n      // @ts-expect-error\n      newValue.vertical.showMode = showMode;\n\n      // @ts-expect-error\n      newValue.horizontal = newValue.horizontal || {};\n\n      // @ts-expect-error\n      newValue.horizontal.showMode = showMode;\n      newSetting.set(newValue);\n    }\n  }\n\n  updateVersionFrom6To7(): void {\n    const settingNames = {\n      sourcesPanelNavigatorSplitViewState: 'sourcesPanelNavigatorSplitViewState',\n      elementsPanelSplitViewState: 'elementsPanelSplitViewState',\n      stylesPaneSplitViewState: 'stylesPaneSplitViewState',\n      sourcesPanelDebuggerSidebarSplitViewState: 'sourcesPanelDebuggerSidebarSplitViewState',\n    };\n\n    const empty = {};\n    for (const name in settingNames) {\n      const setting =\n          Settings.instance().createSetting<{vertical?: {size?: number}, horizontal?: {size?: number}}>(name, empty);\n      const value = setting.get();\n      if (value === empty) {\n        continue;\n      }\n      // Zero out saved percentage sizes, and they will be restored to defaults.\n      if (value.vertical?.size && value.vertical.size < 1) {\n        value.vertical.size = 0;\n      }\n      if (value.horizontal?.size && value.horizontal.size < 1) {\n        value.horizontal.size = 0;\n      }\n      setting.set(value);\n    }\n  }\n\n  updateVersionFrom7To8(): void {\n  }\n\n  updateVersionFrom8To9(): void {\n    const settingNames = ['skipStackFramesPattern', 'workspaceFolderExcludePattern'];\n\n    for (let i = 0; i < settingNames.length; ++i) {\n      const setting = Settings.instance().createSetting<string|unknown[]>(settingNames[i], '');\n      let value = setting.get();\n      if (!value) {\n        return;\n      }\n      if (typeof value === 'string') {\n        value = [value];\n      }\n      for (let j = 0; j < value.length; ++j) {\n        if (typeof value[j] === 'string') {\n          value[j] = {pattern: value[j]};\n        }\n      }\n      setting.set(value);\n    }\n  }\n\n  updateVersionFrom9To10(): void {\n    // This one is localStorage specific, which is fine.\n    if (!window.localStorage) {\n      return;\n    }\n    for (const key in window.localStorage) {\n      if (key.startsWith('revision-history')) {\n        window.localStorage.removeItem(key);\n      }\n    }\n  }\n\n  updateVersionFrom10To11(): void {\n    const oldSettingName = 'customDevicePresets';\n    const newSettingName = 'customEmulatedDeviceList';\n    const oldSetting = Settings.instance().createSetting<unknown>(oldSettingName, undefined);\n    const list = oldSetting.get();\n    if (!Array.isArray(list)) {\n      return;\n    }\n    const newList = [];\n    for (let i = 0; i < list.length; ++i) {\n      const value = list[i];\n\n      const device: Record<string, any> = {};\n      device['title'] = value['title'];\n      device['type'] = 'unknown';\n      device['user-agent'] = value['userAgent'];\n      device['capabilities'] = [];\n      if (value['touch']) {\n        device['capabilities'].push('touch');\n      }\n      if (value['mobile']) {\n        device['capabilities'].push('mobile');\n      }\n      device['screen'] = {};\n      device['screen']['vertical'] = {width: value['width'], height: value['height']};\n      device['screen']['horizontal'] = {width: value['height'], height: value['width']};\n      device['screen']['device-pixel-ratio'] = value['deviceScaleFactor'];\n      device['modes'] = [];\n      device['show-by-default'] = true;\n      device['show'] = 'Default';\n      newList.push(device);\n    }\n    if (newList.length) {\n      Settings.instance().createSetting<unknown[]>(newSettingName, []).set(newList);\n    }\n    removeSetting(oldSetting);\n  }\n\n  updateVersionFrom11To12(): void {\n    this.migrateSettingsFromLocalStorage();\n  }\n\n  updateVersionFrom12To13(): void {\n    this.migrateSettingsFromLocalStorage();\n    removeSetting(Settings.instance().createSetting('timelineOverviewMode', ''));\n  }\n\n  updateVersionFrom13To14(): void {\n    const defaultValue = {throughput: -1, latency: 0};\n    Settings.instance().createSetting('networkConditions', defaultValue).set(defaultValue);\n  }\n\n  updateVersionFrom14To15(): void {\n    const setting = Settings.instance().createLocalSetting<any>('workspaceExcludedFolders', {});\n    const oldValue = setting.get();\n    const newValue: Record<string, string[]> = {};\n    for (const fileSystemPath in oldValue) {\n      newValue[fileSystemPath] = [];\n      for (const entry of oldValue[fileSystemPath]) {\n        newValue[fileSystemPath].push(entry.path);\n      }\n    }\n    setting.set(newValue);\n  }\n\n  updateVersionFrom15To16(): void {\n    const setting = Settings.instance().createSetting<any>('InspectorView.panelOrder', {});\n    const tabOrders = setting.get();\n    for (const key of Object.keys(tabOrders)) {\n      tabOrders[key] = (tabOrders[key] + 1) * 10;\n    }\n    setting.set(tabOrders);\n  }\n\n  updateVersionFrom16To17(): void {\n    const setting = Settings.instance().createSetting<any>('networkConditionsCustomProfiles', []);\n    const oldValue = setting.get();\n    const newValue = [];\n    if (Array.isArray(oldValue)) {\n      for (const preset of oldValue) {\n        if (typeof preset.title === 'string' && typeof preset.value === 'object' &&\n            typeof preset.value.throughput === 'number' && typeof preset.value.latency === 'number') {\n          newValue.push({\n            title: preset.title,\n            value: {download: preset.value.throughput, upload: preset.value.throughput, latency: preset.value.latency},\n          });\n        }\n      }\n    }\n    setting.set(newValue);\n  }\n\n  updateVersionFrom17To18(): void {\n    const setting = Settings.instance().createLocalSetting<any>('workspaceExcludedFolders', {});\n    const oldValue = setting.get();\n    const newValue: Record<string, string> = {};\n    for (const oldKey in oldValue) {\n      let newKey = oldKey.replace(/\\\\/g, '/');\n      if (!newKey.startsWith('file://')) {\n        if (newKey.startsWith('/')) {\n          newKey = 'file://' + newKey;\n        } else {\n          newKey = 'file:///' + newKey;\n        }\n      }\n      newValue[newKey] = oldValue[oldKey];\n    }\n    setting.set(newValue);\n  }\n\n  updateVersionFrom18To19(): void {\n    const defaultColumns = {status: true, type: true, initiator: true, size: true, time: true};\n    const visibleColumnSettings = Settings.instance().createSetting<any>('networkLogColumnsVisibility', defaultColumns);\n    const visibleColumns = visibleColumnSettings.get();\n    visibleColumns.name = true;\n    visibleColumns.timeline = true;\n\n    const configs: Record<string, {\n      visible: number,\n    }> = {};\n    for (const columnId in visibleColumns) {\n      if (!visibleColumns.hasOwnProperty(columnId)) {\n        continue;\n      }\n      configs[columnId.toLowerCase()] = {visible: visibleColumns[columnId]};\n    }\n    const newSetting = Settings.instance().createSetting('networkLogColumns', {});\n    newSetting.set(configs);\n    removeSetting(visibleColumnSettings);\n  }\n\n  updateVersionFrom19To20(): void {\n    const oldSetting = Settings.instance().createSetting('InspectorView.panelOrder', {});\n    const newSetting = Settings.instance().createSetting('panel-tabOrder', {});\n    newSetting.set(oldSetting.get());\n    removeSetting(oldSetting);\n  }\n\n  updateVersionFrom20To21(): void {\n    const networkColumns = Settings.instance().createSetting('networkLogColumns', {});\n    const columns = (networkColumns.get() as Record<string, string>);\n    delete columns['timeline'];\n    delete columns['waterfall'];\n    networkColumns.set(columns);\n  }\n\n  updateVersionFrom21To22(): void {\n    const breakpointsSetting = Settings.instance().createLocalSetting<any>('breakpoints', []);\n    const breakpoints = breakpointsSetting.get();\n    for (const breakpoint of breakpoints) {\n      breakpoint['url'] = breakpoint['sourceFileId'];\n      delete breakpoint['sourceFileId'];\n    }\n    breakpointsSetting.set(breakpoints);\n  }\n\n  updateVersionFrom22To23(): void {\n    // This update is no-op.\n  }\n\n  updateVersionFrom23To24(): void {\n    const oldSetting = Settings.instance().createSetting('searchInContentScripts', false);\n    const newSetting = Settings.instance().createSetting('searchInAnonymousAndContentScripts', false);\n    newSetting.set(oldSetting.get());\n    removeSetting(oldSetting);\n  }\n\n  updateVersionFrom24To25(): void {\n    const defaultColumns = {status: true, type: true, initiator: true, size: true, time: true};\n\n    const networkLogColumnsSetting = Settings.instance().createSetting<any>('networkLogColumns', defaultColumns);\n    const columns = networkLogColumnsSetting.get();\n    delete columns.product;\n    networkLogColumnsSetting.set(columns);\n  }\n\n  updateVersionFrom25To26(): void {\n    const oldSetting = Settings.instance().createSetting('messageURLFilters', {});\n    const urls = Object.keys(oldSetting.get());\n    const textFilter = urls.map(url => `-url:${url}`).join(' ');\n    if (textFilter) {\n      const textFilterSetting = Settings.instance().createSetting<any>('console.textFilter', '');\n      const suffix = textFilterSetting.get() ? ` ${textFilterSetting.get()}` : '';\n      textFilterSetting.set(`${textFilter}${suffix}`);\n    }\n    removeSetting(oldSetting);\n  }\n\n  updateVersionFrom26To27(): void {\n    function renameKeyInObjectSetting(settingName: string, from: string, to: string): void {\n      const setting = Settings.instance().createSetting<any>(settingName, {});\n      const value = setting.get();\n      if (from in value) {\n        value[to] = value[from];\n        delete value[from];\n        setting.set(value);\n      }\n    }\n\n    function renameInStringSetting(settingName: string, from: string, to: string): void {\n      const setting = Settings.instance().createSetting(settingName, '');\n      const value = setting.get();\n      if (value === from) {\n        setting.set(to);\n      }\n    }\n\n    renameKeyInObjectSetting('panel-tabOrder', 'audits2', 'audits');\n    renameKeyInObjectSetting('panel-closeableTabs', 'audits2', 'audits');\n    renameInStringSetting('panel-selectedTab', 'audits2', 'audits');\n  }\n\n  updateVersionFrom27To28(): void {\n    const setting = Settings.instance().createSetting('uiTheme', 'systemPreferred');\n    if (setting.get() === 'default') {\n      setting.set('systemPreferred');\n    }\n  }\n\n  updateVersionFrom28To29(): void {\n    function renameKeyInObjectSetting(settingName: string, from: string, to: string): void {\n      const setting = Settings.instance().createSetting<any>(settingName, {});\n      const value = setting.get();\n      if (from in value) {\n        value[to] = value[from];\n        delete value[from];\n        setting.set(value);\n      }\n    }\n\n    function renameInStringSetting(settingName: string, from: string, to: string): void {\n      const setting = Settings.instance().createSetting(settingName, '');\n      const value = setting.get();\n      if (value === from) {\n        setting.set(to);\n      }\n    }\n\n    renameKeyInObjectSetting('panel-tabOrder', 'audits', 'lighthouse');\n    renameKeyInObjectSetting('panel-closeableTabs', 'audits', 'lighthouse');\n    renameInStringSetting('panel-selectedTab', 'audits', 'lighthouse');\n  }\n\n  updateVersionFrom29To30(): void {\n    // Create new location agnostic setting\n    const closeableTabSetting = Settings.instance().createSetting('closeableTabs', {});\n\n    // Read current settings\n    const panelCloseableTabSetting = Settings.instance().createSetting('panel-closeableTabs', {});\n    const drawerCloseableTabSetting = Settings.instance().createSetting('drawer-view-closeableTabs', {});\n    const openTabsInPanel = panelCloseableTabSetting.get();\n    const openTabsInDrawer = panelCloseableTabSetting.get();\n\n    // Set #value of new setting\n    const newValue = Object.assign(openTabsInDrawer, openTabsInPanel);\n    closeableTabSetting.set(newValue);\n\n    // Remove old settings\n    removeSetting(panelCloseableTabSetting);\n    removeSetting(drawerCloseableTabSetting);\n  }\n\n  updateVersionFrom30To31(): void {\n    // Remove recorder_recordings setting that was used for storing recordings\n    // by an old recorder experiment.\n    const recordingsSetting = Settings.instance().createSetting('recorder_recordings', []);\n    removeSetting(recordingsSetting);\n  }\n\n  updateVersionFrom31To32(): void {\n    // Introduce the new 'resourceTypeName' property on stored breakpoints. Prior to\n    // this change we synchronized the breakpoint only by URL, but since we don't\n    // know on which resource type the given breakpoint was set, we just assume\n    // 'script' here to keep things simple.\n\n    const breakpointsSetting = Settings.instance().createLocalSetting<any>('breakpoints', []);\n    const breakpoints = breakpointsSetting.get();\n    for (const breakpoint of breakpoints) {\n      breakpoint['resourceTypeName'] = 'script';\n    }\n    breakpointsSetting.set(breakpoints);\n  }\n\n  updateVersionFrom32To33(): void {\n    const previouslyViewedFilesSetting = Settings.instance().createLocalSetting<any>('previouslyViewedFiles', []);\n    let previouslyViewedFiles = previouslyViewedFilesSetting.get();\n\n    // Discard old 'previouslyViewedFiles' items that don't have a 'url' property.\n\n    previouslyViewedFiles = previouslyViewedFiles.filter((previouslyViewedFile: any) => 'url' in previouslyViewedFile);\n\n    // Introduce the new 'resourceTypeName' property on previously viewed files.\n    // Prior to this change we only keyed them based on the URL, but since we\n    // don't know which resource type the given file had, we just assume 'script'\n    // here to keep things simple.\n    for (const previouslyViewedFile of previouslyViewedFiles) {\n      previouslyViewedFile['resourceTypeName'] = 'script';\n    }\n\n    previouslyViewedFilesSetting.set(previouslyViewedFiles);\n  }\n\n  updateVersionFrom33To34(): void {\n    // Introduces the 'isLogpoint' property on stored breakpoints. This information was\n    // previously encoded in the 'condition' itself. This migration leaves the condition\n    // alone but ensures that 'isLogpoint' is accurate for already stored breakpoints.\n    // This enables us to use the 'isLogpoint' property in code.\n    // A separate migration will remove the special encoding from the condition itself\n    // once all refactorings are done.\n\n    // The prefix/suffix are hardcoded here, since these constants will be removed in\n    // the future.\n    const logpointPrefix = '/** DEVTOOLS_LOGPOINT */ console.log(';\n    const logpointSuffix = ')';\n\n    const breakpointsSetting = Settings.instance().createLocalSetting<any>('breakpoints', []);\n    const breakpoints = breakpointsSetting.get();\n    for (const breakpoint of breakpoints) {\n      const isLogpoint =\n          breakpoint.condition.startsWith(logpointPrefix) && breakpoint.condition.endsWith(logpointSuffix);\n      breakpoint['isLogpoint'] = isLogpoint;\n    }\n    breakpointsSetting.set(breakpoints);\n  }\n\n  updateVersionFrom34To35(): void {\n    // Uses the 'isLogpoint' property on stored breakpoints to remove the prefix/suffix\n    // from logpoints. This way, we store the entered log point condition as the user\n    // entered it.\n\n    // The prefix/suffix are hardcoded here, since these constants will be removed in\n    // the future.\n    const logpointPrefix = '/** DEVTOOLS_LOGPOINT */ console.log(';\n    const logpointSuffix = ')';\n\n    const breakpointsSetting = Settings.instance().createLocalSetting<any>('breakpoints', []);\n    const breakpoints = breakpointsSetting.get();\n    for (const breakpoint of breakpoints) {\n      const {condition, isLogpoint} = breakpoint;\n      if (isLogpoint) {\n        breakpoint.condition = condition.slice(logpointPrefix.length, condition.length - logpointSuffix.length);\n      }\n    }\n    breakpointsSetting.set(breakpoints);\n  }\n\n  updateVersionFrom35To36(): void {\n    // We have changed the default from 'false' to 'true' and this updates the existing setting just for once.\n    Settings.instance().createSetting('showThirdPartyIssues', true).set(true);\n  }\n\n  updateVersionFrom36To37(): void {\n    const updateStorage = (storage: SettingsStorage): void => {\n      for (const key of storage.keys()) {\n        const normalizedKey = Settings.normalizeSettingName(key);\n        if (normalizedKey !== key) {\n          const value = storage.get(key);\n          removeSetting({name: key, storage});\n          storage.set(normalizedKey, value);\n        }\n      }\n    };\n    updateStorage(Settings.instance().globalStorage);\n    updateStorage(Settings.instance().syncedStorage);\n    updateStorage(Settings.instance().localStorage);\n\n    for (const key of Settings.instance().globalStorage.keys()) {\n      if ((key.startsWith('data-grid-') && key.endsWith('-column-weights')) || key.endsWith('-tab-order') ||\n          key === 'views-location-override' || key === 'closeable-tabs') {\n        const setting = Settings.instance().createSetting(key, {});\n        setting.set(Platform.StringUtilities.toKebabCaseKeys(setting.get()));\n      }\n      if (key.endsWith('-selected-tab')) {\n        const setting = Settings.instance().createSetting(key, '');\n        setting.set(Platform.StringUtilities.toKebabCase(setting.get()));\n      }\n    }\n  }\n\n  updateVersionFrom37To38(): void {\n    const getConsoleInsightsEnabledSetting = (): Setting<boolean>|undefined => {\n      try {\n        return moduleSetting('console-insights-enabled') as Setting<boolean>;\n      } catch {\n        return;\n      }\n    };\n\n    const consoleInsightsEnabled = getConsoleInsightsEnabledSetting();\n    const onboardingFinished = Settings.instance().createLocalSetting('console-insights-onboarding-finished', false);\n\n    if (consoleInsightsEnabled && consoleInsightsEnabled.get() === true && onboardingFinished.get() === false) {\n      consoleInsightsEnabled.set(false);\n    }\n    if (consoleInsightsEnabled && consoleInsightsEnabled.get() === false) {\n      onboardingFinished.set(false);\n    }\n  }\n\n  updateVersionFrom38To39(): void {\n    const PREFERRED_NETWORK_COND = 'preferred-network-condition';\n    // crrev.com/c/5582013 renamed \"Slow 3G\" to \"3G\" and \"Fast 3G\" => \"Slow 4G\".\n    // Any users with the old values need to have them moved to avoid breaking DevTools.\n    // Note: we load the raw value via the globalStorage here because\n    // `createSetting` creates if it is not present, and we do not want that;\n    // we only want to update existing, old values.\n    const setting = Settings.instance().globalStorage.get(PREFERRED_NETWORK_COND);\n    if (!setting) {\n      return;\n    }\n    try {\n      const networkSetting = JSON.parse(setting) as unknown as {\n        // Can't use SDK type here as it creates a common<>sdk circular\n        // dep. This type is not exhaustive but contains the fields we\n        // need.\n        title: string,\n        i18nTitleKey?: string,\n      };\n      if (networkSetting.title === 'Slow 3G') {\n        networkSetting.title = '3G';\n        networkSetting.i18nTitleKey = '3G';\n        Settings.instance().globalStorage.set(PREFERRED_NETWORK_COND, JSON.stringify(networkSetting));\n      } else if (networkSetting.title === 'Fast 3G') {\n        networkSetting.title = 'Slow 4G';\n        networkSetting.i18nTitleKey = 'Slow 4G';\n        Settings.instance().globalStorage.set(PREFERRED_NETWORK_COND, JSON.stringify(networkSetting));\n      }\n    } catch {\n      // If parsing the setting threw, it's in some invalid state, so remove it.\n      Settings.instance().globalStorage.remove(PREFERRED_NETWORK_COND);\n    }\n  }\n\n  /**\n   * There are two related migrations here for handling network throttling persistence:\n   * 1. Go through all user custom throttling conditions and add a `key` property.\n   * 2. If the user has a 'preferred-network-condition' setting, take the value\n   *    of that and set the right key for the new 'active-network-condition-key'\n   *    setting. Then, remove the now-obsolete 'preferred-network-condition'\n   *    setting.\n   */\n  updateVersionFrom39To40(): void {\n    const hasCustomNetworkConditionsSetting = (): boolean => {\n      try {\n        // this will error if it does not exist\n        moduleSetting('custom-network-conditions');\n        return true;\n      } catch {\n        return false;\n      }\n    };\n    if (hasCustomNetworkConditionsSetting()) {\n      /**\n       * We added keys to custom network throttling conditions in M140, so we\n       * need to go through any existing profiles the user has and add the key to\n       * them.\n       * We can't use the SDK.NetworkManager.Condition here as it would be a\n       * circular dependency. All that matters is that these conditions are\n       * objects, and we need to set the right key on each one. The actual keys &\n       * values in the object are not important.\n       */\n      const conditionsSetting = moduleSetting('custom-network-conditions') as Setting<Array<{key?: string}>>;\n      const customConditions = conditionsSetting.get();\n      if (customConditions?.length > 0) {\n        customConditions.forEach((condition, i) => {\n          // This could be run multiple times, make sure that we don't override any\n          // existing keys.\n          if (condition.key) {\n            return;\n          }\n          // The format of this key is important: see\n          // SDK.NetworkManager.UserDefinedThrottlingConditionKey\n          condition.key = `USER_CUSTOM_SETTING_${i + 1}`;\n        });\n        conditionsSetting.set(customConditions);\n      }\n    }\n\n    // Additionally, we need to make sure we persist the right throttling for\n    // users who have a preferred-network-condition set.\n    const PREFERRED_NETWORK_COND_SETTING = 'preferred-network-condition';\n    // We shipped a change to how we persist network throttling conditions and\n    // added a `key` property rather than rely on any user visible string which\n    // is more likely to change. This migration step tries to update the\n    // setting for users, or removes it if we fail, so they start fresh next\n    // time they load DevTools.\n    const setting = Settings.instance().globalStorage.get(PREFERRED_NETWORK_COND_SETTING);\n    if (!setting) {\n      return;\n    }\n    // The keys here are the UI Strings as of July 2025 (shipped in M139).\n    // This migration shipped in M140. The values are the values of the\n    // `PredefinedThrottlingConditionKey` in SDK.NetworkManager.\n    const UI_STRING_TO_NEW_KEY = {\n      'Fast 4G': 'SPEED_FAST_4G',\n      'Slow 4G': 'SPEED_SLOW_4G',\n      '3G': 'SPEED_3G',\n      'No throttling': 'NO_THROTTLING',\n      Offline: 'OFFLINE'\n    };\n    try {\n      const networkSetting = JSON.parse(setting) as unknown as {\n        // Can't use SDK type here as it creates a common<>sdk circular\n        // dep. We only rely on the i18nTitleKey.\n        i18nTitleKey?: string,\n      };\n      if (networkSetting.i18nTitleKey && UI_STRING_TO_NEW_KEY.hasOwnProperty(networkSetting.i18nTitleKey)) {\n        const key = UI_STRING_TO_NEW_KEY[networkSetting.i18nTitleKey as keyof typeof UI_STRING_TO_NEW_KEY];\n\n        // The second argument is the default value, so it's important that we\n        // set this to the default, and then update it to the new key.\n        const newSetting = Settings.instance().createSetting('active-network-condition-key', 'NO_THROTTLING');\n        newSetting.set(key);\n      }\n    } finally {\n      // This setting is now not used, so we can remove it.\n      Settings.instance().globalStorage.remove(PREFERRED_NETWORK_COND_SETTING);\n    }\n  }\n\n  /*\n   * Any new migration should be added before this comment.\n   *\n   * IMPORTANT: Migrations must be idempotent, since they may be applied\n   * multiple times! E.g. when renaming a setting one has to check that the\n   * a setting with the new name does not yet exist.\n   * ----------------------------------------------------------------------- */\n\n  private migrateSettingsFromLocalStorage(): void {\n    // This step migrates all the settings except for the ones below into the browser profile.\n    const localSettings = new Set<string>([\n      'advancedSearchConfig',\n      'breakpoints',\n      'consoleHistory',\n      'domBreakpoints',\n      'eventListenerBreakpoints',\n      'fileSystemMapping',\n      'lastSelectedSourcesSidebarPaneTab',\n      'previouslyViewedFiles',\n      'savedURLs',\n      'watchExpressions',\n      'workspaceExcludedFolders',\n      'xhrBreakpoints',\n    ]);\n    if (!window.localStorage) {\n      return;\n    }\n\n    for (const key in window.localStorage) {\n      if (localSettings.has(key)) {\n        continue;\n      }\n      const value = window.localStorage[key];\n      window.localStorage.removeItem(key);\n      Settings.instance().globalStorage.set(key, value);\n    }\n  }\n\n  private clearBreakpointsWhenTooMany(breakpointsSetting: Setting<unknown[]>, maxBreakpointsCount: number): void {\n    // If there are too many breakpoints in a storage, it is likely due to a recent bug that caused\n    // periodical breakpoints duplication leading to inspector slowness.\n    if (breakpointsSetting.get().length > maxBreakpointsCount) {\n      breakpointsSetting.set([]);\n    }\n  }\n}\n/* eslint-enable @typescript-eslint/no-explicit-any */\n\nexport const enum SettingStorageType {\n  /** Persists with the active Chrome profile but also syncs the settings across devices via Chrome Sync. */\n  SYNCED = 'Synced',\n  /**\n   * Persists with the active Chrome profile, but not synchronized to other devices.\n   * The default SettingStorageType of createSetting().\n   */\n  GLOBAL = 'Global',\n  /** Uses Window.localStorage. Not recommended, legacy. */\n  LOCAL = 'Local',\n  /**\n   * Session storage dies when DevTools window closes. Useful for atypical conditions that should be reverted when the\n   * user is done with their task. (eg Emulation modes, Debug overlays). These are also not carried into/out of incognito\n   */\n  SESSION = 'Session',\n}\n\nexport function moduleSetting(settingName: string): Setting<unknown> {\n  return Settings.instance().moduleSetting(settingName);\n}\n\nexport function settingForTest(settingName: string): Setting<unknown> {\n  return Settings.instance().settingForTest(settingName);\n}\n\nexport {\n  getLocalizedSettingsCategory,\n  maybeRemoveSettingExtension,\n  RegExpSettingItem,\n  registerSettingExtension,\n  registerSettingsForTest,\n  resetSettings,\n  SettingCategory,\n  SettingExtensionOption,\n  SettingRegistration,\n  SettingType,\n};\n\nexport interface Serializer<I, O> {\n  stringify: (value: I) => string;\n  parse: (value: string) => O;\n}\n\nexport interface SimpleSettingOption {\n  value: string|boolean;\n  title: string;\n  text?: string;\n  raw?: boolean;\n}\n", "// Copyright 2014 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nexport interface HistoryEntry {\n  valid(): boolean;\n\n  reveal(): void;\n}\n\nexport class SimpleHistoryManager {\n  #entries: HistoryEntry[];\n  #activeEntryIndex: number;\n  #coalescingReadonly: number;\n  readonly #historyDepth: number;\n  constructor(historyDepth: number) {\n    this.#entries = [];\n    this.#activeEntryIndex = -1;\n\n    // Lock is used to make sure that reveal() does not\n    // make any changes to the history while we are\n    // rolling back or rolling over.\n    this.#coalescingReadonly = 0;\n    this.#historyDepth = historyDepth;\n  }\n\n  private readOnlyLock(): void {\n    ++this.#coalescingReadonly;\n  }\n\n  private releaseReadOnlyLock(): void {\n    --this.#coalescingReadonly;\n  }\n\n  private getPreviousValidIndex(): number {\n    if (this.empty()) {\n      return -1;\n    }\n\n    let revealIndex = this.#activeEntryIndex - 1;\n    while (revealIndex >= 0 && !this.#entries[revealIndex].valid()) {\n      --revealIndex;\n    }\n    if (revealIndex < 0) {\n      return -1;\n    }\n\n    return revealIndex;\n  }\n\n  private getNextValidIndex(): number {\n    let revealIndex = this.#activeEntryIndex + 1;\n\n    while (revealIndex < this.#entries.length && !this.#entries[revealIndex].valid()) {\n      ++revealIndex;\n    }\n    if (revealIndex >= this.#entries.length) {\n      return -1;\n    }\n\n    return revealIndex;\n  }\n\n  private readOnly(): boolean {\n    return Boolean(this.#coalescingReadonly);\n  }\n\n  empty(): boolean {\n    return !this.#entries.length;\n  }\n\n  active(): HistoryEntry|null {\n    return this.empty() ? null : this.#entries[this.#activeEntryIndex];\n  }\n\n  push(entry: HistoryEntry): void {\n    if (this.readOnly()) {\n      return;\n    }\n    if (!this.empty()) {\n      this.#entries.splice(this.#activeEntryIndex + 1);\n    }\n    this.#entries.push(entry);\n    if (this.#entries.length > this.#historyDepth) {\n      this.#entries.shift();\n    }\n    this.#activeEntryIndex = this.#entries.length - 1;\n  }\n\n  canRollback(): boolean {\n    return this.getPreviousValidIndex() >= 0;\n  }\n\n  canRollover(): boolean {\n    return this.getNextValidIndex() >= 0;\n  }\n\n  rollback(): boolean {\n    const revealIndex = this.getPreviousValidIndex();\n    if (revealIndex === -1) {\n      return false;\n    }\n    this.readOnlyLock();\n    this.#activeEntryIndex = revealIndex;\n    this.#entries[revealIndex].reveal();\n    this.releaseReadOnlyLock();\n\n    return true;\n  }\n\n  rollover(): boolean {\n    const revealIndex = this.getNextValidIndex();\n    if (revealIndex === -1) {\n      return false;\n    }\n\n    this.readOnlyLock();\n    this.#activeEntryIndex = revealIndex;\n    this.#entries[revealIndex].reveal();\n    this.releaseReadOnlyLock();\n\n    return true;\n  }\n}\n", "// Copyright 2015 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nexport interface OutputStream {\n  write(data: string, endOfFile?: boolean): Promise<void>;\n  close(): Promise<void>;\n}\n\nexport class StringOutputStream implements OutputStream {\n  #data = '';\n\n  async write(chunk: string): Promise<void> {\n    this.#data += chunk;\n  }\n\n  async close(): Promise<void> {\n  }\n\n  data(): string {\n    return this.#data;\n  }\n}\n", "// Copyright 2013 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {Trie} from './Trie.js';\n\nexport class TextDictionary {\n  readonly words = new Map<string, number>();\n  readonly index = Trie.newStringTrie();\n\n  addWord(word: string): void {\n    let count = this.words.get(word) || 0;\n    ++count;\n    this.words.set(word, count);\n    this.index.add(word);\n  }\n\n  removeWord(word: string): void {\n    let count = this.words.get(word) || 0;\n    if (!count) {\n      return;\n    }\n    if (count === 1) {\n      this.words.delete(word);\n      this.index.remove(word);\n      return;\n    }\n    --count;\n    this.words.set(word, count);\n  }\n\n  wordsWithPrefix(prefix: string): string[] {\n    return this.index.words(prefix);\n  }\n\n  hasWord(word: string): boolean {\n    return this.words.has(word);\n  }\n\n  wordCount(word: string): number {\n    return this.words.get(word) || 0;\n  }\n\n  reset(): void {\n    this.words.clear();\n    this.index.clear();\n  }\n}\n", "// Copyright 2016 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n// Extracts the element type of an array like, eg:\n// ElementType<number[]> -> number\n// ElementTYpe<string> -> string\ntype ElementType<T extends ArrayLike<unknown>> = T extends ArrayLike<infer E>? E : never;\n\n/**\n * Abstracts some generic operations that have different implementations depending\n * on whether we operate on strings or array of things.\n **/\ninterface TrieableTrait<T extends ArrayLike<ElementType<T>>> {\n  empty(): T;\n  append(base: T, appendage: ElementType<T>): T;\n  slice(base: T, start: number, end: number): T;\n}\n\nexport class Trie<T extends ArrayLike<ElementType<T>>> {\n  #size!: number;\n  #root: number;\n  #edges!: Array<Map<ElementType<T>, number>>;\n  #isWord!: boolean[];\n  #wordsInSubtree!: number[];\n  #freeNodes!: number[];\n  #traitImpl: TrieableTrait<T>;\n\n  constructor(traitImpl: TrieableTrait<T>) {\n    this.#root = 0;\n    this.#traitImpl = traitImpl;\n    this.clear();\n  }\n\n  static newStringTrie(): Trie<string> {\n    return new Trie<string>({\n      empty: () => '',\n      append: (base, appendage) => base + appendage,\n      slice: (base, start, end) => base.slice(start, end),\n    });\n  }\n\n  static newArrayTrie<T extends Array<ElementType<T>>>(): Trie<Array<ElementType<T>>> {\n    return new Trie<Array<ElementType<T>>>({\n      empty: () => [],\n      append: (base, appendage) => base.concat([appendage]),\n      slice: (base, start, end) => base.slice(start, end),\n    });\n  }\n\n  add(word: T): void {\n    let node: number = this.#root;\n    ++this.#wordsInSubtree[this.#root];\n    for (let i = 0; i < word.length; ++i) {\n      const edge = word[i];\n      let next = this.#edges[node].get(edge);\n      if (!next) {\n        if (this.#freeNodes.length) {\n          next = (this.#freeNodes.pop() as number);\n        } else {\n          next = this.#size++;\n          this.#isWord.push(false);\n          this.#wordsInSubtree.push(0);\n          this.#edges.push(new Map());\n        }\n        this.#edges[node].set(edge, next);\n      }\n      ++this.#wordsInSubtree[next];\n      node = next;\n    }\n    this.#isWord[node] = true;\n  }\n\n  remove(word: T): boolean {\n    if (!this.has(word)) {\n      return false;\n    }\n    let node: number = this.#root;\n    --this.#wordsInSubtree[this.#root];\n    for (let i = 0; i < word.length; ++i) {\n      const edge = word[i];\n      const next = this.#edges[node].get(edge) as number;\n      if (!--this.#wordsInSubtree[next]) {\n        this.#edges[node].delete(edge);\n        this.#freeNodes.push(next);\n      }\n      node = next;\n    }\n    this.#isWord[node] = false;\n    return true;\n  }\n\n  has(word: T): boolean {\n    let node: number|undefined = this.#root;\n    for (let i = 0; i < word.length; ++i) {\n      node = this.#edges[node].get(word[i]);\n      if (!node) {\n        return false;\n      }\n    }\n    return this.#isWord[node];\n  }\n\n  words(prefix?: T): T[] {\n    prefix = prefix ?? this.#traitImpl.empty();\n    let node: number|undefined = this.#root;\n    for (let i = 0; i < prefix.length; ++i) {\n      node = this.#edges[node].get(prefix[i]);\n      if (!node) {\n        return [];\n      }\n    }\n    const results: T[] = [];\n    this.dfs(node, prefix, results);\n    return results;\n  }\n\n  private dfs(node: number, prefix: T, results: T[]): void {\n    if (this.#isWord[node]) {\n      results.push(prefix);\n    }\n    const edges = this.#edges[node];\n    for (const [edge, node] of edges) {\n      const newPrefix = this.#traitImpl.append(prefix, edge);\n      this.dfs(node, newPrefix, results);\n    }\n  }\n\n  longestPrefix(word: T, fullWordOnly: boolean): T {\n    let node: number|undefined = this.#root;\n    let wordIndex = 0;\n    for (let i = 0; i < word.length; ++i) {\n      node = this.#edges[node].get(word[i]);\n      if (!node) {\n        break;\n      }\n      if (!fullWordOnly || this.#isWord[node]) {\n        wordIndex = i + 1;\n      }\n    }\n    return this.#traitImpl.slice(word, 0, wordIndex);\n  }\n\n  clear(): void {\n    this.#size = 1;\n    this.#root = 0;\n    this.#edges = [new Map()];\n    this.#isWord = [false];\n    this.#wordsInSubtree = [0];\n    this.#freeNodes = [];\n  }\n}\n", "// Copyright 2014 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nexport class Throttler {\n  readonly #timeout: number;\n  #isRunningProcess: boolean;\n  #asSoonAsPossible: boolean;\n  #process: (() => (void|Promise<unknown>))|null;\n  #lastCompleteTime: number;\n  #scheduler = Promise.withResolvers<unknown>();\n  #processTimeout?: number;\n\n  constructor(timeout: number) {\n    this.#timeout = timeout;\n    this.#isRunningProcess = false;\n    this.#asSoonAsPossible = false;\n    this.#process = null;\n    this.#lastCompleteTime = 0;\n  }\n\n  #processCompleted(): void {\n    this.#lastCompleteTime = this.#getTime();\n    this.#isRunningProcess = false;\n    if (this.#process) {\n      this.#schedule(false);\n    }\n  }\n\n  get process(): (() => (void|Promise<unknown>))|null {\n    return this.#process;\n  }\n\n  get processCompleted(): Promise<unknown>|null {\n    return this.#process ? this.#scheduler.promise : null;\n  }\n\n  #onTimeout(): void {\n    this.#processTimeout = undefined;\n    this.#asSoonAsPossible = false;\n    this.#isRunningProcess = true;\n\n    void Promise.resolve()\n        .then(this.#process)\n        .catch(console.error.bind(console))\n        .then(this.#processCompleted.bind(this))\n        .then(this.#scheduler.resolve);\n    this.#scheduler = Promise.withResolvers();\n    this.#process = null;\n  }\n\n  async schedule(process: () => (void|Promise<unknown>), scheduling = Scheduling.DEFAULT): Promise<void> {\n    // Deliberately skip previous #process.\n    this.#process = process;\n\n    // Run the first scheduled task instantly.\n    const hasScheduledTasks = Boolean(this.#processTimeout) || this.#isRunningProcess;\n    const okToFire = this.#getTime() - this.#lastCompleteTime > this.#timeout;\n    const asSoonAsPossible = scheduling === Scheduling.AS_SOON_AS_POSSIBLE ||\n        (scheduling === Scheduling.DEFAULT && !hasScheduledTasks && okToFire);\n\n    const forceTimerUpdate = asSoonAsPossible && !this.#asSoonAsPossible;\n    this.#asSoonAsPossible = this.#asSoonAsPossible || asSoonAsPossible;\n\n    this.#schedule(forceTimerUpdate);\n\n    await this.#scheduler.promise;\n  }\n\n  #schedule(forceTimerUpdate: boolean): void {\n    if (this.#isRunningProcess) {\n      return;\n    }\n    if (this.#processTimeout && !forceTimerUpdate) {\n      return;\n    }\n\n    clearTimeout(this.#processTimeout);\n\n    const timeout = this.#asSoonAsPossible ? 0 : this.#timeout;\n    this.#processTimeout = window.setTimeout(this.#onTimeout.bind(this), timeout);\n  }\n\n  #getTime(): number {\n    return window.performance.now();\n  }\n}\n\nexport const enum Scheduling {\n  // If the throttler has run another task recently (i.e. time since the last run is less then the\n  // throttling delay), schedule the task to be run after the throttling delay. Otherwise scheule\n  // the task after the next tick.\n  DEFAULT = 'Default',\n  // Schedule the task to run at the next tick, even if the throttler has run another task recently.\n  AS_SOON_AS_POSSIBLE = 'AsSoonAsPossible',\n  // Schedule the task to run after the throttling delay, even if the throttler has not run any\n  // task recently.\n  DELAYED = 'Delayed',\n}\n", "// Copyright 2014 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nexport class WorkerWrapper {\n  readonly #workerPromise: Promise<Worker>;\n  #disposed?: boolean;\n  #rejectWorkerPromise?: (error: Error) => void;\n\n  private constructor(workerLocation: URL) {\n    this.#workerPromise = new Promise((fulfill, reject) => {\n      this.#rejectWorkerPromise = reject;\n      const worker = new Worker(workerLocation, {type: 'module'});\n      worker.onerror = event => {\n        console.error(`Failed to load worker for ${workerLocation.href}:`, event);\n      };\n      worker.onmessage = (event: MessageEvent<unknown>) => {\n        console.assert(event.data === 'workerReady');\n        worker.onmessage = null;\n        fulfill(worker);\n      };\n    });\n  }\n\n  static fromURL(url: URL): WorkerWrapper {\n    return new WorkerWrapper(url);\n  }\n\n  postMessage(message: unknown, transfer?: Transferable[]): void {\n    void this.#workerPromise.then(worker => {\n      if (!this.#disposed) {\n        worker.postMessage(message, transfer ?? []);\n      }\n    });\n  }\n\n  dispose(): void {\n    this.#disposed = true;\n    void this.#workerPromise.then(worker => worker.terminate());\n  }\n\n  terminate(immediately = false): void {\n    if (immediately) {\n      this.#rejectWorkerPromise?.(new Error('Worker terminated'));\n    }\n    this.dispose();\n  }\n\n  set onmessage(listener: (event: MessageEvent) => void) {\n    void this.#workerPromise.then(worker => {\n      worker.onmessage = listener;\n    });\n  }\n\n  set onerror(listener: (event: Event) => void) {\n    void this.#workerPromise.then(worker => {\n      worker.onerror = listener;\n    });\n  }\n}\n", "// Copyright 2019 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as App from './App.js';\nimport * as AppProvider from './AppProvider.js';\nimport * as Base64 from './Base64.js';\nimport * as CharacterIdMap from './CharacterIdMap.js';\nimport * as Color from './Color.js';\nimport * as ColorConverter from './ColorConverter.js';\nimport * as ColorUtils from './ColorUtils.js';\nimport * as Console from './Console.js';\nimport * as Debouncer from './Debouncer.js';\nimport * as EventTarget from './EventTarget.js';\nimport * as Gzip from './Gzip.js';\nimport * as JavaScriptMetaData from './JavaScriptMetaData.js';\nimport * as Lazy from './Lazy.js';\nimport * as Linkifier from './Linkifier.js';\nimport * as MapWithDefault from './MapWithDefault.js';\nimport * as Mutex from './Mutex.js';\nimport * as ObjectWrapper from './Object.js';\nimport * as ParsedURL from './ParsedURL.js';\nimport * as Progress from './Progress.js';\nimport * as QueryParamHandler from './QueryParamHandler.js';\nimport * as ResolverBase from './ResolverBase.js';\nimport * as ResourceType from './ResourceType.js';\nimport * as ReturnToPanel from './ReturnToPanel.js';\nimport * as Revealer from './Revealer.js';\nimport * as Runnable from './Runnable.js';\nimport * as SegmentedRange from './SegmentedRange.js';\nimport * as SettingRegistration from './SettingRegistration.js';\nimport * as Settings from './Settings.js';\nimport * as SimpleHistoryManager from './SimpleHistoryManager.js';\nimport * as StringOutputStream from './StringOutputStream.js';\nimport * as TextDictionary from './TextDictionary.js';\nimport * as Throttler from './Throttler.js';\nimport * as Trie from './Trie.js';\nimport * as Worker from './Worker.js';\n\n/*\n * This is re-exported here because we moved UIString into platform from\n * common and wanted to avoid a huge rename of imports. A future CL will\n * update all references to `Common.UIString` to `Platform.UIString`.\n */\nexport {UIString} from '../platform/platform.js';\nexport {\n  App,\n  AppProvider,\n  Base64,\n  CharacterIdMap,\n  Color,\n  ColorConverter,\n  ColorUtils,\n  Console,\n  Debouncer,\n  EventTarget,\n  Gzip,\n  JavaScriptMetaData,\n  Lazy,\n  Linkifier,\n  MapWithDefault,\n  Mutex,\n  ObjectWrapper,\n  ParsedURL,\n  Progress,\n  QueryParamHandler,\n  ResolverBase,\n  ResourceType,\n  ReturnToPanel,\n  Revealer,\n  Runnable,\n  SegmentedRange,\n  SettingRegistration,\n  Settings,\n  SimpleHistoryManager,\n  StringOutputStream,\n  TextDictionary,\n  Throttler,\n  Trie,\n  Worker,\n};\n"],
  "mappings": "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",
  "names": ["contrastRatio", "luminance", "desiredLuminance", "match", "p", "q", "h", "luminance", "desiredLuminance", "candidateHSVA", "FrontendMessageSource", "Platform", "securityOrigin", "pathText", "queryText", "obj", "i18n", "UIStrings", "str_", "i18nLazyString", "Platform", "i18n", "Root", "UIStrings", "str_", "Platform", "Root", "node"]
}
