{"version":3,"file":"InspectorFrontendHost.js","sourceRoot":"","sources":["../../../../../../front_end/core/host/InspectorFrontendHost.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2009 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../common/common.js';\nimport * as i18n from '../i18n/i18n.js';\nimport * as Platform from '../platform/platform.js';\nimport * as Root from '../root/root.js';\n\nimport {\n  type AidaClientResult,\n  type AidaCodeCompleteResult,\n  type CanShowSurveyResult,\n  type ChangeEvent,\n  type ClickEvent,\n  type ContextMenuDescriptor,\n  type DispatchHttpRequestRequest,\n  type DispatchHttpRequestResult,\n  type DoAidaConversationResult,\n  type DragEvent,\n  type EnumeratedHistogram,\n  EventDescriptors,\n  Events,\n  type EventTypes,\n  type ExtensionDescriptor,\n  type FunctionCallEvent,\n  type HoverEvent,\n  type ImpressionEvent,\n  type InspectorFrontendHostAPI,\n  type KeyDownEvent,\n  type LoadNetworkResourceResult,\n  type ResizeEvent,\n  type SettingAccessEvent,\n  type ShowSurveyResult,\n  type SyncInformation,\n} from './InspectorFrontendHostAPI.js';\nimport {streamWrite as resourceLoaderStreamWrite} from './ResourceLoader.js';\n\nconst UIStrings = {\n  /**\n   * @description Document title in Inspector Frontend Host of the DevTools window\n   * @example {example.com} PH1\n   */\n  devtoolsS: 'DevTools - {PH1}',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('core/host/InspectorFrontendHost.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nconst MAX_RECORDED_HISTOGRAMS_SIZE = 100;\nconst OVERRIDES_FILE_SYSTEM_PATH = '/overrides' as Platform.DevToolsPath.RawPathString;\n\n/**\n * The `InspectorFrontendHostStub` is a stub interface used the frontend is loaded like a webpage. Examples:\n *   - devtools://devtools/bundled/devtools_app.html\n *   - https://chrome-devtools-frontend.appspot.com/serve_rev/@030cc140435b0152645522b9864b75cac6c0a854/worker_app.html\n *   - http://localhost:9222/devtools/inspector.html?ws=localhost:9222/devtools/page/xTARGET_IDx\n *\n * When the frontend runs within the native embedder, then the InspectorFrontendHostAPI methods are provided\n * by devtools_compatibility.js. Those leverage `DevToolsAPI.sendMessageToEmbedder()` which match up with\n * the embedder API defined here: https://source.chromium.org/search?q=f:devtools%20f:dispatcher%20f:cc%20symbol:CreateForDevToolsFrontend&sq=&ss=chromium%2Fchromium%2Fsrc\n * The native implementations live in devtools_ui_bindings.cc: https://source.chromium.org/chromium/chromium/src/+/main:chrome/browser/devtools/devtools_ui_bindings.cc\n */\nexport class InspectorFrontendHostStub implements InspectorFrontendHostAPI {\n  readonly #urlsBeingSaved = new Map<\n      Platform.DevToolsPath.RawPathString|Platform.DevToolsPath.UrlString, {isBase64: boolean, buffer: string[]}>();\n  #fileSystem: FileSystem|null = null;\n  /**\n   * Injected bellow in both stub and normal runs via:\n   * ```ts\n   * InspectorFrontendHostInstance.events = new Common.ObjectWrapper.ObjectWrapper();\n   * ```\n   */\n  declare events: Common.EventTarget.EventTarget<EventTypes>;\n\n  recordedCountHistograms:\n      Array<{histogramName: string, sample: number, min: number, exclusiveMax: number, bucketSize: number}> = [];\n  recordedEnumeratedHistograms: Array<{actionName: EnumeratedHistogram, actionCode: number}> = [];\n  recordedPerformanceHistograms: Array<{histogramName: string, duration: number}> = [];\n\n  constructor() {\n    // Guard against errors should this file ever be imported at the top level\n    // within a worker - in which case this constructor is run. If there's no\n    // document, we can early exit.\n    if (typeof document === 'undefined') {\n      return;\n    }\n\n    function stopEventPropagation(this: InspectorFrontendHostAPI, event: KeyboardEvent): void {\n      // Let browser handle Ctrl+/Ctrl- shortcuts in hosted mode.\n      const zoomModifier = this.platform() === 'mac' ? event.metaKey : event.ctrlKey;\n      if (zoomModifier && (event.key === '+' || event.key === '-')) {\n        event.stopPropagation();\n      }\n    }\n\n    document.addEventListener('keydown', event => {\n      stopEventPropagation.call(this, (event));\n    }, true);\n  }\n\n  platform(): string {\n    const userAgent = navigator.userAgent;\n    if (userAgent.includes('Windows NT')) {\n      return 'windows';\n    }\n    if (userAgent.includes('Mac OS X')) {\n      return 'mac';\n    }\n    return 'linux';\n  }\n\n  loadCompleted(): void {\n  }\n\n  bringToFront(): void {\n  }\n\n  closeWindow(): void {\n  }\n\n  setIsDocked(_isDocked: boolean, callback: () => void): void {\n    window.setTimeout(callback, 0);\n  }\n\n  showSurvey(_trigger: string, callback: (arg0: ShowSurveyResult) => void): void {\n    window.setTimeout(() => callback({surveyShown: false}), 0);\n  }\n\n  canShowSurvey(_trigger: string, callback: (arg0: CanShowSurveyResult) => void): void {\n    window.setTimeout(() => callback({canShowSurvey: false}), 0);\n  }\n\n  /**\n   * Requests inspected page to be placed atop of the inspector frontend with specified bounds.\n   */\n  setInspectedPageBounds(_bounds: {\n    x: number,\n    y: number,\n    width: number,\n    height: number,\n  }): void {\n  }\n\n  inspectElementCompleted(): void {\n  }\n\n  setInjectedScriptForOrigin(_origin: string, _script: string): void {\n  }\n\n  inspectedURLChanged(url: Platform.DevToolsPath.UrlString): void {\n    document.title = i18nString(UIStrings.devtoolsS, {PH1: url.replace(/^https?:\\/\\//, '')});\n  }\n\n  copyText(text: string|null|undefined): void {\n    if (text === undefined || text === null) {\n      return;\n    }\n    void navigator.clipboard.writeText(text);\n  }\n\n  openInNewTab(url: Platform.DevToolsPath.UrlString): void {\n    if (Common.ParsedURL.schemeIs(url, 'javascript:')) {\n      return;\n    }\n    window.open(url, '_blank');\n  }\n\n  openSearchResultsInNewTab(_query: string): void {\n    Common.Console.Console.instance().error(\n        'Search is not enabled in hosted mode. Please inspect using chrome://inspect');\n  }\n\n  showItemInFolder(_fileSystemPath: Platform.DevToolsPath.RawPathString): void {\n    Common.Console.Console.instance().error(\n        'Show item in folder is not enabled in hosted mode. Please inspect using chrome://inspect');\n  }\n\n  // Reminder: the methods in this class belong to InspectorFrontendHostStub and are typically not executed.\n  // InspectorFrontendHostStub is ONLY used in the uncommon case of devtools not being embedded. For example: trace.cafe or http://localhost:9222/devtools/inspector.html?ws=localhost:9222/devtools/page/xTARGET_IDx\n  save(\n      url: Platform.DevToolsPath.RawPathString|Platform.DevToolsPath.UrlString, content: string, _forceSaveAs: boolean,\n      isBase64: boolean): void {\n    let buffer = this.#urlsBeingSaved.get(url)?.buffer;\n    if (!buffer) {\n      buffer = [];\n      this.#urlsBeingSaved.set(url, {isBase64, buffer});\n    }\n    buffer.push(content);\n    this.events.dispatchEventToListeners(Events.SavedURL, {url, fileSystemPath: url});\n  }\n\n  append(url: Platform.DevToolsPath.RawPathString|Platform.DevToolsPath.UrlString, content: string): void {\n    const buffer = this.#urlsBeingSaved.get(url)?.buffer;\n    if (buffer) {\n      buffer.push(content);\n      this.events.dispatchEventToListeners(Events.AppendedToURL, url);\n    }\n  }\n\n  close(url: Platform.DevToolsPath.RawPathString|Platform.DevToolsPath.UrlString): void {\n    const {isBase64, buffer} = this.#urlsBeingSaved.get(url) || {isBase64: false, buffer: []};\n    this.#urlsBeingSaved.delete(url);\n    let fileName = '';\n\n    if (url) {\n      try {\n        const trimmed = Platform.StringUtilities.trimURL(url);\n        fileName = Platform.StringUtilities.removeURLFragment(trimmed);\n      } catch {\n        // If url is not a valid URL, it is probably a filename.\n        fileName = url;\n      }\n    }\n\n    /* eslint-disable-next-line @devtools/no-imperative-dom-api */\n    const link = document.createElement('a');\n    link.download = fileName;\n    let blob;\n    if (isBase64) {\n      const bytes = Common.Base64.decode(buffer.join(''));\n      blob = new Blob([bytes], {type: 'application/gzip'});\n    } else {\n      blob = new Blob(buffer, {type: 'text/plain'});\n    }\n    const blobUrl = URL.createObjectURL(blob);\n    link.href = blobUrl;\n    link.click();\n    URL.revokeObjectURL(blobUrl);\n  }\n\n  sendMessageToBackend(_message: string): void {\n  }\n\n  recordCountHistogram(histogramName: string, sample: number, min: number, exclusiveMax: number, bucketSize: number):\n      void {\n    if (this.recordedCountHistograms.length >= MAX_RECORDED_HISTOGRAMS_SIZE) {\n      this.recordedCountHistograms.shift();\n    }\n    this.recordedCountHistograms.push({histogramName, sample, min, exclusiveMax, bucketSize});\n  }\n\n  recordEnumeratedHistogram(actionName: EnumeratedHistogram, actionCode: number, _bucketSize: number): void {\n    if (this.recordedEnumeratedHistograms.length >= MAX_RECORDED_HISTOGRAMS_SIZE) {\n      this.recordedEnumeratedHistograms.shift();\n    }\n    this.recordedEnumeratedHistograms.push({actionName, actionCode});\n  }\n\n  recordPerformanceHistogram(histogramName: string, duration: number): void {\n    if (this.recordedPerformanceHistograms.length >= MAX_RECORDED_HISTOGRAMS_SIZE) {\n      this.recordedPerformanceHistograms.shift();\n    }\n    this.recordedPerformanceHistograms.push({histogramName, duration});\n  }\n\n  recordUserMetricsAction(_umaName: string): void {\n  }\n\n  recordNewBadgeUsage(_featureName: string): void {\n  }\n\n  connectAutomaticFileSystem(\n      _fileSystemPath: Platform.DevToolsPath.RawPathString,\n      _fileSystemUUID: string,\n      _addIfMissing: boolean,\n      callback: (result: {success: boolean}) => void,\n      ): void {\n    queueMicrotask(() => callback({success: false}));\n  }\n\n  disconnectAutomaticFileSystem(_fileSystemPath: Platform.DevToolsPath.RawPathString): void {\n  }\n\n  requestFileSystems(): void {\n    this.events.dispatchEventToListeners(Events.FileSystemsLoaded, []);\n  }\n\n  addFileSystem(_type?: string): void {\n    const onFileSystem = (fs: FileSystem): void => {\n      this.#fileSystem = fs;\n      const fileSystem = {\n        fileSystemName: 'sandboxedRequestedFileSystem',\n        fileSystemPath: OVERRIDES_FILE_SYSTEM_PATH,\n        rootURL: 'filesystem:devtools://devtools/isolated/',\n        type: 'overrides' as const,\n      };\n      this.events.dispatchEventToListeners(Events.FileSystemAdded, {fileSystem});\n    };\n    window.webkitRequestFileSystem(window.TEMPORARY, 1024 * 1024, onFileSystem);\n  }\n\n  removeFileSystem(_fileSystemPath: Platform.DevToolsPath.RawPathString): void {\n    const removalCallback = (entries: Entry[]): void => {\n      entries.forEach(entry => {\n        if (entry.isDirectory) {\n          (entry as DirectoryEntry).removeRecursively(() => {});\n        } else if (entry.isFile) {\n          entry.remove(() => {});\n        }\n      });\n    };\n\n    if (this.#fileSystem) {\n      this.#fileSystem.root.createReader().readEntries(removalCallback);\n    }\n\n    this.#fileSystem = null;\n    this.events.dispatchEventToListeners(Events.FileSystemRemoved, OVERRIDES_FILE_SYSTEM_PATH);\n  }\n\n  isolatedFileSystem(_fileSystemId: string, _registeredName: string): FileSystem|null {\n    return this.#fileSystem;\n  }\n\n  loadNetworkResource(\n      url: string, _headers: string, streamId: number, callback: (arg0: LoadNetworkResourceResult) => void): void {\n    fetch(url)\n        .then(async result => {\n          const respBuffer = await result.arrayBuffer();\n          const text = await Common.Gzip.arrayBufferToString(respBuffer);\n          return text;\n        })\n        .then(function(text) {\n          resourceLoaderStreamWrite(streamId, text);\n          callback({\n            statusCode: 200,\n            headers: undefined,\n            messageOverride: undefined,\n            netError: undefined,\n            netErrorName: undefined,\n            urlValid: undefined,\n          });\n        })\n        .catch(function() {\n          callback({\n            statusCode: 404,\n            headers: undefined,\n            messageOverride: undefined,\n            netError: undefined,\n            netErrorName: undefined,\n            urlValid: undefined,\n          });\n        });\n  }\n\n  registerPreference(_name: string, _options: {synced?: boolean}): void {\n  }\n\n  getPreferences(callback: (arg0: Record<string, string>) => void): void {\n    const prefs: Record<string, string> = {};\n    for (const name in window.localStorage) {\n      prefs[name] = window.localStorage[name];\n    }\n    callback(prefs);\n  }\n\n  getPreference(name: string, callback: (arg0: string) => void): void {\n    callback(window.localStorage[name]);\n  }\n\n  setPreference(name: string, value: string): void {\n    window.localStorage[name] = value;\n  }\n\n  removePreference(name: string): void {\n    delete window.localStorage[name];\n  }\n\n  clearPreferences(): void {\n    window.localStorage.clear();\n  }\n\n  getSyncInformation(callback: (arg0: SyncInformation) => void): void {\n    if ('getSyncInformationForTesting' in globalThis) {\n      // @ts-expect-error for testing\n      return callback(globalThis.getSyncInformationForTesting());\n    }\n    callback({\n      isSyncActive: false,\n      arePreferencesSynced: false,\n    });\n  }\n\n  getHostConfig(callback: (hostConfig: Root.Runtime.HostConfig) => void): void {\n    // This HostConfig config is used in the hosted mode (see the\n    // comment on top of this class). Only add non-default config params\n    // here that you want to also apply in the hosted mode. For tests\n    // use the hostConfigForTesting override.\n    const hostConfigForHostedMode: Root.Runtime.HostConfig = {\n      devToolsVeLogging: {\n        enabled: true,\n      },\n      thirdPartyCookieControls: {\n        thirdPartyCookieMetadataEnabled: true,\n        thirdPartyCookieHeuristicsEnabled: true,\n        managedBlockThirdPartyCookies: 'Unset',\n      },\n      devToolsIpProtectionPanelInDevTools: {\n        enabled: false,\n      },\n      devToolsFlexibleLayout: {\n        verticalDrawerEnabled: true,\n      },\n      devToolsStartingStyleDebugging: {\n        enabled: false,\n      },\n    };\n    if ('hostConfigForTesting' in globalThis) {\n      const {hostConfigForTesting} = (globalThis as unknown as {hostConfigForTesting: Root.Runtime.HostConfig});\n      for (const key of Object.keys(hostConfigForTesting)) {\n        const mergeEntry = <K extends keyof Root.Runtime.HostConfig>(key: K): void => {\n          if (typeof hostConfigForHostedMode[key] === 'object' && typeof hostConfigForTesting[key] === 'object') {\n            // If the config is an object, merge the settings, but preferring\n            // the hostConfigForTesting values over the result values.\n            hostConfigForHostedMode[key] = {...hostConfigForHostedMode[key], ...hostConfigForTesting[key]};\n          } else {\n            // Override with the testing config if the value is present + not null/undefined.\n            hostConfigForHostedMode[key] = hostConfigForTesting[key] ?? hostConfigForHostedMode[key];\n          }\n        };\n        mergeEntry(key as keyof Root.Runtime.HostConfig);\n      }\n    }\n    callback(hostConfigForHostedMode);\n  }\n\n  upgradeDraggedFileSystemPermissions(_fileSystem: FileSystem): void {\n  }\n\n  indexPath(_requestId: number, _fileSystemPath: Platform.DevToolsPath.RawPathString, _excludedFolders: string): void {\n  }\n\n  stopIndexing(_requestId: number): void {\n  }\n\n  searchInPath(_requestId: number, _fileSystemPath: Platform.DevToolsPath.RawPathString, _query: string): void {\n  }\n\n  zoomFactor(): number {\n    return 1;\n  }\n\n  zoomIn(): void {\n  }\n\n  zoomOut(): void {\n  }\n\n  resetZoom(): void {\n  }\n\n  setWhitelistedShortcuts(_shortcuts: string): void {\n  }\n\n  setEyeDropperActive(_active: boolean): void {\n  }\n\n  showCertificateViewer(_certChain: string[]): void {\n  }\n\n  reattach(_callback: () => void): void {\n  }\n\n  readyForTest(): void {\n  }\n\n  connectionReady(): void {\n  }\n\n  setOpenNewWindowForPopups(_value: boolean): void {\n  }\n\n  setDevicesDiscoveryConfig(_config: Adb.Config): void {\n  }\n\n  setDevicesUpdatesEnabled(_enabled: boolean): void {\n  }\n\n  openRemotePage(_browserId: string, _url: string): void {\n  }\n\n  openNodeFrontend(): void {\n  }\n\n  showContextMenuAtPoint(_x: number, _y: number, _items: ContextMenuDescriptor[], _document: Document): void {\n    throw new Error('Soft context menu should be used');\n  }\n\n  /**\n   * Think of **Hosted mode** as \"non-embedded\" mode; you can see a devtools frontend URL as the tab's URL. It's an atypical way that DevTools is run.\n   * Whereas in **Non-hosted** (aka \"embedded\"), DevTools is embedded and fully dockable. It's the common way DevTools is run.\n   *\n   * **Hosted mode** == we're using the `InspectorFrontendHostStub`. impl. (@see `InspectorFrontendHostStub` class comment)\n   * Whereas with **non-hosted** mode, native `DevToolsEmbedderMessageDispatcher` is used for CDP and more.\n   *\n   * Relationships to other signals:\n   * - Hosted-ness does not indicate whether the frontend is _connected to a valid CDP target_.\n   * - Being _\"dockable\"_ (aka `canDock`) is typically aligned but technically orthogonal.\n   * - It's unrelated to the _tab's (main frame's) URL_. Though in non-hosted, the devtools frame origin will always be `devtools://devtools`.\n   *\n   *  | Example case                                         | Mode           | Example devtools                                                                   |\n   *  | :--------------------------------------------------- | :------------- | :---------------------------------------------------------------------------- |\n   *  | tab URL: anything. embedded DevTools w/ native CDP bindings    | **NOT Hosted** | `devtools://devtools/bundled/devtools_app.html?targetType=tab&...`            |\n   *  | tab URL: `devtools://…?ws=…`                | **Hosted**     | `devtools://devtools/bundled/devtools_app.html?ws=localhost:9228/...`         |\n   *  | tab URL: `devtools://…` but no connection   | **Hosted**     | `devtools://devtools/bundled/devtools_app.html`                               |\n   *  | tab URL: `https://…` but no connection      | **Hosted**     | `https://chrome-devtools-frontend.appspot.com/serve_rev/@.../worker_app.html` |\n   *  | tab URL: `http://…?ws=` (connected)         | **Hosted**     | `http://localhost:9222/devtools/inspector.html?ws=localhost:9222/...`         |\n   */\n  isHostedMode(): boolean {\n    return true;\n  }\n\n  setAddExtensionCallback(_callback: (arg0: ExtensionDescriptor) => void): void {\n    // Extensions are not supported in hosted mode.\n  }\n\n  async initialTargetId(): Promise<string|null> {\n    return null;\n  }\n\n  doAidaConversation(_request: string, _streamId: number, callback: (result: DoAidaConversationResult) => void): void {\n    callback({\n      error: 'Not implemented',\n    });\n  }\n\n  registerAidaClientEvent(_request: string, callback: (result: AidaClientResult) => void): void {\n    callback({\n      error: 'Not implemented',\n    });\n  }\n\n  aidaCodeComplete(_request: string, callback: (result: AidaCodeCompleteResult) => void): void {\n    callback({\n      error: 'Not implemented',\n    });\n  }\n\n  dispatchHttpRequest(_request: DispatchHttpRequestRequest, callback: (result: DispatchHttpRequestResult) => void):\n      void {\n    callback({error: 'Not implemented'});\n  }\n\n  recordImpression(_event: ImpressionEvent): void {\n  }\n  recordResize(_event: ResizeEvent): void {\n  }\n  recordClick(_event: ClickEvent): void {\n  }\n  recordHover(_event: HoverEvent): void {\n  }\n  recordDrag(_event: DragEvent): void {\n  }\n  recordChange(_event: ChangeEvent): void {\n  }\n  recordKeyDown(_event: KeyDownEvent): void {\n  }\n  recordSettingAccess(_event: SettingAccessEvent): void {\n  }\n  recordFunctionCall(_event: FunctionCallEvent): void {\n  }\n}\n\n// @ts-expect-error Global injected by devtools_compatibility.js\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport let InspectorFrontendHostInstance: InspectorFrontendHostStub = globalThis.InspectorFrontendHost;\n\nclass InspectorFrontendAPIImpl {\n  constructor() {\n    for (const descriptor of EventDescriptors) {\n      // @ts-expect-error Dispatcher magic\n      this[descriptor[0]] = this.dispatch.bind(this, descriptor[0], descriptor[1], descriptor[2]);\n    }\n  }\n\n  private dispatch(name: Events, signature: string[], _runOnceLoaded: boolean, ...params: string[]): void {\n    // Single argument methods get dispatched with the param.\n    if (signature.length < 2) {\n      try {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        InspectorFrontendHostInstance.events.dispatchEventToListeners<any>(name, params[0]);\n      } catch (error) {\n        console.error(error + ' ' + error.stack);\n      }\n      return;\n    }\n    const data: Record<string, string> = {};\n    for (let i = 0; i < signature.length; ++i) {\n      data[signature[i]] = params[i];\n    }\n    try {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      InspectorFrontendHostInstance.events.dispatchEventToListeners<any>(name, data);\n    } catch (error) {\n      console.error(error + ' ' + error.stack);\n    }\n  }\n\n  streamWrite(id: number, chunk: string): void {\n    resourceLoaderStreamWrite(id, chunk);\n  }\n}\n\n/**\n * Used in `front_end/devtools_compatibility.js` to verify that calls from there\n * are valid.\n */\nexport type InspectorFrontendAPIImplMethods = keyof InspectorFrontendAPIImpl;\n\n(function(): void {\n\nfunction initializeInspectorFrontendHost(): void {\n  if (!InspectorFrontendHostInstance) {\n    // Instantiate stub for web-hosted mode if necessary.\n    // @ts-expect-error Global injected by devtools_compatibility.js\n    globalThis.InspectorFrontendHost = InspectorFrontendHostInstance = new InspectorFrontendHostStub();\n  } else {\n    // Otherwise add stubs for missing methods that are declared in the interface.\n    const proto = InspectorFrontendHostStub.prototype;\n    for (const name of (Object.getOwnPropertyNames(proto) as Array<keyof InspectorFrontendHostAPI>)) {\n      const stub = proto[name];\n      if (typeof stub !== 'function' || InspectorFrontendHostInstance[name]) {\n        continue;\n      }\n\n      console.error(`Incompatible embedder: method Host.InspectorFrontendHost.${name} is missing. Using stub instead.`);\n      // @ts-expect-error Global injected by devtools_compatibility.js\n      InspectorFrontendHostInstance[name] = stub;\n    }\n  }\n\n  // Attach the events object.\n  InspectorFrontendHostInstance.events = new Common.ObjectWrapper.ObjectWrapper();\n}\n\n// FIXME: This file is included into both apps, since the devtools_app needs the InspectorFrontendHostAPI only,\n// so the host instance should not be initialized there.\ninitializeInspectorFrontendHost();\n// @ts-expect-error Global injected by devtools_compatibility.js\nglobalThis.InspectorFrontendAPI = new InspectorFrontendAPIImpl();\n})();\n\nexport function isUnderTest(prefs?: Record<string, string>): boolean {\n  // Integration tests rely on test queryParam.\n  if (Root.Runtime.Runtime.queryParam('test')) {\n    return true;\n  }\n  // Browser tests rely on prefs.\n  if (prefs) {\n    return prefs['isUnderTest'] === 'true';\n  }\n  return Common.Settings.Settings.hasInstance() &&\n      Common.Settings.Settings.instance().createSetting('isUnderTest', false).get();\n}\n"]}