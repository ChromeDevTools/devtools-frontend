{
  "version": 3,
  "sources": ["../../../../../../front_end/core/host/AidaClient.ts", "../../../../../../front_end/core/host/InspectorFrontendHost.ts", "../../../../../../front_end/core/host/InspectorFrontendHostAPI.ts", "../../../../../../front_end/core/host/ResourceLoader.ts", "../../../../../../front_end/core/host/DispatchHttpRequestClient.ts", "../../../../../../front_end/core/host/GdpClient.ts", "../../../../../../front_end/core/host/Platform.ts", "../../../../../../front_end/core/host/UserMetrics.ts", "host.prebundle.ts"],
  "sourcesContent": ["// Copyright 2023 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../common/common.js';\nimport * as Root from '../root/root.js';\n\nimport * as DispatchHttpRequestClient from './DispatchHttpRequestClient.js';\nimport {InspectorFrontendHostInstance} from './InspectorFrontendHost.js';\nimport type {AidaClientResult, AidaCodeCompleteResult, SyncInformation} from './InspectorFrontendHostAPI.js';\nimport {bindOutputStream} from './ResourceLoader.js';\n\nexport enum Role {\n  /** Provide this role when giving a function call response  */\n  ROLE_UNSPECIFIED = 0,\n  /** Tags the content came from the user */\n  USER = 1,\n  /** Tags the content came from the LLM */\n  MODEL = 2,\n}\n\nexport const enum Rating {\n  // Resets the vote to null in the logs\n  SENTIMENT_UNSPECIFIED = 'SENTIMENT_UNSPECIFIED',\n  POSITIVE = 'POSITIVE',\n  NEGATIVE = 'NEGATIVE',\n}\n\n/**\n * A `Content` represents a single turn message.\n */\nexport interface Content {\n  parts: Part[];\n  /** The producer of the content. */\n  role: Role;\n}\n\nexport type Part = {\n  text: string,\n}|{\n  functionCall: {\n    name: string,\n    args: Record<string, unknown>,\n  },\n}|{\n  functionResponse: {\n    name: string,\n    response: Record<string, unknown>,\n  },\n}|{\n  /** Inline media bytes. */\n  inlineData: MediaBlob,\n};\n\nexport const enum ParametersTypes {\n  STRING = 1,\n  NUMBER = 2,\n  INTEGER = 3,\n  BOOLEAN = 4,\n  ARRAY = 5,\n  OBJECT = 6,\n}\n\ninterface BaseFunctionParam {\n  description: string;\n  nullable?: boolean;\n}\n\nexport interface FunctionPrimitiveParams extends BaseFunctionParam {\n  type: ParametersTypes.BOOLEAN|ParametersTypes.INTEGER|ParametersTypes.STRING|ParametersTypes.BOOLEAN;\n}\n\ninterface FunctionArrayParam extends BaseFunctionParam {\n  type: ParametersTypes.ARRAY;\n  items: FunctionPrimitiveParams;\n}\n\nexport interface FunctionObjectParam<T extends string|number|symbol = string> extends BaseFunctionParam {\n  type: ParametersTypes.OBJECT;\n  // TODO: this can be also be ObjectParams\n  properties: Record<T, FunctionPrimitiveParams|FunctionArrayParam>;\n}\n\n/**\n * More about function declaration can be read at\n * https://ai.google.dev/gemini-api/docs/function-calling\n */\nexport interface FunctionDeclaration<T extends string|number|symbol = string> {\n  name: string;\n  /**\n   * A description for the LLM to understand what the specific function will do once called.\n   */\n  description: string;\n  parameters: FunctionObjectParam<T>;\n}\n\n/** Raw media bytes. **/\nexport interface MediaBlob {\n  // The IANA standard MIME type of the source data.\n  // Currently supported types are: image/png, image/jpeg.\n  // Format: base64-encoded\n  // For reference: google3/google/x/pitchfork/aida/v1/content.proto\n  mimeType: string;\n  data: string;\n}\n\nexport enum FunctionalityType {\n  // Unspecified functionality type.\n  FUNCTIONALITY_TYPE_UNSPECIFIED = 0,\n  // The generic AI chatbot functionality.\n  CHAT = 1,\n  // The explain error functionality.\n  EXPLAIN_ERROR = 2,\n  AGENTIC_CHAT = 5,\n}\n\n/** See: cs/aida.proto (google3). **/\nexport enum ClientFeature {\n  // Unspecified client feature.\n  CLIENT_FEATURE_UNSPECIFIED = 0,\n  // Chrome console insights feature.\n  CHROME_CONSOLE_INSIGHTS = 1,\n  // Chrome AI Assistance Styling Agent.\n  CHROME_STYLING_AGENT = 2,\n  // Chrome AI Assistance Network Agent.\n  CHROME_NETWORK_AGENT = 7,\n  // Chrome AI Annotations Performance Agent\n  CHROME_PERFORMANCE_ANNOTATIONS_AGENT = 20,\n  // Chrome AI Assistance File Agent.\n  CHROME_FILE_AGENT = 9,\n  // Chrome AI Patch Agent.\n  CHROME_PATCH_AGENT = 12,\n  // Chrome AI Assistance Performance Agent.\n  CHROME_PERFORMANCE_FULL_AGENT = 24,\n\n  // Removed features (for reference).\n  // Chrome AI Assistance Performance Insights Agent.\n  // CHROME_PERFORMANCE_INSIGHTS_AGENT = 13,\n  // Chrome AI Assistance Performance Agent (call trees).\n  // CHROME_PERFORMANCE_AGENT = 8,\n}\n\nexport enum UserTier {\n  // Unspecified user tier.\n  USER_TIER_UNSPECIFIED = 0,\n  // Users who are internal testers.\n  TESTERS = 1,\n  // Users who are early adopters.\n  BETA = 2,\n  // Users in the general public.\n  PUBLIC = 3,\n}\n\n/** Googlers: see the Aida `retrieval` proto; this type is based on that. **/\nexport interface RequestFactMetadata {\n  /**\n   * A description of where the fact comes from.\n   */\n  source: string;\n  /**\n   * Optional: a score to give this fact. Used because\n   * if there are more facts than space in the context window,\n   * higher scoring facts will be prioritized.\n   */\n  score?: number;\n}\nexport interface RequestFact {\n  /**\n   * Content of the fact.\n   */\n  text: string;\n  metadata: RequestFactMetadata;\n}\n\nexport type RpcGlobalId = string|number;\n\n/* eslint-disable @typescript-eslint/naming-convention */\nexport interface RequestMetadata {\n  string_session_id?: string;\n  user_tier?: UserTier;\n  disable_user_content_logging: boolean;\n  client_version: string;\n}\n/* eslint-enable @typescript-eslint/naming-convention */\n\n/* eslint-disable @typescript-eslint/naming-convention */\nexport interface ConversationOptions {\n  temperature?: number;\n  model_id?: string;\n}\n/* eslint-enable @typescript-eslint/naming-convention */\n\n/* eslint-disable @typescript-eslint/naming-convention */\nexport interface DoConversationRequest {\n  client: string;\n  current_message: Content;\n  preamble?: string;\n  historical_contexts?: Content[];\n  function_declarations?: FunctionDeclaration[];\n  facts?: RequestFact[];\n  options?: ConversationOptions;\n  metadata: RequestMetadata;\n  functionality_type?: FunctionalityType;\n  client_feature?: ClientFeature;\n}\n/* eslint-enable @typescript-eslint/naming-convention */\n\n/* eslint-disable @typescript-eslint/naming-convention */\nexport interface CompleteCodeOptions {\n  temperature?: number;\n  model_id?: string;\n  inference_language?: AidaInferenceLanguage;\n  stop_sequences?: string[];\n}\n/* eslint-enable @typescript-eslint/naming-convention */\n\n/* eslint-disable @typescript-eslint/naming-convention */\nexport interface GenerateCodeOptions {\n  temperature?: number;\n  model_id?: string;\n  inference_language?: AidaInferenceLanguage;\n  expect_code_output?: boolean;\n}\n/* eslint-enable @typescript-eslint/naming-convention */\n\n/* eslint-disable @typescript-eslint/naming-convention */\nexport interface ContextFile {\n  path: string;\n  full_content: string;\n  selected_content?: string;\n  programming_language: AidaInferenceLanguage;\n}\n/* eslint-enable @typescript-eslint/naming-convention */\n\nexport enum EditType {\n  // Unknown edit type\n  EDIT_TYPE_UNSPECIFIED = 0,\n  // User typed code/text into file\n  ADD = 1,\n  // User deleted code/text from file\n  DELETE = 2,\n  // User pasted into file (this includes smart paste)\n  PASTE = 3,\n  // User performs an undo action\n  UNDO = 4,\n  // User performs a redo action\n  REDO = 5,\n  // User accepted a completion from AIDA\n  ACCEPT_COMPLETION = 6,\n}\n\nexport enum Reason {\n  // Unknown reason.\n  UNKNOWN = 0,\n\n  // The file is currently open.\n  CURRENTLY_OPEN = 1,\n\n  // The file is opened recently.\n  RECENTLY_OPENED = 2,\n\n  // The file is edited recently.\n  RECENTLY_EDITED = 3,\n\n  // The file is located within the same directory.\n  COLOCATED = 4,\n\n  // Included based on relation to code around the cursor (e.g: could be\n  // provided by local IDE analysis)\n  RELATED_FILE = 5,\n}\n\n/* eslint-disable @typescript-eslint/naming-convention */\nexport interface AdditionalFile {\n  path: string;\n  content: string;\n  included_reason: Reason;\n}\n\nexport interface CompletionRequest {\n  client: string;\n  prefix: string;\n  suffix?: string;\n  options?: CompleteCodeOptions;\n  metadata: RequestMetadata;\n  last_user_action?: EditType;\n  additional_files?: AdditionalFile[];\n}\n/* eslint-enable @typescript-eslint/naming-convention */\n\nexport enum UseCase {\n  // Unspecified usecase.\n  USE_CASE_UNSPECIFIED = 0,\n\n  // Code generation use case is expected to generate code from scratch\n  CODE_GENERATION = 1,\n}\n\n/* eslint-disable @typescript-eslint/naming-convention */\nexport interface GenerateCodeRequest {\n  client: string;\n  preamble: string;\n  current_message: Content;\n  options?: GenerateCodeOptions;\n  context_files?: ContextFile[];\n  use_case: UseCase;\n  metadata: RequestMetadata;\n  client_feature?: ClientFeature;\n}\n/* eslint-enable @typescript-eslint/naming-convention */\n\n/* eslint-disable @typescript-eslint/naming-convention  */\nexport interface DoConversationClientEvent {\n  user_feedback: {\n    sentiment?: Rating,\n    user_input?: {\n      comment?: string,\n    },\n  };\n}\n\nexport interface UserImpression {\n  sample: {\n    sample_id?: number,\n  };\n  latency: {\n    duration: {\n      seconds: number,\n      nanos: number,\n    },\n  };\n}\n\nexport interface UserAcceptance {\n  sample: {\n    sample_id?: number,\n  };\n}\n\nexport interface AidaRegisterClientEvent {\n  corresponding_aida_rpc_global_id: RpcGlobalId;\n  disable_user_content_logging: boolean;\n  do_conversation_client_event?: DoConversationClientEvent;\n  complete_code_client_event?: {user_acceptance: UserAcceptance}|{user_impression: UserImpression};\n}\n/* eslint-enable @typescript-eslint/naming-convention */\n\nexport enum RecitationAction {\n  ACTION_UNSPECIFIED = 'ACTION_UNSPECIFIED',\n  CITE = 'CITE',\n  BLOCK = 'BLOCK',\n  NO_ACTION = 'NO_ACTION',\n  EXEMPT_FOUND_IN_PROMPT = 'EXEMPT_FOUND_IN_PROMPT',\n}\n\nexport enum CitationSourceType {\n  CITATION_SOURCE_TYPE_UNSPECIFIED = 'CITATION_SOURCE_TYPE_UNSPECIFIED',\n  TRAINING_DATA = 'TRAINING_DATA',\n  WORLD_FACTS = 'WORLD_FACTS',\n  LOCAL_FACTS = 'LOCAL_FACTS',\n  INDIRECT = 'INDIRECT',\n}\n\nexport interface Citation {\n  startIndex?: number;\n  endIndex?: number;\n  uri?: string;\n  sourceType?: CitationSourceType;\n  repository?: string;\n}\n\nexport interface AttributionMetadata {\n  attributionAction: RecitationAction;\n  citations: Citation[];\n}\n\nexport interface AidaFunctionCallResponse {\n  name: string;\n  args: Record<string, unknown>;\n}\n\nexport interface FactualityFact {\n  sourceUri?: string;\n}\n\nexport interface FactualityMetadata {\n  facts: FactualityFact[];\n}\n\nexport interface ResponseMetadata {\n  rpcGlobalId?: RpcGlobalId;\n  attributionMetadata?: AttributionMetadata;\n  factualityMetadata?: FactualityMetadata;\n}\n\nexport interface DoConversationResponse {\n  explanation: string;\n  metadata: ResponseMetadata;\n  functionCalls?: [AidaFunctionCallResponse, ...AidaFunctionCallResponse[]];\n  completed: boolean;\n}\n\nexport interface CompletionResponse {\n  generatedSamples: GenerationSample[];\n  metadata: ResponseMetadata;\n}\n\nexport interface GenerateCodeResponse {\n  samples: GenerationSample[];\n  metadata: ResponseMetadata;\n}\n\nexport interface GenerationSample {\n  generationString: string;\n  score: number;\n  sampleId?: number;\n  attributionMetadata?: AttributionMetadata;\n}\n\nexport const enum AidaAccessPreconditions {\n  AVAILABLE = 'available',\n  NO_ACCOUNT_EMAIL = 'no-account-email',\n  NO_INTERNET = 'no-internet',\n  // This is the state (mostly enterprise) users are in, when they are automatically logged out from\n  // Chrome after a certain time period. For making AIDA requests, they need to log in again.\n  SYNC_IS_PAUSED = 'sync-is-paused',\n}\n\nexport const enum AidaInferenceLanguage {\n  CPP = 'CPP',\n  PYTHON = 'PYTHON',\n  KOTLIN = 'KOTLIN',\n  JAVA = 'JAVA',\n  JAVASCRIPT = 'JAVASCRIPT',\n  GO = 'GO',\n  TYPESCRIPT = 'TYPESCRIPT',\n  HTML = 'HTML',\n  BASH = 'BASH',\n  CSS = 'CSS',\n  DART = 'DART',\n  JSON = 'JSON',\n  MARKDOWN = 'MARKDOWN',\n  VUE = 'VUE',\n  XML = 'XML',\n}\n\nconst AidaLanguageToMarkdown: Record<AidaInferenceLanguage, string> = {\n  CPP: 'cpp',\n  PYTHON: 'py',\n  KOTLIN: 'kt',\n  JAVA: 'java',\n  JAVASCRIPT: 'js',\n  GO: 'go',\n  TYPESCRIPT: 'ts',\n  HTML: 'html',\n  BASH: 'sh',\n  CSS: 'css',\n  DART: 'dart',\n  JSON: 'json',\n  MARKDOWN: 'md',\n  VUE: 'vue',\n  XML: 'xml',\n};\n\nexport const CLIENT_NAME = 'CHROME_DEVTOOLS';\nexport const SERVICE_NAME = 'aidaService';\n\nconst CODE_CHUNK_SEPARATOR = (lang = ''): string => ('\\n`````' + lang + '\\n');\n\nexport class AidaAbortError extends Error {}\nexport class AidaBlockError extends Error {}\n\nexport class AidaClient {\n  static buildConsoleInsightsRequest(input: string): DoConversationRequest {\n    const disallowLogging = Root.Runtime.hostConfig.aidaAvailability?.disallowLogging ?? true;\n    const chromeVersion = Root.Runtime.getChromeVersion();\n    if (!chromeVersion) {\n      throw new Error('Cannot determine Chrome version');\n    }\n    const request: DoConversationRequest = {\n      current_message: {parts: [{text: input}], role: Role.USER},\n      client: CLIENT_NAME,\n      functionality_type: FunctionalityType.EXPLAIN_ERROR,\n      client_feature: ClientFeature.CHROME_CONSOLE_INSIGHTS,\n      metadata: {\n        disable_user_content_logging: disallowLogging,\n        client_version: chromeVersion,\n      },\n    };\n\n    let temperature = -1;\n    let modelId;\n    if (Root.Runtime.hostConfig.devToolsConsoleInsights?.enabled) {\n      temperature = Root.Runtime.hostConfig.devToolsConsoleInsights.temperature ?? -1;\n      modelId = Root.Runtime.hostConfig.devToolsConsoleInsights.modelId;\n    }\n    if (temperature >= 0) {\n      request.options ??= {};\n      request.options.temperature = temperature;\n    }\n    if (modelId) {\n      request.options ??= {};\n      request.options.model_id = modelId;\n    }\n    return request;\n  }\n\n  static async checkAccessPreconditions(): Promise<AidaAccessPreconditions> {\n    if (!navigator.onLine) {\n      return AidaAccessPreconditions.NO_INTERNET;\n    }\n\n    const syncInfo = await new Promise<SyncInformation>(\n        resolve => InspectorFrontendHostInstance.getSyncInformation(syncInfo => resolve(syncInfo)));\n    if (!syncInfo.accountEmail) {\n      return AidaAccessPreconditions.NO_ACCOUNT_EMAIL;\n    }\n\n    if (syncInfo.isSyncPaused) {\n      return AidaAccessPreconditions.SYNC_IS_PAUSED;\n    }\n\n    return AidaAccessPreconditions.AVAILABLE;\n  }\n\n  async *\n      doConversation(request: DoConversationRequest, options?: {signal?: AbortSignal}):\n          AsyncGenerator<DoConversationResponse, void, void> {\n    if (!InspectorFrontendHostInstance.doAidaConversation) {\n      throw new Error('doAidaConversation is not available');\n    }\n    const stream = (() => {\n      let {promise, resolve, reject} = Promise.withResolvers<string|null>();\n      options?.signal?.addEventListener('abort', () => {\n        reject(new AidaAbortError());\n      }, {once: true});\n      return {\n        write: async(data: string): Promise<void> => {\n          resolve(data);\n          ({promise, resolve, reject} = Promise.withResolvers<string|null>());\n        },\n        close: async(): Promise<void> => {\n          resolve(null);\n        },\n        read: (): Promise<string|null> => {\n          return promise;\n        },\n        fail: (e: Error) => reject(e),\n      };\n    })();\n    const streamId = bindOutputStream(stream);\n    InspectorFrontendHostInstance.doAidaConversation(JSON.stringify(request), streamId, result => {\n      if (result.statusCode === 403) {\n        stream.fail(new Error('Server responded: permission denied'));\n      } else if (result.error) {\n        stream.fail(new Error(`Cannot send request: ${result.error} ${result.detail || ''}`));\n      } else if (result.netErrorName === 'net::ERR_TIMED_OUT') {\n        stream.fail(new Error('doAidaConversation timed out'));\n      } else if (result.statusCode !== 200) {\n        stream.fail(new Error(`Request failed: ${JSON.stringify(result)}`));\n      } else {\n        void stream.close();\n      }\n    });\n    let chunk;\n    const text = [];\n    let inCodeChunk = false;\n    const functionCalls: AidaFunctionCallResponse[] = [];\n    let metadata: ResponseMetadata = {rpcGlobalId: 0};\n    while ((chunk = await stream.read())) {\n      let textUpdated = false;\n      // The AIDA response is a JSON array of objects, split at the object\n      // boundary. Therefore each chunk may start with `[` or `,` and possibly\n      // followed by `]`. Each chunk may include one or more objects, so we\n      // make sure that each chunk becomes a well-formed JSON array when we\n      // parse it by adding `[` and `]` and removing `,` where appropriate.\n      if (!chunk.length) {\n        continue;\n      }\n      if (chunk.startsWith(',')) {\n        chunk = chunk.slice(1);\n      }\n      if (!chunk.startsWith('[')) {\n        chunk = '[' + chunk;\n      }\n      if (!chunk.endsWith(']')) {\n        chunk = chunk + ']';\n      }\n      let results;\n      try {\n        results = JSON.parse(chunk);\n      } catch (error) {\n        throw new Error('Cannot parse chunk: ' + chunk, {cause: error});\n      }\n\n      for (const result of results) {\n        if ('metadata' in result) {\n          metadata = result.metadata;\n          if (metadata?.attributionMetadata?.attributionAction === RecitationAction.BLOCK) {\n            throw new AidaBlockError();\n          }\n        }\n        if ('textChunk' in result) {\n          if (inCodeChunk) {\n            text.push(CODE_CHUNK_SEPARATOR());\n            inCodeChunk = false;\n          }\n\n          text.push(result.textChunk.text);\n          textUpdated = true;\n        } else if ('codeChunk' in result) {\n          if (!inCodeChunk) {\n            const language = AidaLanguageToMarkdown[result.codeChunk.inferenceLanguage as AidaInferenceLanguage] ?? '';\n            text.push(CODE_CHUNK_SEPARATOR(language));\n            inCodeChunk = true;\n          }\n\n          text.push(result.codeChunk.code);\n          textUpdated = true;\n        } else if ('functionCallChunk' in result) {\n          functionCalls.push({\n            name: result.functionCallChunk.functionCall.name,\n            args: result.functionCallChunk.functionCall.args,\n          });\n        } else if ('error' in result) {\n          throw new Error(`Server responded: ${JSON.stringify(result)}`);\n        } else {\n          throw new Error('Unknown chunk result');\n        }\n      }\n      if (textUpdated) {\n        yield {\n          explanation: text.join('') + (inCodeChunk ? CODE_CHUNK_SEPARATOR() : ''),\n          metadata,\n          completed: false,\n        };\n      }\n    }\n    yield {\n      explanation: text.join('') + (inCodeChunk ? CODE_CHUNK_SEPARATOR() : ''),\n      metadata,\n      functionCalls: functionCalls.length ? functionCalls as [AidaFunctionCallResponse, ...AidaFunctionCallResponse[]] :\n                                            undefined,\n      completed: true,\n    };\n  }\n\n  registerClientEvent(clientEvent: AidaRegisterClientEvent): Promise<AidaClientResult> {\n    const {promise, resolve} = Promise.withResolvers<AidaClientResult>();\n    InspectorFrontendHostInstance.registerAidaClientEvent(\n        JSON.stringify({\n          client: CLIENT_NAME,\n          event_time: new Date().toISOString(),\n          ...clientEvent,\n        }),\n        resolve,\n    );\n\n    return promise;\n  }\n\n  async completeCode(request: CompletionRequest): Promise<CompletionResponse|null> {\n    if (!InspectorFrontendHostInstance.aidaCodeComplete) {\n      throw new Error('aidaCodeComplete is not available');\n    }\n    const {promise, resolve} = Promise.withResolvers<AidaCodeCompleteResult>();\n    InspectorFrontendHostInstance.aidaCodeComplete(JSON.stringify(request), resolve);\n    const completeCodeResult = await promise;\n\n    if (completeCodeResult.error) {\n      throw new Error(`Cannot send request: ${completeCodeResult.error} ${completeCodeResult.detail || ''}`);\n    }\n    const response = completeCodeResult.response;\n    if (!response?.length) {\n      throw new Error('Empty response');\n    }\n    let parsedResponse;\n    try {\n      parsedResponse = JSON.parse(response);\n    } catch (error) {\n      throw new Error('Cannot parse response: ' + response, {cause: error});\n    }\n\n    const generatedSamples: GenerationSample[] = [];\n    let metadata: ResponseMetadata = {rpcGlobalId: 0};\n    if ('metadata' in parsedResponse) {\n      metadata = parsedResponse.metadata;\n    }\n\n    if ('generatedSamples' in parsedResponse) {\n      for (const generatedSample of parsedResponse.generatedSamples) {\n        const sample: GenerationSample = {\n          generationString: generatedSample.generationString,\n          score: generatedSample.score,\n          sampleId: generatedSample.sampleId,\n        };\n        if ('metadata' in generatedSample && 'attributionMetadata' in generatedSample.metadata) {\n          sample.attributionMetadata = generatedSample.metadata.attributionMetadata;\n        }\n        generatedSamples.push(sample);\n      }\n    } else {\n      return null;\n    }\n\n    return {generatedSamples, metadata};\n  }\n\n  async generateCode(request: GenerateCodeRequest): Promise<GenerateCodeResponse|null> {\n    const response = await DispatchHttpRequestClient.makeHttpRequest<GenerateCodeResponse>({\n      service: SERVICE_NAME,\n      path: '/v1/aida:generateCode',\n      method: 'POST',\n      body: JSON.stringify(request),\n    });\n\n    return response;\n  }\n}\n\nexport function convertToUserTierEnum(userTier: string|undefined): UserTier {\n  if (userTier) {\n    switch (userTier) {\n      case 'TESTERS':\n        return UserTier.TESTERS;\n      case 'BETA':\n        return UserTier.BETA;\n      case 'PUBLIC':\n        return UserTier.PUBLIC;\n    }\n  }\n  return UserTier.BETA;\n}\n\nlet hostConfigTrackerInstance: HostConfigTracker|undefined;\n\nexport class HostConfigTracker extends Common.ObjectWrapper.ObjectWrapper<EventTypes> {\n  #pollTimer?: number;\n  #aidaAvailability?: AidaAccessPreconditions;\n\n  private constructor() {\n    super();\n  }\n\n  static instance(): HostConfigTracker {\n    if (!hostConfigTrackerInstance) {\n      hostConfigTrackerInstance = new HostConfigTracker();\n    }\n    return hostConfigTrackerInstance;\n  }\n\n  override addEventListener(eventType: Events, listener: Common.EventTarget.EventListener<EventTypes, Events>):\n      Common.EventTarget.EventDescriptor<EventTypes> {\n    const isFirst = !this.hasEventListeners(eventType);\n    const eventDescriptor = super.addEventListener(eventType, listener);\n    if (isFirst) {\n      window.clearTimeout(this.#pollTimer);\n      void this.pollAidaAvailability();\n    }\n    return eventDescriptor;\n  }\n\n  override removeEventListener(eventType: Events, listener: Common.EventTarget.EventListener<EventTypes, Events>):\n      void {\n    super.removeEventListener(eventType, listener);\n    if (!this.hasEventListeners(eventType)) {\n      window.clearTimeout(this.#pollTimer);\n    }\n  }\n\n  async pollAidaAvailability(): Promise<void> {\n    this.#pollTimer = window.setTimeout(() => this.pollAidaAvailability(), 2000);\n    const currentAidaAvailability = await AidaClient.checkAccessPreconditions();\n    if (currentAidaAvailability !== this.#aidaAvailability) {\n      this.#aidaAvailability = currentAidaAvailability;\n      const config =\n          await new Promise<Root.Runtime.HostConfig>(resolve => InspectorFrontendHostInstance.getHostConfig(resolve));\n      Object.assign(Root.Runtime.hostConfig, config);\n      // TODO(crbug.com/442545623): Send `currentAidaAvailability` to the listeners as part of the event so that\n      // `await AidaClient.checkAccessPreconditions()` does not need to be called again in the event handlers.\n      this.dispatchEventToListeners(Events.AIDA_AVAILABILITY_CHANGED);\n    }\n  }\n}\n\nexport const enum Events {\n  AIDA_AVAILABILITY_CHANGED = 'aidaAvailabilityChanged',\n}\n\nexport interface EventTypes {\n  [Events.AIDA_AVAILABILITY_CHANGED]: void;\n}\n", "// Copyright 2009 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../common/common.js';\nimport * as i18n from '../i18n/i18n.js';\nimport * as Platform from '../platform/platform.js';\nimport * as Root from '../root/root.js';\n\nimport {\n  type AidaClientResult,\n  type AidaCodeCompleteResult,\n  type CanShowSurveyResult,\n  type ChangeEvent,\n  type ClickEvent,\n  type ContextMenuDescriptor,\n  type DispatchHttpRequestRequest,\n  type DispatchHttpRequestResult,\n  type DoAidaConversationResult,\n  type DragEvent,\n  type EnumeratedHistogram,\n  EventDescriptors,\n  Events,\n  type EventTypes,\n  type ExtensionDescriptor,\n  type FunctionCallEvent,\n  type HoverEvent,\n  type ImpressionEvent,\n  type InspectorFrontendHostAPI,\n  type KeyDownEvent,\n  type LoadNetworkResourceResult,\n  type ResizeEvent,\n  type SettingAccessEvent,\n  type ShowSurveyResult,\n  type SyncInformation,\n} from './InspectorFrontendHostAPI.js';\nimport {streamWrite as resourceLoaderStreamWrite} from './ResourceLoader.js';\n\nconst UIStrings = {\n  /**\n   * @description Document title in Inspector Frontend Host of the DevTools window\n   * @example {example.com} PH1\n   */\n  devtoolsS: 'DevTools - {PH1}',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('core/host/InspectorFrontendHost.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nconst MAX_RECORDED_HISTOGRAMS_SIZE = 100;\nconst OVERRIDES_FILE_SYSTEM_PATH = '/overrides' as Platform.DevToolsPath.RawPathString;\n\n/**\n * The `InspectorFrontendHostStub` is a stub interface used the frontend is loaded like a webpage. Examples:\n *   - devtools://devtools/bundled/devtools_app.html\n *   - https://chrome-devtools-frontend.appspot.com/serve_rev/@030cc140435b0152645522b9864b75cac6c0a854/worker_app.html\n *   - http://localhost:9222/devtools/inspector.html?ws=localhost:9222/devtools/page/xTARGET_IDx\n *\n * When the frontend runs within the native embedder, then the InspectorFrontendHostAPI methods are provided\n * by devtools_compatibility.js. Those leverage `DevToolsAPI.sendMessageToEmbedder()` which match up with\n * the embedder API defined here: https://source.chromium.org/search?q=f:devtools%20f:dispatcher%20f:cc%20symbol:CreateForDevToolsFrontend&sq=&ss=chromium%2Fchromium%2Fsrc\n * The native implementations live in devtools_ui_bindings.cc: https://source.chromium.org/chromium/chromium/src/+/main:chrome/browser/devtools/devtools_ui_bindings.cc\n */\nexport class InspectorFrontendHostStub implements InspectorFrontendHostAPI {\n  readonly #urlsBeingSaved = new Map<\n      Platform.DevToolsPath.RawPathString|Platform.DevToolsPath.UrlString, {isBase64: boolean, buffer: string[]}>();\n  #fileSystem: FileSystem|null = null;\n  /**\n   * Injected bellow in both stub and normal runs via:\n   * ```ts\n   * InspectorFrontendHostInstance.events = new Common.ObjectWrapper.ObjectWrapper();\n   * ```\n   */\n  declare events: Common.EventTarget.EventTarget<EventTypes>;\n\n  recordedCountHistograms:\n      Array<{histogramName: string, sample: number, min: number, exclusiveMax: number, bucketSize: number}> = [];\n  recordedEnumeratedHistograms: Array<{actionName: EnumeratedHistogram, actionCode: number}> = [];\n  recordedPerformanceHistograms: Array<{histogramName: string, duration: number}> = [];\n\n  constructor() {\n    // Guard against errors should this file ever be imported at the top level\n    // within a worker - in which case this constructor is run. If there's no\n    // document, we can early exit.\n    if (typeof document === 'undefined') {\n      return;\n    }\n\n    function stopEventPropagation(this: InspectorFrontendHostAPI, event: KeyboardEvent): void {\n      // Let browser handle Ctrl+/Ctrl- shortcuts in hosted mode.\n      const zoomModifier = this.platform() === 'mac' ? event.metaKey : event.ctrlKey;\n      if (zoomModifier && (event.key === '+' || event.key === '-')) {\n        event.stopPropagation();\n      }\n    }\n\n    document.addEventListener('keydown', event => {\n      stopEventPropagation.call(this, (event));\n    }, true);\n  }\n\n  platform(): string {\n    const userAgent = navigator.userAgent;\n    if (userAgent.includes('Windows NT')) {\n      return 'windows';\n    }\n    if (userAgent.includes('Mac OS X')) {\n      return 'mac';\n    }\n    return 'linux';\n  }\n\n  loadCompleted(): void {\n  }\n\n  bringToFront(): void {\n  }\n\n  closeWindow(): void {\n  }\n\n  setIsDocked(_isDocked: boolean, callback: () => void): void {\n    window.setTimeout(callback, 0);\n  }\n\n  showSurvey(_trigger: string, callback: (arg0: ShowSurveyResult) => void): void {\n    window.setTimeout(() => callback({surveyShown: false}), 0);\n  }\n\n  canShowSurvey(_trigger: string, callback: (arg0: CanShowSurveyResult) => void): void {\n    window.setTimeout(() => callback({canShowSurvey: false}), 0);\n  }\n\n  /**\n   * Requests inspected page to be placed atop of the inspector frontend with specified bounds.\n   */\n  setInspectedPageBounds(_bounds: {\n    x: number,\n    y: number,\n    width: number,\n    height: number,\n  }): void {\n  }\n\n  inspectElementCompleted(): void {\n  }\n\n  setInjectedScriptForOrigin(_origin: string, _script: string): void {\n  }\n\n  inspectedURLChanged(url: Platform.DevToolsPath.UrlString): void {\n    document.title = i18nString(UIStrings.devtoolsS, {PH1: url.replace(/^https?:\\/\\//, '')});\n  }\n\n  copyText(text: string|null|undefined): void {\n    if (text === undefined || text === null) {\n      return;\n    }\n    void navigator.clipboard.writeText(text);\n  }\n\n  openInNewTab(url: Platform.DevToolsPath.UrlString): void {\n    if (Common.ParsedURL.schemeIs(url, 'javascript:')) {\n      return;\n    }\n    window.open(url, '_blank');\n  }\n\n  openSearchResultsInNewTab(_query: string): void {\n    Common.Console.Console.instance().error(\n        'Search is not enabled in hosted mode. Please inspect using chrome://inspect');\n  }\n\n  showItemInFolder(_fileSystemPath: Platform.DevToolsPath.RawPathString): void {\n    Common.Console.Console.instance().error(\n        'Show item in folder is not enabled in hosted mode. Please inspect using chrome://inspect');\n  }\n\n  // Reminder: the methods in this class belong to InspectorFrontendHostStub and are typically not executed.\n  // InspectorFrontendHostStub is ONLY used in the uncommon case of devtools not being embedded. For example: trace.cafe or http://localhost:9222/devtools/inspector.html?ws=localhost:9222/devtools/page/xTARGET_IDx\n  save(\n      url: Platform.DevToolsPath.RawPathString|Platform.DevToolsPath.UrlString, content: string, _forceSaveAs: boolean,\n      isBase64: boolean): void {\n    let buffer = this.#urlsBeingSaved.get(url)?.buffer;\n    if (!buffer) {\n      buffer = [];\n      this.#urlsBeingSaved.set(url, {isBase64, buffer});\n    }\n    buffer.push(content);\n    this.events.dispatchEventToListeners(Events.SavedURL, {url, fileSystemPath: url});\n  }\n\n  append(url: Platform.DevToolsPath.RawPathString|Platform.DevToolsPath.UrlString, content: string): void {\n    const buffer = this.#urlsBeingSaved.get(url)?.buffer;\n    if (buffer) {\n      buffer.push(content);\n      this.events.dispatchEventToListeners(Events.AppendedToURL, url);\n    }\n  }\n\n  close(url: Platform.DevToolsPath.RawPathString|Platform.DevToolsPath.UrlString): void {\n    const {isBase64, buffer} = this.#urlsBeingSaved.get(url) || {isBase64: false, buffer: []};\n    this.#urlsBeingSaved.delete(url);\n    let fileName = '';\n\n    if (url) {\n      try {\n        const trimmed = Platform.StringUtilities.trimURL(url);\n        fileName = Platform.StringUtilities.removeURLFragment(trimmed);\n      } catch {\n        // If url is not a valid URL, it is probably a filename.\n        fileName = url;\n      }\n    }\n\n    /* eslint-disable-next-line @devtools/no-imperative-dom-api */\n    const link = document.createElement('a');\n    link.download = fileName;\n    let blob;\n    if (isBase64) {\n      const bytes = Common.Base64.decode(buffer.join(''));\n      blob = new Blob([bytes], {type: 'application/gzip'});\n    } else {\n      blob = new Blob(buffer, {type: 'text/plain'});\n    }\n    const blobUrl = URL.createObjectURL(blob);\n    link.href = blobUrl;\n    link.click();\n    URL.revokeObjectURL(blobUrl);\n  }\n\n  sendMessageToBackend(_message: string): void {\n  }\n\n  recordCountHistogram(histogramName: string, sample: number, min: number, exclusiveMax: number, bucketSize: number):\n      void {\n    if (this.recordedCountHistograms.length >= MAX_RECORDED_HISTOGRAMS_SIZE) {\n      this.recordedCountHistograms.shift();\n    }\n    this.recordedCountHistograms.push({histogramName, sample, min, exclusiveMax, bucketSize});\n  }\n\n  recordEnumeratedHistogram(actionName: EnumeratedHistogram, actionCode: number, _bucketSize: number): void {\n    if (this.recordedEnumeratedHistograms.length >= MAX_RECORDED_HISTOGRAMS_SIZE) {\n      this.recordedEnumeratedHistograms.shift();\n    }\n    this.recordedEnumeratedHistograms.push({actionName, actionCode});\n  }\n\n  recordPerformanceHistogram(histogramName: string, duration: number): void {\n    if (this.recordedPerformanceHistograms.length >= MAX_RECORDED_HISTOGRAMS_SIZE) {\n      this.recordedPerformanceHistograms.shift();\n    }\n    this.recordedPerformanceHistograms.push({histogramName, duration});\n  }\n\n  recordUserMetricsAction(_umaName: string): void {\n  }\n\n  recordNewBadgeUsage(_featureName: string): void {\n  }\n\n  connectAutomaticFileSystem(\n      _fileSystemPath: Platform.DevToolsPath.RawPathString,\n      _fileSystemUUID: string,\n      _addIfMissing: boolean,\n      callback: (result: {success: boolean}) => void,\n      ): void {\n    queueMicrotask(() => callback({success: false}));\n  }\n\n  disconnectAutomaticFileSystem(_fileSystemPath: Platform.DevToolsPath.RawPathString): void {\n  }\n\n  requestFileSystems(): void {\n    this.events.dispatchEventToListeners(Events.FileSystemsLoaded, []);\n  }\n\n  addFileSystem(_type?: string): void {\n    const onFileSystem = (fs: FileSystem): void => {\n      this.#fileSystem = fs;\n      const fileSystem = {\n        fileSystemName: 'sandboxedRequestedFileSystem',\n        fileSystemPath: OVERRIDES_FILE_SYSTEM_PATH,\n        rootURL: 'filesystem:devtools://devtools/isolated/',\n        type: 'overrides' as const,\n      };\n      this.events.dispatchEventToListeners(Events.FileSystemAdded, {fileSystem});\n    };\n    window.webkitRequestFileSystem(window.TEMPORARY, 1024 * 1024, onFileSystem);\n  }\n\n  removeFileSystem(_fileSystemPath: Platform.DevToolsPath.RawPathString): void {\n    const removalCallback = (entries: Entry[]): void => {\n      entries.forEach(entry => {\n        if (entry.isDirectory) {\n          (entry as DirectoryEntry).removeRecursively(() => {});\n        } else if (entry.isFile) {\n          entry.remove(() => {});\n        }\n      });\n    };\n\n    if (this.#fileSystem) {\n      this.#fileSystem.root.createReader().readEntries(removalCallback);\n    }\n\n    this.#fileSystem = null;\n    this.events.dispatchEventToListeners(Events.FileSystemRemoved, OVERRIDES_FILE_SYSTEM_PATH);\n  }\n\n  isolatedFileSystem(_fileSystemId: string, _registeredName: string): FileSystem|null {\n    return this.#fileSystem;\n  }\n\n  loadNetworkResource(\n      url: string, _headers: string, streamId: number, callback: (arg0: LoadNetworkResourceResult) => void): void {\n    fetch(url)\n        .then(async result => {\n          const respBuffer = await result.arrayBuffer();\n          const text = await Common.Gzip.arrayBufferToString(respBuffer);\n          return text;\n        })\n        .then(function(text) {\n          resourceLoaderStreamWrite(streamId, text);\n          callback({\n            statusCode: 200,\n            headers: undefined,\n            messageOverride: undefined,\n            netError: undefined,\n            netErrorName: undefined,\n            urlValid: undefined,\n          });\n        })\n        .catch(function() {\n          callback({\n            statusCode: 404,\n            headers: undefined,\n            messageOverride: undefined,\n            netError: undefined,\n            netErrorName: undefined,\n            urlValid: undefined,\n          });\n        });\n  }\n\n  registerPreference(_name: string, _options: {synced?: boolean}): void {\n  }\n\n  getPreferences(callback: (arg0: Record<string, string>) => void): void {\n    const prefs: Record<string, string> = {};\n    for (const name in window.localStorage) {\n      prefs[name] = window.localStorage[name];\n    }\n    callback(prefs);\n  }\n\n  getPreference(name: string, callback: (arg0: string) => void): void {\n    callback(window.localStorage[name]);\n  }\n\n  setPreference(name: string, value: string): void {\n    window.localStorage[name] = value;\n  }\n\n  removePreference(name: string): void {\n    delete window.localStorage[name];\n  }\n\n  clearPreferences(): void {\n    window.localStorage.clear();\n  }\n\n  getSyncInformation(callback: (arg0: SyncInformation) => void): void {\n    if ('getSyncInformationForTesting' in globalThis) {\n      // @ts-expect-error for testing\n      return callback(globalThis.getSyncInformationForTesting());\n    }\n    callback({\n      isSyncActive: false,\n      arePreferencesSynced: false,\n    });\n  }\n\n  getHostConfig(callback: (hostConfig: Root.Runtime.HostConfig) => void): void {\n    // This HostConfig config is used in the hosted mode (see the\n    // comment on top of this class). Only add non-default config params\n    // here that you want to also apply in the hosted mode. For tests\n    // use the hostConfigForTesting override.\n    const hostConfigForHostedMode: Root.Runtime.HostConfig = {\n      devToolsVeLogging: {\n        enabled: true,\n      },\n      thirdPartyCookieControls: {\n        thirdPartyCookieMetadataEnabled: true,\n        thirdPartyCookieHeuristicsEnabled: true,\n        managedBlockThirdPartyCookies: 'Unset',\n      },\n      devToolsIpProtectionPanelInDevTools: {\n        enabled: false,\n      },\n      devToolsFlexibleLayout: {\n        verticalDrawerEnabled: true,\n      },\n      devToolsStartingStyleDebugging: {\n        enabled: false,\n      },\n    };\n    if ('hostConfigForTesting' in globalThis) {\n      const {hostConfigForTesting} = (globalThis as unknown as {hostConfigForTesting: Root.Runtime.HostConfig});\n      for (const key of Object.keys(hostConfigForTesting)) {\n        const mergeEntry = <K extends keyof Root.Runtime.HostConfig>(key: K): void => {\n          if (typeof hostConfigForHostedMode[key] === 'object' && typeof hostConfigForTesting[key] === 'object') {\n            // If the config is an object, merge the settings, but preferring\n            // the hostConfigForTesting values over the result values.\n            hostConfigForHostedMode[key] = {...hostConfigForHostedMode[key], ...hostConfigForTesting[key]};\n          } else {\n            // Override with the testing config if the value is present + not null/undefined.\n            hostConfigForHostedMode[key] = hostConfigForTesting[key] ?? hostConfigForHostedMode[key];\n          }\n        };\n        mergeEntry(key as keyof Root.Runtime.HostConfig);\n      }\n    }\n    callback(hostConfigForHostedMode);\n  }\n\n  upgradeDraggedFileSystemPermissions(_fileSystem: FileSystem): void {\n  }\n\n  indexPath(_requestId: number, _fileSystemPath: Platform.DevToolsPath.RawPathString, _excludedFolders: string): void {\n  }\n\n  stopIndexing(_requestId: number): void {\n  }\n\n  searchInPath(_requestId: number, _fileSystemPath: Platform.DevToolsPath.RawPathString, _query: string): void {\n  }\n\n  zoomFactor(): number {\n    return 1;\n  }\n\n  zoomIn(): void {\n  }\n\n  zoomOut(): void {\n  }\n\n  resetZoom(): void {\n  }\n\n  setWhitelistedShortcuts(_shortcuts: string): void {\n  }\n\n  setEyeDropperActive(_active: boolean): void {\n  }\n\n  showCertificateViewer(_certChain: string[]): void {\n  }\n\n  reattach(_callback: () => void): void {\n  }\n\n  readyForTest(): void {\n  }\n\n  connectionReady(): void {\n  }\n\n  setOpenNewWindowForPopups(_value: boolean): void {\n  }\n\n  setDevicesDiscoveryConfig(_config: Adb.Config): void {\n  }\n\n  setDevicesUpdatesEnabled(_enabled: boolean): void {\n  }\n\n  openRemotePage(_browserId: string, _url: string): void {\n  }\n\n  openNodeFrontend(): void {\n  }\n\n  showContextMenuAtPoint(_x: number, _y: number, _items: ContextMenuDescriptor[], _document: Document): void {\n    throw new Error('Soft context menu should be used');\n  }\n\n  /**\n   * Think of **Hosted mode** as \"non-embedded\" mode; you can see a devtools frontend URL as the tab's URL. It's an atypical way that DevTools is run.\n   * Whereas in **Non-hosted** (aka \"embedded\"), DevTools is embedded and fully dockable. It's the common way DevTools is run.\n   *\n   * **Hosted mode** == we're using the `InspectorFrontendHostStub`. impl. (@see `InspectorFrontendHostStub` class comment)\n   * Whereas with **non-hosted** mode, native `DevToolsEmbedderMessageDispatcher` is used for CDP and more.\n   *\n   * Relationships to other signals:\n   * - Hosted-ness does not indicate whether the frontend is _connected to a valid CDP target_.\n   * - Being _\"dockable\"_ (aka `canDock`) is typically aligned but technically orthogonal.\n   * - It's unrelated to the _tab's (main frame's) URL_. Though in non-hosted, the devtools frame origin will always be `devtools://devtools`.\n   *\n   *  | Example case                                         | Mode           | Example devtools                                                                   |\n   *  | :--------------------------------------------------- | :------------- | :---------------------------------------------------------------------------- |\n   *  | tab URL: anything. embedded DevTools w/ native CDP bindings    | **NOT Hosted** | `devtools://devtools/bundled/devtools_app.html?targetType=tab&...`            |\n   *  | tab URL: `devtools://\u2026?ws=\u2026`                | **Hosted**     | `devtools://devtools/bundled/devtools_app.html?ws=localhost:9228/...`         |\n   *  | tab URL: `devtools://\u2026` but no connection   | **Hosted**     | `devtools://devtools/bundled/devtools_app.html`                               |\n   *  | tab URL: `https://\u2026` but no connection      | **Hosted**     | `https://chrome-devtools-frontend.appspot.com/serve_rev/@.../worker_app.html` |\n   *  | tab URL: `http://\u2026?ws=` (connected)         | **Hosted**     | `http://localhost:9222/devtools/inspector.html?ws=localhost:9222/...`         |\n   */\n  isHostedMode(): boolean {\n    return true;\n  }\n\n  setAddExtensionCallback(_callback: (arg0: ExtensionDescriptor) => void): void {\n    // Extensions are not supported in hosted mode.\n  }\n\n  async initialTargetId(): Promise<string|null> {\n    return null;\n  }\n\n  doAidaConversation(_request: string, _streamId: number, callback: (result: DoAidaConversationResult) => void): void {\n    callback({\n      error: 'Not implemented',\n    });\n  }\n\n  registerAidaClientEvent(_request: string, callback: (result: AidaClientResult) => void): void {\n    callback({\n      error: 'Not implemented',\n    });\n  }\n\n  aidaCodeComplete(_request: string, callback: (result: AidaCodeCompleteResult) => void): void {\n    callback({\n      error: 'Not implemented',\n    });\n  }\n\n  dispatchHttpRequest(_request: DispatchHttpRequestRequest, callback: (result: DispatchHttpRequestResult) => void):\n      void {\n    callback({error: 'Not implemented'});\n  }\n\n  recordImpression(_event: ImpressionEvent): void {\n  }\n  recordResize(_event: ResizeEvent): void {\n  }\n  recordClick(_event: ClickEvent): void {\n  }\n  recordHover(_event: HoverEvent): void {\n  }\n  recordDrag(_event: DragEvent): void {\n  }\n  recordChange(_event: ChangeEvent): void {\n  }\n  recordKeyDown(_event: KeyDownEvent): void {\n  }\n  recordSettingAccess(_event: SettingAccessEvent): void {\n  }\n  recordFunctionCall(_event: FunctionCallEvent): void {\n  }\n}\n\n// @ts-expect-error Global injected by devtools_compatibility.js\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport let InspectorFrontendHostInstance: InspectorFrontendHostStub = globalThis.InspectorFrontendHost;\n\nclass InspectorFrontendAPIImpl {\n  constructor() {\n    for (const descriptor of EventDescriptors) {\n      // @ts-expect-error Dispatcher magic\n      this[descriptor[0]] = this.dispatch.bind(this, descriptor[0], descriptor[1], descriptor[2]);\n    }\n  }\n\n  private dispatch(name: Events, signature: string[], _runOnceLoaded: boolean, ...params: string[]): void {\n    // Single argument methods get dispatched with the param.\n    if (signature.length < 2) {\n      try {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        InspectorFrontendHostInstance.events.dispatchEventToListeners<any>(name, params[0]);\n      } catch (error) {\n        console.error(error + ' ' + error.stack);\n      }\n      return;\n    }\n    const data: Record<string, string> = {};\n    for (let i = 0; i < signature.length; ++i) {\n      data[signature[i]] = params[i];\n    }\n    try {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      InspectorFrontendHostInstance.events.dispatchEventToListeners<any>(name, data);\n    } catch (error) {\n      console.error(error + ' ' + error.stack);\n    }\n  }\n\n  streamWrite(id: number, chunk: string): void {\n    resourceLoaderStreamWrite(id, chunk);\n  }\n}\n\n/**\n * Used in `front_end/devtools_compatibility.js` to verify that calls from there\n * are valid.\n */\nexport type InspectorFrontendAPIImplMethods = keyof InspectorFrontendAPIImpl;\n\n(function(): void {\n\nfunction initializeInspectorFrontendHost(): void {\n  if (!InspectorFrontendHostInstance) {\n    // Instantiate stub for web-hosted mode if necessary.\n    // @ts-expect-error Global injected by devtools_compatibility.js\n    globalThis.InspectorFrontendHost = InspectorFrontendHostInstance = new InspectorFrontendHostStub();\n  } else {\n    // Otherwise add stubs for missing methods that are declared in the interface.\n    const proto = InspectorFrontendHostStub.prototype;\n    for (const name of (Object.getOwnPropertyNames(proto) as Array<keyof InspectorFrontendHostAPI>)) {\n      const stub = proto[name];\n      if (typeof stub !== 'function' || InspectorFrontendHostInstance[name]) {\n        continue;\n      }\n\n      console.error(`Incompatible embedder: method Host.InspectorFrontendHost.${name} is missing. Using stub instead.`);\n      // @ts-expect-error Global injected by devtools_compatibility.js\n      InspectorFrontendHostInstance[name] = stub;\n    }\n  }\n\n  // Attach the events object.\n  InspectorFrontendHostInstance.events = new Common.ObjectWrapper.ObjectWrapper();\n}\n\n// FIXME: This file is included into both apps, since the devtools_app needs the InspectorFrontendHostAPI only,\n// so the host instance should not be initialized there.\ninitializeInspectorFrontendHost();\n// @ts-expect-error Global injected by devtools_compatibility.js\nglobalThis.InspectorFrontendAPI = new InspectorFrontendAPIImpl();\n})();\n\nexport function isUnderTest(prefs?: Record<string, string>): boolean {\n  // Integration tests rely on test queryParam.\n  if (Root.Runtime.Runtime.queryParam('test')) {\n    return true;\n  }\n  // Browser tests rely on prefs.\n  if (prefs) {\n    return prefs['isUnderTest'] === 'true';\n  }\n  return Common.Settings.Settings.hasInstance() &&\n      Common.Settings.Settings.instance().createSetting('isUnderTest', false).get();\n}\n", "// Copyright 2015 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Platform from '../../core/platform/platform.js';\nimport type * as Common from '../common/common.js';\nimport type * as Root from '../root/root.js';\n\n/**\n * This values should match the one getting called from Chromium\n */\nexport enum Events {\n  /* eslint-disable @typescript-eslint/naming-convention -- Accessed from web_tests */\n  AppendedToURL = 'appendedToURL',\n  CanceledSaveURL = 'canceledSaveURL',\n  ColorThemeChanged = 'colorThemeChanged',\n  ContextMenuCleared = 'contextMenuCleared',\n  ContextMenuItemSelected = 'contextMenuItemSelected',\n  DeviceCountUpdated = 'deviceCountUpdated',\n  DevicesDiscoveryConfigChanged = 'devicesDiscoveryConfigChanged',\n  DevicesPortForwardingStatusChanged = 'devicesPortForwardingStatusChanged',\n  DevicesUpdated = 'devicesUpdated',\n  DispatchMessage = 'dispatchMessage',\n  DispatchMessageChunk = 'dispatchMessageChunk',\n  EnterInspectElementMode = 'enterInspectElementMode',\n  EyeDropperPickedColor = 'eyeDropperPickedColor',\n  FileSystemsLoaded = 'fileSystemsLoaded',\n  FileSystemRemoved = 'fileSystemRemoved',\n  FileSystemAdded = 'fileSystemAdded',\n  FileSystemFilesChangedAddedRemoved = 'fileSystemFilesChangedAddedRemoved',\n  IndexingTotalWorkCalculated = 'indexingTotalWorkCalculated',\n  IndexingWorked = 'indexingWorked',\n  IndexingDone = 'indexingDone',\n  KeyEventUnhandled = 'keyEventUnhandled',\n  ReloadInspectedPage = 'reloadInspectedPage',\n  RevealSourceLine = 'revealSourceLine',\n  SavedURL = 'savedURL',\n  SearchCompleted = 'searchCompleted',\n  SetInspectedTabId = 'setInspectedTabId',\n  SetUseSoftMenu = 'setUseSoftMenu',\n  ShowPanel = 'showPanel',\n  /* eslint-enable @typescript-eslint/naming-convention */\n}\n\nexport const EventDescriptors = [\n  [Events.AppendedToURL, ['url']],\n  [Events.CanceledSaveURL, ['url']],\n  [Events.ColorThemeChanged, []],\n  [Events.ContextMenuCleared, []],\n  [Events.ContextMenuItemSelected, ['id']],\n  [Events.DeviceCountUpdated, ['count']],\n  [Events.DevicesDiscoveryConfigChanged, ['config']],\n  [Events.DevicesPortForwardingStatusChanged, ['status']],\n  [Events.DevicesUpdated, ['devices']],\n  [Events.DispatchMessage, ['messageObject']],\n  [Events.DispatchMessageChunk, ['messageChunk', 'messageSize']],\n  [Events.EnterInspectElementMode, []],\n  [Events.EyeDropperPickedColor, ['color']],\n  [Events.FileSystemsLoaded, ['fileSystems']],\n  [Events.FileSystemRemoved, ['fileSystemPath']],\n  [Events.FileSystemAdded, ['errorMessage', 'fileSystem']],\n  [Events.FileSystemFilesChangedAddedRemoved, ['changed', 'added', 'removed']],\n  [Events.IndexingTotalWorkCalculated, , ['requestId', 'fileSystemPath', 'totalWork']],\n  [Events.IndexingWorked, ['requestId', 'fileSystemPath', 'worked']],\n  [Events.IndexingDone, ['requestId', 'fileSystemPath']],\n  [Events.KeyEventUnhandled, ['event']],\n  [Events.ReloadInspectedPage, ['hard']],\n  [Events.RevealSourceLine, ['url', 'lineNumber', 'columnNumber']],\n  [Events.SavedURL, ['url', 'fileSystemPath']],\n  [Events.SearchCompleted, ['requestId', 'fileSystemPath', 'files']],\n  [Events.SetInspectedTabId, ['tabId']],\n  [Events.SetUseSoftMenu, ['useSoftMenu']],\n  [Events.ShowPanel, ['panelName']],\n] as const;\n\nexport interface DispatchMessageChunkEvent {\n  messageChunk: string;\n  messageSize: number;\n}\n\nexport interface EyeDropperPickedColorEvent {\n  r: number;\n  g: number;\n  b: number;\n  a: number;\n}\n\nexport interface DevToolsFileSystem {\n  type: ''|'automatic'|'snippets'|'overrides';\n  fileSystemName: string;\n  rootURL: string;\n  fileSystemPath: Platform.DevToolsPath.RawPathString;\n}\n\nexport interface FileSystemAddedEvent {\n  errorMessage?: string;\n  fileSystem: DevToolsFileSystem|null;\n}\n\nexport interface FilesChangedEvent {\n  changed: Platform.DevToolsPath.RawPathString[];\n  added: Platform.DevToolsPath.RawPathString[];\n  removed: Platform.DevToolsPath.RawPathString[];\n}\n\nexport interface IndexingEvent {\n  requestId: number;\n  fileSystemPath: string;\n}\n\nexport interface IndexingTotalWorkCalculatedEvent extends IndexingEvent {\n  totalWork: number;\n}\n\nexport interface IndexingWorkedEvent extends IndexingEvent {\n  worked: number;\n}\n\nexport interface KeyEventUnhandledEvent {\n  type: string;\n  key: string;\n  keyCode: number;\n  modifiers: number;\n}\n\nexport interface RevealSourceLineEvent {\n  url: Platform.DevToolsPath.UrlString;\n  lineNumber: number;\n  columnNumber: number;\n}\n\nexport interface SavedURLEvent {\n  url: Platform.DevToolsPath.RawPathString|Platform.DevToolsPath.UrlString;\n  fileSystemPath: Platform.DevToolsPath.RawPathString|Platform.DevToolsPath.UrlString;\n}\n\nexport interface SearchCompletedEvent {\n  requestId: number;\n  files: Platform.DevToolsPath.RawPathString[];\n}\n\nexport interface DoAidaConversationResult {\n  statusCode?: number;\n  headers?: Record<string, string>;\n  netError?: number;\n  netErrorName?: string;\n  error?: string;\n  detail?: string;\n}\n\nexport interface AidaClientResult {\n  response?: string;\n  error?: string;\n  detail?: string;\n}\n\nexport interface AidaCodeCompleteResult {\n  response?: string;\n  error?: string;\n  detail?: string;\n}\n\nexport interface VisualElementImpression {\n  id: number;\n  type: number;\n  parent?: number;\n  context?: number;\n  width?: number;\n  height?: number;\n}\n\nexport interface ImpressionEvent {\n  impressions: VisualElementImpression[];\n}\n\nexport interface ResizeEvent {\n  veid: number;\n  width?: number;\n  height?: number;\n}\n\nexport interface ClickEvent {\n  veid: number;\n  mouseButton?: number;\n  context?: number;\n  doubleClick: boolean;\n}\n\nexport interface HoverEvent {\n  veid: number;\n  time?: number;\n  context?: number;\n}\n\nexport interface DragEvent {\n  veid: number;\n  context?: number;\n}\n\nexport interface ChangeEvent {\n  veid: number;\n  context?: number;\n}\n\nexport interface KeyDownEvent {\n  veid?: number;\n  context?: number;\n}\n\nexport interface SettingAccessEvent {\n  name: number;\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  numeric_value?: number;\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  string_value?: number;\n}\n\nexport interface FunctionCallEvent {\n  name: number;\n  context?: number;\n}\n\n/**\n * While `EventDescriptors` are used to dynamically dispatch host binding events,\n * the `EventTypes` \"type map\" is used for type-checking said events by TypeScript.\n * `EventTypes` is not used at runtime.\n * Please note that the \"dispatch\" side can't be type-checked as the dispatch is\n * done dynamically.\n **/\nexport interface EventTypes {\n  [Events.AppendedToURL]: Platform.DevToolsPath.RawPathString|Platform.DevToolsPath.UrlString;\n  [Events.CanceledSaveURL]: Platform.DevToolsPath.UrlString;\n  [Events.ColorThemeChanged]: void;\n  [Events.ContextMenuCleared]: void;\n  [Events.ContextMenuItemSelected]: number;\n  [Events.DeviceCountUpdated]: number;\n  [Events.DevicesDiscoveryConfigChanged]: Adb.Config;\n  [Events.DevicesPortForwardingStatusChanged]: void;\n  [Events.DevicesUpdated]: void;\n  [Events.DispatchMessage]: string;\n  [Events.DispatchMessageChunk]: DispatchMessageChunkEvent;\n  [Events.EnterInspectElementMode]: void;\n  [Events.EyeDropperPickedColor]: EyeDropperPickedColorEvent;\n  [Events.FileSystemsLoaded]: DevToolsFileSystem[];\n  [Events.FileSystemRemoved]: Platform.DevToolsPath.RawPathString;\n  [Events.FileSystemAdded]: FileSystemAddedEvent;\n  [Events.FileSystemFilesChangedAddedRemoved]: FilesChangedEvent;\n  [Events.IndexingTotalWorkCalculated]: IndexingTotalWorkCalculatedEvent;\n  [Events.IndexingWorked]: IndexingWorkedEvent;\n  [Events.IndexingDone]: IndexingEvent;\n  [Events.KeyEventUnhandled]: KeyEventUnhandledEvent;\n  [Events.ReloadInspectedPage]: boolean;\n  [Events.RevealSourceLine]: RevealSourceLineEvent;\n  [Events.SavedURL]: SavedURLEvent;\n  [Events.SearchCompleted]: SearchCompletedEvent;\n  [Events.SetInspectedTabId]: string;\n  [Events.SetUseSoftMenu]: boolean;\n  [Events.ShowPanel]: string;\n}\n\nexport type DispatchHttpRequestRequest = {\n  service: string,\n  path: string,\n  method: 'GET',\n  queryParams?: Record<string, string|string[]>,\n  body?: never,\n}|{\n  service: string,\n  path: string,\n  method: 'POST',\n  queryParams?: Record<string, string|string[]>,\n  // A JSON string containing the request body.\n  body?: string,\n};\n\ninterface DispatchHttpRequestSuccessResult {\n  response: string;\n  statusCode: number;\n}\n\ninterface DispatchHttpRequestErrorResult {\n  error: string;\n  detail?: string;\n  netError?: number;\n  netErrorName?: string;\n  statusCode?: number;\n}\n\nexport type DispatchHttpRequestResult = DispatchHttpRequestSuccessResult|DispatchHttpRequestErrorResult;\n\nexport interface InspectorFrontendHostAPI {\n  events: Common.EventTarget.EventTarget<EventTypes>;\n\n  connectAutomaticFileSystem(\n      fileSystemPath: Platform.DevToolsPath.RawPathString,\n      fileSystemUUID: string,\n      addIfMissing: boolean,\n      callback: (result: {success: boolean}) => void,\n      ): void;\n\n  disconnectAutomaticFileSystem(fileSystemPath: Platform.DevToolsPath.RawPathString): void;\n\n  addFileSystem(type?: string): void;\n\n  loadCompleted(): void;\n\n  indexPath(requestId: number, fileSystemPath: Platform.DevToolsPath.RawPathString, excludedFolders: string): void;\n\n  /**\n   * Requests inspected page to be placed atop of the inspector frontend with specified bounds.\n   */\n  setInspectedPageBounds(bounds: {\n    x: number,\n    y: number,\n    width: number,\n    height: number,\n  }): void;\n\n  showCertificateViewer(certChain: string[]): void;\n\n  setWhitelistedShortcuts(shortcuts: string): void;\n\n  setEyeDropperActive(active: boolean): void;\n\n  inspectElementCompleted(): void;\n\n  openInNewTab(url: Platform.DevToolsPath.UrlString): void;\n\n  openSearchResultsInNewTab(query: string): void;\n\n  showItemInFolder(fileSystemPath: Platform.DevToolsPath.RawPathString): void;\n\n  removeFileSystem(fileSystemPath: Platform.DevToolsPath.RawPathString): void;\n\n  requestFileSystems(): void;\n\n  save(url: Platform.DevToolsPath.UrlString, content: string, forceSaveAs: boolean, isBase64: boolean): void;\n\n  append(url: Platform.DevToolsPath.UrlString, content: string): void;\n\n  close(url: Platform.DevToolsPath.UrlString): void;\n\n  searchInPath(requestId: number, fileSystemPath: Platform.DevToolsPath.RawPathString, query: string): void;\n\n  stopIndexing(requestId: number): void;\n\n  bringToFront(): void;\n\n  closeWindow(): void;\n\n  /**\n   * If you need to alert to the user after copying use {@link UIUtils.copyTextToClipboard}.\n   */\n  copyText(text: string|null|undefined): void;\n\n  inspectedURLChanged(url: Platform.DevToolsPath.UrlString): void;\n\n  isolatedFileSystem(fileSystemId: string, registeredName: string): FileSystem|null;\n\n  loadNetworkResource(\n      url: string, headers: string, streamId: number, callback: (arg0: LoadNetworkResourceResult) => void): void;\n\n  registerPreference(name: string, options: {synced?: boolean}): void;\n\n  getPreferences(callback: (arg0: Record<string, string>) => void): void;\n\n  getPreference(name: string, callback: (arg0: string) => void): void;\n\n  setPreference(name: string, value: string): void;\n\n  removePreference(name: string): void;\n\n  clearPreferences(): void;\n\n  getSyncInformation(callback: (arg0: SyncInformation) => void): void;\n\n  getHostConfig(callback: (arg0: Root.Runtime.HostConfig) => void): void;\n\n  upgradeDraggedFileSystemPermissions(fileSystem: FileSystem): void;\n\n  platform(): string;\n\n  recordCountHistogram(histogramName: string, sample: number, min: number, exclusiveMax: number, bucketSize: number):\n      void;\n\n  recordEnumeratedHistogram(actionName: EnumeratedHistogram, actionCode: number, bucketSize: number): void;\n\n  recordPerformanceHistogram(histogramName: string, duration: number): void;\n\n  recordUserMetricsAction(umaName: string): void;\n\n  recordNewBadgeUsage(featureName: string): void;\n\n  sendMessageToBackend(message: string): void;\n\n  setDevicesDiscoveryConfig(config: Adb.Config): void;\n\n  setDevicesUpdatesEnabled(enabled: boolean): void;\n\n  openRemotePage(browserId: string, url: string): void;\n\n  openNodeFrontend(): void;\n\n  setInjectedScriptForOrigin(origin: string, script: string): void;\n\n  setIsDocked(isDocked: boolean, callback: () => void): void;\n\n  showSurvey(trigger: string, callback: (arg0: ShowSurveyResult) => void): void;\n\n  canShowSurvey(trigger: string, callback: (arg0: CanShowSurveyResult) => void): void;\n\n  zoomFactor(): number;\n\n  zoomIn(): void;\n\n  zoomOut(): void;\n\n  resetZoom(): void;\n\n  showContextMenuAtPoint(x: number, y: number, items: ContextMenuDescriptor[], document: Document): void;\n\n  reattach(callback: () => void): void;\n\n  readyForTest(): void;\n\n  connectionReady(): void;\n\n  setOpenNewWindowForPopups(value: boolean): void;\n\n  isHostedMode(): boolean;\n\n  setAddExtensionCallback(callback: (arg0: ExtensionDescriptor) => void): void;\n\n  initialTargetId(): Promise<string|null>;\n\n  doAidaConversation: (request: string, streamId: number, cb: (result: DoAidaConversationResult) => void) => void;\n  registerAidaClientEvent: (request: string, cb: (result: AidaClientResult) => void) => void;\n  aidaCodeComplete: (request: string, cb: (result: AidaCodeCompleteResult) => void) => void;\n  dispatchHttpRequest: (request: DispatchHttpRequestRequest, cb: (result: DispatchHttpRequestResult) => void) => void;\n\n  recordImpression(event: ImpressionEvent): void;\n  recordClick(event: ClickEvent): void;\n  recordHover(event: HoverEvent): void;\n  recordDrag(event: DragEvent): void;\n  recordChange(event: ChangeEvent): void;\n  recordKeyDown(event: KeyDownEvent): void;\n  recordSettingAccess(event: SettingAccessEvent): void;\n  recordFunctionCall(event: FunctionCallEvent): void;\n}\n\nexport interface AcceleratorDescriptor {\n  keyCode: number;\n  modifiers: number;\n}\n\nexport interface ContextMenuDescriptor {\n  type: 'checkbox'|'item'|'separator'|'subMenu';\n  id?: number;\n  label?: string;\n  accelerator?: AcceleratorDescriptor;\n  isExperimentalFeature?: boolean;\n  enabled?: boolean;\n  checked?: boolean;\n  isDevToolsPerformanceMenuItem?: boolean;\n  subItems?: ContextMenuDescriptor[];\n  shortcut?: string;\n  jslogContext?: string;\n  /** Setting the featureName requests showing a new badge tied to that feature . */\n  featureName?: string;\n}\nexport interface LoadNetworkResourceResult {\n  statusCode: number;\n  headers?: Record<string, string>;\n  netError?: number;\n  netErrorName?: string;\n  urlValid?: boolean;\n  messageOverride?: string;\n}\nexport interface ExtensionDescriptor {\n  startPage: string;\n  name: string;\n  exposeExperimentalAPIs: boolean;\n  hostsPolicy?: ExtensionHostsPolicy;\n  allowFileAccess?: boolean;\n}\nexport interface ExtensionHostsPolicy {\n  runtimeAllowedHosts: string[];\n  runtimeBlockedHosts: string[];\n}\nexport interface ShowSurveyResult {\n  surveyShown: boolean;\n}\nexport interface CanShowSurveyResult {\n  canShowSurvey: boolean;\n}\nexport interface SyncInformation {\n  /** Whether Chrome Sync is enabled and active */\n  isSyncActive: boolean;\n  /** Whether syncing of Chrome Settings is enabled via Chrome Sync is enabled */\n  arePreferencesSynced?: boolean;\n  /** The email of the account used for syncing */\n  accountEmail?: string;\n  /** The image of the account used for syncing. Its a base64 encoded PNG */\n  accountImage?: string;\n  /** The full name of the account used for syncing */\n  accountFullName?: string;\n  /** Whether Chrome Sync is paused, equivalent to the user being logged out automatically */\n  isSyncPaused?: boolean;\n}\n\n/**\n * Enum for recordPerformanceHistogram\n * Warning: There is another definition of this enum in the DevTools code\n * base, keep them in sync:\n * front_end/devtools_compatibility.js\n */\nexport const enum EnumeratedHistogram {\n  /* eslint-disable @typescript-eslint/naming-convention -- Shadows a legacy enum */\n  // LINT.IfChange(EnumeratedHistogram)\n  ActionTaken = 'DevTools.ActionTaken',\n  PanelShown = 'DevTools.PanelShown',\n  KeyboardShortcutFired = 'DevTools.KeyboardShortcutFired',\n  IssueCreated = 'DevTools.IssueCreated',\n  IssuesPanelIssueExpanded = 'DevTools.IssuesPanelIssueExpanded',\n  IssuesPanelOpenedFrom = 'DevTools.IssuesPanelOpenedFrom',\n  IssuesPanelResourceOpened = 'DevTools.IssuesPanelResourceOpened',\n  KeybindSetSettingChanged = 'DevTools.KeybindSetSettingChanged',\n  ExperimentEnabledAtLaunch = 'DevTools.ExperimentEnabledAtLaunch',\n  ExperimentDisabledAtLaunch = 'DevTools.ExperimentDisabledAtLaunch',\n  ExperimentEnabled = 'DevTools.ExperimentEnabled',\n  ExperimentDisabled = 'DevTools.ExperimentDisabled',\n  DeveloperResourceLoaded = 'DevTools.DeveloperResourceLoaded',\n  DeveloperResourceScheme = 'DevTools.DeveloperResourceScheme',\n  Language = 'DevTools.Language',\n  SyncSetting = 'DevTools.SyncSetting',\n  RecordingAssertion = 'DevTools.RecordingAssertion',\n  RecordingCodeToggled = 'DevTools.RecordingCodeToggled',\n  RecordingCopiedToClipboard = 'DevTools.RecordingCopiedToClipboard',\n  RecordingEdited = 'DevTools.RecordingEdited',\n  RecordingExported = 'DevTools.RecordingExported',\n  RecordingReplayFinished = 'DevTools.RecordingReplayFinished',\n  RecordingReplaySpeed = 'DevTools.RecordingReplaySpeed',\n  RecordingReplayStarted = 'DevTools.RecordingReplayStarted',\n  RecordingToggled = 'DevTools.RecordingToggled',\n  SourcesPanelFileDebugged = 'DevTools.SourcesPanelFileDebugged',\n  SourcesPanelFileOpened = 'DevTools.SourcesPanelFileOpened',\n  NetworkPanelResponsePreviewOpened = 'DevTools.NetworkPanelResponsePreviewOpened',\n  TimelineNavigationSettingState = 'DevTools.TimelineNavigationSettingState',\n  LighthouseModeRun = 'DevTools.LighthouseModeRun',\n  LighthouseCategoryUsed = 'DevTools.LighthouseCategoryUsed',\n  SwatchActivated = 'DevTools.SwatchActivated',\n  AnimationPlaybackRateChanged = 'DevTools.AnimationPlaybackRateChanged',\n  BuiltInAiAvailability = 'DevTools.BuiltInAiAvailability',\n  // LINT.ThenChange(/front_end/devtools_compatibility.js:EnumeratedHistogram)\n}\n", "// Copyright 2015 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/* eslint-disable @typescript-eslint/naming-convention */\n\nimport * as Common from '../common/common.js';\nimport * as i18n from '../i18n/i18n.js';\n\nimport {InspectorFrontendHostInstance} from './InspectorFrontendHost.js';\nimport type {LoadNetworkResourceResult} from './InspectorFrontendHostAPI.js';\n\nconst UIStrings = {\n  /**\n   * @description Name of an error category used in error messages\n   */\n  systemError: 'System error',\n  /**\n   * @description Name of an error category used in error messages\n   */\n  connectionError: 'Connection error',\n  /**\n   * @description Name of an error category used in error messages\n   */\n  certificateError: 'Certificate error',\n  /**\n   * @description Name of an error category used in error messages\n   */\n  httpError: 'HTTP error',\n  /**\n   * @description Name of an error category used in error messages\n   */\n  cacheError: 'Cache error',\n  /**\n   * @description Name of an error category used in error messages\n   */\n  signedExchangeError: 'Signed Exchange error',\n  /**\n   * @description Name of an error category used in error messages\n   */\n  ftpError: 'FTP error',\n  /**\n   * @description Name of an error category used in error messages\n   */\n  certificateManagerError: 'Certificate manager error',\n  /**\n   * @description Name of an error category used in error messages\n   */\n  dnsResolverError: 'DNS resolver error',\n  /**\n   * @description Name of an error category used in error messages\n   */\n  unknownError: 'Unknown error',\n  /**\n   * @description Phrase used in error messages that carry a network error name\n   * @example {404} PH1\n   * @example {net::ERR_INSUFFICIENT_RESOURCES} PH2\n   */\n  httpErrorStatusCodeSS: 'HTTP error: status code {PH1}, {PH2}',\n  /**\n   * @description Name of an error category used in error messages\n   */\n  invalidUrl: 'Invalid URL',\n  /**\n   * @description Name of an error category used in error messages\n   */\n  decodingDataUrlFailed: 'Decoding Data URL failed',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('core/host/ResourceLoader.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport const ResourceLoader = {};\n\nlet _lastStreamId = 0;\n\nconst _boundStreams: Record<number, Common.StringOutputStream.OutputStream> = {};\n\nexport const bindOutputStream = function(stream: Common.StringOutputStream.OutputStream): number {\n  _boundStreams[++_lastStreamId] = stream;\n  return _lastStreamId;\n};\n\nexport const discardOutputStream = function(id: number): void {\n  void _boundStreams[id].close();\n  delete _boundStreams[id];\n};\n\nexport const streamWrite = function(id: number, chunk: string): void {\n  void _boundStreams[id].write(chunk);\n};\nexport interface LoadErrorDescription {\n  statusCode: number;\n  netError?: number;\n  netErrorName?: string;\n  urlValid?: boolean;\n  message?: string;\n}\n\nexport const load = function(\n    url: string, headers: Record<string, string>|null,\n    callback: (\n        arg0: boolean,\n        arg1: Record<string, string>,\n        arg2: string,\n        arg3: LoadErrorDescription,\n        ) => void,\n    allowRemoteFilePaths: boolean): void {\n  const stream = new Common.StringOutputStream.StringOutputStream();\n  loadAsStream(url, headers, stream, mycallback, allowRemoteFilePaths);\n\n  function mycallback(\n      success: boolean,\n      headers: Record<string, string>,\n      errorDescription: LoadErrorDescription,\n      ): void {\n    callback(success, headers, stream.data(), errorDescription);\n  }\n};\n\nfunction getNetErrorCategory(netError: number): string {\n  if (netError > -100) {\n    return i18nString(UIStrings.systemError);\n  }\n  if (netError > -200) {\n    return i18nString(UIStrings.connectionError);\n  }\n  if (netError > -300) {\n    return i18nString(UIStrings.certificateError);\n  }\n  if (netError > -400) {\n    return i18nString(UIStrings.httpError);\n  }\n  if (netError > -500) {\n    return i18nString(UIStrings.cacheError);\n  }\n  if (netError > -600) {\n    return i18nString(UIStrings.signedExchangeError);\n  }\n  if (netError > -700) {\n    return i18nString(UIStrings.ftpError);\n  }\n  if (netError > -800) {\n    return i18nString(UIStrings.certificateManagerError);\n  }\n  if (netError > -900) {\n    return i18nString(UIStrings.dnsResolverError);\n  }\n  return i18nString(UIStrings.unknownError);\n}\n\nfunction isHTTPError(netError: number): boolean {\n  return netError <= -300 && netError > -400;\n}\n\nexport function netErrorToMessage(\n    netError: number|undefined, httpStatusCode: number|undefined, netErrorName: string|undefined): string|null {\n  if (netError === undefined || netErrorName === undefined) {\n    return null;\n  }\n  if (netError !== 0) {\n    if (isHTTPError(netError)) {\n      return i18nString(UIStrings.httpErrorStatusCodeSS, {PH1: String(httpStatusCode), PH2: netErrorName});\n    }\n    const errorCategory = getNetErrorCategory(netError);\n    // We don't localize here, as `errorCategory` is already localized,\n    // and `netErrorName` is an error code like 'net::ERR_CERT_AUTHORITY_INVALID'.\n    return `${errorCategory}: ${netErrorName}`;\n  }\n  return null;\n}\n\nfunction createErrorMessageFromResponse(response: LoadNetworkResourceResult): {\n  success: boolean,\n  description: LoadErrorDescription,\n} {\n  const {statusCode, netError, netErrorName, urlValid, messageOverride} = response;\n  let message = '';\n  const success = statusCode >= 200 && statusCode < 300;\n  if (typeof messageOverride === 'string') {\n    message = messageOverride;\n  } else if (!success) {\n    if (typeof netError === 'undefined') {\n      if (urlValid === false) {\n        message = i18nString(UIStrings.invalidUrl);\n      } else {\n        message = i18nString(UIStrings.unknownError);\n      }\n    } else {\n      const maybeMessage = netErrorToMessage(netError, statusCode, netErrorName);\n      if (maybeMessage) {\n        message = maybeMessage;\n      }\n    }\n  }\n  console.assert(success === (message.length === 0));\n  return {success, description: {statusCode, netError, netErrorName, urlValid, message}};\n}\n\nconst loadXHR = (url: string): Promise<string> => {\n  return new Promise((successCallback, failureCallback) => {\n    function onReadyStateChanged(): void {\n      if (xhr.readyState !== XMLHttpRequest.DONE) {\n        return;\n      }\n      if (xhr.status !== 200) {\n        xhr.onreadystatechange = null;\n        failureCallback(new Error(String(xhr.status)));\n        return;\n      }\n      xhr.onreadystatechange = null;\n      successCallback(xhr.responseText);\n    }\n\n    const xhr = new XMLHttpRequest();\n    xhr.withCredentials = false;\n    xhr.open('GET', url, true);\n    xhr.onreadystatechange = onReadyStateChanged;\n    xhr.send(null);\n  });\n};\n\nfunction canBeRemoteFilePath(url: string): boolean {\n  try {\n    const urlObject = new URL(url);\n    return urlObject.protocol === 'file:' && urlObject.host !== '';\n  } catch {\n    return false;\n  }\n}\n\nexport const loadAsStream = function(\n    url: string,\n    headers: Record<string, string>|null,\n    stream: Common.StringOutputStream.OutputStream,\n    callback?: ((arg0: boolean, arg1: Record<string, string>, arg2: LoadErrorDescription) => void),\n    allowRemoteFilePaths?: boolean,\n    ): void {\n  const streamId = bindOutputStream(stream);\n  const parsedURL = new Common.ParsedURL.ParsedURL(url);\n  if (parsedURL.isDataURL()) {\n    loadXHR(url).then(dataURLDecodeSuccessful).catch(dataURLDecodeFailed);\n    return;\n  }\n\n  if (!allowRemoteFilePaths && canBeRemoteFilePath(url)) {\n    // Remote file paths can cause security problems, see crbug.com/1342722.\n    if (callback) {\n      callback(/* success */ false, /* headers */ {}, {\n        statusCode: 400,  // BAD_REQUEST\n        netError: -20,    // BLOCKED_BY_CLIENT\n        netErrorName: 'net::BLOCKED_BY_CLIENT',\n        message: 'Loading from a remote file path is prohibited for security reasons.',\n      });\n    }\n    return;\n  }\n\n  const rawHeaders = [];\n  if (headers) {\n    for (const key in headers) {\n      rawHeaders.push(key + ': ' + headers[key]);\n    }\n  }\n  InspectorFrontendHostInstance.loadNetworkResource(url, rawHeaders.join('\\r\\n'), streamId, finishedCallback);\n\n  function finishedCallback(response: LoadNetworkResourceResult): void {\n    if (callback) {\n      const {success, description} = createErrorMessageFromResponse(response);\n      callback(success, response.headers || {}, description);\n    }\n    discardOutputStream(streamId);\n  }\n\n  function dataURLDecodeSuccessful(text: string): void {\n    streamWrite(streamId, text);\n    finishedCallback(({statusCode: 200}));\n  }\n\n  function dataURLDecodeFailed(_xhrStatus: Error): void {\n    const messageOverride: string = i18nString(UIStrings.decodingDataUrlFailed);\n    finishedCallback(({statusCode: 404, messageOverride}));\n  }\n};\n", "// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {InspectorFrontendHostInstance} from './InspectorFrontendHost.js';\nimport type {DispatchHttpRequestRequest, DispatchHttpRequestResult} from './InspectorFrontendHostAPI.js';\n\nexport enum ErrorType {\n  HTTP_RESPONSE_UNAVAILABLE = 'HTTP_RESPONSE_UNAVAILABLE',\n  NOT_FOUND = 'NOT_FOUND',\n}\n\nexport class DispatchHttpRequestError extends Error {\n  constructor(readonly type: ErrorType, options?: ErrorOptions) {\n    super(undefined, options);\n  }\n}\n\nexport async function makeHttpRequest<R>(request: DispatchHttpRequestRequest): Promise<R> {\n  const response = await new Promise<DispatchHttpRequestResult>(resolve => {\n    InspectorFrontendHostInstance.dispatchHttpRequest(request, resolve);\n  });\n\n  debugLog({request, response});\n  if (response.statusCode === 404) {\n    throw new DispatchHttpRequestError(ErrorType.NOT_FOUND);\n  }\n\n  if ('response' in response && response.statusCode === 200) {\n    try {\n      return JSON.parse(response.response) as R;\n    } catch (err) {\n      throw new DispatchHttpRequestError(ErrorType.HTTP_RESPONSE_UNAVAILABLE, {cause: err});\n    }\n  }\n\n  throw new DispatchHttpRequestError(ErrorType.HTTP_RESPONSE_UNAVAILABLE);\n}\n\nfunction isDebugMode(): boolean {\n  return Boolean(localStorage.getItem('debugDispatchHttpRequestEnabled'));\n}\n\nfunction debugLog(...log: unknown[]): void {\n  if (!isDebugMode()) {\n    return;\n  }\n\n  // eslint-disable-next-line no-console\n  console.log('debugLog', ...log);\n}\n\nfunction setDebugDispatchHttpRequestEnabled(enabled: boolean): void {\n  if (enabled) {\n    localStorage.setItem('debugDispatchHttpRequestEnabled', 'true');\n  } else {\n    localStorage.removeItem('debugDispatchHttpRequestEnabled');\n  }\n}\n\n// @ts-expect-error\nglobalThis.setDebugDispatchHttpRequestEnabled = setDebugDispatchHttpRequestEnabled;\n", "// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Root from '../root/root.js';\n\nimport * as DispatchHttpRequestClient from './DispatchHttpRequestClient.js';\nimport type {DispatchHttpRequestRequest} from './InspectorFrontendHostAPI.js';\n\nexport enum SubscriptionStatus {\n  ENABLED = 'SUBSCRIPTION_STATE_ENABLED',\n  PENDING = 'SUBSCRIPTION_STATE_PENDING',\n  CANCELED = 'SUBSCRIPTION_STATE_CANCELED',\n  REFUNDED = 'SUBSCRIPTION_STATE_REFUNDED',\n  AWAITING_FIX = 'SUBSCRIPTION_STATE_AWAITING_FIX',\n  ON_HOLD = 'SUBSCRIPTION_STATE_ACCOUNT_ON_HOLD',\n}\n\nexport enum SubscriptionTier {\n  PREMIUM_ANNUAL = 'SUBSCRIPTION_TIER_PREMIUM_ANNUAL',\n  PREMIUM_MONTHLY = 'SUBSCRIPTION_TIER_PREMIUM_MONTHLY',\n  PRO_ANNUAL = 'SUBSCRIPTION_TIER_PRO_ANNUAL',\n  PRO_MONTHLY = 'SUBSCRIPTION_TIER_PRO_MONTHLY',\n}\n\nexport enum EligibilityStatus {\n  ELIGIBLE = 'ELIGIBLE',\n  NOT_ELIGIBLE = 'NOT_ELIGIBLE',\n}\n\nexport enum EmailPreference {\n  ENABLED = 'ENABLED',\n  DISABLED = 'DISABLED',\n}\n\ninterface CheckElibigilityResponse {\n  createProfile: EligibilityStatus;\n}\n\ninterface BatchGetAwardsResponse {\n  awards?: Award[];\n}\n\nexport interface Award {\n  name: string;\n  badge: {\n    title: string,\n    description: string,\n    imageUri: string,\n    deletableByUser: boolean,\n  };\n  title: string;\n  description: string;\n  imageUri: string;\n  createTime: string;\n  awardingUri: string;\n}\n\nexport interface Profile {\n  // Resource name of the profile.\n  // Format: profiles/{obfuscated_profile_id}\n  name: string;\n  activeSubscription?: {\n    subscriptionStatus: SubscriptionStatus,\n    // To ensure forward compatibility, we accept any string, allowing the server to\n    // introduce new subscription tiers without breaking older clients.\n    subscriptionTier: SubscriptionTier|string,\n  };\n}\n\nexport interface GetProfileResponse {\n  profile: Profile|null;\n  isEligible: boolean;\n}\n\n/**\n * The `batchGet` awards endpoint returns badge names with an\n * obfuscated user ID (e.g., `profiles/12345/awards/badge-name`).\n * This function normalizes them to use `me` instead of the ID\n * (e.g., `profiles/me/awards/badge-path`) to match the format\n * used for client-side requests.\n **/\nfunction normalizeBadgeName(name: string): string {\n  return name.replace(/profiles\\/[^/]+\\/awards\\//, 'profiles/me/awards/');\n}\n\nexport const GOOGLE_DEVELOPER_PROGRAM_PROFILE_LINK = 'https://developers.google.com/profile/u/me';\n\nasync function makeHttpRequest<R>(request: DispatchHttpRequestRequest): Promise<R> {\n  if (!isGdpProfilesAvailable()) {\n    throw new DispatchHttpRequestClient.DispatchHttpRequestError(\n        DispatchHttpRequestClient.ErrorType.HTTP_RESPONSE_UNAVAILABLE);\n  }\n\n  const response = await DispatchHttpRequestClient.makeHttpRequest(request) as R;\n  return response;\n}\n\nconst SERVICE_NAME = 'gdpService';\nlet gdpClientInstance: GdpClient|null = null;\nexport class GdpClient {\n  #cachedProfilePromise?: Promise<Profile>;\n  #cachedEligibilityPromise?: Promise<CheckElibigilityResponse>;\n\n  private constructor() {\n  }\n\n  static instance({forceNew}: {\n    forceNew: boolean,\n  } = {forceNew: false}): GdpClient {\n    if (!gdpClientInstance || forceNew) {\n      gdpClientInstance = new GdpClient();\n    }\n    return gdpClientInstance;\n  }\n\n  /**\n   * Fetches the user's GDP profile and eligibility status.\n   *\n   * It first attempts to fetch the profile. If the profile is not found\n   * (a `NOT_FOUND` error), this is handled gracefully by treating the profile\n   * as `null` and then proceeding to check for eligibility.\n   *\n   * @returns A promise that resolves with an object containing the `profile`\n   * and `isEligible` status, or `null` if an unexpected error occurs.\n   */\n  async getProfile(): Promise<GetProfileResponse|null> {\n    try {\n      const profile = await this.#getProfile();\n      return {\n        profile,\n        isEligible: true,\n      };\n    } catch (err: unknown) {\n      if (err instanceof DispatchHttpRequestClient.DispatchHttpRequestError &&\n          err.type === DispatchHttpRequestClient.ErrorType.HTTP_RESPONSE_UNAVAILABLE) {\n        return null;\n      }\n    }\n\n    try {\n      const checkEligibilityResponse = await this.#checkEligibility();\n      return {\n        profile: null,\n        isEligible: checkEligibilityResponse.createProfile === EligibilityStatus.ELIGIBLE,\n      };\n    } catch {\n      return null;\n    }\n  }\n\n  async #getProfile(): Promise<Profile> {\n    if (this.#cachedProfilePromise) {\n      return await this.#cachedProfilePromise;\n    }\n\n    this.#cachedProfilePromise = makeHttpRequest<Profile>({\n                                   service: SERVICE_NAME,\n                                   path: '/v1beta1/profile:get',\n                                   method: 'GET',\n                                 }).then(profile => {\n      this.#cachedEligibilityPromise = Promise.resolve({createProfile: EligibilityStatus.ELIGIBLE});\n      return profile;\n    });\n\n    return await this.#cachedProfilePromise;\n  }\n\n  async #checkEligibility(): Promise<CheckElibigilityResponse> {\n    if (this.#cachedEligibilityPromise) {\n      return await this.#cachedEligibilityPromise;\n    }\n\n    this.#cachedEligibilityPromise =\n        makeHttpRequest({service: SERVICE_NAME, path: '/v1beta1/eligibility:check', method: 'GET'});\n\n    return await this.#cachedEligibilityPromise;\n  }\n\n  /**\n   * @returns null if the request fails, the awarded badge names otherwise.\n   */\n  async getAwardedBadgeNames({names}: {names: string[]}): Promise<Set<string>|null> {\n    try {\n      const response = await makeHttpRequest<BatchGetAwardsResponse>({\n        service: SERVICE_NAME,\n        path: '/v1beta1/profiles/me/awards:batchGet',\n        method: 'GET',\n        queryParams: {\n          allowMissing: 'true',\n          names,\n        }\n      });\n\n      return new Set(response.awards?.map(award => normalizeBadgeName(award.name)) ?? []);\n    } catch {\n      return null;\n    }\n  }\n\n  async createProfile({user, emailPreference}: {user: string, emailPreference: EmailPreference}):\n      Promise<Profile|null> {\n    try {\n      const response = await makeHttpRequest<Profile>({\n        service: SERVICE_NAME,\n        path: '/v1beta1/profiles',\n        method: 'POST',\n        body: JSON.stringify({\n          user,\n          newsletter_email: emailPreference,\n        }),\n      });\n      this.#clearCache();\n      return response;\n    } catch {\n      return null;\n    }\n  }\n\n  #clearCache(): void {\n    this.#cachedProfilePromise = undefined;\n    this.#cachedEligibilityPromise = undefined;\n  }\n\n  async createAward({name}: {name: string}): Promise<Award|null> {\n    try {\n      const response = await makeHttpRequest<Award>({\n        service: SERVICE_NAME,\n        path: '/v1beta1/profiles/me/awards',\n        method: 'POST',\n        body: JSON.stringify({\n          awardingUri: 'devtools://devtools',\n          name,\n        })\n      });\n      return response;\n    } catch {\n      return null;\n    }\n  }\n}\n\nexport function isGdpProfilesAvailable(): boolean {\n  const isBaseFeatureEnabled = Boolean(Root.Runtime.hostConfig.devToolsGdpProfiles?.enabled);\n  const isBrandedBuild = Boolean(Root.Runtime.hostConfig.devToolsGdpProfilesAvailability?.enabled);\n  const isOffTheRecordProfile = Root.Runtime.hostConfig.isOffTheRecord;\n  const isDisabledByEnterprisePolicy =\n      getGdpProfilesEnterprisePolicy() === Root.Runtime.GdpProfilesEnterprisePolicyValue.DISABLED;\n  return isBaseFeatureEnabled && isBrandedBuild && !isOffTheRecordProfile && !isDisabledByEnterprisePolicy;\n}\n\nexport function getGdpProfilesEnterprisePolicy(): Root.Runtime.GdpProfilesEnterprisePolicyValue {\n  return (\n      Root.Runtime.hostConfig.devToolsGdpProfilesAvailability?.enterprisePolicyValue ??\n      Root.Runtime.GdpProfilesEnterprisePolicyValue.DISABLED);\n}\n\nexport function isBadgesEnabled(): boolean {\n  const isBadgesEnabledByEnterprisePolicy =\n      getGdpProfilesEnterprisePolicy() === Root.Runtime.GdpProfilesEnterprisePolicyValue.ENABLED;\n  const isBadgesEnabledByFeatureFlag = Boolean(Root.Runtime.hostConfig.devToolsGdpProfiles?.badgesEnabled);\n  return isBadgesEnabledByEnterprisePolicy && isBadgesEnabledByFeatureFlag;\n}\n\nexport function isStarterBadgeEnabled(): boolean {\n  return Boolean(Root.Runtime.hostConfig.devToolsGdpProfiles?.starterBadgeEnabled);\n}\n", "// Copyright 2014 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/* eslint-disable @typescript-eslint/naming-convention */\n\nimport {InspectorFrontendHostInstance} from './InspectorFrontendHost.js';\n\nlet _platform: string;\n\nexport function platform(): string {\n  if (!_platform) {\n    _platform = InspectorFrontendHostInstance.platform();\n  }\n  return _platform;\n}\n\nlet _isMac: boolean|undefined;\n\nexport function isMac(): boolean {\n  if (typeof _isMac === 'undefined') {\n    _isMac = platform() === 'mac';\n  }\n\n  return _isMac;\n}\n\nlet _isWin: boolean|undefined;\n\nexport function isWin(): boolean {\n  if (typeof _isWin === 'undefined') {\n    _isWin = platform() === 'windows';\n  }\n\n  return _isWin;\n}\n\n/**\n * In Chrome Layout tests the imported 'Platform' object is not writable/\n * configurable, which prevents us from monkey-patching 'Platform''s methods.\n * We circumvent this by adding 'setPlatformForTests'.\n **/\nexport function setPlatformForTests(platform: string): void {\n  _platform = platform;\n  _isMac = undefined;\n  _isWin = undefined;\n}\n\nlet _isCustomDevtoolsFrontend: boolean;\n\nexport function isCustomDevtoolsFrontend(): boolean {\n  if (typeof _isCustomDevtoolsFrontend === 'undefined') {\n    _isCustomDevtoolsFrontend = window.location.toString().startsWith('devtools://devtools/custom/');\n  }\n  return _isCustomDevtoolsFrontend;\n}\n\nlet _fontFamily: string;\n\nexport function fontFamily(): string {\n  if (_fontFamily) {\n    return _fontFamily;\n  }\n  switch (platform()) {\n    case 'linux':\n      _fontFamily = 'Roboto, Ubuntu, Arial, sans-serif';\n      break;\n    case 'mac':\n      _fontFamily = '\\'Lucida Grande\\', sans-serif';\n      break;\n    case 'windows':\n      _fontFamily = '\\'Segoe UI\\', Tahoma, sans-serif';\n      break;\n  }\n  return _fontFamily;\n}\n", "// Copyright 2011 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {InspectorFrontendHostInstance} from './InspectorFrontendHost.js';\nimport {EnumeratedHistogram} from './InspectorFrontendHostAPI.js';\n\nexport class UserMetrics {\n  #panelChangedSinceLaunch: boolean;\n  #firedLaunchHistogram: boolean;\n  #launchPanelName: string;\n  constructor() {\n    this.#panelChangedSinceLaunch = false;\n    this.#firedLaunchHistogram = false;\n    this.#launchPanelName = '';\n  }\n\n  panelShown(panelName: string, isLaunching?: boolean): void {\n    const code = PanelCodes[panelName as keyof typeof PanelCodes] || 0;\n    InspectorFrontendHostInstance.recordEnumeratedHistogram(EnumeratedHistogram.PanelShown, code, PanelCodes.MAX_VALUE);\n    InspectorFrontendHostInstance.recordUserMetricsAction('DevTools_PanelShown_' + panelName);\n    // Store that the user has changed the panel so we know launch histograms should not be fired.\n    if (!isLaunching) {\n      this.#panelChangedSinceLaunch = true;\n    }\n  }\n\n  settingsPanelShown(settingsViewId: string): void {\n    this.panelShown('settings-' + settingsViewId);\n  }\n\n  sourcesPanelFileDebugged(mediaType?: string): void {\n    const code = (mediaType && MediaTypes[mediaType as keyof typeof MediaTypes]) || MediaTypes.Unknown;\n    InspectorFrontendHostInstance.recordEnumeratedHistogram(\n        EnumeratedHistogram.SourcesPanelFileDebugged, code, MediaTypes.MAX_VALUE);\n  }\n\n  sourcesPanelFileOpened(mediaType?: string): void {\n    const code = (mediaType && MediaTypes[mediaType as keyof typeof MediaTypes]) || MediaTypes.Unknown;\n    InspectorFrontendHostInstance.recordEnumeratedHistogram(\n        EnumeratedHistogram.SourcesPanelFileOpened, code, MediaTypes.MAX_VALUE);\n  }\n\n  networkPanelResponsePreviewOpened(mediaType: string): void {\n    const code = (mediaType && MediaTypes[mediaType as keyof typeof MediaTypes]) || MediaTypes.Unknown;\n    InspectorFrontendHostInstance.recordEnumeratedHistogram(\n        EnumeratedHistogram.NetworkPanelResponsePreviewOpened, code, MediaTypes.MAX_VALUE);\n  }\n\n  actionTaken(action: Action): void {\n    InspectorFrontendHostInstance.recordEnumeratedHistogram(EnumeratedHistogram.ActionTaken, action, Action.MAX_VALUE);\n  }\n\n  panelLoaded(panelName: string, histogramName: string): void {\n    if (this.#firedLaunchHistogram || panelName !== this.#launchPanelName) {\n      return;\n    }\n\n    this.#firedLaunchHistogram = true;\n    // Use rAF and window.setTimeout to ensure the marker is fired after layout and rendering.\n    // This will give the most accurate representation of the tool being ready for a user.\n    requestAnimationFrame(() => {\n      window.setTimeout(() => {\n        // Mark the load time so that we can pinpoint it more easily in a trace.\n        performance.mark(histogramName);\n        // If the user has switched panel before we finished loading, ignore the histogram,\n        // since the launch timings will have been affected and are no longer valid.\n        if (this.#panelChangedSinceLaunch) {\n          return;\n        }\n        // This fires the event for the appropriate launch histogram.\n        // The duration is measured as the time elapsed since the time origin of the document.\n        InspectorFrontendHostInstance.recordPerformanceHistogram(histogramName, performance.now());\n      }, 0);\n    });\n  }\n\n  setLaunchPanel(panelName: string|null): void {\n    this.#launchPanelName = (panelName as string);\n  }\n\n  performanceTraceLoad(measure: PerformanceMeasure): void {\n    InspectorFrontendHostInstance.recordPerformanceHistogram('DevTools.TraceLoad', measure.duration);\n  }\n\n  keybindSetSettingChanged(keybindSet: string): void {\n    const value = KeybindSetSettings[keybindSet as keyof typeof KeybindSetSettings] || 0;\n    InspectorFrontendHostInstance.recordEnumeratedHistogram(\n        EnumeratedHistogram.KeybindSetSettingChanged, value, KeybindSetSettings.MAX_VALUE);\n  }\n\n  keyboardShortcutFired(actionId: string): void {\n    const action =\n        KeyboardShortcutAction[actionId as keyof typeof KeyboardShortcutAction] || KeyboardShortcutAction.OtherShortcut;\n    InspectorFrontendHostInstance.recordEnumeratedHistogram(\n        EnumeratedHistogram.KeyboardShortcutFired, action, KeyboardShortcutAction.MAX_VALUE);\n  }\n\n  issuesPanelOpenedFrom(issueOpener: IssueOpener): void {\n    InspectorFrontendHostInstance.recordEnumeratedHistogram(\n        EnumeratedHistogram.IssuesPanelOpenedFrom, issueOpener, IssueOpener.MAX_VALUE);\n  }\n\n  issuesPanelIssueExpanded(issueExpandedCategory: string|undefined): void {\n    if (issueExpandedCategory === undefined) {\n      return;\n    }\n\n    const issueExpanded = IssueExpanded[issueExpandedCategory as keyof typeof IssueExpanded];\n\n    if (issueExpanded === undefined) {\n      return;\n    }\n\n    InspectorFrontendHostInstance.recordEnumeratedHistogram(\n        EnumeratedHistogram.IssuesPanelIssueExpanded, issueExpanded, IssueExpanded.MAX_VALUE);\n  }\n\n  issuesPanelResourceOpened(issueCategory: string, type: string): void {\n    const key = issueCategory + type;\n    const value = IssueResourceOpened[key as keyof typeof IssueResourceOpened];\n\n    if (value === undefined) {\n      return;\n    }\n\n    InspectorFrontendHostInstance.recordEnumeratedHistogram(\n        EnumeratedHistogram.IssuesPanelResourceOpened, value, IssueResourceOpened.MAX_VALUE);\n  }\n\n  issueCreated(code: string): void {\n    const issueCreated = IssueCreated[code as keyof typeof IssueCreated];\n    if (issueCreated === undefined) {\n      return;\n    }\n    InspectorFrontendHostInstance.recordEnumeratedHistogram(\n        EnumeratedHistogram.IssueCreated, issueCreated, IssueCreated.MAX_VALUE);\n  }\n\n  experimentEnabledAtLaunch(experimentId: string): void {\n    const experiment = DevtoolsExperiments[experimentId as keyof typeof DevtoolsExperiments];\n    if (experiment === undefined) {\n      return;\n    }\n    InspectorFrontendHostInstance.recordEnumeratedHistogram(\n        EnumeratedHistogram.ExperimentEnabledAtLaunch, experiment, DevtoolsExperiments.MAX_VALUE);\n  }\n\n  navigationSettingAtFirstTimelineLoad(state: TimelineNavigationSetting): void {\n    InspectorFrontendHostInstance.recordEnumeratedHistogram(\n        EnumeratedHistogram.TimelineNavigationSettingState, state, TimelineNavigationSetting.MAX_VALUE);\n  }\n\n  experimentDisabledAtLaunch(experimentId: string): void {\n    const experiment = DevtoolsExperiments[experimentId as keyof typeof DevtoolsExperiments];\n    if (experiment === undefined) {\n      return;\n    }\n    InspectorFrontendHostInstance.recordEnumeratedHistogram(\n        EnumeratedHistogram.ExperimentDisabledAtLaunch, experiment, DevtoolsExperiments.MAX_VALUE);\n  }\n\n  experimentChanged(experimentId: string, isEnabled: boolean): void {\n    const experiment = DevtoolsExperiments[experimentId as keyof typeof DevtoolsExperiments];\n    if (experiment === undefined) {\n      return;\n    }\n    const actionName = isEnabled ? EnumeratedHistogram.ExperimentEnabled : EnumeratedHistogram.ExperimentDisabled;\n    InspectorFrontendHostInstance.recordEnumeratedHistogram(actionName, experiment, DevtoolsExperiments.MAX_VALUE);\n  }\n\n  developerResourceLoaded(developerResourceLoaded: DeveloperResourceLoaded): void {\n    if (developerResourceLoaded >= DeveloperResourceLoaded.MAX_VALUE) {\n      return;\n    }\n    InspectorFrontendHostInstance.recordEnumeratedHistogram(\n        EnumeratedHistogram.DeveloperResourceLoaded, developerResourceLoaded, DeveloperResourceLoaded.MAX_VALUE);\n  }\n\n  developerResourceScheme(developerResourceScheme: DeveloperResourceScheme): void {\n    if (developerResourceScheme >= DeveloperResourceScheme.MAX_VALUE) {\n      return;\n    }\n    InspectorFrontendHostInstance.recordEnumeratedHistogram(\n        EnumeratedHistogram.DeveloperResourceScheme, developerResourceScheme, DeveloperResourceScheme.MAX_VALUE);\n  }\n\n  language(language: Intl.UnicodeBCP47LocaleIdentifier): void {\n    const languageCode = Language[language as keyof typeof Language];\n    if (languageCode === undefined) {\n      return;\n    }\n    InspectorFrontendHostInstance.recordEnumeratedHistogram(\n        EnumeratedHistogram.Language, languageCode, Language.MAX_VALUE);\n  }\n\n  syncSetting(devtoolsSyncSettingEnabled: boolean): void {\n    InspectorFrontendHostInstance.getSyncInformation(syncInfo => {\n      let settingValue = SyncSetting.CHROME_SYNC_DISABLED;\n      if (syncInfo.isSyncActive && !syncInfo.arePreferencesSynced) {\n        settingValue = SyncSetting.CHROME_SYNC_SETTINGS_DISABLED;\n      } else if (syncInfo.isSyncActive && syncInfo.arePreferencesSynced) {\n        settingValue = devtoolsSyncSettingEnabled ? SyncSetting.DEVTOOLS_SYNC_SETTING_ENABLED :\n                                                    SyncSetting.DEVTOOLS_SYNC_SETTING_DISABLED;\n      }\n\n      InspectorFrontendHostInstance.recordEnumeratedHistogram(\n          EnumeratedHistogram.SyncSetting, settingValue, SyncSetting.MAX_VALUE);\n    });\n  }\n\n  recordingAssertion(value: RecordingAssertion): void {\n    InspectorFrontendHostInstance.recordEnumeratedHistogram(\n        EnumeratedHistogram.RecordingAssertion, value, RecordingAssertion.MAX_VALUE);\n  }\n\n  recordingToggled(value: RecordingToggled): void {\n    InspectorFrontendHostInstance.recordEnumeratedHistogram(\n        EnumeratedHistogram.RecordingToggled, value, RecordingToggled.MAX_VALUE);\n  }\n\n  recordingReplayFinished(value: RecordingReplayFinished): void {\n    InspectorFrontendHostInstance.recordEnumeratedHistogram(\n        EnumeratedHistogram.RecordingReplayFinished, value, RecordingReplayFinished.MAX_VALUE);\n  }\n\n  recordingReplaySpeed(value: RecordingReplaySpeed): void {\n    InspectorFrontendHostInstance.recordEnumeratedHistogram(\n        EnumeratedHistogram.RecordingReplaySpeed, value, RecordingReplaySpeed.MAX_VALUE);\n  }\n\n  recordingReplayStarted(value: RecordingReplayStarted): void {\n    InspectorFrontendHostInstance.recordEnumeratedHistogram(\n        EnumeratedHistogram.RecordingReplayStarted, value, RecordingReplayStarted.MAX_VALUE);\n  }\n\n  recordingEdited(value: RecordingEdited): void {\n    InspectorFrontendHostInstance.recordEnumeratedHistogram(\n        EnumeratedHistogram.RecordingEdited, value, RecordingEdited.MAX_VALUE);\n  }\n\n  recordingExported(value: RecordingExported): void {\n    InspectorFrontendHostInstance.recordEnumeratedHistogram(\n        EnumeratedHistogram.RecordingExported, value, RecordingExported.MAX_VALUE);\n  }\n\n  recordingCodeToggled(value: RecordingCodeToggled): void {\n    InspectorFrontendHostInstance.recordEnumeratedHistogram(\n        EnumeratedHistogram.RecordingCodeToggled, value, RecordingCodeToggled.MAX_VALUE);\n  }\n\n  recordingCopiedToClipboard(value: RecordingCopiedToClipboard): void {\n    InspectorFrontendHostInstance.recordEnumeratedHistogram(\n        EnumeratedHistogram.RecordingCopiedToClipboard, value, RecordingCopiedToClipboard.MAX_VALUE);\n  }\n\n  lighthouseModeRun(type: LighthouseModeRun): void {\n    InspectorFrontendHostInstance.recordEnumeratedHistogram(\n        EnumeratedHistogram.LighthouseModeRun, type, LighthouseModeRun.MAX_VALUE);\n  }\n\n  lighthouseCategoryUsed(type: LighthouseCategoryUsed): void {\n    InspectorFrontendHostInstance.recordEnumeratedHistogram(\n        EnumeratedHistogram.LighthouseCategoryUsed, type, LighthouseCategoryUsed.MAX_VALUE);\n  }\n\n  swatchActivated(swatch: SwatchType): void {\n    InspectorFrontendHostInstance.recordEnumeratedHistogram(\n        EnumeratedHistogram.SwatchActivated, swatch, SwatchType.MAX_VALUE);\n  }\n\n  animationPlaybackRateChanged(playbackRate: AnimationsPlaybackRate): void {\n    InspectorFrontendHostInstance.recordEnumeratedHistogram(\n        EnumeratedHistogram.AnimationPlaybackRateChanged, playbackRate, AnimationsPlaybackRate.MAX_VALUE);\n  }\n\n  workspacesPopulated(wallClockTimeInMilliseconds: number): void {\n    InspectorFrontendHostInstance.recordPerformanceHistogram(\n        'DevTools.Workspaces.PopulateWallClocktime', wallClockTimeInMilliseconds);\n  }\n\n  visualLoggingProcessingDone(timeInMilliseconds: number): void {\n    InspectorFrontendHostInstance.recordPerformanceHistogram(\n        'DevTools.VisualLogging.ProcessingTime', timeInMilliseconds);\n  }\n\n  freestylerQueryLength(numberOfCharacters: number): void {\n    InspectorFrontendHostInstance.recordCountHistogram(\n        'DevTools.Freestyler.QueryLength', numberOfCharacters, 0, 100_000, 100);\n  }\n\n  freestylerEvalResponseSize(bytes: number): void {\n    InspectorFrontendHostInstance.recordCountHistogram('DevTools.Freestyler.EvalResponseSize', bytes, 0, 100_000, 100);\n  }\n\n  performanceAINetworkSummaryResponseSize(bytes: number): void {\n    InspectorFrontendHostInstance.recordCountHistogram(\n        'DevTools.PerformanceAI.NetworkSummaryResponseSize', bytes, 0, 100_000, 100);\n  }\n\n  performanceAINetworkRequestDetailResponseSize(bytes: number): void {\n    InspectorFrontendHostInstance.recordCountHistogram(\n        'DevTools.PerformanceAI.NetworkRequestDetailResponseSize', bytes, 0, 100_000, 100);\n  }\n\n  performanceAIMainThreadActivityResponseSize(bytes: number): void {\n    InspectorFrontendHostInstance.recordCountHistogram(\n        'DevTools.PerformanceAI.MainThreadActivityResponseSize', bytes, 0, 100_000, 100);\n  }\n\n  builtInAiAvailability(availability: BuiltInAiAvailability): void {\n    InspectorFrontendHostInstance.recordEnumeratedHistogram(\n        EnumeratedHistogram.BuiltInAiAvailability, availability, BuiltInAiAvailability.MAX_VALUE);\n  }\n\n  consoleInsightTeaserGenerated(timeInMilliseconds: number): void {\n    InspectorFrontendHostInstance.recordPerformanceHistogram(\n        'DevTools.Insights.TeaserGenerationTime', timeInMilliseconds);\n  }\n}\n\n/**\n * The numeric enum values are not necessarily continuous! It is possible that\n * values have been removed, which results in gaps in the sequence of values.\n * When adding a new value:\n * 1. Add an entry to the bottom of the enum before 'MAX_VALUE'.\n * 2. Set the value of the new entry to the current value of 'MAX_VALUE'.\n * 2. Increment the value of 'MAX_VALUE' by 1.\n * When removing a value which is no longer needed:\n * 1. Delete the line with the unneeded value\n * 2. Do not update any 'MAX_VALUE' or any other value.\n */\n\n/**\n * Codes below are used to collect UMA histograms in the Chromium port.\n * Do not change the values below, additional actions are needed on the Chromium side\n * in order to add more codes.\n **/\nexport enum Action {\n  /* eslint-disable @typescript-eslint/naming-convention */\n  WindowDocked = 1,\n  WindowUndocked = 2,\n  ScriptsBreakpointSet = 3,\n  TimelineStarted = 4,\n  ProfilesCPUProfileTaken = 5,\n  ProfilesHeapProfileTaken = 6,\n  ConsoleEvaluated = 8,\n  FileSavedInWorkspace = 9,\n  DeviceModeEnabled = 10,\n  AnimationsPlaybackRateChanged = 11,\n  RevisionApplied = 12,\n  FileSystemDirectoryContentReceived = 13,\n  StyleRuleEdited = 14,\n  CommandEvaluatedInConsolePanel = 15,\n  DOMPropertiesExpanded = 16,\n  ResizedViewInResponsiveMode = 17,\n  TimelinePageReloadStarted = 18,\n  ConnectToNodeJSFromFrontend = 19,\n  ConnectToNodeJSDirectly = 20,\n  CpuThrottlingEnabled = 21,\n  CpuProfileNodeFocused = 22,\n  CpuProfileNodeExcluded = 23,\n  SelectFileFromFilePicker = 24,\n  SelectCommandFromCommandMenu = 25,\n  ChangeInspectedNodeInElementsPanel = 26,\n  StyleRuleCopied = 27,\n  CoverageStarted = 28,\n  LighthouseStarted = 29,\n  LighthouseFinished = 30,\n  ShowedThirdPartyBadges = 31,\n  LighthouseViewTrace = 32,\n  FilmStripStartedRecording = 33,\n  CoverageReportFiltered = 34,\n  CoverageStartedPerBlock = 35,\n  'SettingsOpenedFromGear-deprecated' = 36,\n  'SettingsOpenedFromMenu-deprecated' = 37,\n  'SettingsOpenedFromCommandMenu-deprecated' = 38,\n  TabMovedToDrawer = 39,\n  TabMovedToMainPanel = 40,\n  CaptureCssOverviewClicked = 41,\n  VirtualAuthenticatorEnvironmentEnabled = 42,\n  SourceOrderViewActivated = 43,\n  UserShortcutAdded = 44,\n  ShortcutRemoved = 45,\n  ShortcutModified = 46,\n  CustomPropertyLinkClicked = 47,\n  CustomPropertyEdited = 48,\n  ServiceWorkerNetworkRequestClicked = 49,\n  ServiceWorkerNetworkRequestClosedQuickly = 50,\n  NetworkPanelServiceWorkerRespondWith = 51,\n  NetworkPanelCopyValue = 52,\n  ConsoleSidebarOpened = 53,\n  PerfPanelTraceImported = 54,\n  PerfPanelTraceExported = 55,\n  StackFrameRestarted = 56,\n  CaptureTestProtocolClicked = 57,\n  BreakpointRemovedFromRemoveButton = 58,\n  BreakpointGroupExpandedStateChanged = 59,\n  HeaderOverrideFileCreated = 60,\n  HeaderOverrideEnableEditingClicked = 61,\n  HeaderOverrideHeaderAdded = 62,\n  HeaderOverrideHeaderEdited = 63,\n  HeaderOverrideHeaderRemoved = 64,\n  HeaderOverrideHeadersFileEdited = 65,\n  PersistenceNetworkOverridesEnabled = 66,\n  PersistenceNetworkOverridesDisabled = 67,\n  BreakpointRemovedFromContextMenu = 68,\n  BreakpointsInFileRemovedFromRemoveButton = 69,\n  BreakpointsInFileRemovedFromContextMenu = 70,\n  BreakpointsInFileCheckboxToggled = 71,\n  BreakpointsInFileEnabledDisabledFromContextMenu = 72,\n  BreakpointConditionEditedFromSidebar = 73,\n  WorkspaceTabAddFolder = 74,\n  WorkspaceTabRemoveFolder = 75,\n  OverrideTabAddFolder = 76,\n  OverrideTabRemoveFolder = 77,\n  WorkspaceSourceSelected = 78,\n  OverridesSourceSelected = 79,\n  StyleSheetInitiatorLinkClicked = 80,\n  BreakpointRemovedFromGutterContextMenu = 81,\n  BreakpointRemovedFromGutterToggle = 82,\n  StylePropertyInsideKeyframeEdited = 83,\n  OverrideContentFromSourcesContextMenu = 84,\n  OverrideContentFromNetworkContextMenu = 85,\n  OverrideScript = 86,\n  OverrideStyleSheet = 87,\n  OverrideDocument = 88,\n  OverrideFetchXHR = 89,\n  OverrideImage = 90,\n  OverrideFont = 91,\n  OverrideContentContextMenuSetup = 92,\n  OverrideContentContextMenuAbandonSetup = 93,\n  OverrideContentContextMenuActivateDisabled = 94,\n  OverrideContentContextMenuOpenExistingFile = 95,\n  OverrideContentContextMenuSaveNewFile = 96,\n  ShowAllOverridesFromSourcesContextMenu = 97,\n  ShowAllOverridesFromNetworkContextMenu = 98,\n  AnimationGroupsCleared = 99,\n  AnimationsPaused = 100,\n  AnimationsResumed = 101,\n  AnimatedNodeDescriptionClicked = 102,\n  AnimationGroupScrubbed = 103,\n  AnimationGroupReplayed = 104,\n  OverrideTabDeleteFolderContextMenu = 105,\n  WorkspaceDropFolder = 107,\n  WorkspaceSelectFolder = 108,\n  OverrideContentContextMenuSourceMappedWarning = 109,\n  OverrideContentContextMenuRedirectToDeployed = 110,\n  NewStyleRuleAdded = 111,\n  TraceExpanded = 112,\n  InsightConsoleMessageShown = 113,\n  InsightRequestedViaContextMenu = 114,\n  InsightRequestedViaHoverButton = 115,\n  InsightRatedPositive = 117,\n  InsightRatedNegative = 118,\n  InsightClosed = 119,\n  InsightErrored = 120,\n  InsightHoverButtonShown = 121,\n  SelfXssWarningConsoleMessageShown = 122,\n  SelfXssWarningDialogShown = 123,\n  SelfXssAllowPastingInConsole = 124,\n  SelfXssAllowPastingInDialog = 125,\n  ToggleEmulateFocusedPageFromStylesPaneOn = 126,\n  ToggleEmulateFocusedPageFromStylesPaneOff = 127,\n  ToggleEmulateFocusedPageFromRenderingTab = 128,\n  ToggleEmulateFocusedPageFromCommandMenu = 129,\n  InsightGenerated = 130,\n  InsightErroredApi = 131,\n  InsightErroredMarkdown = 132,\n  ToggleShowWebVitals = 133,\n  InsightErroredPermissionDenied = 134,\n  InsightErroredCannotSend = 135,\n  InsightErroredRequestFailed = 136,\n  InsightErroredCannotParseChunk = 137,\n  InsightErroredUnknownChunk = 138,\n  InsightErroredOther = 139,\n  AutofillReceived = 140,\n  AutofillReceivedAndTabAutoOpened = 141,\n  AnimationGroupSelected = 142,\n  ScrollDrivenAnimationGroupSelected = 143,\n  ScrollDrivenAnimationGroupScrubbed = 144,\n  AiAssistanceOpenedFromElementsPanel = 145,\n  AiAssistanceOpenedFromStylesTab = 146,\n  ConsoleFilterByContext = 147,\n  ConsoleFilterBySource = 148,\n  ConsoleFilterByUrl = 149,\n  InsightConsentReminderShown = 150,\n  InsightConsentReminderCanceled = 151,\n  InsightConsentReminderConfirmed = 152,\n  InsightsOnboardingShown = 153,\n  InsightsOnboardingCanceledOnPage1 = 154,\n  InsightsOnboardingCanceledOnPage2 = 155,\n  InsightsOnboardingConfirmed = 156,\n  InsightsOnboardingNextPage = 157,\n  InsightsOnboardingPrevPage = 158,\n  InsightsOnboardingFeatureDisabled = 159,\n  InsightsOptInTeaserShown = 160,\n  InsightsOptInTeaserSettingsLinkClicked = 161,\n  InsightsOptInTeaserConfirmedInSettings = 162,\n  InsightsReminderTeaserShown = 163,\n  InsightsReminderTeaserConfirmed = 164,\n  InsightsReminderTeaserCanceled = 165,\n  InsightsReminderTeaserSettingsLinkClicked = 166,\n  InsightsReminderTeaserAbortedInSettings = 167,\n  GeneratingInsightWithoutDisclaimer = 168,\n  AiAssistanceOpenedFromElementsPanelFloatingButton = 169,\n  AiAssistanceOpenedFromNetworkPanel = 170,\n  AiAssistanceOpenedFromSourcesPanel = 171,\n  AiAssistanceOpenedFromSourcesPanelFloatingButton = 172,\n  AiAssistanceOpenedFromPerformancePanelCallTree = 173,\n  AiAssistanceOpenedFromNetworkPanelFloatingButton = 174,\n  AiAssistancePanelOpened = 175,\n  AiAssistanceQuerySubmitted = 176,\n  AiAssistanceAnswerReceived = 177,\n  AiAssistanceDynamicSuggestionClicked = 178,\n  AiAssistanceSideEffectConfirmed = 179,\n  AiAssistanceSideEffectRejected = 180,\n  AiAssistanceError = 181,\n  AiCodeCompletionResponseServedFromCache = 184,\n  AiCodeCompletionRequestTriggered = 185,\n  AiCodeCompletionSuggestionDisplayed = 186,\n  AiCodeCompletionSuggestionAccepted = 187,\n  AiCodeCompletionError = 188,\n  AttributeLinkClicked = 189,\n  InsightRequestedViaTeaser = 190,\n  InsightTeaserGenerationStarted = 191,\n  InsightTeaserGenerationCompleted = 192,\n  InsightTeaserGenerationAborted = 193,\n  InsightTeaserGenerationErrored = 194,\n  MAX_VALUE = 195,\n  /* eslint-enable @typescript-eslint/naming-convention */\n}\n\nexport enum PanelCodes {\n  /* eslint-disable @typescript-eslint/naming-convention */\n  elements = 1,\n  resources = 2,\n  network = 3,\n  sources = 4,\n  timeline = 5,\n  'heap-profiler' = 6,\n  console = 8,\n  layers = 9,\n  'console-view' = 10,\n  animations = 11,\n  'network.config' = 12,\n  rendering = 13,\n  sensors = 14,\n  'sources.search' = 15,\n  security = 16,\n  'js-profiler' = 17,\n  lighthouse = 18,\n  coverage = 19,\n  'protocol-monitor' = 20,\n  'remote-devices' = 21,\n  'web-audio' = 22,\n  'changes.changes' = 23,\n  'performance.monitor' = 24,\n  'release-note' = 25,\n  'live-heap-profile' = 26,\n  'sources.quick' = 27,\n  'network.blocked-urls' = 28,\n  'settings-preferences' = 29,\n  'settings-workspace' = 30,\n  'settings-experiments' = 31,\n  'settings-blackbox' = 32,\n  'settings-devices' = 33,\n  'settings-throttling-conditions' = 34,\n  'settings-emulation-locations' = 35,\n  'settings-shortcuts' = 36,\n  'issues-pane' = 37,\n  'settings-keybinds' = 38,\n  cssoverview = 39,\n  'chrome-recorder' = 40,\n  'trust-tokens' = 41,\n  'reporting-api' = 42,\n  'interest-groups' = 43,\n  'back-forward-cache' = 44,\n  'service-worker-cache' = 45,\n  'background-service-background-fetch' = 46,\n  'background-service-background-sync' = 47,\n  'background-service-push-messaging' = 48,\n  'background-service-notifications' = 49,\n  'background-service-payment-handler' = 50,\n  'background-service-periodic-background-sync' = 51,\n  'service-workers' = 52,\n  'app-manifest' = 53,\n  storage = 54,\n  cookies = 55,\n  'frame-details' = 56,\n  'frame-resource' = 57,\n  'frame-window' = 58,\n  'frame-worker' = 59,\n  'dom-storage' = 60,\n  'indexed-db' = 61,\n  'web-sql' = 62,\n  'performance-insights' = 63,\n  preloading = 64,\n  'bounce-tracking-mitigations' = 65,\n  'developer-resources' = 66,\n  'autofill-view' = 67,\n  freestyler = 68,\n  /* eslint-enable @typescript-eslint/naming-convention */\n  MAX_VALUE = 69,\n}\n\nexport enum MediaTypes {\n  /* eslint-disable @typescript-eslint/naming-convention */\n  Unknown = 0,\n  'text/css' = 2,\n  'text/html' = 3,\n  'application/xml' = 4,\n  'application/wasm' = 5,\n  'application/manifest+json' = 6,\n  'application/x-aspx' = 7,\n  'application/jsp' = 8,\n  'text/x-c++src' = 9,\n  'text/x-coffeescript' = 10,\n  'application/vnd.dart' = 11,\n  'text/typescript' = 12,\n  'text/typescript-jsx' = 13,\n  'application/json' = 14,\n  'text/x-csharp' = 15,\n  'text/x-java' = 16,\n  'text/x-less' = 17,\n  'application/x-httpd-php' = 18,\n  'text/x-python' = 19,\n  'text/x-sh' = 20,\n  'text/x-gss' = 21,\n  'text/x-sass' = 22,\n  'text/x-scss' = 23,\n  'text/markdown' = 24,\n  'text/x-clojure' = 25,\n  'text/jsx' = 26,\n  'text/x-go' = 27,\n  'text/x-kotlin' = 28,\n  'text/x-scala' = 29,\n  'text/x.svelte' = 30,\n  'text/javascript+plain' = 31,\n  'text/javascript+minified' = 32,\n  'text/javascript+sourcemapped' = 33,\n  'text/x.angular' = 34,\n  'text/x.vue' = 35,\n  'text/javascript+snippet' = 36,\n  'text/javascript+eval' = 37,  // Scripts resulting from console inputs or page \"eval\"s with no sourceUrl comment.\n  /* eslint-enable @typescript-eslint/naming-convention */\n  MAX_VALUE = 38,\n}\n\nexport enum KeybindSetSettings {\n  /* eslint-disable @typescript-eslint/naming-convention */\n  devToolsDefault = 0,\n  vsCode = 1,\n  /* eslint-enable @typescript-eslint/naming-convention */\n  MAX_VALUE = 2,\n}\n\nexport enum KeyboardShortcutAction {\n  /* eslint-disable @typescript-eslint/naming-convention */\n  OtherShortcut = 0,\n  'quick-open.show-command-menu' = 1,\n  'console.clear' = 2,\n  'console.toggle' = 3,\n  'debugger.step' = 4,\n  'debugger.step-into' = 5,\n  'debugger.step-out' = 6,\n  'debugger.step-over' = 7,\n  'debugger.toggle-breakpoint' = 8,\n  'debugger.toggle-breakpoint-enabled' = 9,\n  'debugger.toggle-pause' = 10,\n  'elements.edit-as-html' = 11,\n  'elements.hide-element' = 12,\n  'elements.redo' = 13,\n  'elements.toggle-element-search' = 14,\n  'elements.undo' = 15,\n  'main.search-in-panel.find' = 16,\n  'main.toggle-drawer' = 17,\n  'network.hide-request-details' = 18,\n  'network.search' = 19,\n  'network.toggle-recording' = 20,\n  'quick-open.show' = 21,\n  'settings.show' = 22,\n  'sources.search' = 23,\n  'background-service.toggle-recording' = 24,\n  'components.collect-garbage' = 25,\n  'console.clear.history' = 26,\n  'console.create-pin' = 27,\n  'coverage.start-with-reload' = 28,\n  'coverage.toggle-recording' = 29,\n  'debugger.breakpoint-input-window' = 30,\n  'debugger.evaluate-selection' = 31,\n  'debugger.next-call-frame' = 32,\n  'debugger.previous-call-frame' = 33,\n  'debugger.run-snippet' = 34,\n  'debugger.toggle-breakpoints-active' = 35,\n  'elements.capture-area-screenshot' = 36,\n  'emulation.capture-full-height-screenshot' = 37,\n  'emulation.capture-node-screenshot' = 38,\n  'emulation.capture-screenshot' = 39,\n  'emulation.show-sensors' = 40,\n  'emulation.toggle-device-mode' = 41,\n  'help.release-notes' = 42,\n  'help.report-issue' = 43,\n  'input.start-replaying' = 44,\n  'input.toggle-pause' = 45,\n  'input.toggle-recording' = 46,\n  'inspector-main.focus-debuggee' = 47,\n  'inspector-main.hard-reload' = 48,\n  'inspector-main.reload' = 49,\n  'live-heap-profile.start-with-reload' = 50,\n  'live-heap-profile.toggle-recording' = 51,\n  'main.debug-reload' = 52,\n  'main.next-tab' = 53,\n  'main.previous-tab' = 54,\n  'main.search-in-panel.cancel' = 55,\n  'main.search-in-panel.find-next' = 56,\n  'main.search-in-panel.find-previous' = 57,\n  'main.toggle-dock' = 58,\n  'main.zoom-in' = 59,\n  'main.zoom-out' = 60,\n  'main.zoom-reset' = 61,\n  'network-conditions.network-low-end-mobile' = 62,\n  'network-conditions.network-mid-tier-mobile' = 63,\n  'network-conditions.network-offline' = 64,\n  'network-conditions.network-online' = 65,\n  'profiler.heap-toggle-recording' = 66,\n  'profiler.js-toggle-recording' = 67,\n  'resources.clear' = 68,\n  'settings.documentation' = 69,\n  'settings.shortcuts' = 70,\n  'sources.add-folder-to-workspace' = 71,\n  'sources.add-to-watch' = 72,\n  'sources.close-all' = 73,\n  'sources.close-editor-tab' = 74,\n  'sources.create-snippet' = 75,\n  'sources.go-to-line' = 76,\n  'sources.go-to-member' = 77,\n  'sources.jump-to-next-location' = 78,\n  'sources.jump-to-previous-location' = 79,\n  'sources.rename' = 80,\n  'sources.save' = 81,\n  'sources.save-all' = 82,\n  'sources.switch-file' = 83,\n  'timeline.jump-to-next-frame' = 84,\n  'timeline.jump-to-previous-frame' = 85,\n  'timeline.load-from-file' = 86,\n  'timeline.next-recording' = 87,\n  'timeline.previous-recording' = 88,\n  'timeline.record-reload' = 89,\n  'timeline.save-to-file' = 90,\n  'timeline.show-history' = 91,\n  'timeline.toggle-recording' = 92,\n  'sources.increment-css' = 93,\n  'sources.increment-css-by-ten' = 94,\n  'sources.decrement-css' = 95,\n  'sources.decrement-css-by-ten' = 96,\n  'layers.reset-view' = 97,\n  'layers.pan-mode' = 98,\n  'layers.rotate-mode' = 99,\n  'layers.zoom-in' = 100,\n  'layers.zoom-out' = 101,\n  'layers.up' = 102,\n  'layers.down' = 103,\n  'layers.left' = 104,\n  'layers.right' = 105,\n  'help.report-translation-issue' = 106,\n  'rendering.toggle-prefers-color-scheme' = 107,\n  'chrome-recorder.start-recording' = 108,\n  'chrome-recorder.replay-recording' = 109,\n  'chrome-recorder.toggle-code-view' = 110,\n  'chrome-recorder.copy-recording-or-step' = 111,\n  'elements.new-style-rule' = 114,\n  'elements.refresh-event-listeners' = 115,\n  'coverage.clear' = 116,\n  'coverage.export' = 117,\n  'timeline.dim-third-parties' = 118,\n  'main.toggle-drawer-orientation' = 119,\n  /* eslint-enable @typescript-eslint/naming-convention */\n  MAX_VALUE = 120,\n}\n\nexport const enum IssueOpener {\n  CONSOLE_INFO_BAR = 0,\n  LEARN_MORE_LINK_COEP = 1,\n  STATUS_BAR_ISSUES_COUNTER = 2,\n  HAMBURGER_MENU = 3,\n  ADORNER = 4,\n  COMMAND_MENU = 5,\n  MAX_VALUE = 6,\n}\n\n/**\n * This list should contain the currently active Devtools Experiments,\n * gaps are expected.\n */\nexport enum DevtoolsExperiments {\n  /* eslint-disable @typescript-eslint/naming-convention */\n  'capture-node-creation-stacks' = 1,\n  'live-heap-profile' = 11,\n  'protocol-monitor' = 13,\n  'sampling-heap-profiler-timeline' = 17,\n  'show-option-tp-expose-internals-in-heap-snapshot' = 18,\n  'timeline-invalidation-tracking' = 26,\n  'timeline-show-all-events' = 27,\n  'timeline-v8-runtime-call-stats' = 28,\n  apca = 39,\n  'font-editor' = 41,\n  'full-accessibility-tree' = 42,\n  'contrast-issues' = 44,\n  'experimental-cookie-features' = 45,\n  'instrumentation-breakpoints' = 61,\n  'authored-deployed-grouping' = 63,\n  'just-my-code' = 65,\n  'use-source-map-scopes' = 76,\n  'timeline-show-postmessage-events' = 86,\n  'timeline-debug-mode' = 93,\n  /* eslint-enable @typescript-eslint/naming-convention */\n\n  // Increment this when new experiments are added.\n  MAX_VALUE = 110,\n}\n\n/** Update DevToolsIssuesPanelIssueExpanded from tools/metrics/histograms/enums.xml if new enum is added. **/\nexport enum IssueExpanded {\n  /* eslint-disable @typescript-eslint/naming-convention */\n  CrossOriginEmbedderPolicy = 0,\n  MixedContent = 1,\n  SameSiteCookie = 2,\n  HeavyAd = 3,\n  ContentSecurityPolicy = 4,\n  Other = 5,\n  Generic = 6,\n  ThirdPartyPhaseoutCookie = 7,\n  GenericCookie = 8,\n  /* eslint-enable @typescript-eslint/naming-convention */\n  MAX_VALUE = 9,\n}\n\nexport enum IssueResourceOpened {\n  /* eslint-disable @typescript-eslint/naming-convention */\n  CrossOriginEmbedderPolicyRequest = 0,\n  CrossOriginEmbedderPolicyElement = 1,\n  MixedContentRequest = 2,\n  SameSiteCookieCookie = 3,\n  SameSiteCookieRequest = 4,\n  HeavyAdElement = 5,\n  ContentSecurityPolicyDirective = 6,\n  ContentSecurityPolicyElement = 7,\n  /* eslint-enable @typescript-eslint/naming-convention */\n  MAX_VALUE = 13,\n}\n\n/**\n * This list should contain the currently active issue types,\n * gaps are expected.\n */\nexport enum IssueCreated {\n  /* eslint-disable @typescript-eslint/naming-convention */\n  MixedContentIssue = 0,\n  'ContentSecurityPolicyIssue::kInlineViolation' = 1,\n  'ContentSecurityPolicyIssue::kEvalViolation' = 2,\n  'ContentSecurityPolicyIssue::kURLViolation' = 3,\n  'ContentSecurityPolicyIssue::kTrustedTypesSinkViolation' = 4,\n  'ContentSecurityPolicyIssue::kTrustedTypesPolicyViolation' = 5,\n  'HeavyAdIssue::NetworkTotalLimit' = 6,\n  'HeavyAdIssue::CpuTotalLimit' = 7,\n  'HeavyAdIssue::CpuPeakLimit' = 8,\n  'CrossOriginEmbedderPolicyIssue::CoepFrameResourceNeedsCoepHeader' = 9,\n  'CrossOriginEmbedderPolicyIssue::CoopSandboxedIFrameCannotNavigateToCoopPage' = 10,\n  'CrossOriginEmbedderPolicyIssue::CorpNotSameOrigin' = 11,\n  'CrossOriginEmbedderPolicyIssue::CorpNotSameOriginAfterDefaultedToSameOriginByCoep' = 12,\n  'CrossOriginEmbedderPolicyIssue::CorpNotSameSite' = 13,\n  'CookieIssue::ExcludeSameSiteNoneInsecure::ReadCookie' = 14,\n  'CookieIssue::ExcludeSameSiteNoneInsecure::SetCookie' = 15,\n  'CookieIssue::WarnSameSiteNoneInsecure::ReadCookie' = 16,\n  'CookieIssue::WarnSameSiteNoneInsecure::SetCookie' = 17,\n  'CookieIssue::WarnSameSiteStrictLaxDowngradeStrict::Secure' = 18,\n  'CookieIssue::WarnSameSiteStrictLaxDowngradeStrict::Insecure' = 19,\n  'CookieIssue::WarnCrossDowngrade::ReadCookie::Secure' = 20,\n  'CookieIssue::WarnCrossDowngrade::ReadCookie::Insecure' = 21,\n  'CookieIssue::WarnCrossDowngrade::SetCookie::Secure' = 22,\n  'CookieIssue::WarnCrossDowngrade::SetCookie::Insecure' = 23,\n  'CookieIssue::ExcludeNavigationContextDowngrade::Secure' = 24,\n  'CookieIssue::ExcludeNavigationContextDowngrade::Insecure' = 25,\n  'CookieIssue::ExcludeContextDowngrade::ReadCookie::Secure' = 26,\n  'CookieIssue::ExcludeContextDowngrade::ReadCookie::Insecure' = 27,\n  'CookieIssue::ExcludeContextDowngrade::SetCookie::Secure' = 28,\n  'CookieIssue::ExcludeContextDowngrade::SetCookie::Insecure' = 29,\n  'CookieIssue::ExcludeSameSiteUnspecifiedTreatedAsLax::ReadCookie' = 30,\n  'CookieIssue::ExcludeSameSiteUnspecifiedTreatedAsLax::SetCookie' = 31,\n  'CookieIssue::WarnSameSiteUnspecifiedLaxAllowUnsafe::ReadCookie' = 32,\n  'CookieIssue::WarnSameSiteUnspecifiedLaxAllowUnsafe::SetCookie' = 33,\n  'CookieIssue::WarnSameSiteUnspecifiedCrossSiteContext::ReadCookie' = 34,\n  'CookieIssue::WarnSameSiteUnspecifiedCrossSiteContext::SetCookie' = 35,\n  'SharedArrayBufferIssue::TransferIssue' = 36,\n  'SharedArrayBufferIssue::CreationIssue' = 37,\n  LowTextContrastIssue = 41,\n  'CorsIssue::InsecurePrivateNetwork' = 42,\n  'CorsIssue::InvalidHeaders' = 44,\n  'CorsIssue::WildcardOriginWithCredentials' = 45,\n  'CorsIssue::PreflightResponseInvalid' = 46,\n  'CorsIssue::OriginMismatch' = 47,\n  'CorsIssue::AllowCredentialsRequired' = 48,\n  'CorsIssue::MethodDisallowedByPreflightResponse' = 49,\n  'CorsIssue::HeaderDisallowedByPreflightResponse' = 50,\n  'CorsIssue::RedirectContainsCredentials' = 51,\n  'CorsIssue::DisallowedByMode' = 52,\n  'CorsIssue::CorsDisabledScheme' = 53,\n  'CorsIssue::PreflightMissingAllowExternal' = 54,\n  'CorsIssue::PreflightInvalidAllowExternal' = 55,\n  'CorsIssue::NoCorsRedirectModeNotFollow' = 57,\n  'QuirksModeIssue::QuirksMode' = 58,\n  'QuirksModeIssue::LimitedQuirksMode' = 59,\n  DeprecationIssue = 60,\n  'ClientHintIssue::MetaTagAllowListInvalidOrigin' = 61,\n  'ClientHintIssue::MetaTagModifiedHTML' = 62,\n  'CorsIssue::PreflightAllowPrivateNetworkError' = 63,\n  'GenericIssue::CrossOriginPortalPostMessageError' = 64,\n  'GenericIssue::FormLabelForNameError' = 65,\n  'GenericIssue::FormDuplicateIdForInputError' = 66,\n  'GenericIssue::FormInputWithNoLabelError' = 67,\n  'GenericIssue::FormAutocompleteAttributeEmptyError' = 68,\n  'GenericIssue::FormEmptyIdAndNameAttributesForInputError' = 69,\n  'GenericIssue::FormAriaLabelledByToNonExistingId' = 70,\n  'GenericIssue::FormInputAssignedAutocompleteValueToIdOrNameAttributeError' = 71,\n  'GenericIssue::FormLabelHasNeitherForNorNestedInput' = 72,\n  'GenericIssue::FormLabelForMatchesNonExistingIdError' = 73,\n  'GenericIssue::FormHasPasswordFieldWithoutUsernameFieldError' = 74,\n  'GenericIssue::FormInputHasWrongButWellIntendedAutocompleteValueError' = 75,\n  'StylesheetLoadingIssue::LateImportRule' = 76,\n  'StylesheetLoadingIssue::RequestFailed' = 77,\n  'CorsIssue::PreflightMissingPrivateNetworkAccessId' = 78,\n  'CorsIssue::PreflightMissingPrivateNetworkAccessName' = 79,\n  'CorsIssue::PrivateNetworkAccessPermissionUnavailable' = 80,\n  'CorsIssue::PrivateNetworkAccessPermissionDenied' = 81,\n  'CookieIssue::WarnThirdPartyPhaseout::ReadCookie' = 82,\n  'CookieIssue::WarnThirdPartyPhaseout::SetCookie' = 83,\n  'CookieIssue::ExcludeThirdPartyPhaseout::ReadCookie' = 84,\n  'CookieIssue::ExcludeThirdPartyPhaseout::SetCookie' = 85,\n  'ElementAccessibilityIssue::DisallowedSelectChild' = 86,\n  'ElementAccessibilityIssue::DisallowedOptGroupChild' = 87,\n  'ElementAccessibilityIssue::NonPhrasingContentOptionChild' = 88,\n  'ElementAccessibilityIssue::InteractiveContentOptionChild' = 89,\n  'ElementAccessibilityIssue::InteractiveContentLegendChild' = 90,\n  'SRIMessageSignatureIssue::MissingSignatureHeader' = 91,\n  'SRIMessageSignatureIssue::MissingSignatureInputHeader' = 92,\n  'SRIMessageSignatureIssue::InvalidSignatureHeader' = 93,\n  'SRIMessageSignatureIssue::InvalidSignatureInputHeader' = 94,\n  'SRIMessageSignatureIssue::SignatureHeaderValueIsNotByteSequence' = 95,\n  'SRIMessageSignatureIssue::SignatureHeaderValueIsParameterized' = 96,\n  'SRIMessageSignatureIssue::SignatureHeaderValueIsIncorrectLength' = 97,\n  'SRIMessageSignatureIssue::SignatureInputHeaderMissingLabel' = 98,\n  'SRIMessageSignatureIssue::SignatureInputHeaderValueNotInnerList' = 99,\n  'SRIMessageSignatureIssue::SignatureInputHeaderValueMissingComponents' = 100,\n  'SRIMessageSignatureIssue::SignatureInputHeaderInvalidComponentType' = 101,\n  'SRIMessageSignatureIssue::SignatureInputHeaderInvalidComponentName' = 102,\n  'SRIMessageSignatureIssue::SignatureInputHeaderInvalidHeaderComponentParameter' = 103,\n  'SRIMessageSignatureIssue::SignatureInputHeaderInvalidDerivedComponentParameter' = 104,\n  'SRIMessageSignatureIssue::SignatureInputHeaderKeyIdLength' = 105,\n  'SRIMessageSignatureIssue::SignatureInputHeaderInvalidParameter' = 106,\n  'SRIMessageSignatureIssue::SignatureInputHeaderMissingRequiredParameters' = 107,\n  'SRIMessageSignatureIssue::ValidationFailedSignatureExpired' = 108,\n  'SRIMessageSignatureIssue::ValidationFailedInvalidLength' = 109,\n  'SRIMessageSignatureIssue::ValidationFailedSignatureMismatch' = 110,\n  'CorsIssue::LocalNetworkAccessPermissionDenied' = 111,\n  'SRIMessageSignatureIssue::ValidationFailedIntegrityMismatch' = 112,\n  'ElementAccessibilityIssue::InteractiveContentSummaryDescendant' = 113,\n  /* eslint-enable @typescript-eslint/naming-convention */\n  MAX_VALUE = 114,\n}\n\nexport const enum DeveloperResourceLoaded {\n  LOAD_THROUGH_PAGE_VIA_TARGET = 0,\n  LOAD_THROUGH_PAGE_VIA_FRAME = 1,\n  LOAD_THROUGH_PAGE_FAILURE = 2,\n  LOAD_THROUGH_PAGE_FALLBACK = 3,\n  FALLBACK_AFTER_FAILURE = 4,\n  FALLBACK_PER_OVERRIDE = 5,\n  FALLBACK_PER_PROTOCOL = 6,\n  FALLBACK_FAILURE = 7,\n  MAX_VALUE = 8,\n}\n\nexport const enum DeveloperResourceScheme {\n  OTHER = 0,\n  UKNOWN = 1,\n  HTTP = 2,\n  HTTPS = 3,\n  HTTP_LOCALHOST = 4,\n  HTTPS_LOCALHOST = 5,\n  DATA = 6,\n  FILE = 7,\n  BLOB = 8,\n  MAX_VALUE = 9,\n}\n\nexport enum Language {\n  /* eslint-disable @typescript-eslint/naming-convention */\n  af = 1,\n  am = 2,\n  ar = 3,\n  as = 4,\n  az = 5,\n  be = 6,\n  bg = 7,\n  bn = 8,\n  bs = 9,\n  ca = 10,\n  cs = 11,\n  cy = 12,\n  da = 13,\n  de = 14,\n  el = 15,\n  'en-GB' = 16,\n  'en-US' = 17,\n  'es-419' = 18,\n  es = 19,\n  et = 20,\n  eu = 21,\n  fa = 22,\n  fi = 23,\n  fil = 24,\n  'fr-CA' = 25,\n  fr = 26,\n  gl = 27,\n  gu = 28,\n  he = 29,\n  hi = 30,\n  hr = 31,\n  hu = 32,\n  hy = 33,\n  id = 34,\n  is = 35,\n  it = 36,\n  ja = 37,\n  ka = 38,\n  kk = 39,\n  km = 40,\n  kn = 41,\n  ko = 42,\n  ky = 43,\n  lo = 44,\n  lt = 45,\n  lv = 46,\n  mk = 47,\n  ml = 48,\n  mn = 49,\n  mr = 50,\n  ms = 51,\n  my = 52,\n  ne = 53,\n  nl = 54,\n  no = 55,\n  or = 56,\n  pa = 57,\n  pl = 58,\n  'pt-PT' = 59,\n  pt = 60,\n  ro = 61,\n  ru = 62,\n  si = 63,\n  sk = 64,\n  sl = 65,\n  sq = 66,\n  'sr-Latn' = 67,\n  sr = 68,\n  sv = 69,\n  sw = 70,\n  ta = 71,\n  te = 72,\n  th = 73,\n  tr = 74,\n  uk = 75,\n  ur = 76,\n  uz = 77,\n  vi = 78,\n  zh = 79,\n  'zh-HK' = 80,\n  'zh-TW' = 81,\n  zu = 82,\n  /* eslint-enable @typescript-eslint/naming-convention */\n  MAX_VALUE = 83,\n}\n\nexport const enum SyncSetting {\n  CHROME_SYNC_DISABLED = 1,\n  CHROME_SYNC_SETTINGS_DISABLED = 2,\n  DEVTOOLS_SYNC_SETTING_DISABLED = 3,\n  DEVTOOLS_SYNC_SETTING_ENABLED = 4,\n  MAX_VALUE = 5,\n}\n\nexport const enum RecordingToggled {\n  RECORDING_STARTED = 1,\n  RECORDING_FINISHED = 2,\n  MAX_VALUE = 3,\n}\n\nexport const enum RecordingAssertion {\n  ASSERTION_ADDED = 1,\n  PROPERTY_ASSERTION_EDITED = 2,\n  ATTRIBUTE_ASSERTION_EDITED = 3,\n  MAX_VALUE = 4,\n}\n\nexport const enum RecordingReplayFinished {\n  SUCCESS = 1,\n  TIMEOUT_ERROR_SELECTORS = 2,\n  TIMEOUT_ERROR_TARGET = 3,\n  OTHER_ERROR = 4,\n  MAX_VALUE = 5,\n}\n\nexport const enum RecordingReplaySpeed {\n  NORMAL = 1,\n  SLOW = 2,\n  VERY_SLOW = 3,\n  EXTREMELY_SLOW = 4,\n  MAX_VALUE = 5,\n}\n\nexport const enum RecordingReplayStarted {\n  REPLAY_ONLY = 1,\n  REPLAY_WITH_PERFORMANCE_TRACING = 2,\n  REPLAY_VIA_EXTENSION = 3,\n  MAX_VALUE = 4,\n}\n\nexport const enum RecordingEdited {\n  SELECTOR_PICKER_USED = 1,\n  STEP_ADDED = 2,\n  STEP_REMOVED = 3,\n  SELECTOR_ADDED = 4,\n  SELECTOR_REMOVED = 5,\n  SELECTOR_PART_ADDED = 6,\n  SELECTOR_PART_EDITED = 7,\n  SELECTOR_PART_REMOVED = 8,\n  TYPE_CHANGED = 9,\n  OTHER_EDITING = 10,\n  MAX_VALUE = 11,\n}\n\nexport const enum RecordingExported {\n  TO_PUPPETEER = 1,\n  TO_JSON = 2,\n  TO_PUPPETEER_REPLAY = 3,\n  TO_EXTENSION = 4,\n  TO_LIGHTHOUSE = 5,\n  MAX_VALUE = 6,\n}\n\nexport const enum RecordingCodeToggled {\n  CODE_SHOWN = 1,\n  CODE_HIDDEN = 2,\n  MAX_VALUE = 3,\n}\n\nexport const enum RecordingCopiedToClipboard {\n  COPIED_RECORDING_WITH_PUPPETEER = 1,\n  COPIED_RECORDING_WITH_JSON = 2,\n  COPIED_RECORDING_WITH_REPLAY = 3,\n  COPIED_RECORDING_WITH_EXTENSION = 4,\n  COPIED_STEP_WITH_PUPPETEER = 5,\n  COPIED_STEP_WITH_JSON = 6,\n  COPIED_STEP_WITH_REPLAY = 7,\n  COPIED_STEP_WITH_EXTENSION = 8,\n  MAX_VALUE = 9,\n}\n\nexport enum ManifestSectionCodes {\n  /* eslint-disable @typescript-eslint/naming-convention -- Indexed access. */\n  OtherSection = 0,\n  Identity = 1,\n  Presentation = 2,\n  'Protocol Handlers' = 3,\n  Icons = 4,\n  'Window Controls Overlay' = 5,\n  /* eslint-enable @typescript-eslint/naming-convention */\n  MAX_VALUE = 6,\n}\n\nexport const enum LighthouseModeRun {\n  NAVIGATION = 0,\n  TIMESPAN = 1,\n  SNAPSHOT = 2,\n  LEGACY_NAVIGATION = 3,\n  MAX_VALUE = 4,\n}\n\nexport const enum LighthouseCategoryUsed {\n  PERFORMANCE = 0,\n  ACCESSIBILITY = 1,\n  BEST_PRACTICES = 2,\n  SEO = 3,\n  PWA = 4,\n  PUB_ADS = 5,\n  MAX_VALUE = 6,\n}\n\nexport const enum SwatchType {\n  VAR_LINK = 0,\n  ANIMATION_NAME_LINK = 1,\n  COLOR = 2,\n  ANIMATION_TIMING = 3,\n  SHADOW = 4,\n  GRID = 5,\n  FLEX = 6,\n  ANGLE = 7,\n  LENGTH = 8,\n  POSITION_TRY_LINK = 10,\n  ATTR_LINK = 11,\n  MASONRY = 12,\n  MAX_VALUE = 13,\n}\n\nexport const enum BadgeType {\n  GRID = 0,\n  SUBGRID = 1,\n  FLEX = 2,\n  AD = 3,\n  SCROLL_SNAP = 4,\n  CONTAINER = 5,\n  SLOT = 6,\n  TOP_LAYER = 7,\n  REVEAL = 8,\n  MAX_VALUE = 9,\n}\n\nexport const enum AnimationsPlaybackRate {\n  PERCENT_100 = 0,\n  PERCENT_25 = 1,\n  PERCENT_10 = 2,\n  OTHER = 3,\n  MAX_VALUE = 4,\n}\n\nexport const enum TimelineNavigationSetting {\n  // Setting is set to classic when the first trace of the session is recorded or loaded.\n  CLASSIC_AT_SESSION_FIRST_TRACE = 0,\n  // Setting is set to modern when the first trace of the session is recorded or loaded.\n  MODERN_AT_SESSION_FIRST_TRACE = 1,\n  SWITCHED_TO_CLASSIC = 2,\n  SWITCHED_TO_MODERN = 3,\n  MAX_VALUE = 4,\n}\n\nexport const enum BuiltInAiAvailability {\n  UNAVAILABLE_HAS_GPU = 0,\n  DOWNLOADABLE_HAS_GPU = 1,\n  DOWNLOADING_HAS_GPU = 2,\n  AVAILABLE_HAS_GPU = 3,\n  DISABLED_HAS_GPU = 4,\n  UNAVAILABLE_NO_GPU = 5,\n  DOWNLOADABLE_NO_GPU = 6,\n  DOWNLOADING_NO_GPU = 7,\n  AVAILABLE_NO_GPU = 8,\n  DISABLED_NO_GPU = 9,\n  MAX_VALUE = 10,\n}\n", "// Copyright 2019 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as AidaClient from './AidaClient.js';\nimport * as DispatchHttpRequestClient from './DispatchHttpRequestClient.js';\nimport * as GdpClient from './GdpClient.js';\nimport * as InspectorFrontendHost from './InspectorFrontendHost.js';\nimport * as InspectorFrontendHostAPI from './InspectorFrontendHostAPI.js';\nimport * as Platform from './Platform.js';\nimport * as ResourceLoader from './ResourceLoader.js';\nimport * as UserMetrics from './UserMetrics.js';\n\nexport {\n  AidaClient,\n  DispatchHttpRequestClient,\n  GdpClient,\n  InspectorFrontendHost,\n  InspectorFrontendHostAPI,\n  Platform,\n  ResourceLoader,\n  UserMetrics,\n};\n\nexport const userMetrics = new UserMetrics.UserMetrics();\n"],
  "mappings": "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",
  "names": ["Common", "Root", "Common", "i18n", "Events", "EnumeratedHistogram", "headers", "UIStrings", "str_", "i18nString", "key", "ErrorType", "Role", "Rating", "ParametersTypes", "FunctionalityType", "ClientFeature", "UserTier", "EditType", "Reason", "UseCase", "RecitationAction", "CitationSourceType", "AidaAccessPreconditions", "AidaInferenceLanguage", "syncInfo", "Events", "Root", "SubscriptionStatus", "SubscriptionTier", "EligibilityStatus", "EmailPreference", "makeHttpRequest", "SERVICE_NAME", "platform", "Action", "PanelCodes", "MediaTypes", "KeybindSetSettings", "KeyboardShortcutAction", "IssueOpener", "DevtoolsExperiments", "IssueExpanded", "IssueResourceOpened", "IssueCreated", "DeveloperResourceLoaded", "DeveloperResourceScheme", "Language", "SyncSetting", "RecordingToggled", "RecordingAssertion", "RecordingReplayFinished", "RecordingReplaySpeed", "RecordingReplayStarted", "RecordingEdited", "RecordingExported", "RecordingCodeToggled", "RecordingCopiedToClipboard", "ManifestSectionCodes", "LighthouseModeRun", "LighthouseCategoryUsed", "SwatchType", "BadgeType", "AnimationsPlaybackRate", "TimelineNavigationSetting", "BuiltInAiAvailability"]
}
