{
  "core/common/ResourceType.ts | cspviolationreport": {
    "message": "CSPViolationReport"
  },
  "core/common/ResourceType.ts | css": {
    "message": "CSS"
  },
  "core/common/ResourceType.ts | doc": {
    "message": "Doc"
  },
  "core/common/ResourceType.ts | document": {
    "message": "Dokument"
  },
  "core/common/ResourceType.ts | eventsource": {
    "message": "EventSource"
  },
  "core/common/ResourceType.ts | fetch": {
    "message": "Abrufen"
  },
  "core/common/ResourceType.ts | fetchAndXHR": {
    "message": "Fetch und XHR"
  },
  "core/common/ResourceType.ts | font": {
    "message": "Schriftart"
  },
  "core/common/ResourceType.ts | image": {
    "message": "Bild"
  },
  "core/common/ResourceType.ts | img": {
    "message": "Img"
  },
  "core/common/ResourceType.ts | javascript": {
    "message": "JavaScript"
  },
  "core/common/ResourceType.ts | js": {
    "message": "JS"
  },
  "core/common/ResourceType.ts | manifest": {
    "message": "Manifest"
  },
  "core/common/ResourceType.ts | media": {
    "message": "Medien"
  },
  "core/common/ResourceType.ts | other": {
    "message": "Sonstige"
  },
  "core/common/ResourceType.ts | ping": {
    "message": "Ping"
  },
  "core/common/ResourceType.ts | preflight": {
    "message": "Preflight"
  },
  "core/common/ResourceType.ts | script": {
    "message": "Script"
  },
  "core/common/ResourceType.ts | signedexchange": {
    "message": "SignedExchange"
  },
  "core/common/ResourceType.ts | stylesheet": {
    "message": "Stylesheet"
  },
  "core/common/ResourceType.ts | texttrack": {
    "message": "TextTrack"
  },
  "core/common/ResourceType.ts | wasm": {
    "message": "Wasm"
  },
  "core/common/ResourceType.ts | webassembly": {
    "message": "WebAssembly"
  },
  "core/common/ResourceType.ts | webbundle": {
    "message": "WebBundle"
  },
  "core/common/ResourceType.ts | websocket": {
    "message": "WebSocket"
  },
  "core/common/ResourceType.ts | webtransport": {
    "message": "WebTransport"
  },
  "core/common/ResourceType.ts | ws": {
    "message": "WS"
  },
  "core/common/Revealer.ts | applicationPanel": {
    "message": "Anwendungsbereich"
  },
  "core/common/Revealer.ts | changesDrawer": {
    "message": "Ändert die Leiste"
  },
  "core/common/Revealer.ts | elementsPanel": {
    "message": "Bereich „Elemente“"
  },
  "core/common/Revealer.ts | issuesView": {
    "message": "Ansicht „Probleme“"
  },
  "core/common/Revealer.ts | memoryInspectorPanel": {
    "message": "Bereich „Arbeitsspeicher-Prüftool“"
  },
  "core/common/Revealer.ts | networkPanel": {
    "message": "Netzwerkbereich"
  },
  "core/common/Revealer.ts | sourcesPanel": {
    "message": "Quellenbereich"
  },
  "core/common/Revealer.ts | stylesSidebar": {
    "message": "Seitenleiste „Stile“"
  },
  "core/common/SettingRegistration.ts | adorner": {
    "message": "Adorner"
  },
  "core/common/SettingRegistration.ts | appearance": {
    "message": "Darstellung"
  },
  "core/common/SettingRegistration.ts | console": {
    "message": "Konsole"
  },
  "core/common/SettingRegistration.ts | debugger": {
    "message": "Debugger"
  },
  "core/common/SettingRegistration.ts | elements": {
    "message": "Elemente"
  },
  "core/common/SettingRegistration.ts | extension": {
    "message": "Erweiterung"
  },
  "core/common/SettingRegistration.ts | global": {
    "message": "Global"
  },
  "core/common/SettingRegistration.ts | grid": {
    "message": "Raster"
  },
  "core/common/SettingRegistration.ts | memory": {
    "message": "Arbeitsspeicher"
  },
  "core/common/SettingRegistration.ts | mobile": {
    "message": "Mobil"
  },
  "core/common/SettingRegistration.ts | network": {
    "message": "Netzwerk"
  },
  "core/common/SettingRegistration.ts | performance": {
    "message": "Leistung"
  },
  "core/common/SettingRegistration.ts | persistence": {
    "message": "Persistenz"
  },
  "core/common/SettingRegistration.ts | rendering": {
    "message": "Rendering"
  },
  "core/common/SettingRegistration.ts | sources": {
    "message": "Quellcode"
  },
  "core/common/SettingRegistration.ts | sync": {
    "message": "Synchronisieren"
  },
  "core/host/InspectorFrontendHost.ts | devtoolsS": {
    "message": "Entwicklertools – {PH1}"
  },
  "core/host/ResourceLoader.ts | cacheError": {
    "message": "Cache-Fehler"
  },
  "core/host/ResourceLoader.ts | certificateError": {
    "message": "Zertifikatfehler"
  },
  "core/host/ResourceLoader.ts | certificateManagerError": {
    "message": "Zertifikat-Managerfehler"
  },
  "core/host/ResourceLoader.ts | connectionError": {
    "message": "Verbindungsfehler"
  },
  "core/host/ResourceLoader.ts | decodingDataUrlFailed": {
    "message": "Fehler beim Decodieren der Daten-URL"
  },
  "core/host/ResourceLoader.ts | dnsResolverError": {
    "message": "DNS-Resolver-Fehler"
  },
  "core/host/ResourceLoader.ts | ftpError": {
    "message": "FTP-Fehler"
  },
  "core/host/ResourceLoader.ts | httpError": {
    "message": "HTTP-Fehler"
  },
  "core/host/ResourceLoader.ts | httpErrorStatusCodeSS": {
    "message": "HTTP-Fehler: Statuscode {PH1}, {PH2}"
  },
  "core/host/ResourceLoader.ts | invalidUrl": {
    "message": "URL ungültig"
  },
  "core/host/ResourceLoader.ts | signedExchangeError": {
    "message": "SignedExchange-Fehler"
  },
  "core/host/ResourceLoader.ts | systemError": {
    "message": "Systemfehler"
  },
  "core/host/ResourceLoader.ts | unknownError": {
    "message": "Unbekannter Fehler"
  },
  "core/i18n/time-utilities.ts | fdays": {
    "message": "{PH1} Tage"
  },
  "core/i18n/time-utilities.ts | fhrs": {
    "message": "{PH1} Std."
  },
  "core/i18n/time-utilities.ts | fmin": {
    "message": "{PH1} min"
  },
  "core/i18n/time-utilities.ts | fmms": {
    "message": "{PH1} μs"
  },
  "core/i18n/time-utilities.ts | fms": {
    "message": "{PH1} ms"
  },
  "core/i18n/time-utilities.ts | fs": {
    "message": "{PH1} s"
  },
  "core/sdk/CPUProfilerModel.ts | profileD": {
    "message": "Profil {PH1}"
  },
  "core/sdk/CSSStyleSheetHeader.ts | couldNotFindTheOriginalStyle": {
    "message": "Ursprüngliches Stylesheet konnte nicht gefunden werden."
  },
  "core/sdk/CSSStyleSheetHeader.ts | thereWasAnErrorRetrievingThe": {
    "message": "Beim Abrufen der Quellenstile ist ein Fehler aufgetreten."
  },
  "core/sdk/ChildTargetManager.ts | main": {
    "message": "Hauptinhalt"
  },
  "core/sdk/CompilerSourceMappingContentProvider.ts | couldNotLoadContentForSS": {
    "message": "Inhalt für {PH1} ({PH2}) konnte nicht geladen werden"
  },
  "core/sdk/ConsoleModel.ts | bfcacheNavigation": {
    "message": "Die Navigation zu {PH1} wurde aus dem Back-Forward-Cache wiederhergestellt (siehe https://web.dev/bfcache/)"
  },
  "core/sdk/ConsoleModel.ts | failedToSaveToTempVariable": {
    "message": "Fehler beim Speichern der temporären Variable"
  },
  "core/sdk/ConsoleModel.ts | navigatedToS": {
    "message": "{PH1} aufgerufen"
  },
  "core/sdk/ConsoleModel.ts | profileSFinished": {
    "message": "Profil „{PH1}“ beendet."
  },
  "core/sdk/ConsoleModel.ts | profileSStarted": {
    "message": "Profil „{PH1}“ gestartet."
  },
  "core/sdk/DebuggerModel.ts | block": {
    "message": "Block"
  },
  "core/sdk/DebuggerModel.ts | catchBlock": {
    "message": "Catch-Block"
  },
  "core/sdk/DebuggerModel.ts | closure": {
    "message": "Closure"
  },
  "core/sdk/DebuggerModel.ts | expression": {
    "message": "Ausdruck"
  },
  "core/sdk/DebuggerModel.ts | global": {
    "message": "Global"
  },
  "core/sdk/DebuggerModel.ts | local": {
    "message": "Lokal"
  },
  "core/sdk/DebuggerModel.ts | module": {
    "message": "Modul"
  },
  "core/sdk/DebuggerModel.ts | script": {
    "message": "Script"
  },
  "core/sdk/DebuggerModel.ts | withBlock": {
    "message": "With-Block"
  },
  "core/sdk/NetworkManager.ts | fastG": {
    "message": "Schnelles 3G"
  },
  "core/sdk/NetworkManager.ts | noContentForPreflight": {
    "message": "Keine Inhalte für Preflight-Anfragen verfügbar"
  },
  "core/sdk/NetworkManager.ts | noContentForRedirect": {
    "message": "Keine Inhalte verfügbar, da diese Anfrage weitergeleitet wurde"
  },
  "core/sdk/NetworkManager.ts | noContentForWebSocket": {
    "message": "Inhalte für WebSockets werden aktuell nicht unterstützt"
  },
  "core/sdk/NetworkManager.ts | noThrottling": {
    "message": "Keine Drosselung"
  },
  "core/sdk/NetworkManager.ts | offline": {
    "message": "Offline"
  },
  "core/sdk/NetworkManager.ts | requestWasBlockedByDevtoolsS": {
    "message": "Anforderung wurde von Entwicklertools blockiert: „{PH1}“"
  },
  "core/sdk/NetworkManager.ts | sFailedLoadingSS": {
    "message": "{PH1} konnte nicht geladen werden: {PH2} „{PH3}“."
  },
  "core/sdk/NetworkManager.ts | sFinishedLoadingSS": {
    "message": "Laden von {PH1} beendet: {PH2} „{PH3}“."
  },
  "core/sdk/NetworkManager.ts | slowG": {
    "message": "Langsames 3G"
  },
  "core/sdk/NetworkRequest.ts | anUnknownErrorWasEncounteredWhenTrying": {
    "message": "Beim Speichern dieses Cookies ist ein unbekannter Fehler aufgetreten."
  },
  "core/sdk/NetworkRequest.ts | binary": {
    "message": "(binär)"
  },
  "core/sdk/NetworkRequest.ts | blockedReasonInvalidDomain": {
    "message": "Dieser Versuch, ein Cookie über einen „Set-Cookie“-Header zu setzen, wurde blockiert, weil das Domain-Attribut des Cookies in Bezug auf die aktuelle Host-URL ungültig war."
  },
  "core/sdk/NetworkRequest.ts | blockedReasonInvalidPrefix": {
    "message": "Dieser Versuch, ein Cookie über einen „Set-Cookie“-Header zu setzen, wurde blockiert, weil das Cookie das Präfix „__Secure-“ oder „__Host-“ in seinem Namen verwendet und gegen die zusätzlichen Regeln verstoßen hat, die für Cookies mit diesen Präfixen gelten und in „https://tools.ietf.org/html/draft-west-cookie-prefixes-05“ definiert sind."
  },
  "core/sdk/NetworkRequest.ts | blockedReasonOverwriteSecure": {
    "message": "Dieser Versuch, ein Cookie über einen „Set-Cookie“-Header zu setzen, wurde blockiert, weil das Cookie nicht über eine verschlüsselte Verbindung gesendet wurde und ein Cookie mit dem Attribut „Secure“ überschrieben hätte."
  },
  "core/sdk/NetworkRequest.ts | blockedReasonSameSiteNoneInsecure": {
    "message": "Dieser Versuch, ein Cookie über einen „Set-Cookie“-Header zu setzen, wurde blockiert, weil das Cookie das Attribut „SameSite=None“ hatte, aber nicht das Attribut „Secure“, das für die Verwendung von „SameSite=None“ erforderlich ist."
  },
  "core/sdk/NetworkRequest.ts | blockedReasonSameSiteStrictLax": {
    "message": "Dieser Versuch, ein Cookie über einen „Set-Cookie“-Header zu setzen, wurde blockiert, weil das Cookie das Attribut „{PH1}“ hatte, aber von einer websiteübergreifenden Antwort kam, die nicht die Antwort auf eine Navigation der obersten Ebene war."
  },
  "core/sdk/NetworkRequest.ts | blockedReasonSameSiteUnspecifiedTreatedAsLax": {
    "message": "Dieser „Set-Cookie“-Header gab kein Attribut „SameSite“ an und war auf „SameSite=Lax,“ voreingestellt. Der Versuch, ein Cookie zu setzen, wurde blockiert, weil das Cookie von einer websiteübergreifenden Antwort kam, die nicht die Antwort auf eine Navigation der obersten Ebene war. Das „Set-Cookie“ muss erst mit „SameSite=None“ festgelegt worden sein, um eine websiteübergreifende Nutzung zu ermöglichen."
  },
  "core/sdk/NetworkRequest.ts | blockedReasonSecureOnly": {
    "message": "Dieser Versuch, ein Cookie über einen „Set-Cookie“-Header zu setzen, wurde blockiert, weil das Cookie das Attribut „Secure“ hatte, aber nicht über eine verschlüsselte Verbindung empfangen wurde."
  },
  "core/sdk/NetworkRequest.ts | domainMismatch": {
    "message": "Dieses Cookie wurde blockiert, weil weder die Domain der Anfrage-URL genau mit der Domain des Cookies übereinstimmte, noch die Domain der Anfrage-URL eine Subdomain des Domain-Attributwerts des Cookies war."
  },
  "core/sdk/NetworkRequest.ts | nameValuePairExceedsMaxSize": {
    "message": "Dieses Cookie wurde blockiert, weil es zu groß war. Die Größe des Namens und des Werts darf zusammen 4.096 Zeichen nicht überschreiten."
  },
  "core/sdk/NetworkRequest.ts | notOnPath": {
    "message": "Dieses Cookie wurde blockiert, weil sein Pfad keine exakte Übereinstimmung mit dem Pfad der Anforderungs-URL oder ein Superverzeichnis davon war."
  },
  "core/sdk/NetworkRequest.ts | samePartyFromCrossPartyContext": {
    "message": "Dieses Cookie wurde blockiert, weil es das Attribut „SameParty“ hatte, die Anfrage aber parteiübergreifend war. Die Anfrage wurde als parteiübergreifend betrachtet, weil die Domain der URL der Ressource und die Domains der umschließenden Frames/Dokumente der Ressource weder Inhaber noch Mitglieder desselben First-Party-Sets sind."
  },
  "core/sdk/NetworkRequest.ts | sameSiteLax": {
    "message": "Dieses Cookie wurde blockiert, weil es das Attribut „SameSite=Lax“ hatte und die Anfrage von einer anderen Website aus erfolgte und nicht von einer Navigation der obersten Ebene initiiert wurde."
  },
  "core/sdk/NetworkRequest.ts | sameSiteNoneInsecure": {
    "message": "Dieses Cookie wurde blockiert, weil es das Attribut „SameSite=None“ hatte, aber nicht als „Secure“ gekennzeichnet war. Cookies ohne SameSite-Einschränkungen müssen als „Secure“ gekennzeichnet sein und über eine verschlüsselte Verbindung gesendet werden."
  },
  "core/sdk/NetworkRequest.ts | sameSiteStrict": {
    "message": "Dieses Cookie wurde blockiert, weil es das Attribut „SameSite=Strict“ hat und die Anfrage von einer anderen Website aus gestellt wurde. Dazu gehören auch Navigationsanfragen der obersten Ebene, die von anderen Websites initiiert wurden."
  },
  "core/sdk/NetworkRequest.ts | sameSiteUnspecifiedTreatedAsLax": {
    "message": "Dieses Cookie gab beim Speichern kein Attribut „SameSite“ an und wurde auf „SameSite=Lax“ voreingestellt. Es wurde blockiert, weil die Anfrage von einer anderen Website aus erfolgte und nicht von einer Navigation der obersten Ebene initiiert wurde. Das Cookie muss mit „SameSite=None“ festgelegt werden, um eine websiteübergreifende Nutzung zu ermöglichen."
  },
  "core/sdk/NetworkRequest.ts | schemefulSameSiteLax": {
    "message": "Dieses Cookie wurde blockiert, weil es das Attribut „SameSite=Lax“ hat, die Anfrage aber websiteübergreifend war und nicht von einer Navigation der obersten Ebene initiiert wurde. Diese Anfrage gilt als websiteübergreifend, da die URL ein anderes Schema als die aktuelle Website hat."
  },
  "core/sdk/NetworkRequest.ts | schemefulSameSiteStrict": {
    "message": "Dieses Cookie wurde blockiert, weil es das Attribut „SameSite=Strict“ hat, die Anfrage aber websiteübergreifend war. Dazu gehören auch Navigationsanfragen der obersten Ebene, die von anderen Websites initiiert wurden. Diese Anfrage gilt als websiteübergreifend, da die URL ein anderes Schema als die aktuelle Website hat."
  },
  "core/sdk/NetworkRequest.ts | schemefulSameSiteUnspecifiedTreatedAsLax": {
    "message": "Dieses Cookie gab beim Speichern kein Attribut „SameSite“ an, wurde auf „SameSite=Lax\"“ voreingestellt und blockiert, weil die Anfrage websiteübergreifend erfolgte und nicht von einer Navigation der obersten Ebene initiiert wurde. Diese Anfrage gilt als websiteübergreifend, da die URL ein anderes Schema als die aktuelle Website hat."
  },
  "core/sdk/NetworkRequest.ts | secureOnly": {
    "message": "Dieses Cookie wurde blockiert, weil es das Attribut „Secure“ hat und die Verbindung nicht sicher war."
  },
  "core/sdk/NetworkRequest.ts | setcookieHeaderIsIgnoredIn": {
    "message": "Der Header „Set-Cookie“ wird in der Antwort der URL ignoriert: {PH1}. Die Größe des Namens und des Werts darf zusammen 4.096 Zeichen nicht überschreiten."
  },
  "core/sdk/NetworkRequest.ts | theSchemeOfThisConnectionIsNot": {
    "message": "Im Schema dieser Verbindung dürfen keine Cookies gespeichert werden."
  },
  "core/sdk/NetworkRequest.ts | thirdPartyPhaseout": {
    "message": "Dieses Cookie wurde aufgrund der Einstellung von Drittanbieter-Cookies blockiert. Weitere Informationen findest du auf dem Tab „Probleme“."
  },
  "core/sdk/NetworkRequest.ts | thisSetcookieDidntSpecifyASamesite": {
    "message": "Dieser „Set-Cookie“-Header gab kein Attribut „SameSite“ an und war auf „SameSite=Lax\"“ voreingestellt. Der Versuch, ein Cookie zu setzen, wurde blockiert, weil das Cookie von einer websiteübergreifenden Antwort kam, die nicht die Antwort auf eine Navigation der obersten Ebene war. Diese Antwort gilt als websiteübergreifend, da die URL ein anderes Schema als die aktuelle Website hat."
  },
  "core/sdk/NetworkRequest.ts | thisSetcookieHadADisallowedCharacter": {
    "message": "Dieser „Set-Cookie“-Header enthielt ein unzulässiges Zeichen (ein unzulässiges ASCII-Steuerzeichen oder das Tabulatorzeichen in der Mitte des Cookie-Namens oder ‑Werts oder des Attributnamens oder ‑werts)."
  },
  "core/sdk/NetworkRequest.ts | thisSetcookieHadInvalidSyntax": {
    "message": "Dieser „Set-Cookie“-Header hatte eine ungültige Syntax."
  },
  "core/sdk/NetworkRequest.ts | thisSetcookieWasBlockedBecauseItHadTheSameparty": {
    "message": "Dieser Versuch, ein Cookie über einen „Set-Cookie“-Header zu setzen, wurde blockiert, weil das Cookie das Attribut „SameParty“ hatte, die Anfrage aber parteiübergreifend war. Die Anfrage wurde als parteiübergreifend betrachtet, weil die Domain der URL der Ressource und die Domains der umschließenden Frames/Dokumente der Ressource weder Inhaber noch Mitglieder desselben First-Party-Sets sind."
  },
  "core/sdk/NetworkRequest.ts | thisSetcookieWasBlockedBecauseItHadTheSamepartyAttribute": {
    "message": "Dieser Versuch, ein Cookie über einen „Set-Cookie“-Header zu setzen, wurde blockiert, weil das Cookie das Attribut „SameParty“ und noch andere widersprüchliche Attribute hatte. Chrome verlangt, dass Cookies, die das Attribut „SameParty“ verwenden, auch das Attribut „Secure“ haben und nicht auf „SameSite=Strict“ beschränkt sind."
  },
  "core/sdk/NetworkRequest.ts | thisSetcookieWasBlockedBecauseItHadTheSamesiteStrictLax": {
    "message": "Dieser Versuch, ein Cookie über einen „Set-Cookie“-Header zu setzen, wurde blockiert, weil das Cookie das Attribut „{PH1}“ hatte, aber von einer websiteübergreifenden Antwort kam, die nicht die Antwort auf eine Navigation der obersten Ebene war. Diese Antwort gilt als websiteübergreifend, da die URL ein anderes Schema als die aktuelle Website hat."
  },
  "core/sdk/NetworkRequest.ts | thisSetcookieWasBlockedBecauseTheNameValuePairExceedsMaxSize": {
    "message": "Dieser Versuch, ein Cookie über einen „Set-Cookie“-Header zu setzen, wurde blockiert, da das Cookie zu groß war. Die Größe des Namens und des Werts darf zusammen 4.096 Zeichen nicht überschreiten."
  },
  "core/sdk/NetworkRequest.ts | thisSetcookieWasBlockedDueThirdPartyPhaseout": {
    "message": "Das Festlegen dieses Cookies wurde aufgrund der Einstellung von Drittanbieter-Cookies blockiert. Weitere Informationen findest du auf dem Tab „Probleme“."
  },
  "core/sdk/NetworkRequest.ts | thisSetcookieWasBlockedDueToUser": {
    "message": "Dieser Versuch, ein Cookie über einen „Set-Cookie“-Header zu setzen, wurde aufgrund von Nutzereinstellungen blockiert."
  },
  "core/sdk/NetworkRequest.ts | unknownError": {
    "message": "Beim Senden dieses Cookies ist ein unbekannter Fehler aufgetreten."
  },
  "core/sdk/NetworkRequest.ts | userPreferences": {
    "message": "Dieses Cookie wurde aufgrund von Nutzereinstellungen blockiert."
  },
  "core/sdk/OverlayModel.ts | pausedInDebugger": {
    "message": "In Debugger pausiert"
  },
  "core/sdk/PageResourceLoader.ts | loadCanceledDueToReloadOf": {
    "message": "Ladevorgang wegen Aktualisierung der geprüften Seite abgebrochen"
  },
  "core/sdk/Script.ts | scriptRemovedOrDeleted": {
    "message": "Script entfernt oder gelöscht."
  },
  "core/sdk/Script.ts | unableToFetchScriptSource": {
    "message": "Skriptquelle kann nicht abgerufen werden."
  },
  "core/sdk/ServerTiming.ts | deprecatedSyntaxFoundPleaseUse": {
    "message": "Veraltete Syntax gefunden. Bitte verwende: <name>;dur=<duration>;desc=<description>"
  },
  "core/sdk/ServerTiming.ts | duplicateParameterSIgnored": {
    "message": "Doppelter Parameter „{PH1}“ ignoriert."
  },
  "core/sdk/ServerTiming.ts | extraneousTrailingCharacters": {
    "message": "Überflüssige nachgestellte Zeichen."
  },
  "core/sdk/ServerTiming.ts | noValueFoundForParameterS": {
    "message": "Für den Parameter „{PH1}“ wurde kein Wert gefunden."
  },
  "core/sdk/ServerTiming.ts | unableToParseSValueS": {
    "message": "„{PH1}“-Wert „{PH2}“ kann nicht geparst werden."
  },
  "core/sdk/ServerTiming.ts | unrecognizedParameterS": {
    "message": "Nicht erkannter Parameter „{PH1}“."
  },
  "core/sdk/ServiceWorkerCacheModel.ts | serviceworkercacheagentError": {
    "message": "ServiceWorkerCacheAgent-Fehler beim Löschen des Cache-Eintrags {PH1} im Cache: {PH2}"
  },
  "core/sdk/ServiceWorkerManager.ts | activated": {
    "message": "aktiviert"
  },
  "core/sdk/ServiceWorkerManager.ts | activating": {
    "message": "wird aktiviert"
  },
  "core/sdk/ServiceWorkerManager.ts | installed": {
    "message": "Installiert"
  },
  "core/sdk/ServiceWorkerManager.ts | installing": {
    "message": "Installation läuft"
  },
  "core/sdk/ServiceWorkerManager.ts | new": {
    "message": "neu"
  },
  "core/sdk/ServiceWorkerManager.ts | redundant": {
    "message": "redundant"
  },
  "core/sdk/ServiceWorkerManager.ts | running": {
    "message": "läuft"
  },
  "core/sdk/ServiceWorkerManager.ts | sSS": {
    "message": "{PH1} #{PH2} ({PH3})"
  },
  "core/sdk/ServiceWorkerManager.ts | starting": {
    "message": "wird gestartet"
  },
  "core/sdk/ServiceWorkerManager.ts | stopped": {
    "message": "angehalten"
  },
  "core/sdk/ServiceWorkerManager.ts | stopping": {
    "message": "Wird beendet"
  },
  "core/sdk/sdk-meta.ts | achromatopsia": {
    "message": "Achromatopsie (keine Farbe)"
  },
  "core/sdk/sdk-meta.ts | blurredVision": {
    "message": "Verschwommenes Sehen"
  },
  "core/sdk/sdk-meta.ts | captureAsyncStackTraces": {
    "message": "Async-Stacktraces erfassen"
  },
  "core/sdk/sdk-meta.ts | deuteranopia": {
    "message": "Deuteranopie (kein Grün)"
  },
  "core/sdk/sdk-meta.ts | disableAsyncStackTraces": {
    "message": "Async-Stacktraces deaktivieren"
  },
  "core/sdk/sdk-meta.ts | disableAvifFormat": {
    "message": "AVIF-Format deaktivieren"
  },
  "core/sdk/sdk-meta.ts | disableCache": {
    "message": "Cache deaktivieren (während Entwicklertools geöffnet ist)"
  },
  "core/sdk/sdk-meta.ts | disableJavascript": {
    "message": "JavaScript deaktivieren"
  },
  "core/sdk/sdk-meta.ts | disableLocalFonts": {
    "message": "Lokale Schriftarten deaktivieren"
  },
  "core/sdk/sdk-meta.ts | disableNetworkRequestBlocking": {
    "message": "Blockierung der Netzwerkanfrage deaktivieren"
  },
  "core/sdk/sdk-meta.ts | disableWebpFormat": {
    "message": "WebP-Format deaktivieren"
  },
  "core/sdk/sdk-meta.ts | doNotCaptureAsyncStackTraces": {
    "message": "Async-Stacktraces nicht erfassen"
  },
  "core/sdk/sdk-meta.ts | doNotEmulateAFocusedPage": {
    "message": "Fokussierte Seite nicht emulieren"
  },
  "core/sdk/sdk-meta.ts | doNotEmulateAnyVisionDeficiency": {
    "message": "Keine Sehschwäche emulieren"
  },
  "core/sdk/sdk-meta.ts | doNotEmulateCss": {
    "message": "CSS „{PH1}“ nicht emulieren"
  },
  "core/sdk/sdk-meta.ts | doNotEmulateCssMediaType": {
    "message": "CSS-Medientyp nicht emulieren"
  },
  "core/sdk/sdk-meta.ts | doNotExtendGridLines": {
    "message": "Rasterlinien nicht erweitern"
  },
  "core/sdk/sdk-meta.ts | doNotHighlightAdFrames": {
    "message": "Anzeigen-Frames nicht hervorheben"
  },
  "core/sdk/sdk-meta.ts | doNotPauseOnExceptions": {
    "message": "Bei Ausnahmen nicht anhalten"
  },
  "core/sdk/sdk-meta.ts | doNotPreserveLogUponNavigation": {
    "message": "Protokoll bei Navigation nicht beibehalten"
  },
  "core/sdk/sdk-meta.ts | doNotShowGridNamedAreas": {
    "message": "Keine rasterbenannten Bereiche anzeigen"
  },
  "core/sdk/sdk-meta.ts | doNotShowGridTrackSizes": {
    "message": "Größen der Raster-Tracks nicht anzeigen"
  },
  "core/sdk/sdk-meta.ts | doNotShowRulersOnHover": {
    "message": "Lineale nicht anzeigen, wenn der Mauszeiger darauf bewegt wird"
  },
  "core/sdk/sdk-meta.ts | emulateAFocusedPage": {
    "message": "Fokussierte Seite emulieren"
  },
  "core/sdk/sdk-meta.ts | emulateAchromatopsia": {
    "message": "Achromatopsie emulieren (keine Farbe)"
  },
  "core/sdk/sdk-meta.ts | emulateAutoDarkMode": {
    "message": "Dunklen Modus automatisch emulieren"
  },
  "core/sdk/sdk-meta.ts | emulateBlurredVision": {
    "message": "Verschwommenes Sehen emulieren"
  },
  "core/sdk/sdk-meta.ts | emulateCss": {
    "message": "CSS-{PH1} emulieren"
  },
  "core/sdk/sdk-meta.ts | emulateCssMediaFeature": {
    "message": "CSS-Medienfunktion {PH1} emulieren"
  },
  "core/sdk/sdk-meta.ts | emulateCssMediaType": {
    "message": "CSS-Medientyp emulieren"
  },
  "core/sdk/sdk-meta.ts | emulateCssPrintMediaType": {
    "message": "CSS-Druckmedientyp emulieren"
  },
  "core/sdk/sdk-meta.ts | emulateCssScreenMediaType": {
    "message": "CSS-Bildschirm-Medientyp emulieren"
  },
  "core/sdk/sdk-meta.ts | emulateDeuteranopia": {
    "message": "Deuteranopie emulieren (kein Grün)"
  },
  "core/sdk/sdk-meta.ts | emulateProtanopia": {
    "message": "Protanopie emulieren (kein Rot)"
  },
  "core/sdk/sdk-meta.ts | emulateReducedContrast": {
    "message": "Weniger Kontrast emulieren"
  },
  "core/sdk/sdk-meta.ts | emulateTritanopia": {
    "message": "Tritanopie emulieren (kein Blau)"
  },
  "core/sdk/sdk-meta.ts | emulateVisionDeficiencies": {
    "message": "Sehschwächen emulieren"
  },
  "core/sdk/sdk-meta.ts | enableAvifFormat": {
    "message": "AVIF-Format aktivieren"
  },
  "core/sdk/sdk-meta.ts | enableCache": {
    "message": "Cache aktivieren"
  },
  "core/sdk/sdk-meta.ts | enableJavascript": {
    "message": "JavaScript aktivieren"
  },
  "core/sdk/sdk-meta.ts | enableLocalFonts": {
    "message": "Lokale Schriftarten aktivieren"
  },
  "core/sdk/sdk-meta.ts | enableNetworkRequestBlocking": {
    "message": "Blockierung der Netzwerkanfrage aktivieren"
  },
  "core/sdk/sdk-meta.ts | enableRemoteFileLoading": {
    "message": "DevTools darf Ressourcen wie Quellzuordnungen aus Remote-Dateipfaden laden. Die Haltepunkte sind aus Sicherheitsgründen standardmäßig deaktiviert."
  },
  "core/sdk/sdk-meta.ts | enableWebpFormat": {
    "message": "WebP-Format aktivieren"
  },
  "core/sdk/sdk-meta.ts | extendGridLines": {
    "message": "Gitterlinien erweitern"
  },
  "core/sdk/sdk-meta.ts | hideCoreWebVitalsOverlay": {
    "message": "Core Web Vitals-Overlay ausblenden"
  },
  "core/sdk/sdk-meta.ts | hideFramesPerSecondFpsMeter": {
    "message": "Messtool für Bilder pro Sekunde (fps) ausblenden"
  },
  "core/sdk/sdk-meta.ts | hideLayerBorders": {
    "message": "Ebenengrenzen ausblenden"
  },
  "core/sdk/sdk-meta.ts | hideLayoutShiftRegions": {
    "message": "Layout Shift-Bereiche ausblenden"
  },
  "core/sdk/sdk-meta.ts | hideLineLabels": {
    "message": "Zeilenlabels ausblenden"
  },
  "core/sdk/sdk-meta.ts | hidePaintFlashingRectangles": {
    "message": "Farblich blinkende Rechtecke ausblenden"
  },
  "core/sdk/sdk-meta.ts | hideScrollPerformanceBottlenecks": {
    "message": "Engpässe in der Scrollleistung ausblenden"
  },
  "core/sdk/sdk-meta.ts | highlightAdFrames": {
    "message": "Anzeigen-Frames hervorheben"
  },
  "core/sdk/sdk-meta.ts | noEmulation": {
    "message": "Keine Emulation"
  },
  "core/sdk/sdk-meta.ts | pauseOnExceptions": {
    "message": "Bei Ausnahmen anhalten"
  },
  "core/sdk/sdk-meta.ts | preserveLogUponNavigation": {
    "message": "Protokoll bei der Navigation beibehalten"
  },
  "core/sdk/sdk-meta.ts | print": {
    "message": "drucken"
  },
  "core/sdk/sdk-meta.ts | protanopia": {
    "message": "Protanopie (kein Rot)"
  },
  "core/sdk/sdk-meta.ts | query": {
    "message": "Abfrage"
  },
  "core/sdk/sdk-meta.ts | reducedContrast": {
    "message": "Weniger Kontrast"
  },
  "core/sdk/sdk-meta.ts | screen": {
    "message": "Bildschirm"
  },
  "core/sdk/sdk-meta.ts | showAreaNames": {
    "message": "Bereichsnamen anzeigen"
  },
  "core/sdk/sdk-meta.ts | showCoreWebVitalsOverlay": {
    "message": "Core Web Vitals-Overlay anzeigen"
  },
  "core/sdk/sdk-meta.ts | showFramesPerSecondFpsMeter": {
    "message": "Messtool für Bilder pro Sekunde (FPS) anzeigen"
  },
  "core/sdk/sdk-meta.ts | showGridNamedAreas": {
    "message": "Rasterbenannte Bereiche anzeigen"
  },
  "core/sdk/sdk-meta.ts | showGridTrackSizes": {
    "message": "Größen der Raster-Tracks anzeigen"
  },
  "core/sdk/sdk-meta.ts | showLayerBorders": {
    "message": "Ebenengrenzen einblenden"
  },
  "core/sdk/sdk-meta.ts | showLayoutShiftRegions": {
    "message": "Layout Shift-Bereiche anzeigen"
  },
  "core/sdk/sdk-meta.ts | showLineLabels": {
    "message": "Zeilenlabels anzeigen"
  },
  "core/sdk/sdk-meta.ts | showLineNames": {
    "message": "Zeilennamen anzeigen"
  },
  "core/sdk/sdk-meta.ts | showLineNumbers": {
    "message": "Zeilenzahlen anzeigen"
  },
  "core/sdk/sdk-meta.ts | showPaintFlashingRectangles": {
    "message": "Farblich blinkende Rechtecke anzeigen"
  },
  "core/sdk/sdk-meta.ts | showRulersOnHover": {
    "message": "Lineale anzeigen, wenn der Mauszeiger darauf bewegt wird"
  },
  "core/sdk/sdk-meta.ts | showScrollPerformanceBottlenecks": {
    "message": "Engpässe in der Scrollleistung anzeigen"
  },
  "core/sdk/sdk-meta.ts | showTrackSizes": {
    "message": "Track-Größen anzeigen"
  },
  "core/sdk/sdk-meta.ts | tritanopia": {
    "message": "Tritanopie (kein Blau)"
  },
  "entrypoints/inspector_main/InspectorMain.ts | javascriptIsDisabled": {
    "message": "JavaScript ist deaktiviert"
  },
  "entrypoints/inspector_main/InspectorMain.ts | main": {
    "message": "Hauptinhalt"
  },
  "entrypoints/inspector_main/InspectorMain.ts | openDedicatedTools": {
    "message": "Dedizierte Entwicklertools für Node.js anzeigen"
  },
  "entrypoints/inspector_main/InspectorMain.ts | tab": {
    "message": "Tab"
  },
  "entrypoints/inspector_main/OutermostTargetSelector.ts | targetNotSelected": {
    "message": "Seite: nicht ausgewählt"
  },
  "entrypoints/inspector_main/OutermostTargetSelector.ts | targetS": {
    "message": "Seite: {PH1}"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | coreWebVitals": {
    "message": "Core Web Vitals"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | disableAvifImageFormat": {
    "message": "AVIF-Bildformat deaktivieren"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | disableLocalFonts": {
    "message": "Lokale Schriftarten deaktivieren"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | disableWebpImageFormat": {
    "message": "WebP-Bildformat deaktivieren"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | disablesLocalSourcesInFontface": {
    "message": "Deaktiviert local()-Quellen in @font-face-Regeln. Neuladen der Seite zur Anwendung erforderlich."
  },
  "entrypoints/inspector_main/RenderingOptions.ts | emulateAFocusedPage": {
    "message": "Fokussierte Seite emulieren"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | emulateAutoDarkMode": {
    "message": "Automatischen dunklen Modus aktivieren"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | emulatesAFocusedPage": {
    "message": "Emuliert eine fokussierte Seite."
  },
  "entrypoints/inspector_main/RenderingOptions.ts | emulatesAutoDarkMode": {
    "message": "Aktiviert den automatischen dunklen Modus und setzt prefers-color-scheme auf dark."
  },
  "entrypoints/inspector_main/RenderingOptions.ts | forcesCssColorgamutMediaFeature": {
    "message": "Erzwingt die CSS-color-gamut-Medienfunktion"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | forcesCssForcedColors": {
    "message": "Erzwingt die CSS-Medienfunktion „forced-colors“"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | forcesCssPreferscolorschemeMedia": {
    "message": "Erzwingt die CSS-prefers-color-scheme-Medienfunktion"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | forcesCssPreferscontrastMedia": {
    "message": "Erzwingt die CSS-prefers-contrast-Medienfunktion"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | forcesCssPrefersreduceddataMedia": {
    "message": "Erzwingt die CSS-prefers-reduced-data-Medienfunktion"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | forcesCssPrefersreducedmotion": {
    "message": "Erzwingt die CSS-prefers-reduced-motion-Medienfunktion"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | forcesCssPrefersreducedtransparencyMedia": {
    "message": "Erzwingt die CSS-prefers-reduced-transparency-Medienfunktion"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | forcesMediaTypeForTestingPrint": {
    "message": "Erzwingt Medientyp zum Testen von Druck- und Bildschirmstilen"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | forcesVisionDeficiencyEmulation": {
    "message": "Erzwingt Sehschwäche-Emulation"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | frameRenderingStats": {
    "message": "Frame-Rendering-Statistiken"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | highlightAdFrames": {
    "message": "Anzeigen-Frames hervorheben"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | highlightsAreasOfThePageBlueThat": {
    "message": "Hebt Bereiche der Seite, die verschoben wurden, in Blau hervor. Möglicherweise nicht geeignet für Personen, die zu lichtempfindlicher Epilepsie neigen."
  },
  "entrypoints/inspector_main/RenderingOptions.ts | highlightsAreasOfThePageGreen": {
    "message": "Hebt Bereiche der Seite in Grün hervor, die neu gezeichnet werden müssen. Möglicherweise nicht geeignet für Personen, die zu lichtempfindlicher Epilepsie neigen."
  },
  "entrypoints/inspector_main/RenderingOptions.ts | highlightsElementsTealThatCan": {
    "message": "Hebt Elemente (blaugrün) hervor, die das Scrollen verlangsamen können, einschließlich Touch- und Rad-Event-Handler und andere Hauptthread-Scrollsituationen."
  },
  "entrypoints/inspector_main/RenderingOptions.ts | highlightsFramesRedDetectedToBe": {
    "message": "Hebt Frames in Rot hervor, die als Werbung erkannt wurden."
  },
  "entrypoints/inspector_main/RenderingOptions.ts | layerBorders": {
    "message": "Ebenengrenzen"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | layoutShiftRegions": {
    "message": "Layout Shift-Bereiche"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | paintFlashing": {
    "message": "Paint flashen"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | plotsFrameThroughputDropped": {
    "message": "Stellt den Frame-Durchsatz, die Verteilung der verworfenen Frames und den GPU-Arbeitsspeicher dar."
  },
  "entrypoints/inspector_main/RenderingOptions.ts | requiresAPageReloadToApplyAnd": {
    "message": "Neuladen der Seite zur Anwendung erforderlich und deaktiviert das Speichern im Cache für Bildanforderungen."
  },
  "entrypoints/inspector_main/RenderingOptions.ts | scrollingPerformanceIssues": {
    "message": "Probleme mit der Scrollleistung"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | showsAnOverlayWithCoreWebVitals": {
    "message": "Zeigt ein Overlay mit Core Web Vitals an."
  },
  "entrypoints/inspector_main/RenderingOptions.ts | showsLayerBordersOrangeoliveAnd": {
    "message": "Zeigt Ebenengrenzen (Orange/Oliv) und -Kacheln (Cyan) an."
  },
  "entrypoints/inspector_main/inspector_main-meta.ts | autoOpenDevTools": {
    "message": "Entwicklertools für Pop-ups automatisch öffnen"
  },
  "entrypoints/inspector_main/inspector_main-meta.ts | blockAds": {
    "message": "Werbung auf dieser Website blockieren"
  },
  "entrypoints/inspector_main/inspector_main-meta.ts | colorVisionDeficiency": {
    "message": "Farbsehschwäche"
  },
  "entrypoints/inspector_main/inspector_main-meta.ts | cssMediaFeature": {
    "message": "CSS-Medienfunktion"
  },
  "entrypoints/inspector_main/inspector_main-meta.ts | cssMediaType": {
    "message": "CSS-Medientyp"
  },
  "entrypoints/inspector_main/inspector_main-meta.ts | disablePaused": {
    "message": "Pausierten Status-Overlay deaktivieren"
  },
  "entrypoints/inspector_main/inspector_main-meta.ts | doNotAutoOpen": {
    "message": "DevTools nicht automatisch für Popups öffnen"
  },
  "entrypoints/inspector_main/inspector_main-meta.ts | forceAdBlocking": {
    "message": "Blockieren von Anzeigen auf dieser Website erzwingen"
  },
  "entrypoints/inspector_main/inspector_main-meta.ts | fps": {
    "message": "fps"
  },
  "entrypoints/inspector_main/inspector_main-meta.ts | hardReloadPage": {
    "message": "Vollständiges Aktualisieren der Seite"
  },
  "entrypoints/inspector_main/inspector_main-meta.ts | layout": {
    "message": "Layout"
  },
  "entrypoints/inspector_main/inspector_main-meta.ts | paint": {
    "message": "zeichnen"
  },
  "entrypoints/inspector_main/inspector_main-meta.ts | reloadPage": {
    "message": "Seite aktualisieren"
  },
  "entrypoints/inspector_main/inspector_main-meta.ts | rendering": {
    "message": "Rendering"
  },
  "entrypoints/inspector_main/inspector_main-meta.ts | showAds": {
    "message": "Werbung auf dieser Website zeigen, falls zulässig"
  },
  "entrypoints/inspector_main/inspector_main-meta.ts | showRendering": {
    "message": "Rendering anzeigen"
  },
  "entrypoints/inspector_main/inspector_main-meta.ts | toggleCssPrefersColorSchemeMedia": {
    "message": "CSS-Medienfunktion „prefers-color-scheme“ wechseln"
  },
  "entrypoints/inspector_main/inspector_main-meta.ts | visionDeficiency": {
    "message": "Sehschwäche"
  },
  "entrypoints/js_app/js_app.ts | main": {
    "message": "Hauptinhalt"
  },
  "entrypoints/main/MainImpl.ts | customizeAndControlDevtools": {
    "message": "Entwicklertools anpassen und steuern"
  },
  "entrypoints/main/MainImpl.ts | dockSide": {
    "message": "Seitliche fixieren"
  },
  "entrypoints/main/MainImpl.ts | dockSideNaviation": {
    "message": "Zum Ansehen der Optionen Rechts- und Linkspfeil verwenden"
  },
  "entrypoints/main/MainImpl.ts | dockToBottom": {
    "message": "Unten fixieren"
  },
  "entrypoints/main/MainImpl.ts | dockToLeft": {
    "message": "Links fixieren"
  },
  "entrypoints/main/MainImpl.ts | dockToRight": {
    "message": "Rechts fixieren"
  },
  "entrypoints/main/MainImpl.ts | focusDebuggee": {
    "message": "Auf Seite fokussieren"
  },
  "entrypoints/main/MainImpl.ts | help": {
    "message": "Hilfe"
  },
  "entrypoints/main/MainImpl.ts | hideConsoleDrawer": {
    "message": "Konsolenleiste ausblenden"
  },
  "entrypoints/main/MainImpl.ts | moreTools": {
    "message": "Weitere Tools"
  },
  "entrypoints/main/MainImpl.ts | placementOfDevtoolsRelativeToThe": {
    "message": "Platzierung der Entwicklertools relativ zur Seite. ({PH1}, um die letzte Position wiederherzustellen)"
  },
  "entrypoints/main/MainImpl.ts | showConsoleDrawer": {
    "message": "Konsolenleiste anzeigen"
  },
  "entrypoints/main/MainImpl.ts | undockIntoSeparateWindow": {
    "message": "In separatem Fenster anzeigen"
  },
  "entrypoints/main/main-meta.ts | auto": {
    "message": "automatisch"
  },
  "entrypoints/main/main-meta.ts | bottom": {
    "message": "Unten"
  },
  "entrypoints/main/main-meta.ts | browserLanguage": {
    "message": "Browsersprache"
  },
  "entrypoints/main/main-meta.ts | cancelSearch": {
    "message": "Suche abbrechen"
  },
  "entrypoints/main/main-meta.ts | darkCapital": {
    "message": "Dunkel"
  },
  "entrypoints/main/main-meta.ts | darkLower": {
    "message": "dunkel"
  },
  "entrypoints/main/main-meta.ts | devtoolsDefault": {
    "message": "Entwicklertools (Standard)"
  },
  "entrypoints/main/main-meta.ts | dockToBottom": {
    "message": "Unten fixieren"
  },
  "entrypoints/main/main-meta.ts | dockToLeft": {
    "message": "Links fixieren"
  },
  "entrypoints/main/main-meta.ts | dockToRight": {
    "message": "Rechts fixieren"
  },
  "entrypoints/main/main-meta.ts | enableCtrlShortcutToSwitchPanels": {
    "message": "Tastenkombination Strg + 1 bis 9 zum Wechseln der Bereiche aktivieren"
  },
  "entrypoints/main/main-meta.ts | enableShortcutToSwitchPanels": {
    "message": "Tastenkombination ⌘ + 1 bis 9 zum Wechseln der Bereiche aktivieren"
  },
  "entrypoints/main/main-meta.ts | enableSync": {
    "message": "Synchronisierungseinstellungen aktivieren"
  },
  "entrypoints/main/main-meta.ts | findNextResult": {
    "message": "Nächstes Ergebnis suchen"
  },
  "entrypoints/main/main-meta.ts | findPreviousResult": {
    "message": "Vorheriges Ergebnis suchen"
  },
  "entrypoints/main/main-meta.ts | focusDebuggee": {
    "message": "Auf Seite fokussieren"
  },
  "entrypoints/main/main-meta.ts | horizontal": {
    "message": "horizontal"
  },
  "entrypoints/main/main-meta.ts | language": {
    "message": "Sprache:"
  },
  "entrypoints/main/main-meta.ts | left": {
    "message": "Links"
  },
  "entrypoints/main/main-meta.ts | lightCapital": {
    "message": "Hell"
  },
  "entrypoints/main/main-meta.ts | lightLower": {
    "message": "hell"
  },
  "entrypoints/main/main-meta.ts | nextPanel": {
    "message": "Nächster Bereich"
  },
  "entrypoints/main/main-meta.ts | panelLayout": {
    "message": "Bereichslayout:"
  },
  "entrypoints/main/main-meta.ts | previousPanel": {
    "message": "Vorheriges Steuerfeld"
  },
  "entrypoints/main/main-meta.ts | reloadDevtools": {
    "message": "Entwicklertools neu laden"
  },
  "entrypoints/main/main-meta.ts | resetZoomLevel": {
    "message": "Zoomstufe zurücksetzen"
  },
  "entrypoints/main/main-meta.ts | restoreLastDockPosition": {
    "message": "Letzte Dock-Position wiederherstellen"
  },
  "entrypoints/main/main-meta.ts | right": {
    "message": "Rechts"
  },
  "entrypoints/main/main-meta.ts | searchAsYouTypeCommand": {
    "message": "Suche während der Eingabe aktivieren"
  },
  "entrypoints/main/main-meta.ts | searchAsYouTypeSetting": {
    "message": "Suche während der Eingabe"
  },
  "entrypoints/main/main-meta.ts | searchInPanel": {
    "message": "Im Bereich suchen"
  },
  "entrypoints/main/main-meta.ts | searchOnEnterCommand": {
    "message": "Suche während der Eingabe deaktivieren (zum Suchen Eingabetaste drücken)"
  },
  "entrypoints/main/main-meta.ts | switchToDarkTheme": {
    "message": "Zum dunklen Design wechseln"
  },
  "entrypoints/main/main-meta.ts | switchToLightTheme": {
    "message": "Zum hellen Design wechseln"
  },
  "entrypoints/main/main-meta.ts | switchToSystemPreferredColor": {
    "message": "Zu dem vom System bevorzugten Farbschema wechseln"
  },
  "entrypoints/main/main-meta.ts | systemPreference": {
    "message": "Systempräferenz"
  },
  "entrypoints/main/main-meta.ts | theme": {
    "message": "Design:"
  },
  "entrypoints/main/main-meta.ts | toggleDrawer": {
    "message": "Leiste ein-/ausblenden"
  },
  "entrypoints/main/main-meta.ts | undockIntoSeparateWindow": {
    "message": "In separatem Fenster anzeigen"
  },
  "entrypoints/main/main-meta.ts | undocked": {
    "message": "Nicht mehr angedockt"
  },
  "entrypoints/main/main-meta.ts | useAutomaticPanelLayout": {
    "message": "Automatisches Bereichslayout verwenden"
  },
  "entrypoints/main/main-meta.ts | useHorizontalPanelLayout": {
    "message": "Horizontales Bereichslayout verwenden"
  },
  "entrypoints/main/main-meta.ts | useVerticalPanelLayout": {
    "message": "Vertikales Bereichslayout verwenden"
  },
  "entrypoints/main/main-meta.ts | vertical": {
    "message": "vertikal"
  },
  "entrypoints/main/main-meta.ts | zoomIn": {
    "message": "Heranzoomen"
  },
  "entrypoints/main/main-meta.ts | zoomOut": {
    "message": "Herauszoomen"
  },
  "entrypoints/node_app/NodeConnectionsPanel.ts | addConnection": {
    "message": "Verbindung hinzufügen"
  },
  "entrypoints/node_app/NodeConnectionsPanel.ts | networkAddressEgLocalhost": {
    "message": "Netzwerkadresse (z. B. localhost:9229)"
  },
  "entrypoints/node_app/NodeConnectionsPanel.ts | noConnectionsSpecified": {
    "message": "Keine Verbindungen angegeben."
  },
  "entrypoints/node_app/NodeConnectionsPanel.ts | nodejsDebuggingGuide": {
    "message": "Leitfaden zum Node.js-Debugging"
  },
  "entrypoints/node_app/NodeConnectionsPanel.ts | specifyNetworkEndpointAnd": {
    "message": "Gib den Netzwerk-Endpunkt an und DevTools stellt automatisch eine Verbindung zu ihm her. Weitere Informationen findest du unter {PH1}."
  },
  "entrypoints/node_app/NodeMain.ts | main": {
    "message": "Hauptinhalt"
  },
  "entrypoints/node_app/NodeMain.ts | nodejsS": {
    "message": "Node.js: {PH1}"
  },
  "entrypoints/node_app/node_app.ts | connection": {
    "message": "Verbindung"
  },
  "entrypoints/node_app/node_app.ts | networkTitle": {
    "message": "Knoten"
  },
  "entrypoints/node_app/node_app.ts | node": {
    "message": "Knoten"
  },
  "entrypoints/node_app/node_app.ts | showConnection": {
    "message": "Verbindung anzeigen"
  },
  "entrypoints/node_app/node_app.ts | showNode": {
    "message": "Knoten anzeigen"
  },
  "entrypoints/worker_app/WorkerMain.ts | main": {
    "message": "Hauptinhalt"
  },
  "generated/Deprecation.ts | AuthorizationCoveredByWildcard": {
    "message": "Die Autorisierung wird vom Platzhaltersymbol (*) bei der Access-Control-Allow-Headers-Verarbeitung durch CORS nicht abgedeckt."
  },
  "generated/Deprecation.ts | CSSSelectorInternalMediaControlsOverlayCastButton": {
    "message": "Zum Deaktivieren der standardmäßigen Cast-Integration sollte statt der -internal-media-controls-overlay-cast-button-Auswahl das Attribut disableRemotePlayback verwendet werden."
  },
  "generated/Deprecation.ts | CSSValueAppearanceNonStandard": {
    "message": "Die CSS-Darstellungswerte „inner-spin-button“, „media-slider“, „media-sliderthumb“, „media-volume-slider“, „media-volume-sliderthumb“, „push-button“, „searchfield-cancel-button“, „slider-horizontal“, „sliderthumb-horizontal“, „sliderthumb-vertical“ und „square-button“ sind nicht standardisiert und werden entfernt."
  },
  "generated/Deprecation.ts | CSSValueAppearanceSliderVertical": {
    "message": "Der CSS-Darstellungswert „slider-vertical“ ist nicht standardisiert und wird entfernt."
  },
  "generated/Deprecation.ts | CanRequestURLHTTPContainingNewline": {
    "message": "Ressourcenanforderungen, deren URLs sowohl entfernte Leerzeichen (\\(n|r|t)) als auch Kleiner-als-Zeichen (<) enthielten, wurden blockiert. Bitte entferne neue Zeilen und codiere Kleiner-als-Zeichen an Stellen wie in Elementattributwerten, um diese Ressourcen zu laden."
  },
  "generated/Deprecation.ts | ChromeLoadTimesConnectionInfo": {
    "message": "chrome.loadTimes() wurde verworfen. Bitte verwende stattdessen die standardisierte API: Navigation Timing 2."
  },
  "generated/Deprecation.ts | ChromeLoadTimesFirstPaintAfterLoadTime": {
    "message": "chrome.loadTimes() wurde verworfen. Bitte verwende stattdessen die standardisierte API: Paint Timing."
  },
  "generated/Deprecation.ts | ChromeLoadTimesWasAlternateProtocolAvailable": {
    "message": "chrome.loadTimes() wurde verworfen. Bitte verwende stattdessen die standardisierte API: nextHopProtocol in Navigation Timing 2."
  },
  "generated/Deprecation.ts | CookieWithTruncatingChar": {
    "message": "Cookies, die ein \\(0|r|n)-Zeichen enthalten, werden abgelehnt und nicht abgeschnitten."
  },
  "generated/Deprecation.ts | CrossOriginAccessBasedOnDocumentDomain": {
    "message": "Das Abschwächen der Richtlinie für denselben Ursprung durch das Festlegen von document.domain wurde verworfen und wird standardmäßig deaktiviert. Diese Warnung zum Status als verworfen gilt für einen ursprungsübergreifenden Zugriff, der durch das Festlegen von document.domain aktiviert wurde."
  },
  "generated/Deprecation.ts | CrossOriginWindowAlert": {
    "message": "Das Auslösen von window.alert über ursprungsübergreifende iFrames wurde eingestellt und wird in Zukunft entfernt."
  },
  "generated/Deprecation.ts | CrossOriginWindowConfirm": {
    "message": "Das Auslösen von window.confirm über ursprungsübergreifende iFrames wurde eingestellt und wird in Zukunft entfernt."
  },
  "generated/Deprecation.ts | DOMMutationEvents": {
    "message": "DOM-Mutationsereignisse, einschließlich DOMSubtreeModified, DOMNodeInserted, DOMNodeRemoved, DOMNodeRemovedFromDocument, DOMNodeInsertedIntoDocument und DOMCharacterDataModified, wurden eingestellt (https://w3c.github.io/uievents/#legacy-event-types) und werden entfernt. Verwende stattdessen MutationObserver."
  },
  "generated/Deprecation.ts | DataUrlInSvgUse": {
    "message": "Die Unterstützung für „data:“-URLs in „SVGUseElement“ wurde eingestellt und wird in Zukunft entfernt."
  },
  "generated/Deprecation.ts | DocumentDomainSettingWithoutOriginAgentClusterHeader": {
    "message": "Das Abschwächen der Richtlinie für denselben Ursprung durch das Festlegen von document.domain wurde verworfen und wird standardmäßig deaktiviert. Wenn du diese Funktion weiter verwenden möchtest, deaktiviere das an Ursprünge gebundene Agent-Clustering, indem du einen Origin-Agent-Cluster: ?0-Header zusammen mit der HTTP-Antwort für das Dokument und Frames sendest. Weitere Informationen findest du unter https://developer.chrome.com/blog/immutable-document-domain/."
  },
  "generated/Deprecation.ts | GeolocationInsecureOrigin": {
    "message": "getCurrentPosition() und watchPosition() funktionieren nicht mehr bei unsicheren Ursprüngen. Damit du diese Funktion nutzen kannst, solltest du deine App auf einen sicheren Ursprung umstellen, z. B. HTTPS. Weitere Informationen findest du unter https://goo.gle/chrome-insecure-origins."
  },
  "generated/Deprecation.ts | GeolocationInsecureOriginDeprecatedNotRemoved": {
    "message": "getCurrentPosition() und watchPosition() für unsichere Ursprünge wurden verworfen. Damit du diese Funktion nutzen kannst, solltest du deine App auf einen sicheren Ursprung umstellen, z. B. HTTPS. Weitere Informationen findest du unter https://goo.gle/chrome-insecure-origins."
  },
  "generated/Deprecation.ts | GetUserMediaInsecureOrigin": {
    "message": "getUserMedia() funktioniert nicht mehr bei unsicheren Ursprüngen. Damit du diese Funktion nutzen kannst, solltest du deine App auf einen sicheren Ursprung umstellen, z. B. HTTPS. Weitere Informationen findest du unter https://goo.gle/chrome-insecure-origins."
  },
  "generated/Deprecation.ts | HostCandidateAttributeGetter": {
    "message": "RTCPeerConnectionIceErrorEvent.hostCandidate wurde verworfen. Bitte verwende stattdessen RTCPeerConnectionIceErrorEvent.address oder RTCPeerConnectionIceErrorEvent.port."
  },
  "generated/Deprecation.ts | IdentityInCanMakePaymentEvent": {
    "message": "Der Händlerursprung und beliebige Daten aus dem Service-Worker-Ereignis canmakepayment wurden verworfen und werden entfernt: topOrigin, paymentRequestOrigin, methodData, modifiers."
  },
  "generated/Deprecation.ts | InsecurePrivateNetworkSubresourceRequest": {
    "message": "Die Website hat eine Unterressource von einem Netzwerk angefordert, auf das sie nur aufgrund der privilegierten Netzwerkposition ihrer Nutzer zugreifen konnte. Durch solche Anforderungen werden nicht öffentliche Geräte und Server im Internet preisgegeben, was das Risiko von CSRF-Angriffen (Cross-Site Request Forgery) und/oder Datenlecks erhöht. Um diesen Risiken entgegenzuwirken, werden in Chrome Anforderungen an nicht öffentliche Unterressourcen verworfen, die über nicht sichere Kontexte initiiert werden, und es wird damit begonnen, diese zu blockieren."
  },
  "generated/Deprecation.ts | InterestGroupDailyUpdateUrl": {
    "message": "Das an „joinAdInterestGroup()“ übergebene Feld „dailyUpdateUrl“ von „InterestGroups“ wurde in „updateUrl“ umbenannt, um sein Verhalten genauer abzubilden."
  },
  "generated/Deprecation.ts | LocalCSSFileExtensionRejected": {
    "message": "CSS kann nur von file:-URLs geladen werden, wenn sie die Dateiendung .css haben."
  },
  "generated/Deprecation.ts | MediaSourceAbortRemove": {
    "message": "Der Einsatz von SourceBuffer.abort() zum Abbrechen der asynchronen Bereichsentfernung von remove() wurde aufgrund einer Änderung der Spezifikation verworfen. Die Unterstützung wird in Zukunft eingestellt. Wir empfehlen, stattdessen das Ereignis updateend zu beobachten. abort() ist nur dazu vorgesehen, ein asynchrones Anfügen von Medien abzubrechen oder den Zustand des Parsers zurückzusetzen."
  },
  "generated/Deprecation.ts | MediaSourceDurationTruncatingBuffered": {
    "message": "Das Festlegen von MediaSource.duration auf einen Wert unter dem höchsten Präsentationszeitstempel beliebiger zwischengespeicherter codierter Frames wurde aufgrund einer Änderung der Spezifikation verworfen. Die Unterstützung für die implizite Entfernung abgeschnittener zwischengespeicherter Medien wird in Zukunft entfernt. Führe stattdessen remove(newDuration, oldDuration) für alle sourceBuffers, für die newDuration < oldDuration gilt, explizit aus."
  },
  "generated/Deprecation.ts | NoSysexWebMIDIWithoutPermission": {
    "message": "Web MIDI fordert eine Berechtigung zur Nutzung an, auch dann, wenn die Systemexklusivität (SysEx) nicht in MIDIOptions angegeben ist."
  },
  "generated/Deprecation.ts | NotificationInsecureOrigin": {
    "message": "Die Notification API darf nicht mehr über unsichere Ursprünge verwendet werden. Wir empfehlen dir, deine App auf einen sicheren Ursprung umzustellen, z. B. HTTPS. Weitere Informationen findest du unter https://goo.gle/chrome-insecure-origins."
  },
  "generated/Deprecation.ts | NotificationPermissionRequestedIframe": {
    "message": "Die Berechtigung für die Notification API darf nicht mehr über einen ursprungsübergreifenden iFrame angefordert werden. Stattdessen sollte sie über einen Frame auf höchster Ebene angefordert oder ein neues Fenster geöffnet werden."
  },
  "generated/Deprecation.ts | ObsoleteCreateImageBitmapImageOrientationNone": {
    "message": "Die Option „imageOrientation: 'none'“ in createImageBitmap wurde eingestellt. Verwende createImageBitmap stattdessen mit der Option „{imageOrientation: 'from-image'}“."
  },
  "generated/Deprecation.ts | ObsoleteWebRtcCipherSuite": {
    "message": "Dein Partner handelt eine veraltete (D)TLS-Version aus. Bitte wende dich an den Partner, um dieses Problem zu beheben."
  },
  "generated/Deprecation.ts | OverflowVisibleOnReplacedElement": {
    "message": "Wenn du „overflow: visible“ für img-, video- und canvas-Tags angibst, können visuelle Inhalte dadurch außerhalb der Elementgrenzen gerendert werden. Weitere Informationen findest du unter https://github.com/WICG/shared-element-transitions/blob/main/debugging_overflow_on_images.md."
  },
  "generated/Deprecation.ts | PaymentInstruments": {
    "message": "„paymentManager.instruments“ wurde verworfen. Verwende für Zahlungs-Handler stattdessen die JIT-Installation (Just In Time)."
  },
  "generated/Deprecation.ts | PaymentRequestCSPViolation": {
    "message": "Mit dem Aufruf „PaymentRequest“ wird die Anweisung „connect-src“ von „Content-Security-Policy“ (CSP) umgangen. Diese Umgehung wurde verworfen. Füge die Kennung der Zahlungsmethode aus der PaymentRequest API (im Feld „supportedMethods“) in die CSP-Anweisung „connect-src“ ein."
  },
  "generated/Deprecation.ts | PersistentQuotaType": {
    "message": "StorageType.persistent wurde verworfen. Verwende stattdessen die standardisierte Methode navigator.storage."
  },
  "generated/Deprecation.ts | PictureSourceSrc": {
    "message": "<source src> mit einem übergeordneten <picture>-Element ist ungültig und wird deshalb ignoriert. Bitte verwende stattdessen <source srcset>."
  },
  "generated/Deprecation.ts | PrefixedCancelAnimationFrame": {
    "message": "webkitCancelAnimationFrame ist anbieterspezifisch. Bitte verwende stattdessen die standardmäßige cancelAnimationFrame-Methode."
  },
  "generated/Deprecation.ts | PrefixedRequestAnimationFrame": {
    "message": "webkitRequestAnimationFrame ist anbieterspezifisch. Bitte verwende stattdessen die standardmäßige requestAnimationFrame-Methode."
  },
  "generated/Deprecation.ts | PrefixedVideoDisplayingFullscreen": {
    "message": "HTMLVideoElement.webkitDisplayingFullscreen wurde eingestellt. Bitte verwende stattdessen Document.fullscreenElement."
  },
  "generated/Deprecation.ts | PrefixedVideoEnterFullScreen": {
    "message": "HTMLVideoElement.webkitEnterFullScreen() wurde eingestellt. Bitte verwende stattdessen Element.requestFullscreen()."
  },
  "generated/Deprecation.ts | PrefixedVideoEnterFullscreen": {
    "message": "HTMLVideoElement.webkitEnterFullscreen() wurde eingestellt. Bitte verwende stattdessen Element.requestFullscreen()."
  },
  "generated/Deprecation.ts | PrefixedVideoExitFullScreen": {
    "message": "HTMLVideoElement.webkitExitFullScreen() wurde eingestellt. Bitte verwende stattdessen Document.exitFullscreen()."
  },
  "generated/Deprecation.ts | PrefixedVideoExitFullscreen": {
    "message": "HTMLVideoElement.webkitExitFullscreen() wurde eingestellt. Bitte verwende stattdessen Document.exitFullscreen()."
  },
  "generated/Deprecation.ts | PrefixedVideoSupportsFullscreen": {
    "message": "HTMLVideoElement.webkitSupportsFullscreen wurde eingestellt. Bitte verwende stattdessen Document.fullscreenEnabled."
  },
  "generated/Deprecation.ts | PrivacySandboxExtensionsAPI": {
    "message": "Die API chrome.privacy.websites.privacySandboxEnabled wird eingestellt, sie bleibt aber bis zur Veröffentlichung von M113 zum Zweck der Abwärtskompatibilität aktiv. Bitte verwende stattdessen chrome.privacy.websites.topicsEnabled, chrome.privacy.websites.fledgeEnabled und chrome.privacy.websites.adMeasurementEnabled. Weitere Informationen findest du unter https://developer.chrome.com/docs/extensions/reference/privacy/#property-websites-privacySandboxEnabled."
  },
  "generated/Deprecation.ts | RTCConstraintEnableDtlsSrtpFalse": {
    "message": "Die Einschränkung DtlsSrtpKeyAgreement wird entfernt. Du hast den Wert false für diese Einschränkung angegeben, was als Versuch interpretiert wird, die entfernte SDES key negotiation-Methode zu verwenden. Diese Funktion wird entfernt. Verwende stattdessen einen Dienst, der DTLS key negotiation unterstützt."
  },
  "generated/Deprecation.ts | RTCConstraintEnableDtlsSrtpTrue": {
    "message": "Die Einschränkung DtlsSrtpKeyAgreement wird entfernt. Du hast den Wert true für diese Einschränkung angegeben, was keine Auswirkungen hatte, aber du kannst diese Einschränkung für mehr Übersichtlichkeit entfernen."
  },
  "generated/Deprecation.ts | RTCPeerConnectionGetStatsLegacyNonCompliant": {
    "message": "Die Callback-basierte getStats()-Methode wurde eingestellt und wird entfernt. Bitte verwende stattdessen die spezifikationskonforme getStats()-Methode."
  },
  "generated/Deprecation.ts | RangeExpand": {
    "message": "Range.expand() wurde eingestellt. Bitte verwende stattdessen Selection.modify()."
  },
  "generated/Deprecation.ts | RequestedSubresourceWithEmbeddedCredentials": {
    "message": "Anforderungen von Unterressourcen, deren URLs eingebettete Anmeldedaten enthalten (z. B. https://user:pass@host/), werden blockiert."
  },
  "generated/Deprecation.ts | RtcpMuxPolicyNegotiate": {
    "message": "Die Option rtcpMuxPolicy wurde verworfen und wird entfernt."
  },
  "generated/Deprecation.ts | SharedArrayBufferConstructedWithoutIsolation": {
    "message": "SharedArrayBuffer setzt ursprungsübergreifende Isolierung voraus. Weitere Informationen findest du unter https://developer.chrome.com/blog/enabling-shared-array-buffer/."
  },
  "generated/Deprecation.ts | TextToSpeech_DisallowedByAutoplay": {
    "message": "speechSynthesis.speak() ohne Nutzeraktivierung wurde verworfen und wird entfernt."
  },
  "generated/Deprecation.ts | UnloadHandler": {
    "message": "Unload-Event-Listener wurden eingestellt und werden entfernt."
  },
  "generated/Deprecation.ts | V8SharedArrayBufferConstructedInExtensionWithoutIsolation": {
    "message": "Erweiterungen müssen die ursprungsübergreifende Isolierung implementieren, um SharedArrayBuffer weiter zu nutzen. Weitere Informationen findest du unter https://developer.chrome.com/docs/extensions/mv3/cross-origin-isolation/."
  },
  "generated/Deprecation.ts | WebSQL": {
    "message": "Web SQL wurde eingestellt. Bitte verwende SQLite WebAssembly oder Indexed Database."
  },
  "generated/Deprecation.ts | WindowPlacementPermissionDescriptorUsed": {
    "message": "Der Berechtigungsdeskriptor „window-placement“ wurde eingestellt. Verwende stattdessen „window-management“. Weitere Informationen findest du unter https://bit.ly/window-placement-rename."
  },
  "generated/Deprecation.ts | WindowPlacementPermissionPolicyParsed": {
    "message": "Die Berechtigungsrichtlinie „window-placement“ wurde eingestellt. Verwende stattdessen „window-management“. Weitere Informationen findest du unter https://bit.ly/window-placement-rename."
  },
  "generated/Deprecation.ts | XHRJSONEncodingDetection": {
    "message": "UTF-16 wird von Antwort-JSON in einer XMLHttpRequest nicht unterstützt"
  },
  "generated/Deprecation.ts | XMLHttpRequestSynchronousInNonWorkerOutsideBeforeUnload": {
    "message": "Synchrone Anfragen von der XMLHttpRequest API im Hauptthread wurden eingestellt, da sie sich nachteilig auf die Endnutzererfahrung auswirken. Weitere Informationen findest du unter https://xhr.spec.whatwg.org/."
  },
  "generated/Deprecation.ts | XRSupportsSession": {
    "message": "supportsSession() wurde verworfen. Bitte verwende stattdessen isSessionSupported() und prüfe den aufgelösten booleschen Wert."
  },
  "models/bindings/ContentProviderBasedProject.ts | unknownErrorLoadingFile": {
    "message": "Unbekannter Fehler beim Laden der Datei"
  },
  "models/bindings/DebuggerLanguagePlugins.ts | debugSymbolsIncomplete": {
    "message": "Die Informationen zur Fehlerbehebung für die Funktion „{PH1}“ sind unvollständig"
  },
  "models/bindings/DebuggerLanguagePlugins.ts | errorInDebuggerLanguagePlugin": {
    "message": "Fehler im Debugger für das Sprachen-Plug-in: {PH1}"
  },
  "models/bindings/DebuggerLanguagePlugins.ts | failedToLoadDebugSymbolsFor": {
    "message": "[{PH1}] Fehler beim Laden der Debug-Symbole für {PH2} ({PH3})"
  },
  "models/bindings/DebuggerLanguagePlugins.ts | failedToLoadDebugSymbolsForFunction": {
    "message": "Keine Informationen zur Fehlerbehebung für die Funktion „{PH1}“"
  },
  "models/bindings/DebuggerLanguagePlugins.ts | loadedDebugSymbolsForButDidnt": {
    "message": "[{PH1}] Debug-Symbole für {PH2} geladen, aber keine Quelldateien gefunden"
  },
  "models/bindings/DebuggerLanguagePlugins.ts | loadedDebugSymbolsForFound": {
    "message": "[{PH1}] Debug-Symbole für {PH2} geladen, {PH3} Quelldatei(en) gefunden"
  },
  "models/bindings/DebuggerLanguagePlugins.ts | loadingDebugSymbolsFor": {
    "message": "[{PH1}] Fehlerbehebungssymbole für {PH2} werden geladen..."
  },
  "models/bindings/DebuggerLanguagePlugins.ts | loadingDebugSymbolsForVia": {
    "message": "[{PH1}] Fehlerbehebungssymbole für {PH2} werden über {PH3} geladen..."
  },
  "models/bindings/IgnoreListManager.ts | addAllContentScriptsToIgnoreList": {
    "message": "Alle Erweiterungs-Skripts zur Ignorierliste hinzufügen"
  },
  "models/bindings/IgnoreListManager.ts | addAllThirdPartyScriptsToIgnoreList": {
    "message": "Alle Drittanbieterskripts zur Ignorieren-Liste hinzufügen"
  },
  "models/bindings/IgnoreListManager.ts | addDirectoryToIgnoreList": {
    "message": "Verzeichnis zu Ignorieren-Liste hinzufügen"
  },
  "models/bindings/IgnoreListManager.ts | addScriptToIgnoreList": {
    "message": "Script zur Ignorieren-Liste hinzufügen"
  },
  "models/bindings/IgnoreListManager.ts | removeFromIgnoreList": {
    "message": "Aus der Ignorieren-Liste löschen"
  },
  "models/bindings/ResourceScriptMapping.ts | liveEditCompileFailed": {
    "message": "LiveEdit-Kompilierung fehlgeschlagen: {PH1}"
  },
  "models/bindings/ResourceScriptMapping.ts | liveEditFailed": {
    "message": "LiveEdit fehlgeschlagen: {PH1}"
  },
  "models/emulation/DeviceModeModel.ts | devicePixelRatioMustBeANumberOr": {
    "message": "Das Pixel-Verhältnis des Geräts muss eine Zahl oder leer sein."
  },
  "models/emulation/DeviceModeModel.ts | devicePixelRatioMustBeGreater": {
    "message": "Das Pixel-Verhältnis des Geräts muss größer oder gleich {PH1} sein."
  },
  "models/emulation/DeviceModeModel.ts | devicePixelRatioMustBeLessThanOr": {
    "message": "Das Pixel-Verhältnis des Geräts muss kleiner oder gleich {PH1} sein."
  },
  "models/emulation/DeviceModeModel.ts | heightCannotBeEmpty": {
    "message": "Das Feld für „Höhe“ darf nicht leer sein."
  },
  "models/emulation/DeviceModeModel.ts | heightMustBeANumber": {
    "message": "Die Höhe muss eine Zahl sein."
  },
  "models/emulation/DeviceModeModel.ts | heightMustBeGreaterThanOrEqualTo": {
    "message": "Höhe muss größer als oder gleich {PH1} sein."
  },
  "models/emulation/DeviceModeModel.ts | heightMustBeLessThanOrEqualToS": {
    "message": "Höhe muss kleiner als oder gleich {PH1} sein."
  },
  "models/emulation/DeviceModeModel.ts | widthCannotBeEmpty": {
    "message": "Das Feld für „Breite“ darf nicht leer sein."
  },
  "models/emulation/DeviceModeModel.ts | widthMustBeANumber": {
    "message": "Die Breite muss eine Zahl sein."
  },
  "models/emulation/DeviceModeModel.ts | widthMustBeGreaterThanOrEqualToS": {
    "message": "Breite muss größer als oder gleich {PH1} sein."
  },
  "models/emulation/DeviceModeModel.ts | widthMustBeLessThanOrEqualToS": {
    "message": "Breite muss kleiner als oder gleich {PH1} sein."
  },
  "models/emulation/EmulatedDevices.ts | laptopWithHiDPIScreen": {
    "message": "Laptop mit HiDPI-Bildschirm"
  },
  "models/emulation/EmulatedDevices.ts | laptopWithMDPIScreen": {
    "message": "Laptop mit MDPI-Bildschirm"
  },
  "models/emulation/EmulatedDevices.ts | laptopWithTouch": {
    "message": "Laptop mit Touchfunktion"
  },
  "models/har/Writer.ts | collectingContent": {
    "message": "Inhalt wird erfasst…"
  },
  "models/har/Writer.ts | writingFile": {
    "message": "Schreiben in Datei…"
  },
  "models/issues_manager/BounceTrackingIssue.ts | bounceTrackingMitigations": {
    "message": "Eindämmung von Bounce-Tracking"
  },
  "models/issues_manager/ClientHintIssue.ts | clientHintsInfrastructure": {
    "message": "Client-Hints-Infrastruktur"
  },
  "models/issues_manager/ContentSecurityPolicyIssue.ts | contentSecurityPolicyEval": {
    "message": "Content Security Policy – Eval"
  },
  "models/issues_manager/ContentSecurityPolicyIssue.ts | contentSecurityPolicyInlineCode": {
    "message": "Content Security Policy – Inline-Code"
  },
  "models/issues_manager/ContentSecurityPolicyIssue.ts | contentSecurityPolicySource": {
    "message": "Content Security Policy – Zulassungslisten für Quellen"
  },
  "models/issues_manager/ContentSecurityPolicyIssue.ts | trustedTypesFixViolations": {
    "message": "Vertrauenswürdige Typen – Verstöße beheben"
  },
  "models/issues_manager/ContentSecurityPolicyIssue.ts | trustedTypesPolicyViolation": {
    "message": "Vertrauenswürdige Typen – Richtlinienverstoß"
  },
  "models/issues_manager/CookieDeprecationMetadataIssue.ts | thirdPartyPhaseoutExplained": {
    "message": "Auf schrittweise Einstellung von Drittanbieter-Cookies vorbereiten"
  },
  "models/issues_manager/CookieIssue.ts | aSecure": {
    "message": "sicher"
  },
  "models/issues_manager/CookieIssue.ts | anInsecure": {
    "message": "an insecure"
  },
  "models/issues_manager/CookieIssue.ts | fileCrosSiteRedirectBug": {
    "message": "Fehler melden"
  },
  "models/issues_manager/CookieIssue.ts | firstPartySetsExplained": {
    "message": "„First-Party Sets“ und das Attribut „SameParty“"
  },
  "models/issues_manager/CookieIssue.ts | howSchemefulSamesiteWorks": {
    "message": "So funktioniert die Schemeful-Same-Site-Kennzeichnung"
  },
  "models/issues_manager/CookieIssue.ts | samesiteCookiesExplained": {
    "message": "Erläuterungen zu SameSite-Cookies"
  },
  "models/issues_manager/CookieIssue.ts | thirdPartyPhaseoutExplained": {
    "message": "Auf schrittweise Einstellung von Drittanbieter-Cookies vorbereiten"
  },
  "models/issues_manager/CorsIssue.ts | CORS": {
    "message": "Cross-Origin Resource Sharing (CORS)"
  },
  "models/issues_manager/CorsIssue.ts | corsPrivateNetworkAccess": {
    "message": "Private Network Access"
  },
  "models/issues_manager/CrossOriginEmbedderPolicyIssue.ts | coopAndCoep": {
    "message": "COOP und COEP"
  },
  "models/issues_manager/CrossOriginEmbedderPolicyIssue.ts | samesiteAndSameorigin": {
    "message": "Same-Site und Same-Origin"
  },
  "models/issues_manager/DeprecationIssue.ts | feature": {
    "message": "Weitere Details findest du auf der Funktionsstatus-Seite."
  },
  "models/issues_manager/DeprecationIssue.ts | milestone": {
    "message": "Diese Änderung wird im Rahmen von Meilenstein {milestone} angewandt."
  },
  "models/issues_manager/DeprecationIssue.ts | title": {
    "message": "Eingestellte Funktion verwendet"
  },
  "models/issues_manager/FederatedAuthRequestIssue.ts | fedCm": {
    "message": "Federated Credential Management API"
  },
  "models/issues_manager/FederatedAuthUserInfoRequestIssue.ts | fedCmUserInfo": {
    "message": "Federated Credential Management User Info API"
  },
  "models/issues_manager/GenericIssue.ts | autocompleteAttributePageTitle": {
    "message": "HTML-Attribut: „autocomplete“"
  },
  "models/issues_manager/GenericIssue.ts | corbExplainerPageTitle": {
    "message": "CORB-Erklärung"
  },
  "models/issues_manager/GenericIssue.ts | crossOriginPortalPostMessage": {
    "message": "Portale – Kommunikationskanäle mit demselben Ursprung"
  },
  "models/issues_manager/GenericIssue.ts | howDoesAutofillWorkPageTitle": {
    "message": "Wie funktioniert Autofill?"
  },
  "models/issues_manager/GenericIssue.ts | inputFormElementPageTitle": {
    "message": "Das input-Element für Formulare"
  },
  "models/issues_manager/GenericIssue.ts | labelFormlementsPageTitle": {
    "message": "Labelelemente"
  },
  "models/issues_manager/HeavyAdIssue.ts | handlingHeavyAdInterventions": {
    "message": "Handhabung umfangreicher Anzeigeninterventionen"
  },
  "models/issues_manager/Issue.ts | breakingChangeIssue": {
    "message": "Problem mit einer funktionsgefährdenden Änderung: Die Seite funktioniert möglicherweise in einer kommenden Version von Chrome nicht mehr"
  },
  "models/issues_manager/Issue.ts | breakingChanges": {
    "message": "Funktionsgefährdende Änderungen"
  },
  "models/issues_manager/Issue.ts | improvementIssue": {
    "message": "Ein Verbesserungsproblem: Es gibt eine Möglichkeit, die Seite zu verbessern"
  },
  "models/issues_manager/Issue.ts | improvements": {
    "message": "Verbesserungen"
  },
  "models/issues_manager/Issue.ts | pageErrorIssue": {
    "message": "Ein Seitenfehler: Seite funktioniert nicht richtig"
  },
  "models/issues_manager/Issue.ts | pageErrors": {
    "message": "Fehler auf der Seite"
  },
  "models/issues_manager/LowTextContrastIssue.ts | colorAndContrastAccessibility": {
    "message": "Farb- und Kontrastbedienungshilfen"
  },
  "models/issues_manager/MixedContentIssue.ts | preventingMixedContent": {
    "message": "Gemischte Inhalte verhindern"
  },
  "models/issues_manager/QuirksModeIssue.ts | documentCompatibilityMode": {
    "message": "Modus für die Kompatibilität von Dokumenten"
  },
  "models/issues_manager/SharedArrayBufferIssue.ts | enablingSharedArrayBuffer": {
    "message": "SharedArrayBuffer aktivieren"
  },
  "models/logs/NetworkLog.ts | anonymous": {
    "message": "<anonym>"
  },
  "models/logs/logs-meta.ts | clear": {
    "message": "löschen"
  },
  "models/logs/logs-meta.ts | doNotPreserveLogOnPageReload": {
    "message": "Anmeldung beim Aktualisieren der Seite/Navigation nicht beibehalten"
  },
  "models/logs/logs-meta.ts | preserve": {
    "message": "beibehalten"
  },
  "models/logs/logs-meta.ts | preserveLog": {
    "message": "Protokoll beibehalten"
  },
  "models/logs/logs-meta.ts | preserveLogOnPageReload": {
    "message": "Protokoll beim Aktualisieren/Navigieren der Seite beibehalten"
  },
  "models/logs/logs-meta.ts | recordNetworkLog": {
    "message": "Netzwerkprotokoll aufzeichnen"
  },
  "models/logs/logs-meta.ts | reset": {
    "message": "Zurücksetzen"
  },
  "models/persistence/EditFileSystemView.ts | add": {
    "message": "Hinzufügen"
  },
  "models/persistence/EditFileSystemView.ts | enterAPath": {
    "message": "Pfad eingeben"
  },
  "models/persistence/EditFileSystemView.ts | enterAUniquePath": {
    "message": "Eindeutigen Pfad eingeben"
  },
  "models/persistence/EditFileSystemView.ts | excludedFolders": {
    "message": "Ausgeschlossene Ordner"
  },
  "models/persistence/EditFileSystemView.ts | folderPath": {
    "message": "Ordnerpfad"
  },
  "models/persistence/EditFileSystemView.ts | none": {
    "message": "Keiner"
  },
  "models/persistence/EditFileSystemView.ts | sViaDevtools": {
    "message": "{PH1} (über .devtools)"
  },
  "models/persistence/IsolatedFileSystem.ts | blobCouldNotBeLoaded": {
    "message": "Blob konnte nicht geladen werden."
  },
  "models/persistence/IsolatedFileSystem.ts | cantReadFileSS": {
    "message": "Datei kann nicht gelesen werden: {PH1}: {PH2}"
  },
  "models/persistence/IsolatedFileSystem.ts | fileSystemErrorS": {
    "message": "Dateisystemfehler: {PH1}"
  },
  "models/persistence/IsolatedFileSystem.ts | linkedToS": {
    "message": "Mit {PH1} verknüpft"
  },
  "models/persistence/IsolatedFileSystem.ts | unknownErrorReadingFileS": {
    "message": "Unbekannter Fehler beim Lesen der Datei: {PH1}"
  },
  "models/persistence/IsolatedFileSystemManager.ts | unableToAddFilesystemS": {
    "message": "Dateisystem kann nicht hinzugefügt werden: {PH1}"
  },
  "models/persistence/PersistenceActions.ts | openInContainingFolder": {
    "message": "In enthaltendem Ordner öffnen"
  },
  "models/persistence/PersistenceActions.ts | overrideContent": {
    "message": "Inhalte überschreiben"
  },
  "models/persistence/PersistenceActions.ts | overrideSourceMappedFileExplanation": {
    "message": "„{PH1}“ ist eine Datei mit Quellzuordnung und kann nicht überschrieben werden."
  },
  "models/persistence/PersistenceActions.ts | overrideSourceMappedFileWarning": {
    "message": "Stattdessen „{PH1}“ überschreiben?"
  },
  "models/persistence/PersistenceActions.ts | saveAs": {
    "message": "Speichern unter…"
  },
  "models/persistence/PersistenceActions.ts | saveImage": {
    "message": "Bild speichern"
  },
  "models/persistence/PersistenceActions.ts | showOverrides": {
    "message": "Alle Überschreibungen anzeigen"
  },
  "models/persistence/PersistenceUtils.ts | linkedToS": {
    "message": "Mit {PH1} verknüpft"
  },
  "models/persistence/PersistenceUtils.ts | linkedToSourceMapS": {
    "message": "Mit Quellzuordnung verknüpft: {PH1}"
  },
  "models/persistence/PlatformFileSystem.ts | unableToReadFilesWithThis": {
    "message": "PlatformFileSystem kann keine Dateien lesen."
  },
  "models/persistence/WorkspaceSettingsTab.ts | addFolder": {
    "message": "Ordner hinzufügen…"
  },
  "models/persistence/WorkspaceSettingsTab.ts | folderExcludePattern": {
    "message": "Ausschlussmuster für den Ordner"
  },
  "models/persistence/WorkspaceSettingsTab.ts | mappingsAreInferredAutomatically": {
    "message": "Verknüpfungen werden automatisch abgeleitet."
  },
  "models/persistence/WorkspaceSettingsTab.ts | remove": {
    "message": "Entfernen"
  },
  "models/persistence/WorkspaceSettingsTab.ts | workspace": {
    "message": "Arbeitsbereich"
  },
  "models/persistence/persistence-meta.ts | disableOverrideNetworkRequests": {
    "message": "Überschreiben von Netzwerkanfragen deaktivieren"
  },
  "models/persistence/persistence-meta.ts | enableLocalOverrides": {
    "message": "Lokale Überschreibungen aktivieren"
  },
  "models/persistence/persistence-meta.ts | enableOverrideNetworkRequests": {
    "message": "Überschreiben von Netzwerkanfragen aktivieren"
  },
  "models/persistence/persistence-meta.ts | interception": {
    "message": "Abfangen"
  },
  "models/persistence/persistence-meta.ts | network": {
    "message": "Netzwerk"
  },
  "models/persistence/persistence-meta.ts | override": {
    "message": "überschreiben"
  },
  "models/persistence/persistence-meta.ts | request": {
    "message": "Anfrage"
  },
  "models/persistence/persistence-meta.ts | rewrite": {
    "message": "umschreiben"
  },
  "models/persistence/persistence-meta.ts | showWorkspace": {
    "message": "Einstellungen für Arbeitsbereich anzeigen"
  },
  "models/persistence/persistence-meta.ts | workspace": {
    "message": "Arbeitsbereich"
  },
  "models/timeline_model/TimelineJSProfile.ts | threadS": {
    "message": "Thread {PH1}"
  },
  "models/timeline_model/TimelineModel.ts | dedicatedWorker": {
    "message": "Dedizierter Worker"
  },
  "models/timeline_model/TimelineModel.ts | threadS": {
    "message": "Thread {PH1}"
  },
  "models/timeline_model/TimelineModel.ts | workerS": {
    "message": "Worker — {PH1}"
  },
  "models/timeline_model/TimelineModel.ts | workerSS": {
    "message": "Worker: {PH1} – {PH2}"
  },
  "models/workspace/UISourceCode.ts | index": {
    "message": "(Index)"
  },
  "models/workspace/UISourceCode.ts | thisFileWasChangedExternally": {
    "message": "Diese Datei wurde extern geändert. Möchtest du sie aktualisieren?"
  },
  "panels/accessibility/ARIAAttributesView.ts | ariaAttributes": {
    "message": "ARIA-Attribute"
  },
  "panels/accessibility/ARIAAttributesView.ts | noAriaAttributes": {
    "message": "Keine ARIA-Attribute"
  },
  "panels/accessibility/AXBreadcrumbsPane.ts | accessibilityTree": {
    "message": "Baumansicht für Barrierefreiheit"
  },
  "panels/accessibility/AXBreadcrumbsPane.ts | fullTreeExperimentDescription": {
    "message": "Die Baumansicht für Barrierefreiheit wurde nach rechts oben im DOM-Baum verschoben."
  },
  "panels/accessibility/AXBreadcrumbsPane.ts | fullTreeExperimentName": {
    "message": "Vollbild-Baumansicht für Barrierefreiheit aktivieren"
  },
  "panels/accessibility/AXBreadcrumbsPane.ts | ignored": {
    "message": "Ignoriert"
  },
  "panels/accessibility/AXBreadcrumbsPane.ts | reloadRequired": {
    "message": "Aktualisierung erforderlich, damit die Änderung übernommen wird."
  },
  "panels/accessibility/AXBreadcrumbsPane.ts | scrollIntoView": {
    "message": "In die Ansicht hineinscrollen"
  },
  "panels/accessibility/AccessibilityNodeView.ts | accessibilityNodeNotExposed": {
    "message": "Bedienungshilfenknoten nicht sichtbar"
  },
  "panels/accessibility/AccessibilityNodeView.ts | ancestorChildrenAreAll": {
    "message": "Alle dem Ancestor untergeordneten Elemente sind Präsentationselemente: "
  },
  "panels/accessibility/AccessibilityNodeView.ts | computedProperties": {
    "message": "Berechnete Properties"
  },
  "panels/accessibility/AccessibilityNodeView.ts | elementHasEmptyAltText": {
    "message": "Alt-Text des Elements ist leer."
  },
  "panels/accessibility/AccessibilityNodeView.ts | elementHasPlaceholder": {
    "message": "Element hat {PH1}."
  },
  "panels/accessibility/AccessibilityNodeView.ts | elementIsHiddenBy": {
    "message": "Element wird von aktivem modalen Dialogfeld verdeckt: "
  },
  "panels/accessibility/AccessibilityNodeView.ts | elementIsHiddenByChildTree": {
    "message": "Element wird durch untergeordnete Baumstruktur ausgeblendet: "
  },
  "panels/accessibility/AccessibilityNodeView.ts | elementIsInAnInertSubTree": {
    "message": "Das Element ist eine inert-Unterstruktur von "
  },
  "panels/accessibility/AccessibilityNodeView.ts | elementIsInert": {
    "message": "Das Element lautet inert."
  },
  "panels/accessibility/AccessibilityNodeView.ts | elementIsNotRendered": {
    "message": "Element ist nicht gerendert."
  },
  "panels/accessibility/AccessibilityNodeView.ts | elementIsNotVisible": {
    "message": "Element ist nicht sichtbar."
  },
  "panels/accessibility/AccessibilityNodeView.ts | elementIsPlaceholder": {
    "message": "Das Element lautet {PH1}."
  },
  "panels/accessibility/AccessibilityNodeView.ts | elementIsPresentational": {
    "message": "Element ist ein Präsentationselement"
  },
  "panels/accessibility/AccessibilityNodeView.ts | elementNotInteresting": {
    "message": "Element nicht relevant für Bedienungshilfen."
  },
  "panels/accessibility/AccessibilityNodeView.ts | elementsInheritsPresentational": {
    "message": "Das Element erbt die präsentierende Rolle von "
  },
  "panels/accessibility/AccessibilityNodeView.ts | invalidSource": {
    "message": "Ungültige Quelle."
  },
  "panels/accessibility/AccessibilityNodeView.ts | labelFor": {
    "message": "Label für "
  },
  "panels/accessibility/AccessibilityNodeView.ts | noAccessibilityNode": {
    "message": "Kein Bedienungshilfen-Knoten"
  },
  "panels/accessibility/AccessibilityNodeView.ts | noNodeWithThisId": {
    "message": "Kein Knoten mit dieser ID."
  },
  "panels/accessibility/AccessibilityNodeView.ts | noTextContent": {
    "message": "Kein Textinhalt."
  },
  "panels/accessibility/AccessibilityNodeView.ts | notSpecified": {
    "message": "Nicht angegeben"
  },
  "panels/accessibility/AccessibilityNodeView.ts | partOfLabelElement": {
    "message": "Teil des Labelelements: "
  },
  "panels/accessibility/AccessibilityNodeView.ts | placeholderIsPlaceholderOnAncestor": {
    "message": "{PH1} ist {PH2} bei Ancestor: "
  },
  "panels/accessibility/AccessibilityStrings.ts | aHumanreadableVersionOfTheValue": {
    "message": "Eine für Menschen lesbare Version des Werts eines Bereichs-Widgets (sofern erforderlich)."
  },
  "panels/accessibility/AccessibilityStrings.ts | activeDescendant": {
    "message": "Aktives untergeordnetes Element"
  },
  "panels/accessibility/AccessibilityStrings.ts | atomicLiveRegions": {
    "message": "Atom (Live-Regionen)"
  },
  "panels/accessibility/AccessibilityStrings.ts | busyLiveRegions": {
    "message": "Busy (Live-Bereiche)"
  },
  "panels/accessibility/AccessibilityStrings.ts | canSetValue": {
    "message": "Kann einen Wert festlegen"
  },
  "panels/accessibility/AccessibilityStrings.ts | checked": {
    "message": "Ausgewählt"
  },
  "panels/accessibility/AccessibilityStrings.ts | contents": {
    "message": "Inhalte"
  },
  "panels/accessibility/AccessibilityStrings.ts | controls": {
    "message": "Steuerelemente"
  },
  "panels/accessibility/AccessibilityStrings.ts | describedBy": {
    "message": "Beschrieben von"
  },
  "panels/accessibility/AccessibilityStrings.ts | description": {
    "message": "Beschreibung"
  },
  "panels/accessibility/AccessibilityStrings.ts | disabled": {
    "message": "Deaktiviert"
  },
  "panels/accessibility/AccessibilityStrings.ts | editable": {
    "message": "Bearbeitung möglich"
  },
  "panels/accessibility/AccessibilityStrings.ts | elementOrElementsWhichFormThe": {
    "message": "Element oder Elemente, die die Beschreibung dieses Elements bilden."
  },
  "panels/accessibility/AccessibilityStrings.ts | elementOrElementsWhichMayFormThe": {
    "message": "Element oder Elemente, die den Namen dieses Elements bilden können."
  },
  "panels/accessibility/AccessibilityStrings.ts | elementOrElementsWhichShouldBe": {
    "message": "Element oder Elemente, die als Nachfolger dieses Elements betrachtet werden sollen, obwohl sie im DOM keine Nachfolger sind."
  },
  "panels/accessibility/AccessibilityStrings.ts | elementOrElementsWhoseContentOr": {
    "message": "Element oder Elemente, deren Inhalt oder Präsenz von diesem Widget gesteuert wird."
  },
  "panels/accessibility/AccessibilityStrings.ts | elementToWhichTheUserMayChooseTo": {
    "message": "Element, zu dem der Nutzer möglicherweise nach diesem gehen möchte, statt zum nächsten Element in der DOM-Reihenfolge."
  },
  "panels/accessibility/AccessibilityStrings.ts | expanded": {
    "message": "Maximiert"
  },
  "panels/accessibility/AccessibilityStrings.ts | focusable": {
    "message": "fokussierbar"
  },
  "panels/accessibility/AccessibilityStrings.ts | focused": {
    "message": "Fokussiert"
  },
  "panels/accessibility/AccessibilityStrings.ts | forARangeWidgetTheMaximumAllowed": {
    "message": "Maximal zulässiger Wert für ein Bereichs-Widget."
  },
  "panels/accessibility/AccessibilityStrings.ts | forARangeWidgetTheMinimumAllowed": {
    "message": "Der kleinste zulässige Wert in einem Bereichs-Widget."
  },
  "panels/accessibility/AccessibilityStrings.ts | fromAttribute": {
    "message": "Von Attribut"
  },
  "panels/accessibility/AccessibilityStrings.ts | fromCaption": {
    "message": "Aus caption"
  },
  "panels/accessibility/AccessibilityStrings.ts | fromDescription": {
    "message": "Von description"
  },
  "panels/accessibility/AccessibilityStrings.ts | fromLabel": {
    "message": "Aus label"
  },
  "panels/accessibility/AccessibilityStrings.ts | fromLabelFor": {
    "message": "Von label (for=-Attribut)"
  },
  "panels/accessibility/AccessibilityStrings.ts | fromLabelWrapped": {
    "message": "Von label (umgebrochen)"
  },
  "panels/accessibility/AccessibilityStrings.ts | fromLegend": {
    "message": "Aus legend"
  },
  "panels/accessibility/AccessibilityStrings.ts | fromNativeHtml": {
    "message": "Von nativem HTML"
  },
  "panels/accessibility/AccessibilityStrings.ts | fromPlaceholderAttribute": {
    "message": "Von Platzhalter-Attribut"
  },
  "panels/accessibility/AccessibilityStrings.ts | fromRubyAnnotation": {
    "message": "Aus Ruby-Anmerkung"
  },
  "panels/accessibility/AccessibilityStrings.ts | fromStyle": {
    "message": "Von Stil"
  },
  "panels/accessibility/AccessibilityStrings.ts | fromTitle": {
    "message": "Aus Titel"
  },
  "panels/accessibility/AccessibilityStrings.ts | hasAutocomplete": {
    "message": "Hat automatische Vervollständigung"
  },
  "panels/accessibility/AccessibilityStrings.ts | hasPopup": {
    "message": "Enthält Pop-up-Fenster"
  },
  "panels/accessibility/AccessibilityStrings.ts | help": {
    "message": "Hilfe"
  },
  "panels/accessibility/AccessibilityStrings.ts | ifAndHowThisElementCanBeEdited": {
    "message": "Gibt an, ob und wie dieses Element bearbeitet werden kann."
  },
  "panels/accessibility/AccessibilityStrings.ts | ifThisElementMayReceiveLive": {
    "message": "Gibt an, ob dieses Element Live-Updates erhalten darf und ob dem Nutzer bei Änderungen der gesamte Live-Bereich oder nur geänderte Knoten gezeigt werden sollen."
  },
  "panels/accessibility/AccessibilityStrings.ts | ifThisElementMayReceiveLiveUpdates": {
    "message": "Wenn dieses Element Live-Updates erhalten kann, welche Art Update soll eine Benachrichtigung auslösen?"
  },
  "panels/accessibility/AccessibilityStrings.ts | ifThisElementMayReceiveLiveUpdatesThe": {
    "message": "Wenn dieses Element Live-Updates erhalten kann, das Stammelement der beinhaltenden Live-Region."
  },
  "panels/accessibility/AccessibilityStrings.ts | ifTrueThisElementCanReceiveFocus": {
    "message": "Wenn „true“ festgelegt ist, ist dieses Element fokussierbar."
  },
  "panels/accessibility/AccessibilityStrings.ts | ifTrueThisElementCurrentlyCannot": {
    "message": "Wenn „true“ festgelegt ist, kann mit diesem Element zurzeit nicht interagiert werden."
  },
  "panels/accessibility/AccessibilityStrings.ts | ifTrueThisElementCurrentlyHas": {
    "message": "Wenn true festgelegt ist, befindet sich dieses Element derzeit im Fokus."
  },
  "panels/accessibility/AccessibilityStrings.ts | ifTrueThisElementMayBeInteracted": {
    "message": "Wenn „true“ festgelegt ist, kann mit diesem Element interagiert werden, aber sein Wert lässt sich nicht ändern."
  },
  "panels/accessibility/AccessibilityStrings.ts | ifTrueThisElementsUserentered": {
    "message": "Wenn „true“ festgelegt ist, erfüllt der vom Nutzer eingegebene Wert dieses Elements nicht die Validierungsanforderung."
  },
  "panels/accessibility/AccessibilityStrings.ts | implicit": {
    "message": "Implizit"
  },
  "panels/accessibility/AccessibilityStrings.ts | implicitValue": {
    "message": "Impliziter Wert."
  },
  "panels/accessibility/AccessibilityStrings.ts | indicatesThePurposeOfThisElement": {
    "message": "Gibt den Zweck dieses Elements an, z. B. die Begriffe der Benutzeroberfläche für ein Widget oder die Strukturrolle innerhalb eines Dokuments."
  },
  "panels/accessibility/AccessibilityStrings.ts | invalidUserEntry": {
    "message": "Ungültiger Nutzereintrag"
  },
  "panels/accessibility/AccessibilityStrings.ts | labeledBy": {
    "message": "Gekennzeichnet von"
  },
  "panels/accessibility/AccessibilityStrings.ts | level": {
    "message": "Stufe"
  },
  "panels/accessibility/AccessibilityStrings.ts | liveRegion": {
    "message": "Live-Region"
  },
  "panels/accessibility/AccessibilityStrings.ts | liveRegionRoot": {
    "message": "Live-Regionsstamm"
  },
  "panels/accessibility/AccessibilityStrings.ts | maximumValue": {
    "message": "Höchstwert"
  },
  "panels/accessibility/AccessibilityStrings.ts | minimumValue": {
    "message": "Mindestwert"
  },
  "panels/accessibility/AccessibilityStrings.ts | multiline": {
    "message": "Mehrzeilig"
  },
  "panels/accessibility/AccessibilityStrings.ts | multiselectable": {
    "message": "Mehrfachauswahl möglich"
  },
  "panels/accessibility/AccessibilityStrings.ts | orientation": {
    "message": "Ausrichtung"
  },
  "panels/accessibility/AccessibilityStrings.ts | pressed": {
    "message": "Gedrückt"
  },
  "panels/accessibility/AccessibilityStrings.ts | readonlyString": {
    "message": "Schreibgeschützt"
  },
  "panels/accessibility/AccessibilityStrings.ts | relatedElement": {
    "message": "Ähnliches Element"
  },
  "panels/accessibility/AccessibilityStrings.ts | relevantLiveRegions": {
    "message": "Relevant (Live-Regionen)"
  },
  "panels/accessibility/AccessibilityStrings.ts | requiredString": {
    "message": "Erforderlich"
  },
  "panels/accessibility/AccessibilityStrings.ts | role": {
    "message": "Rolle"
  },
  "panels/accessibility/AccessibilityStrings.ts | selectedString": {
    "message": "Ausgewählt"
  },
  "panels/accessibility/AccessibilityStrings.ts | theAccessibleDescriptionForThis": {
    "message": "Die barrierefreie Beschreibung für dieses Element."
  },
  "panels/accessibility/AccessibilityStrings.ts | theComputedHelpTextForThis": {
    "message": "Der berechnete Hilfetext für dieses Element."
  },
  "panels/accessibility/AccessibilityStrings.ts | theComputedNameOfThisElement": {
    "message": "Der berechnete Name dieses Elements."
  },
  "panels/accessibility/AccessibilityStrings.ts | theDescendantOfThisElementWhich": {
    "message": "Das untergeordnete Element zu diesem Element, das aktiv ist, also das Element, an das der Fokus delegiert werden sollte."
  },
  "panels/accessibility/AccessibilityStrings.ts | theHierarchicalLevelOfThis": {
    "message": "Die hierarchische Ebene dieses Elements."
  },
  "panels/accessibility/AccessibilityStrings.ts | theValueOfThisElementThisMayBe": {
    "message": "Der Wert dieses Elements; dieser kann je nach Element benutzerdefiniert oder entwicklerdefiniert sein."
  },
  "panels/accessibility/AccessibilityStrings.ts | value": {
    "message": "Wert"
  },
  "panels/accessibility/AccessibilityStrings.ts | valueDescription": {
    "message": "Beschreibung des Werts"
  },
  "panels/accessibility/AccessibilityStrings.ts | valueFromAttribute": {
    "message": "Wert vom Attribut"
  },
  "panels/accessibility/AccessibilityStrings.ts | valueFromDescriptionElement": {
    "message": "Wert aus dem description-Element."
  },
  "panels/accessibility/AccessibilityStrings.ts | valueFromElementContents": {
    "message": "Wert aus Elementinhalten."
  },
  "panels/accessibility/AccessibilityStrings.ts | valueFromFigcaptionElement": {
    "message": "Wert aus dem figcaption-Element."
  },
  "panels/accessibility/AccessibilityStrings.ts | valueFromLabelElement": {
    "message": "Wert aus dem label-Element."
  },
  "panels/accessibility/AccessibilityStrings.ts | valueFromLabelElementWithFor": {
    "message": "Wert aus dem label-Element mit einem for=-Attribut."
  },
  "panels/accessibility/AccessibilityStrings.ts | valueFromLabelElementWrapped": {
    "message": "Wert aus einem umschließenden label-Element."
  },
  "panels/accessibility/AccessibilityStrings.ts | valueFromLegendElement": {
    "message": "Wert aus dem legend-Element."
  },
  "panels/accessibility/AccessibilityStrings.ts | valueFromNativeHtmlRuby": {
    "message": "Wert aus einfachem HTML-Ruby-Vermerk."
  },
  "panels/accessibility/AccessibilityStrings.ts | valueFromNativeHtmlUnknownSource": {
    "message": "Wert aus nativem HTML-Code (unbekannte Quelle)."
  },
  "panels/accessibility/AccessibilityStrings.ts | valueFromPlaceholderAttribute": {
    "message": "Wert des Platzhalter-Attributs"
  },
  "panels/accessibility/AccessibilityStrings.ts | valueFromRelatedElement": {
    "message": "Wert von ähnlichem Element."
  },
  "panels/accessibility/AccessibilityStrings.ts | valueFromStyle": {
    "message": "Wert aus Stil."
  },
  "panels/accessibility/AccessibilityStrings.ts | valueFromTableCaption": {
    "message": "Wert aus table caption."
  },
  "panels/accessibility/AccessibilityStrings.ts | valueFromTitleAttribute": {
    "message": "Wert aus Titelattribut."
  },
  "panels/accessibility/AccessibilityStrings.ts | whetherAUserMaySelectMoreThanOne": {
    "message": "Legt fest, ob Nutzer mehr als eine Option aus diesem Widget auswählen können."
  },
  "panels/accessibility/AccessibilityStrings.ts | whetherAndWhatPriorityOfLive": {
    "message": "Gibt an, ob für dieses Element Liveupdates erwartet werden und, falls ja, mit welcher Priorität"
  },
  "panels/accessibility/AccessibilityStrings.ts | whetherAndWhatTypeOfAutocomplete": {
    "message": "Gibt an, ob dieses Element automatisch vervollständigte Vorschläge macht und, falls ja, welchen Typ."
  },
  "panels/accessibility/AccessibilityStrings.ts | whetherTheOptionRepresentedBy": {
    "message": "Gibt an, ob die durch dieses Element dargestellte Option derzeit ausgewählt ist."
  },
  "panels/accessibility/AccessibilityStrings.ts | whetherTheValueOfThisElementCan": {
    "message": "Gibt an, ob der Wert dieses Elements festgelegt werden kann."
  },
  "panels/accessibility/AccessibilityStrings.ts | whetherThisCheckboxRadioButtonOr": {
    "message": "Gibt an, ob dieses Kästchen, Optionsfeld oder Baumelement aktiviert, deaktiviert oder beides ist, z. B. sowohl mit aktivierten als auch deaktivierten untergeordneten Elementen."
  },
  "panels/accessibility/AccessibilityStrings.ts | whetherThisElementHasCausedSome": {
    "message": "Gibt an, ob dieses Element eine Art von Pop-up (z. B. ein Menü) erscheinen lässt."
  },
  "panels/accessibility/AccessibilityStrings.ts | whetherThisElementIsARequired": {
    "message": "Gibt an, ob dieses Element ein erforderliches Feld in einem Formular ist."
  },
  "panels/accessibility/AccessibilityStrings.ts | whetherThisElementOrAnother": {
    "message": "Anzeigen, ob dieses Element oder ein anderes von ihm gesteuertes Gruppierungselement maximiert ist."
  },
  "panels/accessibility/AccessibilityStrings.ts | whetherThisElementOrItsSubtree": {
    "message": "Gibt an, ob dieses Element oder seine Unterstruktur gerade aktualisiert wird und es sich daher möglicherweise in einem uneinheitlichen Zustand befindet."
  },
  "panels/accessibility/AccessibilityStrings.ts | whetherThisLinearElements": {
    "message": "Gibt an, ob die Ausrichtung dieses linearen Elements horizontal oder vertikal ist."
  },
  "panels/accessibility/AccessibilityStrings.ts | whetherThisTextBoxMayHaveMore": {
    "message": "Legt fest, ob für dieses Textfeld mehr als eine Zeile zulässig ist."
  },
  "panels/accessibility/AccessibilityStrings.ts | whetherThisToggleButtonIs": {
    "message": "Zeigt an, ob diese Ein-/Aus-Schaltfläche gedrückt ist."
  },
  "panels/accessibility/SourceOrderView.ts | noSourceOrderInformation": {
    "message": "Keine Informationen zur Quellenreihenfolge verfügbar"
  },
  "panels/accessibility/SourceOrderView.ts | showSourceOrder": {
    "message": "Quellenreihenfolge anzeigen"
  },
  "panels/accessibility/SourceOrderView.ts | sourceOrderViewer": {
    "message": "Viewer für Quellenreihenfolge"
  },
  "panels/accessibility/SourceOrderView.ts | thereMayBeADelayInDisplaying": {
    "message": "Es kann zu einer Verzögerung bei der Anzeige der Quellenreihenfolge für Elemente mit vielen untergeordneten Elementen kommen"
  },
  "panels/accessibility/accessibility-meta.ts | accessibility": {
    "message": "Zugänglichkeit"
  },
  "panels/accessibility/accessibility-meta.ts | shoAccessibility": {
    "message": "Bedienungshilfen anzeigen"
  },
  "panels/animation/AnimationTimeline.ts | animationPreviewS": {
    "message": "Animationsvorschau {PH1}"
  },
  "panels/animation/AnimationTimeline.ts | animationPreviews": {
    "message": "Vorschauen auf Animationen"
  },
  "panels/animation/AnimationTimeline.ts | clearAll": {
    "message": "Alle löschen"
  },
  "panels/animation/AnimationTimeline.ts | pause": {
    "message": "Pausieren"
  },
  "panels/animation/AnimationTimeline.ts | pauseAll": {
    "message": "Alle pausieren"
  },
  "panels/animation/AnimationTimeline.ts | pauseTimeline": {
    "message": "Zeitachse pausieren"
  },
  "panels/animation/AnimationTimeline.ts | playTimeline": {
    "message": "Zeitachse abspielen"
  },
  "panels/animation/AnimationTimeline.ts | playbackRatePlaceholder": {
    "message": "{PH1} %"
  },
  "panels/animation/AnimationTimeline.ts | playbackRates": {
    "message": "Wiedergabegeschwindigkeit"
  },
  "panels/animation/AnimationTimeline.ts | replayTimeline": {
    "message": "Nochmal-Zeitachse"
  },
  "panels/animation/AnimationTimeline.ts | resumeAll": {
    "message": "Alle fortsetzen"
  },
  "panels/animation/AnimationTimeline.ts | selectAnEffectAboveToInspectAnd": {
    "message": "Wähle zum Untersuchen und Ändern oben einen Effekt aus."
  },
  "panels/animation/AnimationTimeline.ts | setSpeedToS": {
    "message": "Geschwindigkeit auf {PH1} einstellen"
  },
  "panels/animation/AnimationTimeline.ts | waitingForAnimations": {
    "message": "Auf Animationen warten…"
  },
  "panels/animation/AnimationUI.ts | animationEndpointSlider": {
    "message": "Schieberegler für Endpunkt der Animation"
  },
  "panels/animation/AnimationUI.ts | animationKeyframeSlider": {
    "message": "Schieberegler für Animations-Keyframe"
  },
  "panels/animation/AnimationUI.ts | sSlider": {
    "message": "{PH1}-Schieberegler"
  },
  "panels/animation/animation-meta.ts | animations": {
    "message": "Animationen"
  },
  "panels/animation/animation-meta.ts | showAnimations": {
    "message": "Animationen anzeigen"
  },
  "panels/application/AppManifestView.ts | aUrlInTheManifestContainsA": {
    "message": "Eine URL im Manifest enthält Nutzernamen, Passwort oder Port"
  },
  "panels/application/AppManifestView.ts | actualHeightSpxOfSSDoesNotMatch": {
    "message": "Tatsächliche Höhe ({PH1} px) von {PH2} {PH3} stimmt nicht mit der angegebenen Höhe ({PH4} px) überein"
  },
  "panels/application/AppManifestView.ts | actualSizeSspxOfSSDoesNotMatch": {
    "message": "Originalgröße ({PH1} × {PH2}) px von {PH3} {PH4} entspricht nicht der festgelegten Größe ({PH5} × {PH6} px)"
  },
  "panels/application/AppManifestView.ts | actualWidthSpxOfSSDoesNotMatch": {
    "message": "Tatsächliche Breite ({PH1} px) von {PH2} {PH3} stimmt nicht mit der angegebenen Breite ({PH4} px) überein"
  },
  "panels/application/AppManifestView.ts | appIdExplainer": {
    "message": "Dies dient als Information für den Browser, ob das Manifest eine bestehende Anwendung aktualisieren soll, oder ob sich dies auf eine neue Webanwendung bezieht, die installiert werden kann."
  },
  "panels/application/AppManifestView.ts | appIdNote": {
    "message": "{PH1} „{PH2}“ wird nicht im Manifest angegeben. Stattdessen wird „{PH3}“ verwendet. Wenn du eine App-ID angeben möchtest, die der aktuellen Identität entspricht, setze das Feld „{PH4}“ auf „{PH5}“ {PH6}."
  },
  "panels/application/AppManifestView.ts | avoidPurposeAnyAndMaskable": {
    "message": "Von der Deklarierung eines Symbols mit „purpose“ von „any maskable“ wird abgeraten. Die Wahrscheinlichkeit ist groß, dass das Symbol aufgrund eines zu großen oder zu geringen Abstands auf einigen Plattformen nicht richtig angezeigt wird."
  },
  "panels/application/AppManifestView.ts | backgroundColor": {
    "message": "Hintergrundfarbe"
  },
  "panels/application/AppManifestView.ts | computedAppId": {
    "message": "Berechnete App-ID"
  },
  "panels/application/AppManifestView.ts | copiedToClipboard": {
    "message": "Vorgeschlagene ID „{PH1}“ in Zwischenablage kopiert"
  },
  "panels/application/AppManifestView.ts | copyToClipboard": {
    "message": "Vorgeschlagene ID in Zwischenablage kopieren"
  },
  "panels/application/AppManifestView.ts | couldNotCheckServiceWorker": {
    "message": "service worker konnte ohne das Feld „start_url“ im Manifest nicht geprüft werden"
  },
  "panels/application/AppManifestView.ts | couldNotDownloadARequiredIcon": {
    "message": "Ein erforderliches Symbol konnte nicht aus dem Manifest heruntergeladen werden"
  },
  "panels/application/AppManifestView.ts | customizePwaTitleBar": {
    "message": "Hier findest du weitere Informationen zum Anpassen des Overlays für Fenstersteuerelemente der Titelleiste deiner PWA"
  },
  "panels/application/AppManifestView.ts | darkBackgroundColor": {
    "message": "Dunkle Hintergrundfarbe"
  },
  "panels/application/AppManifestView.ts | darkThemeColor": {
    "message": "Farbe für dunkles Design"
  },
  "panels/application/AppManifestView.ts | description": {
    "message": "Beschreibung"
  },
  "panels/application/AppManifestView.ts | descriptionMayBeTruncated": {
    "message": "Die Beschreibung kann abgeschnitten werden."
  },
  "panels/application/AppManifestView.ts | display": {
    "message": "Display"
  },
  "panels/application/AppManifestView.ts | documentationOnMaskableIcons": {
    "message": "Dokumentation zu maskierbaren Symbolen"
  },
  "panels/application/AppManifestView.ts | downloadedIconWasEmptyOr": {
    "message": "Heruntergeladenes Symbol war leer oder fehlerhaft"
  },
  "panels/application/AppManifestView.ts | errorsAndWarnings": {
    "message": "Fehler und Warnungen"
  },
  "panels/application/AppManifestView.ts | formFactor": {
    "message": "Formfaktor"
  },
  "panels/application/AppManifestView.ts | icon": {
    "message": "Symbol"
  },
  "panels/application/AppManifestView.ts | icons": {
    "message": "Symbole"
  },
  "panels/application/AppManifestView.ts | identity": {
    "message": "Identität"
  },
  "panels/application/AppManifestView.ts | imageFromS": {
    "message": "Bild von {PH1}"
  },
  "panels/application/AppManifestView.ts | installability": {
    "message": "Installierbarkeit"
  },
  "panels/application/AppManifestView.ts | label": {
    "message": "Label"
  },
  "panels/application/AppManifestView.ts | learnMore": {
    "message": "Weitere Informationen"
  },
  "panels/application/AppManifestView.ts | manifestContainsDisplayoverride": {
    "message": "Manifest enthält das Feld „display_override“ und der erste unterstützte Anzeigemodus muss aus „standalone“, „fullscreen“ oder „minimal-ui“ sein"
  },
  "panels/application/AppManifestView.ts | manifestCouldNotBeFetchedIsEmpty": {
    "message": "Manifest konnte nicht abgerufen oder geparst werden oder ist leer"
  },
  "panels/application/AppManifestView.ts | manifestDisplayPropertyMustBeOne": {
    "message": "Die Property „display“ des Manifests muss entweder „standalone“, „fullscreen“ oder „minimal-ui“ sein"
  },
  "panels/application/AppManifestView.ts | manifestDoesNotContainANameOr": {
    "message": "Manifest enthält kein Feld „name“ oder „short_name“"
  },
  "panels/application/AppManifestView.ts | manifestDoesNotContainASuitable": {
    "message": "Das Manifest enthält kein passendes Symbol – das Format PNG, SVG oder WebP mit mindestens {PH1} px ist erforderlich, das Attribut „sizes“ muss festgelegt werden und das Attribut „purpose“, sofern festgelegt, muss „any“ enthalten."
  },
  "panels/application/AppManifestView.ts | manifestSpecifies": {
    "message": "Manifest gibt „prefer_related_applications: true“ an"
  },
  "panels/application/AppManifestView.ts | manifestStartUrlIsNotValid": {
    "message": "Manifest „start_url“ ungültig"
  },
  "panels/application/AppManifestView.ts | name": {
    "message": "Name"
  },
  "panels/application/AppManifestView.ts | needHelpReadOurS": {
    "message": "Benötigst du Hilfe? Informationen findest du unter {PH1}."
  },
  "panels/application/AppManifestView.ts | newNoteUrl": {
    "message": "URL für neue Notiz"
  },
  "panels/application/AppManifestView.ts | noPlayStoreIdProvided": {
    "message": "Play Store-ID fehlt"
  },
  "panels/application/AppManifestView.ts | noScreenshotsForRicherPWAInstallOnDesktop": {
    "message": "Die detailliertere Installations-UI für PWAs ist auf Computern nicht verfügbar. Füge mindestens einen Screenshot hinzu, für den form_factor auf wide gesetzt ist."
  },
  "panels/application/AppManifestView.ts | noScreenshotsForRicherPWAInstallOnMobile": {
    "message": "Die detailliertere Installations-UI für PWAs ist auf Mobilgeräten nicht verfügbar. Füge mindestens einen Screenshot hinzu, für den form_factor nicht oder auf einen anderen Wert als wide festgelegt ist."
  },
  "panels/application/AppManifestView.ts | noSuppliedIconIsAtLeastSpxSquare": {
    "message": "Keines der bereitgestellten Symbole weist das Format PNG, SVG oder WebP mit mindestens {PH1} Pixel und nicht festgelegtem oder auf „any“ gesetztem Attribut auf."
  },
  "panels/application/AppManifestView.ts | note": {
    "message": "Hinweis:"
  },
  "panels/application/AppManifestView.ts | orientation": {
    "message": "Ausrichtung"
  },
  "panels/application/AppManifestView.ts | pageDoesNotWorkOffline": {
    "message": "Seite kann offline nicht geladen werden"
  },
  "panels/application/AppManifestView.ts | pageDoesNotWorkOfflineThePage": {
    "message": "Die Seite kann offline nicht geladen werden. Ab Chrome 93 ändern sich die Kriterien für die Installierbarkeit. Diese Website ist dann nicht mehr installierbar. Weitere Informationen findest du unter {PH1}."
  },
  "panels/application/AppManifestView.ts | pageHasNoManifestLinkUrl": {
    "message": "Die Seite hat kein Manifest <link> URL"
  },
  "panels/application/AppManifestView.ts | pageIsLoadedInAnIncognitoWindow": {
    "message": "Seite wird in einem Inkognitofenster geladen"
  },
  "panels/application/AppManifestView.ts | pageIsNotLoadedInTheMainFrame": {
    "message": "Seite wird nicht im Hauptframe geladen"
  },
  "panels/application/AppManifestView.ts | pageIsNotServedFromASecureOrigin": {
    "message": "Seite wird nicht von einer sicheren Quelle geladen"
  },
  "panels/application/AppManifestView.ts | platform": {
    "message": "Plattform"
  },
  "panels/application/AppManifestView.ts | preferrelatedapplicationsIsOnly": {
    "message": "„prefer_related_applications“ wird nur für die Chrome Beta und stabile Versionen unter Android unterstützt."
  },
  "panels/application/AppManifestView.ts | presentation": {
    "message": "Präsentation"
  },
  "panels/application/AppManifestView.ts | protocolHandlers": {
    "message": "Protokoll-Handler"
  },
  "panels/application/AppManifestView.ts | sSDoesNotSpecifyItsSizeInThe": {
    "message": "{PH1} {PH2} gibt seine Größe im Manifest nicht an"
  },
  "panels/application/AppManifestView.ts | sSFailedToLoad": {
    "message": "{PH1} {PH2} konnte nicht geladen werden"
  },
  "panels/application/AppManifestView.ts | sSHeightDoesNotComplyWithRatioRequirement": {
    "message": "Die Höhe von {PH1} {PH2} darf nicht mehr als 2,3-mal so groß wie die Breite sein"
  },
  "panels/application/AppManifestView.ts | sSShouldHaveSquareIcon": {
    "message": "Die meisten Betriebssysteme erfordern quadratische Symbole. Nimm mindestens ein quadratisches Symbol in das Array auf."
  },
  "panels/application/AppManifestView.ts | sSShouldSpecifyItsSizeAs": {
    "message": "{PH1} {PH2} sollte seine Größe als [width]x[height] angeben"
  },
  "panels/application/AppManifestView.ts | sSSizeShouldBeAtLeast320": {
    "message": "{PH1} {PH2}-Größe sollte mindestens 320 × 320 betragen"
  },
  "panels/application/AppManifestView.ts | sSSizeShouldBeAtMost3840": {
    "message": "Die Größe von {PH1} {PH2} sollte mindestens 3.840 × 3.840 Pixel betragen"
  },
  "panels/application/AppManifestView.ts | sSWidthDoesNotComplyWithRatioRequirement": {
    "message": "Die Breite von {PH1} {PH2} darf nicht mehr als 2,3-mal so groß wie die Höhe sein"
  },
  "panels/application/AppManifestView.ts | sSrcIsNotSet": {
    "message": "„src“ ist nicht für „{PH1}“ festgelegt"
  },
  "panels/application/AppManifestView.ts | sUrlSFailedToParse": {
    "message": "{PH1}-URL „{PH2}“ konnte nicht geparst werden"
  },
  "panels/application/AppManifestView.ts | screenshot": {
    "message": "Screenshot"
  },
  "panels/application/AppManifestView.ts | screenshotPixelSize": {
    "message": "Für Screenshot {url} sollte anstelle von any eine Pixelgröße im Format [width]x[height] als erste Größe angegeben werden."
  },
  "panels/application/AppManifestView.ts | screenshotS": {
    "message": "Screenshot {PH1}"
  },
  "panels/application/AppManifestView.ts | screenshotsMustHaveSameAspectRatio": {
    "message": "Alle Screenshots mit demselben form_factor müssen dasselbe Seitenverhältnis wie der erste Screenshot mit diesem form_factor haben. Einige Screenshots werden ignoriert."
  },
  "panels/application/AppManifestView.ts | selectWindowControlsOverlayEmulationOs": {
    "message": "Overlay für Fenstersteuerelemente emulieren auf"
  },
  "panels/application/AppManifestView.ts | shortName": {
    "message": "Kurzname"
  },
  "panels/application/AppManifestView.ts | shortcutS": {
    "message": "Verknüpfung {PH1}"
  },
  "panels/application/AppManifestView.ts | shortcutSShouldIncludeAXPixel": {
    "message": "Verknüpfung # {PH1} sollte ein Symbol mit 96 × 96 Pixel enthalten"
  },
  "panels/application/AppManifestView.ts | shortcutsMayBeNotAvailable": {
    "message": "Die maximale Anzahl an Tastenkombinationen hängt von der Plattform ab. Einige Tastenkombinationen sind möglicherweise nicht verfügbar."
  },
  "panels/application/AppManifestView.ts | showOnlyTheMinimumSafeAreaFor": {
    "message": "Bei maskierbaren Symbolen nur den minimalen sicheren Bereich anzeigen"
  },
  "panels/application/AppManifestView.ts | startUrl": {
    "message": "Start-URL"
  },
  "panels/application/AppManifestView.ts | theAppIsAlreadyInstalled": {
    "message": "Die App ist bereits installiert"
  },
  "panels/application/AppManifestView.ts | thePlayStoreAppUrlAndPlayStoreId": {
    "message": "Die Play Store App-URL und die Play Store-ID stimmen nicht überein"
  },
  "panels/application/AppManifestView.ts | theSpecifiedApplicationPlatform": {
    "message": "Die angegebene Anwendungsplattform wird nicht von Android unterstützt"
  },
  "panels/application/AppManifestView.ts | themeColor": {
    "message": "Farbe des Designs"
  },
  "panels/application/AppManifestView.ts | tooManyScreenshotsForDesktop": {
    "message": "Auf dem Desktop werden maximal acht Screenshots angezeigt. Alle weiteren werden ignoriert."
  },
  "panels/application/AppManifestView.ts | tooManyScreenshotsForMobile": {
    "message": "Auf Mobilgeräten werden maximal fünf Screenshots angezeigt. Alle weiteren werden ignoriert."
  },
  "panels/application/AppManifestView.ts | url": {
    "message": "URL"
  },
  "panels/application/AppManifestView.ts | wcoFound": {
    "message": "Chrome hat den „{PH1}“-Wert für das Feld „{PH2}“ im {PH3} gefunden."
  },
  "panels/application/AppManifestView.ts | wcoNeedHelpReadMore": {
    "message": "Brauchst du Hilfe? Dann lies {PH1}."
  },
  "panels/application/AppManifestView.ts | wcoNotFound": {
    "message": "Definiere „{PH1}“ im Manifest, um die Window Controls Overlay API zu verwenden und die Titelleiste deiner App anzupassen."
  },
  "panels/application/AppManifestView.ts | windowControlsOverlay": {
    "message": "Window Controls Overlay"
  },
  "panels/application/ApplicationPanelSidebar.ts | appManifest": {
    "message": "App-Manifest"
  },
  "panels/application/ApplicationPanelSidebar.ts | application": {
    "message": "App"
  },
  "panels/application/ApplicationPanelSidebar.ts | applicationSidebarPanel": {
    "message": "Seitenleiste des Anwendungsbereichs"
  },
  "panels/application/ApplicationPanelSidebar.ts | backgroundServices": {
    "message": "Hintergrunddienste"
  },
  "panels/application/ApplicationPanelSidebar.ts | beforeInvokeAlert": {
    "message": "{PH1}: Aufrufen, um zu diesem Abschnitt im Manifest zu scrollen"
  },
  "panels/application/ApplicationPanelSidebar.ts | clear": {
    "message": "Löschen"
  },
  "panels/application/ApplicationPanelSidebar.ts | cookies": {
    "message": "Cookies"
  },
  "panels/application/ApplicationPanelSidebar.ts | cookiesUsedByFramesFromS": {
    "message": "Cookies werden durch Frames von {PH1} verwendet"
  },
  "panels/application/ApplicationPanelSidebar.ts | documentNotAvailable": {
    "message": "Dokument nicht verfügbar"
  },
  "panels/application/ApplicationPanelSidebar.ts | frames": {
    "message": "Frames"
  },
  "panels/application/ApplicationPanelSidebar.ts | indexeddb": {
    "message": "IndexedDB"
  },
  "panels/application/ApplicationPanelSidebar.ts | keyPathS": {
    "message": "Schlüsselpfad: {PH1}"
  },
  "panels/application/ApplicationPanelSidebar.ts | localFiles": {
    "message": "Lokale Dateien"
  },
  "panels/application/ApplicationPanelSidebar.ts | localStorage": {
    "message": "Lokaler Speicher"
  },
  "panels/application/ApplicationPanelSidebar.ts | manifest": {
    "message": "Manifest"
  },
  "panels/application/ApplicationPanelSidebar.ts | noManifestDetected": {
    "message": "Kein Manifest erkannt"
  },
  "panels/application/ApplicationPanelSidebar.ts | onInvokeAlert": {
    "message": "Zu {PH1} gescrollt"
  },
  "panels/application/ApplicationPanelSidebar.ts | onInvokeManifestAlert": {
    "message": "Manifest: Aufrufen, um im Manifest ganz nach oben zu scrollen"
  },
  "panels/application/ApplicationPanelSidebar.ts | openedWindows": {
    "message": "Geöffnete Fenster"
  },
  "panels/application/ApplicationPanelSidebar.ts | refreshIndexeddb": {
    "message": "IndexedDB aktualisieren"
  },
  "panels/application/ApplicationPanelSidebar.ts | sessionStorage": {
    "message": "Sitzungsspeicher"
  },
  "panels/application/ApplicationPanelSidebar.ts | storage": {
    "message": "Speicher"
  },
  "panels/application/ApplicationPanelSidebar.ts | theContentOfThisDocumentHasBeen": {
    "message": "Der Inhalt dieses Dokuments wurde dynamisch über „document.write()“ erstellt."
  },
  "panels/application/ApplicationPanelSidebar.ts | thirdPartyPhaseout": {
    "message": "Cookies von {PH1} wurden möglicherweise aufgrund der Einstellung von Drittanbieter-Cookies blockiert."
  },
  "panels/application/ApplicationPanelSidebar.ts | versionS": {
    "message": "Version: {PH1}"
  },
  "panels/application/ApplicationPanelSidebar.ts | versionSEmpty": {
    "message": "Version: {PH1} (leer)"
  },
  "panels/application/ApplicationPanelSidebar.ts | webSql": {
    "message": "Web SQL"
  },
  "panels/application/ApplicationPanelSidebar.ts | webWorkers": {
    "message": "Web Worker"
  },
  "panels/application/ApplicationPanelSidebar.ts | windowWithoutTitle": {
    "message": "Fenster ohne Titel"
  },
  "panels/application/ApplicationPanelSidebar.ts | worker": {
    "message": "Worker"
  },
  "panels/application/BackForwardCacheTreeElement.ts | backForwardCache": {
    "message": "Back-Forward-Cache"
  },
  "panels/application/BackgroundServiceView.ts | backgroundFetch": {
    "message": "Hintergrundabruf"
  },
  "panels/application/BackgroundServiceView.ts | backgroundServices": {
    "message": "Hintergrunddienste"
  },
  "panels/application/BackgroundServiceView.ts | backgroundSync": {
    "message": "Hintergrundsynchronisierung"
  },
  "panels/application/BackgroundServiceView.ts | clear": {
    "message": "Löschen"
  },
  "panels/application/BackgroundServiceView.ts | clickTheRecordButtonSOrHitSTo": {
    "message": "Klicke auf die Schaltfläche zum Aufzeichnen {PH1} oder drücke {PH2}, um mit der Aufzeichnung zu beginnen."
  },
  "panels/application/BackgroundServiceView.ts | devtoolsWillRecordAllSActivity": {
    "message": "DevTools zeichnet für bis zu 3 Tage alle {PH1}-Aktivitäten auf, auch wenn es geschlossen ist."
  },
  "panels/application/BackgroundServiceView.ts | empty": {
    "message": "Leer"
  },
  "panels/application/BackgroundServiceView.ts | event": {
    "message": "Ereignis"
  },
  "panels/application/BackgroundServiceView.ts | instanceId": {
    "message": "Instanz-ID"
  },
  "panels/application/BackgroundServiceView.ts | learnMore": {
    "message": "Weitere Informationen"
  },
  "panels/application/BackgroundServiceView.ts | noMetadataForThisEvent": {
    "message": "Keine Metadaten für dieses Ereignis"
  },
  "panels/application/BackgroundServiceView.ts | notifications": {
    "message": "Benachrichtigungen"
  },
  "panels/application/BackgroundServiceView.ts | origin": {
    "message": "Ursprung"
  },
  "panels/application/BackgroundServiceView.ts | paymentHandler": {
    "message": "Zahlungsabwickler"
  },
  "panels/application/BackgroundServiceView.ts | periodicBackgroundSync": {
    "message": "Regelmäßige Hintergrundsynchronisierung"
  },
  "panels/application/BackgroundServiceView.ts | pushMessaging": {
    "message": "Push-Benachrichtigungen"
  },
  "panels/application/BackgroundServiceView.ts | recordingSActivity": {
    "message": "{PH1}-Aktivitäten werden aufgezeichnet..."
  },
  "panels/application/BackgroundServiceView.ts | saveEvents": {
    "message": "Ereignisse speichern"
  },
  "panels/application/BackgroundServiceView.ts | selectAnEntryToViewMetadata": {
    "message": "Wähle einen Eintrag aus, um die Metadaten anzuzeigen"
  },
  "panels/application/BackgroundServiceView.ts | showEventsForOtherStorageKeys": {
    "message": "Ereignisse aus anderen Speicherpartitionen anzeigen"
  },
  "panels/application/BackgroundServiceView.ts | showEventsFromOtherDomains": {
    "message": "Ereignisse aus anderen Domains anzeigen"
  },
  "panels/application/BackgroundServiceView.ts | startRecordingEvents": {
    "message": "Ereignisse erfassen"
  },
  "panels/application/BackgroundServiceView.ts | stopRecordingEvents": {
    "message": "Ereignisaufzeichnung beenden"
  },
  "panels/application/BackgroundServiceView.ts | storageKey": {
    "message": "Speicherschlüssel"
  },
  "panels/application/BackgroundServiceView.ts | swScope": {
    "message": "Service Worker-Bereich"
  },
  "panels/application/BackgroundServiceView.ts | timestamp": {
    "message": "Zeitstempel"
  },
  "panels/application/BounceTrackingMitigationsTreeElement.ts | bounceTrackingMitigations": {
    "message": "Eindämmung von Bounce-Tracking"
  },
  "panels/application/CookieItemsView.ts | clearAllCookies": {
    "message": "Alle Cookies löschen"
  },
  "panels/application/CookieItemsView.ts | clearFilteredCookies": {
    "message": "Gefilterte Cookies löschen"
  },
  "panels/application/CookieItemsView.ts | cookies": {
    "message": "Cookies"
  },
  "panels/application/CookieItemsView.ts | numberOfCookiesShownInTableS": {
    "message": "Angezeigte Cookies in Tabelle: {PH1}"
  },
  "panels/application/CookieItemsView.ts | onlyShowCookiesWhichHaveAn": {
    "message": "Nur Cookies mit einem entsprechenden Problem anzeigen"
  },
  "panels/application/CookieItemsView.ts | onlyShowCookiesWithAnIssue": {
    "message": "Nur Cookies mit einem Problem anzeigen"
  },
  "panels/application/CookieItemsView.ts | selectACookieToPreviewItsValue": {
    "message": "Wähle ein Cookie aus, um den Wert in der Vorschau anzuzeigen"
  },
  "panels/application/CookieItemsView.ts | showUrlDecoded": {
    "message": "URL-decodierte Werte anzeigen"
  },
  "panels/application/DOMStorageItemsView.ts | domStorage": {
    "message": "DOM-Speicher"
  },
  "panels/application/DOMStorageItemsView.ts | domStorageItemDeleted": {
    "message": "Das Speicherelement wurde gelöscht."
  },
  "panels/application/DOMStorageItemsView.ts | domStorageItems": {
    "message": "DOM-Speicherelemente"
  },
  "panels/application/DOMStorageItemsView.ts | domStorageItemsCleared": {
    "message": "DOM-Speicherelemente gelöscht"
  },
  "panels/application/DOMStorageItemsView.ts | domStorageNumberEntries": {
    "message": "Anzahl der in der Tabelle angezeigten Einträge: {PH1}"
  },
  "panels/application/DOMStorageItemsView.ts | key": {
    "message": "Schlüssel"
  },
  "panels/application/DOMStorageItemsView.ts | selectAValueToPreview": {
    "message": "Wähle einen Wert aus, um eine Vorschau zu öffnen"
  },
  "panels/application/DOMStorageItemsView.ts | value": {
    "message": "Wert"
  },
  "panels/application/DatabaseModel.ts | anUnexpectedErrorSOccurred": {
    "message": "Ein unerwarteter Fehler ({PH1}) ist aufgetreten."
  },
  "panels/application/DatabaseModel.ts | databaseNoLongerHasExpected": {
    "message": "Die erwartete Version ist in der Datenbank nicht mehr vorhanden."
  },
  "panels/application/DatabaseQueryView.ts | databaseQuery": {
    "message": "Datenbankabfrage"
  },
  "panels/application/DatabaseQueryView.ts | queryS": {
    "message": "Anfrage: {PH1}"
  },
  "panels/application/DatabaseTableView.ts | anErrorOccurredTryingToreadTheS": {
    "message": "Beim Lesen der Tabelle „{PH1}“ ist ein Fehler aufgetreten."
  },
  "panels/application/DatabaseTableView.ts | database": {
    "message": "Datenbank"
  },
  "panels/application/DatabaseTableView.ts | refresh": {
    "message": "Aktualisieren"
  },
  "panels/application/DatabaseTableView.ts | theStableIsEmpty": {
    "message": "Die Tabelle „{PH1}“ ist leer."
  },
  "panels/application/DatabaseTableView.ts | visibleColumns": {
    "message": "Sichtbare Spalten"
  },
  "panels/application/IndexedDBViews.ts | clearObjectStore": {
    "message": "Objektspeicher löschen"
  },
  "panels/application/IndexedDBViews.ts | collapse": {
    "message": "Minimieren"
  },
  "panels/application/IndexedDBViews.ts | dataMayBeStale": {
    "message": "Daten sind eventuell veraltet"
  },
  "panels/application/IndexedDBViews.ts | deleteDatabase": {
    "message": "Datenbank löschen"
  },
  "panels/application/IndexedDBViews.ts | deleteSelected": {
    "message": "Ausgewählte Elemente löschen"
  },
  "panels/application/IndexedDBViews.ts | expandRecursively": {
    "message": "Wiederkehrend maximieren"
  },
  "panels/application/IndexedDBViews.ts | idb": {
    "message": "IDB"
  },
  "panels/application/IndexedDBViews.ts | indexedDb": {
    "message": "Indexierte Datenbank"
  },
  "panels/application/IndexedDBViews.ts | keyGeneratorValueS": {
    "message": "Wert des Schlüsselgenerators: {PH1}"
  },
  "panels/application/IndexedDBViews.ts | keyPath": {
    "message": "Schlüsselpfad: "
  },
  "panels/application/IndexedDBViews.ts | keyString": {
    "message": "Schlüssel"
  },
  "panels/application/IndexedDBViews.ts | objectStores": {
    "message": "Objekthändler"
  },
  "panels/application/IndexedDBViews.ts | pleaseConfirmDeleteOfSDatabase": {
    "message": "Bestätige das Löschen der „{PH1}“-Datenbank."
  },
  "panels/application/IndexedDBViews.ts | primaryKey": {
    "message": "Primärschlüssel"
  },
  "panels/application/IndexedDBViews.ts | refresh": {
    "message": "Aktualisieren"
  },
  "panels/application/IndexedDBViews.ts | refreshDatabase": {
    "message": "Datenbank aktualisieren"
  },
  "panels/application/IndexedDBViews.ts | showNextPage": {
    "message": "Nächste Seite anzeigen"
  },
  "panels/application/IndexedDBViews.ts | showPreviousPage": {
    "message": "Vorherige Seite anzeigen"
  },
  "panels/application/IndexedDBViews.ts | someEntriesMayHaveBeenModified": {
    "message": "Einige Einträge wurden möglicherweise geändert"
  },
  "panels/application/IndexedDBViews.ts | startFromKey": {
    "message": "Ab Schlüssel starten"
  },
  "panels/application/IndexedDBViews.ts | totalEntriesS": {
    "message": "Einträge insgesamt: {PH1}"
  },
  "panels/application/IndexedDBViews.ts | valueString": {
    "message": "Wert"
  },
  "panels/application/IndexedDBViews.ts | version": {
    "message": "Version"
  },
  "panels/application/InterestGroupStorageView.ts | clickToDisplayBody": {
    "message": "Klicke auf ein beliebiges Interessengruppen-Ereignis, um den derzeitigen Status der Gruppe anzeigen zu lassen"
  },
  "panels/application/InterestGroupStorageView.ts | noDataAvailable": {
    "message": "Für die ausgewählte Interessengruppe sind keine Details verfügbar. Der Browser hat die Gruppe möglicherweise verlassen."
  },
  "panels/application/InterestGroupTreeElement.ts | interestGroups": {
    "message": "Interessengruppen"
  },
  "panels/application/OpenedWindowDetailsView.ts | accessToOpener": {
    "message": "Zugriff auf Ursprungsseite"
  },
  "panels/application/OpenedWindowDetailsView.ts | clickToRevealInElementsPanel": {
    "message": "Zum Anzeigen im Elementbereich klicken"
  },
  "panels/application/OpenedWindowDetailsView.ts | closed": {
    "message": "geschlossen"
  },
  "panels/application/OpenedWindowDetailsView.ts | crossoriginEmbedderPolicy": {
    "message": "Cross-Origin-Embedder-Richtlinie"
  },
  "panels/application/OpenedWindowDetailsView.ts | document": {
    "message": "Dokument"
  },
  "panels/application/OpenedWindowDetailsView.ts | no": {
    "message": "Nein"
  },
  "panels/application/OpenedWindowDetailsView.ts | openerFrame": {
    "message": "Frame der Ursprungsseite"
  },
  "panels/application/OpenedWindowDetailsView.ts | reportingTo": {
    "message": "melden an"
  },
  "panels/application/OpenedWindowDetailsView.ts | security": {
    "message": "Sicherheit"
  },
  "panels/application/OpenedWindowDetailsView.ts | securityIsolation": {
    "message": "Sicherheit und Isolation"
  },
  "panels/application/OpenedWindowDetailsView.ts | showsWhetherTheOpenedWindowIs": {
    "message": "Zeigt, ob das geöffnete Fenster auf seine Ursprungsseite zugreifen kann und umgekehrt"
  },
  "panels/application/OpenedWindowDetailsView.ts | type": {
    "message": "Typ"
  },
  "panels/application/OpenedWindowDetailsView.ts | unknown": {
    "message": "Unbekannt"
  },
  "panels/application/OpenedWindowDetailsView.ts | url": {
    "message": "URL"
  },
  "panels/application/OpenedWindowDetailsView.ts | webWorker": {
    "message": "Web Worker"
  },
  "panels/application/OpenedWindowDetailsView.ts | windowWithoutTitle": {
    "message": "Fenster ohne Titel"
  },
  "panels/application/OpenedWindowDetailsView.ts | worker": {
    "message": "Worker"
  },
  "panels/application/OpenedWindowDetailsView.ts | yes": {
    "message": "Ja"
  },
  "panels/application/PreloadingTreeElement.ts | rules": {
    "message": "Regeln"
  },
  "panels/application/PreloadingTreeElement.ts | speculations": {
    "message": "Spekulationen"
  },
  "panels/application/PreloadingTreeElement.ts | speculativeLoads": {
    "message": "Spekulative Ladevorgänge"
  },
  "panels/application/ReportingApiReportsView.ts | clickToDisplayBody": {
    "message": "Klicke auf einen Bericht, um sich den zugehörigen Text anzusehen"
  },
  "panels/application/ReportingApiTreeElement.ts | reportingApi": {
    "message": "Reporting API"
  },
  "panels/application/ResourcesPanel.ts | webSqlDeprecation": {
    "message": "Web SQL wurde eingestellt. Du kannst dich für den Test zur Einstellung anmelden und die API noch bis Chrome 123 verwenden."
  },
  "panels/application/ServiceWorkerCacheTreeElement.ts | cacheStorage": {
    "message": "Cache-Speicher"
  },
  "panels/application/ServiceWorkerCacheTreeElement.ts | delete": {
    "message": "Löschen"
  },
  "panels/application/ServiceWorkerCacheTreeElement.ts | refreshCaches": {
    "message": "Caches aktualisieren"
  },
  "panels/application/ServiceWorkerCacheViews.ts | cache": {
    "message": "Cache"
  },
  "panels/application/ServiceWorkerCacheViews.ts | deleteSelected": {
    "message": "Auswahl löschen"
  },
  "panels/application/ServiceWorkerCacheViews.ts | filterByPath": {
    "message": "Nach Pfad filtern"
  },
  "panels/application/ServiceWorkerCacheViews.ts | headers": {
    "message": "Header"
  },
  "panels/application/ServiceWorkerCacheViews.ts | matchingEntriesS": {
    "message": "Passende Einträge: {PH1}"
  },
  "panels/application/ServiceWorkerCacheViews.ts | name": {
    "message": "Name"
  },
  "panels/application/ServiceWorkerCacheViews.ts | preview": {
    "message": "Vorschau"
  },
  "panels/application/ServiceWorkerCacheViews.ts | refresh": {
    "message": "Aktualisieren"
  },
  "panels/application/ServiceWorkerCacheViews.ts | selectACacheEntryAboveToPreview": {
    "message": "Cache-Eintrag oben für die Vorschau auswählen"
  },
  "panels/application/ServiceWorkerCacheViews.ts | serviceWorkerCache": {
    "message": "Service Worker-Cache"
  },
  "panels/application/ServiceWorkerCacheViews.ts | timeCached": {
    "message": "Im Cache gespeicherte Zeit"
  },
  "panels/application/ServiceWorkerCacheViews.ts | totalEntriesS": {
    "message": "Einträge insgesamt: {PH1}"
  },
  "panels/application/ServiceWorkerCacheViews.ts | varyHeaderWarning": {
    "message": "⚠️ ignoreVary auf „true“ setzen, wenn du diesen Eintrag abgleichst"
  },
  "panels/application/ServiceWorkerUpdateCycleView.ts | endTimeS": {
    "message": "Ende: {PH1}"
  },
  "panels/application/ServiceWorkerUpdateCycleView.ts | startTimeS": {
    "message": "Beginn: {PH1}"
  },
  "panels/application/ServiceWorkerUpdateCycleView.ts | timeline": {
    "message": "Zeitachse"
  },
  "panels/application/ServiceWorkerUpdateCycleView.ts | updateActivity": {
    "message": "Aktualisierungs-Aktivität"
  },
  "panels/application/ServiceWorkerUpdateCycleView.ts | version": {
    "message": "Version"
  },
  "panels/application/ServiceWorkersView.ts | bypassForNetwork": {
    "message": "Für Netzwerk umgehen"
  },
  "panels/application/ServiceWorkersView.ts | bypassTheServiceWorkerAndLoad": {
    "message": "service worker umgehen und Ressourcen aus dem Netzwerk laden"
  },
  "panels/application/ServiceWorkersView.ts | clients": {
    "message": "Clients"
  },
  "panels/application/ServiceWorkersView.ts | focus": {
    "message": "Fokus"
  },
  "panels/application/ServiceWorkersView.ts | inspect": {
    "message": "Untersuchen"
  },
  "panels/application/ServiceWorkersView.ts | networkRequests": {
    "message": "Netzwerkanfragen"
  },
  "panels/application/ServiceWorkersView.ts | onPageReloadForceTheService": {
    "message": "Beim Neuladen der Seite die Aktualisierung von service worker erzwingen und diesen aktivieren"
  },
  "panels/application/ServiceWorkersView.ts | periodicSync": {
    "message": "Regelmäßige Synchronisierung"
  },
  "panels/application/ServiceWorkersView.ts | periodicSyncTag": {
    "message": "Tag für regelmäßige Synchronisierung"
  },
  "panels/application/ServiceWorkersView.ts | pushData": {
    "message": "Daten senden"
  },
  "panels/application/ServiceWorkersView.ts | pushString": {
    "message": "Push"
  },
  "panels/application/ServiceWorkersView.ts | receivedS": {
    "message": "Am {PH1} empfangen"
  },
  "panels/application/ServiceWorkersView.ts | routers": {
    "message": "Router"
  },
  "panels/application/ServiceWorkersView.ts | sActivatedAndIsS": {
    "message": "# {PH1} aktiviert und {PH2}"
  },
  "panels/application/ServiceWorkersView.ts | sDeleted": {
    "message": "{PH1} – gelöscht"
  },
  "panels/application/ServiceWorkersView.ts | sIsRedundant": {
    "message": "#{PH1} ist redundant"
  },
  "panels/application/ServiceWorkersView.ts | sRegistrationErrors": {
    "message": "{PH1}-Registrierungsfehler"
  },
  "panels/application/ServiceWorkersView.ts | sTryingToInstall": {
    "message": "Anzahl von {PH1}, die installiert werden sollen"
  },
  "panels/application/ServiceWorkersView.ts | sWaitingToActivate": {
    "message": "#{PH1} Warten auf Aktivierung"
  },
  "panels/application/ServiceWorkersView.ts | seeAllRegistrations": {
    "message": "Alle Registrierungen anzeigen"
  },
  "panels/application/ServiceWorkersView.ts | serviceWorkerForS": {
    "message": "Service worker für {PH1}"
  },
  "panels/application/ServiceWorkersView.ts | serviceWorkersFromOtherOrigins": {
    "message": "Service Worker aus anderen Quellen"
  },
  "panels/application/ServiceWorkersView.ts | source": {
    "message": "Quelle"
  },
  "panels/application/ServiceWorkersView.ts | startString": {
    "message": "starten"
  },
  "panels/application/ServiceWorkersView.ts | status": {
    "message": "Status"
  },
  "panels/application/ServiceWorkersView.ts | stopString": {
    "message": "stoppen"
  },
  "panels/application/ServiceWorkersView.ts | syncString": {
    "message": "Synchronisieren"
  },
  "panels/application/ServiceWorkersView.ts | syncTag": {
    "message": "Synchronisierungstag"
  },
  "panels/application/ServiceWorkersView.ts | testPushMessageFromDevtools": {
    "message": "Push-Nachricht von DevTools testen."
  },
  "panels/application/ServiceWorkersView.ts | unregister": {
    "message": "Registrierung aufheben"
  },
  "panels/application/ServiceWorkersView.ts | unregisterServiceWorker": {
    "message": "Service Worker abmelden"
  },
  "panels/application/ServiceWorkersView.ts | update": {
    "message": "Aktualisieren"
  },
  "panels/application/ServiceWorkersView.ts | updateCycle": {
    "message": "Zyklus aktualisieren"
  },
  "panels/application/ServiceWorkersView.ts | updateOnReload": {
    "message": "Update beim Aktualisieren"
  },
  "panels/application/ServiceWorkersView.ts | workerS": {
    "message": "Worker: {PH1}"
  },
  "panels/application/SharedStorageEventsView.ts | clickToDisplayBody": {
    "message": "Klicke auf ein „Freigegebener Speicher“-Ereignis, um die Ereignisparameter aufzurufen."
  },
  "panels/application/SharedStorageItemsView.ts | key": {
    "message": "Schlüssel"
  },
  "panels/application/SharedStorageItemsView.ts | selectAValueToPreview": {
    "message": "Wähle einen Wert aus, um eine Vorschau zu öffnen"
  },
  "panels/application/SharedStorageItemsView.ts | sharedStorage": {
    "message": "Shared storage"
  },
  "panels/application/SharedStorageItemsView.ts | sharedStorageFilteredItemsCleared": {
    "message": "Gefilterte Elemente aus freigegebenem Speicher gelöscht"
  },
  "panels/application/SharedStorageItemsView.ts | sharedStorageItemDeleted": {
    "message": "Das Speicherelement wurde gelöscht."
  },
  "panels/application/SharedStorageItemsView.ts | sharedStorageItemEditCanceled": {
    "message": "Die Bearbeitung des Speicherelements wurde abgebrochen."
  },
  "panels/application/SharedStorageItemsView.ts | sharedStorageItemEdited": {
    "message": "Das Speicherelement wurde bearbeitet."
  },
  "panels/application/SharedStorageItemsView.ts | sharedStorageItems": {
    "message": "Elemente im freigegebenen Speicher"
  },
  "panels/application/SharedStorageItemsView.ts | sharedStorageItemsCleared": {
    "message": "Elemente im freigegebenen Speicher gelöscht"
  },
  "panels/application/SharedStorageItemsView.ts | sharedStorageNumberEntries": {
    "message": "Anzahl der in der Tabelle angezeigten Einträge: {PH1}"
  },
  "panels/application/SharedStorageItemsView.ts | value": {
    "message": "Wert"
  },
  "panels/application/SharedStorageListTreeElement.ts | sharedStorage": {
    "message": "Shared storage"
  },
  "panels/application/StorageBucketsTreeElement.ts | storageBuckets": {
    "message": "Speicher-Buckets"
  },
  "panels/application/StorageItemsView.ts | clearAll": {
    "message": "Alle löschen"
  },
  "panels/application/StorageItemsView.ts | deleteSelected": {
    "message": "Auswahl löschen"
  },
  "panels/application/StorageItemsView.ts | filter": {
    "message": "Filtern"
  },
  "panels/application/StorageItemsView.ts | refresh": {
    "message": "Aktualisieren"
  },
  "panels/application/StorageItemsView.ts | refreshedStatus": {
    "message": "Tabelle aktualisiert"
  },
  "panels/application/StorageView.ts | SiteDataCleared": {
    "message": "Websitedaten gelöscht"
  },
  "panels/application/StorageView.ts | application": {
    "message": "App"
  },
  "panels/application/StorageView.ts | cacheStorage": {
    "message": "Cache-Speicher"
  },
  "panels/application/StorageView.ts | clearSiteData": {
    "message": "Websitedaten löschen"
  },
  "panels/application/StorageView.ts | clearing": {
    "message": "Wird gelöscht..."
  },
  "panels/application/StorageView.ts | cookies": {
    "message": "Cookies"
  },
  "panels/application/StorageView.ts | fileSystem": {
    "message": "Dateisystem"
  },
  "panels/application/StorageView.ts | includingThirdPartyCookies": {
    "message": "Einschließlich Drittanbieter-Cookies"
  },
  "panels/application/StorageView.ts | indexDB": {
    "message": "IndexedDB"
  },
  "panels/application/StorageView.ts | internalError": {
    "message": "Interner Fehler"
  },
  "panels/application/StorageView.ts | learnMore": {
    "message": "Weitere Informationen"
  },
  "panels/application/StorageView.ts | localAndSessionStorage": {
    "message": "Lokaler und Sitzungsspeicher"
  },
  "panels/application/StorageView.ts | mb": {
    "message": "MB"
  },
  "panels/application/StorageView.ts | numberMustBeNonNegative": {
    "message": "Die Zahl darf nicht negativ sein"
  },
  "panels/application/StorageView.ts | numberMustBeSmaller": {
    "message": "Die Zahl muss kleiner als {PH1} sein"
  },
  "panels/application/StorageView.ts | other": {
    "message": "Sonstiges"
  },
  "panels/application/StorageView.ts | pleaseEnterANumber": {
    "message": "Gib eine Nummer ein"
  },
  "panels/application/StorageView.ts | sFailedToLoad": {
    "message": "{PH1} (konnte nicht geladen werden)"
  },
  "panels/application/StorageView.ts | serviceWorkers": {
    "message": "Service Worker"
  },
  "panels/application/StorageView.ts | simulateCustomStorage": {
    "message": "Benutzerdefiniertes Speicherkontingent simulieren"
  },
  "panels/application/StorageView.ts | storageQuotaIsLimitedIn": {
    "message": "Speicherkontingent ist im Inkognitomodus begrenzt"
  },
  "panels/application/StorageView.ts | storageQuotaUsed": {
    "message": "{PH1} von Speicherkontingent ({PH2}) genutzt"
  },
  "panels/application/StorageView.ts | storageQuotaUsedWithBytes": {
    "message": "{PH1} Byte von {PH2} Byte des Speicherkontingents werden verwendet"
  },
  "panels/application/StorageView.ts | storageTitle": {
    "message": "Speicher"
  },
  "panels/application/StorageView.ts | storageUsage": {
    "message": "Speichernutzung"
  },
  "panels/application/StorageView.ts | storageWithCustomMarker": {
    "message": "{PH1} (benutzerdefiniert)"
  },
  "panels/application/StorageView.ts | unregisterServiceWorker": {
    "message": "Service Worker abmelden"
  },
  "panels/application/StorageView.ts | usage": {
    "message": "Nutzung"
  },
  "panels/application/StorageView.ts | webSql": {
    "message": "Web SQL"
  },
  "panels/application/TrustTokensTreeElement.ts | trustTokens": {
    "message": "Private State Tokens"
  },
  "panels/application/application-meta.ts | application": {
    "message": "App"
  },
  "panels/application/application-meta.ts | clearSiteData": {
    "message": "Websitedaten löschen"
  },
  "panels/application/application-meta.ts | clearSiteDataIncludingThirdparty": {
    "message": "Websitedaten löschen (einschließlich Drittanbieter-Cookies)"
  },
  "panels/application/application-meta.ts | pwa": {
    "message": "PWA"
  },
  "panels/application/application-meta.ts | showApplication": {
    "message": "Anwendung anzeigen"
  },
  "panels/application/application-meta.ts | startRecordingEvents": {
    "message": "Ereignisse erfassen"
  },
  "panels/application/application-meta.ts | stopRecordingEvents": {
    "message": "Ereignisaufzeichnung beenden"
  },
  "panels/application/components/BackForwardCacheStrings.ts | CookieFlushed": {
    "message": "Nicht definiert"
  },
  "panels/application/components/BackForwardCacheStrings.ts | HTTPAuthRequired": {
    "message": "Nicht definiert"
  },
  "panels/application/components/BackForwardCacheStrings.ts | HTTPMethodNotGET": {
    "message": "Nur Seiten, die über GET-Anfragen geladen werden, können den Back-Forward-Cache verwenden."
  },
  "panels/application/components/BackForwardCacheStrings.ts | HTTPStatusNotOK": {
    "message": "Nur Seiten mit dem Statuscode 2XX können im Cache gespeichert werden."
  },
  "panels/application/components/BackForwardCacheStrings.ts | JavaScriptExecution": {
    "message": "Chrome hat einen Versuch erkannt, JavaScript auszuführen, während die Seite im Cache gespeichert war."
  },
  "panels/application/components/BackForwardCacheStrings.ts | LiveMediaStreamTrack": {
    "message": "Nicht definiert"
  },
  "panels/application/components/BackForwardCacheStrings.ts | SmartCard": {
    "message": "Nicht definiert"
  },
  "panels/application/components/BackForwardCacheStrings.ts | UnloadHandler": {
    "message": "Nicht definiert"
  },
  "panels/application/components/BackForwardCacheStrings.ts | appBanner": {
    "message": "Seiten, die einen App-Banner angefragt haben, können den Back-Forward-Cache aktuell nicht verwenden."
  },
  "panels/application/components/BackForwardCacheStrings.ts | backForwardCacheDisabled": {
    "message": "Der Back-Forward-Cache wurde durch Flags deaktiviert. Rufe chrome://flags/#back-forward-cache auf, um die Funktion lokal für dieses Gerät zu aktivieren."
  },
  "panels/application/components/BackForwardCacheStrings.ts | backForwardCacheDisabledByCommandLine": {
    "message": "Der Back-Forward-Cache wurde über die Befehlszeile deaktiviert."
  },
  "panels/application/components/BackForwardCacheStrings.ts | backForwardCacheDisabledByLowMemory": {
    "message": "Der Back-Forward-Cache wurde aufgrund fehlenden Arbeitsspeichers deaktiviert."
  },
  "panels/application/components/BackForwardCacheStrings.ts | backForwardCacheDisabledForDelegate": {
    "message": "Der Back-Forward-Cache wird vom Bevollmächtigten nicht unterstützt."
  },
  "panels/application/components/BackForwardCacheStrings.ts | backForwardCacheDisabledForPrerender": {
    "message": "Der Back-Forward-Cache ist für Prerenderer deaktiviert."
  },
  "panels/application/components/BackForwardCacheStrings.ts | broadcastChannel": {
    "message": "Die Seite konnte nicht im Cache gespeichert werden, da sie eine „BroadcastChannel“-Instanz mit registrierten Listenern hat."
  },
  "panels/application/components/BackForwardCacheStrings.ts | cacheControlNoStore": {
    "message": "Seiten mit „cache-control:no-store“ können den Back-Forward-Cache nicht verwenden."
  },
  "panels/application/components/BackForwardCacheStrings.ts | cacheFlushed": {
    "message": "Der Cache wurde absichtlich gelöscht."
  },
  "panels/application/components/BackForwardCacheStrings.ts | cacheLimit": {
    "message": "Die Seite wurde aus dem Cache entfernt, damit eine andere Seite im Cache gespeichert werden kann."
  },
  "panels/application/components/BackForwardCacheStrings.ts | containsPlugins": {
    "message": "Seiten, die Plug-ins enthalten, können den Back-Forward-Cache aktuell nicht verwenden."
  },
  "panels/application/components/BackForwardCacheStrings.ts | contentFileChooser": {
    "message": "Seiten, die die FileChooser API nutzen, können den Back-Forward-Cache nicht verwenden."
  },
  "panels/application/components/BackForwardCacheStrings.ts | contentFileSystemAccess": {
    "message": "Seiten, die die File System Access API nutzen, können den Back-Forward-Cache nicht verwenden."
  },
  "panels/application/components/BackForwardCacheStrings.ts | contentMediaDevicesDispatcherHost": {
    "message": "Seiten, die „Media Device Dispatcher“ nutzen, können den Back-Forward-Cache nicht verwenden."
  },
  "panels/application/components/BackForwardCacheStrings.ts | contentMediaPlay": {
    "message": "Ein Mediaplayer wurde verwendet, als die Seite verlassen wurde."
  },
  "panels/application/components/BackForwardCacheStrings.ts | contentMediaSession": {
    "message": "Seiten, die die MediaSession API verwenden und einen Wiedergabestatus festlegen, können den Back-Forward-Cache nicht verwenden."
  },
  "panels/application/components/BackForwardCacheStrings.ts | contentMediaSessionService": {
    "message": "Seiten, die die MediaSession API verwenden und Aktions-Handler festlegen, können den Back-Forward-Cache aktuell nicht verwenden."
  },
  "panels/application/components/BackForwardCacheStrings.ts | contentScreenReader": {
    "message": "Der Back-Forward-Cache wurde aufgrund des Screenreaders deaktiviert."
  },
  "panels/application/components/BackForwardCacheStrings.ts | contentSecurityHandler": {
    "message": "Seiten, die „SecurityHandler“ nutzen, können den Back-Forward-Cache nicht verwenden."
  },
  "panels/application/components/BackForwardCacheStrings.ts | contentSerial": {
    "message": "Seiten, die die Serial API nutzen, können den Back-Forward-Cache nicht verwenden."
  },
  "panels/application/components/BackForwardCacheStrings.ts | contentWebAuthenticationAPI": {
    "message": "Seiten, die die WebAuthentication API nutzen, können den Back-Forward-Cache nicht verwenden."
  },
  "panels/application/components/BackForwardCacheStrings.ts | contentWebBluetooth": {
    "message": "Seiten, die die WebBluetooth API nutzen, können den Back-Forward-Cache nicht verwenden."
  },
  "panels/application/components/BackForwardCacheStrings.ts | contentWebUSB": {
    "message": "Seiten, die die WebUSB API nutzen, können den Back-Forward-Cache nicht verwenden."
  },
  "panels/application/components/BackForwardCacheStrings.ts | cookieDisabled": {
    "message": "Der Back-Forward-Cache wurde deaktiviert, weil Cookies für eine Seite, bei der Cache-Control: no-store verwendet wird, deaktiviert sind."
  },
  "panels/application/components/BackForwardCacheStrings.ts | dedicatedWorkerOrWorklet": {
    "message": "Seiten, die einen Dedicated Worker oder ein Worklet nutzen, können den Back-Forward-Cache aktuell nicht verwenden."
  },
  "panels/application/components/BackForwardCacheStrings.ts | documentLoaded": {
    "message": "Das Dokument wurde verlassen, bevor es vollständig geladen werden konnte."
  },
  "panels/application/components/BackForwardCacheStrings.ts | embedderAppBannerManager": {
    "message": "Ein App-Banner wurde angezeigt, als die Seite verlassen wurde."
  },
  "panels/application/components/BackForwardCacheStrings.ts | embedderChromePasswordManagerClientBindCredentialManager": {
    "message": "Der Passwortmanager von Chrome wurde angezeigt, als die Seite verlassen wurde."
  },
  "panels/application/components/BackForwardCacheStrings.ts | embedderDomDistillerSelfDeletingRequestDelegate": {
    "message": "Die DOM-Zusammenfassung war in Bearbeitung, als die Seite verlassen wurde."
  },
  "panels/application/components/BackForwardCacheStrings.ts | embedderDomDistillerViewerSource": {
    "message": "DOM Distiller Viewer wurde angezeigt, als die Seite verlassen wurde."
  },
  "panels/application/components/BackForwardCacheStrings.ts | embedderExtensionMessaging": {
    "message": "Der Back-Forward-Cache wurde aufgrund der Nutzung der Messaging API durch Erweiterungen deaktiviert."
  },
  "panels/application/components/BackForwardCacheStrings.ts | embedderExtensionMessagingForOpenPort": {
    "message": "Erweiterungen mit dauerhafter Verbindung müssen diese trennen, bevor sie im Back-Forward-Cache gespeichert werden können."
  },
  "panels/application/components/BackForwardCacheStrings.ts | embedderExtensionSentMessageToCachedFrame": {
    "message": "Erweiterungen mit dauerhafter Verbindung haben versucht, Nachrichten an Frames im Back-Forward-Cache zu senden."
  },
  "panels/application/components/BackForwardCacheStrings.ts | embedderExtensions": {
    "message": "Der Back-Forward-Cache ist aufgrund von Erweiterungen deaktiviert."
  },
  "panels/application/components/BackForwardCacheStrings.ts | embedderModalDialog": {
    "message": "Ein modales Dialogfeld, z. B. für eine erneute Formularübermittlung oder ein HTTP-Authentifizierungspasswort, wurde angezeigt, als die Seite verlassen wurde."
  },
  "panels/application/components/BackForwardCacheStrings.ts | embedderOfflinePage": {
    "message": "Die Offlineseite wurde angezeigt, als die Seite verlassen wurde."
  },
  "panels/application/components/BackForwardCacheStrings.ts | embedderOomInterventionTabHelper": {
    "message": "Die Leiste zum Eingreifen bei unzureichendem Arbeitsspeicher wurde angezeigt, als die Seite verlassen wurde."
  },
  "panels/application/components/BackForwardCacheStrings.ts | embedderPermissionRequestManager": {
    "message": "Berechtigungsanfragen waren in Bearbeitung, als die Seite verlassen wurde."
  },
  "panels/application/components/BackForwardCacheStrings.ts | embedderPopupBlockerTabHelper": {
    "message": "Ein Pop-up-Blocker wurde angezeigt, als die Seite verlassen wurde."
  },
  "panels/application/components/BackForwardCacheStrings.ts | embedderSafeBrowsingThreatDetails": {
    "message": "Safe Browsing-Details wurden angezeigt, als die Seite verlassen wurde."
  },
  "panels/application/components/BackForwardCacheStrings.ts | embedderSafeBrowsingTriggeredPopupBlocker": {
    "message": "Diese Seite wurde von Safe Browsing als irreführend eingestuft. Pop-ups wurden blockiert."
  },
  "panels/application/components/BackForwardCacheStrings.ts | enteredBackForwardCacheBeforeServiceWorkerHostAdded": {
    "message": "Ein Service Worker wurde aktiviert, während die Seite im Back-Forward-Cache gespeichert war."
  },
  "panels/application/components/BackForwardCacheStrings.ts | errorDocument": {
    "message": "Der Back-Forward-Cache wurde aufgrund eines Dokumentfehlers deaktiviert."
  },
  "panels/application/components/BackForwardCacheStrings.ts | fencedFramesEmbedder": {
    "message": "Seiten, für die FencedFrames verwendet wird, können nicht in bfcache gespeichert werden."
  },
  "panels/application/components/BackForwardCacheStrings.ts | foregroundCacheLimit": {
    "message": "Die Seite wurde aus dem Cache entfernt, damit eine andere Seite im Cache gespeichert werden kann."
  },
  "panels/application/components/BackForwardCacheStrings.ts | grantedMediaStreamAccess": {
    "message": "Seiten mit Zugriff auf Medienstreams können den Back-Forward-Cache aktuell nicht verwenden."
  },
  "panels/application/components/BackForwardCacheStrings.ts | haveInnerContents": {
    "message": "Seiten, die Portale nutzen, können den Back-Forward-Cache aktuell nicht verwenden."
  },
  "panels/application/components/BackForwardCacheStrings.ts | idleManager": {
    "message": "Seiten, die „IdleManager“ nutzen, können den Back-Forward-Cache aktuell nicht verwenden."
  },
  "panels/application/components/BackForwardCacheStrings.ts | indexedDBConnection": {
    "message": "Seiten mit einer offenen IndexedDB-Verbindung können den Back-Forward-Cache aktuell nicht verwenden."
  },
  "panels/application/components/BackForwardCacheStrings.ts | indexedDBEvent": {
    "message": "Der Back-Forward-Cache wurde aufgrund eines IndexedDB-Ereignisses deaktiviert."
  },
  "panels/application/components/BackForwardCacheStrings.ts | ineligibleAPI": {
    "message": "Es wurden ungültige APIs verwendet."
  },
  "panels/application/components/BackForwardCacheStrings.ts | injectedJavascript": {
    "message": "Seiten, bei denen durch Erweiterungen JavaScript-Informationen eingeschleust werden, können den Back-Forward-Cache aktuell nicht verwenden."
  },
  "panels/application/components/BackForwardCacheStrings.ts | injectedStyleSheet": {
    "message": "Seiten, bei denen durch Erweiterungen StyleSheet-Informationen eingeschleust werden, können den Back-Forward-Cache momentan nicht verwenden."
  },
  "panels/application/components/BackForwardCacheStrings.ts | internalError": {
    "message": "Interner Fehler."
  },
  "panels/application/components/BackForwardCacheStrings.ts | jsNetworkRequestReceivedCacheControlNoStoreResource": {
    "message": "Der Back-Forward-Cache wurde deaktiviert, weil eine JavaScript-Netzwerkanfrage eine Ressource mit dem Header „Cache-Control: no-store“ erhalten hat."
  },
  "panels/application/components/BackForwardCacheStrings.ts | keepaliveRequest": {
    "message": "Der Back-Forward-Cache wurde aufgrund einer Keepalive-Anfrage deaktiviert."
  },
  "panels/application/components/BackForwardCacheStrings.ts | keyboardLock": {
    "message": "Seiten, die die Tastatursperre nutzen, können den Back-Forward-Cache aktuell nicht verwenden."
  },
  "panels/application/components/BackForwardCacheStrings.ts | loading": {
    "message": "Die Seite wurde verlassen, bevor sie vollständig geladen werden konnte."
  },
  "panels/application/components/BackForwardCacheStrings.ts | mainResourceHasCacheControlNoCache": {
    "message": "Seiten, deren Hauptressource „cache-control:no-cache“ enthalten, können nicht im Back-Forward-Cache gespeichert werden."
  },
  "panels/application/components/BackForwardCacheStrings.ts | mainResourceHasCacheControlNoStore": {
    "message": "Seiten, deren Hauptressource „cache-control:no-store“ enthalten, können nicht im Back-Forward-Cache gespeichert werden."
  },
  "panels/application/components/BackForwardCacheStrings.ts | navigationCancelledWhileRestoring": {
    "message": "Die Navigation wurde abgebrochen, bevor die Seite aus dem Back-Forward-Cache wiederhergestellt werden konnte."
  },
  "panels/application/components/BackForwardCacheStrings.ts | networkExceedsBufferLimit": {
    "message": "Diese Seite wurde aus dem Cache entfernt, weil eine aktive Netzwerkverbindung zu viele Daten empfangen hat. Chrome schränkt die Menge der Daten ein, die eine Seite empfangen darf, während sie im Cache gespeichert ist."
  },
  "panels/application/components/BackForwardCacheStrings.ts | networkRequestDatapipeDrainedAsBytesConsumer": {
    "message": "Seiten mit einer laufenden fetch()- oder XHR-Anfrage können den Back-Forward-Cache aktuell nicht verwenden."
  },
  "panels/application/components/BackForwardCacheStrings.ts | networkRequestRedirected": {
    "message": "Die Seite wurde aus dem Back-Forward-Cache entfernt, weil eine aktive Netzwerkanfrage eine Weiterleitung enthielt."
  },
  "panels/application/components/BackForwardCacheStrings.ts | networkRequestTimeout": {
    "message": "Die Seite wurde aus dem Cache entfernt, weil die Netzwerkverbindung zu lange offen war. Chrome schränkt ein, wie lange die Seite Daten empfangen darf, während sie im Cache gespeichert ist."
  },
  "panels/application/components/BackForwardCacheStrings.ts | noResponseHead": {
    "message": "Seiten ohne gültigen Antwortheader können nicht im Back-Forward-Cache gespeichert werden."
  },
  "panels/application/components/BackForwardCacheStrings.ts | notMainFrame": {
    "message": "Außerhalb des Hauptframes ist eine Navigation aufgetreten."
  },
  "panels/application/components/BackForwardCacheStrings.ts | outstandingIndexedDBTransaction": {
    "message": "Seiten mit laufenden indexierten DB-Transaktionen, können den Back-Forward-Cache aktuell nicht verwenden."
  },
  "panels/application/components/BackForwardCacheStrings.ts | outstandingNetworkRequestDirectSocket": {
    "message": "Seiten mit einer laufenden Netzwerkanfrage können den Back-Forward-Cache aktuell nicht verwenden."
  },
  "panels/application/components/BackForwardCacheStrings.ts | outstandingNetworkRequestFetch": {
    "message": "Seiten mit einer laufenden Netzwerkabrufanfrage können den Back-Forward-Cache aktuell nicht verwenden."
  },
  "panels/application/components/BackForwardCacheStrings.ts | outstandingNetworkRequestOthers": {
    "message": "Seiten mit einer laufenden Netzwerkanfrage können den Back-Forward-Cache aktuell nicht verwenden."
  },
  "panels/application/components/BackForwardCacheStrings.ts | outstandingNetworkRequestXHR": {
    "message": "Seiten mit einer laufenden XHR-Netzwerkanfrage können den Back-Forward-Cache aktuell nicht verwenden."
  },
  "panels/application/components/BackForwardCacheStrings.ts | paymentManager": {
    "message": "Seiten, die „PaymentManager“ nutzen, können den Back-Forward-Cache aktuell nicht verwenden."
  },
  "panels/application/components/BackForwardCacheStrings.ts | pictureInPicture": {
    "message": "Seiten, die „Bild im Bild“ nutzen, können den Back-Forward-Cache aktuell nicht verwenden."
  },
  "panels/application/components/BackForwardCacheStrings.ts | portal": {
    "message": "Seiten, die Portale nutzen, können den Back-Forward-Cache aktuell nicht verwenden."
  },
  "panels/application/components/BackForwardCacheStrings.ts | printing": {
    "message": "Seiten, die die Benutzeroberfläche zum Drucken anzeigen, können den Back-Forward-Cache aktuell nicht verwenden."
  },
  "panels/application/components/BackForwardCacheStrings.ts | relatedActiveContentsExist": {
    "message": "Die Seite wurde mithilfe von window.open() geöffnet und ein anderer Tab verweist darauf oder die Seite wurde in einem Fenster geöffnet."
  },
  "panels/application/components/BackForwardCacheStrings.ts | rendererProcessCrashed": {
    "message": "Der Renderingvorgang für die Seite im Back-Forward-Cache ist abgestürzt."
  },
  "panels/application/components/BackForwardCacheStrings.ts | rendererProcessKilled": {
    "message": "Der Renderingvorgang für die Seite im Back-Forward-Cache wurde beendet."
  },
  "panels/application/components/BackForwardCacheStrings.ts | requestedAudioCapturePermission": {
    "message": "Seiten, die Berechtigungen zur Audioaufnahme angefragt haben, können den Back-Forward-Cache aktuell nicht verwenden."
  },
  "panels/application/components/BackForwardCacheStrings.ts | requestedBackForwardCacheBlockedSensors": {
    "message": "Seiten, die Sensor-Berechtigungen angefragt haben, können den Back-Forward-Cache aktuell nicht verwenden."
  },
  "panels/application/components/BackForwardCacheStrings.ts | requestedBackgroundWorkPermission": {
    "message": "Seiten, die Berechtigungen für die Hintergrundsynchronisierung oder den Hintergrundabruf angefragt haben, können den Back-Forward-Cache aktuell nicht verwenden."
  },
  "panels/application/components/BackForwardCacheStrings.ts | requestedMIDIPermission": {
    "message": "Seiten, die MIDI-Berechtigungen angefragt haben, können den Back-Forward-Cache aktuell nicht verwenden."
  },
  "panels/application/components/BackForwardCacheStrings.ts | requestedNotificationsPermission": {
    "message": "Seiten, die Benachrichtigungsberechtigungen angefragt haben, können den Back-Forward-Cache aktuell nicht verwenden."
  },
  "panels/application/components/BackForwardCacheStrings.ts | requestedStorageAccessGrant": {
    "message": "Seiten, die Speicherzugriff angefragt haben, können den Back-Forward-Cache aktuell nicht verwenden."
  },
  "panels/application/components/BackForwardCacheStrings.ts | requestedVideoCapturePermission": {
    "message": "Seiten, die Berechtigungen zur Videoaufnahme angefragt haben, können den Back-Forward-Cache aktuell nicht verwenden."
  },
  "panels/application/components/BackForwardCacheStrings.ts | schemeNotHTTPOrHTTPS": {
    "message": "Nur Seiten mit dem URL-Schema „HTTP/HTTPS“ können im Cache gespeichert werden."
  },
  "panels/application/components/BackForwardCacheStrings.ts | serviceWorkerClaim": {
    "message": "Die Seite wurde von einem Service Worker beansprucht, während sie im Back-Forward-Cache gespeichert war."
  },
  "panels/application/components/BackForwardCacheStrings.ts | serviceWorkerPostMessage": {
    "message": "Ein Service Worker hat versucht, MessageEvent an die Seite im Back-Forward-Cache zu senden."
  },
  "panels/application/components/BackForwardCacheStrings.ts | serviceWorkerUnregistration": {
    "message": "Die Funktion „ServiceWorkers“ war abgemeldet, während die Seite im Back-Forward-Cache gespeichert war."
  },
  "panels/application/components/BackForwardCacheStrings.ts | serviceWorkerVersionActivation": {
    "message": "Die Seite wurde aufgrund einer Aktivierung durch einen Service Worker aus dem Back-Forward-Cache entfernt."
  },
  "panels/application/components/BackForwardCacheStrings.ts | sessionRestored": {
    "message": "Chrome wurde neu gestartet und hat die Einträge im Back-Forward-Cache gelöscht."
  },
  "panels/application/components/BackForwardCacheStrings.ts | sharedWorker": {
    "message": "Seiten, die „SharedWorker“ nutzen, können den Back-Forward-Cache aktuell nicht verwenden."
  },
  "panels/application/components/BackForwardCacheStrings.ts | speechRecognizer": {
    "message": "Seiten, die „SpeechRecognizer“ nutzen, können den Back-Forward-Cache aktuell nicht verwenden."
  },
  "panels/application/components/BackForwardCacheStrings.ts | speechSynthesis": {
    "message": "Seiten, die „SpeechSynthesis“ nutzen, können den Back-Forward-Cache aktuell nicht verwenden."
  },
  "panels/application/components/BackForwardCacheStrings.ts | subframeIsNavigating": {
    "message": "Ein iFrame auf der Seite hat eine Navigation gestartet, die nicht abgeschlossen wurde."
  },
  "panels/application/components/BackForwardCacheStrings.ts | subresourceHasCacheControlNoCache": {
    "message": "Seiten, deren Unterressource „cache-control:no-cache“ enthalten, können nicht im Back-Forward-Cache gespeichert werden."
  },
  "panels/application/components/BackForwardCacheStrings.ts | subresourceHasCacheControlNoStore": {
    "message": "Seiten, deren Unterressource „cache-control:no-store“ enthalten, können nicht im Back-Forward-Cache gespeichert werden."
  },
  "panels/application/components/BackForwardCacheStrings.ts | timeout": {
    "message": "Die Seite hat die maximale Speicherdauer für den Back-Forward-Cache überschritten und ist abgelaufen."
  },
  "panels/application/components/BackForwardCacheStrings.ts | timeoutPuttingInCache": {
    "message": "Beim Speichern der Seite im Back-Forward-Cache ist eine Zeitüberschreitung aufgetreten (vermutlich, weil Pagehide-Handler zu lange ausgeführt wurden)."
  },
  "panels/application/components/BackForwardCacheStrings.ts | unloadHandlerExistsInMainFrame": {
    "message": "Im Hauptframe dieser Seite befindet sich ein Unload-Handler."
  },
  "panels/application/components/BackForwardCacheStrings.ts | unloadHandlerExistsInSubFrame": {
    "message": "Im Subframe dieser Seite befindet sich ein Unload-Handler."
  },
  "panels/application/components/BackForwardCacheStrings.ts | userAgentOverrideDiffers": {
    "message": "Der Browser hat den Überschreibungs-Header für den User-Agent geändert."
  },
  "panels/application/components/BackForwardCacheStrings.ts | wasGrantedMediaAccess": {
    "message": "Seiten mit der Berechtigung zum Aufnehmen von Videos oder Audio können den Back-Forward-Cache aktuell nicht verwenden."
  },
  "panels/application/components/BackForwardCacheStrings.ts | webDatabase": {
    "message": "Seiten, die „WebDatabase“ nutzen, können den Back-Forward-Cache aktuell nicht verwenden."
  },
  "panels/application/components/BackForwardCacheStrings.ts | webHID": {
    "message": "Seiten, die „WebHID“ nutzen, können den Back-Forward-Cache aktuell nicht verwenden."
  },
  "panels/application/components/BackForwardCacheStrings.ts | webLocks": {
    "message": "Seiten, die „WebLocks“ nutzen, können den Back-Forward-Cache aktuell nicht verwenden."
  },
  "panels/application/components/BackForwardCacheStrings.ts | webNfc": {
    "message": "Seiten, die „WebNfc“ nutzen, können den Back-Forward-Cache aktuell nicht verwenden."
  },
  "panels/application/components/BackForwardCacheStrings.ts | webOTPService": {
    "message": "Seiten, die „WebOTPService“ nutzen, können den Back-Forward-Cache aktuell nicht verwenden."
  },
  "panels/application/components/BackForwardCacheStrings.ts | webRTC": {
    "message": "Seiten mit WebRTC können den Back-Forward-Cache nicht verwenden."
  },
  "panels/application/components/BackForwardCacheStrings.ts | webRTCSticky": {
    "message": "Der Back-Forward-Cache ist deaktiviert, weil WebRTC verwendet wurde."
  },
  "panels/application/components/BackForwardCacheStrings.ts | webShare": {
    "message": "Seiten, die „WebShare“ nutzen, können den Back-Forward-Cache aktuell nicht verwenden."
  },
  "panels/application/components/BackForwardCacheStrings.ts | webSocket": {
    "message": "Seiten mit „WebSocket“ können den Back-Forward-Cache nicht verwenden."
  },
  "panels/application/components/BackForwardCacheStrings.ts | webSocketSticky": {
    "message": "Der Back-Forward-Cache ist deaktiviert, weil WebSocket verwendet wurde."
  },
  "panels/application/components/BackForwardCacheStrings.ts | webTransport": {
    "message": "Seiten mit „WebSocket“ können den Back-Forward-Cache nicht verwenden."
  },
  "panels/application/components/BackForwardCacheStrings.ts | webTransportSticky": {
    "message": "Der Back-Forward-Cache ist deaktiviert, weil WebTransport verwendet wurde."
  },
  "panels/application/components/BackForwardCacheStrings.ts | webXR": {
    "message": "Seiten, die „WebXR“ nutzen, können den Back-Forward-Cache aktuell nicht verwenden."
  },
  "panels/application/components/BackForwardCacheView.ts | backForwardCacheTitle": {
    "message": "Back-Forward-Cache"
  },
  "panels/application/components/BackForwardCacheView.ts | blankURLTitle": {
    "message": "Keine URL [{PH1}]"
  },
  "panels/application/components/BackForwardCacheView.ts | blockingExtensionId": {
    "message": "Erweiterungs-ID: "
  },
  "panels/application/components/BackForwardCacheView.ts | circumstantial": {
    "message": "Nicht umsetzbar"
  },
  "panels/application/components/BackForwardCacheView.ts | circumstantialExplanation": {
    "message": "Du kannst keine Maßnahmen ergreifen, um diese Probleme zu lösen, da das Caching durch etwas verhindert wurde, das außerhalb des direkten Einflussbereichs der Seite liegt."
  },
  "panels/application/components/BackForwardCacheView.ts | filesPerIssue": {
    "message": "{n,plural, =1{# Datei}other{# Dateien}}"
  },
  "panels/application/components/BackForwardCacheView.ts | framesPerIssue": {
    "message": "{n,plural, =1{# Frame}other{# Frames}}"
  },
  "panels/application/components/BackForwardCacheView.ts | framesTitle": {
    "message": "Frames"
  },
  "panels/application/components/BackForwardCacheView.ts | issuesInMultipleFrames": {
    "message": "{n,plural, =1{# Problem in {m} Frames gefunden.}other{# Probleme in {m} Frames gefunden.}}"
  },
  "panels/application/components/BackForwardCacheView.ts | issuesInSingleFrame": {
    "message": "{n,plural, =1{# Problem in 1 Frame gefunden.}other{# Probleme in 1 Frame gefunden.}}"
  },
  "panels/application/components/BackForwardCacheView.ts | learnMore": {
    "message": "Weitere Informationen: Voraussetzungen für die Verwendung des Back-Forward-Cache"
  },
  "panels/application/components/BackForwardCacheView.ts | mainFrame": {
    "message": "Hauptframe"
  },
  "panels/application/components/BackForwardCacheView.ts | neverUseUnload": {
    "message": "Weitere Informationen: Nie den Unload-Handler verwenden"
  },
  "panels/application/components/BackForwardCacheView.ts | normalNavigation": {
    "message": "Nicht aus dem Back-Forward-Cache geladen: Um die Seite automatisch zu verlassen und zu ihr zurückzukehren, verwende die Schaltflächen „Zurück“ und „Weiter“ in Chrome oder die Testschaltfläche unten."
  },
  "panels/application/components/BackForwardCacheView.ts | pageSupportNeeded": {
    "message": "Umsetzbar"
  },
  "panels/application/components/BackForwardCacheView.ts | pageSupportNeededExplanation": {
    "message": "Du kannst Maßnahmen ergreifen, um diese Probleme zu lösen und dafür zu sorgen, dass die Seite den Back-Forward-Cache verwenden kann."
  },
  "panels/application/components/BackForwardCacheView.ts | restoredFromBFCache": {
    "message": "Erfolgreich aus dem Back-Forward-Cache geladen."
  },
  "panels/application/components/BackForwardCacheView.ts | runTest": {
    "message": "Back-Forward-Cache testen"
  },
  "panels/application/components/BackForwardCacheView.ts | runningTest": {
    "message": "Test wird ausgeführt"
  },
  "panels/application/components/BackForwardCacheView.ts | supportPending": {
    "message": "Noch kein Support"
  },
  "panels/application/components/BackForwardCacheView.ts | supportPendingExplanation": {
    "message": "Für diese Problemursachen wird zukünftig eine entsprechende Chrome-Unterstützung eingeführt – das bedeutet, dass die Seite in einer zukünftigen Chrome-Version nicht mehr hierdurch daran gehindert wird, den Back-Forward-Cache zu verwenden."
  },
  "panels/application/components/BackForwardCacheView.ts | unavailable": {
    "message": "nicht verfügbar"
  },
  "panels/application/components/BackForwardCacheView.ts | unknown": {
    "message": "Unbekannter Status"
  },
  "panels/application/components/BackForwardCacheView.ts | url": {
    "message": "URL:"
  },
  "panels/application/components/BounceTrackingMitigationsView.ts | bounceTrackingMitigationsTitle": {
    "message": "Eindämmung von Bounce-Tracking"
  },
  "panels/application/components/BounceTrackingMitigationsView.ts | checkingPotentialTrackers": {
    "message": "Suche nach potenziellen Bounce-Tracking-Websites läuft."
  },
  "panels/application/components/BounceTrackingMitigationsView.ts | featureDisabled": {
    "message": "Die Eindämmung von Bounce-Tracking ist deaktiviert. Wenn du sie aktivieren möchtest, setze das Flag bei „{PH1}“ auf „Mit Löschung aktiviert“."
  },
  "panels/application/components/BounceTrackingMitigationsView.ts | featureFlag": {
    "message": "Funktions-Flag für Eindämmung von Bounce-Tracking"
  },
  "panels/application/components/BounceTrackingMitigationsView.ts | forceRun": {
    "message": "Ausführung erzwingen"
  },
  "panels/application/components/BounceTrackingMitigationsView.ts | learnMore": {
    "message": "Weitere Informationen: Eindämmen von Bounce-Tracking"
  },
  "panels/application/components/BounceTrackingMitigationsView.ts | noPotentialBounceTrackersIdentified": {
    "message": "Der Status wurde wegen potenzieller Bounce-Tracking-Websites nicht gelöscht. Entweder wurden keine erkannt oder Drittanbieter-Cookies werden nicht blockiert."
  },
  "panels/application/components/BounceTrackingMitigationsView.ts | runningMitigations": {
    "message": "Werden ausgeführt"
  },
  "panels/application/components/BounceTrackingMitigationsView.ts | stateDeletedFor": {
    "message": "Der Status wurde für folgende Websites gelöscht:"
  },
  "panels/application/components/EndpointsGrid.ts | noEndpointsToDisplay": {
    "message": "Keine Endpunkte vorhanden"
  },
  "panels/application/components/FrameDetailsView.ts | aFrameAncestorIsAnInsecure": {
    "message": "Ein Frame Ancestor ist ein unsicherer Kontext"
  },
  "panels/application/components/FrameDetailsView.ts | adStatus": {
    "message": "Anzeigenstatus"
  },
  "panels/application/components/FrameDetailsView.ts | additionalInformation": {
    "message": "Weitere Informationen"
  },
  "panels/application/components/FrameDetailsView.ts | apiAvailability": {
    "message": "API-Verfügbarkeit"
  },
  "panels/application/components/FrameDetailsView.ts | availabilityOfCertainApisDepends": {
    "message": "Die Verfügbarkeit bestimmter APIs hängt davon ab, ob das Dokument ursprungsübergreifend isoliert ist."
  },
  "panels/application/components/FrameDetailsView.ts | available": {
    "message": "Verfügbar"
  },
  "panels/application/components/FrameDetailsView.ts | availableNotTransferable": {
    "message": "verfügbar, nicht übertragbar"
  },
  "panels/application/components/FrameDetailsView.ts | availableTransferable": {
    "message": "verfügbar, übertragbar"
  },
  "panels/application/components/FrameDetailsView.ts | child": {
    "message": "Untergeordnet"
  },
  "panels/application/components/FrameDetailsView.ts | childDescription": {
    "message": "Dieser Frame wurde als untergeordneter Frame einer Werbeanzeige erkannt"
  },
  "panels/application/components/FrameDetailsView.ts | clickToRevealInElementsPanel": {
    "message": "Zum Anzeigen im Elementbereich klicken"
  },
  "panels/application/components/FrameDetailsView.ts | clickToRevealInNetworkPanel": {
    "message": "Zum Anzeigen im Netzwerkbereich klicken"
  },
  "panels/application/components/FrameDetailsView.ts | clickToRevealInNetworkPanelMight": {
    "message": "Zum Anzeigen im Netzwerkbereich klicken (Seitenaktualisierung ist möglicherweise erforderlich)"
  },
  "panels/application/components/FrameDetailsView.ts | clickToRevealInSourcesPanel": {
    "message": "Zum Anzeigen im Quellenbereich klicken"
  },
  "panels/application/components/FrameDetailsView.ts | contentSecurityPolicy": {
    "message": "Content Security Policy (CSP)"
  },
  "panels/application/components/FrameDetailsView.ts | createdByAdScriptExplanation": {
    "message": "Im (async) stack war ein Anzeigenskript vorhanden, als dieser Frame erstellt wurde. Eine Prüfung des stack trace für die Erstellung dieses Frames kann möglicherweise mehr Informationen liefern."
  },
  "panels/application/components/FrameDetailsView.ts | creationStackTrace": {
    "message": "Frame-Erstellung: Stack Trace"
  },
  "panels/application/components/FrameDetailsView.ts | creationStackTraceExplanation": {
    "message": "Dieser Frame wurde programmatisch erstellt. stack trace zeigt, wo er im Code erstellt wurde."
  },
  "panels/application/components/FrameDetailsView.ts | creatorAdScript": {
    "message": "Script für Anzeigenerstellung"
  },
  "panels/application/components/FrameDetailsView.ts | crossoriginIsolated": {
    "message": "Ursprungsübergreifend isoliert"
  },
  "panels/application/components/FrameDetailsView.ts | document": {
    "message": "Dokument"
  },
  "panels/application/components/FrameDetailsView.ts | frameId": {
    "message": "Frame-ID"
  },
  "panels/application/components/FrameDetailsView.ts | learnMore": {
    "message": "Weitere Informationen"
  },
  "panels/application/components/FrameDetailsView.ts | localhostIsAlwaysASecureContext": {
    "message": "Localhost ist immer ein sicherer Kontext"
  },
  "panels/application/components/FrameDetailsView.ts | matchedBlockingRuleExplanation": {
    "message": "Dieser Frame wird als Anzeigen-Frame betrachtet, da das aktuelle (oder vorherige) Hauptdokument eine Anzeigenressource ist."
  },
  "panels/application/components/FrameDetailsView.ts | measureMemory": {
    "message": "Arbeitsspeicher messen"
  },
  "panels/application/components/FrameDetailsView.ts | no": {
    "message": "Nein"
  },
  "panels/application/components/FrameDetailsView.ts | none": {
    "message": "Kein Wert"
  },
  "panels/application/components/FrameDetailsView.ts | origin": {
    "message": "Ursprung"
  },
  "panels/application/components/FrameDetailsView.ts | originTrialsExplanation": {
    "message": "Mit Ursprungstests erhältst du Zugriff auf eine neue oder experimentelle Funktion."
  },
  "panels/application/components/FrameDetailsView.ts | ownerElement": {
    "message": "Inhaber-Element"
  },
  "panels/application/components/FrameDetailsView.ts | parentIsAdExplanation": {
    "message": "Dieser Frame wird als Anzeigen-Frame betrachtet, da der übergeordnete Frame ein Anzeigen-Frame ist."
  },
  "panels/application/components/FrameDetailsView.ts | reportingTo": {
    "message": "melden an"
  },
  "panels/application/components/FrameDetailsView.ts | requiresCrossoriginIsolated": {
    "message": "erfordert ursprungsübergreifend isolierten Kontext"
  },
  "panels/application/components/FrameDetailsView.ts | root": {
    "message": "root"
  },
  "panels/application/components/FrameDetailsView.ts | rootDescription": {
    "message": "Dieser Frame wurde als Root-Frame einer Werbeanzeige erkannt"
  },
  "panels/application/components/FrameDetailsView.ts | secureContext": {
    "message": "Sicherer Kontext"
  },
  "panels/application/components/FrameDetailsView.ts | securityIsolation": {
    "message": "Sicherheit und Isolation"
  },
  "panels/application/components/FrameDetailsView.ts | sharedarraybufferConstructorIs": {
    "message": "SharedArrayBuffer-Konstruktor ist verfügbar und SABs können via postMessage übertragen werden"
  },
  "panels/application/components/FrameDetailsView.ts | sharedarraybufferConstructorIsAvailable": {
    "message": "SharedArrayBuffer-Konstruktor ist verfügbar, aber SABs können nicht via postMessage übertragen werden"
  },
  "panels/application/components/FrameDetailsView.ts | theFramesSchemeIsInsecure": {
    "message": "Das Schema des Frames ist unsicher"
  },
  "panels/application/components/FrameDetailsView.ts | thePerformanceAPI": {
    "message": "Die performance.measureUserAgentSpecificMemory() API ist verfügbar"
  },
  "panels/application/components/FrameDetailsView.ts | thePerformancemeasureuseragentspecificmemory": {
    "message": "Die performance.measureUserAgentSpecificMemory() API ist nicht verfügbar"
  },
  "panels/application/components/FrameDetailsView.ts | thisAdditionalDebugging": {
    "message": "Diese zusätzlichen (Debugging-)Informationen werden angezeigt, weil der Test „Protokollmonitor“ aktiviert ist."
  },
  "panels/application/components/FrameDetailsView.ts | transferRequiresCrossoriginIsolatedPermission": {
    "message": "Für die „SharedArrayBuffer“-Übertragung muss die Berechtigungsrichtlinie aktiviert werden:"
  },
  "panels/application/components/FrameDetailsView.ts | unavailable": {
    "message": "nicht verfügbar"
  },
  "panels/application/components/FrameDetailsView.ts | unreachableUrl": {
    "message": "Nicht erreichbare URL"
  },
  "panels/application/components/FrameDetailsView.ts | url": {
    "message": "URL"
  },
  "panels/application/components/FrameDetailsView.ts | willRequireCrossoriginIsolated": {
    "message": "⚠️ erfordert zukünftig ursprungsübergreifend isolierten Kontext"
  },
  "panels/application/components/FrameDetailsView.ts | yes": {
    "message": "Ja"
  },
  "panels/application/components/InterestGroupAccessGrid.ts | allInterestGroupStorageEvents": {
    "message": "Alle Interessengruppen-Speicherereignisse."
  },
  "panels/application/components/InterestGroupAccessGrid.ts | eventTime": {
    "message": "Ereignisdauer"
  },
  "panels/application/components/InterestGroupAccessGrid.ts | eventType": {
    "message": "Zugriffstyp"
  },
  "panels/application/components/InterestGroupAccessGrid.ts | groupName": {
    "message": "Name"
  },
  "panels/application/components/InterestGroupAccessGrid.ts | groupOwner": {
    "message": "Inhaber"
  },
  "panels/application/components/InterestGroupAccessGrid.ts | noEvents": {
    "message": "Keine Interessengruppen-Ereignisse aufgezeichnet."
  },
  "panels/application/components/OriginTrialTreeView.ts | expiryTime": {
    "message": "Ablaufzeit"
  },
  "panels/application/components/OriginTrialTreeView.ts | isThirdParty": {
    "message": "Drittanbieter"
  },
  "panels/application/components/OriginTrialTreeView.ts | matchSubDomains": {
    "message": "Subdomain-Übereinstimmung"
  },
  "panels/application/components/OriginTrialTreeView.ts | noTrialTokens": {
    "message": "Keine Testtokens"
  },
  "panels/application/components/OriginTrialTreeView.ts | origin": {
    "message": "Ursprung"
  },
  "panels/application/components/OriginTrialTreeView.ts | rawTokenText": {
    "message": "Rohtoken"
  },
  "panels/application/components/OriginTrialTreeView.ts | status": {
    "message": "Token-Status"
  },
  "panels/application/components/OriginTrialTreeView.ts | token": {
    "message": "Token"
  },
  "panels/application/components/OriginTrialTreeView.ts | tokens": {
    "message": "{PH1} Tokens"
  },
  "panels/application/components/OriginTrialTreeView.ts | trialName": {
    "message": "Testname"
  },
  "panels/application/components/OriginTrialTreeView.ts | usageRestriction": {
    "message": "Nutzungseinschränkungen"
  },
  "panels/application/components/PermissionsPolicySection.ts | allowedFeatures": {
    "message": "Zulässige Funktionen"
  },
  "panels/application/components/PermissionsPolicySection.ts | clickToShowHeader": {
    "message": "Klicke, um die Anfrage aufzurufen, deren HTTP-Header „Permissions-Policy“ diese Funktion deaktiviert."
  },
  "panels/application/components/PermissionsPolicySection.ts | clickToShowIframe": {
    "message": "Klicke, um das oberste iFrame aufzurufen, das diese Funktion im Elementbereich nicht zulässt."
  },
  "panels/application/components/PermissionsPolicySection.ts | disabledByFencedFrame": {
    "message": "innerhalb von „fencedframe“ deaktiviert"
  },
  "panels/application/components/PermissionsPolicySection.ts | disabledByHeader": {
    "message": "durch den Header „Permissions-Policy“ deaktiviert"
  },
  "panels/application/components/PermissionsPolicySection.ts | disabledByIframe": {
    "message": "fehlt im iFrame-Attribut „allow“"
  },
  "panels/application/components/PermissionsPolicySection.ts | disabledFeatures": {
    "message": "Deaktivierte Funktionen"
  },
  "panels/application/components/PermissionsPolicySection.ts | hideDetails": {
    "message": "Details ausblenden"
  },
  "panels/application/components/PermissionsPolicySection.ts | showDetails": {
    "message": "Mehr anzeigen"
  },
  "panels/application/components/ProtocolHandlersView.ts | dropdownLabel": {
    "message": "Protokoll-Handler auswählen"
  },
  "panels/application/components/ProtocolHandlersView.ts | manifest": {
    "message": "Manifest"
  },
  "panels/application/components/ProtocolHandlersView.ts | needHelpReadOur": {
    "message": "Brauchst du Hilfe? Weitere Informationen findest du hier: {PH1}."
  },
  "panels/application/components/ProtocolHandlersView.ts | protocolDetected": {
    "message": "In {PH1} wurde eine gültige Protokoll-Handler-Registrierung gefunden. Installiere die App und teste die registrierten Protokolle."
  },
  "panels/application/components/ProtocolHandlersView.ts | protocolHandlerRegistrations": {
    "message": "Registrierung der URL-Protokoll-Handler für PWAs"
  },
  "panels/application/components/ProtocolHandlersView.ts | protocolNotDetected": {
    "message": "Definiere Protokoll-Handler in {PH1}, um deine App als Handler für benutzerdefinierte Protokolle zu registrieren, wenn deine App installiert wird."
  },
  "panels/application/components/ProtocolHandlersView.ts | testProtocol": {
    "message": "Protokoll testen"
  },
  "panels/application/components/ProtocolHandlersView.ts | textboxLabel": {
    "message": "Abfrageparameter oder Endpunkt für Protokoll-Handler"
  },
  "panels/application/components/ProtocolHandlersView.ts | textboxPlaceholder": {
    "message": "URL eingeben"
  },
  "panels/application/components/ReportsGrid.ts | destination": {
    "message": "Ziel"
  },
  "panels/application/components/ReportsGrid.ts | generatedAt": {
    "message": "Generiert um"
  },
  "panels/application/components/ReportsGrid.ts | noReportsToDisplay": {
    "message": "Keine Berichte vorhanden"
  },
  "panels/application/components/ReportsGrid.ts | status": {
    "message": "Status"
  },
  "panels/application/components/SharedStorageAccessGrid.ts | allSharedStorageEvents": {
    "message": "Alle Ereignisse bezüglich des freigegebenen Speichers für diese Seite."
  },
  "panels/application/components/SharedStorageAccessGrid.ts | eventParams": {
    "message": "Optionale Ereignisparameter"
  },
  "panels/application/components/SharedStorageAccessGrid.ts | eventTime": {
    "message": "Ereignisdauer"
  },
  "panels/application/components/SharedStorageAccessGrid.ts | eventType": {
    "message": "Zugriffstyp"
  },
  "panels/application/components/SharedStorageAccessGrid.ts | mainFrameId": {
    "message": "Haupt-Frame-ID"
  },
  "panels/application/components/SharedStorageAccessGrid.ts | noEvents": {
    "message": "Keine Ereignisse bezüglich des freigegebenen Speichers aufgezeichnet."
  },
  "panels/application/components/SharedStorageAccessGrid.ts | ownerOrigin": {
    "message": "Ursprung des Inhabers"
  },
  "panels/application/components/SharedStorageAccessGrid.ts | sharedStorage": {
    "message": "Shared Storage"
  },
  "panels/application/components/SharedStorageMetadataView.ts | budgetExplanation": {
    "message": "Verbleibendes zulässiges Datenleck über 24 Stunden für diesen Ursprung in Entropiebits"
  },
  "panels/application/components/SharedStorageMetadataView.ts | creation": {
    "message": "Erstellungszeit"
  },
  "panels/application/components/SharedStorageMetadataView.ts | entropyBudget": {
    "message": "Entropiebudget für Fenced Frames"
  },
  "panels/application/components/SharedStorageMetadataView.ts | notYetCreated": {
    "message": "Noch nicht erstellt"
  },
  "panels/application/components/SharedStorageMetadataView.ts | numEntries": {
    "message": "Anzahl der Einträge"
  },
  "panels/application/components/SharedStorageMetadataView.ts | resetBudget": {
    "message": "Budget zurücksetzen"
  },
  "panels/application/components/SharedStorageMetadataView.ts | sharedStorage": {
    "message": "Shared storage"
  },
  "panels/application/components/StackTrace.ts | cannotRenderStackTrace": {
    "message": "Stacktrace kann nicht gerendert werden"
  },
  "panels/application/components/StackTrace.ts | creationStackTrace": {
    "message": "Frame-Erstellung: Stack Trace"
  },
  "panels/application/components/StackTrace.ts | showLess": {
    "message": "Weniger anzeigen"
  },
  "panels/application/components/StackTrace.ts | showSMoreFrames": {
    "message": "{n,plural, =1{# weiteren Frame anzeigen}other{# weitere Frames anzeigen}}"
  },
  "panels/application/components/StorageMetadataView.ts | bucketName": {
    "message": "Bucket-Name"
  },
  "panels/application/components/StorageMetadataView.ts | confirmBucketDeletion": {
    "message": "Bucket „{PH1}“ löschen?"
  },
  "panels/application/components/StorageMetadataView.ts | defaultBucket": {
    "message": "Standard-Bucket"
  },
  "panels/application/components/StorageMetadataView.ts | deleteBucket": {
    "message": "Bucket löschen"
  },
  "panels/application/components/StorageMetadataView.ts | durability": {
    "message": "Langlebigkeit"
  },
  "panels/application/components/StorageMetadataView.ts | expiration": {
    "message": "Ablaufdatum"
  },
  "panels/application/components/StorageMetadataView.ts | isOpaque": {
    "message": "Ist opak"
  },
  "panels/application/components/StorageMetadataView.ts | isThirdParty": {
    "message": "Ist Drittanbieter"
  },
  "panels/application/components/StorageMetadataView.ts | loading": {
    "message": "Wird geladen…"
  },
  "panels/application/components/StorageMetadataView.ts | no": {
    "message": "Nein"
  },
  "panels/application/components/StorageMetadataView.ts | none": {
    "message": "Keiner"
  },
  "panels/application/components/StorageMetadataView.ts | opaque": {
    "message": "(opak)"
  },
  "panels/application/components/StorageMetadataView.ts | origin": {
    "message": "Ursprung"
  },
  "panels/application/components/StorageMetadataView.ts | persistent": {
    "message": "Ist dauerhaft"
  },
  "panels/application/components/StorageMetadataView.ts | quota": {
    "message": "Kontingent"
  },
  "panels/application/components/StorageMetadataView.ts | topLevelSite": {
    "message": "Website der obersten Ebene"
  },
  "panels/application/components/StorageMetadataView.ts | yes": {
    "message": "Ja"
  },
  "panels/application/components/StorageMetadataView.ts | yesBecauseAncestorChainHasCrossSite": {
    "message": "Ja, weil die Ancestor-Kette einen Drittanbieterursprung enthält"
  },
  "panels/application/components/StorageMetadataView.ts | yesBecauseKeyIsOpaque": {
    "message": "Ja, weil der Speicherschlüssel opak ist"
  },
  "panels/application/components/StorageMetadataView.ts | yesBecauseOriginNotInTopLevelSite": {
    "message": "Ja, weil der Ursprung außerhalb der Website der obersten Ebene liegt"
  },
  "panels/application/components/StorageMetadataView.ts | yesBecauseTopLevelIsOpaque": {
    "message": "Ja, weil die Website der obersten Ebene opak ist"
  },
  "panels/application/components/TrustTokensView.ts | allStoredTrustTokensAvailableIn": {
    "message": "Alle gespeicherten Private State Tokens, die in dieser Browserinstanz verfügbar sind."
  },
  "panels/application/components/TrustTokensView.ts | deleteTrustTokens": {
    "message": "Alle gespeicherten Private State Tokens löschen, die von {PH1} ausgestellt wurden."
  },
  "panels/application/components/TrustTokensView.ts | issuer": {
    "message": "Aussteller"
  },
  "panels/application/components/TrustTokensView.ts | noTrustTokensStored": {
    "message": "Derzeit sind keine Private State Tokens gespeichert."
  },
  "panels/application/components/TrustTokensView.ts | storedTokenCount": {
    "message": "Anzahl gespeicherter Token"
  },
  "panels/application/components/TrustTokensView.ts | trustTokens": {
    "message": "Private State Tokens"
  },
  "panels/application/preloading/PreloadingView.ts | filterAllPreloads": {
    "message": "Alle spekulativen Ladevorgänge"
  },
  "panels/application/preloading/PreloadingView.ts | filterFilterByRuleSet": {
    "message": "Nach Regelsatz filtern"
  },
  "panels/application/preloading/PreloadingView.ts | statusFailure": {
    "message": "Fehler"
  },
  "panels/application/preloading/PreloadingView.ts | statusNotTriggered": {
    "message": "Nicht ausgelöst"
  },
  "panels/application/preloading/PreloadingView.ts | statusPending": {
    "message": "Ausstehend"
  },
  "panels/application/preloading/PreloadingView.ts | statusReady": {
    "message": "Bereit"
  },
  "panels/application/preloading/PreloadingView.ts | statusRunning": {
    "message": "Wird ausgeführt"
  },
  "panels/application/preloading/PreloadingView.ts | statusSuccess": {
    "message": "Fertig"
  },
  "panels/application/preloading/PreloadingView.ts | validityInvalid": {
    "message": "Ungültig"
  },
  "panels/application/preloading/PreloadingView.ts | validitySomeRulesInvalid": {
    "message": "Einige Regeln sind ungültig"
  },
  "panels/application/preloading/PreloadingView.ts | validityValid": {
    "message": "Gültig"
  },
  "panels/application/preloading/components/MismatchedPreloadingGrid.ts | action": {
    "message": "Aktion"
  },
  "panels/application/preloading/components/MismatchedPreloadingGrid.ts | status": {
    "message": "Status"
  },
  "panels/application/preloading/components/MismatchedPreloadingGrid.ts | statusFailure": {
    "message": "Fehler"
  },
  "panels/application/preloading/components/MismatchedPreloadingGrid.ts | statusNotTriggered": {
    "message": "Nicht ausgelöst"
  },
  "panels/application/preloading/components/MismatchedPreloadingGrid.ts | statusPending": {
    "message": "Ausstehend"
  },
  "panels/application/preloading/components/MismatchedPreloadingGrid.ts | statusReady": {
    "message": "Bereit"
  },
  "panels/application/preloading/components/MismatchedPreloadingGrid.ts | statusRunning": {
    "message": "Wird ausgeführt"
  },
  "panels/application/preloading/components/MismatchedPreloadingGrid.ts | statusSuccess": {
    "message": "Fertig"
  },
  "panels/application/preloading/components/MismatchedPreloadingGrid.ts | url": {
    "message": "URL"
  },
  "panels/application/preloading/components/PreloadingDetailsReportView.ts | buttonClickToInspect": {
    "message": "Zum Untersuchen der vorab gerenderten Seite klicken"
  },
  "panels/application/preloading/components/PreloadingDetailsReportView.ts | buttonClickToRevealRuleSet": {
    "message": "Zum Anzeigen des Regelsatzes klicken"
  },
  "panels/application/preloading/components/PreloadingDetailsReportView.ts | buttonInspect": {
    "message": "Untersuchen"
  },
  "panels/application/preloading/components/PreloadingDetailsReportView.ts | detailedStatusFailure": {
    "message": "Fehler bei spekulativem Laden."
  },
  "panels/application/preloading/components/PreloadingDetailsReportView.ts | detailedStatusNotTriggered": {
    "message": "Der Versuch zum spekulativen Laden wurde noch nicht ausgelöst."
  },
  "panels/application/preloading/components/PreloadingDetailsReportView.ts | detailedStatusPending": {
    "message": "Der Versuch zum spekulativen Laden ist gültig, aber ausstehend."
  },
  "panels/application/preloading/components/PreloadingDetailsReportView.ts | detailedStatusReady": {
    "message": "Spekulatives Laden ist abgeschlossen und das Ergebnis steht für die nächste Navigation bereit."
  },
  "panels/application/preloading/components/PreloadingDetailsReportView.ts | detailedStatusRunning": {
    "message": "Spekulatives Laden wird ausgeführt."
  },
  "panels/application/preloading/components/PreloadingDetailsReportView.ts | detailedStatusSuccess": {
    "message": "Spekulatives Laden wurde abgeschlossen und für eine Navigation verwendet."
  },
  "panels/application/preloading/components/PreloadingDetailsReportView.ts | detailsAction": {
    "message": "Aktion"
  },
  "panels/application/preloading/components/PreloadingDetailsReportView.ts | detailsDetailedInformation": {
    "message": "Detaillierte Informationen"
  },
  "panels/application/preloading/components/PreloadingDetailsReportView.ts | detailsFailureReason": {
    "message": "Grund für den Fehler"
  },
  "panels/application/preloading/components/PreloadingDetailsReportView.ts | detailsRuleSet": {
    "message": "Regelsatz"
  },
  "panels/application/preloading/components/PreloadingDetailsReportView.ts | detailsStatus": {
    "message": "Status"
  },
  "panels/application/preloading/components/PreloadingDetailsReportView.ts | selectAnElementForMoreDetails": {
    "message": "Wähle ein Element aus, um mehr zu erfahren"
  },
  "panels/application/preloading/components/PreloadingDisabledInfobar.ts | descriptionDisabledByBatterySaver": {
    "message": "Spekulatives Laden ist aufgrund des Energiesparmodus des Betriebssystems deaktiviert."
  },
  "panels/application/preloading/components/PreloadingDisabledInfobar.ts | descriptionDisabledByDataSaver": {
    "message": "Spekulatives Laden ist aufgrund des Datensparmodus des Betriebssystems deaktiviert."
  },
  "panels/application/preloading/components/PreloadingDisabledInfobar.ts | descriptionDisabledByHoldbackPrefetchSpeculationRules": {
    "message": "Der Prefetch wird erzwungen, weil die Entwicklertools geöffnet sind. Wenn die Entwicklertools geschlossen werden, wird der Prefetch deaktiviert, weil diese Browsersitzung Teil einer Holdback-Gruppe ist, die für Leistungsvergleiche verwendet wird."
  },
  "panels/application/preloading/components/PreloadingDisabledInfobar.ts | descriptionDisabledByHoldbackPrerenderSpeculationRules": {
    "message": "Das Pre-Rendering wird erzwungen, weil die Entwicklertools geöffnet sind. Wenn die Entwicklertools geschlossen werden, wird das Pre-Rendering deaktiviert, weil diese Browsersitzung Teil einer Holdback-Gruppe ist, die für Leistungsvergleiche verwendet wird."
  },
  "panels/application/preloading/components/PreloadingDisabledInfobar.ts | descriptionDisabledByPreference": {
    "message": "Spekulatives Laden ist aufgrund von Nutzereinstellungen oder einer Erweiterung deaktiviert. Rufe die „{PH1}“ auf, um deine Einstellung zu ändern. Rufe die „{PH2}“ auf, um Erweiterungen zu deaktivieren, die spekulatives Laden blockieren."
  },
  "panels/application/preloading/components/PreloadingDisabledInfobar.ts | extensionsSettings": {
    "message": "Einstellungen für Erweiterungen"
  },
  "panels/application/preloading/components/PreloadingDisabledInfobar.ts | footerLearnMore": {
    "message": "Weitere Informationen"
  },
  "panels/application/preloading/components/PreloadingDisabledInfobar.ts | headerDisabledByBatterySaver": {
    "message": "Energiesparmodus"
  },
  "panels/application/preloading/components/PreloadingDisabledInfobar.ts | headerDisabledByDataSaver": {
    "message": "Datensparmodus"
  },
  "panels/application/preloading/components/PreloadingDisabledInfobar.ts | headerDisabledByHoldbackPrefetchSpeculationRules": {
    "message": "Prefetch wurde deaktiviert, wird jetzt aber erzwungen"
  },
  "panels/application/preloading/components/PreloadingDisabledInfobar.ts | headerDisabledByHoldbackPrerenderSpeculationRules": {
    "message": "Pre-Rendering wurde deaktiviert, wird jetzt aber erzwungen"
  },
  "panels/application/preloading/components/PreloadingDisabledInfobar.ts | headerDisabledByPreference": {
    "message": "Nutzereinstellungen oder ‑erweiterungen"
  },
  "panels/application/preloading/components/PreloadingDisabledInfobar.ts | infobarPreloadingIsDisabled": {
    "message": "Spekulatives Laden ist deaktiviert"
  },
  "panels/application/preloading/components/PreloadingDisabledInfobar.ts | infobarPreloadingIsForceEnabled": {
    "message": "Spekulatives Laden wird erzwungen"
  },
  "panels/application/preloading/components/PreloadingDisabledInfobar.ts | preloadingPagesSettings": {
    "message": "Einstellungen für das Vorabladen von Setein"
  },
  "panels/application/preloading/components/PreloadingDisabledInfobar.ts | titleReasonsPreventingPreloading": {
    "message": "Gründe, die spekulatives Laden verhindern"
  },
  "panels/application/preloading/components/PreloadingGrid.ts | action": {
    "message": "Aktion"
  },
  "panels/application/preloading/components/PreloadingGrid.ts | ruleSet": {
    "message": "Regelsatz"
  },
  "panels/application/preloading/components/PreloadingGrid.ts | status": {
    "message": "Status"
  },
  "panels/application/preloading/components/PreloadingMismatchedHeadersGrid.ts | activationNavigationValue": {
    "message": "Wert in der Aktivierungsnavigation"
  },
  "panels/application/preloading/components/PreloadingMismatchedHeadersGrid.ts | headerName": {
    "message": "Headername"
  },
  "panels/application/preloading/components/PreloadingMismatchedHeadersGrid.ts | initialNavigationValue": {
    "message": "Wert in der ersten Navigation"
  },
  "panels/application/preloading/components/PreloadingMismatchedHeadersGrid.ts | missing": {
    "message": "(fehlt)"
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchEvictedAfterCandidateRemoved": {
    "message": "Der Prefetch wurde verworfen, weil keine Spekulationsregel auf der initiierenden Seite einen Prefetch für diese URL mehr auslöst."
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchEvictedForNewerPrefetch": {
    "message": "Der Prefetch wurde verworfen, weil auf der initiierenden Seite zu viele Prefetches aktiv sind und dieser einer der ältesten war."
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchFailedIneligibleRedirect": {
    "message": "Der Prefetch wurde weitergeleitet, aber die Weiterleitungs-URL kann für den Prefetch nicht verwendet werden."
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchFailedInvalidRedirect": {
    "message": "Der Prefetch wurde weitergeleitet, aber bei der Weiterleitung ist ein Problem aufgetreten."
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchFailedMIMENotSupported": {
    "message": "Der Prefetch ist fehlgeschlagen, weil der Content-Type-Header der Antwort nicht unterstützt wurde."
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchFailedNetError": {
    "message": "Der Prefetch ist aufgrund eines Netzwerkfehlers fehlgeschlagen."
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchFailedNon2XX": {
    "message": "Der Prefetch ist aufgrund einer HTTP-Antwort mit dem Statuscode „non-2xx“ fehlgeschlagen."
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchFailedPerPageLimitExceeded": {
    "message": "Der Prefetch wurde nicht durchgeführt, weil auf der entsprechenden Seite bereits zu viele Prefetches aktiv sind."
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchIneligibleRetryAfter": {
    "message": "Auf einen vorherigen Prefetch an den Ursprung wurde eine HTTP-503-Antwort mit einem Retry-After-Header zurückgegeben, der noch nicht abgelaufen ist."
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchIsPrivacyDecoy": {
    "message": "Die URL konnte nicht per Prefetch abgerufen werden, weil es für diesen Ursprung einen registrierten Service Worker oder websiteübergreifende Cookies gibt. Der Prefetch wurde jedoch trotzdem im Netzwerk platziert und nicht verwendet, um zu verschleiern, dass der Nutzer zuvor eine bestimmte Art Beziehung zum Ursprung hatte."
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchIsStale": {
    "message": "Der Prefetch wurde verworfen, weil zwischen dem Prefetch und der Nutzung zu viel Zeit vergangen ist."
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchNotEligibleBatterySaverEnabled": {
    "message": "Der Prefetch wurde nicht durchgeführt, weil der Energiesparmodus aktiviert war."
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchNotEligibleBrowserContextOffTheRecord": {
    "message": "Der Prefetch wurde nicht durchgeführt, weil sich der Browser im Inkognito- oder Gastmodus befindet."
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchNotEligibleDataSaverEnabled": {
    "message": "Der Prefetch wurde nicht durchgeführt, weil sich das Betriebssystem im Datensparmodus befindet."
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchNotEligibleExistingProxy": {
    "message": "Die URL kann nicht per Prefetch abgerufen werden, da sie im standardmäßigen Netzwerkkontext zur Verwendung eines Proxyservers konfiguriert ist."
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchNotEligibleHostIsNonUnique": {
    "message": "Die URL konnte nicht per Prefetch abgerufen werden, weil ihr Host nicht eindeutig war (z. B. eine nicht öffentlich zugängliche IP-Adresse oder ein Hostname, der nicht von einer Registry verwaltet wird), aber der Prefetch war für die Verwendung eines Proxys erforderlich."
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchNotEligibleNonDefaultStoragePartition": {
    "message": "Die URL konnte nicht per Prefetch abgerufen werden, weil sie eine nicht standardmäßige Speicherpartition verwendet."
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchNotEligiblePreloadingDisabled": {
    "message": "Der Prefetch wurde nicht durchgeführt, weil spekulatives Laden deaktiviert wurde."
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchNotEligibleSameSiteCrossOriginPrefetchRequiredProxy": {
    "message": "Die URL konnte nicht per Prefetch abgerufen werden, weil der standardmäßige Netzwerkkontext nicht für die Verwendung des Prefetch-Proxys für eine ursprungsübergreifende Prefetch-Anfrage derselben Website konfiguriert werden kann."
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchNotEligibleSchemeIsNotHttps": {
    "message": "Die URL konnte nicht per Prefetch abgerufen werden, weil ihr Schema nicht „https:“ war."
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchNotEligibleUserHasCookies": {
    "message": "Die URL konnte nicht per Prefetch abgerufen werden, weil sie websiteübergreifend war, aber der Nutzer hatte Cookies für diesen Ursprung."
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchNotEligibleUserHasServiceWorker": {
    "message": "Die URL konnte nicht per Prefetch abgerufen werden, weil es für diesen Ursprung einen registrierten Service Worker gibt, der derzeit nicht unterstützt wird."
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchNotUsedCookiesChanged": {
    "message": "Der Prefetch wurde nicht ausgeführt, weil er ein websiteübergreifender Prefetch ist. Außerdem wurden Cookies für diese URL hinzugefügt, als der Prefetch aktiv war, sodass die Prefetch-Antwort jetzt veraltet ist."
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchNotUsedProbeFailed": {
    "message": "Der Prefetch wurde von deinem Internetanbieter oder Netzwerkadministrator blockiert."
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchProxyNotAvailable": {
    "message": "Beim Einrichten einer Verbindung zum Prefetch-Proxy ist ein Netzwerkfehler aufgetreten."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusActivatedDuringMainFrameNavigation": {
    "message": "Die vorab gerenderte Seite wurde aktiviert, während die Hauptframe-Navigation der Seite initiiert wurde."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusActivatedWithAuxiliaryBrowsingContexts": {
    "message": "Das Pre-Rendering wurde nicht verwendet, da während der Aktivierungszeit andere Fenster mit einem aktiven Ursprungsseitenverweis auf die initiierende Seite vorhanden waren, was derzeit nicht unterstützt wird."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusActivationFramePolicyNotCompatible": {
    "message": "Das Pre-Rendering wurde nicht verwendet, weil die Sandboxing-Flags oder Berechtigungsrichtlinien der initiierenden Seite nicht mit denen der Pre-Rendering-Seite kompatibel sind."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusActivationNavigationParameterMismatch": {
    "message": "Das Pre-Rendering wurde nicht verwendet, da während der Aktivierungszeit andere Navigationsparameter (z. B. HTTP-Header) berechnet wurden als während der ursprünglichen Pre-Rendering-Navigationsanfrage."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusActivationUrlHasEffectiveUrl": {
    "message": "Das Pre-Rendering wurde nicht verwendet, da die Navigation während der Aktivierungszeit eine effektive URL hat, die sich von ihrer normalen URL unterscheidet. Das betrifft beispielsweise die Seite „Neuer Tab“ oder gehostete Apps."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusAudioOutputDeviceRequested": {
    "message": "Die vorab gerenderte Seite hat die Audioausgabe angefordert, was derzeit nicht unterstützt wird."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusBatterySaverEnabled": {
    "message": "Das Pre-Rendering wurde nicht ausgeführt, weil der Nutzer verminderten Akkuverbrauch durch den Browser angefordert hat."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusBlockedByClient": {
    "message": "Ein Teil der Ressourcenauslastung wurde blockiert."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusClientCertRequested": {
    "message": "Die Pre-Rendering-Navigation erforderte ein HTTP-Clientzertifikat."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusCrossSiteNavigationInInitialNavigation": {
    "message": "Die Pre-Rendering-Navigation ist fehlgeschlagen, weil sie auf eine Website-übergreifende URL ausgerichtet war."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusCrossSiteNavigationInMainFrameNavigation": {
    "message": "Die vorab gerenderte Seite hat eine Website-übergreifende URL aufgerufen."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusCrossSiteRedirectInInitialNavigation": {
    "message": "Die Pre-Rendering-Navigation ist fehlgeschlagen, weil über die vorab gerenderte URL zu einer Website-übergreifenden URL weitergeleitet wurde."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusCrossSiteRedirectInMainFrameNavigation": {
    "message": "Über die vorab gerenderte Seite wurde eine URL aufgerufen, die zu einer Website-übergreifenden URL weiterleitete."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusDataSaverEnabled": {
    "message": "Das Pre-Rendering wurde nicht ausgeführt, weil der Nutzer eine verminderte Datennutzung durch den Browser angefordert hat."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusDownload": {
    "message": "Die vorab gerenderten Seite versuchte, einen Download zu starten. Dies wird derzeit jedoch nicht unterstützt."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusHasEffectiveUrl": {
    "message": "Die initiierende Seite kann kein Pre-Rendering ausführen, da sich ihre effektive URL von ihrer normalen URL unterscheidet. Das betrifft beispielsweise die Seite „Neuer Tab“ oder gehostete Apps."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusInvalidSchemeNavigation": {
    "message": "Die URL konnte nicht vorab gerendert werden, da ihr Schema nicht http: oder https: war."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusInvalidSchemeRedirect": {
    "message": "Die Pre-Rendering-Navigation ist fehlgeschlagen, weil dadurch zu einer URL weitergeleitet wurde, deren Schema nicht http: oder https: war."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusLoginAuthRequested": {
    "message": "Die Pre-Rendering-Navigation erforderte eine HTTP-Authentifizierung, die derzeit nicht unterstützt wird."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusLowEndDevice": {
    "message": "Das Pre-Rendering wurde nicht durchgeführt, weil auf diesem Gerät dafür nicht genügend Gesamtsystemspeicher vorhanden ist."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusMainFrameNavigation": {
    "message": "Über die vorab gerenderte Seite wurde eine andere URL aufgerufen. Dies wird derzeit nicht unterstützt."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusMaxNumOfRunningEagerPrerendersExceeded": {
    "message": "Das Pre-Rendering mit „eager“ wurde nicht ausgeführt, weil auf der initiierenden Seite bereits zu viele Pre-Renderings laufen. Entferne andere Spekulationsregeln mit „eager“, um weitere Pre-Renderings zu ermöglichen."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusMaxNumOfRunningEmbedderPrerendersExceeded": {
    "message": "Das durch den Browser ausgelöste Pre-Rendering wurde nicht ausgeführt, weil auf der initiierenden Seite bereits zu viele Pre-Renderings aktiv sind."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusMaxNumOfRunningNonEagerPrerendersExceeded": {
    "message": "Das alte Pre-Rendering ohne „eager“ (mit „moderate“ oder „conservative“ und ausgelöst durch Bewegen des Mauszeigers auf Links oder Anklicken von Links) wurde automatisch abgebrochen, da ein neues Pre-Rendering ohne „eager“ gestartet wurde. Es kann noch einmal durch Interagieren mit dem Link ausgelöst werden."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusMemoryLimitExceeded": {
    "message": "Das Pre-Rendering wurde nicht ausgeführt, weil der Browser das Arbeitsspeicherlimit für diese Aktion überschritten hat."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusMemoryPressureAfterTriggered": {
    "message": "Die vorab gerenderte Seite wurde entfernt, weil der Browser unter kritischer Speicherauslastung stand."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusMemoryPressureOnTrigger": {
    "message": "Das Pre-Rendering wurde nicht ausgeführt, weil der Browser unter kritischer Arbeitsspeicherauslastung stand."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusMixedContent": {
    "message": "Die vorab gerenderte Seite enthielt gemischte Inhalte."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusMojoBinderPolicy": {
    "message": "Auf der vorab gerenderten Seite wurde eine unzulässige JavaScript API verwendet, die derzeit nicht unterstützt wird (interne Mojo-Schnittstelle: {PH1})."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusNavigationBadHttpStatus": {
    "message": "Die Pre-Rendering-Navigation ist aufgrund einer HTTP-Antwort mit dem Statuscode non-2xx fehlgeschlagen."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusNavigationRequestBlockedByCsp": {
    "message": "Die Pre-Rendering-Navigation wurde durch eine Content Security Policy blockiert."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusNavigationRequestNetworkError": {
    "message": "Bei der Pre-Rendering-Navigation ist ein Netzwerkfehler aufgetreten."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusPreloadingDisabled": {
    "message": "Das Pre-Rendering wurde nicht ausgeführt, weil der Nutzer das Vorabladen in den Browsereinstellungen deaktiviert hat."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusPrerenderingDisabledByDevTools": {
    "message": "Das Pre-Rendering wurde nicht ausgeführt, weil die Entwicklertools verwendet wurden, um das Pre-Rendering zu deaktivieren."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusPrerenderingUrlHasEffectiveUrl": {
    "message": "Bei der Pre-Rendering-Navigation ist ein Fehler aufgetreten, da sich ihre effektive URL von ihrer normalen URL unterscheidet. Das betrifft beispielsweise die Seite „Neuer Tab“ oder gehostete Apps."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusPrimaryMainFrameRendererProcessCrashed": {
    "message": "Die initiierende Seite ist abgestürzt."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusPrimaryMainFrameRendererProcessKilled": {
    "message": "Die initiierende Seite wurde gelöscht."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusRedirectedPrerenderingUrlHasEffectiveUrl": {
    "message": "Bei der Pre-Rendering-Navigation ist ein Fehler aufgetreten, da sie auf eine effektive URL weitergeleitet hat, die sich von ihrer normalen URL unterscheidet. Das betrifft beispielsweise die Seite „Neuer Tab“ oder gehostete Apps."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusRendererProcessCrashed": {
    "message": "Die vorab gerenderte Seite ist abgestürzt."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusRendererProcessKilled": {
    "message": "Die vorab gerenderte Seite wurde gelöscht."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusSameSiteCrossOriginNavigationNotOptInInInitialNavigation": {
    "message": "Die Pre-Rendering-Navigation ist fehlgeschlagen, weil sie zu einer ursprungsübergreifenden URL derselben Website weitergeleitet hat, die Zielantwort aber nicht den entsprechenden „Supports-Loading-Mode“-Header enthielt."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusSameSiteCrossOriginNavigationNotOptInInMainFrameNavigation": {
    "message": "Über die vorab gerenderte Seite wurde eine ursprungsübergreifende URL derselben Website aufgerufen. Die Zielantwort enthielt jedoch keinen entsprechenden „Supports-Loading-Mode“-Header."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusSameSiteCrossOriginRedirectNotOptInInInitialNavigation": {
    "message": "Die Pre-Rendering-Navigation ist fehlgeschlagen, weil über die vorab gerenderte URL zu einer ursprungsübergreifenden URL derselben Website weitergeleitet wurde, die Zielantwort aber nicht den entsprechenden „Supports-Loading-Mode“-Header enthielt."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusSameSiteCrossOriginRedirectNotOptInInMainFrameNavigation": {
    "message": "Über die vorab gerenderte Seite wurde eine URL aufgerufen, die zu einer ursprungsübergreifenden URL derselben Website weiterleitete. Die Zielantwort enthielt jedoch keinen entsprechenden „Supports-Loading-Mode“-Header."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusSpeculationRuleRemoved": {
    "message": "Die vorab gerenderte Seite wurde entfernt, weil die initiierende Seite die entsprechende Pre-Rendering-Regel aus <script type=\"speculationrules\"> entfernt hat."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusSslCertificateError": {
    "message": "Die Pre-Rendering-Navigation ist aufgrund eines ungültigen SSL-Zertifikats fehlgeschlagen."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusTimeoutBackgrounded": {
    "message": "Die initiierende Seite befand sich lange im Hintergrund, sodass die vorab gerenderte Seite verworfen wurde."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusTriggerBackgrounded": {
    "message": "Die initiierende Seite wurde im Hintergrund ausgeführt und die vorab gerenderte Seite daher verworfen."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusUaChangeRequiresReload": {
    "message": "Der User-Agent wurde in der Pre-Rendering-Navigation geändert."
  },
  "panels/application/preloading/components/PreloadingString.ts | statusFailure": {
    "message": "Fehler"
  },
  "panels/application/preloading/components/PreloadingString.ts | statusNotTriggered": {
    "message": "Nicht ausgelöst"
  },
  "panels/application/preloading/components/PreloadingString.ts | statusPending": {
    "message": "Ausstehend"
  },
  "panels/application/preloading/components/PreloadingString.ts | statusReady": {
    "message": "Bereit"
  },
  "panels/application/preloading/components/PreloadingString.ts | statusRunning": {
    "message": "Wird ausgeführt"
  },
  "panels/application/preloading/components/PreloadingString.ts | statusSuccess": {
    "message": "Fertig"
  },
  "panels/application/preloading/components/RuleSetGrid.ts | buttonClickToRevealInElementsPanel": {
    "message": "Zum Anzeigen im Bereich „Elemente“ klicken"
  },
  "panels/application/preloading/components/RuleSetGrid.ts | buttonClickToRevealInNetworkPanel": {
    "message": "Zum Anzeigen im Netzwerkbereich klicken"
  },
  "panels/application/preloading/components/RuleSetGrid.ts | buttonRevealPreloadsAssociatedWithRuleSet": {
    "message": "Spekulative Ladevorgänge anzeigen, die mit diesem Regelsatz verknüpft sind"
  },
  "panels/application/preloading/components/RuleSetGrid.ts | errors": {
    "message": "{errorCount,plural, =1{# Fehler}other{# Fehler}}"
  },
  "panels/application/preloading/components/RuleSetGrid.ts | ruleSet": {
    "message": "Regelsatz"
  },
  "panels/application/preloading/components/RuleSetGrid.ts | status": {
    "message": "Status"
  },
  "panels/application/preloading/components/UsedPreloadingView.ts | badgeFailure": {
    "message": "Fehler"
  },
  "panels/application/preloading/components/UsedPreloadingView.ts | badgeFailureWithCount": {
    "message": "{n,plural, =1{# Fehler}other{# Fehler}}"
  },
  "panels/application/preloading/components/UsedPreloadingView.ts | badgeInProgressWithCount": {
    "message": "{n,plural, =1{# in Bearbeitung}other{# in Bearbeitung}}"
  },
  "panels/application/preloading/components/UsedPreloadingView.ts | badgeNoSpeculativeLoads": {
    "message": "Kein spekulatives Laden"
  },
  "panels/application/preloading/components/UsedPreloadingView.ts | badgeNotTriggeredWithCount": {
    "message": "{n,plural, =1{# nicht ausgelöst}other{# nicht ausgelöst}}"
  },
  "panels/application/preloading/components/UsedPreloadingView.ts | badgeSuccess": {
    "message": "Erfolg"
  },
  "panels/application/preloading/components/UsedPreloadingView.ts | badgeSuccessWithCount": {
    "message": "{n,plural, =1{# Erfolg}other{# Erfolge}}"
  },
  "panels/application/preloading/components/UsedPreloadingView.ts | currentURL": {
    "message": "Aktuelle URL"
  },
  "panels/application/preloading/components/UsedPreloadingView.ts | detailsFailureReason": {
    "message": "Grund für den Fehler"
  },
  "panels/application/preloading/components/UsedPreloadingView.ts | downgradedPrefetchUsed": {
    "message": "Die initiierende Seite hat versucht, die URL dieser Seite vorab zu rendern. Das Pre-Rendering ist fehlgeschlagen, aber der resultierende Antworttext wurde trotzdem als Prefetch verwendet."
  },
  "panels/application/preloading/components/UsedPreloadingView.ts | learnMore": {
    "message": "Weitere Informationen zum spekulativen Laden auf developer.chrome.com"
  },
  "panels/application/preloading/components/UsedPreloadingView.ts | mismatchedHeadersDetail": {
    "message": "Nicht übereinstimmende HTTP-Anfrageheader"
  },
  "panels/application/preloading/components/UsedPreloadingView.ts | noPreloads": {
    "message": "Die initiierende Seite hat nicht versucht, die URL dieser Seite spekulativ zu laden."
  },
  "panels/application/preloading/components/UsedPreloadingView.ts | prefetchFailed": {
    "message": "Die initiierende Seite hat versucht, die URL dieser Seite vorab abzurufen. Dies ist jedoch fehlgeschlagen, weshalb stattdessen eine vollständige Navigation erfolgt ist."
  },
  "panels/application/preloading/components/UsedPreloadingView.ts | prefetchUsed": {
    "message": "Diese Seite wurde vorab abgerufen."
  },
  "panels/application/preloading/components/UsedPreloadingView.ts | preloadedURLs": {
    "message": "URLs werden von der initiierenden Seite spekulativ geladen"
  },
  "panels/application/preloading/components/UsedPreloadingView.ts | prerenderFailed": {
    "message": "Die initiierende Seite hat versucht, die URL dieser Seite vorab zu rendern. Dies ist jedoch fehlgeschlagen, weshalb stattdessen eine vollständige Navigation erfolgt ist."
  },
  "panels/application/preloading/components/UsedPreloadingView.ts | prerenderUsed": {
    "message": "Diese Seite wurde vorab gerendert."
  },
  "panels/application/preloading/components/UsedPreloadingView.ts | speculationsInitiatedByThisPage": {
    "message": "Von dieser Seite initiierte Spekulationen"
  },
  "panels/application/preloading/components/UsedPreloadingView.ts | speculativeLoadingStatusForThisPage": {
    "message": "Status für spekulatives Laden für diese Seite"
  },
  "panels/application/preloading/components/UsedPreloadingView.ts | viewAllRules": {
    "message": "Alle Spekulationsregeln ansehen"
  },
  "panels/application/preloading/components/UsedPreloadingView.ts | viewAllSpeculations": {
    "message": "Alle Spekulationen anzeigen"
  },
  "panels/autofill/AutofillView.ts | addressPreview": {
    "message": "Adressvorschau"
  },
  "panels/autofill/AutofillView.ts | attr": {
    "message": "Attr"
  },
  "panels/autofill/AutofillView.ts | autoShow": {
    "message": "Bereich für Autofill öffnen"
  },
  "panels/autofill/AutofillView.ts | autocompleteAttribute": {
    "message": "Attribut für die automatische Vervollständigung"
  },
  "panels/autofill/AutofillView.ts | formField": {
    "message": "Formularfeld"
  },
  "panels/autofill/AutofillView.ts | formInspector": {
    "message": "Formularprüftool"
  },
  "panels/autofill/AutofillView.ts | heur": {
    "message": "Heur"
  },
  "panels/autofill/AutofillView.ts | inferredByHeuristics": {
    "message": "Aus Heuristik abgeleitet"
  },
  "panels/autofill/AutofillView.ts | noDataAvailable": {
    "message": "Kein Autofill-Ereignis erkannt"
  },
  "panels/autofill/AutofillView.ts | predictedAutofillValue": {
    "message": "Vorhergesagter Autofill-Wert"
  },
  "panels/autofill/AutofillView.ts | value": {
    "message": "Wert"
  },
  "panels/autofill/autofill-meta.ts | autofill": {
    "message": "Autofill"
  },
  "panels/autofill/autofill-meta.ts | showAutofill": {
    "message": "Autofill anzeigen"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | animation": {
    "message": "Animation"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | auctionWorklet": {
    "message": "Anzeigenauktion-Worklet"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | breakpointHit": {
    "message": "Haltepunkt getroffen"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | canvas": {
    "message": "Canvas"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | clipboard": {
    "message": "Zwischenablage"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | control": {
    "message": "Steuerung"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | device": {
    "message": "Gerät"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | domMutation": {
    "message": "DOM-Mutation"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | dragDrop": {
    "message": "Drag-and-drop"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | geolocation": {
    "message": "Standortbestimmung"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | keyboard": {
    "message": "Tastatur"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | load": {
    "message": "Laden"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | media": {
    "message": "Medien"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | mouse": {
    "message": "Maus"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | notification": {
    "message": "Benachrichtigung"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | parse": {
    "message": "Parsen"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | pictureinpicture": {
    "message": "Bild im Bild"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | pointer": {
    "message": "Zeiger"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | script": {
    "message": "Script"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | sharedStorageWorklet": {
    "message": "Shared Storage-Worklet"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | timer": {
    "message": "Timer"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | touch": {
    "message": "Berühren"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | trustedTypeViolations": {
    "message": "Verstöße gegen vertrauenswürdige Typen"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | webaudio": {
    "message": "WebAudio"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | window": {
    "message": "Fenster"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | worker": {
    "message": "Worker"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | xhr": {
    "message": "XHR"
  },
  "panels/browser_debugger/DOMBreakpointsSidebarPane.ts | attributeModified": {
    "message": "Attribut geändert"
  },
  "panels/browser_debugger/DOMBreakpointsSidebarPane.ts | breakOn": {
    "message": "Haltepunkt bei"
  },
  "panels/browser_debugger/DOMBreakpointsSidebarPane.ts | breakpointHit": {
    "message": "Haltepunkt getroffen"
  },
  "panels/browser_debugger/DOMBreakpointsSidebarPane.ts | breakpointRemoved": {
    "message": "Haltepunkt entfernt"
  },
  "panels/browser_debugger/DOMBreakpointsSidebarPane.ts | breakpointSet": {
    "message": "Haltepunkt festgelegt"
  },
  "panels/browser_debugger/DOMBreakpointsSidebarPane.ts | checked": {
    "message": "aktiviert"
  },
  "panels/browser_debugger/DOMBreakpointsSidebarPane.ts | domBreakpointsList": {
    "message": "Liste der DOM Haltepunkte"
  },
  "panels/browser_debugger/DOMBreakpointsSidebarPane.ts | noBreakpoints": {
    "message": "Keine Haltepunkte"
  },
  "panels/browser_debugger/DOMBreakpointsSidebarPane.ts | nodeRemoved": {
    "message": "Knoten entfernt"
  },
  "panels/browser_debugger/DOMBreakpointsSidebarPane.ts | removeAllDomBreakpoints": {
    "message": "Alle DOM-Haltepunkte entfernen"
  },
  "panels/browser_debugger/DOMBreakpointsSidebarPane.ts | removeBreakpoint": {
    "message": "Haltepunkt entfernen"
  },
  "panels/browser_debugger/DOMBreakpointsSidebarPane.ts | revealDomNodeInElementsPanel": {
    "message": "DOM-Knoten im Elementbereich anzeigen"
  },
  "panels/browser_debugger/DOMBreakpointsSidebarPane.ts | sBreakpointHit": {
    "message": "{PH1} Haltepunkttreffer"
  },
  "panels/browser_debugger/DOMBreakpointsSidebarPane.ts | sS": {
    "message": "{PH1}: {PH2}"
  },
  "panels/browser_debugger/DOMBreakpointsSidebarPane.ts | sSS": {
    "message": "{PH1}: {PH2}, {PH3}"
  },
  "panels/browser_debugger/DOMBreakpointsSidebarPane.ts | subtreeModified": {
    "message": "Unterstruktur geändert"
  },
  "panels/browser_debugger/DOMBreakpointsSidebarPane.ts | unchecked": {
    "message": "nicht ausgewählt"
  },
  "panels/browser_debugger/XHRBreakpointsSidebarPane.ts | addBreakpoint": {
    "message": "Haltepunkt hinzufügen"
  },
  "panels/browser_debugger/XHRBreakpointsSidebarPane.ts | addXhrfetchBreakpoint": {
    "message": "XHR/fetch-Haltepunkt hinzufügen"
  },
  "panels/browser_debugger/XHRBreakpointsSidebarPane.ts | anyXhrOrFetch": {
    "message": "Beliebige XHR oder abrufen"
  },
  "panels/browser_debugger/XHRBreakpointsSidebarPane.ts | breakWhenUrlContains": {
    "message": "Abbrechen, wenn die URL Folgendes enthält:"
  },
  "panels/browser_debugger/XHRBreakpointsSidebarPane.ts | breakpointHit": {
    "message": "Haltepunkt getroffen"
  },
  "panels/browser_debugger/XHRBreakpointsSidebarPane.ts | noBreakpoints": {
    "message": "Keine Haltepunkte"
  },
  "panels/browser_debugger/XHRBreakpointsSidebarPane.ts | removeAllBreakpoints": {
    "message": "Alle Haltepunkte entfernen"
  },
  "panels/browser_debugger/XHRBreakpointsSidebarPane.ts | removeBreakpoint": {
    "message": "Haltepunkt entfernen"
  },
  "panels/browser_debugger/XHRBreakpointsSidebarPane.ts | urlBreakpoint": {
    "message": "URL-Haltepunkt"
  },
  "panels/browser_debugger/XHRBreakpointsSidebarPane.ts | urlContainsS": {
    "message": "URL enthält „{PH1}“"
  },
  "panels/browser_debugger/XHRBreakpointsSidebarPane.ts | xhrfetchBreakpoints": {
    "message": "XHR/fetch-Haltepunkte"
  },
  "panels/browser_debugger/browser_debugger-meta.ts | contentScripts": {
    "message": "Inhaltskripte"
  },
  "panels/browser_debugger/browser_debugger-meta.ts | cspViolationBreakpoints": {
    "message": "Haltepunkte für CSP-Verstöße"
  },
  "panels/browser_debugger/browser_debugger-meta.ts | domBreakpoints": {
    "message": "DOM-Umschaltpunkte"
  },
  "panels/browser_debugger/browser_debugger-meta.ts | eventListenerBreakpoints": {
    "message": "Event-Listener-Haltepunkte"
  },
  "panels/browser_debugger/browser_debugger-meta.ts | globalListeners": {
    "message": "Globale Listener"
  },
  "panels/browser_debugger/browser_debugger-meta.ts | overrides": {
    "message": "Überschreibt"
  },
  "panels/browser_debugger/browser_debugger-meta.ts | page": {
    "message": "Seite"
  },
  "panels/browser_debugger/browser_debugger-meta.ts | refreshGlobalListeners": {
    "message": "Globale Listener aktualisieren"
  },
  "panels/browser_debugger/browser_debugger-meta.ts | showContentScripts": {
    "message": "Inhaltskripte anzeigen"
  },
  "panels/browser_debugger/browser_debugger-meta.ts | showCspViolationBreakpoints": {
    "message": "Haltepunkte für CSP-Verstöße anzeigen"
  },
  "panels/browser_debugger/browser_debugger-meta.ts | showDomBreakpoints": {
    "message": "DOM-Haltepunkte anzeigen"
  },
  "panels/browser_debugger/browser_debugger-meta.ts | showEventListenerBreakpoints": {
    "message": "Event-Listener-Haltepunkte anzeigen"
  },
  "panels/browser_debugger/browser_debugger-meta.ts | showGlobalListeners": {
    "message": "Globale Listener anzeigen"
  },
  "panels/browser_debugger/browser_debugger-meta.ts | showOverrides": {
    "message": "Überschreibungen anzeigen"
  },
  "panels/browser_debugger/browser_debugger-meta.ts | showPage": {
    "message": "Seite anzeigen"
  },
  "panels/browser_debugger/browser_debugger-meta.ts | showXhrfetchBreakpoints": {
    "message": "XHR/fetch-Haltepunkte anzeigen"
  },
  "panels/browser_debugger/browser_debugger-meta.ts | xhrfetchBreakpoints": {
    "message": "XHR/fetch-Haltepunkte"
  },
  "panels/changes/ChangesSidebar.ts | sFromSourceMap": {
    "message": "{PH1} (aus Quellzuordnung)"
  },
  "panels/changes/ChangesView.ts | binaryData": {
    "message": "Binärdaten"
  },
  "panels/changes/ChangesView.ts | copy": {
    "message": "Kopieren"
  },
  "panels/changes/ChangesView.ts | noChanges": {
    "message": "Keine Änderungen"
  },
  "panels/changes/ChangesView.ts | sDeletions": {
    "message": "{n,plural, =1{# Löschung (-)}other{# Löschungen (-)}}"
  },
  "panels/changes/ChangesView.ts | sInsertions": {
    "message": "{n,plural, =1{# Einfügung (+)}other{# Einfügungen (+)}}"
  },
  "panels/changes/changes-meta.ts | changes": {
    "message": "Änderungen"
  },
  "panels/changes/changes-meta.ts | copyAllChangesFromCurrentFile": {
    "message": "Alle Änderungen aus der geöffneten Datei kopieren"
  },
  "panels/changes/changes-meta.ts | revertAllChangesToCurrentFile": {
    "message": "Alle Änderungen an der aktuellen Datei rückgängig machen"
  },
  "panels/changes/changes-meta.ts | showChanges": {
    "message": "Änderungen anzeigen"
  },
  "panels/console/ConsoleContextSelector.ts | extension": {
    "message": "Erweiterung"
  },
  "panels/console/ConsoleContextSelector.ts | javascriptContextNotSelected": {
    "message": "JavaScript-Kontext: Nicht ausgewählt"
  },
  "panels/console/ConsoleContextSelector.ts | javascriptContextS": {
    "message": "JavaScript-Kontext: {PH1}"
  },
  "panels/console/ConsolePinPane.ts | evaluateAllowingSideEffects": {
    "message": "Bewerten und Nebenwirkungen zulassen"
  },
  "panels/console/ConsolePinPane.ts | expression": {
    "message": "Ausdruck"
  },
  "panels/console/ConsolePinPane.ts | liveExpressionEditor": {
    "message": "Live-Ausdruck-Editor"
  },
  "panels/console/ConsolePinPane.ts | notAvailable": {
    "message": "Nicht verfügbar"
  },
  "panels/console/ConsolePinPane.ts | removeAllExpressions": {
    "message": "Alle Ausdrücke entfernen"
  },
  "panels/console/ConsolePinPane.ts | removeBlankExpression": {
    "message": "Leeren Ausdruck entfernen"
  },
  "panels/console/ConsolePinPane.ts | removeExpression": {
    "message": "Ausdruck entfernen"
  },
  "panels/console/ConsolePinPane.ts | removeExpressionS": {
    "message": "Ausdruck entfernen: {PH1}"
  },
  "panels/console/ConsolePrompt.ts | allowPasting": {
    "message": "Einfügen erlauben"
  },
  "panels/console/ConsolePrompt.ts | consolePrompt": {
    "message": "Konsolenaufforderung"
  },
  "panels/console/ConsolePrompt.ts | selfXssWarning": {
    "message": "Achtung: Füge keinen Code in die Entwicklertools-Konsole ein, den du nicht verstehst oder nicht selbst geprüft hast. Dies könnte Angreifern ermöglichen, deine Identität zu stehlen oder die Kontrolle über deinen Computer zu erlangen. Gib unten „{PH1}“ ein, um das Einfügen zu erlauben."
  },
  "panels/console/ConsoleSidebar.ts | dErrors": {
    "message": "{n,plural, =0{Keine Fehler}=1{# Fehler}other{# Fehler}}"
  },
  "panels/console/ConsoleSidebar.ts | dInfo": {
    "message": "{n,plural, =0{Keine Informationen}=1{# Information}other{# Informationen}}"
  },
  "panels/console/ConsoleSidebar.ts | dMessages": {
    "message": "{n,plural, =0{Keine Nachrichten}=1{# Nachricht}other{# Nachrichten}}"
  },
  "panels/console/ConsoleSidebar.ts | dUserMessages": {
    "message": "{n,plural, =0{Keine Nutzernachrichten}=1{# Nutzernachricht}other{# Nutzernachrichten}}"
  },
  "panels/console/ConsoleSidebar.ts | dVerbose": {
    "message": "{n,plural, =0{Nicht ausführlich}=1{# ausführliche}other{# ausführliche}}"
  },
  "panels/console/ConsoleSidebar.ts | dWarnings": {
    "message": "{n,plural, =0{Keine Warnungen}=1{# Warnung}other{# Warnungen}}"
  },
  "panels/console/ConsoleSidebar.ts | other": {
    "message": "<other>"
  },
  "panels/console/ConsoleView.ts | allLevels": {
    "message": "Alle Ebenen"
  },
  "panels/console/ConsoleView.ts | autocompleteFromHistory": {
    "message": "Automatisch aus dem Verlauf vervollständigen"
  },
  "panels/console/ConsoleView.ts | consoleCleared": {
    "message": "Konsole gelöscht"
  },
  "panels/console/ConsoleView.ts | consoleSettings": {
    "message": "Konsoleneinstellungen"
  },
  "panels/console/ConsoleView.ts | consoleSidebarHidden": {
    "message": "Seitenleiste der Konsole ist ausgeblendet"
  },
  "panels/console/ConsoleView.ts | consoleSidebarShown": {
    "message": "Seitenleiste der Konsole ist eingeblendet"
  },
  "panels/console/ConsoleView.ts | copyVisibleStyledSelection": {
    "message": "Sichtbare stilangepasste Auswahl kopieren"
  },
  "panels/console/ConsoleView.ts | customLevels": {
    "message": "Angepasste Stufen"
  },
  "panels/console/ConsoleView.ts | default": {
    "message": "Standard"
  },
  "panels/console/ConsoleView.ts | defaultLevels": {
    "message": "Standardlevel"
  },
  "panels/console/ConsoleView.ts | doNotClearLogOnPageReload": {
    "message": "Protokoll beim Aktualisieren/Bedienen der Seite nicht löschen"
  },
  "panels/console/ConsoleView.ts | eagerlyEvaluateTextInThePrompt": {
    "message": "Text in der Aufforderung aufmerksam bewerten"
  },
  "panels/console/ConsoleView.ts | egEventdCdnUrlacom": {
    "message": "Beispiel: /eventd/ -cdn url:a.com"
  },
  "panels/console/ConsoleView.ts | errors": {
    "message": "Fehler"
  },
  "panels/console/ConsoleView.ts | filter": {
    "message": "Filtern"
  },
  "panels/console/ConsoleView.ts | filteredMessagesInConsole": {
    "message": "{PH1} Nachrichten in der Konsole"
  },
  "panels/console/ConsoleView.ts | findStringInLogs": {
    "message": "String in Protokollen finden"
  },
  "panels/console/ConsoleView.ts | groupSimilarMessagesInConsole": {
    "message": "Ähnliche Nachrichten in der Konsole gruppieren"
  },
  "panels/console/ConsoleView.ts | hideAll": {
    "message": "Alle ausblenden"
  },
  "panels/console/ConsoleView.ts | hideConsoleSidebar": {
    "message": "Seitenleiste „Konsole“ ausblenden"
  },
  "panels/console/ConsoleView.ts | hideMessagesFromS": {
    "message": "Nachrichten von {PH1} verbergen"
  },
  "panels/console/ConsoleView.ts | hideNetwork": {
    "message": "Netzwerk verbergen"
  },
  "panels/console/ConsoleView.ts | info": {
    "message": "Info"
  },
  "panels/console/ConsoleView.ts | issueToolbarClickToGoToTheIssuesTab": {
    "message": "Klicken, um auf den Tab „Probleme“ zu gehen"
  },
  "panels/console/ConsoleView.ts | issueToolbarClickToView": {
    "message": "Klicken, um {issueEnumeration} anzusehen"
  },
  "panels/console/ConsoleView.ts | issueToolbarTooltipGeneral": {
    "message": "Einige Probleme erzeugen keine Konsolenmeldungen mehr, sondern werden auf dem Tab „Probleme“ angezeigt."
  },
  "panels/console/ConsoleView.ts | issuesWithColon": {
    "message": "{n,plural, =0{Keine Probleme}=1{# Problem:}other{# Probleme:}}"
  },
  "panels/console/ConsoleView.ts | logLevelS": {
    "message": "Protokollebene: {PH1}"
  },
  "panels/console/ConsoleView.ts | logLevels": {
    "message": "Protokollebenen"
  },
  "panels/console/ConsoleView.ts | logXMLHttpRequests": {
    "message": "Log XMLHttpRequests-Anfragen"
  },
  "panels/console/ConsoleView.ts | onlyShowMessagesFromTheCurrentContext": {
    "message": "Nur Nachrichten aus dem aktuellen Kontext anzeigen (top, iframe, worker, Erweiterung)"
  },
  "panels/console/ConsoleView.ts | overriddenByFilterSidebar": {
    "message": "Von Filterseitenleiste überschrieben"
  },
  "panels/console/ConsoleView.ts | preserveLog": {
    "message": "Protokoll beibehalten"
  },
  "panels/console/ConsoleView.ts | replayXhr": {
    "message": "XHR wiederholen"
  },
  "panels/console/ConsoleView.ts | sHidden": {
    "message": "{n,plural, =1{# ausgeblendet}other{# ausgeblendet}}"
  },
  "panels/console/ConsoleView.ts | sOnly": {
    "message": "Nur {PH1}"
  },
  "panels/console/ConsoleView.ts | saveAs": {
    "message": "Speichern unter…"
  },
  "panels/console/ConsoleView.ts | searching": {
    "message": "Wird gesucht…"
  },
  "panels/console/ConsoleView.ts | selectedContextOnly": {
    "message": "Nur ausgewählter Kontext"
  },
  "panels/console/ConsoleView.ts | showConsoleSidebar": {
    "message": "Seitenleiste „Konsole“ anzeigen"
  },
  "panels/console/ConsoleView.ts | showCorsErrorsInConsole": {
    "message": "„CORS“-Fehler in Konsole anzeigen"
  },
  "panels/console/ConsoleView.ts | treatEvaluationAsUserActivation": {
    "message": "Evaluierung als Nutzeraktivität werten"
  },
  "panels/console/ConsoleView.ts | verbose": {
    "message": "Ausführlich"
  },
  "panels/console/ConsoleView.ts | warnings": {
    "message": "Warnungen"
  },
  "panels/console/ConsoleView.ts | writingFile": {
    "message": "Schreiben in Datei…"
  },
  "panels/console/ConsoleViewMessage.ts | Mxx": {
    "message": " M<XX>"
  },
  "panels/console/ConsoleViewMessage.ts | assertionFailed": {
    "message": "Assertion fehlgeschlagen: "
  },
  "panels/console/ConsoleViewMessage.ts | attribute": {
    "message": "<Attribut>"
  },
  "panels/console/ConsoleViewMessage.ts | clearAllMessagesWithS": {
    "message": "Alle Nachrichten mit {PH1} löschen"
  },
  "panels/console/ConsoleViewMessage.ts | cndBreakpoint": {
    "message": "Bedingter Haltepunkt"
  },
  "panels/console/ConsoleViewMessage.ts | console": {
    "message": "Konsole"
  },
  "panels/console/ConsoleViewMessage.ts | consoleWasCleared": {
    "message": "Konsole wurde geleert"
  },
  "panels/console/ConsoleViewMessage.ts | consoleclearWasPreventedDueTo": {
    "message": "console.clear() wurde aufgrund von „Preserve log“ verhindert"
  },
  "panels/console/ConsoleViewMessage.ts | deprecationS": {
    "message": "[Deprecation] {PH1}"
  },
  "panels/console/ConsoleViewMessage.ts | error": {
    "message": "Fehler"
  },
  "panels/console/ConsoleViewMessage.ts | errorS": {
    "message": "{n,plural, =1{Fehler, # Mal wiederholt}other{Fehler, # Male wiederholt}}"
  },
  "panels/console/ConsoleViewMessage.ts | exception": {
    "message": "<exception>"
  },
  "panels/console/ConsoleViewMessage.ts | explainThisError": {
    "message": "Diesen Fehler erklären"
  },
  "panels/console/ConsoleViewMessage.ts | explainThisMessage": {
    "message": "Diese Nachricht erklären"
  },
  "panels/console/ConsoleViewMessage.ts | explainThisWarning": {
    "message": "Diese Warnung erklären"
  },
  "panels/console/ConsoleViewMessage.ts | functionWasResolvedFromBound": {
    "message": "Die Funktion wurde aus einer gebundenen Funktion gelöst."
  },
  "panels/console/ConsoleViewMessage.ts | index": {
    "message": "(Index)"
  },
  "panels/console/ConsoleViewMessage.ts | interventionS": {
    "message": "[Intervention] {PH1}"
  },
  "panels/console/ConsoleViewMessage.ts | logpoint": {
    "message": "Logpoint"
  },
  "panels/console/ConsoleViewMessage.ts | repeatS": {
    "message": "{n,plural, =1{# Mal wiederholt}other{# Mal wiederholt}}"
  },
  "panels/console/ConsoleViewMessage.ts | someEvent": {
    "message": "<some>-Ereignis"
  },
  "panels/console/ConsoleViewMessage.ts | stackMessageCollapsed": {
    "message": "Stacktabelle minimiert"
  },
  "panels/console/ConsoleViewMessage.ts | stackMessageExpanded": {
    "message": "Stacktabelle maximiert"
  },
  "panels/console/ConsoleViewMessage.ts | thisValueWasEvaluatedUponFirst": {
    "message": "Dieser Wert wurde bei der ersten Maximierung ausgewertet. Möglicherweise hat er sich seitdem verändert."
  },
  "panels/console/ConsoleViewMessage.ts | thisValueWillNotBeCollectedUntil": {
    "message": "Dieser Wert wird erst erfasst, wenn der Konsoleninhalt gelöscht ist."
  },
  "panels/console/ConsoleViewMessage.ts | tookNms": {
    "message": "Zeit: <N> ms"
  },
  "panels/console/ConsoleViewMessage.ts | url": {
    "message": "<URL>"
  },
  "panels/console/ConsoleViewMessage.ts | value": {
    "message": "Wert"
  },
  "panels/console/ConsoleViewMessage.ts | violationS": {
    "message": "[Violation] {PH1}"
  },
  "panels/console/ConsoleViewMessage.ts | warning": {
    "message": "Warnung"
  },
  "panels/console/ConsoleViewMessage.ts | warningS": {
    "message": "{n,plural, =1{Warnung, # Mal wiederholt}other{Warnung, # Mal wiederholt}}"
  },
  "panels/console/console-meta.ts | autocompleteFromHistory": {
    "message": "Automatisch aus dem Verlauf vervollständigen"
  },
  "panels/console/console-meta.ts | autocompleteOnEnter": {
    "message": "Automatisch vervollständigten Vorschlag bei Drücken von Eingabe akzeptieren"
  },
  "panels/console/console-meta.ts | clearConsole": {
    "message": "Konsole löschen"
  },
  "panels/console/console-meta.ts | clearConsoleHistory": {
    "message": "Konsolenverlauf löschen"
  },
  "panels/console/console-meta.ts | collapseConsoleTraceMessagesByDefault": {
    "message": "console.trace()-Nachrichten nicht automatisch maximieren"
  },
  "panels/console/console-meta.ts | console": {
    "message": "Konsole"
  },
  "panels/console/console-meta.ts | createLiveExpression": {
    "message": "Live-Ausdruck erstellen"
  },
  "panels/console/console-meta.ts | doNotAutocompleteFromHistory": {
    "message": "Keine automatische Vervollständigung aus dem Verlauf"
  },
  "panels/console/console-meta.ts | doNotAutocompleteOnEnter": {
    "message": "Automatisch vervollständigten Vorschlag bei Drücken von Eingabe nicht akzeptieren"
  },
  "panels/console/console-meta.ts | doNotEagerlyEvaluateConsole": {
    "message": "Text in der Console-Aufforderung nicht aufmerksam bewerten"
  },
  "panels/console/console-meta.ts | doNotGroupSimilarMessagesIn": {
    "message": "Ähnliche Nachrichten in der Konsole nicht gruppieren"
  },
  "panels/console/console-meta.ts | doNotShowCorsErrorsIn": {
    "message": "„CORS“-Fehler nicht in der Konsole anzeigen"
  },
  "panels/console/console-meta.ts | doNotTreatEvaluationAsUser": {
    "message": "Evaluation nicht als Nutzeraktivität werten"
  },
  "panels/console/console-meta.ts | eagerEvaluation": {
    "message": "Genaue Auswertung"
  },
  "panels/console/console-meta.ts | eagerlyEvaluateConsolePromptText": {
    "message": "Text in der Console-Aufforderung aufmerksam bewerten"
  },
  "panels/console/console-meta.ts | evaluateTriggersUserActivation": {
    "message": "Codeevaluierung als Nutzeraktion behandeln"
  },
  "panels/console/console-meta.ts | expandConsoleTraceMessagesByDefault": {
    "message": "console.trace()-Nachrichten automatisch maximieren"
  },
  "panels/console/console-meta.ts | groupSimilarMessagesInConsole": {
    "message": "Ähnliche Nachrichten in der Konsole gruppieren"
  },
  "panels/console/console-meta.ts | hideNetworkMessages": {
    "message": "Netzwerk-Benachrichtigungen verbergen"
  },
  "panels/console/console-meta.ts | hideTimestamps": {
    "message": "Zeitstempel ausblenden"
  },
  "panels/console/console-meta.ts | logXmlhttprequests": {
    "message": "Log XMLHttpRequests-Anfragen"
  },
  "panels/console/console-meta.ts | onlyShowMessagesFromTheCurrent": {
    "message": "Nur Nachrichten aus dem aktuellen Kontext anzeigen (top, iframe, worker, Erweiterung)"
  },
  "panels/console/console-meta.ts | selectedContextOnly": {
    "message": "Nur ausgewählter Kontext"
  },
  "panels/console/console-meta.ts | showConsole": {
    "message": "Konsole anzeigen"
  },
  "panels/console/console-meta.ts | showCorsErrorsInConsole": {
    "message": "„CORS“-Fehler in Konsole anzeigen"
  },
  "panels/console/console-meta.ts | showMessagesFromAllContexts": {
    "message": "Nachrichten aller Kontexte anzeigen"
  },
  "panels/console/console-meta.ts | showNetworkMessages": {
    "message": "Netzwerk-Benachrichtigungen anzeigen"
  },
  "panels/console/console-meta.ts | showTimestamps": {
    "message": "Zeitstempel anzeigen"
  },
  "panels/console/console-meta.ts | toggleConsole": {
    "message": "Konsole ein- bzw. ausblenden"
  },
  "panels/console/console-meta.ts | treatEvaluationAsUserActivation": {
    "message": "Evaluierung als Nutzeraktivität werten"
  },
  "panels/console_counters/WarningErrorCounter.ts | openConsoleToViewS": {
    "message": "Konsole öffnen, um {PH1} anzuzeigen"
  },
  "panels/console_counters/WarningErrorCounter.ts | openIssuesToView": {
    "message": "{n,plural, =1{Probleme öffnen, um # Problem anzusehen:}other{Probleme öffnen, um # Probleme anzusehen:}}"
  },
  "panels/console_counters/WarningErrorCounter.ts | sErrors": {
    "message": "{n,plural, =1{# Fehler}other{# Fehler}}"
  },
  "panels/console_counters/WarningErrorCounter.ts | sWarnings": {
    "message": "{n,plural, =1{# Warnung}other{# Warnungen}}"
  },
  "panels/coverage/CoverageListView.ts | codeCoverage": {
    "message": "Codeabdeckung"
  },
  "panels/coverage/CoverageListView.ts | css": {
    "message": "CSS"
  },
  "panels/coverage/CoverageListView.ts | jsCoverageWithPerBlock": {
    "message": "JS-Abdeckung mit Detaillierungsgrad pro Block: Sobald ein JavaScript-Block ausgeführt wurde, wird er als abgedeckt markiert."
  },
  "panels/coverage/CoverageListView.ts | jsCoverageWithPerFunction": {
    "message": "JS-Abdeckung mit Details pro Funktion: Sobald eine Funktion ausgeführt wurde, wird die gesamte Funktion als abgedeckt markiert."
  },
  "panels/coverage/CoverageListView.ts | jsPerBlock": {
    "message": "JS (pro Block)"
  },
  "panels/coverage/CoverageListView.ts | jsPerFunction": {
    "message": "JS (pro Funktion)"
  },
  "panels/coverage/CoverageListView.ts | sBytes": {
    "message": "{n,plural, =1{# Byte}other{# Byte}}"
  },
  "panels/coverage/CoverageListView.ts | sBytesS": {
    "message": "{n,plural, =1{# Byte, {percentage}}other{# Byte, {percentage}}}"
  },
  "panels/coverage/CoverageListView.ts | sBytesSBelongToBlocksOf": {
    "message": "{PH1} Byte ({PH2}) gehören zu JavaScript-Blöcken, die (noch) nicht ausgeführt wurden."
  },
  "panels/coverage/CoverageListView.ts | sBytesSBelongToBlocksOfJavascript": {
    "message": "{PH1} Byte ({PH2}) gehören zu JavaScript-Blocks, die mindestens einmal ausgeführt wurden."
  },
  "panels/coverage/CoverageListView.ts | sBytesSBelongToFunctionsThatHave": {
    "message": "{PH1} Bytes ({PH2}) gehören zu Funktionen, die (noch) nicht ausgeführt wurden."
  },
  "panels/coverage/CoverageListView.ts | sBytesSBelongToFunctionsThatHaveExecuted": {
    "message": "{PH1} Byte ({PH2}) gehören zu Funktionen, die mindestens einmal ausgeführt wurden."
  },
  "panels/coverage/CoverageListView.ts | sOfFileUnusedSOfFileUsed": {
    "message": "{PH1} % der Datei werden nicht genutzt, {PH2} % werden genutzt"
  },
  "panels/coverage/CoverageListView.ts | totalBytes": {
    "message": "Bytes insgesamt:"
  },
  "panels/coverage/CoverageListView.ts | type": {
    "message": "Typ"
  },
  "panels/coverage/CoverageListView.ts | unusedBytes": {
    "message": "Nicht verwendete Bytes"
  },
  "panels/coverage/CoverageListView.ts | url": {
    "message": "URL"
  },
  "panels/coverage/CoverageListView.ts | usageVisualization": {
    "message": "Nutzungsvisualisierung"
  },
  "panels/coverage/CoverageView.ts | activationNoCapture": {
    "message": "Informationen zur Abdeckung konnten nicht erhoben werden, weil die Seite im Hintergrund vorab gerendert wurde."
  },
  "panels/coverage/CoverageView.ts | all": {
    "message": "Alles"
  },
  "panels/coverage/CoverageView.ts | bfcacheNoCapture": {
    "message": "Informationen zur Abdeckung konnten nicht erhoben werden, weil die Seite aus dem Back-Forward-Cache geladen wurde."
  },
  "panels/coverage/CoverageView.ts | chooseCoverageGranularityPer": {
    "message": "Detaillierungsgrad der Abdeckung auswählen: „Pro Funktion“ hat niedrigen Overhead, „Pro Block“ hat erheblichen Overhead."
  },
  "panels/coverage/CoverageView.ts | clickTheRecordButtonSToStart": {
    "message": "Klicke die Aufnahmeschaltfläche {PH1}, um die Aufnahme der Abdeckung zu starten."
  },
  "panels/coverage/CoverageView.ts | clickTheReloadButtonSToReloadAnd": {
    "message": "Klicke auf die Schaltfläche zum Aktualisieren {PH1}, um neu zu laden und die Aufnahme der Abdeckung zu starten."
  },
  "panels/coverage/CoverageView.ts | contentScripts": {
    "message": "Inhaltskripte"
  },
  "panels/coverage/CoverageView.ts | css": {
    "message": "CSS"
  },
  "panels/coverage/CoverageView.ts | filterCoverageByType": {
    "message": "Filterabdeckung nach Typ"
  },
  "panels/coverage/CoverageView.ts | filteredSTotalS": {
    "message": "Gefiltert: {PH1}  Gesamt: {PH2}"
  },
  "panels/coverage/CoverageView.ts | includeExtensionContentScripts": {
    "message": "Inhaltskripte für Erweiterung einschließen"
  },
  "panels/coverage/CoverageView.ts | javascript": {
    "message": "JavaScript"
  },
  "panels/coverage/CoverageView.ts | perBlock": {
    "message": "Per Block"
  },
  "panels/coverage/CoverageView.ts | perFunction": {
    "message": "Pro Funktion"
  },
  "panels/coverage/CoverageView.ts | reloadPrompt": {
    "message": "Klicke auf die Schaltfläche zum Aktualisieren {PH1}, um die Seite neu zu laden und eine Abdeckung zu erhalten."
  },
  "panels/coverage/CoverageView.ts | sOfSSUsedSoFarSUnused": {
    "message": "Bisher genutzt {PH1} von {PH2} ({PH3} %), {PH4} ungenutzt."
  },
  "panels/coverage/CoverageView.ts | urlFilter": {
    "message": "URL-Filter"
  },
  "panels/coverage/coverage-meta.ts | clearCoverage": {
    "message": "Transparente Abdeckung"
  },
  "panels/coverage/coverage-meta.ts | coverage": {
    "message": "Abdeckung"
  },
  "panels/coverage/coverage-meta.ts | exportCoverage": {
    "message": "Exportabdeckung"
  },
  "panels/coverage/coverage-meta.ts | instrumentCoverage": {
    "message": "Instrument-Abdeckung"
  },
  "panels/coverage/coverage-meta.ts | showCoverage": {
    "message": "Abdeckung einblenden"
  },
  "panels/coverage/coverage-meta.ts | startInstrumentingCoverageAnd": {
    "message": "Instrumentierungs-Abdeckung starten und Seite aktualisieren"
  },
  "panels/coverage/coverage-meta.ts | stopInstrumentingCoverageAndShow": {
    "message": "Instrumentierungs-Abdeckung beenden und Ergebnisse anzeigen"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | aa": {
    "message": "AA"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | aaa": {
    "message": "AAA"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | apca": {
    "message": "APCA"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | attributeSelectors": {
    "message": "Attribut-Selectors"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | backgroundColorsS": {
    "message": "Hintergrundfarben: {PH1}"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | borderColorsS": {
    "message": "Rahmenfarben: {PH1}"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | classSelectors": {
    "message": "Klassenselektoren"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | colors": {
    "message": "Farben"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | contrastIssues": {
    "message": "Kontrastprobleme"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | contrastIssuesS": {
    "message": "Kontrastprobleme: {PH1}"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | contrastRatio": {
    "message": "Kontrastverhältnis"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | cssOverviewElements": {
    "message": "Elemente der CSS-Übersicht"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | declaration": {
    "message": "Deklaration"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | element": {
    "message": "Element"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | elements": {
    "message": "Elemente"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | externalStylesheets": {
    "message": "Externe Stylesheets"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | fillColorsS": {
    "message": "Füllfarben: {PH1}"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | fontInfo": {
    "message": "Informationen zur Schriftart"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | idSelectors": {
    "message": "ID-Selectors"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | inlineStyleElements": {
    "message": "Inline-Style-Elemente"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | mediaQueries": {
    "message": "Medienabfragen"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | nOccurrences": {
    "message": "{n,plural, =1{# Vorkommen}other{# Vorkommen}}"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | nonsimpleSelectors": {
    "message": "Nicht-einfache Selectors"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | overviewSummary": {
    "message": "Zusammenfassung der Übersicht"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | showElement": {
    "message": "Element anzeigen"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | source": {
    "message": "Quelle"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | styleRules": {
    "message": "Formatregeln"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | textColorSOverSBackgroundResults": {
    "message": "Textfarbe {PH1} über dem Hintergrund {PH2} führt zu geringem Kontrast für {PH3}-Elemente"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | textColorsS": {
    "message": "Schriftfarben: {PH1}"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | thereAreNoFonts": {
    "message": "Es sind keine Schriftarten vorhanden."
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | thereAreNoMediaQueries": {
    "message": "Es gibt keine Medienabfragen."
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | thereAreNoUnusedDeclarations": {
    "message": "Es sind keine unbenutzten Deklarationen vorhanden."
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | typeSelectors": {
    "message": "Typ-Selektoren"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | universalSelectors": {
    "message": "Universalselektoren"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | unusedDeclarations": {
    "message": "Nicht verwendete Deklarationen"
  },
  "panels/css_overview/CSSOverviewProcessingView.ts | cancel": {
    "message": "Abbrechen"
  },
  "panels/css_overview/CSSOverviewSidebarPanel.ts | clearOverview": {
    "message": "Übersicht löschen"
  },
  "panels/css_overview/CSSOverviewSidebarPanel.ts | cssOverviewPanelSidebar": {
    "message": "Seitenleiste des Bereichs „CSS-Übersicht“"
  },
  "panels/css_overview/CSSOverviewUnusedDeclarations.ts | bottomAppliedToAStatically": {
    "message": "Bottom wurde auf ein statisch positioniertes Element angewendet"
  },
  "panels/css_overview/CSSOverviewUnusedDeclarations.ts | heightAppliedToAnInlineElement": {
    "message": "Height wurde auf ein Inline-Element angewendet"
  },
  "panels/css_overview/CSSOverviewUnusedDeclarations.ts | leftAppliedToAStatically": {
    "message": "Left wurden auf ein statisch positioniertes Element angewendet"
  },
  "panels/css_overview/CSSOverviewUnusedDeclarations.ts | rightAppliedToAStatically": {
    "message": "Right wurden auf ein statisch positioniertes Element angewendet"
  },
  "panels/css_overview/CSSOverviewUnusedDeclarations.ts | topAppliedToAStatically": {
    "message": "Top wurde auf ein statisch positioniertes Element angewendet"
  },
  "panels/css_overview/CSSOverviewUnusedDeclarations.ts | verticalAlignmentAppliedTo": {
    "message": "Vertikale Ausrichtung, die auf ein Element angewendet wird, das weder inline noch table-cell ist"
  },
  "panels/css_overview/CSSOverviewUnusedDeclarations.ts | widthAppliedToAnInlineElement": {
    "message": "Width wurde auf ein Inline-Element angewendet"
  },
  "panels/css_overview/components/CSSOverviewStartView.ts | captureOverview": {
    "message": "Aufnahmenübersicht"
  },
  "panels/css_overview/components/CSSOverviewStartView.ts | capturePageCSSOverview": {
    "message": "Eine Übersicht über das CSS deiner Seite aufnehmen"
  },
  "panels/css_overview/components/CSSOverviewStartView.ts | identifyCSSImprovements": {
    "message": "CSS-Verbesserungsmöglichkeiten entdecken"
  },
  "panels/css_overview/components/CSSOverviewStartView.ts | identifyCSSImprovementsWithExampleIssues": {
    "message": "Nach Verbesserungsmöglichkeiten für das CSS suchen (z. B. niedriger Kontrast, nicht verwendete Deklarationen, Unstimmigkeiten hinsichtlich Farben oder Schriftarten)"
  },
  "panels/css_overview/components/CSSOverviewStartView.ts | locateAffectedElements": {
    "message": "Die betroffenen Elemente im Elementbereich finden"
  },
  "panels/css_overview/components/CSSOverviewStartView.ts | quickStartWithCSSOverview": {
    "message": "Schnelleinstieg: Erste Schritte mit dem Bereich „CSS-Übersicht“"
  },
  "panels/css_overview/css_overview-meta.ts | cssOverview": {
    "message": "CSS-Übersicht"
  },
  "panels/css_overview/css_overview-meta.ts | showCssOverview": {
    "message": "CSS-Übersicht anzeigen"
  },
  "panels/developer_resources/DeveloperResourcesListView.ts | copyInitiatorUrl": {
    "message": "Initiator-URL kopieren"
  },
  "panels/developer_resources/DeveloperResourcesListView.ts | copyUrl": {
    "message": "URL kopieren"
  },
  "panels/developer_resources/DeveloperResourcesListView.ts | developerResources": {
    "message": "Ressourcen für Entwickler"
  },
  "panels/developer_resources/DeveloperResourcesListView.ts | error": {
    "message": "Fehler"
  },
  "panels/developer_resources/DeveloperResourcesListView.ts | failure": {
    "message": "Fehler"
  },
  "panels/developer_resources/DeveloperResourcesListView.ts | initiator": {
    "message": "Initiator"
  },
  "panels/developer_resources/DeveloperResourcesListView.ts | pending": {
    "message": "ausstehend"
  },
  "panels/developer_resources/DeveloperResourcesListView.ts | sBytes": {
    "message": "{n,plural, =1{# Byte}other{# Byte}}"
  },
  "panels/developer_resources/DeveloperResourcesListView.ts | status": {
    "message": "Status"
  },
  "panels/developer_resources/DeveloperResourcesListView.ts | success": {
    "message": "Fertig"
  },
  "panels/developer_resources/DeveloperResourcesListView.ts | totalBytes": {
    "message": "Bytes insgesamt:"
  },
  "panels/developer_resources/DeveloperResourcesListView.ts | url": {
    "message": "URL"
  },
  "panels/developer_resources/DeveloperResourcesView.ts | enableLoadingThroughTarget": {
    "message": "Durch Website laden"
  },
  "panels/developer_resources/DeveloperResourcesView.ts | enterTextToSearchTheUrlAndError": {
    "message": "Gib Text ein, um in den Spalten für URL und Fehler zu suchen"
  },
  "panels/developer_resources/DeveloperResourcesView.ts | loadHttpsDeveloperResources": {
    "message": "HTTP(S)-Entwicklerressourcen über die Website laden, die du prüfst, nicht über die Entwicklertools"
  },
  "panels/developer_resources/DeveloperResourcesView.ts | resources": {
    "message": "{n,plural, =1{# Ressource}other{# Ressourcen}}"
  },
  "panels/developer_resources/DeveloperResourcesView.ts | resourcesCurrentlyLoading": {
    "message": "{PH1} Ressourcen, {PH2} werden derzeit geladen"
  },
  "panels/developer_resources/developer_resources-meta.ts | developerResources": {
    "message": "Ressourcen für Entwickler"
  },
  "panels/developer_resources/developer_resources-meta.ts | showDeveloperResources": {
    "message": "Ressourcen für Entwickler anzeigen"
  },
  "panels/elements/CSSRuleValidator.ts | flexGridContainerPropertyRuleFix": {
    "message": "Versuche, {PROPERTY_NAME} für das Containerelement festzulegen oder verwende stattdessen {ALTERNATIVE_PROPERTY_NAME}."
  },
  "panels/elements/CSSRuleValidator.ts | flexGridContainerPropertyRuleReason": {
    "message": "Dieses Element ist ein {CONTAINER_DISPLAY_NAME}-Element, d. h. ein untergeordnetes Element eines {CONTAINER_DISPLAY_NAME}-Containers. {PROPERTY_NAME} gilt jedoch nur für Container."
  },
  "panels/elements/CSSRuleValidator.ts | fontVariationSettingsWarning": {
    "message": "Der Wert zum Festlegen von „{PH1}“ {PH2} liegt nicht im unterstützten Bereich [{PH3}, {PH4}] für die Schriftfamilie „{PH5}“."
  },
  "panels/elements/CSSRuleValidator.ts | ruleViolatedByParentElementRuleFix": {
    "message": "Versuche, das Attribut „{EXISTING_PARENT_ELEMENT_RULE}“ des übergeordneten Elements auf „{TARGET_PARENT_ELEMENT_RULE}“ festzulegen."
  },
  "panels/elements/CSSRuleValidator.ts | ruleViolatedByParentElementRuleReason": {
    "message": "Aufgrund des Attributs „{REASON_PROPERTY_DECLARATION_CODE}“ für das übergeordnete Element hat „{AFFECTED_PROPERTY_DECLARATION_CODE}“ keinen Effekt."
  },
  "panels/elements/CSSRuleValidator.ts | ruleViolatedBySameElementRuleChangeFlexOrGrid": {
    "message": "Füge {DISPLAY_GRID_RULE} oder {DISPLAY_FLEX_RULE} hinzu, um dieses Element in einen Container zu verwandeln."
  },
  "panels/elements/CSSRuleValidator.ts | ruleViolatedBySameElementRuleChangeSuggestion": {
    "message": "Versuche, das Attribut „{EXISTING_PROPERTY_DECLARATION}“ auf „{TARGET_PROPERTY_DECLARATION}“ festzulegen."
  },
  "panels/elements/CSSRuleValidator.ts | ruleViolatedBySameElementRuleFix": {
    "message": "Versuche, „{PROPERTY_NAME}“ auf etwas anderes als „{PROPERTY_VALUE}“ festzulegen."
  },
  "panels/elements/CSSRuleValidator.ts | ruleViolatedBySameElementRuleReason": {
    "message": "Aufgrund des Attributs „{REASON_PROPERTY_DECLARATION_CODE}“ hat „{AFFECTED_PROPERTY_DECLARATION_CODE}“ keinen Effekt."
  },
  "panels/elements/ClassesPaneWidget.ts | addNewClass": {
    "message": "Neue Klasse hinzufügen"
  },
  "panels/elements/ClassesPaneWidget.ts | classSAdded": {
    "message": "{PH1}-Klasse hinzugefügt"
  },
  "panels/elements/ClassesPaneWidget.ts | classesSAdded": {
    "message": "{PH1}-Klassen hinzugefügt"
  },
  "panels/elements/ClassesPaneWidget.ts | elementClasses": {
    "message": "Elementklassen"
  },
  "panels/elements/ColorSwatchPopoverIcon.ts | openCubicBezierEditor": {
    "message": "Editor für kubische Bézierkurve öffnen"
  },
  "panels/elements/ColorSwatchPopoverIcon.ts | openShadowEditor": {
    "message": "Schatten-Editor öffnen"
  },
  "panels/elements/ComputedStyleWidget.ts | filter": {
    "message": "Filtern"
  },
  "panels/elements/ComputedStyleWidget.ts | filterComputedStyles": {
    "message": "Berechnete Stile filtern"
  },
  "panels/elements/ComputedStyleWidget.ts | group": {
    "message": "Gruppieren"
  },
  "panels/elements/ComputedStyleWidget.ts | navigateToSelectorSource": {
    "message": "Zur Selector-Quelle gehen"
  },
  "panels/elements/ComputedStyleWidget.ts | navigateToStyle": {
    "message": "Zu „Stil“ gehen"
  },
  "panels/elements/ComputedStyleWidget.ts | noMatchingProperty": {
    "message": "Keine passende Property"
  },
  "panels/elements/ComputedStyleWidget.ts | showAll": {
    "message": "Alle anzeigen"
  },
  "panels/elements/DOMLinkifier.ts | node": {
    "message": "<Knoten>"
  },
  "panels/elements/ElementStatePaneWidget.ts | forceElementState": {
    "message": "Elementstatus erzwingen"
  },
  "panels/elements/ElementStatePaneWidget.ts | toggleElementState": {
    "message": "Elementstatus ein-/ausblenden"
  },
  "panels/elements/ElementsPanel.ts | computed": {
    "message": "Berechnet"
  },
  "panels/elements/ElementsPanel.ts | computedStylesHidden": {
    "message": "Seitenleiste mit berechneten Stilen ist ausgeblendet"
  },
  "panels/elements/ElementsPanel.ts | computedStylesShown": {
    "message": "Seitenleiste mit berechneten Stilen ist eingeblendet"
  },
  "panels/elements/ElementsPanel.ts | domTreeExplorer": {
    "message": "DOM-Baum-Explorer"
  },
  "panels/elements/ElementsPanel.ts | elementStateS": {
    "message": "Elementstatus: {PH1}"
  },
  "panels/elements/ElementsPanel.ts | findByStringSelectorOrXpath": {
    "message": "Nach Zeichenfolge, Selector oder XPath suchen"
  },
  "panels/elements/ElementsPanel.ts | hideComputedStylesSidebar": {
    "message": "Seitenleiste mit berechneten Stilen ausblenden"
  },
  "panels/elements/ElementsPanel.ts | nodeCannotBeFoundInTheCurrent": {
    "message": "Knoten kann auf der aktuellen Seite nicht gefunden werden."
  },
  "panels/elements/ElementsPanel.ts | revealInElementsPanel": {
    "message": "Im Elementbereich anzeigen"
  },
  "panels/elements/ElementsPanel.ts | showComputedStylesSidebar": {
    "message": "Seitenleiste mit berechneten Stilen anzeigen"
  },
  "panels/elements/ElementsPanel.ts | sidePanelContent": {
    "message": "Inhalte der Seitenleiste"
  },
  "panels/elements/ElementsPanel.ts | sidePanelToolbar": {
    "message": "Symbolleiste der Seitenleiste"
  },
  "panels/elements/ElementsPanel.ts | styles": {
    "message": "Stile"
  },
  "panels/elements/ElementsPanel.ts | switchToAccessibilityTreeView": {
    "message": "Zur Baumansicht für Barrierefreiheit wechseln"
  },
  "panels/elements/ElementsPanel.ts | switchToDomTreeView": {
    "message": "Zur DOM-Baumansicht wechseln"
  },
  "panels/elements/ElementsPanel.ts | theDeferredDomNodeCouldNotBe": {
    "message": "Der zurückgestellte DOM-Knoten konnte nicht in einen gültigen Knoten aufgelöst werden."
  },
  "panels/elements/ElementsPanel.ts | theRemoteObjectCouldNotBe": {
    "message": "Das Remote-Objekt konnte nicht in einen gültigen Knoten aufgelöst werden."
  },
  "panels/elements/ElementsTreeElement.ts | addAttribute": {
    "message": "Attribut hinzufügen"
  },
  "panels/elements/ElementsTreeElement.ts | captureNodeScreenshot": {
    "message": "Knoten-Screenshot aufnehmen"
  },
  "panels/elements/ElementsTreeElement.ts | children": {
    "message": "Untergeordnete Elemente:"
  },
  "panels/elements/ElementsTreeElement.ts | collapseChildren": {
    "message": "Untergeordnete Elemente minimieren"
  },
  "panels/elements/ElementsTreeElement.ts | copy": {
    "message": "Kopieren"
  },
  "panels/elements/ElementsTreeElement.ts | copyElement": {
    "message": "Element kopieren"
  },
  "panels/elements/ElementsTreeElement.ts | copyFullXpath": {
    "message": "Vollständigen XPath kopieren"
  },
  "panels/elements/ElementsTreeElement.ts | copyJsPath": {
    "message": "JS-Pfad kopieren"
  },
  "panels/elements/ElementsTreeElement.ts | copyOuterhtml": {
    "message": "outerHTML kopieren"
  },
  "panels/elements/ElementsTreeElement.ts | copySelector": {
    "message": "selector kopieren"
  },
  "panels/elements/ElementsTreeElement.ts | copyStyles": {
    "message": "Stile kopieren"
  },
  "panels/elements/ElementsTreeElement.ts | copyXpath": {
    "message": "XPath kopieren"
  },
  "panels/elements/ElementsTreeElement.ts | cut": {
    "message": "Ausschneiden"
  },
  "panels/elements/ElementsTreeElement.ts | deleteElement": {
    "message": "Element löschen"
  },
  "panels/elements/ElementsTreeElement.ts | disableFlexMode": {
    "message": "Flexiblen Modus deaktivieren"
  },
  "panels/elements/ElementsTreeElement.ts | disableGridMode": {
    "message": "Rastermodus deaktivieren"
  },
  "panels/elements/ElementsTreeElement.ts | disableScrollSnap": {
    "message": "Scroll-Snap-Overlay deaktivieren"
  },
  "panels/elements/ElementsTreeElement.ts | duplicateElement": {
    "message": "Element duplizieren"
  },
  "panels/elements/ElementsTreeElement.ts | editAsHtml": {
    "message": "Als HTML bearbeiten"
  },
  "panels/elements/ElementsTreeElement.ts | editAttribute": {
    "message": "Attribut bearbeiten"
  },
  "panels/elements/ElementsTreeElement.ts | editText": {
    "message": "Text bearbeiten"
  },
  "panels/elements/ElementsTreeElement.ts | enableFlexMode": {
    "message": "Flexiblen Modus aktivieren"
  },
  "panels/elements/ElementsTreeElement.ts | enableGridMode": {
    "message": "Rastermodus aktivieren"
  },
  "panels/elements/ElementsTreeElement.ts | enableScrollSnap": {
    "message": "Scroll-Snap-Overlay aktivieren"
  },
  "panels/elements/ElementsTreeElement.ts | expandRecursively": {
    "message": "Wiederkehrend maximieren"
  },
  "panels/elements/ElementsTreeElement.ts | focus": {
    "message": "Fokussieren"
  },
  "panels/elements/ElementsTreeElement.ts | forceState": {
    "message": "Status erzwingen"
  },
  "panels/elements/ElementsTreeElement.ts | hideElement": {
    "message": "Element ausblenden"
  },
  "panels/elements/ElementsTreeElement.ts | openMediaPanel": {
    "message": "Zum Bereich „Medien“ springen"
  },
  "panels/elements/ElementsTreeElement.ts | paste": {
    "message": "Einfügen"
  },
  "panels/elements/ElementsTreeElement.ts | scrollIntoView": {
    "message": "In die Ansicht hineinscrollen"
  },
  "panels/elements/ElementsTreeElement.ts | showFrameDetails": {
    "message": "Details für iframe anzeigen"
  },
  "panels/elements/ElementsTreeElement.ts | thisFrameWasIdentifiedAsAnAd": {
    "message": "Dieser Frame wurde als Anzeigen-Frame identifiziert"
  },
  "panels/elements/ElementsTreeElement.ts | useSInTheConsoleToReferToThis": {
    "message": "{PH1} in der Konsole verwenden, um auf dieses Element zu verweisen."
  },
  "panels/elements/ElementsTreeElement.ts | valueIsTooLargeToEdit": {
    "message": "<Wert ist zu groß zum Bearbeiten>"
  },
  "panels/elements/ElementsTreeOutline.ts | adornerSettings": {
    "message": "Kennzeicheneinstellungen…"
  },
  "panels/elements/ElementsTreeOutline.ts | pageDom": {
    "message": "Seiten-DOM"
  },
  "panels/elements/ElementsTreeOutline.ts | reveal": {
    "message": "anzeigen"
  },
  "panels/elements/ElementsTreeOutline.ts | showAllNodesDMore": {
    "message": "Alle Knoten anzeigen ({PH1} mehr)"
  },
  "panels/elements/ElementsTreeOutline.ts | storeAsGlobalVariable": {
    "message": "Als globale Variable speichern"
  },
  "panels/elements/EventListenersWidget.ts | all": {
    "message": "Alles"
  },
  "panels/elements/EventListenersWidget.ts | ancestors": {
    "message": "Ancestors"
  },
  "panels/elements/EventListenersWidget.ts | blocking": {
    "message": "Wird blockiert"
  },
  "panels/elements/EventListenersWidget.ts | eventListenersCategory": {
    "message": "Ereignis-Listener-Kategorie"
  },
  "panels/elements/EventListenersWidget.ts | frameworkListeners": {
    "message": "Framework-Listener"
  },
  "panels/elements/EventListenersWidget.ts | passive": {
    "message": "Passiv"
  },
  "panels/elements/EventListenersWidget.ts | resolveEventListenersBoundWith": {
    "message": "Auflösen von mit Framework gebundenen Ereignis-Listenern"
  },
  "panels/elements/EventListenersWidget.ts | showListenersOnTheAncestors": {
    "message": "Listener auf den Ancestors anzeigen"
  },
  "panels/elements/LayersWidget.ts | cssLayersTitle": {
    "message": "CSS-Ebenen"
  },
  "panels/elements/LayersWidget.ts | toggleCSSLayers": {
    "message": "CSS-Ebenenansicht ein-/ausblenden"
  },
  "panels/elements/MarkerDecorator.ts | domBreakpoint": {
    "message": "DOM-Haltepunkt"
  },
  "panels/elements/MarkerDecorator.ts | elementIsHidden": {
    "message": "Element ist ausgeblendet"
  },
  "panels/elements/NodeStackTraceWidget.ts | noStackTraceAvailable": {
    "message": "Kein Stacktrace verfügbar"
  },
  "panels/elements/PlatformFontsWidget.ts | dGlyphs": {
    "message": "{n,plural, =1{(# Glyphe)}other{(# Glyphen)}}"
  },
  "panels/elements/PlatformFontsWidget.ts | familyName": {
    "message": "Nachname"
  },
  "panels/elements/PlatformFontsWidget.ts | fontOrigin": {
    "message": "Ursprung der Schriftart"
  },
  "panels/elements/PlatformFontsWidget.ts | localFile": {
    "message": "Lokale Datei"
  },
  "panels/elements/PlatformFontsWidget.ts | networkResource": {
    "message": "Netzwerkressource"
  },
  "panels/elements/PlatformFontsWidget.ts | postScriptName": {
    "message": "PostScript-Name"
  },
  "panels/elements/PlatformFontsWidget.ts | renderedFonts": {
    "message": "Gerenderte Schriftarten"
  },
  "panels/elements/PropertiesWidget.ts | filter": {
    "message": "Filter"
  },
  "panels/elements/PropertiesWidget.ts | filterProperties": {
    "message": "Properties filtern"
  },
  "panels/elements/PropertiesWidget.ts | noMatchingProperty": {
    "message": "Keine passende Property"
  },
  "panels/elements/PropertiesWidget.ts | showAll": {
    "message": "Alle anzeigen"
  },
  "panels/elements/PropertiesWidget.ts | showAllTooltip": {
    "message": "Wenn dieses Häkchen entfernt ist, werden nur Properties angezeigt, deren Wert weder „null“ noch unbestimmt ist"
  },
  "panels/elements/StylePropertiesSection.ts | constructedStylesheet": {
    "message": "erstelltes Stylesheet"
  },
  "panels/elements/StylePropertiesSection.ts | copyAllCSSChanges": {
    "message": "Alle CSS-Änderungen kopieren"
  },
  "panels/elements/StylePropertiesSection.ts | copyAllDeclarations": {
    "message": "Alle Deklarationen kopieren"
  },
  "panels/elements/StylePropertiesSection.ts | copyRule": {
    "message": "Regel kopieren"
  },
  "panels/elements/StylePropertiesSection.ts | copySelector": {
    "message": "selector kopieren"
  },
  "panels/elements/StylePropertiesSection.ts | cssSelector": {
    "message": "CSS-Auswahl"
  },
  "panels/elements/StylePropertiesSection.ts | injectedStylesheet": {
    "message": "eingeschleustes Stylesheet"
  },
  "panels/elements/StylePropertiesSection.ts | insertStyleRuleBelow": {
    "message": "Stilregel unten einfügen"
  },
  "panels/elements/StylePropertiesSection.ts | sattributesStyle": {
    "message": "{PH1}[Attributstil]"
  },
  "panels/elements/StylePropertiesSection.ts | showAllPropertiesSMore": {
    "message": "Alle Properties anzeigen ({PH1} mehr)"
  },
  "panels/elements/StylePropertiesSection.ts | styleAttribute": {
    "message": "Attribut „style“"
  },
  "panels/elements/StylePropertiesSection.ts | userAgentStylesheet": {
    "message": "User-Agent-Stylesheet"
  },
  "panels/elements/StylePropertiesSection.ts | viaInspector": {
    "message": "über den Inspector"
  },
  "panels/elements/StylePropertyTreeElement.ts | copyAllCSSChanges": {
    "message": "Alle CSS-Änderungen kopieren"
  },
  "panels/elements/StylePropertyTreeElement.ts | copyAllCssDeclarationsAsJs": {
    "message": "Alle Deklarationen als JS kopieren"
  },
  "panels/elements/StylePropertyTreeElement.ts | copyAllDeclarations": {
    "message": "Alle Deklarationen kopieren"
  },
  "panels/elements/StylePropertyTreeElement.ts | copyCssDeclarationAsJs": {
    "message": "Deklaration als JS kopieren"
  },
  "panels/elements/StylePropertyTreeElement.ts | copyDeclaration": {
    "message": "Deklaration kopieren"
  },
  "panels/elements/StylePropertyTreeElement.ts | copyProperty": {
    "message": "Property kopieren"
  },
  "panels/elements/StylePropertyTreeElement.ts | copyRule": {
    "message": "Regel kopieren"
  },
  "panels/elements/StylePropertyTreeElement.ts | copyValue": {
    "message": "Wert kopieren"
  },
  "panels/elements/StylePropertyTreeElement.ts | flexboxEditorButton": {
    "message": "flexbox-Editor öffnen"
  },
  "panels/elements/StylePropertyTreeElement.ts | gridEditorButton": {
    "message": "grid-Editor öffnen"
  },
  "panels/elements/StylePropertyTreeElement.ts | openColorPickerS": {
    "message": "Farbauswahl öffnen. {PH1}"
  },
  "panels/elements/StylePropertyTreeElement.ts | revealInSourcesPanel": {
    "message": "Im Quellenbereich anzeigen"
  },
  "panels/elements/StylePropertyTreeElement.ts | shiftClickToChangeColorFormat": {
    "message": "Bei gedrückter Umschalttaste klicken, um das Farbformat zu ändern."
  },
  "panels/elements/StylePropertyTreeElement.ts | togglePropertyAndContinueEditing": {
    "message": "Property umschalten und mit der Bearbeitung fortfahren"
  },
  "panels/elements/StylePropertyTreeElement.ts | viewComputedValue": {
    "message": "Berechneten Wert ansehen"
  },
  "panels/elements/StylesSidebarPane.ts | automaticDarkMode": {
    "message": "Automatischer dunkler Modus"
  },
  "panels/elements/StylesSidebarPane.ts | clickToRevealLayer": {
    "message": "Klicken, um die Ebene in der Ebenenstruktur einzublenden"
  },
  "panels/elements/StylesSidebarPane.ts | copiedToClipboard": {
    "message": "In Zwischenablage kopiert"
  },
  "panels/elements/StylesSidebarPane.ts | copyAllCSSChanges": {
    "message": "CSS-Änderungen kopieren"
  },
  "panels/elements/StylesSidebarPane.ts | cssPropertyName": {
    "message": "CSS-Property-Name: {PH1}"
  },
  "panels/elements/StylesSidebarPane.ts | cssPropertyValue": {
    "message": "CSS-Property-Wert: {PH1}"
  },
  "panels/elements/StylesSidebarPane.ts | filter": {
    "message": "Filtern"
  },
  "panels/elements/StylesSidebarPane.ts | filterStyles": {
    "message": "Stile filtern"
  },
  "panels/elements/StylesSidebarPane.ts | incrementdecrementWithMousewheelHundred": {
    "message": "Mit Mausrad oder Auf-/Ab-Tasten erhöhen/verringern. {PH1}: ±100, Umschalttaste: ±10, Alt: ±0,1"
  },
  "panels/elements/StylesSidebarPane.ts | incrementdecrementWithMousewheelOne": {
    "message": "Mit Mausrad oder Auf-/Ab-Tasten erhöhen/verringern. {PH1}: R ±1, Umschalttaste: G ±1, Alt: B ±1"
  },
  "panels/elements/StylesSidebarPane.ts | inheritedFromSPseudoOf": {
    "message": "Übernommen von ::{PH1} Pseudo zu "
  },
  "panels/elements/StylesSidebarPane.ts | inheritedFroms": {
    "message": "Übernommen von "
  },
  "panels/elements/StylesSidebarPane.ts | invalidPropertyValue": {
    "message": "Ungültiger Property-Wert"
  },
  "panels/elements/StylesSidebarPane.ts | invalidString": {
    "message": "{PH1}, Property-Name: {PH2}, Property-Wert: {PH3}"
  },
  "panels/elements/StylesSidebarPane.ts | layer": {
    "message": "Ebene"
  },
  "panels/elements/StylesSidebarPane.ts | noMatchingSelectorOrStyle": {
    "message": "Kein passender Selector oder Stil gefunden"
  },
  "panels/elements/StylesSidebarPane.ts | pseudoSElement": {
    "message": "Pseudo ::{PH1}-Element"
  },
  "panels/elements/StylesSidebarPane.ts | specificity": {
    "message": "Spezifität: {PH1}"
  },
  "panels/elements/StylesSidebarPane.ts | toggleRenderingEmulations": {
    "message": "Häufige Rendering-Emulationen aktivieren/deaktivieren"
  },
  "panels/elements/StylesSidebarPane.ts | unknownPropertyName": {
    "message": "Unbekannter Property-Name"
  },
  "panels/elements/StylesSidebarPane.ts | visibleSelectors": {
    "message": "{n,plural, =1{# sichtbares Auswahlelement unten aufgeführt}other{# sichtbare Auswahlelemente unten aufgeführt}}"
  },
  "panels/elements/TopLayerContainer.ts | reveal": {
    "message": "anzeigen"
  },
  "panels/elements/components/AccessibilityTreeNode.ts | ignored": {
    "message": "Ignoriert"
  },
  "panels/elements/components/AdornerSettingsPane.ts | closeButton": {
    "message": "Schließen"
  },
  "panels/elements/components/AdornerSettingsPane.ts | settingsTitle": {
    "message": "Kennzeichen anzeigen"
  },
  "panels/elements/components/CSSHintDetailsView.ts | learnMore": {
    "message": "Weitere Informationen"
  },
  "panels/elements/components/CSSPropertyDocsView.ts | dontShow": {
    "message": "Nicht anzeigen"
  },
  "panels/elements/components/CSSPropertyDocsView.ts | learnMore": {
    "message": "Weitere Informationen"
  },
  "panels/elements/components/CSSVariableValueView.ts | invalidPropertyValue": {
    "message": "Ungültiger Attributwert; erwarteter Typ: {type}"
  },
  "panels/elements/components/CSSVariableValueView.ts | registeredPropertyLinkTitle": {
    "message": "Registriertes Attribut ansehen"
  },
  "panels/elements/components/CSSVariableValueView.ts | sIsNotDefined": {
    "message": "{PH1} ist nicht definiert"
  },
  "panels/elements/components/ElementsBreadcrumbs.ts | breadcrumbs": {
    "message": "DOM-Baum-Navigationspfad"
  },
  "panels/elements/components/ElementsBreadcrumbs.ts | scrollLeft": {
    "message": "Nach links scrollen"
  },
  "panels/elements/components/ElementsBreadcrumbs.ts | scrollRight": {
    "message": "Nach rechts scrollen"
  },
  "panels/elements/components/ElementsBreadcrumbsUtils.ts | text": {
    "message": "(Text)"
  },
  "panels/elements/components/LayoutPane.ts | chooseElementOverlayColor": {
    "message": "Overlay-Farbe für dieses Element wählen"
  },
  "panels/elements/components/LayoutPane.ts | colorPickerOpened": {
    "message": "Farbauswahl geöffnet."
  },
  "panels/elements/components/LayoutPane.ts | flexbox": {
    "message": "Flexbox"
  },
  "panels/elements/components/LayoutPane.ts | flexboxOverlays": {
    "message": "Flexbox-Overlays"
  },
  "panels/elements/components/LayoutPane.ts | grid": {
    "message": "Raster"
  },
  "panels/elements/components/LayoutPane.ts | gridOverlays": {
    "message": "Raster-Overlays"
  },
  "panels/elements/components/LayoutPane.ts | noFlexboxLayoutsFoundOnThisPage": {
    "message": "Keine Flexbox-Layouts auf dieser Seite gefunden"
  },
  "panels/elements/components/LayoutPane.ts | noGridLayoutsFoundOnThisPage": {
    "message": "Keine Raster-Layouts auf dieser Seite gefunden"
  },
  "panels/elements/components/LayoutPane.ts | overlayDisplaySettings": {
    "message": "Overlay-Displayeinstellungen"
  },
  "panels/elements/components/LayoutPane.ts | showElementInTheElementsPanel": {
    "message": "Element im Elementbereich anzeigen"
  },
  "panels/elements/components/StylePropertyEditor.ts | deselectButton": {
    "message": "{propertyName} entfernen: {propertyValue}"
  },
  "panels/elements/components/StylePropertyEditor.ts | selectButton": {
    "message": "{propertyName} hinzufügen: {propertyValue}"
  },
  "panels/elements/elements-meta.ts | captureAreaScreenshot": {
    "message": "Screenshot vom Bereich aufnehmen"
  },
  "panels/elements/elements-meta.ts | copyStyles": {
    "message": "Stile kopieren"
  },
  "panels/elements/elements-meta.ts | disableDomWordWrap": {
    "message": "DOM-Zeilenumbruch deaktivieren"
  },
  "panels/elements/elements-meta.ts | duplicateElement": {
    "message": "Element duplizieren"
  },
  "panels/elements/elements-meta.ts | editAsHtml": {
    "message": "Als HTML bearbeiten"
  },
  "panels/elements/elements-meta.ts | elements": {
    "message": "Elemente"
  },
  "panels/elements/elements-meta.ts | enableDomWordWrap": {
    "message": "Zeilenumbruch für DOM aktivieren"
  },
  "panels/elements/elements-meta.ts | eventListeners": {
    "message": "Ereignis-Listener"
  },
  "panels/elements/elements-meta.ts | hideElement": {
    "message": "Element ausblenden"
  },
  "panels/elements/elements-meta.ts | hideHtmlComments": {
    "message": "HTML Kommentare ausblenden"
  },
  "panels/elements/elements-meta.ts | layout": {
    "message": "Layout"
  },
  "panels/elements/elements-meta.ts | newStyleRule": {
    "message": "Neue Stilregel"
  },
  "panels/elements/elements-meta.ts | properties": {
    "message": "Eigenschaften"
  },
  "panels/elements/elements-meta.ts | redo": {
    "message": "Wiederholen"
  },
  "panels/elements/elements-meta.ts | refreshEventListeners": {
    "message": "Event-Listener aktualisieren"
  },
  "panels/elements/elements-meta.ts | revealDomNodeOnHover": {
    "message": "DOM-Knoten anzeigen, wenn der Mauszeiger darüber bewegt wird"
  },
  "panels/elements/elements-meta.ts | selectAnElementInThePageTo": {
    "message": "Element auf der Seite auswählen, um es zu prüfen"
  },
  "panels/elements/elements-meta.ts | showCSSDocumentationTooltip": {
    "message": "Kurzinfo zur CSS-Dokumentation anzeigen"
  },
  "panels/elements/elements-meta.ts | showComputedStyles": {
    "message": "Berechnete Stile anzeigen"
  },
  "panels/elements/elements-meta.ts | showDetailedInspectTooltip": {
    "message": "Detaillierte Kurzinfo „Inspizieren“ anzeigen"
  },
  "panels/elements/elements-meta.ts | showElements": {
    "message": "Elemente anzeigen"
  },
  "panels/elements/elements-meta.ts | showEventListeners": {
    "message": "Ereignis-Listener anzeigen"
  },
  "panels/elements/elements-meta.ts | showHtmlComments": {
    "message": "HTML Kommentare anzeigen"
  },
  "panels/elements/elements-meta.ts | showLayout": {
    "message": "Layout anzeigen"
  },
  "panels/elements/elements-meta.ts | showProperties": {
    "message": "Properties anzeigen"
  },
  "panels/elements/elements-meta.ts | showStackTrace": {
    "message": "Stacktrace anzeigen"
  },
  "panels/elements/elements-meta.ts | showStyles": {
    "message": "Stile anzeigen"
  },
  "panels/elements/elements-meta.ts | showUserAgentShadowDOM": {
    "message": "User-Agent-Shadow DOM anzeigen"
  },
  "panels/elements/elements-meta.ts | stackTrace": {
    "message": "Stacktrace"
  },
  "panels/elements/elements-meta.ts | toggleEyeDropper": {
    "message": "Pipette ein-/ausschalten"
  },
  "panels/elements/elements-meta.ts | undo": {
    "message": "Rückgängig machen"
  },
  "panels/elements/elements-meta.ts | wordWrap": {
    "message": "Zeilenumbruch"
  },
  "panels/emulation/DeviceModeToolbar.ts | addDevicePixelRatio": {
    "message": "Pixel-Verhältnis des Geräts hinzufügen"
  },
  "panels/emulation/DeviceModeToolbar.ts | addDeviceType": {
    "message": "Gerätetyp hinzufügen"
  },
  "panels/emulation/DeviceModeToolbar.ts | autoadjustZoom": {
    "message": "Zoom automatisch anpassen"
  },
  "panels/emulation/DeviceModeToolbar.ts | closeDevtools": {
    "message": "Entwicklertools schließen"
  },
  "panels/emulation/DeviceModeToolbar.ts | defaultF": {
    "message": "Standard: {PH1}"
  },
  "panels/emulation/DeviceModeToolbar.ts | devicePixelRatio": {
    "message": "Pixel-Verhältnis des Geräts"
  },
  "panels/emulation/DeviceModeToolbar.ts | devicePosture": {
    "message": "Gerätestatus"
  },
  "panels/emulation/DeviceModeToolbar.ts | deviceType": {
    "message": "Gerätetyp"
  },
  "panels/emulation/DeviceModeToolbar.ts | dimensions": {
    "message": "Abmessungen"
  },
  "panels/emulation/DeviceModeToolbar.ts | edit": {
    "message": "Bearbeiten…"
  },
  "panels/emulation/DeviceModeToolbar.ts | experimentalWebPlatformFeature": {
    "message": "Experimental Web Platform Feature-Flag ist aktiviert. Zum Deaktivieren darauf klicken."
  },
  "panels/emulation/DeviceModeToolbar.ts | experimentalWebPlatformFeatureFlag": {
    "message": "Experimental Web Platform Feature-Flag ist deaktiviert. Zum Aktivieren darauf klicken."
  },
  "panels/emulation/DeviceModeToolbar.ts | fitToWindowF": {
    "message": "An Fenster anpassen ({PH1} %)"
  },
  "panels/emulation/DeviceModeToolbar.ts | heightLeaveEmptyForFull": {
    "message": "Höhe (für volle Höhe leer lassen)"
  },
  "panels/emulation/DeviceModeToolbar.ts | hideDeviceFrame": {
    "message": "Geräterahmen ausblenden"
  },
  "panels/emulation/DeviceModeToolbar.ts | hideMediaQueries": {
    "message": "Medienabfragen ausblenden"
  },
  "panels/emulation/DeviceModeToolbar.ts | hideRulers": {
    "message": "Lineale ausblenden"
  },
  "panels/emulation/DeviceModeToolbar.ts | landscape": {
    "message": "Querformat"
  },
  "panels/emulation/DeviceModeToolbar.ts | moreOptions": {
    "message": "Weitere Optionen"
  },
  "panels/emulation/DeviceModeToolbar.ts | none": {
    "message": "Keiner"
  },
  "panels/emulation/DeviceModeToolbar.ts | portrait": {
    "message": "Hochformat"
  },
  "panels/emulation/DeviceModeToolbar.ts | removeDevicePixelRatio": {
    "message": "Pixel-Verhältnis des Geräts entfernen"
  },
  "panels/emulation/DeviceModeToolbar.ts | removeDeviceType": {
    "message": "Gerätetyp entfernen"
  },
  "panels/emulation/DeviceModeToolbar.ts | resetToDefaults": {
    "message": "Auf Standardeinstellungen zurücksetzen"
  },
  "panels/emulation/DeviceModeToolbar.ts | responsive": {
    "message": "Responsiv"
  },
  "panels/emulation/DeviceModeToolbar.ts | rotate": {
    "message": "Drehen"
  },
  "panels/emulation/DeviceModeToolbar.ts | screenOrientationOptions": {
    "message": "Optionen für die Bildschirmausrichtung"
  },
  "panels/emulation/DeviceModeToolbar.ts | showDeviceFrame": {
    "message": "Geräterahmen anzeigen"
  },
  "panels/emulation/DeviceModeToolbar.ts | showMediaQueries": {
    "message": "Medienabfragen anzeigen"
  },
  "panels/emulation/DeviceModeToolbar.ts | showRulers": {
    "message": "Lineale anzeigen"
  },
  "panels/emulation/DeviceModeToolbar.ts | toggleDualscreenMode": {
    "message": "Dual-Screen-Modus umschalten"
  },
  "panels/emulation/DeviceModeToolbar.ts | width": {
    "message": "Breite"
  },
  "panels/emulation/DeviceModeToolbar.ts | zoom": {
    "message": "Zoom"
  },
  "panels/emulation/DeviceModeView.ts | doubleclickForFullHeight": {
    "message": "Klicke doppelt, um die volle Höhe anzuzeigen"
  },
  "panels/emulation/DeviceModeView.ts | laptop": {
    "message": "Laptop"
  },
  "panels/emulation/DeviceModeView.ts | laptopL": {
    "message": "Laptop L"
  },
  "panels/emulation/DeviceModeView.ts | mobileL": {
    "message": "Mobile L"
  },
  "panels/emulation/DeviceModeView.ts | mobileM": {
    "message": "Mobile M"
  },
  "panels/emulation/DeviceModeView.ts | mobileS": {
    "message": "Mobile S"
  },
  "panels/emulation/DeviceModeView.ts | tablet": {
    "message": "Tablet"
  },
  "panels/emulation/MediaQueryInspector.ts | revealInSourceCode": {
    "message": "Im Quellcode anzeigen"
  },
  "panels/emulation/emulation-meta.ts | captureFullSizeScreenshot": {
    "message": "Screenshot in voller Größe aufnehmen"
  },
  "panels/emulation/emulation-meta.ts | captureNodeScreenshot": {
    "message": "Knoten-Screenshot aufnehmen"
  },
  "panels/emulation/emulation-meta.ts | captureScreenshot": {
    "message": "Screenshot erstellen"
  },
  "panels/emulation/emulation-meta.ts | device": {
    "message": "Gerät"
  },
  "panels/emulation/emulation-meta.ts | hideDeviceFrame": {
    "message": "Geräterahmen ausblenden"
  },
  "panels/emulation/emulation-meta.ts | hideMediaQueries": {
    "message": "Medienabfragen ausblenden"
  },
  "panels/emulation/emulation-meta.ts | hideRulers": {
    "message": "Lineale in der Gerätemodus-Symbolleiste ausblenden"
  },
  "panels/emulation/emulation-meta.ts | showDeviceFrame": {
    "message": "Geräterahmen anzeigen"
  },
  "panels/emulation/emulation-meta.ts | showMediaQueries": {
    "message": "Medienabfragen anzeigen"
  },
  "panels/emulation/emulation-meta.ts | showRulers": {
    "message": "Lineale in der Gerätemodus-Symbolleiste einblenden"
  },
  "panels/emulation/emulation-meta.ts | toggleDeviceToolbar": {
    "message": "Gerätesymbolleiste ein- und ausblenden"
  },
  "panels/event_listeners/EventListenersView.ts | deleteEventListener": {
    "message": "Event-Listener löschen"
  },
  "panels/event_listeners/EventListenersView.ts | noEventListeners": {
    "message": "Keine Ereignis-Listener"
  },
  "panels/event_listeners/EventListenersView.ts | passive": {
    "message": "Passiv"
  },
  "panels/event_listeners/EventListenersView.ts | remove": {
    "message": "Entfernen"
  },
  "panels/event_listeners/EventListenersView.ts | revealInElementsPanel": {
    "message": "Im Elementbereich anzeigen"
  },
  "panels/event_listeners/EventListenersView.ts | togglePassive": {
    "message": "Passiv ein-/ausschalten"
  },
  "panels/event_listeners/EventListenersView.ts | toggleWhetherEventListenerIs": {
    "message": "Schalter zum Einstellen, ob der Event-Listener passiv oder blockierend sein soll"
  },
  "panels/explain/components/ConsoleInsight.ts | closeInsight": {
    "message": "Statistik schließen"
  },
  "panels/explain/components/ConsoleInsight.ts | consoleMessage": {
    "message": "Konsolennachricht"
  },
  "panels/explain/components/ConsoleInsight.ts | error": {
    "message": "Ein Fehler ist aufgetreten…"
  },
  "panels/explain/components/ConsoleInsight.ts | generating": {
    "message": "Wird erstellt…"
  },
  "panels/explain/components/ConsoleInsight.ts | insight": {
    "message": "Statistik"
  },
  "panels/explain/components/ConsoleInsight.ts | networkRequest": {
    "message": "Netzwerkanfrage"
  },
  "panels/explain/components/ConsoleInsight.ts | opensInNewTab": {
    "message": "(wird in einem neuen Tab geöffnet)"
  },
  "panels/explain/components/ConsoleInsight.ts | relatedCode": {
    "message": "Zugehöriger Code"
  },
  "panels/explain/components/ConsoleInsight.ts | stackTrace": {
    "message": "Stacktrace"
  },
  "panels/explain/components/ConsoleInsight.ts | submitFeedback": {
    "message": "Feedback geben"
  },
  "panels/explain/explain-meta.ts | explainThisError": {
    "message": "Diesen Fehler erklären"
  },
  "panels/explain/explain-meta.ts | explainThisMessage": {
    "message": "Diese Nachricht erklären"
  },
  "panels/explain/explain-meta.ts | explainThisWarning": {
    "message": "Diese Warnung erklären"
  },
  "panels/issues/AffectedBlockedByResponseView.ts | blockedResource": {
    "message": "Blockierte Ressource"
  },
  "panels/issues/AffectedBlockedByResponseView.ts | nRequests": {
    "message": "{n,plural, =1{# Anfrage}other{# Anfragen}}"
  },
  "panels/issues/AffectedBlockedByResponseView.ts | parentFrame": {
    "message": "Übergeordneter Frame"
  },
  "panels/issues/AffectedBlockedByResponseView.ts | requestC": {
    "message": "Anfrage"
  },
  "panels/issues/AffectedCookiesView.ts | domain": {
    "message": "Domain"
  },
  "panels/issues/AffectedCookiesView.ts | filterSetCookieTitle": {
    "message": "Netzwerkanfragen, die diesen Set-Cookie-Header enthalten, im Netzwerkbereich anzeigen"
  },
  "panels/issues/AffectedCookiesView.ts | nCookies": {
    "message": "{n,plural, =1{# Cookie}other{# Cookies}}"
  },
  "panels/issues/AffectedCookiesView.ts | nRawCookieLines": {
    "message": "{n,plural, =1{1 Set-Cookie-Rohdaten-Header}other{# Set-Cookie-Rohdaten-Header}}"
  },
  "panels/issues/AffectedCookiesView.ts | name": {
    "message": "Name"
  },
  "panels/issues/AffectedCookiesView.ts | path": {
    "message": "Pfad"
  },
  "panels/issues/AffectedDirectivesView.ts | blocked": {
    "message": "blockiert"
  },
  "panels/issues/AffectedDirectivesView.ts | clickToRevealTheViolatingDomNode": {
    "message": "Klicke, um den richtlinienverletzenden DOM-Knoten im Elementbereich anzuzeigen"
  },
  "panels/issues/AffectedDirectivesView.ts | directiveC": {
    "message": "Anweisung"
  },
  "panels/issues/AffectedDirectivesView.ts | element": {
    "message": "Element"
  },
  "panels/issues/AffectedDirectivesView.ts | nDirectives": {
    "message": "{n,plural, =1{# Anweisung}other{# Anweisungen}}"
  },
  "panels/issues/AffectedDirectivesView.ts | reportonly": {
    "message": "Nur Berichterstellung"
  },
  "panels/issues/AffectedDirectivesView.ts | resourceC": {
    "message": "Ressource"
  },
  "panels/issues/AffectedDirectivesView.ts | sourceLocation": {
    "message": "Quelle"
  },
  "panels/issues/AffectedDirectivesView.ts | status": {
    "message": "Status"
  },
  "panels/issues/AffectedDocumentsInQuirksModeView.ts | documentInTheDOMTree": {
    "message": "Dokument im DOM-Baum"
  },
  "panels/issues/AffectedDocumentsInQuirksModeView.ts | mode": {
    "message": "Modus"
  },
  "panels/issues/AffectedDocumentsInQuirksModeView.ts | nDocuments": {
    "message": "{n,plural, =1{ Dokument}other{ Dokumente}}"
  },
  "panels/issues/AffectedDocumentsInQuirksModeView.ts | url": {
    "message": "URL"
  },
  "panels/issues/AffectedElementsView.ts | nElements": {
    "message": "{n,plural, =1{# Element}other{# Elemente}}"
  },
  "panels/issues/AffectedElementsWithLowContrastView.ts | contrastRatio": {
    "message": "Kontrastverhältnis"
  },
  "panels/issues/AffectedElementsWithLowContrastView.ts | element": {
    "message": "Element"
  },
  "panels/issues/AffectedElementsWithLowContrastView.ts | minimumAA": {
    "message": "Mindestverhältnis AA"
  },
  "panels/issues/AffectedElementsWithLowContrastView.ts | minimumAAA": {
    "message": "Mindestverhältnis AAA"
  },
  "panels/issues/AffectedElementsWithLowContrastView.ts | textSize": {
    "message": "Textgröße"
  },
  "panels/issues/AffectedElementsWithLowContrastView.ts | textWeight": {
    "message": "Schriftstärke"
  },
  "panels/issues/AffectedHeavyAdView.ts | cpuPeakLimit": {
    "message": "CPU-Spitzenbegrenzung"
  },
  "panels/issues/AffectedHeavyAdView.ts | cpuTotalLimit": {
    "message": "CPU-Limit gesamt"
  },
  "panels/issues/AffectedHeavyAdView.ts | frameUrl": {
    "message": "Frame-URL"
  },
  "panels/issues/AffectedHeavyAdView.ts | limitExceeded": {
    "message": "Limit überschritten"
  },
  "panels/issues/AffectedHeavyAdView.ts | nResources": {
    "message": "{n,plural, =1{# Ressource}other{# Ressourcen}}"
  },
  "panels/issues/AffectedHeavyAdView.ts | networkLimit": {
    "message": "Netzwerklimit"
  },
  "panels/issues/AffectedHeavyAdView.ts | removed": {
    "message": "Entfernt"
  },
  "panels/issues/AffectedHeavyAdView.ts | resolutionStatus": {
    "message": "Lösungsstatus"
  },
  "panels/issues/AffectedHeavyAdView.ts | warned": {
    "message": "Gewarnt"
  },
  "panels/issues/AffectedMetadataAllowedSitesView.ts | nAllowedSites": {
    "message": "{n,plural, =1{1 Website darf auf Cookies zugreifen}other{# Websites dürfen auf Cookies zugreifen}}"
  },
  "panels/issues/AffectedResourcesView.ts | clickToRevealTheFramesDomNodeIn": {
    "message": "Klicke, um den DOM-Knoten des Frames im Elementbereich anzuzeigen"
  },
  "panels/issues/AffectedResourcesView.ts | unavailable": {
    "message": "nicht verfügbar"
  },
  "panels/issues/AffectedResourcesView.ts | unknown": {
    "message": "Unbekannt"
  },
  "panels/issues/AffectedSharedArrayBufferIssueDetailsView.ts | aSharedarraybufferWas": {
    "message": "Ein SharedArrayBuffer wurde in einem Kontext instanziiert, der nicht ursprungsübergreifend isoliert ist"
  },
  "panels/issues/AffectedSharedArrayBufferIssueDetailsView.ts | blocked": {
    "message": "blockiert"
  },
  "panels/issues/AffectedSharedArrayBufferIssueDetailsView.ts | instantiation": {
    "message": "Instanziierung"
  },
  "panels/issues/AffectedSharedArrayBufferIssueDetailsView.ts | nViolations": {
    "message": "{n,plural, =1{# Verstoß}other{# Verstöße}}"
  },
  "panels/issues/AffectedSharedArrayBufferIssueDetailsView.ts | sharedarraybufferWasTransferedTo": {
    "message": "SharedArrayBuffer wurde an einen Kontext übertragen, der nicht ursprungsübergreifend isoliert ist"
  },
  "panels/issues/AffectedSharedArrayBufferIssueDetailsView.ts | sourceLocation": {
    "message": "Quellort"
  },
  "panels/issues/AffectedSharedArrayBufferIssueDetailsView.ts | status": {
    "message": "Status"
  },
  "panels/issues/AffectedSharedArrayBufferIssueDetailsView.ts | transfer": {
    "message": "Übertragung"
  },
  "panels/issues/AffectedSharedArrayBufferIssueDetailsView.ts | trigger": {
    "message": "Auslöser"
  },
  "panels/issues/AffectedSharedArrayBufferIssueDetailsView.ts | warning": {
    "message": "Warnung"
  },
  "panels/issues/AffectedSourcesView.ts | nSources": {
    "message": "{n,plural, =1{# Quelle}other{# Quellen}}"
  },
  "panels/issues/AffectedTrackingSitesView.ts | nTrackingSites": {
    "message": "{n,plural, =1{1 potenzielle Bounce-Tracking-Website}other{# potenzielle Bounce-Tracking-Websites}}"
  },
  "panels/issues/AttributionReportingIssueDetailsView.ts | element": {
    "message": "Element"
  },
  "panels/issues/AttributionReportingIssueDetailsView.ts | invalidHeaderValue": {
    "message": "Ungültiger Headerwert"
  },
  "panels/issues/AttributionReportingIssueDetailsView.ts | nViolations": {
    "message": "{n,plural, =1{# Verstoß}other{# Verstöße}}"
  },
  "panels/issues/AttributionReportingIssueDetailsView.ts | request": {
    "message": "Anfrage"
  },
  "panels/issues/AttributionReportingIssueDetailsView.ts | untrustworthyOrigin": {
    "message": "Nicht vertrauenswürdiger Ursprung"
  },
  "panels/issues/CorsIssueDetailsView.ts | allowCredentialsValueFromHeader": {
    "message": "Access-Control-Allow-Credentials Headerwert"
  },
  "panels/issues/CorsIssueDetailsView.ts | allowedOrigin": {
    "message": "Zulässiger Ursprung (vom Header)"
  },
  "panels/issues/CorsIssueDetailsView.ts | blocked": {
    "message": "blockiert"
  },
  "panels/issues/CorsIssueDetailsView.ts | disallowedRequestHeader": {
    "message": "Unzulässiger Anfrageheader"
  },
  "panels/issues/CorsIssueDetailsView.ts | disallowedRequestMethod": {
    "message": "Unzulässige Anfragemethode"
  },
  "panels/issues/CorsIssueDetailsView.ts | failedRequest": {
    "message": "Fehlgeschlagene Anfrage"
  },
  "panels/issues/CorsIssueDetailsView.ts | header": {
    "message": "Header"
  },
  "panels/issues/CorsIssueDetailsView.ts | initiatorAddressSpace": {
    "message": "Initiator-Adresse"
  },
  "panels/issues/CorsIssueDetailsView.ts | initiatorContext": {
    "message": "Initiator-Kontext"
  },
  "panels/issues/CorsIssueDetailsView.ts | insecure": {
    "message": "unsicher"
  },
  "panels/issues/CorsIssueDetailsView.ts | invalidValue": {
    "message": "Ungültiger Wert (soweit zutreffend)"
  },
  "panels/issues/CorsIssueDetailsView.ts | nRequests": {
    "message": "{n,plural, =1{# Anfrage}other{# Anfragen}}"
  },
  "panels/issues/CorsIssueDetailsView.ts | preflightDisallowedRedirect": {
    "message": "Antwort auf Preflight war eine Weiterleitung"
  },
  "panels/issues/CorsIssueDetailsView.ts | preflightInvalidStatus": {
    "message": "HTTP-Status der Preflight-Anfrage war nicht erfolgreich"
  },
  "panels/issues/CorsIssueDetailsView.ts | preflightRequest": {
    "message": "Preflight-Anfrage"
  },
  "panels/issues/CorsIssueDetailsView.ts | preflightRequestIfProblematic": {
    "message": "Preflight-Anfrage (sofern problematisch)"
  },
  "panels/issues/CorsIssueDetailsView.ts | problem": {
    "message": "Problem"
  },
  "panels/issues/CorsIssueDetailsView.ts | problemInvalidValue": {
    "message": "Ungültiger Wert"
  },
  "panels/issues/CorsIssueDetailsView.ts | problemMissingHeader": {
    "message": "Fehlender Header"
  },
  "panels/issues/CorsIssueDetailsView.ts | problemMultipleValues": {
    "message": "Mehrere Werte"
  },
  "panels/issues/CorsIssueDetailsView.ts | request": {
    "message": "Anfrage"
  },
  "panels/issues/CorsIssueDetailsView.ts | resourceAddressSpace": {
    "message": "Ressourcenadresse"
  },
  "panels/issues/CorsIssueDetailsView.ts | secure": {
    "message": "sicher"
  },
  "panels/issues/CorsIssueDetailsView.ts | sourceLocation": {
    "message": "Quellort"
  },
  "panels/issues/CorsIssueDetailsView.ts | status": {
    "message": "Status"
  },
  "panels/issues/CorsIssueDetailsView.ts | unsupportedScheme": {
    "message": "Nicht unterstütztes Schema"
  },
  "panels/issues/CorsIssueDetailsView.ts | warning": {
    "message": "Warnung"
  },
  "panels/issues/GenericIssueDetailsView.ts | frameId": {
    "message": "Frame"
  },
  "panels/issues/GenericIssueDetailsView.ts | nResources": {
    "message": "{n,plural, =1{# Ressource}other{# Ressourcen}}"
  },
  "panels/issues/GenericIssueDetailsView.ts | violatingNode": {
    "message": "Knoten mit Richtlinienverletzung"
  },
  "panels/issues/HiddenIssuesRow.ts | hiddenIssues": {
    "message": "Ausgeblendete Probleme"
  },
  "panels/issues/HiddenIssuesRow.ts | unhideAll": {
    "message": "Alle einblenden"
  },
  "panels/issues/IssueKindView.ts | hideAllCurrentBreakingChanges": {
    "message": "Alle aktuellen funktionsgefährdenden Änderungen ausblenden"
  },
  "panels/issues/IssueKindView.ts | hideAllCurrentImprovements": {
    "message": "Alle aktuellen Verbesserungen ausblenden"
  },
  "panels/issues/IssueKindView.ts | hideAllCurrentPageErrors": {
    "message": "Alle aktuellen Seitenfehler ausblenden"
  },
  "panels/issues/IssueView.ts | affectedResources": {
    "message": "Betroffene Ressourcen"
  },
  "panels/issues/IssueView.ts | automaticallyUpgraded": {
    "message": "automatisch aktualisiert"
  },
  "panels/issues/IssueView.ts | blocked": {
    "message": "blockiert"
  },
  "panels/issues/IssueView.ts | hideIssuesLikeThis": {
    "message": "Ähnliche Probleme ausblenden"
  },
  "panels/issues/IssueView.ts | learnMoreS": {
    "message": "Weitere Informationen: {PH1}"
  },
  "panels/issues/IssueView.ts | nRequests": {
    "message": "{n,plural, =1{# Anfrage}other{# Anfragen}}"
  },
  "panels/issues/IssueView.ts | nResources": {
    "message": "{n,plural, =1{# Ressource}other{# Ressourcen}}"
  },
  "panels/issues/IssueView.ts | name": {
    "message": "Name"
  },
  "panels/issues/IssueView.ts | restrictionStatus": {
    "message": "Einschränkungsstatus"
  },
  "panels/issues/IssueView.ts | unhideIssuesLikeThis": {
    "message": "Ähnliche Probleme einblenden"
  },
  "panels/issues/IssueView.ts | warned": {
    "message": "Gewarnt"
  },
  "panels/issues/IssuesPane.ts | attributionReporting": {
    "message": "Attribution Reporting API"
  },
  "panels/issues/IssuesPane.ts | contentSecurityPolicy": {
    "message": "Content Security Policy"
  },
  "panels/issues/IssuesPane.ts | cors": {
    "message": "Cross-Origin Resource Sharing"
  },
  "panels/issues/IssuesPane.ts | crossOriginEmbedderPolicy": {
    "message": "Cross-Origin-Embedder-Richtlinie"
  },
  "panels/issues/IssuesPane.ts | generic": {
    "message": "Allgemeines"
  },
  "panels/issues/IssuesPane.ts | groupByCategory": {
    "message": "Nach Kategorie gruppieren"
  },
  "panels/issues/IssuesPane.ts | groupByKind": {
    "message": "Nach Art gruppieren"
  },
  "panels/issues/IssuesPane.ts | groupDisplayedIssuesUnder": {
    "message": "Angezeigte Probleme unter zugehörigen Kategorien gruppieren"
  },
  "panels/issues/IssuesPane.ts | groupDisplayedIssuesUnderKind": {
    "message": "Angezeigte Probleme als Fehler auf der Seite, funktionsgefährdende Änderungen und Verbesserungen gruppieren"
  },
  "panels/issues/IssuesPane.ts | heavyAds": {
    "message": "Umfangreiche Werbung"
  },
  "panels/issues/IssuesPane.ts | includeCookieIssuesCausedBy": {
    "message": "Probleme mit Cookies berücksichtigen, die Websites von Drittanbietern verursachen"
  },
  "panels/issues/IssuesPane.ts | includeThirdpartyCookieIssues": {
    "message": "Mit Problemen von Drittanbieter-Cookies"
  },
  "panels/issues/IssuesPane.ts | lowTextContrast": {
    "message": "Geringer Textkontrast"
  },
  "panels/issues/IssuesPane.ts | mixedContent": {
    "message": "Gemischter Inhalt"
  },
  "panels/issues/IssuesPane.ts | noIssuesDetectedSoFar": {
    "message": "Bisher keine Probleme festgestellt"
  },
  "panels/issues/IssuesPane.ts | onlyThirdpartyCookieIssues": {
    "message": "Bisher wurden nur Cookies von Drittanbietern erkannt"
  },
  "panels/issues/IssuesPane.ts | other": {
    "message": "Sonstige"
  },
  "panels/issues/IssuesPane.ts | quirksMode": {
    "message": "Quirks-Modus"
  },
  "panels/issues/IssuesPane.ts | samesiteCookie": {
    "message": "SameSite-Cookie"
  },
  "panels/issues/components/HideIssuesMenu.ts | tooltipTitle": {
    "message": "Probleme ausblenden"
  },
  "panels/issues/issues-meta.ts | issues": {
    "message": "Probleme"
  },
  "panels/issues/issues-meta.ts | showIssues": {
    "message": "Probleme einblenden"
  },
  "panels/js_profiler/js_profiler-meta.ts | performance": {
    "message": "Leistung"
  },
  "panels/js_profiler/js_profiler-meta.ts | profiler": {
    "message": "Profiler"
  },
  "panels/js_profiler/js_profiler-meta.ts | record": {
    "message": "Aufnehmen"
  },
  "panels/js_profiler/js_profiler-meta.ts | showPerformance": {
    "message": "Leistung anzeigen"
  },
  "panels/js_profiler/js_profiler-meta.ts | showProfiler": {
    "message": "Profiler anzeigen"
  },
  "panels/js_profiler/js_profiler-meta.ts | showRecentTimelineSessions": {
    "message": "Letzte Zeitachsensitzungen anzeigen"
  },
  "panels/js_profiler/js_profiler-meta.ts | startProfilingAndReloadPage": {
    "message": "Profilerstellung starten und Seite aktualisieren"
  },
  "panels/js_profiler/js_profiler-meta.ts | startStopRecording": {
    "message": "Aufnahme starten/beenden"
  },
  "panels/js_profiler/js_profiler-meta.ts | stop": {
    "message": "Stopp"
  },
  "panels/layer_viewer/LayerDetailsView.ts | compositingReasons": {
    "message": "Compositing-Gründe"
  },
  "panels/layer_viewer/LayerDetailsView.ts | containingBlocRectangleDimensions": {
    "message": "Übergeordneter Block {PH1} × {PH2} (bei {PH3}, {PH4})"
  },
  "panels/layer_viewer/LayerDetailsView.ts | mainThreadScrollingReason": {
    "message": "Grund für Scrollen im Hauptthread"
  },
  "panels/layer_viewer/LayerDetailsView.ts | memoryEstimate": {
    "message": "Geschätzter Arbeitsspeicher"
  },
  "panels/layer_viewer/LayerDetailsView.ts | nearestLayerShiftingContaining": {
    "message": "Übergeordneter Block für Verschiebung der nächstgelegenen Ebene"
  },
  "panels/layer_viewer/LayerDetailsView.ts | nearestLayerShiftingStickyBox": {
    "message": "Fixiertes Feld für Verschiebung der nächstgelegenen Ebene"
  },
  "panels/layer_viewer/LayerDetailsView.ts | nonFastScrollable": {
    "message": "Schnelles Scrollen nicht möglich"
  },
  "panels/layer_viewer/LayerDetailsView.ts | paintCount": {
    "message": "Paint-Anzahl"
  },
  "panels/layer_viewer/LayerDetailsView.ts | paintProfiler": {
    "message": "Paint Profiler"
  },
  "panels/layer_viewer/LayerDetailsView.ts | repaintsOnScroll": {
    "message": "Übermalt beim Scrollen"
  },
  "panels/layer_viewer/LayerDetailsView.ts | scrollRectangleDimensions": {
    "message": "{PH1} {PH2} × {PH3} (um {PH4}, {PH5})"
  },
  "panels/layer_viewer/LayerDetailsView.ts | selectALayerToSeeItsDetails": {
    "message": "Wähle eine Ebene aus, um ihre Details zu sehen"
  },
  "panels/layer_viewer/LayerDetailsView.ts | size": {
    "message": "Größe"
  },
  "panels/layer_viewer/LayerDetailsView.ts | slowScrollRegions": {
    "message": "Regionen mit langsamem Scrollen"
  },
  "panels/layer_viewer/LayerDetailsView.ts | stickyAncenstorLayersS": {
    "message": "{PH1}: {PH2} ({PH3})"
  },
  "panels/layer_viewer/LayerDetailsView.ts | stickyBoxRectangleDimensions": {
    "message": "Fixiertes Feld {PH1} x {PH2} (bei {PH3}, {PH4})"
  },
  "panels/layer_viewer/LayerDetailsView.ts | stickyPositionConstraint": {
    "message": "Fixierte Positionsbeschränkung"
  },
  "panels/layer_viewer/LayerDetailsView.ts | touchEventHandler": {
    "message": "Touch-Event-Handler"
  },
  "panels/layer_viewer/LayerDetailsView.ts | unnamed": {
    "message": "<unbenannt>"
  },
  "panels/layer_viewer/LayerDetailsView.ts | updateRectangleDimensions": {
    "message": "{PH1} × {PH2} (um {PH3}, {PH4})"
  },
  "panels/layer_viewer/LayerDetailsView.ts | wheelEventHandler": {
    "message": "Rad-Event-Handler"
  },
  "panels/layer_viewer/LayerTreeOutline.ts | layersTreePane": {
    "message": "Baumansicht „Ebenen“"
  },
  "panels/layer_viewer/LayerTreeOutline.ts | showPaintProfiler": {
    "message": "Paint Profiler anzeigen"
  },
  "panels/layer_viewer/LayerTreeOutline.ts | updateChildDimension": {
    "message": " ({PH1} × {PH2})"
  },
  "panels/layer_viewer/LayerViewHost.ts | showInternalLayers": {
    "message": "Interne Ebenen anzeigen"
  },
  "panels/layer_viewer/Layers3DView.ts | cantDisplayLayers": {
    "message": "Ebenen können nicht angezeigt werden"
  },
  "panels/layer_viewer/Layers3DView.ts | checkSForPossibleReasons": {
    "message": "{PH1} auf mögliche Gründe prüfen."
  },
  "panels/layer_viewer/Layers3DView.ts | dLayersView": {
    "message": "3D-Ebenen-Ansicht"
  },
  "panels/layer_viewer/Layers3DView.ts | layerInformationIsNotYet": {
    "message": "Informationen zu Ebenen sind noch nicht verfügbar."
  },
  "panels/layer_viewer/Layers3DView.ts | paints": {
    "message": "Paints"
  },
  "panels/layer_viewer/Layers3DView.ts | resetView": {
    "message": "Ansicht zurücksetzen"
  },
  "panels/layer_viewer/Layers3DView.ts | showPaintProfiler": {
    "message": "Paint Profiler anzeigen"
  },
  "panels/layer_viewer/Layers3DView.ts | slowScrollRects": {
    "message": "Scroll-Rects verlangsamen"
  },
  "panels/layer_viewer/Layers3DView.ts | webglSupportIsDisabledInYour": {
    "message": "Die WebGL-Unterstützung ist in deinem Browser deaktiviert."
  },
  "panels/layer_viewer/PaintProfilerView.ts | bitmap": {
    "message": "Bitmap"
  },
  "panels/layer_viewer/PaintProfilerView.ts | commandLog": {
    "message": "Befehlsprotokoll"
  },
  "panels/layer_viewer/PaintProfilerView.ts | misc": {
    "message": "Verschiedenes"
  },
  "panels/layer_viewer/PaintProfilerView.ts | profiling": {
    "message": "Profil wird erstellt…"
  },
  "panels/layer_viewer/PaintProfilerView.ts | profilingResults": {
    "message": "Profiler-Ergebnisse"
  },
  "panels/layer_viewer/PaintProfilerView.ts | shapes": {
    "message": "Formen"
  },
  "panels/layer_viewer/PaintProfilerView.ts | text": {
    "message": "SMS"
  },
  "panels/layer_viewer/TransformController.ts | panModeX": {
    "message": "Schwenkmodus (X)"
  },
  "panels/layer_viewer/TransformController.ts | resetTransform": {
    "message": "Transformation zurücksetzen (0)"
  },
  "panels/layer_viewer/TransformController.ts | rotateModeV": {
    "message": "Rotationsmodus (V)"
  },
  "panels/layer_viewer/layer_viewer-meta.ts | panOrRotateDown": {
    "message": "Schwenken oder nach unten rotieren"
  },
  "panels/layer_viewer/layer_viewer-meta.ts | panOrRotateLeft": {
    "message": "Nach links schwenken oder drehen"
  },
  "panels/layer_viewer/layer_viewer-meta.ts | panOrRotateRight": {
    "message": "Nach rechts schwenken oder drehen"
  },
  "panels/layer_viewer/layer_viewer-meta.ts | panOrRotateUp": {
    "message": "Nach oben schwenken oder drehen"
  },
  "panels/layer_viewer/layer_viewer-meta.ts | resetView": {
    "message": "Ansicht zurücksetzen"
  },
  "panels/layer_viewer/layer_viewer-meta.ts | switchToPanMode": {
    "message": "Zum Schwenkmodus wechseln"
  },
  "panels/layer_viewer/layer_viewer-meta.ts | switchToRotateMode": {
    "message": "In Rotationsmodus wechseln"
  },
  "panels/layer_viewer/layer_viewer-meta.ts | zoomIn": {
    "message": "Heranzoomen"
  },
  "panels/layer_viewer/layer_viewer-meta.ts | zoomOut": {
    "message": "Herauszoomen"
  },
  "panels/layers/LayersPanel.ts | details": {
    "message": "Details"
  },
  "panels/layers/LayersPanel.ts | profiler": {
    "message": "Profiler"
  },
  "panels/layers/layers-meta.ts | layers": {
    "message": "Ebenen"
  },
  "panels/layers/layers-meta.ts | showLayers": {
    "message": "Ebenen einblenden"
  },
  "panels/lighthouse/LighthouseController.ts | accessibility": {
    "message": "Bedienungshilfen"
  },
  "panels/lighthouse/LighthouseController.ts | applyMobileEmulation": {
    "message": "Mobilemulation anwenden"
  },
  "panels/lighthouse/LighthouseController.ts | applyMobileEmulationDuring": {
    "message": "Mobilemulation während der Prüfung anwenden"
  },
  "panels/lighthouse/LighthouseController.ts | atLeastOneCategoryMustBeSelected": {
    "message": "Mindestens eine Kategorie muss ausgewählt werden."
  },
  "panels/lighthouse/LighthouseController.ts | bestPractices": {
    "message": "Best Practices"
  },
  "panels/lighthouse/LighthouseController.ts | canOnlyAuditHttphttpsPages": {
    "message": "Seiten können nur mit HTTP oder HTTPS geprüft werden. Rufe eine andere Seite auf."
  },
  "panels/lighthouse/LighthouseController.ts | clearStorage": {
    "message": "Speicherinhalt löschen"
  },
  "panels/lighthouse/LighthouseController.ts | desktop": {
    "message": "Computer"
  },
  "panels/lighthouse/LighthouseController.ts | devtoolsThrottling": {
    "message": "Drosselung über Entwicklertools (erweitert)"
  },
  "panels/lighthouse/LighthouseController.ts | doesThisPageFollowBestPractices": {
    "message": "Entspricht diese Seite den Best Practices für moderne Webentwicklung?"
  },
  "panels/lighthouse/LighthouseController.ts | doesThisPageMeetTheStandardOfA": {
    "message": "Entspricht diese Seite dem Standard einer progressiven Web-App?"
  },
  "panels/lighthouse/LighthouseController.ts | howLongDoesThisAppTakeToShow": {
    "message": "Wie lange dauert es, bis diese App Inhalte anzeigt und verwendet werden kann?"
  },
  "panels/lighthouse/LighthouseController.ts | indexeddb": {
    "message": "IndexedDB"
  },
  "panels/lighthouse/LighthouseController.ts | isThisPageOptimizedForAdSpeedAnd": {
    "message": "Ist diese Seite für Geschwindigkeit und Qualität von Werbeanzeigen optimiert?"
  },
  "panels/lighthouse/LighthouseController.ts | isThisPageOptimizedForSearch": {
    "message": "Ist diese Seite für das Ergebnis-Ranking von Suchmaschinen optimiert?"
  },
  "panels/lighthouse/LighthouseController.ts | isThisPageUsableByPeopleWith": {
    "message": "Kann diese Seite von Nutzern mit Behinderungen oder Einschränkungen verwendet werden?"
  },
  "panels/lighthouse/LighthouseController.ts | javaScriptDisabled": {
    "message": "JavaScript ist deaktiviert. Du musst JavaScript aktivieren, um diese Seite zu prüfen. Öffne dazu das Befehlsmenü und führe den entsprechenden Befehl aus."
  },
  "panels/lighthouse/LighthouseController.ts | lighthouseMode": {
    "message": "Lighthouse-Modus"
  },
  "panels/lighthouse/LighthouseController.ts | localStorage": {
    "message": "Lokaler Speicher"
  },
  "panels/lighthouse/LighthouseController.ts | mobile": {
    "message": "Mobil"
  },
  "panels/lighthouse/LighthouseController.ts | multipleTabsAreBeingControlledBy": {
    "message": "Mehrere Tabs werden von demselben service worker gesteuert. Schließe andere Tabs derselben Quelle, um diese Seite zu prüfen."
  },
  "panels/lighthouse/LighthouseController.ts | navigation": {
    "message": "Navigation (Standard)"
  },
  "panels/lighthouse/LighthouseController.ts | navigationTooltip": {
    "message": "Mit dem Navigationsmodus wird der Aufbau einer Seite analysiert, genau wie mit den ursprünglichen Lighthouse-Berichten."
  },
  "panels/lighthouse/LighthouseController.ts | performance": {
    "message": "Leistung"
  },
  "panels/lighthouse/LighthouseController.ts | progressiveWebApp": {
    "message": "Progressive Web-App"
  },
  "panels/lighthouse/LighthouseController.ts | publisherAds": {
    "message": "Publisher-Anzeigen"
  },
  "panels/lighthouse/LighthouseController.ts | resetStorageLocalstorage": {
    "message": "Speicherfunktionen (cache, service workers usw.) vor der Überprüfung zurücksetzen. (Für bessere Leistung und PWA-Tests)"
  },
  "panels/lighthouse/LighthouseController.ts | runLighthouseInMode": {
    "message": "Lighthouse im Navigations-, Zeitspannen- oder Snapshotmodus ausführen"
  },
  "panels/lighthouse/LighthouseController.ts | seo": {
    "message": "SEO"
  },
  "panels/lighthouse/LighthouseController.ts | simulateASlowerPageLoadBasedOn": {
    "message": "Bei der simulierten Drosselung wird auf Grundlage der Daten vom ersten nicht gedrosselten Aufbau ein langsamerer Seitenaufbau simuliert. Die Drosselung über die Entwicklertools verlangsamt die Seite."
  },
  "panels/lighthouse/LighthouseController.ts | simulatedThrottling": {
    "message": "Simulierte Drosselung (Standard)"
  },
  "panels/lighthouse/LighthouseController.ts | snapshot": {
    "message": "Snapshot"
  },
  "panels/lighthouse/LighthouseController.ts | snapshotTooltip": {
    "message": "Mit dem Snapshot-Modus werden Seiten in einem bestimmten Zustand analysiert, in der Regel nach Nutzerinteraktionen."
  },
  "panels/lighthouse/LighthouseController.ts | thereMayBeStoredDataAffectingLoadingPlural": {
    "message": "Gespeicherte Daten haben möglicherweise die Ladeleistungen an diesen Orten beeinflusst: {PH1}. Teste diese Seite in einem Inkognitofenster, um zu verhindern, dass sich diese Ressourcen auf deine Ergebnisse auswirken."
  },
  "panels/lighthouse/LighthouseController.ts | thereMayBeStoredDataAffectingSingular": {
    "message": "Gespeicherte Daten haben möglicherweise die Ladeleistung an diesem Ort beeinflusst: {PH1}. Teste diese Seite in einem Inkognitofenster, um zu verhindern, dass sich die Ressourcen auf deine Ergebnisse auswirken."
  },
  "panels/lighthouse/LighthouseController.ts | throttlingMethod": {
    "message": "Drosselungsmethode"
  },
  "panels/lighthouse/LighthouseController.ts | timespan": {
    "message": "Zeitspanne"
  },
  "panels/lighthouse/LighthouseController.ts | timespanTooltip": {
    "message": "Mit dem Zeitspannenmodus wird ein beliebiger Zeitraum analysiert, normalerweise einer, der Nutzerinteraktionen enthält."
  },
  "panels/lighthouse/LighthouseController.ts | webSql": {
    "message": "Web SQL"
  },
  "panels/lighthouse/LighthousePanel.ts | cancelling": {
    "message": "Wird abgebrochen"
  },
  "panels/lighthouse/LighthousePanel.ts | clearAll": {
    "message": "Alle löschen"
  },
  "panels/lighthouse/LighthousePanel.ts | dropLighthouseJsonHere": {
    "message": "Lighthouse-JSON hier ablegen"
  },
  "panels/lighthouse/LighthousePanel.ts | lighthouseSettings": {
    "message": "Lighthouse-Einstellungen"
  },
  "panels/lighthouse/LighthousePanel.ts | performAnAudit": {
    "message": "Überprüfung ausführen…"
  },
  "panels/lighthouse/LighthousePanel.ts | printing": {
    "message": "Drucken"
  },
  "panels/lighthouse/LighthousePanel.ts | thePrintPopupWindowIsOpenPlease": {
    "message": "Das Pop-up-Fenster zum Drucken ist geöffnet. Bitte schließe es, um fortzufahren."
  },
  "panels/lighthouse/LighthouseReportSelector.ts | newReport": {
    "message": "(neuer Bericht)"
  },
  "panels/lighthouse/LighthouseReportSelector.ts | reports": {
    "message": "Berichte"
  },
  "panels/lighthouse/LighthouseStartView.ts | analyzeNavigation": {
    "message": "Seitenaufbau analysieren"
  },
  "panels/lighthouse/LighthouseStartView.ts | analyzeSnapshot": {
    "message": "Zustand der Seite analysieren"
  },
  "panels/lighthouse/LighthouseStartView.ts | categories": {
    "message": "Kategorien"
  },
  "panels/lighthouse/LighthouseStartView.ts | device": {
    "message": "Gerät"
  },
  "panels/lighthouse/LighthouseStartView.ts | generateLighthouseReport": {
    "message": "Lighthouse-Bericht erstellen"
  },
  "panels/lighthouse/LighthouseStartView.ts | learnMore": {
    "message": "Weitere Informationen"
  },
  "panels/lighthouse/LighthouseStartView.ts | mode": {
    "message": "Modus"
  },
  "panels/lighthouse/LighthouseStartView.ts | plugins": {
    "message": "Plug-ins"
  },
  "panels/lighthouse/LighthouseStartView.ts | startTimespan": {
    "message": "Zeitspanne starten"
  },
  "panels/lighthouse/LighthouseStatusView.ts | OfGlobalMobileUsersInWereOnGOrG": {
    "message": "75 % aller Nutzer auf Mobilgeräten weltweit nutzten 2G oder 3G [Quelle: GSMA Mobile]"
  },
  "panels/lighthouse/LighthouseStatusView.ts | OfMobilePagesTakeNearlySeconds": {
    "message": "70 % der mobilen Seiten benötigen fast 7 Sekunden, bis der visuelle Inhalt „above the fold“ (ohne Scrollen sichtbar) auf dem Bildschirm angezeigt wird. [Quelle: Think with Google]"
  },
  "panels/lighthouse/LighthouseStatusView.ts | SecondsIsTheAverageTimeAMobile": {
    "message": "Eine mobile Website wird mit einer 3G-Verbindung in durchschnittlich 19 Sekunden aufgebaut [Quelle: Google DoubleClick blog]"
  },
  "panels/lighthouse/LighthouseStatusView.ts | ahSorryWeRanIntoAnError": {
    "message": "Tut uns leid. Ein Fehler ist aufgetreten."
  },
  "panels/lighthouse/LighthouseStatusView.ts | almostThereLighthouseIsNow": {
    "message": "Fast geschafft! Lighthouse erstellt jetzt deinen Bericht."
  },
  "panels/lighthouse/LighthouseStatusView.ts | asPageLoadTimeIncreasesFromOne": {
    "message": "Wenn die Seitenladezeit sich von einer Sekunde auf sieben Sekunden erhöht, steigt die Wahrscheinlichkeit, dass ein mobiler Besucher abspringt, um 113 %. [Quelle: Think with Google]"
  },
  "panels/lighthouse/LighthouseStatusView.ts | asTheNumberOfElementsOnAPage": {
    "message": "Wird die Anzahl der Elemente auf einer Seite von 400 auf 6.000 erhöht, sinkt die Wahrscheinlichkeit für Konversion um 95 %. [Quelle: Think with Google]"
  },
  "panels/lighthouse/LighthouseStatusView.ts | auditingS": {
    "message": "{PH1} wird überprüft"
  },
  "panels/lighthouse/LighthouseStatusView.ts | auditingYourWebPage": {
    "message": "Überprüfung deiner Webseite"
  },
  "panels/lighthouse/LighthouseStatusView.ts | byReducingTheResponseSizeOfJson": {
    "message": "Das Reduzieren der Antwortgröße von JSON zum Anzeigen von Kommentaren führte dazu, dass Instagram mehr Impressionen registrierte [Quelle: WPO Stats]"
  },
  "panels/lighthouse/LighthouseStatusView.ts | cancel": {
    "message": "Abbrechen"
  },
  "panels/lighthouse/LighthouseStatusView.ts | cancelling": {
    "message": "Wird abgebrochen…"
  },
  "panels/lighthouse/LighthouseStatusView.ts | fastFactMessageWithPlaceholder": {
    "message": "💡 {PH1}"
  },
  "panels/lighthouse/LighthouseStatusView.ts | ifASiteTakesSecondToBecome": {
    "message": "Wenn eine Website > 1 Sekunde benötigt, um interaktiv zu werden, lässt die Aufmerksamkeit der Nutzer nach und der Eindruck, die Seite ihrem Zweck entsprechend nutzen zu können, ist beeinträchtigt [Quelle: Google Developers Blog]"
  },
  "panels/lighthouse/LighthouseStatusView.ts | ifThisIssueIsReproduciblePlease": {
    "message": "Wenn dieses Problem reproduzierbar ist, melde es bitte an das Lighthouse GitHub-Repository."
  },
  "panels/lighthouse/LighthouseStatusView.ts | lighthouseIsGatheringInformation": {
    "message": "Lighthouse trägt Informationen zur Seite zusammen, um deine Punktzahl zu berechnen."
  },
  "panels/lighthouse/LighthouseStatusView.ts | lighthouseIsLoadingThePage": {
    "message": "Lighthouse lädt die Seite."
  },
  "panels/lighthouse/LighthouseStatusView.ts | lighthouseIsLoadingYourPage": {
    "message": "Lighthouse lädt deine Seite"
  },
  "panels/lighthouse/LighthouseStatusView.ts | lighthouseIsLoadingYourPageWith": {
    "message": "Lighthouse lädt deine Seite gedrosselt, um die Leistung bei einem 3G-Mobilgerät zu messen."
  },
  "panels/lighthouse/LighthouseStatusView.ts | lighthouseIsLoadingYourPageWithMobile": {
    "message": "Lighthouse lädt deine Seite mit Mobilemulation."
  },
  "panels/lighthouse/LighthouseStatusView.ts | lighthouseIsLoadingYourPageWithThrottling": {
    "message": "Lighthouse lädt deine Seite mit einer Drosselung, um die Leistung auf einem langsamen Desktop mit 3G zu messen."
  },
  "panels/lighthouse/LighthouseStatusView.ts | lighthouseIsWarmingUp": {
    "message": "Lighthouse wird vorbereitet…"
  },
  "panels/lighthouse/LighthouseStatusView.ts | lighthouseOnlySimulatesMobile": {
    "message": "Lighthouse simuliert nur die mobile Leistung; um die Leistung auf einem echten Gerät zu messen, geh auf WebPageTest.org [Quelle: Lighthouse-Team]"
  },
  "panels/lighthouse/LighthouseStatusView.ts | loading": {
    "message": "Wird geladen…"
  },
  "panels/lighthouse/LighthouseStatusView.ts | mbTakesAMinimumOfSecondsTo": {
    "message": "1 MB benötigt mindestens 5 Sekunden für den Download mit einer typischen 3G-Verbindung [Quellen: WebPageTest und DevTools 3G-Definition]."
  },
  "panels/lighthouse/LighthouseStatusView.ts | rebuildingPinterestPagesFor": {
    "message": "Für die Leistung wiederhergestellte Pinterest-Seiten haben die Konversionsraten um 15 % erhöht [Quelle: WPO Stats]"
  },
  "panels/lighthouse/LighthouseStatusView.ts | theAverageUserDeviceCostsLess": {
    "message": "Das Gerät eines durchschnittlichen Nutzers kostet weniger als 200 $. [Quelle: International Data Corporation]"
  },
  "panels/lighthouse/LighthouseStatusView.ts | tryToNavigateToTheUrlInAFresh": {
    "message": "Rufe die URL in einem neuen Chrome-Profil ohne andere geöffnete Tabs oder Erweiterungen auf und versuche es noch einmal."
  },
  "panels/lighthouse/LighthouseStatusView.ts | walmartSawAIncreaseInRevenueFor": {
    "message": "Der Umsatz von Walmart erhöhte sich um 1 % pro 100 ms kürzerer Seitenladezeit [Quelle: WPO Stats]"
  },
  "panels/lighthouse/LighthouseTimespanView.ts | cancel": {
    "message": "Abbrechen"
  },
  "panels/lighthouse/LighthouseTimespanView.ts | endTimespan": {
    "message": "Zeitspanne beenden"
  },
  "panels/lighthouse/LighthouseTimespanView.ts | timespanStarted": {
    "message": "Zeitspanne gestartet, interagiere mit der Seite"
  },
  "panels/lighthouse/LighthouseTimespanView.ts | timespanStarting": {
    "message": "Zeitspanne wird gestartet…"
  },
  "panels/lighthouse/lighthouse-meta.ts | showLighthouse": {
    "message": "Lighthouse anzeigen"
  },
  "panels/linear_memory_inspector/LinearMemoryInspectorController.ts | couldNotOpenLinearMemory": {
    "message": "Inspector des linearen Arbeitsspeichers konnte nicht geöffnet werden: Puffer wurde nicht gefunden."
  },
  "panels/linear_memory_inspector/LinearMemoryInspectorController.ts | revealInMemoryInspectorPanel": {
    "message": "Im Bereich „Arbeitsspeicher-Prüftool“ anzeigen"
  },
  "panels/linear_memory_inspector/LinearMemoryInspectorPane.ts | noOpenInspections": {
    "message": "Keine offenen Prüfungen"
  },
  "panels/linear_memory_inspector/components/LinearMemoryHighlightChipList.ts | deleteHighlight": {
    "message": "Diesen Arbeitsspeicherausschnitt nicht mehr hervorheben"
  },
  "panels/linear_memory_inspector/components/LinearMemoryHighlightChipList.ts | jumpToAddress": {
    "message": "Zu diesem Arbeitsspeicherausschnitt wechseln"
  },
  "panels/linear_memory_inspector/components/LinearMemoryInspector.ts | addressHasToBeANumberBetweenSAnd": {
    "message": "Die Adresse muss eine Zahl zwischen {PH1} und {PH2} sein"
  },
  "panels/linear_memory_inspector/components/LinearMemoryNavigator.ts | enterAddress": {
    "message": "Adresse eingeben"
  },
  "panels/linear_memory_inspector/components/LinearMemoryNavigator.ts | goBackInAddressHistory": {
    "message": "Adressverlauf zurückverfolgen"
  },
  "panels/linear_memory_inspector/components/LinearMemoryNavigator.ts | goForwardInAddressHistory": {
    "message": "Weiter im Adressverlauf"
  },
  "panels/linear_memory_inspector/components/LinearMemoryNavigator.ts | nextPage": {
    "message": "Nächste Seite"
  },
  "panels/linear_memory_inspector/components/LinearMemoryNavigator.ts | previousPage": {
    "message": "Vorherige Seite"
  },
  "panels/linear_memory_inspector/components/LinearMemoryNavigator.ts | refresh": {
    "message": "Aktualisieren"
  },
  "panels/linear_memory_inspector/components/LinearMemoryValueInterpreter.ts | changeEndianness": {
    "message": "Endianness ändern"
  },
  "panels/linear_memory_inspector/components/LinearMemoryValueInterpreter.ts | toggleValueTypeSettings": {
    "message": "Werttypeinstellungen ein-/ausschalten"
  },
  "panels/linear_memory_inspector/components/ValueInterpreterDisplay.ts | addressOutOfRange": {
    "message": "Adresse außerhalb des Speicherbereiches"
  },
  "panels/linear_memory_inspector/components/ValueInterpreterDisplay.ts | changeValueTypeMode": {
    "message": "Modus ändern"
  },
  "panels/linear_memory_inspector/components/ValueInterpreterDisplay.ts | jumpToPointer": {
    "message": "Zur Adresse springen"
  },
  "panels/linear_memory_inspector/components/ValueInterpreterDisplay.ts | signedValue": {
    "message": "Signed Wert"
  },
  "panels/linear_memory_inspector/components/ValueInterpreterDisplay.ts | unsignedValue": {
    "message": "Unsigned Wert"
  },
  "panels/linear_memory_inspector/components/ValueInterpreterDisplayUtils.ts | notApplicable": {
    "message": "–"
  },
  "panels/linear_memory_inspector/components/ValueInterpreterSettings.ts | otherGroup": {
    "message": "Sonstige"
  },
  "panels/linear_memory_inspector/linear_memory_inspector-meta.ts | memoryInspector": {
    "message": "Arbeitsspeicher-Prüftool"
  },
  "panels/linear_memory_inspector/linear_memory_inspector-meta.ts | showMemoryInspector": {
    "message": "Arbeitsspeicher-Prüftool anzeigen"
  },
  "panels/media/EventDisplayTable.ts | eventDisplay": {
    "message": "Ereignisanzeige"
  },
  "panels/media/EventDisplayTable.ts | eventName": {
    "message": "Name des Ereignisses"
  },
  "panels/media/EventDisplayTable.ts | timestamp": {
    "message": "Zeitstempel"
  },
  "panels/media/EventDisplayTable.ts | value": {
    "message": "Wert"
  },
  "panels/media/EventTimelineView.ts | bufferingStatus": {
    "message": "Pufferstatus"
  },
  "panels/media/EventTimelineView.ts | playbackStatus": {
    "message": "Wiedergabestatus"
  },
  "panels/media/PlayerDetailView.ts | events": {
    "message": "Veranstaltungen"
  },
  "panels/media/PlayerDetailView.ts | messages": {
    "message": "Nachrichten"
  },
  "panels/media/PlayerDetailView.ts | playerEvents": {
    "message": "Spieler-Ereignisse"
  },
  "panels/media/PlayerDetailView.ts | playerMessages": {
    "message": "Spielenachrichten"
  },
  "panels/media/PlayerDetailView.ts | playerProperties": {
    "message": "Spielerproperties"
  },
  "panels/media/PlayerDetailView.ts | playerTimeline": {
    "message": "Zeitachse des Spielers"
  },
  "panels/media/PlayerDetailView.ts | properties": {
    "message": "Eigenschaften"
  },
  "panels/media/PlayerDetailView.ts | timeline": {
    "message": "Zeitachse"
  },
  "panels/media/PlayerListView.ts | hideAllOthers": {
    "message": "Alle anderen ausblenden"
  },
  "panels/media/PlayerListView.ts | hidePlayer": {
    "message": "Player ausblenden"
  },
  "panels/media/PlayerListView.ts | players": {
    "message": "Spieler"
  },
  "panels/media/PlayerListView.ts | savePlayerInfo": {
    "message": "Spieler-Informationen speichern"
  },
  "panels/media/PlayerMessagesView.ts | all": {
    "message": "Alles"
  },
  "panels/media/PlayerMessagesView.ts | custom": {
    "message": "Benutzerdefiniert"
  },
  "panels/media/PlayerMessagesView.ts | debug": {
    "message": "Fehler beheben"
  },
  "panels/media/PlayerMessagesView.ts | default": {
    "message": "Standard"
  },
  "panels/media/PlayerMessagesView.ts | error": {
    "message": "Fehler"
  },
  "panels/media/PlayerMessagesView.ts | errorCauseLabel": {
    "message": "Ursache:"
  },
  "panels/media/PlayerMessagesView.ts | errorCodeLabel": {
    "message": "Fehlercode:"
  },
  "panels/media/PlayerMessagesView.ts | errorDataLabel": {
    "message": "Daten:"
  },
  "panels/media/PlayerMessagesView.ts | errorGroupLabel": {
    "message": "Fehlergruppe:"
  },
  "panels/media/PlayerMessagesView.ts | errorStackLabel": {
    "message": "Stacktrace:"
  },
  "panels/media/PlayerMessagesView.ts | filterLogMessages": {
    "message": "Logeinträge filtern"
  },
  "panels/media/PlayerMessagesView.ts | info": {
    "message": "Info"
  },
  "panels/media/PlayerMessagesView.ts | logLevel": {
    "message": "Protokollebene:"
  },
  "panels/media/PlayerMessagesView.ts | warning": {
    "message": "Warnung"
  },
  "panels/media/PlayerPropertiesView.ts | audio": {
    "message": "Audio"
  },
  "panels/media/PlayerPropertiesView.ts | bitrate": {
    "message": "Bitrate"
  },
  "panels/media/PlayerPropertiesView.ts | decoder": {
    "message": "Decodierer"
  },
  "panels/media/PlayerPropertiesView.ts | decoderName": {
    "message": "Decoder-Name"
  },
  "panels/media/PlayerPropertiesView.ts | decryptingDemuxer": {
    "message": "Entschlüsselungs-Demuxer"
  },
  "panels/media/PlayerPropertiesView.ts | duration": {
    "message": "Dauer"
  },
  "panels/media/PlayerPropertiesView.ts | encoderName": {
    "message": "Encoder-Name"
  },
  "panels/media/PlayerPropertiesView.ts | fileSize": {
    "message": "Dateigröße"
  },
  "panels/media/PlayerPropertiesView.ts | frameRate": {
    "message": "Framerate"
  },
  "panels/media/PlayerPropertiesView.ts | hardwareDecoder": {
    "message": "Hardware-Decoder"
  },
  "panels/media/PlayerPropertiesView.ts | hardwareEncoder": {
    "message": "Hardware-Encoder"
  },
  "panels/media/PlayerPropertiesView.ts | noDecoder": {
    "message": "Kein Decoder"
  },
  "panels/media/PlayerPropertiesView.ts | noEncoder": {
    "message": "Kein Encoder"
  },
  "panels/media/PlayerPropertiesView.ts | noTextTracks": {
    "message": "Keine Texttracks"
  },
  "panels/media/PlayerPropertiesView.ts | playbackFrameTitle": {
    "message": "Wiedergabe-Frametitel"
  },
  "panels/media/PlayerPropertiesView.ts | playbackFrameUrl": {
    "message": "Wiedergabe Frame-URL"
  },
  "panels/media/PlayerPropertiesView.ts | properties": {
    "message": "Eigenschaften"
  },
  "panels/media/PlayerPropertiesView.ts | rangeHeaderSupport": {
    "message": "Range-Header-Support"
  },
  "panels/media/PlayerPropertiesView.ts | rendererName": {
    "message": "Renderer-Name"
  },
  "panels/media/PlayerPropertiesView.ts | resolution": {
    "message": "Auflösung"
  },
  "panels/media/PlayerPropertiesView.ts | singleoriginPlayback": {
    "message": "Wiedergabe von einer Quelle"
  },
  "panels/media/PlayerPropertiesView.ts | startTime": {
    "message": "Beginn"
  },
  "panels/media/PlayerPropertiesView.ts | streaming": {
    "message": "Streaming"
  },
  "panels/media/PlayerPropertiesView.ts | textTrack": {
    "message": "Text-Track"
  },
  "panels/media/PlayerPropertiesView.ts | track": {
    "message": "Titel"
  },
  "panels/media/PlayerPropertiesView.ts | video": {
    "message": "Video"
  },
  "panels/media/PlayerPropertiesView.ts | videoFreezingScore": {
    "message": "Punktzahl, die angibt, wie oft ein Video hängenbleibt"
  },
  "panels/media/PlayerPropertiesView.ts | videoPlaybackRoughness": {
    "message": "Rauigkeit der Videowiedergabe"
  },
  "panels/media/media-meta.ts | media": {
    "message": "Medien"
  },
  "panels/media/media-meta.ts | showMedia": {
    "message": "Medien anzeigen"
  },
  "panels/media/media-meta.ts | video": {
    "message": "Video"
  },
  "panels/mobile_throttling/MobileThrottlingSelector.ts | advanced": {
    "message": "Erweitert"
  },
  "panels/mobile_throttling/MobileThrottlingSelector.ts | disabled": {
    "message": "Deaktiviert"
  },
  "panels/mobile_throttling/MobileThrottlingSelector.ts | presets": {
    "message": "Voreinstellungen"
  },
  "panels/mobile_throttling/NetworkPanelIndicator.ts | acceptedEncodingOverrideSet": {
    "message": "Der Satz an akzeptierten Content-Encoding-Headern wurde durch die Entwicklertools geändert – weitere Informationen im Bereich „Netzwerkbedingungen“"
  },
  "panels/mobile_throttling/NetworkPanelIndicator.ts | browserCacheDisabled": {
    "message": "Browser-Cache ist deaktiviert"
  },
  "panels/mobile_throttling/NetworkPanelIndicator.ts | networkThrottlingIsEnabled": {
    "message": "Netzwerkdrosselung ist aktiviert"
  },
  "panels/mobile_throttling/NetworkPanelIndicator.ts | requestsMayBeBlocked": {
    "message": "Anfragen werden möglicherweise blockiert, siehe Bereich „Blockierung der Netzwerkanfrage“"
  },
  "panels/mobile_throttling/NetworkPanelIndicator.ts | requestsMayBeOverridden": {
    "message": "Anfragen können lokal überschrieben werden, siehe Bereich „Quellen“"
  },
  "panels/mobile_throttling/NetworkThrottlingSelector.ts | custom": {
    "message": "Benutzerdefiniert"
  },
  "panels/mobile_throttling/NetworkThrottlingSelector.ts | disabled": {
    "message": "Deaktiviert"
  },
  "panels/mobile_throttling/NetworkThrottlingSelector.ts | presets": {
    "message": "Voreinstellungen"
  },
  "panels/mobile_throttling/ThrottlingManager.ts | add": {
    "message": "Hinzufügen…"
  },
  "panels/mobile_throttling/ThrottlingManager.ts | addS": {
    "message": "{PH1} hinzufügen"
  },
  "panels/mobile_throttling/ThrottlingManager.ts | cpuThrottling": {
    "message": "CPU-Drosselung"
  },
  "panels/mobile_throttling/ThrottlingManager.ts | cpuThrottlingIsEnabled": {
    "message": "CPU-Drosselung ist aktiviert"
  },
  "panels/mobile_throttling/ThrottlingManager.ts | dSlowdown": {
    "message": "Verlangsamen: {PH1} ×"
  },
  "panels/mobile_throttling/ThrottlingManager.ts | excessConcurrency": {
    "message": "Das Überschreiten des Standardwerts kann die Systemleistung beeinträchtigen."
  },
  "panels/mobile_throttling/ThrottlingManager.ts | forceDisconnectedFromNetwork": {
    "message": "Trennung vom Netzwerk erzwingen"
  },
  "panels/mobile_throttling/ThrottlingManager.ts | hardwareConcurrency": {
    "message": "Hardware-Nebenläufigkeit"
  },
  "panels/mobile_throttling/ThrottlingManager.ts | hardwareConcurrencyIsEnabled": {
    "message": "Überschreibung der Hardware-Nebenläufigkeit ist aktiviert"
  },
  "panels/mobile_throttling/ThrottlingManager.ts | hardwareConcurrencySettingTooltip": {
    "message": "Den durch „navigator.hardwareConcurrency“ gemeldeten Wert auf der Seite überschreiben"
  },
  "panels/mobile_throttling/ThrottlingManager.ts | noThrottling": {
    "message": "Keine Drosselung"
  },
  "panels/mobile_throttling/ThrottlingManager.ts | offline": {
    "message": "Offline"
  },
  "panels/mobile_throttling/ThrottlingManager.ts | resetConcurrency": {
    "message": "Auf Standardwert zurücksetzen"
  },
  "panels/mobile_throttling/ThrottlingManager.ts | sS": {
    "message": "{PH1}: {PH2}"
  },
  "panels/mobile_throttling/ThrottlingManager.ts | throttling": {
    "message": "Drosselung"
  },
  "panels/mobile_throttling/ThrottlingPresets.ts | checkNetworkAndPerformancePanels": {
    "message": "Netzwerk- und Leistungsbereiche prüfen"
  },
  "panels/mobile_throttling/ThrottlingPresets.ts | custom": {
    "message": "Benutzerdefiniert"
  },
  "panels/mobile_throttling/ThrottlingPresets.ts | fastGXCpuSlowdown": {
    "message": "Schnelles 3G und 4x CPU-Verlangsamung"
  },
  "panels/mobile_throttling/ThrottlingPresets.ts | lowendMobile": {
    "message": "Low-End-Mobilgerät"
  },
  "panels/mobile_throttling/ThrottlingPresets.ts | midtierMobile": {
    "message": "Mobilgerät mit mittlerer Qualität"
  },
  "panels/mobile_throttling/ThrottlingPresets.ts | noInternetConnectivity": {
    "message": "Keine Internetverbindung"
  },
  "panels/mobile_throttling/ThrottlingPresets.ts | noThrottling": {
    "message": "Keine Drosselung"
  },
  "panels/mobile_throttling/ThrottlingPresets.ts | slowGXCpuSlowdown": {
    "message": "Langsames 3G und 6x CPU-Verlangsamung"
  },
  "panels/mobile_throttling/ThrottlingSettingsTab.ts | addCustomProfile": {
    "message": "Angepasstes Profil hinzufügen…"
  },
  "panels/mobile_throttling/ThrottlingSettingsTab.ts | dms": {
    "message": "{PH1} ms"
  },
  "panels/mobile_throttling/ThrottlingSettingsTab.ts | download": {
    "message": "Download"
  },
  "panels/mobile_throttling/ThrottlingSettingsTab.ts | dskbits": {
    "message": "{PH1} kbit/s"
  },
  "panels/mobile_throttling/ThrottlingSettingsTab.ts | fsmbits": {
    "message": "{PH1} Mbit/s"
  },
  "panels/mobile_throttling/ThrottlingSettingsTab.ts | latency": {
    "message": "Latenz"
  },
  "panels/mobile_throttling/ThrottlingSettingsTab.ts | latencyMustBeAnIntegerBetweenSms": {
    "message": "Latenz muss eine Ganzzahl zwischen {PH1} ms und {PH2} ms (inklusiv) sein"
  },
  "panels/mobile_throttling/ThrottlingSettingsTab.ts | networkThrottlingProfiles": {
    "message": "Netzwerkdrosselungs-Profile"
  },
  "panels/mobile_throttling/ThrottlingSettingsTab.ts | optional": {
    "message": "optional"
  },
  "panels/mobile_throttling/ThrottlingSettingsTab.ts | profileName": {
    "message": "Profilname"
  },
  "panels/mobile_throttling/ThrottlingSettingsTab.ts | profileNameCharactersLengthMust": {
    "message": "Die Zeichenanzahl des Profilnamens muss einschließlich 1 bis {PH1} betragen"
  },
  "panels/mobile_throttling/ThrottlingSettingsTab.ts | sMustBeANumberBetweenSkbsToSkbs": {
    "message": "Wert für {PH1} muss eine Zahl zwischen {PH2} kbit/s und {PH3} kbit/s (inklusiv) sein"
  },
  "panels/mobile_throttling/ThrottlingSettingsTab.ts | upload": {
    "message": "Upload"
  },
  "panels/mobile_throttling/mobile_throttling-meta.ts | device": {
    "message": "Gerät"
  },
  "panels/mobile_throttling/mobile_throttling-meta.ts | enableFastGThrottling": {
    "message": "Schnelle 3G-Drosselung aktivieren"
  },
  "panels/mobile_throttling/mobile_throttling-meta.ts | enableSlowGThrottling": {
    "message": "Langsame 3G-Drosselung aktivieren"
  },
  "panels/mobile_throttling/mobile_throttling-meta.ts | goOffline": {
    "message": "Offline gehen"
  },
  "panels/mobile_throttling/mobile_throttling-meta.ts | goOnline": {
    "message": "Zum Online-Modus wechseln"
  },
  "panels/mobile_throttling/mobile_throttling-meta.ts | showThrottling": {
    "message": "Drosselung anzeigen"
  },
  "panels/mobile_throttling/mobile_throttling-meta.ts | throttling": {
    "message": "Drosselung"
  },
  "panels/mobile_throttling/mobile_throttling-meta.ts | throttlingTag": {
    "message": "Drosselung"
  },
  "panels/network/BinaryResourceView.ts | binaryViewType": {
    "message": "Binäransichtstyp"
  },
  "panels/network/BinaryResourceView.ts | copiedAsBase": {
    "message": "Als Base64 kopiert"
  },
  "panels/network/BinaryResourceView.ts | copiedAsHex": {
    "message": "Als Hex kopiert"
  },
  "panels/network/BinaryResourceView.ts | copiedAsUtf": {
    "message": "Als UTF-8 kopiert"
  },
  "panels/network/BinaryResourceView.ts | copyAsBase": {
    "message": "Als Base64 kopieren"
  },
  "panels/network/BinaryResourceView.ts | copyAsHex": {
    "message": "Als Hex kopieren"
  },
  "panels/network/BinaryResourceView.ts | copyAsUtf": {
    "message": "Als UTF-8 kopieren"
  },
  "panels/network/BinaryResourceView.ts | copyToClipboard": {
    "message": "In die Zwischenablage kopieren"
  },
  "panels/network/BinaryResourceView.ts | hexViewer": {
    "message": "Hex Betrachter"
  },
  "panels/network/BlockedURLsPane.ts | addNetworkRequestBlockingPattern": {
    "message": "Blockierungsmuster für Netzwerkanfragen hinzufügen"
  },
  "panels/network/BlockedURLsPane.ts | addPattern": {
    "message": "Muster hinzufügen"
  },
  "panels/network/BlockedURLsPane.ts | dBlocked": {
    "message": "{PH1} blockiert"
  },
  "panels/network/BlockedURLsPane.ts | enableNetworkRequestBlocking": {
    "message": "Blockierung der Netzwerkanfrage aktivieren"
  },
  "panels/network/BlockedURLsPane.ts | itemDeleted": {
    "message": "Element erfolgreich gelöscht"
  },
  "panels/network/BlockedURLsPane.ts | networkRequestsAreNotBlockedS": {
    "message": "Netzwerkanfragen sind nicht blockiert. {PH1}"
  },
  "panels/network/BlockedURLsPane.ts | patternAlreadyExists": {
    "message": "Das Muster existiert bereits."
  },
  "panels/network/BlockedURLsPane.ts | patternInputCannotBeEmpty": {
    "message": "Die Mustereingabe darf nicht leer sein."
  },
  "panels/network/BlockedURLsPane.ts | textPatternToBlockMatching": {
    "message": "Textmuster zum Blockieren von übereinstimmenden Anfragen; * für Platzhalter verwenden"
  },
  "panels/network/EventSourceMessagesView.ts | copyMessage": {
    "message": "Nachricht kopieren"
  },
  "panels/network/EventSourceMessagesView.ts | data": {
    "message": "Daten"
  },
  "panels/network/EventSourceMessagesView.ts | eventSource": {
    "message": "Ereignisquelle"
  },
  "panels/network/EventSourceMessagesView.ts | id": {
    "message": "ID"
  },
  "panels/network/EventSourceMessagesView.ts | time": {
    "message": "Zeit"
  },
  "panels/network/EventSourceMessagesView.ts | type": {
    "message": "Typ"
  },
  "panels/network/NetworkConfigView.ts | acceptedEncoding": {
    "message": "Zugelassen: Content-Encoding"
  },
  "panels/network/NetworkConfigView.ts | caching": {
    "message": "Caching"
  },
  "panels/network/NetworkConfigView.ts | clientHintsStatusText": {
    "message": "User-Agent wurde aktualisiert."
  },
  "panels/network/NetworkConfigView.ts | custom": {
    "message": "Benutzerdefiniert…"
  },
  "panels/network/NetworkConfigView.ts | customUserAgentFieldIsRequired": {
    "message": "Das Feld für den benutzerdefinierten User-Agent muss ausgefüllt sein"
  },
  "panels/network/NetworkConfigView.ts | disableCache": {
    "message": "Cache deaktivieren"
  },
  "panels/network/NetworkConfigView.ts | enterACustomUserAgent": {
    "message": "Gib einen benutzerdefinierten User-Agent ein"
  },
  "panels/network/NetworkConfigView.ts | networkConditionsPanelShown": {
    "message": "Netzwerkbedingungen werden angezeigt"
  },
  "panels/network/NetworkConfigView.ts | networkThrottling": {
    "message": "Netzwerkdrosselung"
  },
  "panels/network/NetworkConfigView.ts | selectAutomatically": {
    "message": "Browserstandard verwenden"
  },
  "panels/network/NetworkConfigView.ts | userAgent": {
    "message": "User-Agent"
  },
  "panels/network/NetworkDataGridNode.ts | alternativeJobWonRace": {
    "message": "Chrome hat eine HTTP/3-Verbindung verwendet, die durch einen Alt-Svc-Header eingeleitet wurde, weil damit schneller eine Verbindung hergestellt werden konnte als mit einer anderen HTTP-Version."
  },
  "panels/network/NetworkDataGridNode.ts | alternativeJobWonWithoutRace": {
    "message": "Chrome hat eine HTTP/3-Verbindung verwendet, die durch einen Alt-Svc-Header eingeleitet wurde. Dabei wurde nicht geprüft, ob mit einer anderen HTTP-Version ein schnellerer Verbindungsaufbau möglich gewesen wäre."
  },
  "panels/network/NetworkDataGridNode.ts | blockedTooltip": {
    "message": "Diese Anfrage wurde aufgrund von falsch konfigurierten Antwortheadern blockiert – klicken, um Header anzusehen"
  },
  "panels/network/NetworkDataGridNode.ts | blockeds": {
    "message": "(blockiert: {PH1})"
  },
  "panels/network/NetworkDataGridNode.ts | broken": {
    "message": "Chrome hat nicht versucht, eine HTTP/3-Verbindung herzustellen, weil sie als fehlerhaft gekennzeichnet war."
  },
  "panels/network/NetworkDataGridNode.ts | canceled": {
    "message": "(abgebrochen)"
  },
  "panels/network/NetworkDataGridNode.ts | corsError": {
    "message": "CORS-Fehler"
  },
  "panels/network/NetworkDataGridNode.ts | crossoriginResourceSharingErrorS": {
    "message": "Cross-Origin Resource Sharing-Fehler: {PH1}"
  },
  "panels/network/NetworkDataGridNode.ts | csp": {
    "message": "CSP"
  },
  "panels/network/NetworkDataGridNode.ts | data": {
    "message": "(Daten)"
  },
  "panels/network/NetworkDataGridNode.ts | devtools": {
    "message": "Entwicklertools"
  },
  "panels/network/NetworkDataGridNode.ts | diskCache": {
    "message": "(Datenträger-Cache)"
  },
  "panels/network/NetworkDataGridNode.ts | dnsAlpnH3JobWonRace": {
    "message": "Chrome hat eine HTTP/3-Verbindung verwendet, weil „DNS record“ Unterstützung für HTTP/3 angegeben hat. Dieser Verbindungsaufbau war schneller als mit einer anderen HTTP-Version."
  },
  "panels/network/NetworkDataGridNode.ts | dnsAlpnH3JobWonWithoutRace": {
    "message": "Chrome hat eine HTTP/3-Verbindung verwendet, da „DNS record“ Unterstützung für HTTP/3 angegeben hat. Dabei wurde nicht geprüft, ob mit einer anderen HTTP-Version ein schnellerer Verbindungsaufbau möglich gewesen wäre."
  },
  "panels/network/NetworkDataGridNode.ts | failed": {
    "message": "(fehlgeschlagen)"
  },
  "panels/network/NetworkDataGridNode.ts | finished": {
    "message": "Beendet"
  },
  "panels/network/NetworkDataGridNode.ts | initialPriorityToolTip": {
    "message": "{PH1}, anfängliche Priorität: {PH2}"
  },
  "panels/network/NetworkDataGridNode.ts | level": {
    "message": "Level 1"
  },
  "panels/network/NetworkDataGridNode.ts | mainJobWonRace": {
    "message": "Chrome hat dieses Protokoll verwendet, da es schneller war als eine HTTP/3-Verbindung."
  },
  "panels/network/NetworkDataGridNode.ts | mappingMissing": {
    "message": "Chrome hat keine alternative HTTP-Version verwendet, da keine Informationen zu einem alternativen Protokoll verfügbar waren, als die Anfrage gesendet wurde, aber ein Alt-Svc-Header in der Antwort vorhanden war."
  },
  "panels/network/NetworkDataGridNode.ts | matchedToServiceWorkerRouter": {
    "message": "Entspricht ServiceWorker router # {PH1}, Ressourcengröße: {PH2}"
  },
  "panels/network/NetworkDataGridNode.ts | memoryCache": {
    "message": "(Speicher-Cache)"
  },
  "panels/network/NetworkDataGridNode.ts | origin": {
    "message": "Quelle"
  },
  "panels/network/NetworkDataGridNode.ts | other": {
    "message": "sonstiger"
  },
  "panels/network/NetworkDataGridNode.ts | otherC": {
    "message": "Sonstige"
  },
  "panels/network/NetworkDataGridNode.ts | parser": {
    "message": "Parser"
  },
  "panels/network/NetworkDataGridNode.ts | pending": {
    "message": "Ausstehend"
  },
  "panels/network/NetworkDataGridNode.ts | pendingq": {
    "message": "(ausstehend)"
  },
  "panels/network/NetworkDataGridNode.ts | prefetchCache": {
    "message": "(prefetch cache)"
  },
  "panels/network/NetworkDataGridNode.ts | preflight": {
    "message": "Preflight"
  },
  "panels/network/NetworkDataGridNode.ts | preload": {
    "message": "Vorab laden"
  },
  "panels/network/NetworkDataGridNode.ts | push": {
    "message": "Push/ "
  },
  "panels/network/NetworkDataGridNode.ts | redirect": {
    "message": "Weiterleitung"
  },
  "panels/network/NetworkDataGridNode.ts | requestContentHeadersOverridden": {
    "message": "Sowohl Inhalte als auch Header der Anfrage werden überschrieben"
  },
  "panels/network/NetworkDataGridNode.ts | requestContentOverridden": {
    "message": "Anfrageinhalt wird überschrieben"
  },
  "panels/network/NetworkDataGridNode.ts | requestHeadersOverridden": {
    "message": "Anfrageheader werden überschrieben"
  },
  "panels/network/NetworkDataGridNode.ts | sPreflight": {
    "message": "{PH1} + Preflight"
  },
  "panels/network/NetworkDataGridNode.ts | script": {
    "message": "Script"
  },
  "panels/network/NetworkDataGridNode.ts | selectPreflightRequest": {
    "message": "Preflight-Anfrage auswählen"
  },
  "panels/network/NetworkDataGridNode.ts | selectTheRequestThatTriggered": {
    "message": "Anfrage auswählen, die diesen Preflight ausgelöst hat"
  },
  "panels/network/NetworkDataGridNode.ts | servedFromDiskCacheResourceSizeS": {
    "message": "Aus dem Cache des Datenträgers bereitgestellt, Ressourcengröße: {PH1}"
  },
  "panels/network/NetworkDataGridNode.ts | servedFromMemoryCacheResource": {
    "message": "Aus dem Cache des Arbeitsspeichers bereitgestellt, Ressourcengröße: {PH1}"
  },
  "panels/network/NetworkDataGridNode.ts | servedFromPrefetchCacheResource": {
    "message": "Aus dem Cache des Prefetch-Speichers ausgeliefert, Ressourcengröße: {PH1}"
  },
  "panels/network/NetworkDataGridNode.ts | servedFromServiceWorkerResource": {
    "message": "Von ServiceWorker bereitgestellt, Ressourcengröße: {PH1}"
  },
  "panels/network/NetworkDataGridNode.ts | servedFromSignedHttpExchange": {
    "message": "Von Signed HTTP Exchange bereitgestellt, Ressourcengröße: {PH1}"
  },
  "panels/network/NetworkDataGridNode.ts | servedFromWebBundle": {
    "message": "Bereitgestellt von Web Bundle, Ressourcengröße: {PH1}"
  },
  "panels/network/NetworkDataGridNode.ts | serviceWorker": {
    "message": "(ServiceWorker)"
  },
  "panels/network/NetworkDataGridNode.ts | signedexchange": {
    "message": "signed-exchange"
  },
  "panels/network/NetworkDataGridNode.ts | thirdPartyPhaseout": {
    "message": "Cookies für diese Anfrage werden aufgrund der Einstellung von Drittanbieter-Cookies blockiert. Weitere Informationen findest du auf dem Tab „Probleme“."
  },
  "panels/network/NetworkDataGridNode.ts | timeSubtitleTooltipText": {
    "message": "Latenz (Empfangszeit der Antwort − Startzeit)"
  },
  "panels/network/NetworkDataGridNode.ts | unknown": {
    "message": "(unbekannt)"
  },
  "panels/network/NetworkDataGridNode.ts | unknownExplanation": {
    "message": "Der Status der Anfrage kann hier nicht angezeigt werden, da die Seite, von der sie stammt, während der Übertragung der Anfrage entfernt wurde. Du kannst chrome://net-export verwenden, um ein Netzwerkprotokoll zu erstellen und sich alle Details der Anfrage anzusehen."
  },
  "panels/network/NetworkDataGridNode.ts | webBundle": {
    "message": "(Web Bundle)"
  },
  "panels/network/NetworkDataGridNode.ts | webBundleError": {
    "message": "Web Bundle-Fehler"
  },
  "panels/network/NetworkDataGridNode.ts | webBundleInnerRequest": {
    "message": "Von Web Bundle bereitgestellt"
  },
  "panels/network/NetworkItemView.ts | containsOverriddenHeaders": {
    "message": "Diese Antwort enthält Header, die von den Entwicklertools überschrieben werden"
  },
  "panels/network/NetworkItemView.ts | cookies": {
    "message": "Cookies"
  },
  "panels/network/NetworkItemView.ts | eventstream": {
    "message": "EventStream"
  },
  "panels/network/NetworkItemView.ts | headers": {
    "message": "Header"
  },
  "panels/network/NetworkItemView.ts | initiator": {
    "message": "Initiator"
  },
  "panels/network/NetworkItemView.ts | messages": {
    "message": "Nachrichten"
  },
  "panels/network/NetworkItemView.ts | payload": {
    "message": "Nutzlast"
  },
  "panels/network/NetworkItemView.ts | preview": {
    "message": "Vorschau"
  },
  "panels/network/NetworkItemView.ts | rawResponseData": {
    "message": "Unbearbeitete Antwortdaten"
  },
  "panels/network/NetworkItemView.ts | requestAndResponseCookies": {
    "message": "Anfrage- und Antwort-Cookies"
  },
  "panels/network/NetworkItemView.ts | requestAndResponseTimeline": {
    "message": "Anfrage- und Antwortzeitachse"
  },
  "panels/network/NetworkItemView.ts | requestInitiatorCallStack": {
    "message": "Aufrufstack des Anforderungsinitiators"
  },
  "panels/network/NetworkItemView.ts | response": {
    "message": "Antwort"
  },
  "panels/network/NetworkItemView.ts | responseIsOverridden": {
    "message": "Diese Antwort wird von den Entwicklertools überschrieben"
  },
  "panels/network/NetworkItemView.ts | responsePreview": {
    "message": "Antwortvorschau"
  },
  "panels/network/NetworkItemView.ts | signedexchangeError": {
    "message": "SignedExchange-Fehler"
  },
  "panels/network/NetworkItemView.ts | thirdPartyPhaseout": {
    "message": "Cookies wurden aufgrund der Einstellung von Drittanbieter-Cookies blockiert."
  },
  "panels/network/NetworkItemView.ts | timing": {
    "message": "Timing"
  },
  "panels/network/NetworkItemView.ts | trustTokenOperationDetails": {
    "message": "Details zu Private State Token-Vorgängen"
  },
  "panels/network/NetworkItemView.ts | trustTokens": {
    "message": "Private State Tokens"
  },
  "panels/network/NetworkItemView.ts | websocketMessages": {
    "message": "WebSocket-Nachrichten"
  },
  "panels/network/NetworkLogView.ts | allStrings": {
    "message": "Alles"
  },
  "panels/network/NetworkLogView.ts | areYouSureYouWantToClearBrowser": {
    "message": "Möchtest du den Browsercache wirklich löschen?"
  },
  "panels/network/NetworkLogView.ts | areYouSureYouWantToClearBrowserCookies": {
    "message": "Möchtest du die Browsercookies wirklich löschen?"
  },
  "panels/network/NetworkLogView.ts | blockRequestDomain": {
    "message": "Anfrage-Domain blockieren"
  },
  "panels/network/NetworkLogView.ts | blockRequestUrl": {
    "message": "Anfrage-URL blockieren"
  },
  "panels/network/NetworkLogView.ts | blockedRequests": {
    "message": "Blockierte Anfragen"
  },
  "panels/network/NetworkLogView.ts | chromeExtensions": {
    "message": "Erweiterungs-URLs ausblenden"
  },
  "panels/network/NetworkLogView.ts | clearBrowserCache": {
    "message": "Browser-Cache leeren"
  },
  "panels/network/NetworkLogView.ts | clearBrowserCookies": {
    "message": "Browsercookies löschen"
  },
  "panels/network/NetworkLogView.ts | copy": {
    "message": "Kopieren"
  },
  "panels/network/NetworkLogView.ts | copyAllAsCurl": {
    "message": "Alles als cURL kopieren"
  },
  "panels/network/NetworkLogView.ts | copyAllAsCurlBash": {
    "message": "Alles als cURL (bash) kopieren"
  },
  "panels/network/NetworkLogView.ts | copyAllAsCurlCmd": {
    "message": "Alles als cURL (cmd) kopieren"
  },
  "panels/network/NetworkLogView.ts | copyAllAsFetch": {
    "message": "Alles als fetch kopieren"
  },
  "panels/network/NetworkLogView.ts | copyAllAsHar": {
    "message": "Alles als HAR kopieren"
  },
  "panels/network/NetworkLogView.ts | copyAllAsNodejsFetch": {
    "message": "Alles als fetch (Node.js) kopieren"
  },
  "panels/network/NetworkLogView.ts | copyAllAsPowershell": {
    "message": "Alles als PowerShell kopieren"
  },
  "panels/network/NetworkLogView.ts | copyAllURLs": {
    "message": "Alle URLs kopieren"
  },
  "panels/network/NetworkLogView.ts | copyAsCurl": {
    "message": "Als cURL kopieren"
  },
  "panels/network/NetworkLogView.ts | copyAsCurlBash": {
    "message": "Als cURL (bash) kopieren"
  },
  "panels/network/NetworkLogView.ts | copyAsCurlCmd": {
    "message": "Als cURL (cmd) kopieren"
  },
  "panels/network/NetworkLogView.ts | copyAsFetch": {
    "message": "Als fetch kopieren"
  },
  "panels/network/NetworkLogView.ts | copyAsNodejsFetch": {
    "message": "Als fetch (Node.js) kopieren"
  },
  "panels/network/NetworkLogView.ts | copyAsPowershell": {
    "message": "Als PowerShell kopieren"
  },
  "panels/network/NetworkLogView.ts | copyRequestHeaders": {
    "message": "Anfrageheader kopieren"
  },
  "panels/network/NetworkLogView.ts | copyResponse": {
    "message": "Antwort kopieren"
  },
  "panels/network/NetworkLogView.ts | copyResponseHeaders": {
    "message": "Antwortheader kopieren"
  },
  "panels/network/NetworkLogView.ts | copyStacktrace": {
    "message": "Stacktrace kopieren"
  },
  "panels/network/NetworkLogView.ts | copyURL": {
    "message": "URL kopieren"
  },
  "panels/network/NetworkLogView.ts | domcontentloadedS": {
    "message": "DOMContentLoaded: {PH1}"
  },
  "panels/network/NetworkLogView.ts | dropHarFilesHere": {
    "message": "HAR-Dateien hier ablegen"
  },
  "panels/network/NetworkLogView.ts | finishS": {
    "message": "Fertigstellen: {PH1}"
  },
  "panels/network/NetworkLogView.ts | hasBlockedCookies": {
    "message": "Blockierte Antwort-Cookies"
  },
  "panels/network/NetworkLogView.ts | hideChromeExtension": {
    "message": "„chrome-extension://“-URLs ausblenden"
  },
  "panels/network/NetworkLogView.ts | hideDataUrls": {
    "message": "Daten-URLs verbergen"
  },
  "panels/network/NetworkLogView.ts | hidesDataAndBlobUrls": {
    "message": "URLs mit „data:“ und „blob:“ ausblenden"
  },
  "panels/network/NetworkLogView.ts | invertFilter": {
    "message": "Invertieren"
  },
  "panels/network/NetworkLogView.ts | invertsFilter": {
    "message": "Invertiert den Suchfilter"
  },
  "panels/network/NetworkLogView.ts | learnMore": {
    "message": "Weitere Informationen"
  },
  "panels/network/NetworkLogView.ts | loadS": {
    "message": "Laden: {PH1}"
  },
  "panels/network/NetworkLogView.ts | moreFilters": {
    "message": "Mehr Filter"
  },
  "panels/network/NetworkLogView.ts | networkDataAvailable": {
    "message": "Netzwerkdaten verfügbar"
  },
  "panels/network/NetworkLogView.ts | onlyShowBlockedRequests": {
    "message": "Nur blockierte Anfragen anzeigen"
  },
  "panels/network/NetworkLogView.ts | onlyShowRequestsWithBlockedCookies": {
    "message": "Nur die Anfragen mit blockierten Antwort-Cookies anzeigen"
  },
  "panels/network/NetworkLogView.ts | onlyShowThirdPartyRequests": {
    "message": "Nur Anfragen anzeigen, bei denen sich der Seitenursprung vom Ursprung unterscheidet"
  },
  "panels/network/NetworkLogView.ts | overTwoTypesSelected": {
    "message": "{PH1}, {PH2}…"
  },
  "panels/network/NetworkLogView.ts | overrideHeaders": {
    "message": "Header überschreiben"
  },
  "panels/network/NetworkLogView.ts | performARequestOrHitSToRecordThe": {
    "message": "Führe eine Anfrage aus oder drücke {PH1}, um die Aktualisierung aufzuzeichnen."
  },
  "panels/network/NetworkLogView.ts | recordToDisplayNetworkActivity": {
    "message": "Netzwerkprotokoll ({PH1}) aufzeichnen, um Netzwerkaktivität zu sehen."
  },
  "panels/network/NetworkLogView.ts | recordingNetworkActivity": {
    "message": "Netzwerkaktivität wird aufgezeichnet…"
  },
  "panels/network/NetworkLogView.ts | replayXhr": {
    "message": "XHR wiederholen"
  },
  "panels/network/NetworkLogView.ts | requestTypes": {
    "message": "Anfragetypen"
  },
  "panels/network/NetworkLogView.ts | requestTypesToInclude": {
    "message": "Zu verwendende Anfragetypen"
  },
  "panels/network/NetworkLogView.ts | requestTypesTooltip": {
    "message": "Anfragen nach Typ filtern"
  },
  "panels/network/NetworkLogView.ts | sBResourcesLoadedByThePage": {
    "message": "{PH1}-B-Ressourcen werden von der Seite geladen"
  },
  "panels/network/NetworkLogView.ts | sBSBResourcesLoadedByThePage": {
    "message": "{PH1} B-/{PH2} B-Ressourcen von der Seite geladen"
  },
  "panels/network/NetworkLogView.ts | sBSBTransferredOverNetwork": {
    "message": "{PH1} B/{PH2} B über Netzwerk übertragen"
  },
  "panels/network/NetworkLogView.ts | sBTransferredOverNetwork": {
    "message": "{PH1} B über das Netzwerk übertragen"
  },
  "panels/network/NetworkLogView.ts | sRequests": {
    "message": "{PH1} Anfragen"
  },
  "panels/network/NetworkLogView.ts | sResources": {
    "message": "{PH1} Ressourcen"
  },
  "panels/network/NetworkLogView.ts | sSRequests": {
    "message": "{PH1}/{PH2} Anforderungen"
  },
  "panels/network/NetworkLogView.ts | sSResources": {
    "message": "Ressourcen: {PH1}/{PH2}"
  },
  "panels/network/NetworkLogView.ts | sSTransferred": {
    "message": "{PH1}/{PH2} übertragen"
  },
  "panels/network/NetworkLogView.ts | sTransferred": {
    "message": "{PH1} übertragen"
  },
  "panels/network/NetworkLogView.ts | saveAllAsHarWithContent": {
    "message": "Alle als HAR mit Inhalt speichern"
  },
  "panels/network/NetworkLogView.ts | showOnly": {
    "message": "Nur {PH1} anzeigen"
  },
  "panels/network/NetworkLogView.ts | showOnlyHideRequests": {
    "message": "Nur Anfragen anzeigen / Anfragen ausblenden"
  },
  "panels/network/NetworkLogView.ts | thirdParty": {
    "message": "Anfragen von Drittanbietern"
  },
  "panels/network/NetworkLogView.ts | twoTypesSelected": {
    "message": "{PH1}, {PH2}"
  },
  "panels/network/NetworkLogView.ts | unblockS": {
    "message": "Blockierung aufheben für {PH1}"
  },
  "panels/network/NetworkLogViewColumns.ts | connectionId": {
    "message": "Verbindungs-ID"
  },
  "panels/network/NetworkLogViewColumns.ts | content": {
    "message": "Inhalte"
  },
  "panels/network/NetworkLogViewColumns.ts | cookies": {
    "message": "Cookies"
  },
  "panels/network/NetworkLogViewColumns.ts | domain": {
    "message": "Domain"
  },
  "panels/network/NetworkLogViewColumns.ts | endTime": {
    "message": "Ende"
  },
  "panels/network/NetworkLogViewColumns.ts | hasOverrides": {
    "message": "Hat Überschreibungen"
  },
  "panels/network/NetworkLogViewColumns.ts | initiator": {
    "message": "Initiator"
  },
  "panels/network/NetworkLogViewColumns.ts | initiatorAddressSpace": {
    "message": "Raum für Initiator-Adresse"
  },
  "panels/network/NetworkLogViewColumns.ts | latency": {
    "message": "Latenz"
  },
  "panels/network/NetworkLogViewColumns.ts | manageHeaderColumns": {
    "message": "Headerspalten verwalten…"
  },
  "panels/network/NetworkLogViewColumns.ts | method": {
    "message": "Methode"
  },
  "panels/network/NetworkLogViewColumns.ts | name": {
    "message": "Name"
  },
  "panels/network/NetworkLogViewColumns.ts | networkLog": {
    "message": "Netzwerkprotokoll"
  },
  "panels/network/NetworkLogViewColumns.ts | path": {
    "message": "Pfad"
  },
  "panels/network/NetworkLogViewColumns.ts | priority": {
    "message": "Priorität"
  },
  "panels/network/NetworkLogViewColumns.ts | protocol": {
    "message": "Protokoll"
  },
  "panels/network/NetworkLogViewColumns.ts | remoteAddress": {
    "message": "Remote-Adresse"
  },
  "panels/network/NetworkLogViewColumns.ts | remoteAddressSpace": {
    "message": "Bereich für Remote-Adresse"
  },
  "panels/network/NetworkLogViewColumns.ts | responseHeaders": {
    "message": "Antwortheader"
  },
  "panels/network/NetworkLogViewColumns.ts | responseTime": {
    "message": "Bearbeitungszeit"
  },
  "panels/network/NetworkLogViewColumns.ts | scheme": {
    "message": "Schema"
  },
  "panels/network/NetworkLogViewColumns.ts | setCookies": {
    "message": "Cookies einstellen"
  },
  "panels/network/NetworkLogViewColumns.ts | size": {
    "message": "Größe"
  },
  "panels/network/NetworkLogViewColumns.ts | startTime": {
    "message": "Startzeit"
  },
  "panels/network/NetworkLogViewColumns.ts | status": {
    "message": "Status"
  },
  "panels/network/NetworkLogViewColumns.ts | text": {
    "message": "SMS"
  },
  "panels/network/NetworkLogViewColumns.ts | time": {
    "message": "Zeit"
  },
  "panels/network/NetworkLogViewColumns.ts | totalDuration": {
    "message": "Gesamtdauer"
  },
  "panels/network/NetworkLogViewColumns.ts | type": {
    "message": "Typ"
  },
  "panels/network/NetworkLogViewColumns.ts | url": {
    "message": "URL"
  },
  "panels/network/NetworkLogViewColumns.ts | waterfall": {
    "message": "Wasserfall"
  },
  "panels/network/NetworkManageCustomHeadersView.ts | addCustomHeader": {
    "message": "Benutzerdefinierten Header hinzufügen…"
  },
  "panels/network/NetworkManageCustomHeadersView.ts | headerName": {
    "message": "Headername"
  },
  "panels/network/NetworkManageCustomHeadersView.ts | manageHeaderColumns": {
    "message": "Headerspalten verwalten"
  },
  "panels/network/NetworkManageCustomHeadersView.ts | noCustomHeaders": {
    "message": "Keine benutzerdefinierten Header"
  },
  "panels/network/NetworkPanel.ts | captureScreenshots": {
    "message": "Screenshots"
  },
  "panels/network/NetworkPanel.ts | captureScreenshotsWhenLoadingA": {
    "message": "Screenshots erfassen, während sich eine Seite aufbaut"
  },
  "panels/network/NetworkPanel.ts | close": {
    "message": "Schließen"
  },
  "panels/network/NetworkPanel.ts | disableCache": {
    "message": "Cache deaktivieren"
  },
  "panels/network/NetworkPanel.ts | disableCacheWhileDevtoolsIsOpen": {
    "message": "Cache deaktivieren (während Entwicklertools geöffnet ist)"
  },
  "panels/network/NetworkPanel.ts | doNotClearLogOnPageReload": {
    "message": "Protokoll beim Aktualisieren/Bedienen der Seite nicht löschen"
  },
  "panels/network/NetworkPanel.ts | exportHar": {
    "message": "HAR exportieren..."
  },
  "panels/network/NetworkPanel.ts | fetchingFrames": {
    "message": "Frames werden abgerufen…"
  },
  "panels/network/NetworkPanel.ts | groupByFrame": {
    "message": "Nach Frame gruppieren"
  },
  "panels/network/NetworkPanel.ts | groupRequestsByTopLevelRequest": {
    "message": "Anforderungen nach Anfrage-Frame der obersten Ebene gruppieren"
  },
  "panels/network/NetworkPanel.ts | hitSToReloadAndCaptureFilmstrip": {
    "message": "Drücke {PH1}, um Filmstreifen neu zu laden und zu erfassen."
  },
  "panels/network/NetworkPanel.ts | importHarFile": {
    "message": "HAR-Datei importieren..."
  },
  "panels/network/NetworkPanel.ts | moreNetworkConditions": {
    "message": "Weitere Netzwerkbedingungen…"
  },
  "panels/network/NetworkPanel.ts | networkSettings": {
    "message": "Netzwerkeinstellungen"
  },
  "panels/network/NetworkPanel.ts | preserveLog": {
    "message": "Protokoll beibehalten"
  },
  "panels/network/NetworkPanel.ts | recordingFrames": {
    "message": "Frames werden aufgezeichnet…"
  },
  "panels/network/NetworkPanel.ts | revealInNetworkPanel": {
    "message": "Im Netzwerkbereich anzeigen"
  },
  "panels/network/NetworkPanel.ts | search": {
    "message": "Suche"
  },
  "panels/network/NetworkPanel.ts | showMoreInformationInRequestRows": {
    "message": "Weitere Informationen in Anfragezeilen anzeigen"
  },
  "panels/network/NetworkPanel.ts | showOverview": {
    "message": "Übersicht"
  },
  "panels/network/NetworkPanel.ts | showOverviewOfNetworkRequests": {
    "message": "Übersicht der Netzwerkanfragen anzeigen"
  },
  "panels/network/NetworkPanel.ts | throttling": {
    "message": "Drosselung"
  },
  "panels/network/NetworkPanel.ts | useLargeRequestRows": {
    "message": "Große Anfragezeilen"
  },
  "panels/network/NetworkSearchScope.ts | url": {
    "message": "URL"
  },
  "panels/network/NetworkTimeCalculator.ts | sDownload": {
    "message": "{PH1} Download"
  },
  "panels/network/NetworkTimeCalculator.ts | sFromCache": {
    "message": "{PH1} (vom Cache)"
  },
  "panels/network/NetworkTimeCalculator.ts | sFromServiceworker": {
    "message": "{PH1} (von ServiceWorker)"
  },
  "panels/network/NetworkTimeCalculator.ts | sLatency": {
    "message": "{PH1}-Latenz"
  },
  "panels/network/NetworkTimeCalculator.ts | sLatencySDownloadSTotal": {
    "message": "{PH1} Latenz, {PH2} Download ({PH3} gesamt)"
  },
  "panels/network/RequestCookiesView.ts | cookiesThatWereReceivedFromThe": {
    "message": "Cookies im Header „set-cookie“ der Antwort, die vom Server empfangen wurden"
  },
  "panels/network/RequestCookiesView.ts | cookiesThatWereReceivedFromTheServer": {
    "message": "Cookies im Header „set-cookie“ der Antwort, die vom Server empfangen wurden, aber ein fehlerhaftes Format hatten"
  },
  "panels/network/RequestCookiesView.ts | cookiesThatWereSentToTheServerIn": {
    "message": "Cookies im Header „Cookie“ der Anfrage, die an den Server gesendet wurden"
  },
  "panels/network/RequestCookiesView.ts | learnMore": {
    "message": "Weitere Informationen"
  },
  "panels/network/RequestCookiesView.ts | malformedResponseCookies": {
    "message": "Fehlerhafte Antwort-Cookies"
  },
  "panels/network/RequestCookiesView.ts | noRequestCookiesWereSent": {
    "message": "Es wurden keine Anfrage-Cookies gesendet."
  },
  "panels/network/RequestCookiesView.ts | requestCookies": {
    "message": "Cookies anfragen"
  },
  "panels/network/RequestCookiesView.ts | responseCookies": {
    "message": "Antwort-Cookies"
  },
  "panels/network/RequestCookiesView.ts | showFilteredOutRequestCookies": {
    "message": "Herausgefilterte Anfrage-Cookies anzeigen"
  },
  "panels/network/RequestCookiesView.ts | siteHasCookieInOtherPartition": {
    "message": "Diese Website hat Cookies in einer anderen Partition, die nicht mit dieser Anfrage gesendet wurden. {PH1}"
  },
  "panels/network/RequestCookiesView.ts | thisRequestHasNoCookies": {
    "message": "Für diese Anfrage gibt es keine Cookies."
  },
  "panels/network/RequestInitiatorView.ts | requestCallStack": {
    "message": "Aufrufstack anfordern"
  },
  "panels/network/RequestInitiatorView.ts | requestInitiatorChain": {
    "message": "Initiatorenkette anfordern"
  },
  "panels/network/RequestInitiatorView.ts | thisRequestHasNoInitiatorData": {
    "message": "Diese Anfrage hat keine Initiator-Daten."
  },
  "panels/network/RequestPayloadView.ts | copyValue": {
    "message": "Wert kopieren"
  },
  "panels/network/RequestPayloadView.ts | empty": {
    "message": "(leer)"
  },
  "panels/network/RequestPayloadView.ts | formData": {
    "message": "Formulardaten"
  },
  "panels/network/RequestPayloadView.ts | queryStringParameters": {
    "message": "Abfragestringparameter"
  },
  "panels/network/RequestPayloadView.ts | requestPayload": {
    "message": "Nutzlast anfordern"
  },
  "panels/network/RequestPayloadView.ts | showMore": {
    "message": "Mehr anzeigen"
  },
  "panels/network/RequestPayloadView.ts | unableToDecodeValue": {
    "message": "(Wert kann nicht entschlüsselt werden)"
  },
  "panels/network/RequestPayloadView.ts | viewDecoded": {
    "message": "Dekodierte anzeigen"
  },
  "panels/network/RequestPayloadView.ts | viewDecodedL": {
    "message": "Dekodierte anzeigen"
  },
  "panels/network/RequestPayloadView.ts | viewParsed": {
    "message": "Analysierte anzeigen"
  },
  "panels/network/RequestPayloadView.ts | viewParsedL": {
    "message": "Geparste anzeigen"
  },
  "panels/network/RequestPayloadView.ts | viewSource": {
    "message": "Quelle anzeigen"
  },
  "panels/network/RequestPayloadView.ts | viewSourceL": {
    "message": "Quelltext anzeigen"
  },
  "panels/network/RequestPayloadView.ts | viewUrlEncoded": {
    "message": "URL verschlüsselt anzeigen"
  },
  "panels/network/RequestPayloadView.ts | viewUrlEncodedL": {
    "message": "URL verschlüsselt anzeigen"
  },
  "panels/network/RequestPreviewView.ts | failedToLoadResponseData": {
    "message": "Antwortdaten konnten nicht geladen werden"
  },
  "panels/network/RequestPreviewView.ts | previewNotAvailable": {
    "message": "Vorschau nicht verfügbar"
  },
  "panels/network/RequestResponseView.ts | failedToLoadResponseData": {
    "message": "Antwortdaten konnten nicht geladen werden"
  },
  "panels/network/RequestResponseView.ts | thisRequestHasNoResponseData": {
    "message": "Für diese Anfrage sind keine Antwortdaten verfügbar."
  },
  "panels/network/RequestTimingView.ts | cacheStorageCacheNameS": {
    "message": "Name des Cache-Speichers: {PH1}"
  },
  "panels/network/RequestTimingView.ts | cacheStorageCacheNameUnknown": {
    "message": "Name des Cache-Speichers: unbekannt"
  },
  "panels/network/RequestTimingView.ts | cautionRequestIsNotFinishedYet": {
    "message": "ACHTUNG: Die Anfrage ist noch nicht beendet!"
  },
  "panels/network/RequestTimingView.ts | connectionStart": {
    "message": "Verbindungsstart"
  },
  "panels/network/RequestTimingView.ts | contentDownload": {
    "message": "Herunterladen von Inhalten"
  },
  "panels/network/RequestTimingView.ts | dnsLookup": {
    "message": "DNS Lookup"
  },
  "panels/network/RequestTimingView.ts | duration": {
    "message": "Dauer"
  },
  "panels/network/RequestTimingView.ts | durationC": {
    "message": "DAUER"
  },
  "panels/network/RequestTimingView.ts | duringDevelopmentYouCanUseSToAdd": {
    "message": "Bei der Entwicklung kannst du {PH1} verwenden, um Einblicke in das serverseitige Timing dieser Anforderung zu gewinnen."
  },
  "panels/network/RequestTimingView.ts | explanation": {
    "message": "Erklärung"
  },
  "panels/network/RequestTimingView.ts | fallbackCode": {
    "message": "Fallbackcode"
  },
  "panels/network/RequestTimingView.ts | fromHttpCache": {
    "message": "Vom HTTP-Cache"
  },
  "panels/network/RequestTimingView.ts | initialConnection": {
    "message": "Ursprüngliche Verbindung"
  },
  "panels/network/RequestTimingView.ts | label": {
    "message": "Label"
  },
  "panels/network/RequestTimingView.ts | networkFetch": {
    "message": "Netzwerk-Abfrage"
  },
  "panels/network/RequestTimingView.ts | originalRequest": {
    "message": "Ursprüngliche Anfrage"
  },
  "panels/network/RequestTimingView.ts | proxyNegotiation": {
    "message": "Proxy-Verhandlung"
  },
  "panels/network/RequestTimingView.ts | queuedAtS": {
    "message": "In der Warteschlange bei {PH1}"
  },
  "panels/network/RequestTimingView.ts | queueing": {
    "message": "Warteschlange"
  },
  "panels/network/RequestTimingView.ts | readingPush": {
    "message": "Push lesen"
  },
  "panels/network/RequestTimingView.ts | receivingPush": {
    "message": "Push wird empfangen"
  },
  "panels/network/RequestTimingView.ts | requestSent": {
    "message": "Anfrage gesendet"
  },
  "panels/network/RequestTimingView.ts | requestToServiceworker": {
    "message": "Anfrage an ServiceWorker"
  },
  "panels/network/RequestTimingView.ts | requestresponse": {
    "message": "RequestResponse"
  },
  "panels/network/RequestTimingView.ts | resourceScheduling": {
    "message": "Ressourcenplanung"
  },
  "panels/network/RequestTimingView.ts | respondwith": {
    "message": "respondWith"
  },
  "panels/network/RequestTimingView.ts | responseReceived": {
    "message": "Antwort erhalten"
  },
  "panels/network/RequestTimingView.ts | retrievalTimeS": {
    "message": "Abrufzeit: {PH1}"
  },
  "panels/network/RequestTimingView.ts | serverPush": {
    "message": "Server-Push"
  },
  "panels/network/RequestTimingView.ts | serverTiming": {
    "message": "Server-Timing"
  },
  "panels/network/RequestTimingView.ts | serviceworkerCacheStorage": {
    "message": "ServiceWorker-Cache-Speicher"
  },
  "panels/network/RequestTimingView.ts | sourceOfResponseS": {
    "message": "Quelle der Antwort: {PH1}"
  },
  "panels/network/RequestTimingView.ts | ssl": {
    "message": "SSL"
  },
  "panels/network/RequestTimingView.ts | stalled": {
    "message": "Verzögert"
  },
  "panels/network/RequestTimingView.ts | startedAtS": {
    "message": "Gestartet um {PH1}"
  },
  "panels/network/RequestTimingView.ts | startup": {
    "message": "Starten"
  },
  "panels/network/RequestTimingView.ts | theServerTimingApi": {
    "message": "die Server Timing API"
  },
  "panels/network/RequestTimingView.ts | time": {
    "message": "ZEIT"
  },
  "panels/network/RequestTimingView.ts | total": {
    "message": "Gesamt"
  },
  "panels/network/RequestTimingView.ts | unknown": {
    "message": "Unbekannt"
  },
  "panels/network/RequestTimingView.ts | waitingTtfb": {
    "message": "Warten auf Serverantwort"
  },
  "panels/network/RequestTimingView.ts | waterfall": {
    "message": "Wasserfall"
  },
  "panels/network/ResourceWebSocketFrameView.ts | all": {
    "message": "Alles"
  },
  "panels/network/ResourceWebSocketFrameView.ts | binaryMessage": {
    "message": "Binäre Nachricht"
  },
  "panels/network/ResourceWebSocketFrameView.ts | clearAll": {
    "message": "Alle löschen"
  },
  "panels/network/ResourceWebSocketFrameView.ts | clearAllL": {
    "message": "Alle löschen"
  },
  "panels/network/ResourceWebSocketFrameView.ts | connectionCloseMessage": {
    "message": "Nachricht zur Verbindungstrennung"
  },
  "panels/network/ResourceWebSocketFrameView.ts | continuationFrame": {
    "message": "Fortsetzungs-Frame"
  },
  "panels/network/ResourceWebSocketFrameView.ts | copyMessage": {
    "message": "Nachricht kopieren"
  },
  "panels/network/ResourceWebSocketFrameView.ts | copyMessageD": {
    "message": "Nachricht kopieren…"
  },
  "panels/network/ResourceWebSocketFrameView.ts | data": {
    "message": "Daten"
  },
  "panels/network/ResourceWebSocketFrameView.ts | enterRegex": {
    "message": "Regex eingeben, beispielsweise: (web)?socket"
  },
  "panels/network/ResourceWebSocketFrameView.ts | filter": {
    "message": "Filtern"
  },
  "panels/network/ResourceWebSocketFrameView.ts | length": {
    "message": "Länge"
  },
  "panels/network/ResourceWebSocketFrameView.ts | na": {
    "message": "–"
  },
  "panels/network/ResourceWebSocketFrameView.ts | pingMessage": {
    "message": "Ping-Nachricht"
  },
  "panels/network/ResourceWebSocketFrameView.ts | pongMessage": {
    "message": "Pong-Nachricht"
  },
  "panels/network/ResourceWebSocketFrameView.ts | receive": {
    "message": "Empfangen"
  },
  "panels/network/ResourceWebSocketFrameView.ts | sOpcodeS": {
    "message": "{PH1} (Opcode {PH2})"
  },
  "panels/network/ResourceWebSocketFrameView.ts | sOpcodeSMask": {
    "message": "{PH1} (Opcode {PH2}, maskieren)"
  },
  "panels/network/ResourceWebSocketFrameView.ts | selectMessageToBrowseItsContent": {
    "message": "Wähle eine Nachricht aus, um ihren Inhalt zu durchsuchen."
  },
  "panels/network/ResourceWebSocketFrameView.ts | send": {
    "message": "Senden"
  },
  "panels/network/ResourceWebSocketFrameView.ts | textMessage": {
    "message": "SMS"
  },
  "panels/network/ResourceWebSocketFrameView.ts | time": {
    "message": "Zeit"
  },
  "panels/network/ResourceWebSocketFrameView.ts | webSocketFrame": {
    "message": "WebSocket-Frame"
  },
  "panels/network/SignedExchangeInfoView.ts | certificate": {
    "message": "Zertifikat"
  },
  "panels/network/SignedExchangeInfoView.ts | certificateSha": {
    "message": "SHA256-Zertifikat"
  },
  "panels/network/SignedExchangeInfoView.ts | certificateUrl": {
    "message": "Zertifikat-URL"
  },
  "panels/network/SignedExchangeInfoView.ts | date": {
    "message": "Datum"
  },
  "panels/network/SignedExchangeInfoView.ts | errors": {
    "message": "Fehler"
  },
  "panels/network/SignedExchangeInfoView.ts | expires": {
    "message": "Ablaufdatum"
  },
  "panels/network/SignedExchangeInfoView.ts | headerIntegrityHash": {
    "message": "Header-Integrity-Hash"
  },
  "panels/network/SignedExchangeInfoView.ts | integrity": {
    "message": "Integrität"
  },
  "panels/network/SignedExchangeInfoView.ts | issuer": {
    "message": "Aussteller"
  },
  "panels/network/SignedExchangeInfoView.ts | label": {
    "message": "Label"
  },
  "panels/network/SignedExchangeInfoView.ts | learnmore": {
    "message": "Weitere Informationen"
  },
  "panels/network/SignedExchangeInfoView.ts | requestUrl": {
    "message": "Anfrage-URL"
  },
  "panels/network/SignedExchangeInfoView.ts | responseCode": {
    "message": "Antwortcode"
  },
  "panels/network/SignedExchangeInfoView.ts | responseHeaders": {
    "message": "Antwortheader"
  },
  "panels/network/SignedExchangeInfoView.ts | signature": {
    "message": "Signatur"
  },
  "panels/network/SignedExchangeInfoView.ts | signedHttpExchange": {
    "message": "Signed HTTP Exchange"
  },
  "panels/network/SignedExchangeInfoView.ts | subject": {
    "message": "Subject"
  },
  "panels/network/SignedExchangeInfoView.ts | validFrom": {
    "message": "Gültig ab"
  },
  "panels/network/SignedExchangeInfoView.ts | validUntil": {
    "message": "Gültig bis"
  },
  "panels/network/SignedExchangeInfoView.ts | validityUrl": {
    "message": "Gültigkeits-URL"
  },
  "panels/network/SignedExchangeInfoView.ts | viewCertificate": {
    "message": "Zertifikat ansehen"
  },
  "panels/network/components/HeaderSectionRow.ts | activeClientExperimentVariation": {
    "message": "client experiment variation IDs aktiv."
  },
  "panels/network/components/HeaderSectionRow.ts | activeClientExperimentVariationIds": {
    "message": "Aktive client experiment variation IDs, die serverseitiges Verhalten auslösen."
  },
  "panels/network/components/HeaderSectionRow.ts | decoded": {
    "message": "Dekodiert:"
  },
  "panels/network/components/HeaderSectionRow.ts | editHeader": {
    "message": "Header überschreiben"
  },
  "panels/network/components/HeaderSectionRow.ts | headerNamesOnlyLetters": {
    "message": "Headernamen dürfen nur Buchstaben, Ziffern, Bindestriche oder Unterstriche enthalten"
  },
  "panels/network/components/HeaderSectionRow.ts | learnMore": {
    "message": "Weitere Informationen"
  },
  "panels/network/components/HeaderSectionRow.ts | learnMoreInTheIssuesTab": {
    "message": "Weitere Informationen findest du im Tab für Probleme"
  },
  "panels/network/components/HeaderSectionRow.ts | reloadPrompt": {
    "message": "Aktualisiere die Seite/Anfrage, damit diese Änderungen wirksam werden"
  },
  "panels/network/components/HeaderSectionRow.ts | removeOverride": {
    "message": "Diese Header-Überschreibung entfernen"
  },
  "panels/network/components/RequestHeaderSection.ts | learnMore": {
    "message": "Weitere Informationen"
  },
  "panels/network/components/RequestHeaderSection.ts | onlyProvisionalHeadersAre": {
    "message": "Es sind nur vorübergehende Header verfügbar, da diese Anfrage nicht über das Netzwerk gesendet wurde. Stattdessen wurde sie über einen lokalen Cache ausgeliefert, der die originalen Anfrageheader nicht speichert. Deaktiviere den Cache, um die vollständigen Anfrageheader anzuzeigen."
  },
  "panels/network/components/RequestHeaderSection.ts | provisionalHeadersAreShown": {
    "message": "Vorläufige Header werden angezeigt."
  },
  "panels/network/components/RequestHeaderSection.ts | provisionalHeadersAreShownDisableCache": {
    "message": "Vorläufige Header werden angezeigt. Deaktiviere den Cache, um die vollständigen Header anzuzeigen."
  },
  "panels/network/components/RequestHeadersView.ts | fromDiskCache": {
    "message": "(vom Datenträgercache)"
  },
  "panels/network/components/RequestHeadersView.ts | fromMemoryCache": {
    "message": "(aus Arbeitsspeicher-Cache)"
  },
  "panels/network/components/RequestHeadersView.ts | fromPrefetchCache": {
    "message": "(aus dem Prefetch-Cache)"
  },
  "panels/network/components/RequestHeadersView.ts | fromServiceWorker": {
    "message": "(von service worker)"
  },
  "panels/network/components/RequestHeadersView.ts | fromSignedexchange": {
    "message": "(von Signed-Exchange)"
  },
  "panels/network/components/RequestHeadersView.ts | fromWebBundle": {
    "message": "(von Web Bundle)"
  },
  "panels/network/components/RequestHeadersView.ts | general": {
    "message": "Allgemein"
  },
  "panels/network/components/RequestHeadersView.ts | raw": {
    "message": "Rohdaten"
  },
  "panels/network/components/RequestHeadersView.ts | referrerPolicy": {
    "message": "Richtlinien für Referrer-URL"
  },
  "panels/network/components/RequestHeadersView.ts | remoteAddress": {
    "message": "Remote-Adresse"
  },
  "panels/network/components/RequestHeadersView.ts | requestHeaders": {
    "message": "Anfrageheader"
  },
  "panels/network/components/RequestHeadersView.ts | requestMethod": {
    "message": "Anfragemethode"
  },
  "panels/network/components/RequestHeadersView.ts | requestUrl": {
    "message": "Anfrage-URL"
  },
  "panels/network/components/RequestHeadersView.ts | responseHeaders": {
    "message": "Antwortheader"
  },
  "panels/network/components/RequestHeadersView.ts | revealHeaderOverrides": {
    "message": "Überschreibungsdefinitionen im Header anzeigen"
  },
  "panels/network/components/RequestHeadersView.ts | showMore": {
    "message": "Mehr anzeigen"
  },
  "panels/network/components/RequestHeadersView.ts | statusCode": {
    "message": "Statuscode"
  },
  "panels/network/components/RequestTrustTokensView.ts | aClientprovidedArgumentWas": {
    "message": "Ein vom Client bereitgestelltes Argument war fehlerhaft oder anderweitig ungültig."
  },
  "panels/network/components/RequestTrustTokensView.ts | eitherNoInputsForThisOperation": {
    "message": "Es sind entweder keine Eingaben für diesen Vorgang verfügbar oder die Ausgabe überschreitet das Kontingent für den Vorgang."
  },
  "panels/network/components/RequestTrustTokensView.ts | failure": {
    "message": "Fehler"
  },
  "panels/network/components/RequestTrustTokensView.ts | issuer": {
    "message": "Aussteller"
  },
  "panels/network/components/RequestTrustTokensView.ts | issuers": {
    "message": "Aussteller"
  },
  "panels/network/components/RequestTrustTokensView.ts | numberOfIssuedTokens": {
    "message": "Anzahl ausgestellter Token"
  },
  "panels/network/components/RequestTrustTokensView.ts | parameters": {
    "message": "Parameter"
  },
  "panels/network/components/RequestTrustTokensView.ts | refreshPolicy": {
    "message": "Richtlinie aktualisieren"
  },
  "panels/network/components/RequestTrustTokensView.ts | result": {
    "message": "Ergebnis"
  },
  "panels/network/components/RequestTrustTokensView.ts | status": {
    "message": "Status"
  },
  "panels/network/components/RequestTrustTokensView.ts | success": {
    "message": "Fertig"
  },
  "panels/network/components/RequestTrustTokensView.ts | theKeysForThisPSTIssuerAreUnavailable": {
    "message": "Die Schlüssel für diesen PST-Aussteller sind nicht verfügbar. Der Aussteller muss möglicherweise über den Chrome-Registrierungsprozess registriert werden."
  },
  "panels/network/components/RequestTrustTokensView.ts | theOperationFailedForAnUnknown": {
    "message": "Der Vorgang konnte aus unbekanntem Grund nicht abgeschlossen werden."
  },
  "panels/network/components/RequestTrustTokensView.ts | theOperationWasFulfilledLocally": {
    "message": "Der Vorgang wurde lokal ausgeführt. Es wurde keine Anfrage gesendet."
  },
  "panels/network/components/RequestTrustTokensView.ts | theOperationsResultWasServedFrom": {
    "message": "Das Ergebnis des Vorgangs wurde vom Cache ausgeliefert."
  },
  "panels/network/components/RequestTrustTokensView.ts | theServersResponseWasMalformedOr": {
    "message": "Die Serverantwort war fehlerhaft oder anderweitig ungültig."
  },
  "panels/network/components/RequestTrustTokensView.ts | topLevelOrigin": {
    "message": "Quelle der obersten Ebene"
  },
  "panels/network/components/RequestTrustTokensView.ts | type": {
    "message": "Typ"
  },
  "panels/network/components/ResponseHeaderSection.ts | addHeader": {
    "message": "Header hinzufügen"
  },
  "panels/network/components/ResponseHeaderSection.ts | chooseThisOptionIfTheResourceAnd": {
    "message": "Wähle diese Option, wenn die Ressource und das Dokument von der gleichen Website bereitgestellt werden."
  },
  "panels/network/components/ResponseHeaderSection.ts | onlyChooseThisOptionIfAn": {
    "message": "Wähle diese Option nur aus, wenn beliebige Websites mit dieser Ressource kein Sicherheitsrisiko darstellen."
  },
  "panels/network/components/ResponseHeaderSection.ts | thisDocumentWasBlockedFrom": {
    "message": "Das Laden des Dokuments in einem Pop-up, das von einem Sandbox-iFrame geöffnet wurde, wurde blockiert, da für dieses Dokument eine herkunftsübergreifende Richtlinie für die Ursprungsseite festgelegt wurde."
  },
  "panels/network/components/ResponseHeaderSection.ts | toEmbedThisFrameInYourDocument": {
    "message": "Um diesen Frame in dein Dokument einzubetten, muss die Antwort die ursprungsübergreifende Einbettungs-Richtlinie aktivieren, indem sie den folgenden Antwortheader angibt:"
  },
  "panels/network/components/ResponseHeaderSection.ts | toUseThisResourceFromADifferent": {
    "message": "Um diese Ressource aus einem anderen Ursprung zu verwenden, muss der Server in den Antwortheadern eine ursprungsübergreifende Ressourcenrichtlinie festlegen:"
  },
  "panels/network/components/ResponseHeaderSection.ts | toUseThisResourceFromADifferentOrigin": {
    "message": "Um diese Ressource aus einem anderen Ursprung zu verwenden, kann der Server Einschränkungen für den Antwortheader der ursprungsübergreifenden Ressourcenrichtlinie aufheben:"
  },
  "panels/network/components/ResponseHeaderSection.ts | toUseThisResourceFromADifferentSite": {
    "message": "Um diese Ressource aus einer anderen Website zu verwenden, kann der Server Einschränkungen für den Antwortheader der ursprungsübergreifenden Ressourcenrichtlinie aufheben:"
  },
  "panels/network/components/WebBundleInfoView.ts | bundledResource": {
    "message": "Gebündelte Ressource"
  },
  "panels/network/network-meta.ts | addNetworkRequestBlockingPattern": {
    "message": "Blockierungsmuster für Netzwerkanfragen hinzufügen"
  },
  "panels/network/network-meta.ts | clear": {
    "message": "Netzwerkprotokoll löschen"
  },
  "panels/network/network-meta.ts | colorCode": {
    "message": "Farbcode"
  },
  "panels/network/network-meta.ts | colorCodeByResourceType": {
    "message": "Nach Ressourcentyp farbcodieren"
  },
  "panels/network/network-meta.ts | colorcodeResourceTypes": {
    "message": "Farbcode-Ressourcentypen"
  },
  "panels/network/network-meta.ts | diskCache": {
    "message": "Datenträger-Cache"
  },
  "panels/network/network-meta.ts | dontGroupNetworkLogItemsByFrame": {
    "message": "Netzwerkprotokoll-Einträge nicht nach Frame gruppieren"
  },
  "panels/network/network-meta.ts | frame": {
    "message": "Frame"
  },
  "panels/network/network-meta.ts | group": {
    "message": "Gruppe"
  },
  "panels/network/network-meta.ts | groupNetworkLogByFrame": {
    "message": "Netzwerkprotokoll nach Frame gruppieren"
  },
  "panels/network/network-meta.ts | groupNetworkLogItemsByFrame": {
    "message": "Netzwerkprotokoll-Einträge nach Frame gruppieren"
  },
  "panels/network/network-meta.ts | hideRequestDetails": {
    "message": "Anfragedetails ausblenden"
  },
  "panels/network/network-meta.ts | netWork": {
    "message": "Netzwerk"
  },
  "panels/network/network-meta.ts | network": {
    "message": "Netzwerk"
  },
  "panels/network/network-meta.ts | networkConditions": {
    "message": "Netzwerkbedingungen"
  },
  "panels/network/network-meta.ts | networkRequestBlocking": {
    "message": "Blockierung der Netzwerkanfrage"
  },
  "panels/network/network-meta.ts | networkThrottling": {
    "message": "Netzwerkdrosselung"
  },
  "panels/network/network-meta.ts | recordNetworkLog": {
    "message": "Netzwerkprotokoll aufzeichnen"
  },
  "panels/network/network-meta.ts | removeAllNetworkRequestBlockingPatterns": {
    "message": "Alle Blockierungsmuster für Netzwerkanfragen entfernen"
  },
  "panels/network/network-meta.ts | resourceType": {
    "message": "Ressourcentyp"
  },
  "panels/network/network-meta.ts | search": {
    "message": "Suche"
  },
  "panels/network/network-meta.ts | showNetwork": {
    "message": "Netzwerk anzeigen"
  },
  "panels/network/network-meta.ts | showNetworkConditions": {
    "message": "Netzwerkbedingungen anzeigen"
  },
  "panels/network/network-meta.ts | showNetworkRequestBlocking": {
    "message": "Blockierung der Netzwerkanfrage anzeigen"
  },
  "panels/network/network-meta.ts | showSearch": {
    "message": "Suche anzeigen"
  },
  "panels/network/network-meta.ts | stopRecordingNetworkLog": {
    "message": "Aufzeichnung des Netzwerkprotokolls beenden"
  },
  "panels/network/network-meta.ts | useDefaultColors": {
    "message": "Standardfarben verwenden"
  },
  "panels/performance_monitor/PerformanceMonitor.ts | cpuUsage": {
    "message": "CPU-Verwendung"
  },
  "panels/performance_monitor/PerformanceMonitor.ts | documentFrames": {
    "message": "Dokument-Frames"
  },
  "panels/performance_monitor/PerformanceMonitor.ts | documents": {
    "message": "Dokumente"
  },
  "panels/performance_monitor/PerformanceMonitor.ts | domNodes": {
    "message": "DOM-Knoten"
  },
  "panels/performance_monitor/PerformanceMonitor.ts | graphsDisplayingARealtimeViewOf": {
    "message": "Grafiken, die Leistungsmesswerte in Echtzeit anzeigen"
  },
  "panels/performance_monitor/PerformanceMonitor.ts | jsEventListeners": {
    "message": "JS-Ereignis-Listener"
  },
  "panels/performance_monitor/PerformanceMonitor.ts | jsHeapSize": {
    "message": "JS-Heap-Größe"
  },
  "panels/performance_monitor/PerformanceMonitor.ts | layoutsSec": {
    "message": "Layouts/Sek."
  },
  "panels/performance_monitor/PerformanceMonitor.ts | paused": {
    "message": "Pausiert"
  },
  "panels/performance_monitor/PerformanceMonitor.ts | styleRecalcsSec": {
    "message": "Style-Neuberechnungen/Sek."
  },
  "panels/performance_monitor/performance_monitor-meta.ts | activity": {
    "message": "Aktivität"
  },
  "panels/performance_monitor/performance_monitor-meta.ts | metrics": {
    "message": "Messwerte"
  },
  "panels/performance_monitor/performance_monitor-meta.ts | monitor": {
    "message": "Überwachen"
  },
  "panels/performance_monitor/performance_monitor-meta.ts | performance": {
    "message": "Leistung"
  },
  "panels/performance_monitor/performance_monitor-meta.ts | performanceMonitor": {
    "message": "Leistungsüberwachung"
  },
  "panels/performance_monitor/performance_monitor-meta.ts | showPerformanceMonitor": {
    "message": "Performance Monitor anzeigen"
  },
  "panels/performance_monitor/performance_monitor-meta.ts | systemMonitor": {
    "message": "Systemmonitor"
  },
  "panels/profiler/CPUProfileView.ts | aggregatedSelfTime": {
    "message": "Zusammengefasste Zeit für Einzelaktivität"
  },
  "panels/profiler/CPUProfileView.ts | aggregatedTotalTime": {
    "message": "Aggregierte Gesamtzeit"
  },
  "panels/profiler/CPUProfileView.ts | cpuProfiles": {
    "message": "CPU-PROFILE"
  },
  "panels/profiler/CPUProfileView.ts | cpuProfilesShow": {
    "message": "CPU-Profile zeigen, wo die Ausführungszeit in den JavaScript-Funktionen deiner Seite verbracht wird."
  },
  "panels/profiler/CPUProfileView.ts | fms": {
    "message": "{PH1} ms"
  },
  "panels/profiler/CPUProfileView.ts | formatPercent": {
    "message": "{PH1} %"
  },
  "panels/profiler/CPUProfileView.ts | name": {
    "message": "Name"
  },
  "panels/profiler/CPUProfileView.ts | notOptimized": {
    "message": "Nicht optimiert"
  },
  "panels/profiler/CPUProfileView.ts | recordJavascriptCpuProfile": {
    "message": "JavaScript-CPU-Profil aufzeichnen"
  },
  "panels/profiler/CPUProfileView.ts | recording": {
    "message": "Aufnahme läuft…"
  },
  "panels/profiler/CPUProfileView.ts | selfTime": {
    "message": "Zeit für Einzelaktivität"
  },
  "panels/profiler/CPUProfileView.ts | startCpuProfiling": {
    "message": "CPU-Profiling starten"
  },
  "panels/profiler/CPUProfileView.ts | stopCpuProfiling": {
    "message": "CPU-Profilerstellung beenden"
  },
  "panels/profiler/CPUProfileView.ts | totalTime": {
    "message": "Gesamtzeit"
  },
  "panels/profiler/CPUProfileView.ts | url": {
    "message": "URL"
  },
  "panels/profiler/HeapProfileView.ts | allocationSampling": {
    "message": "Zuweisungs-Sampling"
  },
  "panels/profiler/HeapProfileView.ts | formatPercent": {
    "message": "{PH1} %"
  },
  "panels/profiler/HeapProfileView.ts | heapProfilerIsRecording": {
    "message": "Heap-Profiler zeichnet auf"
  },
  "panels/profiler/HeapProfileView.ts | itProvidesGoodApproximation": {
    "message": "Es bietet eine gute Annäherung an Zuweisungen, die nach JavaScript-Ausführungsstacks aufgeschlüsselt sind."
  },
  "panels/profiler/HeapProfileView.ts | name": {
    "message": "Name"
  },
  "panels/profiler/HeapProfileView.ts | profileD": {
    "message": "Profil {PH1}"
  },
  "panels/profiler/HeapProfileView.ts | recordMemoryAllocations": {
    "message": "Arbeitsspeicherzuweisungen stichprobenartig aufzeichnen."
  },
  "panels/profiler/HeapProfileView.ts | recording": {
    "message": "Aufnahme läuft…"
  },
  "panels/profiler/HeapProfileView.ts | sBytes": {
    "message": "{PH1} Byte"
  },
  "panels/profiler/HeapProfileView.ts | samplingProfiles": {
    "message": "SAMPLING-PROFILE"
  },
  "panels/profiler/HeapProfileView.ts | selectedSizeS": {
    "message": "Ausgewählte Größe: {PH1}"
  },
  "panels/profiler/HeapProfileView.ts | selfSize": {
    "message": "Eigene Größe"
  },
  "panels/profiler/HeapProfileView.ts | selfSizeBytes": {
    "message": "Eigene Größe (Bytes)"
  },
  "panels/profiler/HeapProfileView.ts | skb": {
    "message": "{PH1} KB"
  },
  "panels/profiler/HeapProfileView.ts | startHeapProfiling": {
    "message": "Heap-Profiling beginnen"
  },
  "panels/profiler/HeapProfileView.ts | stopHeapProfiling": {
    "message": "Heap-Profiling beenden"
  },
  "panels/profiler/HeapProfileView.ts | stopping": {
    "message": "Wird beendet…"
  },
  "panels/profiler/HeapProfileView.ts | thisProfileTypeHasMinimal": {
    "message": "Dieser Profiltyp hat einen minimalen Leistungsoverhead und kann für Vorgänge mit langer Ausführungszeit verwendet werden."
  },
  "panels/profiler/HeapProfileView.ts | totalSize": {
    "message": "Gesamtgröße"
  },
  "panels/profiler/HeapProfileView.ts | totalSizeBytes": {
    "message": "Gesamtgröße (Byte)"
  },
  "panels/profiler/HeapProfileView.ts | url": {
    "message": "URL"
  },
  "panels/profiler/HeapProfilerPanel.ts | revealInSummaryView": {
    "message": "In Zusammenfassungsansicht anzeigen"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | Deleted": {
    "message": "# gelöscht"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | Delta": {
    "message": "# Delta"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | New": {
    "message": "Neu: #"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | allocSize": {
    "message": "Zuweisungsgröße"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | allocation": {
    "message": "Zuweisung"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | constructorString": {
    "message": "Konstrukteur"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | count": {
    "message": "Anzahl"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | distance": {
    "message": "Entfernung"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | distanceFromWindowObject": {
    "message": "Entfernung vom Fensterobjekt"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | freedSize": {
    "message": "Freigegebene Größe"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | function": {
    "message": "Funktion"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | heapSnapshotConstructors": {
    "message": "Heap-Snapshot-Konstruktoren"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | heapSnapshotDiff": {
    "message": "Heap-Snapshot-Differenz"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | heapSnapshotRetainment": {
    "message": "Heap-Snapshot-Beibehaltung"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | liveCount": {
    "message": "Live-Anzahl"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | liveSize": {
    "message": "Live-Größe"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | object": {
    "message": "Objekt"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | retainedSize": {
    "message": "Beibehaltene Größe"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | shallowSize": {
    "message": "Flache Größe"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | size": {
    "message": "Größe"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | sizeDelta": {
    "message": "Größe Delta"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | sizeOfTheObjectItselfInBytes": {
    "message": "Größe des Objekts in Byte"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | sizeOfTheObjectPlusTheGraphIt": {
    "message": "Größe des Objekts plus der darin enthaltenen Grafik in Byte"
  },
  "panels/profiler/HeapSnapshotGridNodes.ts | detachedFromDomTree": {
    "message": "Vom DOM-Baum getrennt"
  },
  "panels/profiler/HeapSnapshotGridNodes.ts | genericStringsTwoPlaceholders": {
    "message": "{PH1}, {PH2}"
  },
  "panels/profiler/HeapSnapshotGridNodes.ts | inElement": {
    "message": "in"
  },
  "panels/profiler/HeapSnapshotGridNodes.ts | internalArray": {
    "message": "(internes Array)[]"
  },
  "panels/profiler/HeapSnapshotGridNodes.ts | previewIsNotAvailable": {
    "message": "Vorschau ist nicht verfügbar."
  },
  "panels/profiler/HeapSnapshotGridNodes.ts | revealInSummaryView": {
    "message": "In Zusammenfassungsansicht anzeigen"
  },
  "panels/profiler/HeapSnapshotGridNodes.ts | revealObjectSWithIdSInSummary": {
    "message": "„{PH1}“-Objekt mit der ID @{PH2} in Zusammenfassungsansicht zeigen"
  },
  "panels/profiler/HeapSnapshotGridNodes.ts | storeAsGlobalVariable": {
    "message": "Als globale Variable speichern"
  },
  "panels/profiler/HeapSnapshotGridNodes.ts | summary": {
    "message": "Zusammenfassung"
  },
  "panels/profiler/HeapSnapshotGridNodes.ts | userObjectReachableFromWindow": {
    "message": "Vom Fenster aus erreichbares Benutzerobjekt"
  },
  "panels/profiler/HeapSnapshotProxy.ts | anErrorOccurredWhenACallToMethod": {
    "message": "Als ein Aufruf der Methode „{PH1}“ angefragt wurde, ist ein Fehler aufgetreten"
  },
  "panels/profiler/HeapSnapshotView.ts | AllocationTimelinesShowInstrumented": {
    "message": "Zugewiesene Zeitachsen zeigen instrumentierte JavaScript-Arbeitsspeicherzuweisungen im Zeitverlauf. Sobald das Profil aufgezeichnet ist, kannst du ein Zeitintervall auswählen, um Objekte anzuzeigen, die darin zugewiesen und am Ende der Aufzeichnung noch aktiv sind. Diesen Profiltyp zum Isolieren von Speicherlecks nutzen."
  },
  "panels/profiler/HeapSnapshotView.ts | allObjects": {
    "message": "Alle Objekte"
  },
  "panels/profiler/HeapSnapshotView.ts | allocation": {
    "message": "Zuweisung"
  },
  "panels/profiler/HeapSnapshotView.ts | allocationInstrumentationOn": {
    "message": "Zuweisungs-Instrumentierung auf der Zeitachse"
  },
  "panels/profiler/HeapSnapshotView.ts | allocationStack": {
    "message": "Zuweisungspaket"
  },
  "panels/profiler/HeapSnapshotView.ts | allocationTimelines": {
    "message": "ZEITACHSEN FÜR ZUWEISUNG"
  },
  "panels/profiler/HeapSnapshotView.ts | baseSnapshot": {
    "message": "Basissnapshot"
  },
  "panels/profiler/HeapSnapshotView.ts | captureNumericValue": {
    "message": "Numerische Werte in Aufnahme berücksichtigen"
  },
  "panels/profiler/HeapSnapshotView.ts | classFilter": {
    "message": "Klassenfilter"
  },
  "panels/profiler/HeapSnapshotView.ts | code": {
    "message": "Code"
  },
  "panels/profiler/HeapSnapshotView.ts | comparison": {
    "message": "Vergleich"
  },
  "panels/profiler/HeapSnapshotView.ts | containment": {
    "message": "Eingrenzung"
  },
  "panels/profiler/HeapSnapshotView.ts | exposeInternals": {
    "message": "Interne Informationen offenlegen (enthalten zusätzliche implementierungsspezifische Details)"
  },
  "panels/profiler/HeapSnapshotView.ts | filter": {
    "message": "Filtern"
  },
  "panels/profiler/HeapSnapshotView.ts | find": {
    "message": "Suchen"
  },
  "panels/profiler/HeapSnapshotView.ts | heapMemoryUsage": {
    "message": "Heap-Arbeitsspeichernutzung"
  },
  "panels/profiler/HeapSnapshotView.ts | heapSnapshot": {
    "message": "Heap-Snapshot"
  },
  "panels/profiler/HeapSnapshotView.ts | heapSnapshotProfilesShowMemory": {
    "message": "Heap-Snapshotprofile zeigen die Arbeitsspeicherverteilung für die JavaScript-Objekte und die zugehörigen DOM-Knoten deiner Seite an."
  },
  "panels/profiler/HeapSnapshotView.ts | heapSnapshots": {
    "message": "HEAP-SNAPSHOTS"
  },
  "panels/profiler/HeapSnapshotView.ts | jsArrays": {
    "message": "JS-Arrays"
  },
  "panels/profiler/HeapSnapshotView.ts | liveObjects": {
    "message": "Live-Objekte"
  },
  "panels/profiler/HeapSnapshotView.ts | loading": {
    "message": "Wird geladen…"
  },
  "panels/profiler/HeapSnapshotView.ts | objectsAllocatedBeforeS": {
    "message": "Objekte wurden vor {PH1} zugewiesen"
  },
  "panels/profiler/HeapSnapshotView.ts | objectsAllocatedBetweenSAndS": {
    "message": "Zwischen {PH1} und {PH2} zugewiesene Objekte"
  },
  "panels/profiler/HeapSnapshotView.ts | percentagePlaceholder": {
    "message": "{PH1} %"
  },
  "panels/profiler/HeapSnapshotView.ts | perspective": {
    "message": "Perspektive"
  },
  "panels/profiler/HeapSnapshotView.ts | recordAllocationStacksExtra": {
    "message": "Stacktraces von Zuweisungspaketen aufzeichnen (Overhead für Extraleistung)"
  },
  "panels/profiler/HeapSnapshotView.ts | recording": {
    "message": "Aufnahme läuft…"
  },
  "panels/profiler/HeapSnapshotView.ts | retainers": {
    "message": "Retainer"
  },
  "panels/profiler/HeapSnapshotView.ts | savingD": {
    "message": "Wird gespeichert… {PH1} %"
  },
  "panels/profiler/HeapSnapshotView.ts | selectedSizeS": {
    "message": "Ausgewählte Größe: {PH1}"
  },
  "panels/profiler/HeapSnapshotView.ts | snapshotD": {
    "message": "Snapshot {PH1}"
  },
  "panels/profiler/HeapSnapshotView.ts | snapshotting": {
    "message": "Erstellen von Snapshots…"
  },
  "panels/profiler/HeapSnapshotView.ts | stackWasNotRecordedForThisObject": {
    "message": "Paket wurde für dieses Objekt nicht aufgezeichnet, da es vor dem Start dieser Profilaufzeichnung zugeordnet wurde."
  },
  "panels/profiler/HeapSnapshotView.ts | startRecordingHeapProfile": {
    "message": "Aufzeichnen des Heap-Profils starten"
  },
  "panels/profiler/HeapSnapshotView.ts | statistics": {
    "message": "Statistiken"
  },
  "panels/profiler/HeapSnapshotView.ts | stopRecordingHeapProfile": {
    "message": "Aufnahme des Heap-Profils beenden"
  },
  "panels/profiler/HeapSnapshotView.ts | strings": {
    "message": "Strings"
  },
  "panels/profiler/HeapSnapshotView.ts | summary": {
    "message": "Zusammenfassung"
  },
  "panels/profiler/HeapSnapshotView.ts | systemObjects": {
    "message": "Systemobjekte"
  },
  "panels/profiler/HeapSnapshotView.ts | takeHeapSnapshot": {
    "message": "Heap-Snapshot erstellen"
  },
  "panels/profiler/HeapSnapshotView.ts | typedArrays": {
    "message": "Eingegebene Arrays"
  },
  "panels/profiler/IsolateSelector.ts | changeRate": {
    "message": "{PH1}/s"
  },
  "panels/profiler/IsolateSelector.ts | decreasingBySPerSecond": {
    "message": "verringert sich um {PH1} pro Sekunde"
  },
  "panels/profiler/IsolateSelector.ts | empty": {
    "message": "(leer)"
  },
  "panels/profiler/IsolateSelector.ts | heapSizeChangeTrendOverTheLastS": {
    "message": "Änderungstrend der Heap-Größe in den letzten {PH1} Minuten."
  },
  "panels/profiler/IsolateSelector.ts | heapSizeInUseByLiveJsObjects": {
    "message": "Heap-Größe wird bereits von Live-JavaScript-Objekten verwendet."
  },
  "panels/profiler/IsolateSelector.ts | increasingBySPerSecond": {
    "message": "steigt um {PH1} pro Sekunde"
  },
  "panels/profiler/IsolateSelector.ts | javascriptVmInstances": {
    "message": "JavaScript-VM-Instanzen"
  },
  "panels/profiler/IsolateSelector.ts | totalJsHeapSize": {
    "message": "JS-Heap-Größe gesamt"
  },
  "panels/profiler/IsolateSelector.ts | totalPageJsHeapSizeAcrossAllVm": {
    "message": "JS-Heap-Größe für alle Seiten auf allen VM-Instanzen."
  },
  "panels/profiler/IsolateSelector.ts | totalPageJsHeapSizeChangeTrend": {
    "message": "Änderungstrend der JS-Heap-Größe für die gesamte Seite in den letzten {PH1} Minuten."
  },
  "panels/profiler/LiveHeapProfileView.ts | allocatedJsHeapSizeCurrentlyIn": {
    "message": "Derzeit verwendete zugewiesene JS-Heap-Größe"
  },
  "panels/profiler/LiveHeapProfileView.ts | anonymousScriptS": {
    "message": "(Anonymes Script {PH1})"
  },
  "panels/profiler/LiveHeapProfileView.ts | heapProfile": {
    "message": "Heap-Profil"
  },
  "panels/profiler/LiveHeapProfileView.ts | jsHeap": {
    "message": "JS Heap"
  },
  "panels/profiler/LiveHeapProfileView.ts | kb": {
    "message": "KB"
  },
  "panels/profiler/LiveHeapProfileView.ts | numberOfVmsSharingTheSameScript": {
    "message": "Anzahl der VMs mit derselben Skriptquelle"
  },
  "panels/profiler/LiveHeapProfileView.ts | scriptUrl": {
    "message": "Script-URL"
  },
  "panels/profiler/LiveHeapProfileView.ts | urlOfTheScriptSource": {
    "message": "URL der Skriptquelle"
  },
  "panels/profiler/LiveHeapProfileView.ts | vms": {
    "message": "VMs"
  },
  "panels/profiler/ModuleUIStrings.ts | buildingAllocationStatistics": {
    "message": "Zuweisungsstatistiken werden erstellt…"
  },
  "panels/profiler/ModuleUIStrings.ts | buildingDominatedNodes": {
    "message": "Dominierte Knoten werden aufgebaut…"
  },
  "panels/profiler/ModuleUIStrings.ts | buildingDominatorTree": {
    "message": "Dominator-Baum wird erstellt…"
  },
  "panels/profiler/ModuleUIStrings.ts | buildingEdgeIndexes": {
    "message": "Handmarken werden erstellt…"
  },
  "panels/profiler/ModuleUIStrings.ts | buildingLocations": {
    "message": "Standorte werden erstellt…"
  },
  "panels/profiler/ModuleUIStrings.ts | buildingPostorderIndex": {
    "message": "Bestellindex wird erstellt…"
  },
  "panels/profiler/ModuleUIStrings.ts | buildingRetainers": {
    "message": "Retainer werden erstellt…"
  },
  "panels/profiler/ModuleUIStrings.ts | calculatingDistances": {
    "message": "Distanzen werden berechnet…"
  },
  "panels/profiler/ModuleUIStrings.ts | calculatingNodeFlags": {
    "message": "Knoten-Flags werden berechnet…"
  },
  "panels/profiler/ModuleUIStrings.ts | calculatingRetainedSizes": {
    "message": "Beibehaltungsgrößen werden berechnet…"
  },
  "panels/profiler/ModuleUIStrings.ts | calculatingSamples": {
    "message": "Samples werden berechnet…"
  },
  "panels/profiler/ModuleUIStrings.ts | calculatingStatistics": {
    "message": "Statistiken werden berechnet…"
  },
  "panels/profiler/ModuleUIStrings.ts | done": {
    "message": "Fertig"
  },
  "panels/profiler/ModuleUIStrings.ts | finishedProcessing": {
    "message": "Verarbeitung abgeschlossen."
  },
  "panels/profiler/ModuleUIStrings.ts | loadingAllocationTracesD": {
    "message": "Zuordnungs-Traces werden geladen… {PH1} %"
  },
  "panels/profiler/ModuleUIStrings.ts | loadingEdgesD": {
    "message": "Kanten werden geladen… {PH1} %"
  },
  "panels/profiler/ModuleUIStrings.ts | loadingLocations": {
    "message": "Standorte werden geladen…"
  },
  "panels/profiler/ModuleUIStrings.ts | loadingNodesD": {
    "message": "Knoten werden geladen… {PH1} %"
  },
  "panels/profiler/ModuleUIStrings.ts | loadingSamples": {
    "message": "Beispiele werden geladen…"
  },
  "panels/profiler/ModuleUIStrings.ts | loadingSnapshotInfo": {
    "message": "Snapshotinfos werden geladen…"
  },
  "panels/profiler/ModuleUIStrings.ts | loadingStrings": {
    "message": "Strings werden geladen…"
  },
  "panels/profiler/ModuleUIStrings.ts | parsingStrings": {
    "message": "Strings werden geparst…"
  },
  "panels/profiler/ModuleUIStrings.ts | processingSnapshot": {
    "message": "Snapshot wird verarbeitet…"
  },
  "panels/profiler/ModuleUIStrings.ts | propagatingDomState": {
    "message": "DOM-Status wird angewendet…"
  },
  "panels/profiler/ProfileDataGrid.ts | genericTextTwoPlaceholders": {
    "message": "{PH1}, {PH2}"
  },
  "panels/profiler/ProfileDataGrid.ts | notOptimizedS": {
    "message": "Nicht optimiert: {PH1}"
  },
  "panels/profiler/ProfileLauncherView.ts | load": {
    "message": "Laden"
  },
  "panels/profiler/ProfileLauncherView.ts | selectJavascriptVmInstance": {
    "message": "JavaScript-VM-Instanz auswählen"
  },
  "panels/profiler/ProfileLauncherView.ts | selectProfilingType": {
    "message": "Profilingtyp auswählen"
  },
  "panels/profiler/ProfileLauncherView.ts | start": {
    "message": "Starten"
  },
  "panels/profiler/ProfileLauncherView.ts | stop": {
    "message": "Stopp"
  },
  "panels/profiler/ProfileLauncherView.ts | takeSnapshot": {
    "message": "Snapshot erstellen"
  },
  "panels/profiler/ProfileSidebarTreeElement.ts | profileOptions": {
    "message": "Profiloptionen"
  },
  "panels/profiler/ProfileView.ts | chart": {
    "message": "Diagramm"
  },
  "panels/profiler/ProfileView.ts | excludeSelectedFunction": {
    "message": "Ausgewählte Funktion ausschließen"
  },
  "panels/profiler/ProfileView.ts | failedToReadFile": {
    "message": "Lesen der Datei fehlgeschlagen"
  },
  "panels/profiler/ProfileView.ts | fileSReadErrorS": {
    "message": "Lesefehler in Datei „{PH1}“: {PH2}"
  },
  "panels/profiler/ProfileView.ts | findByCostMsNameOrFile": {
    "message": "Nach Kosten (>50 ms), Name oder Datei suchen"
  },
  "panels/profiler/ProfileView.ts | focusSelectedFunction": {
    "message": "Ausgewählte Funktion hervorheben"
  },
  "panels/profiler/ProfileView.ts | function": {
    "message": "Funktion"
  },
  "panels/profiler/ProfileView.ts | heavyBottomUp": {
    "message": "Schwer (von unten nach oben)"
  },
  "panels/profiler/ProfileView.ts | loaded": {
    "message": "Geladen"
  },
  "panels/profiler/ProfileView.ts | loading": {
    "message": "Wird geladen…"
  },
  "panels/profiler/ProfileView.ts | loadingD": {
    "message": "Wird geladen… {PH1} %"
  },
  "panels/profiler/ProfileView.ts | parsing": {
    "message": "Wird geparst..."
  },
  "panels/profiler/ProfileView.ts | profile": {
    "message": "Profil"
  },
  "panels/profiler/ProfileView.ts | profileD": {
    "message": "Profil {PH1}"
  },
  "panels/profiler/ProfileView.ts | profileViewMode": {
    "message": "Profilansichtsmodus"
  },
  "panels/profiler/ProfileView.ts | profiler": {
    "message": "Profiler"
  },
  "panels/profiler/ProfileView.ts | restoreAllFunctions": {
    "message": "Alle Funktionen wiederherstellen"
  },
  "panels/profiler/ProfileView.ts | treeTopDown": {
    "message": "Baum (von oben nach unten)"
  },
  "panels/profiler/ProfilesPanel.ts | cantLoadFileSupportedFile": {
    "message": "Datei kann nicht geladen werden. Unterstützte Dateiendungen: „{PH1}“."
  },
  "panels/profiler/ProfilesPanel.ts | cantLoadProfileWhileAnother": {
    "message": "Profil kann nicht geladen werden, während ein anderes Profil aufgezeichnet wird."
  },
  "panels/profiler/ProfilesPanel.ts | deprecationWarnMsg": {
    "message": "Dieses Steuerfeld wird in der nächsten Version eingestellt. Verwende das Steuerfeld „Leistung“, um JavaScript-CPU-Profile aufzuzeichnen."
  },
  "panels/profiler/ProfilesPanel.ts | feedback": {
    "message": "Feedback"
  },
  "panels/profiler/ProfilesPanel.ts | goToPerformancePanel": {
    "message": "Zum Steuerfeld „Leistung“"
  },
  "panels/profiler/ProfilesPanel.ts | profileLoadingFailedS": {
    "message": "Profil konnte nicht geladen werden: {PH1}."
  },
  "panels/profiler/ProfilesPanel.ts | profiles": {
    "message": "Profile"
  },
  "panels/profiler/ProfilesPanel.ts | runD": {
    "message": "{PH1} ausführen"
  },
  "panels/profiler/profiler-meta.ts | clearAllProfiles": {
    "message": "Alle Profile löschen"
  },
  "panels/profiler/profiler-meta.ts | deleteProfile": {
    "message": "Profil löschen"
  },
  "panels/profiler/profiler-meta.ts | liveHeapProfile": {
    "message": "Live-Heap-Profil"
  },
  "panels/profiler/profiler-meta.ts | loadProfile": {
    "message": "Profil laden…"
  },
  "panels/profiler/profiler-meta.ts | memory": {
    "message": "Speicherverbrauch"
  },
  "panels/profiler/profiler-meta.ts | saveProfile": {
    "message": "Profil speichern…"
  },
  "panels/profiler/profiler-meta.ts | showLiveHeapProfile": {
    "message": "Live-Heap-Profil anzeigen"
  },
  "panels/profiler/profiler-meta.ts | showMemory": {
    "message": "Speicher anzeigen"
  },
  "panels/profiler/profiler-meta.ts | startRecordingHeapAllocations": {
    "message": "Aufzeichnung von Heap-Zuweisungen starten"
  },
  "panels/profiler/profiler-meta.ts | startRecordingHeapAllocationsAndReload": {
    "message": "Heap-Zuweisungen erfassen und Seite neu laden"
  },
  "panels/profiler/profiler-meta.ts | startStopRecording": {
    "message": "Aufnahme starten/beenden"
  },
  "panels/profiler/profiler-meta.ts | stopRecordingHeapAllocations": {
    "message": "Aufzeichnen von Heap-Zuweisungen stoppen"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | CDPCommandEditorHidden": {
    "message": "CDP-Befehlseditor ausgeblendet"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | CDPCommandEditorShown": {
    "message": "CDP-Befehlseditor eingeblendet"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | clearAll": {
    "message": "Alle löschen"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | documentation": {
    "message": "Dokumentation"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | editAndResend": {
    "message": "Bearbeiten und noch einmal senden"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | elapsedTime": {
    "message": "Verstrichene Zeit"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | filter": {
    "message": "Filtern"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | hideCDPCommandEditor": {
    "message": "CDP-Befehlseditor ausblenden"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | method": {
    "message": "Methode"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | noMessageSelected": {
    "message": "Keine Nachricht ausgewählt"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | record": {
    "message": "Aufnehmen"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | request": {
    "message": "Anfrage"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | response": {
    "message": "Antwort"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | sMs": {
    "message": "{PH1} ms"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | save": {
    "message": "Speichern"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | selectTarget": {
    "message": "Ziel auswählen"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | sendRawCDPCommand": {
    "message": "RAW-CDP-Befehl senden"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | sendRawCDPCommandExplanation": {
    "message": "Format: 'Domain.commandName' für einen Befehl ohne Parameter oder '{\"command\":\"Domain.commandName\", \"parameters\": {...}}' als JSON-Objekt für einen Befehl mit Parametern. 'cmd'/'method' und 'args'/'params'/'arguments' werden auch als alternative Schlüssel für das JSON-Objekt unterstützt."
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | session": {
    "message": "Sitzung"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | showCDPCommandEditor": {
    "message": "CDP-Befehlseditor anzeigen"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | target": {
    "message": "Ziel"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | timestamp": {
    "message": "Zeitstempel"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | type": {
    "message": "Typ"
  },
  "panels/protocol_monitor/components/JSONEditor.ts | addCustomProperty": {
    "message": "Benutzerdefiniertes Attribut hinzufügen"
  },
  "panels/protocol_monitor/components/JSONEditor.ts | addParameter": {
    "message": "Parameter hinzufügen"
  },
  "panels/protocol_monitor/components/JSONEditor.ts | deleteParameter": {
    "message": "Parameter löschen"
  },
  "panels/protocol_monitor/components/JSONEditor.ts | resetDefaultValue": {
    "message": "Auf Standardwert zurücksetzen"
  },
  "panels/protocol_monitor/components/Toolbar.ts | copyCommand": {
    "message": "Befehl kopieren"
  },
  "panels/protocol_monitor/components/Toolbar.ts | sendCommandCmdEnter": {
    "message": "Befehl senden – ⌘ + Eingabe"
  },
  "panels/protocol_monitor/components/Toolbar.ts | sendCommandCtrlEnter": {
    "message": "Befehl senden – Strg + Eingabe"
  },
  "panels/protocol_monitor/protocol_monitor-meta.ts | protocolMonitor": {
    "message": "Protokollmonitor"
  },
  "panels/protocol_monitor/protocol_monitor-meta.ts | showProtocolMonitor": {
    "message": "Protokollmonitor anzeigen"
  },
  "panels/recorder/RecorderController.ts | continueReplay": {
    "message": "Weiter"
  },
  "panels/recorder/RecorderController.ts | copyShortcut": {
    "message": "Aufzeichnung oder ausgewählten Schritt kopieren"
  },
  "panels/recorder/RecorderController.ts | createRecording": {
    "message": "Neue Aufzeichnung erstellen"
  },
  "panels/recorder/RecorderController.ts | deleteRecording": {
    "message": "Aufzeichnung löschen"
  },
  "panels/recorder/RecorderController.ts | export": {
    "message": "Exportieren"
  },
  "panels/recorder/RecorderController.ts | exportRecording": {
    "message": "Exportieren"
  },
  "panels/recorder/RecorderController.ts | exportViaExtensions": {
    "message": "Über Erweiterungen exportieren"
  },
  "panels/recorder/RecorderController.ts | getExtensions": {
    "message": "Erweiterungen ansehen"
  },
  "panels/recorder/RecorderController.ts | importRecording": {
    "message": "Aufzeichnung importieren"
  },
  "panels/recorder/RecorderController.ts | noRecordings": {
    "message": "Keine Aufnahmen"
  },
  "panels/recorder/RecorderController.ts | numberOfRecordings": {
    "message": "Aufzeichnung(en)"
  },
  "panels/recorder/RecorderController.ts | replayRecording": {
    "message": "Aufzeichnung noch einmal abspielen"
  },
  "panels/recorder/RecorderController.ts | sendFeedback": {
    "message": "Feedback geben"
  },
  "panels/recorder/RecorderController.ts | startStopRecording": {
    "message": "Aufzeichnung starten oder beenden"
  },
  "panels/recorder/RecorderController.ts | stepOverReplay": {
    "message": "Einen Schritt ausführen"
  },
  "panels/recorder/RecorderController.ts | toggleCode": {
    "message": "Codeansicht wechseln"
  },
  "panels/recorder/components/CreateRecordingView.ts | cancelRecording": {
    "message": "Aufzeichnung abbrechen"
  },
  "panels/recorder/components/CreateRecordingView.ts | createRecording": {
    "message": "Neue Aufzeichnung erstellen"
  },
  "panels/recorder/components/CreateRecordingView.ts | includeNecessarySelectors": {
    "message": "Du musst CSS, Pierce oder XPath als Option auswählen. Nur diese Selectors werden sicher aufgezeichnet, weil die ARIA- und Text-Selectors eventuell nicht eindeutig sind."
  },
  "panels/recorder/components/CreateRecordingView.ts | recordingName": {
    "message": "Name der Aufzeichnung"
  },
  "panels/recorder/components/CreateRecordingView.ts | recordingNameIsRequired": {
    "message": "Name der Aufzeichnung ist erforderlich"
  },
  "panels/recorder/components/CreateRecordingView.ts | selectorAttribute": {
    "message": "Selectorattribut"
  },
  "panels/recorder/components/CreateRecordingView.ts | selectorTypeARIA": {
    "message": "ARIA"
  },
  "panels/recorder/components/CreateRecordingView.ts | selectorTypeCSS": {
    "message": "CSS"
  },
  "panels/recorder/components/CreateRecordingView.ts | selectorTypePierce": {
    "message": "Pierce"
  },
  "panels/recorder/components/CreateRecordingView.ts | selectorTypeText": {
    "message": "Text"
  },
  "panels/recorder/components/CreateRecordingView.ts | selectorTypeXPath": {
    "message": "XPath"
  },
  "panels/recorder/components/CreateRecordingView.ts | selectorTypes": {
    "message": "Aufzuzeichnende Selectortypen"
  },
  "panels/recorder/components/CreateRecordingView.ts | startRecording": {
    "message": "Aufzeichnung starten"
  },
  "panels/recorder/components/ExtensionView.ts | closeView": {
    "message": "Schließen"
  },
  "panels/recorder/components/ExtensionView.ts | extension": {
    "message": "Von einer Browsererweiterung bereitgestellte Inhalte"
  },
  "panels/recorder/components/RecordingListView.ts | createRecording": {
    "message": "Neue Aufzeichnung erstellen"
  },
  "panels/recorder/components/RecordingListView.ts | deleteRecording": {
    "message": "Aufzeichnung löschen"
  },
  "panels/recorder/components/RecordingListView.ts | openRecording": {
    "message": "Aufzeichnung öffnen"
  },
  "panels/recorder/components/RecordingListView.ts | playRecording": {
    "message": "Aufzeichnung abspielen"
  },
  "panels/recorder/components/RecordingListView.ts | savedRecordings": {
    "message": "Gespeicherte Aufzeichnungen"
  },
  "panels/recorder/components/RecordingView.ts | addAssertion": {
    "message": "Assertion hinzufügen"
  },
  "panels/recorder/components/RecordingView.ts | cancelReplay": {
    "message": "Erneute Wiedergabe abbrechen"
  },
  "panels/recorder/components/RecordingView.ts | default": {
    "message": "Standard"
  },
  "panels/recorder/components/RecordingView.ts | desktop": {
    "message": "Computer"
  },
  "panels/recorder/components/RecordingView.ts | download": {
    "message": "Download: {value}"
  },
  "panels/recorder/components/RecordingView.ts | editReplaySettings": {
    "message": "Einstellungen für erneute Wiedergabe bearbeiten"
  },
  "panels/recorder/components/RecordingView.ts | editTitle": {
    "message": "Titel bearbeiten"
  },
  "panels/recorder/components/RecordingView.ts | endRecording": {
    "message": "Aufzeichnung beenden"
  },
  "panels/recorder/components/RecordingView.ts | environment": {
    "message": "Umgebung"
  },
  "panels/recorder/components/RecordingView.ts | hideCode": {
    "message": "Code ausblenden"
  },
  "panels/recorder/components/RecordingView.ts | latency": {
    "message": "Latenz: {value} ms"
  },
  "panels/recorder/components/RecordingView.ts | mobile": {
    "message": "Mobilgerät"
  },
  "panels/recorder/components/RecordingView.ts | network": {
    "message": "Netzwerk"
  },
  "panels/recorder/components/RecordingView.ts | performancePanel": {
    "message": "Bereich „Leistung“"
  },
  "panels/recorder/components/RecordingView.ts | recording": {
    "message": "Aufzeichnung läuft…"
  },
  "panels/recorder/components/RecordingView.ts | recordingIsBeingStopped": {
    "message": "Aufzeichnung wird beendet…"
  },
  "panels/recorder/components/RecordingView.ts | replaySettings": {
    "message": "Einstellungen für die erneute Wiedergabe"
  },
  "panels/recorder/components/RecordingView.ts | requiredTitleError": {
    "message": "Titel ist erforderlich"
  },
  "panels/recorder/components/RecordingView.ts | screenshotForSection": {
    "message": "Screenshot dieses Abschnitts"
  },
  "panels/recorder/components/RecordingView.ts | showCode": {
    "message": "Code anzeigen"
  },
  "panels/recorder/components/RecordingView.ts | timeout": {
    "message": "Zeitlimit: {value} ms"
  },
  "panels/recorder/components/RecordingView.ts | timeoutExplanation": {
    "message": "Die Zeitlimit-Einstellung (in Millisekunden) gilt für jede Aktion bei der Wiedergabe der Aufzeichnung. Wenn beispielsweise ein von einem CSS-Selektor identifiziertes DOM-Element nicht innerhalb des festgelegten Zeitlimits auf der Seite erscheint, schlägt die Wiedergabe mit einer Fehlermeldung fehl."
  },
  "panels/recorder/components/RecordingView.ts | timeoutLabel": {
    "message": "Zeitlimit"
  },
  "panels/recorder/components/RecordingView.ts | upload": {
    "message": "Upload: {value}"
  },
  "panels/recorder/components/ReplayButton.ts | ReplayExtremelySlowButtonLabel": {
    "message": "Extrem langsame erneute Wiedergabe"
  },
  "panels/recorder/components/ReplayButton.ts | ReplayExtremelySlowItemLabel": {
    "message": "Extrem langsam"
  },
  "panels/recorder/components/ReplayButton.ts | ReplayNormalButtonLabel": {
    "message": "Noch einmal wiedergeben"
  },
  "panels/recorder/components/ReplayButton.ts | ReplayNormalItemLabel": {
    "message": "Normal (Standardeinstellung)"
  },
  "panels/recorder/components/ReplayButton.ts | ReplaySlowButtonLabel": {
    "message": "Langsame erneute Wiedergabe"
  },
  "panels/recorder/components/ReplayButton.ts | ReplaySlowItemLabel": {
    "message": "Langsam"
  },
  "panels/recorder/components/ReplayButton.ts | ReplayVerySlowButtonLabel": {
    "message": "Sehr langsame erneute Wiedergabe"
  },
  "panels/recorder/components/ReplayButton.ts | ReplayVerySlowItemLabel": {
    "message": "Sehr langsam"
  },
  "panels/recorder/components/ReplayButton.ts | extensionGroup": {
    "message": "Erweiterungen"
  },
  "panels/recorder/components/ReplayButton.ts | speedGroup": {
    "message": "Geschwindigkeit"
  },
  "panels/recorder/components/StartView.ts | createRecording": {
    "message": "Neue Aufzeichnung erstellen"
  },
  "panels/recorder/components/StartView.ts | header": {
    "message": "Leistung über die gesamte Nutzererfahrung hinweg messen"
  },
  "panels/recorder/components/StartView.ts | quickStart": {
    "message": "Schnelleinstieg: Der neue Rekorder-Bereich in den Entwicklertools"
  },
  "panels/recorder/components/StartView.ts | step1": {
    "message": "Eine übliche Nutzererfahrung auf deiner Website oder in deiner App aufzeichnen"
  },
  "panels/recorder/components/StartView.ts | step2": {
    "message": "Aufzeichnung noch einmal wiedergeben, um zu prüfen, ob der Ablauf funktioniert"
  },
  "panels/recorder/components/StartView.ts | step3": {
    "message": "Detailliertes Leistungs-Trace erstellen oder Puppeteer-Script für Tests exportieren"
  },
  "panels/recorder/components/StepEditor.ts | addAttribute": {
    "message": "{attributeName} hinzufügen"
  },
  "panels/recorder/components/StepEditor.ts | addFrameIndex": {
    "message": "Frame-Index innerhalb der Framestruktur hinzufügen"
  },
  "panels/recorder/components/StepEditor.ts | addSelector": {
    "message": "Selector hinzufügen"
  },
  "panels/recorder/components/StepEditor.ts | addSelectorPart": {
    "message": "Selectorteil hinzufügen"
  },
  "panels/recorder/components/StepEditor.ts | deleteRow": {
    "message": "Zeile löschen"
  },
  "panels/recorder/components/StepEditor.ts | notSaved": {
    "message": "Nicht gespeichert: {error}"
  },
  "panels/recorder/components/StepEditor.ts | removeFrameIndex": {
    "message": "Frame-Index entfernen"
  },
  "panels/recorder/components/StepEditor.ts | removeSelector": {
    "message": "Selector entfernen"
  },
  "panels/recorder/components/StepEditor.ts | removeSelectorPart": {
    "message": "Selectorteil entfernen"
  },
  "panels/recorder/components/StepEditor.ts | selectorPicker": {
    "message": "Ein Element auf der Seite auswählen, um die Selectors zu aktualisieren"
  },
  "panels/recorder/components/StepEditor.ts | unknownActionType": {
    "message": "Unbekannter Aktionstyp."
  },
  "panels/recorder/components/StepView.ts | addBreakpoint": {
    "message": "Haltepunkt hinzufügen"
  },
  "panels/recorder/components/StepView.ts | addStepAfter": {
    "message": "Schritt einfügen nach"
  },
  "panels/recorder/components/StepView.ts | addStepBefore": {
    "message": "Schritt einfügen vor"
  },
  "panels/recorder/components/StepView.ts | breakpoints": {
    "message": "Haltepunkte"
  },
  "panels/recorder/components/StepView.ts | changeStepTitle": {
    "message": "Ändern"
  },
  "panels/recorder/components/StepView.ts | clickStepTitle": {
    "message": "Klicken"
  },
  "panels/recorder/components/StepView.ts | closeStepTitle": {
    "message": "Schließen"
  },
  "panels/recorder/components/StepView.ts | copyAs": {
    "message": "Kopieren als"
  },
  "panels/recorder/components/StepView.ts | customStepTitle": {
    "message": "Benutzerdefinierter Schritt"
  },
  "panels/recorder/components/StepView.ts | doubleClickStepTitle": {
    "message": "Doppelklicken"
  },
  "panels/recorder/components/StepView.ts | elementRoleButton": {
    "message": "Schaltfläche"
  },
  "panels/recorder/components/StepView.ts | elementRoleFallback": {
    "message": "Element"
  },
  "panels/recorder/components/StepView.ts | elementRoleInput": {
    "message": "Eingabe"
  },
  "panels/recorder/components/StepView.ts | emulateNetworkConditionsStepTitle": {
    "message": "Netzwerkbedingungen emulieren"
  },
  "panels/recorder/components/StepView.ts | hoverStepTitle": {
    "message": "Mauszeiger bewegen"
  },
  "panels/recorder/components/StepView.ts | keyDownStepTitle": {
    "message": "KeyDown"
  },
  "panels/recorder/components/StepView.ts | keyUpStepTitle": {
    "message": "KeyUp"
  },
  "panels/recorder/components/StepView.ts | navigateStepTitle": {
    "message": "Navigieren"
  },
  "panels/recorder/components/StepView.ts | openStepActions": {
    "message": "Schrittspezifische Aktionen öffnen"
  },
  "panels/recorder/components/StepView.ts | removeBreakpoint": {
    "message": "Haltepunkt entfernen"
  },
  "panels/recorder/components/StepView.ts | removeStep": {
    "message": "Schritt entfernen"
  },
  "panels/recorder/components/StepView.ts | scrollStepTitle": {
    "message": "Scrollen"
  },
  "panels/recorder/components/StepView.ts | setViewportClickTitle": {
    "message": "Darstellungsbereich festlegen"
  },
  "panels/recorder/components/StepView.ts | stepManagement": {
    "message": "Schritte verwalten"
  },
  "panels/recorder/components/StepView.ts | waitForElementStepTitle": {
    "message": "Auf Element warten"
  },
  "panels/recorder/components/StepView.ts | waitForExpressionStepTitle": {
    "message": "Auf Ausdruck warten"
  },
  "panels/recorder/models/RecorderSettings.ts | defaultRecordingName": {
    "message": "Aufzeichnung vom {DATE} um {TIME}"
  },
  "panels/recorder/recorder-meta.ts | createRecording": {
    "message": "Neue Aufzeichnung erstellen"
  },
  "panels/recorder/recorder-meta.ts | recorder": {
    "message": "Rekorder"
  },
  "panels/recorder/recorder-meta.ts | replayRecording": {
    "message": "Aufzeichnung noch einmal abspielen"
  },
  "panels/recorder/recorder-meta.ts | showRecorder": {
    "message": "Rekorder anzeigen"
  },
  "panels/recorder/recorder-meta.ts | startStopRecording": {
    "message": "Aufzeichnung starten oder beenden"
  },
  "panels/recorder/recorder-meta.ts | toggleCode": {
    "message": "Codeansicht wechseln"
  },
  "panels/screencast/ScreencastApp.ts | toggleScreencast": {
    "message": "Screencast umschalten"
  },
  "panels/screencast/ScreencastView.ts | addressBar": {
    "message": "Adressleiste"
  },
  "panels/screencast/ScreencastView.ts | back": {
    "message": "zurück"
  },
  "panels/screencast/ScreencastView.ts | forward": {
    "message": "weiterleiten"
  },
  "panels/screencast/ScreencastView.ts | mouseInput": {
    "message": "Maus verwenden"
  },
  "panels/screencast/ScreencastView.ts | profilingInProgress": {
    "message": "Profiling wird ausgeführt"
  },
  "panels/screencast/ScreencastView.ts | reload": {
    "message": "Neu laden"
  },
  "panels/screencast/ScreencastView.ts | screencastViewOfDebugTarget": {
    "message": "Screencast-Ansicht des Fehlerbehebungsziels"
  },
  "panels/screencast/ScreencastView.ts | theTabIsInactive": {
    "message": "Der Tab ist inaktiv"
  },
  "panels/screencast/ScreencastView.ts | touchInput": {
    "message": "Touchbedienung verwenden"
  },
  "panels/search/SearchResultsPane.ts | lineS": {
    "message": "Zeile {PH1}"
  },
  "panels/search/SearchResultsPane.ts | matchesCountS": {
    "message": "Übereinstimmende Anzahl {PH1}"
  },
  "panels/search/SearchResultsPane.ts | showDMore": {
    "message": "{PH1} weitere anzeigen"
  },
  "panels/search/SearchView.ts | clear": {
    "message": "Löschen"
  },
  "panels/search/SearchView.ts | foundDMatchingLinesInDFiles": {
    "message": "{PH1} übereinstimmende Zeilen in {PH2} Dateien gefunden."
  },
  "panels/search/SearchView.ts | foundDMatchingLinesInFile": {
    "message": "{PH1} übereinstimmende Zeilen in 1 Datei gefunden."
  },
  "panels/search/SearchView.ts | foundMatchingLineInFile": {
    "message": "1 übereinstimmende Zeile in 1 Datei gefunden."
  },
  "panels/search/SearchView.ts | indexing": {
    "message": "Wird indexiert…"
  },
  "panels/search/SearchView.ts | indexingInterrupted": {
    "message": "Indexierung unterbrochen."
  },
  "panels/search/SearchView.ts | matchCase": {
    "message": "Groß-/Kleinschreibung"
  },
  "panels/search/SearchView.ts | noMatchesFound": {
    "message": "Keine Übereinstimmungen gefunden."
  },
  "panels/search/SearchView.ts | refresh": {
    "message": "Aktualisieren"
  },
  "panels/search/SearchView.ts | search": {
    "message": "Suche"
  },
  "panels/search/SearchView.ts | searchFinished": {
    "message": "Suche beendet"
  },
  "panels/search/SearchView.ts | searchInterrupted": {
    "message": "Suche unterbrochen."
  },
  "panels/search/SearchView.ts | searchQuery": {
    "message": "Suchanfrage"
  },
  "panels/search/SearchView.ts | searching": {
    "message": "Wird gesucht…"
  },
  "panels/search/SearchView.ts | useRegularExpression": {
    "message": "Regulären Ausdruck verwenden"
  },
  "panels/security/SecurityModel.ts | cipherWithMAC": {
    "message": "{PH1} mit {PH2}"
  },
  "panels/security/SecurityModel.ts | keyExchangeWithGroup": {
    "message": "{PH1} mit {PH2}"
  },
  "panels/security/SecurityModel.ts | theSecurityOfThisPageIsUnknown": {
    "message": "Die Sicherheit dieser Seite ist nicht bekannt."
  },
  "panels/security/SecurityModel.ts | thisPageIsNotSecure": {
    "message": "Diese Seite ist nicht sicher."
  },
  "panels/security/SecurityModel.ts | thisPageIsNotSecureBrokenHttps": {
    "message": "Diese Seite ist nicht sicher (fehlerhaftes HTTPS)."
  },
  "panels/security/SecurityModel.ts | thisPageIsSecureValidHttps": {
    "message": "Diese Seite ist sicher (gültiges HTTPS)."
  },
  "panels/security/SecurityPanel.ts | activeContentWithCertificate": {
    "message": "aktive Inhalte mit Zertifikatfehlern"
  },
  "panels/security/SecurityPanel.ts | activeMixedContent": {
    "message": "aktive gemischte Inhalte"
  },
  "panels/security/SecurityPanel.ts | allResourcesOnThisPageAreServed": {
    "message": "Alle Ressourcen auf dieser Seite werden sicher angezeigt."
  },
  "panels/security/SecurityPanel.ts | allServedSecurely": {
    "message": "Alle sicher ausgeliefert"
  },
  "panels/security/SecurityPanel.ts | blockedMixedContent": {
    "message": "Gemischte Inhalte blockieren"
  },
  "panels/security/SecurityPanel.ts | certificate": {
    "message": "Zertifikat"
  },
  "panels/security/SecurityPanel.ts | certificateExpiresSoon": {
    "message": "Zertifikat läuft bald ab"
  },
  "panels/security/SecurityPanel.ts | certificateTransparency": {
    "message": "Zertifikatstransparenz"
  },
  "panels/security/SecurityPanel.ts | chromeHasDeterminedThatThisSiteS": {
    "message": "Chrome hat festgestellt, dass diese Website eventuell gefälscht oder betrügerisch ist."
  },
  "panels/security/SecurityPanel.ts | cipher": {
    "message": "Chiffre"
  },
  "panels/security/SecurityPanel.ts | connection": {
    "message": "Verbindung"
  },
  "panels/security/SecurityPanel.ts | contentWithCertificateErrors": {
    "message": "Inhalt mit Zertifikatfehlern"
  },
  "panels/security/SecurityPanel.ts | enabled": {
    "message": "aktiviert"
  },
  "panels/security/SecurityPanel.ts | encryptedClientHello": {
    "message": "Verschlüsseltes ClientHello"
  },
  "panels/security/SecurityPanel.ts | flaggedByGoogleSafeBrowsing": {
    "message": "Von Google-Nutzern gemeldet"
  },
  "panels/security/SecurityPanel.ts | hashAlgorithm": {
    "message": "Hash-Algorithmus"
  },
  "panels/security/SecurityPanel.ts | hideFullDetails": {
    "message": "Vollständige Details ausblenden"
  },
  "panels/security/SecurityPanel.ts | ifYouBelieveThisIsShownIn": {
    "message": "Wenn dies deiner Meinung nach fälschlicherweise angezeigt wird, gehe bitte auf https://g.co/chrome/lookalike-warnings."
  },
  "panels/security/SecurityPanel.ts | ifYouBelieveThisIsShownInErrorSafety": {
    "message": "Wenn dies deiner Meinung nach fälschlicherweise angezeigt wird, gehe bitte auf https://g.co/chrome/lookalike-warnings."
  },
  "panels/security/SecurityPanel.ts | info": {
    "message": "Info"
  },
  "panels/security/SecurityPanel.ts | insecureSha": {
    "message": "unsicher (SHA-1)"
  },
  "panels/security/SecurityPanel.ts | issuedAt": {
    "message": "Herausgegeben bei"
  },
  "panels/security/SecurityPanel.ts | issuer": {
    "message": "Aussteller"
  },
  "panels/security/SecurityPanel.ts | keyExchange": {
    "message": "Schlüsselaustausch"
  },
  "panels/security/SecurityPanel.ts | logId": {
    "message": "Protokoll-ID"
  },
  "panels/security/SecurityPanel.ts | logName": {
    "message": "Protokollname"
  },
  "panels/security/SecurityPanel.ts | mainOrigin": {
    "message": "Hauptquelle"
  },
  "panels/security/SecurityPanel.ts | mainOriginNonsecure": {
    "message": "Hauptquelle (nicht sicher)"
  },
  "panels/security/SecurityPanel.ts | mainOriginSecure": {
    "message": "Hauptquelle (sicher)"
  },
  "panels/security/SecurityPanel.ts | missing": {
    "message": "fehlt"
  },
  "panels/security/SecurityPanel.ts | mixedContent": {
    "message": "gemischter Inhalt"
  },
  "panels/security/SecurityPanel.ts | na": {
    "message": "(keine Angabe)"
  },
  "panels/security/SecurityPanel.ts | noSecurityDetailsAreAvailableFor": {
    "message": "Für diesen Ursprung sind keine Sicherheitsdetails verfügbar."
  },
  "panels/security/SecurityPanel.ts | noSecurityInformation": {
    "message": "Keine Sicherheitsinformationen"
  },
  "panels/security/SecurityPanel.ts | nonsecureForm": {
    "message": "nicht sicheres Formular"
  },
  "panels/security/SecurityPanel.ts | nonsecureOrigins": {
    "message": "Nicht sichere Ursprünge"
  },
  "panels/security/SecurityPanel.ts | notSecure": {
    "message": "Nicht sicher"
  },
  "panels/security/SecurityPanel.ts | notSecureBroken": {
    "message": "Nicht sicher (fehlerhaft)"
  },
  "panels/security/SecurityPanel.ts | obsoleteConnectionSettings": {
    "message": "veraltete Verbindungseinstellungen"
  },
  "panels/security/SecurityPanel.ts | openFullCertificateDetails": {
    "message": "Vollständige Zertifikatsdetails öffnen"
  },
  "panels/security/SecurityPanel.ts | origin": {
    "message": "Ursprung"
  },
  "panels/security/SecurityPanel.ts | overview": {
    "message": "Übersicht"
  },
  "panels/security/SecurityPanel.ts | possibleSpoofingUrl": {
    "message": "Mögliche Spoofing-URL"
  },
  "panels/security/SecurityPanel.ts | protocol": {
    "message": "Protokoll"
  },
  "panels/security/SecurityPanel.ts | publickeypinningBypassed": {
    "message": "Public-Key-Pinning umgangen"
  },
  "panels/security/SecurityPanel.ts | publickeypinningWasBypassedByA": {
    "message": "Public-Key-Pinning wurde durch ein lokales Root-Zertifikat umgangen."
  },
  "panels/security/SecurityPanel.ts | reloadThePageToRecordRequestsFor": {
    "message": "Seite aktualisieren, um Anfragen nach HTTP-Ressourcen zu erfassen."
  },
  "panels/security/SecurityPanel.ts | reloadToViewDetails": {
    "message": "Zum Anzeigen der Details neu laden"
  },
  "panels/security/SecurityPanel.ts | resources": {
    "message": "Ressourcen"
  },
  "panels/security/SecurityPanel.ts | rsaKeyExchangeIsObsoleteEnableAn": {
    "message": "Der RSA-Schlüssel-Austausch ist veraltet. ECDHE-basierte Cipher Suite aktivieren."
  },
  "panels/security/SecurityPanel.ts | sIsObsoleteEnableAnAesgcmbased": {
    "message": "{PH1} ist veraltet. Eine AES-GCM-basierte Chiffrensammlung aktivieren."
  },
  "panels/security/SecurityPanel.ts | sIsObsoleteEnableTlsOrLater": {
    "message": "{PH1} ist veraltet. TLS 1.2 oder höher aktivieren."
  },
  "panels/security/SecurityPanel.ts | sct": {
    "message": "SCT"
  },
  "panels/security/SecurityPanel.ts | secure": {
    "message": "Sicher"
  },
  "panels/security/SecurityPanel.ts | secureConnectionSettings": {
    "message": "Einstellungen für verschlüsselte Verbindung"
  },
  "panels/security/SecurityPanel.ts | secureOrigins": {
    "message": "Sichere Ursprünge"
  },
  "panels/security/SecurityPanel.ts | securityOverview": {
    "message": "Übersicht zur Sicherheit"
  },
  "panels/security/SecurityPanel.ts | serverSignature": {
    "message": "Serversignatur"
  },
  "panels/security/SecurityPanel.ts | showFullDetails": {
    "message": "Vollständige Details anzeigen"
  },
  "panels/security/SecurityPanel.ts | showLess": {
    "message": "Weniger anzeigen"
  },
  "panels/security/SecurityPanel.ts | showMoreSTotal": {
    "message": "Mehr anzeigen ({PH1} insgesamt)"
  },
  "panels/security/SecurityPanel.ts | signatureAlgorithm": {
    "message": "Signaturalgorithmus"
  },
  "panels/security/SecurityPanel.ts | signatureData": {
    "message": "Signaturdaten"
  },
  "panels/security/SecurityPanel.ts | source": {
    "message": "Quelle"
  },
  "panels/security/SecurityPanel.ts | subject": {
    "message": "Subject"
  },
  "panels/security/SecurityPanel.ts | subjectAlternativeNameMissing": {
    "message": "Subject Alternative Name fehlt"
  },
  "panels/security/SecurityPanel.ts | theCertificateChainForThisSite": {
    "message": "Die Zertifikatskette für diese Website enthält ein Zertifikat mit SHA-1-Signatur."
  },
  "panels/security/SecurityPanel.ts | theCertificateForThisSiteDoesNot": {
    "message": "Das Zertifikat für diese Website enthält keine Subject Alternative Name-Erweiterung mit einem Domainnamen oder einer IP-Adresse."
  },
  "panels/security/SecurityPanel.ts | theCertificateForThisSiteExpires": {
    "message": "Das Zertifikat für diese Website läuft in weniger als 48 Stunden ab und muss bald erneuert werden."
  },
  "panels/security/SecurityPanel.ts | theConnectionToThisSiteIs": {
    "message": "Die Verbindung zu dieser Website ist verschlüsselt und wurde mit {PH1}, {PH2} und {PH3} authentifiziert."
  },
  "panels/security/SecurityPanel.ts | theConnectionToThisSiteIsUsingA": {
    "message": "Für die Verbindung zu dieser Website wird ein gültiges, vertrauenswürdiges Serverzertifikat verwendet, das von {PH1} ausgestellt wurde."
  },
  "panels/security/SecurityPanel.ts | theSecurityDetailsAboveAreFrom": {
    "message": "Die Sicherheitsangaben oben stammen aus der ersten geprüften Antwort."
  },
  "panels/security/SecurityPanel.ts | theServerSignatureUsesShaWhichIs": {
    "message": "Die Serversignatur verwendet SHA-1. Diese Signatur ist veraltet. Aktiviere stattdessen einen SHA-2-Signaturalgorithmus. (Hinweis: Dies ist nicht dieselbe Signatur wie die im Zertifikat.)"
  },
  "panels/security/SecurityPanel.ts | thisIsAnErrorPage": {
    "message": "Dies ist eine Fehlermeldung."
  },
  "panels/security/SecurityPanel.ts | thisOriginIsANonhttpsSecure": {
    "message": "Diese Seite hat einen Nicht-HTTPS-Ursprung."
  },
  "panels/security/SecurityPanel.ts | thisPageHasANonhttpsSecureOrigin": {
    "message": "Diese Seite hat einen Nicht-HTTPS-Ursprung."
  },
  "panels/security/SecurityPanel.ts | thisPageIncludesAFormWithA": {
    "message": "Diese Seite enthält ein Formular mit einem nicht sicheren „Action“-Attribut."
  },
  "panels/security/SecurityPanel.ts | thisPageIncludesHttpResources": {
    "message": "Diese Seite enthält HTTP-Ressourcen."
  },
  "panels/security/SecurityPanel.ts | thisPageIncludesResourcesThat": {
    "message": "Diese Seite enthält Ressourcen, die mit Zertifikatsfehlern geladen wurden."
  },
  "panels/security/SecurityPanel.ts | thisPageIsDangerousFlaggedBy": {
    "message": "Diese Seite ist gefährlich (von Google Safe Browsing gemeldet)"
  },
  "panels/security/SecurityPanel.ts | thisPageIsInsecureUnencrypted": {
    "message": "Diese Seite ist unsicher (unverschlüsseltes HTTP)."
  },
  "panels/security/SecurityPanel.ts | thisPageIsSuspicious": {
    "message": "Diese Seite ist verdächtig"
  },
  "panels/security/SecurityPanel.ts | thisPageIsSuspiciousFlaggedBy": {
    "message": "Diese Seite ist verdächtig (von Chrome gemeldet)."
  },
  "panels/security/SecurityPanel.ts | thisRequestCompliesWithChromes": {
    "message": "Diese Anfrage entspricht den Anforderungen der Certificate Transparency-Richtlinie von Chrome."
  },
  "panels/security/SecurityPanel.ts | thisRequestDoesNotComplyWith": {
    "message": "Diese Anforderung entspricht nicht der Certificate Transparency-Richtlinie von Chrome."
  },
  "panels/security/SecurityPanel.ts | thisResponseWasLoadedFromCache": {
    "message": "Diese Antwort wurde aus dem Cache geladen. Es fehlen möglicherweise einige Sicherheitsdetails."
  },
  "panels/security/SecurityPanel.ts | thisSiteIsMissingAValidTrusted": {
    "message": "Für diese Website fehlt ein gültiges, vertrauenswürdiges Zertifikat ({PH1})."
  },
  "panels/security/SecurityPanel.ts | thisSitesHostnameLooksSimilarToP": {
    "message": "Der Hostname dieser Website ähnelt dem von {PH1}. Angreifer kopieren manchmal Websites und nehmen kleine, unauffällige Änderungen am Domainnamen vor."
  },
  "panels/security/SecurityPanel.ts | toCheckThisPagesStatusVisit": {
    "message": "Wenn du den Status dieser Seite prüfen möchtest, rufe g.co/safebrowsingstatus auf."
  },
  "panels/security/SecurityPanel.ts | unknownCanceled": {
    "message": "Unbekannt/abgebrochen"
  },
  "panels/security/SecurityPanel.ts | unknownField": {
    "message": "unbekannt"
  },
  "panels/security/SecurityPanel.ts | validAndTrusted": {
    "message": "gültig und vertrauenswürdig"
  },
  "panels/security/SecurityPanel.ts | validFrom": {
    "message": "Gültig ab"
  },
  "panels/security/SecurityPanel.ts | validUntil": {
    "message": "Gültig bis"
  },
  "panels/security/SecurityPanel.ts | validationStatus": {
    "message": "Überprüfungsstatus"
  },
  "panels/security/SecurityPanel.ts | viewCertificate": {
    "message": "Zertifikat ansehen"
  },
  "panels/security/SecurityPanel.ts | viewDRequestsInNetworkPanel": {
    "message": "{n,plural, =1{# Anfrage im Netzwerkbereich anzeigen}other{# Anfragen im Netzwerkbereich anzeigen}}"
  },
  "panels/security/SecurityPanel.ts | viewRequestsInNetworkPanel": {
    "message": "Anfragen im Netzwerkbereich anzeigen"
  },
  "panels/security/SecurityPanel.ts | youHaveRecentlyAllowedContent": {
    "message": "Du hast vor Kurzem die Ausführung von Inhalten mit Zertifikatfehlern wie Skripts oder iFrames auf dieser Website zugelassen."
  },
  "panels/security/SecurityPanel.ts | youHaveRecentlyAllowedNonsecure": {
    "message": "Du hast vor Kurzem die Ausführung unsicherer Inhalte wie Skripts oder iFrames auf dieser Website zugelassen."
  },
  "panels/security/SecurityPanel.ts | yourConnectionToThisOriginIsNot": {
    "message": "Die Verbindung zu dieser Quelle ist nicht sicher."
  },
  "panels/security/SecurityPanel.ts | yourPageRequestedNonsecure": {
    "message": "Deine Seite hat unsichere Ressourcen angefordert, die blockiert wurden."
  },
  "panels/security/security-meta.ts | security": {
    "message": "Sicherheit"
  },
  "panels/security/security-meta.ts | showSecurity": {
    "message": "Sicherheit anzeigen"
  },
  "panels/sensors/LocationsSettingsTab.ts | addLocation": {
    "message": "Speicherort hinzufügen..."
  },
  "panels/sensors/LocationsSettingsTab.ts | customLocations": {
    "message": "Benutzerdefinierte Standorte"
  },
  "panels/sensors/LocationsSettingsTab.ts | lat": {
    "message": "Breitengrad"
  },
  "panels/sensors/LocationsSettingsTab.ts | latitude": {
    "message": "Breitengrad"
  },
  "panels/sensors/LocationsSettingsTab.ts | latitudeMustBeANumber": {
    "message": "Breitengrad muss eine Zahl sein"
  },
  "panels/sensors/LocationsSettingsTab.ts | latitudeMustBeGreaterThanOrEqual": {
    "message": "Breitengrad muss größer als oder gleich {PH1} sein."
  },
  "panels/sensors/LocationsSettingsTab.ts | latitudeMustBeLessThanOrEqualToS": {
    "message": "Breitengrad muss kleiner als oder gleich {PH1} sein."
  },
  "panels/sensors/LocationsSettingsTab.ts | locale": {
    "message": "Sprache"
  },
  "panels/sensors/LocationsSettingsTab.ts | localeMustContainAlphabetic": {
    "message": "Sprache muss alphabetische Zeichen enthalten"
  },
  "panels/sensors/LocationsSettingsTab.ts | locationName": {
    "message": "Standortname"
  },
  "panels/sensors/LocationsSettingsTab.ts | locationNameCannotBeEmpty": {
    "message": "Standortname darf nicht leer sein"
  },
  "panels/sensors/LocationsSettingsTab.ts | locationNameMustBeLessThanS": {
    "message": "Für den Standortnamen sind maximal {PH1} Zeichen zulässig"
  },
  "panels/sensors/LocationsSettingsTab.ts | long": {
    "message": "Längengrad"
  },
  "panels/sensors/LocationsSettingsTab.ts | longitude": {
    "message": "Längengrad"
  },
  "panels/sensors/LocationsSettingsTab.ts | longitudeMustBeANumber": {
    "message": "Längengrad muss eine Zahl sein"
  },
  "panels/sensors/LocationsSettingsTab.ts | longitudeMustBeGreaterThanOr": {
    "message": "Längengrad muss größer als oder gleich {PH1} sein."
  },
  "panels/sensors/LocationsSettingsTab.ts | longitudeMustBeLessThanOrEqualTo": {
    "message": "Längengrad muss kleiner als oder gleich {PH1} sein"
  },
  "panels/sensors/LocationsSettingsTab.ts | timezoneId": {
    "message": "Zeitzonen-ID"
  },
  "panels/sensors/LocationsSettingsTab.ts | timezoneIdMustContainAlphabetic": {
    "message": "Zeitzonen-ID muss alphabetische Zeichen enthalten"
  },
  "panels/sensors/SensorsView.ts | adjustWithMousewheelOrUpdownKeys": {
    "message": "Mit Mausrad oder Auf/Ab-Tasten anpassen. {PH1}: ±10, Umschalttaste: ±1, Alt: ±0,01"
  },
  "panels/sensors/SensorsView.ts | alpha": {
    "message": "α (Alpha)"
  },
  "panels/sensors/SensorsView.ts | beta": {
    "message": "β (Beta)"
  },
  "panels/sensors/SensorsView.ts | customOrientation": {
    "message": "Benutzerdefinierte Ausrichtung"
  },
  "panels/sensors/SensorsView.ts | deviceOrientationSetToAlphaSBeta": {
    "message": "Geräteausrichtung auf Alpha: {PH1}, Beta: {PH2}, Gamma: {PH3} gesetzt"
  },
  "panels/sensors/SensorsView.ts | displayDown": {
    "message": "Display unten"
  },
  "panels/sensors/SensorsView.ts | displayUp": {
    "message": "Display oben"
  },
  "panels/sensors/SensorsView.ts | enableOrientationToRotate": {
    "message": "Ausrichtungsrotierung aktivieren"
  },
  "panels/sensors/SensorsView.ts | error": {
    "message": "Fehler"
  },
  "panels/sensors/SensorsView.ts | forcesSelectedIdleStateEmulation": {
    "message": "Emulierung des gewählten inaktiven Status erzwingen"
  },
  "panels/sensors/SensorsView.ts | forcesTouchInsteadOfClick": {
    "message": "Tippen statt klicken erzwingen"
  },
  "panels/sensors/SensorsView.ts | gamma": {
    "message": "γ (Gamma)"
  },
  "panels/sensors/SensorsView.ts | landscapeLeft": {
    "message": "Querformat nach links"
  },
  "panels/sensors/SensorsView.ts | landscapeRight": {
    "message": "Querformat nach rechts"
  },
  "panels/sensors/SensorsView.ts | latitude": {
    "message": "Breitengrad"
  },
  "panels/sensors/SensorsView.ts | locale": {
    "message": "Sprache"
  },
  "panels/sensors/SensorsView.ts | location": {
    "message": "Standort"
  },
  "panels/sensors/SensorsView.ts | locationUnavailable": {
    "message": "Standort nicht verfügbar"
  },
  "panels/sensors/SensorsView.ts | longitude": {
    "message": "Längengrad"
  },
  "panels/sensors/SensorsView.ts | manage": {
    "message": "Verwalten"
  },
  "panels/sensors/SensorsView.ts | manageTheListOfLocations": {
    "message": "Standortliste verwalten"
  },
  "panels/sensors/SensorsView.ts | noOverride": {
    "message": "Nicht überschreiben"
  },
  "panels/sensors/SensorsView.ts | off": {
    "message": "Aus"
  },
  "panels/sensors/SensorsView.ts | orientation": {
    "message": "Ausrichtung"
  },
  "panels/sensors/SensorsView.ts | other": {
    "message": "Sonstige…"
  },
  "panels/sensors/SensorsView.ts | overrides": {
    "message": "Überschreibungen"
  },
  "panels/sensors/SensorsView.ts | portrait": {
    "message": "Hochformat"
  },
  "panels/sensors/SensorsView.ts | portraitUpsideDown": {
    "message": "Hochformat um 180° gedreht"
  },
  "panels/sensors/SensorsView.ts | presets": {
    "message": "Voreinstellungen"
  },
  "panels/sensors/SensorsView.ts | reset": {
    "message": "Zurücksetzen"
  },
  "panels/sensors/SensorsView.ts | resetDeviceOrientation": {
    "message": "Ausrichtung des Geräts zurücksetzen"
  },
  "panels/sensors/SensorsView.ts | shiftdragHorizontallyToRotate": {
    "message": "Zum Drehen um die y-Achse mit gedrückter Umschalttaste horizontal ziehen"
  },
  "panels/sensors/SensorsView.ts | timezoneId": {
    "message": "Zeitzonen-ID"
  },
  "panels/sensors/sensors-meta.ts | accelerometer": {
    "message": "Beschleunigungsmesser"
  },
  "panels/sensors/sensors-meta.ts | deviceOrientation": {
    "message": "Ausrichtung des Geräts"
  },
  "panels/sensors/sensors-meta.ts | devicebased": {
    "message": "Gerätebasiert"
  },
  "panels/sensors/sensors-meta.ts | emulateIdleDetectorState": {
    "message": "Zustand des inaktiven Detektors emulieren"
  },
  "panels/sensors/sensors-meta.ts | forceEnabled": {
    "message": "Aktivierung erzwingen"
  },
  "panels/sensors/sensors-meta.ts | geolocation": {
    "message": "Standortbestimmung"
  },
  "panels/sensors/sensors-meta.ts | locale": {
    "message": "Sprache"
  },
  "panels/sensors/sensors-meta.ts | locales": {
    "message": "Sprachen"
  },
  "panels/sensors/sensors-meta.ts | locations": {
    "message": "Standorte"
  },
  "panels/sensors/sensors-meta.ts | noIdleEmulation": {
    "message": "Keine Emulation in inaktivem Zustand"
  },
  "panels/sensors/sensors-meta.ts | sensors": {
    "message": "Sensoren"
  },
  "panels/sensors/sensors-meta.ts | showLocations": {
    "message": "Standorte anzeigen"
  },
  "panels/sensors/sensors-meta.ts | showSensors": {
    "message": "Sensoren anzeigen"
  },
  "panels/sensors/sensors-meta.ts | timezones": {
    "message": "Zeitzonen"
  },
  "panels/sensors/sensors-meta.ts | touch": {
    "message": "Tippen"
  },
  "panels/sensors/sensors-meta.ts | userActiveScreenLocked": {
    "message": "Nutzer aktiv, Bildschirm gesperrt"
  },
  "panels/sensors/sensors-meta.ts | userActiveScreenUnlocked": {
    "message": "Nutzer aktiv, Bildschirm entsperrt"
  },
  "panels/sensors/sensors-meta.ts | userIdleScreenLocked": {
    "message": "Nutzer inaktiv, Bildschirm gesperrt"
  },
  "panels/sensors/sensors-meta.ts | userIdleScreenUnlocked": {
    "message": "Nutzer inaktiv, Bildschirm entsperrt"
  },
  "panels/settings/FrameworkIgnoreListSettingsTab.ts | addFilenamePattern": {
    "message": "Dateinamenmuster hinzufügen"
  },
  "panels/settings/FrameworkIgnoreListSettingsTab.ts | addPattern": {
    "message": "Muster hinzufügen..."
  },
  "panels/settings/FrameworkIgnoreListSettingsTab.ts | automaticallyIgnoreListKnownThirdPartyScripts": {
    "message": "Bekannte Drittanbieter-Skripts aus Quellzuordnungen"
  },
  "panels/settings/FrameworkIgnoreListSettingsTab.ts | customExclusionRules": {
    "message": "Benutzerdefinierte Ausschlussregeln:"
  },
  "panels/settings/FrameworkIgnoreListSettingsTab.ts | debuggerWillSkipThroughThe": {
    "message": "Der Debugger überspringt die Skripte und stoppt nicht an den von ihnen ausgelösten Ausnahmen."
  },
  "panels/settings/FrameworkIgnoreListSettingsTab.ts | enableIgnoreListing": {
    "message": "Ignorieren-Liste aktivieren"
  },
  "panels/settings/FrameworkIgnoreListSettingsTab.ts | enableIgnoreListingTooltip": {
    "message": "Häkchen entfernen, um Ignorieren-Liste zu deaktivieren"
  },
  "panels/settings/FrameworkIgnoreListSettingsTab.ts | frameworkIgnoreList": {
    "message": "Framework-Ignorieren-Liste"
  },
  "panels/settings/FrameworkIgnoreListSettingsTab.ts | generalExclusionRules": {
    "message": "Allgemeine Ausschlussregeln:"
  },
  "panels/settings/FrameworkIgnoreListSettingsTab.ts | ignoreListContentScripts": {
    "message": "Von Erweiterungen eingefügte Inhaltsskripte"
  },
  "panels/settings/FrameworkIgnoreListSettingsTab.ts | ignoreScriptsWhoseNamesMatchS": {
    "message": "Skripts mit dem Namen „{PH1}“ ignorieren"
  },
  "panels/settings/FrameworkIgnoreListSettingsTab.ts | learnMore": {
    "message": "Weitere Informationen"
  },
  "panels/settings/FrameworkIgnoreListSettingsTab.ts | pattern": {
    "message": "Muster hinzufügen"
  },
  "panels/settings/FrameworkIgnoreListSettingsTab.ts | patternAlreadyExists": {
    "message": "Das Muster ist bereits vorhanden."
  },
  "panels/settings/FrameworkIgnoreListSettingsTab.ts | patternCannotBeEmpty": {
    "message": "Muster darf nicht leer sein"
  },
  "panels/settings/FrameworkIgnoreListSettingsTab.ts | patternMustBeAValidRegular": {
    "message": "Muster muss ein gültiger regulärer Ausdruck sein"
  },
  "panels/settings/KeybindsSettingsTab.ts | FullListOfDevtoolsKeyboard": {
    "message": "Vollständige Liste der DevTools-Tastenkombinationen und -Gesten"
  },
  "panels/settings/KeybindsSettingsTab.ts | ResetShortcutsForAction": {
    "message": "Verknüpfungen für Aktion zurücksetzen"
  },
  "panels/settings/KeybindsSettingsTab.ts | RestoreDefaultShortcuts": {
    "message": "Standardverknüpfungen wiederherstellen"
  },
  "panels/settings/KeybindsSettingsTab.ts | addAShortcut": {
    "message": "Verknüpfung hinzufügen"
  },
  "panels/settings/KeybindsSettingsTab.ts | confirmChanges": {
    "message": "Änderungen bestätigen"
  },
  "panels/settings/KeybindsSettingsTab.ts | discardChanges": {
    "message": "Änderungen verwerfen"
  },
  "panels/settings/KeybindsSettingsTab.ts | editShortcut": {
    "message": "Verknüpfung bearbeiten"
  },
  "panels/settings/KeybindsSettingsTab.ts | keyboardShortcutsList": {
    "message": "Liste der Tastenkombinationen"
  },
  "panels/settings/KeybindsSettingsTab.ts | matchShortcutsFromPreset": {
    "message": "Verknüpfungen aus Voreinstellung zuordnen"
  },
  "panels/settings/KeybindsSettingsTab.ts | noShortcutForAction": {
    "message": "Kein Kurzbefehl für diese Aktion"
  },
  "panels/settings/KeybindsSettingsTab.ts | removeShortcut": {
    "message": "Verknüpfung entfernen"
  },
  "panels/settings/KeybindsSettingsTab.ts | shortcutModified": {
    "message": "Verknüpfung wurde geändert"
  },
  "panels/settings/KeybindsSettingsTab.ts | shortcuts": {
    "message": "Verknüpfungen"
  },
  "panels/settings/KeybindsSettingsTab.ts | shortcutsCannotContainOnly": {
    "message": "Tastenkombinationen dürfen nicht nur Modifikatortasten enthalten."
  },
  "panels/settings/KeybindsSettingsTab.ts | thisShortcutIsInUseByS": {
    "message": "Diese Verknüpfung wird von {PH1} genutzt: {PH2}."
  },
  "panels/settings/SettingsScreen.ts | experiments": {
    "message": "Experimente"
  },
  "panels/settings/SettingsScreen.ts | filterExperimentsLabel": {
    "message": "Filter"
  },
  "panels/settings/SettingsScreen.ts | learnMore": {
    "message": "Weitere Informationen"
  },
  "panels/settings/SettingsScreen.ts | noResults": {
    "message": "Keine mit dem Filter übereinstimmenden Tests"
  },
  "panels/settings/SettingsScreen.ts | oneOrMoreSettingsHaveChanged": {
    "message": "Eine oder mehr Einstellungen wurden geändert. Zur Umsetzung der Änderungen ist eine Aktualisierung erforderlich."
  },
  "panels/settings/SettingsScreen.ts | preferences": {
    "message": "Einstellungen"
  },
  "panels/settings/SettingsScreen.ts | restoreDefaultsAndReload": {
    "message": "Standard wiederherstellen und aktualisieren"
  },
  "panels/settings/SettingsScreen.ts | sendFeedback": {
    "message": "Feedback geben"
  },
  "panels/settings/SettingsScreen.ts | settings": {
    "message": "Einstellungen"
  },
  "panels/settings/SettingsScreen.ts | shortcuts": {
    "message": "Verknüpfungen"
  },
  "panels/settings/SettingsScreen.ts | theseExperimentsAreParticularly": {
    "message": "Diese Tests sind besonders instabil. Du aktivierst sie auf eigenes Risiko."
  },
  "panels/settings/SettingsScreen.ts | theseExperimentsCouldBeUnstable": {
    "message": "Diese Tests könnten instabil oder unzuverlässig sein und erfordern möglicherweise einen Neustart von DevTools."
  },
  "panels/settings/SettingsScreen.ts | warning": {
    "message": "ACHTUNG:"
  },
  "panels/settings/components/SyncSection.ts | preferencesSyncDisabled": {
    "message": "Wenn du diese Einstellung aktivierst möchten, musst du erst die Chrome-Synchronisierung aktivieren."
  },
  "panels/settings/components/SyncSection.ts | settings": {
    "message": "Zu den Einstellungen"
  },
  "panels/settings/components/SyncSection.ts | signedIn": {
    "message": "In Chrome angemeldet als:"
  },
  "panels/settings/components/SyncSection.ts | syncDisabled": {
    "message": "Wenn du diese Einstellung aktivierst möchten, musst du zuerst die Chrome-Synchronisierung aktivieren."
  },
  "panels/settings/emulation/DevicesSettingsTab.ts | addCustomDevice": {
    "message": "Benutzerdefiniertes Gerät hinzufügen…"
  },
  "panels/settings/emulation/DevicesSettingsTab.ts | device": {
    "message": "Gerät"
  },
  "panels/settings/emulation/DevicesSettingsTab.ts | deviceAddedOrUpdated": {
    "message": "Gerät „{PH1}“ wurde erfolgreich hinzugefügt/aktualisiert."
  },
  "panels/settings/emulation/DevicesSettingsTab.ts | deviceName": {
    "message": "Gerätename"
  },
  "panels/settings/emulation/DevicesSettingsTab.ts | deviceNameCannotBeEmpty": {
    "message": "Der Gerätename darf nicht leer sein."
  },
  "panels/settings/emulation/DevicesSettingsTab.ts | deviceNameMustBeLessThanS": {
    "message": "Für den Gerätenamen sind maximal {PH1} Zeichen zulässig."
  },
  "panels/settings/emulation/DevicesSettingsTab.ts | devicePixelRatio": {
    "message": "Pixel-Verhältnis des Geräts"
  },
  "panels/settings/emulation/DevicesSettingsTab.ts | emulatedDevices": {
    "message": "Emulierte Geräte"
  },
  "panels/settings/emulation/DevicesSettingsTab.ts | height": {
    "message": "Höhe"
  },
  "panels/settings/emulation/DevicesSettingsTab.ts | userAgentString": {
    "message": "User-Agent-String"
  },
  "panels/settings/emulation/DevicesSettingsTab.ts | userAgentType": {
    "message": "User-Agent-Typ"
  },
  "panels/settings/emulation/DevicesSettingsTab.ts | width": {
    "message": "Breite"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | addBrand": {
    "message": "Marke hinzufügen"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | addedBrand": {
    "message": "Markenzeile hinzugefügt"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | architecture": {
    "message": "Architektur (Sec-CH-UA-Arch)"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | architecturePlaceholder": {
    "message": "Architektur (z. B. x86)"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | brandFullVersionListDelete": {
    "message": "Marke aus der Liste der vollständigen Version löschen"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | brandName": {
    "message": "Marke"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | brandNameAriaLabel": {
    "message": "Marke {PH1}"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | brandProperties": {
    "message": "User-Agent-Eigenschaften"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | brandUserAgentDelete": {
    "message": "Marke aus dem Abschnitt „User-Agent“ löschen"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | brandVersionAriaLabel": {
    "message": "Version {PH1}"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | brandVersionPlaceholder": {
    "message": "Version (z. B. 87.0.4280.88)"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | deletedBrand": {
    "message": "Markenzeile gelöscht"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | deviceModel": {
    "message": "Gerätemodell (Sec-CH-UA-Model)"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | deviceProperties": {
    "message": "Geräteeigenschaften"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | fullBrowserVersion": {
    "message": "Volle Browserversion (Sec-CH-UA-Full-Browser-Version)"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | fullBrowserVersionPlaceholder": {
    "message": "Volle Browserversion (z. B. 87.0.4280.88)"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | fullVersionList": {
    "message": "Liste der vollständigen Versionen (Sec-CH-UA-Full-Version-List)"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | learnMore": {
    "message": "Weitere Informationen"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | mobileCheckboxLabel": {
    "message": "Mobil"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | notRepresentable": {
    "message": "Nicht als strukturierter Header-String darstellbar."
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | platformLabel": {
    "message": "Plattform (Sec-CH-UA-Platform/Sec-CH-UA-Platform-Version)"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | platformPlaceholder": {
    "message": "Plattform (z. B. Android)"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | platformProperties": {
    "message": "Plattformeigenschaften"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | platformVersion": {
    "message": "Plattformversion"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | significantBrandVersionPlaceholder": {
    "message": "Signifikante Version (z. B. 87)"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | title": {
    "message": "User-Agent-Client-Hints"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | update": {
    "message": "Aktualisieren"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | userAgentClientHintsInfo": {
    "message": "User-Agent-Client-Hinweise sind eine Alternative zum User-Agent-String, die den Browser und das Gerät auf strukturiertere Weise identifizieren und dabei die Privatsphäre besser wahren."
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | useragent": {
    "message": "User-Agent (Sec-CH-UA)"
  },
  "panels/settings/emulation/emulation-meta.ts | devices": {
    "message": "Geräte"
  },
  "panels/settings/emulation/emulation-meta.ts | showDevices": {
    "message": "Geräte anzeigen"
  },
  "panels/settings/settings-meta.ts | documentation": {
    "message": "Dokumentation"
  },
  "panels/settings/settings-meta.ts | experiments": {
    "message": "Experimente"
  },
  "panels/settings/settings-meta.ts | ignoreList": {
    "message": "Ignorieren-Liste"
  },
  "panels/settings/settings-meta.ts | preferences": {
    "message": "Einstellungen"
  },
  "panels/settings/settings-meta.ts | settings": {
    "message": "Einstellungen"
  },
  "panels/settings/settings-meta.ts | shortcuts": {
    "message": "Verknüpfungen"
  },
  "panels/settings/settings-meta.ts | showExperiments": {
    "message": "Tests anzeigen"
  },
  "panels/settings/settings-meta.ts | showIgnoreList": {
    "message": "Ignorieren-Liste anzeigen"
  },
  "panels/settings/settings-meta.ts | showPreferences": {
    "message": "Einstellungen anzeigen"
  },
  "panels/settings/settings-meta.ts | showShortcuts": {
    "message": "Tastenkombinationen anzeigen"
  },
  "panels/snippets/ScriptSnippetFileSystem.ts | linkedTo": {
    "message": "Mit {PH1} verknüpft"
  },
  "panels/snippets/ScriptSnippetFileSystem.ts | scriptSnippet": {
    "message": "Script-Snippet #{PH1}"
  },
  "panels/snippets/SnippetsQuickOpen.ts | noSnippetsFound": {
    "message": "Keine Snippets gefunden."
  },
  "panels/snippets/SnippetsQuickOpen.ts | run": {
    "message": "Ausführen"
  },
  "panels/snippets/SnippetsQuickOpen.ts | snippet": {
    "message": "Snippet"
  },
  "panels/sources/AddSourceMapURLDialog.ts | add": {
    "message": "Hinzufügen"
  },
  "panels/sources/AddSourceMapURLDialog.ts | debugInfoUrl": {
    "message": "URL für DWARF-Symbole: "
  },
  "panels/sources/AddSourceMapURLDialog.ts | sourceMapUrl": {
    "message": "URL der Quellzuordnung: "
  },
  "panels/sources/BreakpointEditDialog.ts | breakpoint": {
    "message": "Haltepunkt"
  },
  "panels/sources/BreakpointEditDialog.ts | breakpointType": {
    "message": "Haltepunkttyp"
  },
  "panels/sources/BreakpointEditDialog.ts | closeDialog": {
    "message": "Bearbeitungsdialog schließen und Änderungen speichern"
  },
  "panels/sources/BreakpointEditDialog.ts | conditionalBreakpoint": {
    "message": "Bedingter Haltepunkt"
  },
  "panels/sources/BreakpointEditDialog.ts | expressionToCheckBeforePausingEg": {
    "message": "Ausdruck, der vor dem Pausieren zu prüfen ist, z. B. x > 5"
  },
  "panels/sources/BreakpointEditDialog.ts | learnMoreOnBreakpointTypes": {
    "message": "Weitere Informationen zu Haltepunkttypen"
  },
  "panels/sources/BreakpointEditDialog.ts | logAMessageToConsoleDoNotBreak": {
    "message": "Meldung an die Konsole senden, nicht abbrechen"
  },
  "panels/sources/BreakpointEditDialog.ts | logMessageEgXIsX": {
    "message": "Nachricht protokollieren, z. B. 'x is', x"
  },
  "panels/sources/BreakpointEditDialog.ts | logpoint": {
    "message": "Logpoint"
  },
  "panels/sources/BreakpointEditDialog.ts | pauseOnlyWhenTheConditionIsTrue": {
    "message": "Nur pausieren, wenn die Bedingung zutrifft"
  },
  "panels/sources/CSSPlugin.ts | addSourceMap": {
    "message": "Quellzuordnung hinzufügen…"
  },
  "panels/sources/CSSPlugin.ts | openColorPicker": {
    "message": "Farbauswahl öffnen."
  },
  "panels/sources/CSSPlugin.ts | openCubicBezierEditor": {
    "message": "Editor für kubische Bézierkurve öffnen."
  },
  "panels/sources/CallStackSidebarPane.ts | callFrameWarnings": {
    "message": "Es gibt Warnungen für einige Aufruf-Frames"
  },
  "panels/sources/CallStackSidebarPane.ts | callStack": {
    "message": "Aufrufstack"
  },
  "panels/sources/CallStackSidebarPane.ts | copyStackTrace": {
    "message": "Stacktrace kopieren"
  },
  "panels/sources/CallStackSidebarPane.ts | debugFileNotFound": {
    "message": "Fehlerbehebungsdatei „{PH1}“ konnte nicht geladen werden."
  },
  "panels/sources/CallStackSidebarPane.ts | notPaused": {
    "message": "Nicht pausiert"
  },
  "panels/sources/CallStackSidebarPane.ts | onIgnoreList": {
    "message": "Auf der Ignorieren-Liste"
  },
  "panels/sources/CallStackSidebarPane.ts | restartFrame": {
    "message": "Frame neu starten"
  },
  "panels/sources/CallStackSidebarPane.ts | showIgnorelistedFrames": {
    "message": "Frames auf der Ignorieren-Liste anzeigen"
  },
  "panels/sources/CallStackSidebarPane.ts | showMore": {
    "message": "Mehr anzeigen"
  },
  "panels/sources/CategorizedBreakpointL10n.ts | animationFrameFired": {
    "message": "Animationsframe ausgelöst"
  },
  "panels/sources/CategorizedBreakpointL10n.ts | beforeBidderWorkletBiddingStart": {
    "message": "Beginn der Gebotphase für Bieter"
  },
  "panels/sources/CategorizedBreakpointL10n.ts | beforeBidderWorkletReportingStart": {
    "message": "Beginn der Berichterstellungsphase für Bieter"
  },
  "panels/sources/CategorizedBreakpointL10n.ts | beforeSellerWorkletReportingStart": {
    "message": "Beginn der Berichterstellungsphase für Verkäufer"
  },
  "panels/sources/CategorizedBreakpointL10n.ts | beforeSellerWorkletScoringStart": {
    "message": "Beginn der Wertungsphase für Verkäufer"
  },
  "panels/sources/CategorizedBreakpointL10n.ts | cancelAnimationFrame": {
    "message": "Animationsframe abbrechen"
  },
  "panels/sources/CategorizedBreakpointL10n.ts | closeAudiocontext": {
    "message": "AudioContext schließen"
  },
  "panels/sources/CategorizedBreakpointL10n.ts | createAudiocontext": {
    "message": "AudioContext erstellen"
  },
  "panels/sources/CategorizedBreakpointL10n.ts | createCanvasContext": {
    "message": "Canvas-Kontext erstellen"
  },
  "panels/sources/CategorizedBreakpointL10n.ts | policyViolations": {
    "message": "Richtlinienverstöße"
  },
  "panels/sources/CategorizedBreakpointL10n.ts | requestAnimationFrame": {
    "message": "Animationsframe anfordern"
  },
  "panels/sources/CategorizedBreakpointL10n.ts | resumeAudiocontext": {
    "message": "AudioContext fortsetzen"
  },
  "panels/sources/CategorizedBreakpointL10n.ts | scriptBlockedByContentSecurity": {
    "message": "Script wurde von einer Content Security Policy blockiert"
  },
  "panels/sources/CategorizedBreakpointL10n.ts | scriptFirstStatement": {
    "message": "Script für erste Anweisung"
  },
  "panels/sources/CategorizedBreakpointL10n.ts | setInnerhtml": {
    "message": "innerHTML festlegen"
  },
  "panels/sources/CategorizedBreakpointL10n.ts | setTimeoutOrIntervalFired": {
    "message": "{PH1} gesendet"
  },
  "panels/sources/CategorizedBreakpointL10n.ts | sinkViolations": {
    "message": "Senkenverstöße"
  },
  "panels/sources/CategorizedBreakpointL10n.ts | suspendAudiocontext": {
    "message": "AudioContext sperren"
  },
  "panels/sources/CategorizedBreakpointL10n.ts | webglErrorFired": {
    "message": "WebGL-Fehler ausgelöst"
  },
  "panels/sources/CategorizedBreakpointL10n.ts | webglWarningFired": {
    "message": "WebGL-Warnung ausgelöst"
  },
  "panels/sources/CoveragePlugin.ts | clickToShowCoveragePanel": {
    "message": "Klicken, um Abdeckungsbereich anzuzeigen"
  },
  "panels/sources/CoveragePlugin.ts | coverageNa": {
    "message": "Abdeckung: –"
  },
  "panels/sources/CoveragePlugin.ts | coverageS": {
    "message": "Abdeckung: {PH1}"
  },
  "panels/sources/CoveragePlugin.ts | showDetails": {
    "message": "Details anzeigen"
  },
  "panels/sources/DebuggerPausedMessage.ts | attributeModifications": {
    "message": "Attributänderungen"
  },
  "panels/sources/DebuggerPausedMessage.ts | childSAdded": {
    "message": "Untergeordneter {PH1} hinzugefügt"
  },
  "panels/sources/DebuggerPausedMessage.ts | debuggerPaused": {
    "message": "Debugger pausiert"
  },
  "panels/sources/DebuggerPausedMessage.ts | descendantSAdded": {
    "message": "Nachfolgerelement {PH1} hinzugefügt"
  },
  "panels/sources/DebuggerPausedMessage.ts | descendantSRemoved": {
    "message": "Nachfolgerelement {PH1} entfernt"
  },
  "panels/sources/DebuggerPausedMessage.ts | nodeRemoval": {
    "message": "Knotenentfernung"
  },
  "panels/sources/DebuggerPausedMessage.ts | pausedBeforePotentialOutofmemory": {
    "message": "Vor einem möglichen Out-of-Memory-Absturz pausiert"
  },
  "panels/sources/DebuggerPausedMessage.ts | pausedOnAssertion": {
    "message": "Bei Assertion pausieren"
  },
  "panels/sources/DebuggerPausedMessage.ts | pausedOnBreakpoint": {
    "message": "An Haltepunkt pausiert"
  },
  "panels/sources/DebuggerPausedMessage.ts | pausedOnCspViolation": {
    "message": "Bei CSP-Verstoß pausiert"
  },
  "panels/sources/DebuggerPausedMessage.ts | pausedOnDebuggedFunction": {
    "message": "Bei Funktion pausiert, für die die Fehlerbehebung ausgeführt wurde"
  },
  "panels/sources/DebuggerPausedMessage.ts | pausedOnEventListener": {
    "message": "Bei Event-Listener pausiert"
  },
  "panels/sources/DebuggerPausedMessage.ts | pausedOnException": {
    "message": "Bei Ausnahme pausiert"
  },
  "panels/sources/DebuggerPausedMessage.ts | pausedOnPromiseRejection": {
    "message": "Bei promise-Ablehnung pausiert"
  },
  "panels/sources/DebuggerPausedMessage.ts | pausedOnS": {
    "message": "Bei {PH1} pausiert"
  },
  "panels/sources/DebuggerPausedMessage.ts | pausedOnXhrOrFetch": {
    "message": "Bei XHR oder Abruf pausiert"
  },
  "panels/sources/DebuggerPausedMessage.ts | scriptBlockedDueToContent": {
    "message": "Script wurde aufgrund einer Content Security Policy-Anweisung blockiert: {PH1}"
  },
  "panels/sources/DebuggerPausedMessage.ts | subtreeModifications": {
    "message": "Änderungen an der Unterstruktur"
  },
  "panels/sources/DebuggerPausedMessage.ts | trustedTypePolicyViolation": {
    "message": "Richtlinienverstoß: Trusted Type"
  },
  "panels/sources/DebuggerPausedMessage.ts | trustedTypeSinkViolation": {
    "message": "Verstoß gegen Trusted Type-Senke"
  },
  "panels/sources/DebuggerPausedMessage.ts | webglErrorFiredS": {
    "message": "WebGL-Fehler ausgelöst ({PH1})"
  },
  "panels/sources/DebuggerPlugin.ts | addBreakpoint": {
    "message": "Haltepunkt hinzufügen"
  },
  "panels/sources/DebuggerPlugin.ts | addConditionalBreakpoint": {
    "message": "Bedingten Haltepunkt hinzufügen…"
  },
  "panels/sources/DebuggerPlugin.ts | addLogpoint": {
    "message": "Logpoint hinzufügen…"
  },
  "panels/sources/DebuggerPlugin.ts | addSourceMap": {
    "message": "Quellzuordnung hinzufügen…"
  },
  "panels/sources/DebuggerPlugin.ts | addWasmDebugInfo": {
    "message": "DWARF-Debugging-Informationen hinzufügen…"
  },
  "panels/sources/DebuggerPlugin.ts | associatedFilesAreAvailable": {
    "message": "Zugehörige Dateien sind über den Dateibaum oder {PH1} verfügbar."
  },
  "panels/sources/DebuggerPlugin.ts | associatedFilesShouldBeAdded": {
    "message": "Zugehörige Dateien sollten dem Dateibaum hinzugefügt werden. Du kannst diese aufgelösten Quelldateien wie normale JavaScript-Dateien debuggen."
  },
  "panels/sources/DebuggerPlugin.ts | configure": {
    "message": "Konfigurieren"
  },
  "panels/sources/DebuggerPlugin.ts | debugFileNotFound": {
    "message": "Fehlerbehebungsdatei „{PH1}“ konnte nicht geladen werden."
  },
  "panels/sources/DebuggerPlugin.ts | debugInfoNotFound": {
    "message": "Fehler beim Laden der Informationen zur Fehlerbehebung für {PH1}."
  },
  "panels/sources/DebuggerPlugin.ts | debuggingPowerReduced": {
    "message": "Die Entwicklertools können keine erstellten Quellen anzeigen, du kannst aber den bereitgestellten Code debuggen."
  },
  "panels/sources/DebuggerPlugin.ts | disableBreakpoint": {
    "message": "{n,plural, =1{Haltepunkt deaktivieren}other{Alle Haltepunkte in der Zeile deaktivieren}}"
  },
  "panels/sources/DebuggerPlugin.ts | editBreakpoint": {
    "message": "Haltepunkt bearbeiten…"
  },
  "panels/sources/DebuggerPlugin.ts | enableBreakpoint": {
    "message": "{n,plural, =1{Haltepunkt aktivieren}other{Alle Haltepunkte in der Zeile aktivieren}}"
  },
  "panels/sources/DebuggerPlugin.ts | errorLoading": {
    "message": "Fehler beim Laden der URL {PH1}: {PH2}"
  },
  "panels/sources/DebuggerPlugin.ts | ignoreContentScripts": {
    "message": "Erweiterungs-Scripts ignorieren"
  },
  "panels/sources/DebuggerPlugin.ts | ignoreScript": {
    "message": "Diese Datei ignorieren"
  },
  "panels/sources/DebuggerPlugin.ts | neverPauseHere": {
    "message": "Hier nie pausieren"
  },
  "panels/sources/DebuggerPlugin.ts | reloadForSourceMap": {
    "message": "Achte zum Reaktivieren darauf, dass die Datei nicht auf der Ignorierliste ist, und lade sie neu."
  },
  "panels/sources/DebuggerPlugin.ts | removeBreakpoint": {
    "message": "{n,plural, =1{Haltepunkt entfernen}other{Alle Haltepunkte in der Zeile entfernen}}"
  },
  "panels/sources/DebuggerPlugin.ts | removeFromIgnoreList": {
    "message": "Aus der Ignorieren-Liste löschen"
  },
  "panels/sources/DebuggerPlugin.ts | sourceMapFailed": {
    "message": "Quellzuordnung konnte nicht geladen werden."
  },
  "panels/sources/DebuggerPlugin.ts | sourceMapLoaded": {
    "message": "Quellzuordnung geladen."
  },
  "panels/sources/DebuggerPlugin.ts | sourceMapSkipped": {
    "message": "Quellzuordnung für diese Datei übersprungen."
  },
  "panels/sources/DebuggerPlugin.ts | theDebuggerWillSkipStepping": {
    "message": "Der Debugger überspringt den Schritt durch dieses Script und hält bei Ausnahmen nicht an."
  },
  "panels/sources/DebuggerPlugin.ts | thisScriptIsOnTheDebuggersIgnore": {
    "message": "Dieses Script befindet sich auf der Ignorieren-Liste des Debuggers"
  },
  "panels/sources/FilteredUISourceCodeListProvider.ts | noFilesFound": {
    "message": "Keine Dateien gefunden"
  },
  "panels/sources/FilteredUISourceCodeListProvider.ts | sIgnoreListed": {
    "message": "{PH1} (auf Ignorierliste)"
  },
  "panels/sources/GoToLineQuickOpen.ts | currentLineSTypeALineNumber": {
    "message": "Aktuelle Zeile: {PH1}. Gib eine Zeilennummer zwischen 1 und {PH2} ein, zu der du gehen möchtest."
  },
  "panels/sources/GoToLineQuickOpen.ts | currentPositionXsTypeAnOffset": {
    "message": "Aktuelle Position: 0 x {PH1}. Gib eine Abweichung zwischen 0 x {PH2} und 0 x {PH3} an, zu der navigiert werden soll."
  },
  "panels/sources/GoToLineQuickOpen.ts | goToLineS": {
    "message": "Zu Zeile {PH1} gehen."
  },
  "panels/sources/GoToLineQuickOpen.ts | goToLineSAndColumnS": {
    "message": "Zu Zeile {PH1} und Spalte {PH2} gehen."
  },
  "panels/sources/GoToLineQuickOpen.ts | goToOffsetXs": {
    "message": "Zur Abweichung 0 x {PH1} gehen."
  },
  "panels/sources/GoToLineQuickOpen.ts | noFileSelected": {
    "message": "Keine Datei ausgewählt."
  },
  "panels/sources/GoToLineQuickOpen.ts | noResultsFound": {
    "message": "Keine Ergebnisse gefunden"
  },
  "panels/sources/GoToLineQuickOpen.ts | typeANumberToGoToThatLine": {
    "message": "Gib eine Zahl ein, um zu dieser Zeile zu gehen."
  },
  "panels/sources/InplaceFormatterEditorAction.ts | format": {
    "message": "Format"
  },
  "panels/sources/InplaceFormatterEditorAction.ts | formatS": {
    "message": "{PH1} formatieren"
  },
  "panels/sources/NavigatorView.ts | actionCannotBeUndone": {
    "message": "Diese Aktion kann nicht rückgängig gemacht werden."
  },
  "panels/sources/NavigatorView.ts | areYouSureYouWantToDeleteFolder": {
    "message": "Möchtest du diesen Ordner und seinen Inhalt wirklich löschen?"
  },
  "panels/sources/NavigatorView.ts | areYouSureYouWantToDeleteThis": {
    "message": "Möchtest du diese Datei wirklich löschen?"
  },
  "panels/sources/NavigatorView.ts | areYouSureYouWantToExcludeThis": {
    "message": "Möchtest du diesen Ordner wirklich ausschließen?"
  },
  "panels/sources/NavigatorView.ts | areYouSureYouWantToRemoveThis": {
    "message": "„{PH1}“ aus Arbeitsbereich entfernen?"
  },
  "panels/sources/NavigatorView.ts | authored": {
    "message": "Erstellt"
  },
  "panels/sources/NavigatorView.ts | authoredTooltip": {
    "message": "Enthält Originalquellen"
  },
  "panels/sources/NavigatorView.ts | delete": {
    "message": "Löschen"
  },
  "panels/sources/NavigatorView.ts | deployed": {
    "message": "Bereitgestellt"
  },
  "panels/sources/NavigatorView.ts | deployedTooltip": {
    "message": "Enthält die letzten Quellen, die der Browser sieht"
  },
  "panels/sources/NavigatorView.ts | excludeFolder": {
    "message": "Von Arbeitsbereich ausschließen"
  },
  "panels/sources/NavigatorView.ts | makeACopy": {
    "message": "Kopie erstellen…"
  },
  "panels/sources/NavigatorView.ts | newFile": {
    "message": "Neue Datei"
  },
  "panels/sources/NavigatorView.ts | noDomain": {
    "message": "(keine Domain)"
  },
  "panels/sources/NavigatorView.ts | openFolder": {
    "message": "Ordner öffnen"
  },
  "panels/sources/NavigatorView.ts | remove": {
    "message": "Entfernen"
  },
  "panels/sources/NavigatorView.ts | removeFolderFromWorkspace": {
    "message": "Aus Arbeitsbereich entfernen"
  },
  "panels/sources/NavigatorView.ts | rename": {
    "message": "Umbenennen…"
  },
  "panels/sources/NavigatorView.ts | sFromSourceMap": {
    "message": "{PH1} (aus Quellzuordnung)"
  },
  "panels/sources/NavigatorView.ts | sIgnoreListed": {
    "message": "{PH1} (auf Ignorierliste)"
  },
  "panels/sources/NavigatorView.ts | searchInAllFiles": {
    "message": "In allen Dateien suchen"
  },
  "panels/sources/NavigatorView.ts | searchInFolder": {
    "message": "In Ordner suchen"
  },
  "panels/sources/NavigatorView.ts | workspaceStopSyncing": {
    "message": "Dadurch werden Änderungen in den Entwicklertools nicht mehr mit deinen Quellen synchronisiert."
  },
  "panels/sources/OutlineQuickOpen.ts | noFileSelected": {
    "message": "Keine Datei ausgewählt."
  },
  "panels/sources/OutlineQuickOpen.ts | noResultsFound": {
    "message": "Keine Ergebnisse gefunden"
  },
  "panels/sources/OutlineQuickOpen.ts | openAJavascriptOrCssFileToSee": {
    "message": "Eine JavaScript- oder CSS-Datei öffnen, um Symbole zu sehen"
  },
  "panels/sources/ProfilePlugin.ts | kb": {
    "message": "KB"
  },
  "panels/sources/ProfilePlugin.ts | mb": {
    "message": "MB"
  },
  "panels/sources/ProfilePlugin.ts | ms": {
    "message": "ms"
  },
  "panels/sources/ResourceOriginPlugin.ts | fromS": {
    "message": "(Von {PH1})"
  },
  "panels/sources/ResourceOriginPlugin.ts | sourceMappedFromS": {
    "message": "(Quelle von {PH1} zugeordnet)"
  },
  "panels/sources/ScopeChainSidebarPane.ts | closure": {
    "message": "Closure"
  },
  "panels/sources/ScopeChainSidebarPane.ts | closureS": {
    "message": "Closure ({PH1})"
  },
  "panels/sources/ScopeChainSidebarPane.ts | exception": {
    "message": "Ausnahme"
  },
  "panels/sources/ScopeChainSidebarPane.ts | loading": {
    "message": "Wird geladen…"
  },
  "panels/sources/ScopeChainSidebarPane.ts | noVariables": {
    "message": "Keine Variablen"
  },
  "panels/sources/ScopeChainSidebarPane.ts | notPaused": {
    "message": "Nicht pausiert"
  },
  "panels/sources/ScopeChainSidebarPane.ts | returnValue": {
    "message": "Rückgabewert"
  },
  "panels/sources/SnippetsPlugin.ts | ctrlenter": {
    "message": "Strg + Eingabetaste"
  },
  "panels/sources/SnippetsPlugin.ts | enter": {
    "message": "⌘ + Eingabetaste"
  },
  "panels/sources/SourcesNavigator.ts | clearConfiguration": {
    "message": "Konfiguration löschen"
  },
  "panels/sources/SourcesNavigator.ts | createNewSnippet": {
    "message": "Neues Snippet erstellen"
  },
  "panels/sources/SourcesNavigator.ts | explainContentScripts": {
    "message": "Von Erweiterungen bereitgestellte Inhalts-Scripts ansehen"
  },
  "panels/sources/SourcesNavigator.ts | explainLocalOverrides": {
    "message": "Netzwerkanfragen und Webinhalte lokal überschreiben, um Remote-Ressourcen nachzuahmen"
  },
  "panels/sources/SourcesNavigator.ts | explainSnippets": {
    "message": "Du kannst häufig ausgeführten JavaScript-Code speichern und ihn jederzeit wieder ausführen"
  },
  "panels/sources/SourcesNavigator.ts | explainWorkspace": {
    "message": "Arbeitsbereich einrichten, um Änderungen direkt mit den von dir entwickelten Quellen zu synchronisieren"
  },
  "panels/sources/SourcesNavigator.ts | learnMore": {
    "message": "Weitere Informationen"
  },
  "panels/sources/SourcesNavigator.ts | newSnippet": {
    "message": "Neues Snippet"
  },
  "panels/sources/SourcesNavigator.ts | remove": {
    "message": "Entfernen"
  },
  "panels/sources/SourcesNavigator.ts | rename": {
    "message": "Umbenennen…"
  },
  "panels/sources/SourcesNavigator.ts | run": {
    "message": "Ausführen"
  },
  "panels/sources/SourcesNavigator.ts | saveAs": {
    "message": "Speichern unter…"
  },
  "panels/sources/SourcesNavigator.ts | selectFolderForOverrides": {
    "message": "Ordner für Überschreibungen auswählen"
  },
  "panels/sources/SourcesPanel.ts | continueToHere": {
    "message": "Weiter bis hier"
  },
  "panels/sources/SourcesPanel.ts | copyS": {
    "message": "{PH1} kopieren"
  },
  "panels/sources/SourcesPanel.ts | copyStringAsJSLiteral": {
    "message": "String als JavaScript-Literal kopieren"
  },
  "panels/sources/SourcesPanel.ts | copyStringAsJSONLiteral": {
    "message": "String als JSON-Literal kopieren"
  },
  "panels/sources/SourcesPanel.ts | copyStringContents": {
    "message": "Stringinhalte kopieren"
  },
  "panels/sources/SourcesPanel.ts | debuggerHidden": {
    "message": "Seitenleiste des Debuggers ist ausgeblendet"
  },
  "panels/sources/SourcesPanel.ts | debuggerShown": {
    "message": "Seitenleiste des Debuggers ist eingeblendet"
  },
  "panels/sources/SourcesPanel.ts | dropWorkspaceFolderHere": {
    "message": "Ordner „Arbeitsbereich“ hier ablegen"
  },
  "panels/sources/SourcesPanel.ts | groupByAuthored": {
    "message": "Nach „Erstellt“/„Bereitgestellt“ gruppieren"
  },
  "panels/sources/SourcesPanel.ts | groupByFolder": {
    "message": "Nach Ordner gruppieren"
  },
  "panels/sources/SourcesPanel.ts | hideDebugger": {
    "message": "Debugger ausblenden"
  },
  "panels/sources/SourcesPanel.ts | hideIgnoreListed": {
    "message": "Quellen auf der Ignorieren-Liste ausblenden"
  },
  "panels/sources/SourcesPanel.ts | hideNavigator": {
    "message": "Navigator ausblenden"
  },
  "panels/sources/SourcesPanel.ts | moreOptions": {
    "message": "Weitere Optionen"
  },
  "panels/sources/SourcesPanel.ts | navigatorHidden": {
    "message": "Navigator-Seitenleiste ist ausgeblendet"
  },
  "panels/sources/SourcesPanel.ts | navigatorShown": {
    "message": "Navigator-Seitenleiste ist eingeblendet"
  },
  "panels/sources/SourcesPanel.ts | openInSourcesPanel": {
    "message": "Im Quellbereich öffnen"
  },
  "panels/sources/SourcesPanel.ts | pauseOnCaughtExceptions": {
    "message": "Bei erkannten Ausnahmen pausieren"
  },
  "panels/sources/SourcesPanel.ts | resumeWithAllPausesBlockedForMs": {
    "message": "Mit Blockierung aller Pausen 500 ms fortsetzen"
  },
  "panels/sources/SourcesPanel.ts | revealInSidebar": {
    "message": "In Navigator-Seitenleiste anzeigen"
  },
  "panels/sources/SourcesPanel.ts | showDebugger": {
    "message": "Debugger anzeigen"
  },
  "panels/sources/SourcesPanel.ts | showFunctionDefinition": {
    "message": "Funktionsdefinition anzeigen"
  },
  "panels/sources/SourcesPanel.ts | showNavigator": {
    "message": "Navigator anzeigen"
  },
  "panels/sources/SourcesPanel.ts | storeAsGlobalVariable": {
    "message": "Als globale Variable speichern"
  },
  "panels/sources/SourcesPanel.ts | terminateCurrentJavascriptCall": {
    "message": "Aktuellen JavaScript-Aufruf beenden"
  },
  "panels/sources/SourcesView.ts | openFile": {
    "message": "Datei öffnen"
  },
  "panels/sources/SourcesView.ts | runCommand": {
    "message": "Befehl ausführen"
  },
  "panels/sources/SourcesView.ts | selectFolder": {
    "message": "Ordner auswählen"
  },
  "panels/sources/SourcesView.ts | sourceViewActions": {
    "message": "Quellenanzeige-Aktionen"
  },
  "panels/sources/SourcesView.ts | workspaceDropInAFolderToSyncSources": {
    "message": "Lege zum Synchronisieren von Änderungen mit dem Arbeitsbereich hier einen Ordner mit deinen Quellen ab oder gehe so vor"
  },
  "panels/sources/TabbedEditorContainer.ts | areYouSureYouWantToCloseUnsaved": {
    "message": "Möchtest du die nicht gespeicherte Datei wirklich schließen: {PH1}?"
  },
  "panels/sources/TabbedEditorContainer.ts | changesToThisFileWereNotSavedTo": {
    "message": "Änderungen an dieser Datei wurden nicht im Dateisystem gespeichert."
  },
  "panels/sources/TabbedEditorContainer.ts | unableToLoadThisContent": {
    "message": "Dieser Inhalt kann nicht geladen werden"
  },
  "panels/sources/ThreadsSidebarPane.ts | paused": {
    "message": "pausiert"
  },
  "panels/sources/WatchExpressionsSidebarPane.ts | addPropertyPathToWatch": {
    "message": "Property-Pfad zu Watch hinzufügen"
  },
  "panels/sources/WatchExpressionsSidebarPane.ts | addWatchExpression": {
    "message": "Watch-Ausdruck hinzufügen"
  },
  "panels/sources/WatchExpressionsSidebarPane.ts | copyValue": {
    "message": "Wert kopieren"
  },
  "panels/sources/WatchExpressionsSidebarPane.ts | deleteAllWatchExpressions": {
    "message": "Alle Watch-Ausdrücke löschen"
  },
  "panels/sources/WatchExpressionsSidebarPane.ts | deleteWatchExpression": {
    "message": "Watch-Ausdruck löschen"
  },
  "panels/sources/WatchExpressionsSidebarPane.ts | noWatchExpressions": {
    "message": "Keine Watch-Ausdrücke"
  },
  "panels/sources/WatchExpressionsSidebarPane.ts | notAvailable": {
    "message": "<nicht verfügbar>"
  },
  "panels/sources/WatchExpressionsSidebarPane.ts | refreshWatchExpressions": {
    "message": "Watch-Ausdrücke aktualisieren"
  },
  "panels/sources/components/BreakpointsView.ts | breakpointHit": {
    "message": "{PH1} Haltepunkttreffer"
  },
  "panels/sources/components/BreakpointsView.ts | checked": {
    "message": "aktiviert"
  },
  "panels/sources/components/BreakpointsView.ts | conditionCode": {
    "message": "Bedingung: {PH1}"
  },
  "panels/sources/components/BreakpointsView.ts | disableAllBreakpointsInFile": {
    "message": "Alle Haltepunkte in Datei deaktivieren"
  },
  "panels/sources/components/BreakpointsView.ts | editCondition": {
    "message": "Bedingung bearbeiten"
  },
  "panels/sources/components/BreakpointsView.ts | editLogpoint": {
    "message": "Logpoint bearbeiten"
  },
  "panels/sources/components/BreakpointsView.ts | enableAllBreakpointsInFile": {
    "message": "Alle Haltepunkte in Datei aktivieren"
  },
  "panels/sources/components/BreakpointsView.ts | indeterminate": {
    "message": "gemischt"
  },
  "panels/sources/components/BreakpointsView.ts | logpointCode": {
    "message": "Logpoint: {PH1}"
  },
  "panels/sources/components/BreakpointsView.ts | pauseOnCaughtExceptions": {
    "message": "Bei erkannten Ausnahmen anhalten"
  },
  "panels/sources/components/BreakpointsView.ts | pauseOnUncaughtExceptions": {
    "message": "Bei nicht abgefangenen Ausnahmen anhalten"
  },
  "panels/sources/components/BreakpointsView.ts | removeAllBreakpoints": {
    "message": "Alle Haltepunkte entfernen"
  },
  "panels/sources/components/BreakpointsView.ts | removeAllBreakpointsInFile": {
    "message": "Alle Haltepunkte in Datei entfernen"
  },
  "panels/sources/components/BreakpointsView.ts | removeBreakpoint": {
    "message": "Haltepunkt entfernen"
  },
  "panels/sources/components/BreakpointsView.ts | removeOtherBreakpoints": {
    "message": "Andere Haltepunkte entfernen"
  },
  "panels/sources/components/BreakpointsView.ts | revealLocation": {
    "message": "Standort anzeigen"
  },
  "panels/sources/components/BreakpointsView.ts | unchecked": {
    "message": "nicht ausgewählt"
  },
  "panels/sources/components/HeadersView.ts | addHeader": {
    "message": "Header hinzufügen"
  },
  "panels/sources/components/HeadersView.ts | addOverrideRule": {
    "message": "Überschreibungsregel hinzufügen"
  },
  "panels/sources/components/HeadersView.ts | errorWhenParsing": {
    "message": "Fehler beim Parsen von „{PH1}'“."
  },
  "panels/sources/components/HeadersView.ts | learnMore": {
    "message": "Weitere Informationen"
  },
  "panels/sources/components/HeadersView.ts | parsingErrorExplainer": {
    "message": "Dies ist wahrscheinlich auf einen Syntaxfehler in „{PH1}“ zurückzuführen. Versuche, die Datei in einem externen Bearbeitungsprogramm zu öffnen, um den Fehler zu beheben, oder lösche die Datei und erstelle die Überschreibung noch einmal."
  },
  "panels/sources/components/HeadersView.ts | removeBlock": {
    "message": "Diesen „ApplyTo“-Abschnitt entfernen"
  },
  "panels/sources/components/HeadersView.ts | removeHeader": {
    "message": "Header entfernen"
  },
  "panels/sources/sources-meta.ts | activateBreakpoints": {
    "message": "Haltepunkte aktivieren"
  },
  "panels/sources/sources-meta.ts | addFolder": {
    "message": "Ordner hinzufügen"
  },
  "panels/sources/sources-meta.ts | addFolderToWorkspace": {
    "message": "Ordner dem Arbeitsbereich hinzufügen"
  },
  "panels/sources/sources-meta.ts | addSelectedTextToWatches": {
    "message": "Ausgewählten Text zu Watches hinzufügen"
  },
  "panels/sources/sources-meta.ts | all": {
    "message": "Alles"
  },
  "panels/sources/sources-meta.ts | allowScrollingPastEndOfFile": {
    "message": "Scrollen über das Ende der Datei hinaus zulassen"
  },
  "panels/sources/sources-meta.ts | autocompletion": {
    "message": "Automatische Vervollständigung"
  },
  "panels/sources/sources-meta.ts | automaticallyRevealFilesIn": {
    "message": "Dateien in der Seitenleiste automatisch anzeigen"
  },
  "panels/sources/sources-meta.ts | bracketMatching": {
    "message": "Klammeranpassung"
  },
  "panels/sources/sources-meta.ts | breakpoints": {
    "message": "Haltepunkte"
  },
  "panels/sources/sources-meta.ts | closeAll": {
    "message": "Alle schließen"
  },
  "panels/sources/sources-meta.ts | closeTheActiveTab": {
    "message": "Aktiven Tab schließen"
  },
  "panels/sources/sources-meta.ts | codeFolding": {
    "message": "Code Folding"
  },
  "panels/sources/sources-meta.ts | createNewSnippet": {
    "message": "Neues Snippet erstellen"
  },
  "panels/sources/sources-meta.ts | deactivateBreakpoints": {
    "message": "Haltepunkte deaktivieren"
  },
  "panels/sources/sources-meta.ts | decrementCssUnitBy": {
    "message": "CSS-Einheit um {PH1} verringern"
  },
  "panels/sources/sources-meta.ts | detectIndentation": {
    "message": "Einzug erkennen"
  },
  "panels/sources/sources-meta.ts | disableAutoFocusOnDebuggerPaused": {
    "message": "Quellenbereich nicht fokussieren, wenn ein Haltepunkt ausgelöst wird"
  },
  "panels/sources/sources-meta.ts | disableAutocompletion": {
    "message": "Autovervollständigung deaktivieren"
  },
  "panels/sources/sources-meta.ts | disableBracketMatching": {
    "message": "Klammeranpassung deaktivieren"
  },
  "panels/sources/sources-meta.ts | disableCodeFolding": {
    "message": "„Code Folding“ deaktivieren"
  },
  "panels/sources/sources-meta.ts | disableCssSourceMaps": {
    "message": "CSS-Quellzuordnungen deaktivieren"
  },
  "panels/sources/sources-meta.ts | disableTabMovesFocus": {
    "message": "Fokus auf Tab-Verschiebung deaktivieren"
  },
  "panels/sources/sources-meta.ts | disableWasmAutoStepping": {
    "message": "Automatisches Übergehen von Wasm deaktivieren"
  },
  "panels/sources/sources-meta.ts | disallowScrollingPastEndOfFile": {
    "message": "Scrollen über das Ende der Datei hinaus nicht zulassen"
  },
  "panels/sources/sources-meta.ts | displayVariableValuesInlineWhile": {
    "message": "Variablenwerte beim Debuggen inline anzeigen"
  },
  "panels/sources/sources-meta.ts | doNotAutomaticallyRevealFilesIn": {
    "message": "Dateien in der Seitenleiste nicht automatisch anzeigen"
  },
  "panels/sources/sources-meta.ts | doNotDetectIndentation": {
    "message": "Einzug nicht erkennen"
  },
  "panels/sources/sources-meta.ts | doNotDisplayVariableValuesInline": {
    "message": "Variablenwerte beim Debuggen nicht inline anzeigen"
  },
  "panels/sources/sources-meta.ts | doNotSearchInAnonymousAndContent": {
    "message": "Nicht in anonymen und Content-Skripts suchen"
  },
  "panels/sources/sources-meta.ts | doNotShowWhitespaceCharacters": {
    "message": "Keine Leerzeichen anzeigen"
  },
  "panels/sources/sources-meta.ts | enableAutoFocusOnDebuggerPaused": {
    "message": "Quellenbereich fokussieren, wenn ein Haltepunkt ausgelöst wird"
  },
  "panels/sources/sources-meta.ts | enableAutocompletion": {
    "message": "Automatische Vervollständigung aktivieren"
  },
  "panels/sources/sources-meta.ts | enableBracketMatching": {
    "message": "Klammeranpassung aktivieren"
  },
  "panels/sources/sources-meta.ts | enableCodeFolding": {
    "message": "„Code Folding“ aktivieren"
  },
  "panels/sources/sources-meta.ts | enableCssSourceMaps": {
    "message": "CSS-Quellzuordnungen aktivieren"
  },
  "panels/sources/sources-meta.ts | enableTabMovesFocus": {
    "message": "Fokus auf Tab-Verschiebung aktivieren"
  },
  "panels/sources/sources-meta.ts | enableWasmAutoStepping": {
    "message": "Automatisches Übergehen von Wasm aktivieren"
  },
  "panels/sources/sources-meta.ts | evaluateSelectedTextInConsole": {
    "message": "Ausgewählten Text in der Konsole auswerten"
  },
  "panels/sources/sources-meta.ts | file": {
    "message": "Datei"
  },
  "panels/sources/sources-meta.ts | goTo": {
    "message": "Zu"
  },
  "panels/sources/sources-meta.ts | goToAFunctionDeclarationruleSet": {
    "message": "Funktionsdeklaration/Regelsatz öffnen"
  },
  "panels/sources/sources-meta.ts | goToLine": {
    "message": "Zu Zeile gehen"
  },
  "panels/sources/sources-meta.ts | incrementCssUnitBy": {
    "message": "CSS-Einheit um {PH1} steigern"
  },
  "panels/sources/sources-meta.ts | jumpToNextEditingLocation": {
    "message": "Zur nächsten Bearbeitungsposition springen"
  },
  "panels/sources/sources-meta.ts | jumpToPreviousEditingLocation": {
    "message": "Zur vorherigen Bearbeitungsposition springen"
  },
  "panels/sources/sources-meta.ts | line": {
    "message": "Zeile"
  },
  "panels/sources/sources-meta.ts | nextCallFrame": {
    "message": "Nächster Aufruf-Frame"
  },
  "panels/sources/sources-meta.ts | nextEditorTab": {
    "message": "Nächster Editor"
  },
  "panels/sources/sources-meta.ts | none": {
    "message": "Keiner"
  },
  "panels/sources/sources-meta.ts | open": {
    "message": "Öffnen"
  },
  "panels/sources/sources-meta.ts | pauseScriptExecution": {
    "message": "Skriptausführung pausieren"
  },
  "panels/sources/sources-meta.ts | previousCallFrame": {
    "message": "Vorheriger Aufruf-Frame"
  },
  "panels/sources/sources-meta.ts | previousEditorTab": {
    "message": "Vorherige Empfehlung der Redaktion"
  },
  "panels/sources/sources-meta.ts | quickSource": {
    "message": "Quick Source"
  },
  "panels/sources/sources-meta.ts | rename": {
    "message": "Umbenennen"
  },
  "panels/sources/sources-meta.ts | resumeScriptExecution": {
    "message": "Skriptausführung fortsetzen"
  },
  "panels/sources/sources-meta.ts | revealActiveFileInSidebar": {
    "message": "Aktive Datei in der Navigator-Seitenleiste anzeigen"
  },
  "panels/sources/sources-meta.ts | runSnippet": {
    "message": "Snippet ausführen"
  },
  "panels/sources/sources-meta.ts | save": {
    "message": "Speichern"
  },
  "panels/sources/sources-meta.ts | saveAll": {
    "message": "Alle speichern"
  },
  "panels/sources/sources-meta.ts | scope": {
    "message": "Umfang"
  },
  "panels/sources/sources-meta.ts | search": {
    "message": "Suche"
  },
  "panels/sources/sources-meta.ts | searchInAnonymousAndContent": {
    "message": "In anonymen und Inhaltsskripten suchen"
  },
  "panels/sources/sources-meta.ts | showAllWhitespaceCharacters": {
    "message": "Alle Leerzeichen anzeigen"
  },
  "panels/sources/sources-meta.ts | showBreakpoints": {
    "message": "Haltepunkte anzeigen"
  },
  "panels/sources/sources-meta.ts | showQuickSource": {
    "message": "Quick Source anzeigen"
  },
  "panels/sources/sources-meta.ts | showScope": {
    "message": "Umfang anzeigen"
  },
  "panels/sources/sources-meta.ts | showSearch": {
    "message": "Suche anzeigen"
  },
  "panels/sources/sources-meta.ts | showSnippets": {
    "message": "Ausschnitte anzeigen"
  },
  "panels/sources/sources-meta.ts | showSources": {
    "message": "Quellen anzeigen"
  },
  "panels/sources/sources-meta.ts | showThreads": {
    "message": "Threads anzeigen"
  },
  "panels/sources/sources-meta.ts | showTrailingWhitespaceCharacters": {
    "message": "Alle nachgestellten Leerzeichen anzeigen"
  },
  "panels/sources/sources-meta.ts | showWatch": {
    "message": "Watch anzeigen"
  },
  "panels/sources/sources-meta.ts | showWhitespaceCharacters": {
    "message": "Leerzeichen anzeigen:"
  },
  "panels/sources/sources-meta.ts | showWorkspace": {
    "message": "Arbeitsbereich anzeigen"
  },
  "panels/sources/sources-meta.ts | snippets": {
    "message": "Snippets"
  },
  "panels/sources/sources-meta.ts | sources": {
    "message": "Quellcode"
  },
  "panels/sources/sources-meta.ts | step": {
    "message": "Schritt"
  },
  "panels/sources/sources-meta.ts | stepIntoNextFunctionCall": {
    "message": "„Step Into“ zum nächsten Funktionsaufruf"
  },
  "panels/sources/sources-meta.ts | stepOutOfCurrentFunction": {
    "message": "Aktuelle Funktion verlassen"
  },
  "panels/sources/sources-meta.ts | stepOverNextFunctionCall": {
    "message": "Step Over zum nächsten Funktionsaufruf"
  },
  "panels/sources/sources-meta.ts | switchFile": {
    "message": "Datei wechseln"
  },
  "panels/sources/sources-meta.ts | symbol": {
    "message": "Symbol"
  },
  "panels/sources/sources-meta.ts | threads": {
    "message": "Threads"
  },
  "panels/sources/sources-meta.ts | toggleBreakpoint": {
    "message": "Haltepunkt ein- und ausblenden"
  },
  "panels/sources/sources-meta.ts | toggleBreakpointEnabled": {
    "message": "Ein-/Ausblenden des Haltepunkts aktiviert"
  },
  "panels/sources/sources-meta.ts | toggleBreakpointInputWindow": {
    "message": "Haltepunkt-Eingabefenster öffnen/schließen"
  },
  "panels/sources/sources-meta.ts | toggleDebuggerSidebar": {
    "message": "Debugger-Seitenleiste ein-/ausblenden"
  },
  "panels/sources/sources-meta.ts | toggleNavigatorSidebar": {
    "message": "Navigator-Seitenleiste ein-/ausblenden"
  },
  "panels/sources/sources-meta.ts | trailing": {
    "message": "Nachgestellt"
  },
  "panels/sources/sources-meta.ts | wasmAutoStepping": {
    "message": "Beim Debuggen von Wasm mit Debugging-Informationen nach Möglichkeit nicht bei Wasm-Bytecode anhalten"
  },
  "panels/sources/sources-meta.ts | watch": {
    "message": "Ansehen"
  },
  "panels/sources/sources-meta.ts | workspace": {
    "message": "Arbeitsbereich"
  },
  "panels/timeline/AnimationsTrackAppender.ts | animations": {
    "message": "Animationen"
  },
  "panels/timeline/AppenderUtils.ts | sSelfS": {
    "message": "{PH1} ({PH2} im Knoten selbst)"
  },
  "panels/timeline/CountersGraph.ts | documents": {
    "message": "Dokumente"
  },
  "panels/timeline/CountersGraph.ts | gpuMemory": {
    "message": "GPU-Arbeitsspeicher"
  },
  "panels/timeline/CountersGraph.ts | jsHeap": {
    "message": "JS Heap"
  },
  "panels/timeline/CountersGraph.ts | listeners": {
    "message": "Listener"
  },
  "panels/timeline/CountersGraph.ts | nodes": {
    "message": "Knoten"
  },
  "panels/timeline/CountersGraph.ts | ss": {
    "message": "[{PH1} – {PH2}]"
  },
  "panels/timeline/EventUICategory.ts | animation": {
    "message": "Animation"
  },
  "panels/timeline/EventUICategory.ts | animationFrameFired": {
    "message": "Animationsframe ausgelöst"
  },
  "panels/timeline/EventUICategory.ts | async": {
    "message": "Async"
  },
  "panels/timeline/EventUICategory.ts | asyncTask": {
    "message": "Async-Task"
  },
  "panels/timeline/EventUICategory.ts | cacheModule": {
    "message": "Modulcode im Cache speichern"
  },
  "panels/timeline/EventUICategory.ts | cacheScript": {
    "message": "Scriptcode im Cache speichern"
  },
  "panels/timeline/EventUICategory.ts | cachedWasmModule": {
    "message": "Im Cache gespeichertes Wasm-Modul"
  },
  "panels/timeline/EventUICategory.ts | cancelAnimationFrame": {
    "message": "Animationsframe abbrechen"
  },
  "panels/timeline/EventUICategory.ts | cancelIdleCallback": {
    "message": "Callback bei Inaktivität abbrechen"
  },
  "panels/timeline/EventUICategory.ts | commit": {
    "message": "Commit"
  },
  "panels/timeline/EventUICategory.ts | compileCode": {
    "message": "Code kompilieren"
  },
  "panels/timeline/EventUICategory.ts | compileModule": {
    "message": "Modul kompilieren"
  },
  "panels/timeline/EventUICategory.ts | compileScript": {
    "message": "Script kompilieren"
  },
  "panels/timeline/EventUICategory.ts | compiledWasmModule": {
    "message": "Kompiliertes Wasm-Modul"
  },
  "panels/timeline/EventUICategory.ts | compositeLayers": {
    "message": "Komposit-Ebenen"
  },
  "panels/timeline/EventUICategory.ts | computeIntersections": {
    "message": "Schnittpunkte berechnen"
  },
  "panels/timeline/EventUICategory.ts | consoleTime": {
    "message": "Konsolenzeit"
  },
  "panels/timeline/EventUICategory.ts | cppGc": {
    "message": "Automatische Speicherbereinigung für C++"
  },
  "panels/timeline/EventUICategory.ts | createWebsocket": {
    "message": "WebSocket erstellen"
  },
  "panels/timeline/EventUICategory.ts | decrypt": {
    "message": "Entschlüsseln"
  },
  "panels/timeline/EventUICategory.ts | decryptReply": {
    "message": "Antwort entschlüsseln"
  },
  "panels/timeline/EventUICategory.ts | deserializeCodeCache": {
    "message": "Code-Cache deserialisieren"
  },
  "panels/timeline/EventUICategory.ts | destroyWebsocket": {
    "message": "WebSocket schließen"
  },
  "panels/timeline/EventUICategory.ts | digest": {
    "message": "Benachrichtigung"
  },
  "panels/timeline/EventUICategory.ts | digestReply": {
    "message": "Antwort auf Benachrichtigung"
  },
  "panels/timeline/EventUICategory.ts | domGc": {
    "message": "Speicherbereinigung des DOMs"
  },
  "panels/timeline/EventUICategory.ts | domcontentloadedEvent": {
    "message": "DOMContentLoaded-Ereignis"
  },
  "panels/timeline/EventUICategory.ts | drawFrame": {
    "message": "Frame zeichnen"
  },
  "panels/timeline/EventUICategory.ts | embedderCallback": {
    "message": "Embedder-Callback"
  },
  "panels/timeline/EventUICategory.ts | encrypt": {
    "message": "Verschlüsseln"
  },
  "panels/timeline/EventUICategory.ts | encryptReply": {
    "message": "Antwort verschlüsseln"
  },
  "panels/timeline/EventUICategory.ts | evaluateModule": {
    "message": "Modul evaluieren"
  },
  "panels/timeline/EventUICategory.ts | evaluateScript": {
    "message": "Script evaluieren"
  },
  "panels/timeline/EventUICategory.ts | event": {
    "message": "Ereignis"
  },
  "panels/timeline/EventUICategory.ts | eventTiming": {
    "message": "Zeitangaben für Ereignis"
  },
  "panels/timeline/EventUICategory.ts | experience": {
    "message": "Erfahrung"
  },
  "panels/timeline/EventUICategory.ts | finishLoading": {
    "message": "Laden beenden"
  },
  "panels/timeline/EventUICategory.ts | fireIdleCallback": {
    "message": "Callback bei Inaktivität auslösen"
  },
  "panels/timeline/EventUICategory.ts | firstContentfulPaint": {
    "message": "First Contentful Paint"
  },
  "panels/timeline/EventUICategory.ts | firstPaint": {
    "message": "First Paint"
  },
  "panels/timeline/EventUICategory.ts | frameStart": {
    "message": "Frame-Start"
  },
  "panels/timeline/EventUICategory.ts | frameStartMainThread": {
    "message": "Frame-Start (Hauptthread)"
  },
  "panels/timeline/EventUICategory.ts | frameStartedLoading": {
    "message": "Laden des Frames gestartet"
  },
  "panels/timeline/EventUICategory.ts | functionCall": {
    "message": "Funktionsaufruf"
  },
  "panels/timeline/EventUICategory.ts | gcEvent": {
    "message": "Speicherbereinigungs-Ereignis"
  },
  "panels/timeline/EventUICategory.ts | gpu": {
    "message": "GPU"
  },
  "panels/timeline/EventUICategory.ts | hitTest": {
    "message": "Trefferprüfung"
  },
  "panels/timeline/EventUICategory.ts | idle": {
    "message": "Inaktiv"
  },
  "panels/timeline/EventUICategory.ts | imageDecode": {
    "message": "Bild-Decodierung"
  },
  "panels/timeline/EventUICategory.ts | imageResize": {
    "message": "Bildgröße anpassen"
  },
  "panels/timeline/EventUICategory.ts | installTimer": {
    "message": "Timer installieren"
  },
  "panels/timeline/EventUICategory.ts | invalidateLayout": {
    "message": "Layout außer Kraft setzen"
  },
  "panels/timeline/EventUICategory.ts | jsFrame": {
    "message": "JS-Frame"
  },
  "panels/timeline/EventUICategory.ts | largestContentfulPaint": {
    "message": "Largest Contentful Paint"
  },
  "panels/timeline/EventUICategory.ts | layerize": {
    "message": "Ebenenberechnung"
  },
  "panels/timeline/EventUICategory.ts | layout": {
    "message": "Layout"
  },
  "panels/timeline/EventUICategory.ts | layoutShift": {
    "message": "Layout Shift"
  },
  "panels/timeline/EventUICategory.ts | loading": {
    "message": "Laden"
  },
  "panels/timeline/EventUICategory.ts | majorGc": {
    "message": "Größere Speicherbereinigung"
  },
  "panels/timeline/EventUICategory.ts | minorGc": {
    "message": "Kleinere Speicherbereinigung"
  },
  "panels/timeline/EventUICategory.ts | onloadEvent": {
    "message": "Onload-Ereignis"
  },
  "panels/timeline/EventUICategory.ts | optimizeCode": {
    "message": "Code optimieren"
  },
  "panels/timeline/EventUICategory.ts | other": {
    "message": "Sonstige"
  },
  "panels/timeline/EventUICategory.ts | paint": {
    "message": "Paint"
  },
  "panels/timeline/EventUICategory.ts | paintImage": {
    "message": "Paint-Bild"
  },
  "panels/timeline/EventUICategory.ts | paintSetup": {
    "message": "Paint-Einrichtung"
  },
  "panels/timeline/EventUICategory.ts | painting": {
    "message": "Zeichnen"
  },
  "panels/timeline/EventUICategory.ts | parseAndCompile": {
    "message": "Parsen und kompilieren"
  },
  "panels/timeline/EventUICategory.ts | parseHtml": {
    "message": "HTML parsen"
  },
  "panels/timeline/EventUICategory.ts | parseStylesheet": {
    "message": "Stylesheet parsen"
  },
  "panels/timeline/EventUICategory.ts | prePaint": {
    "message": "Pre-Paint"
  },
  "panels/timeline/EventUICategory.ts | profilingOverhead": {
    "message": "Profiler-Initialisierung"
  },
  "panels/timeline/EventUICategory.ts | rasterizePaint": {
    "message": "Paint rastern"
  },
  "panels/timeline/EventUICategory.ts | recalculateStyle": {
    "message": "Stil neu berechnen"
  },
  "panels/timeline/EventUICategory.ts | receiveData": {
    "message": "Daten empfangen"
  },
  "panels/timeline/EventUICategory.ts | receiveResponse": {
    "message": "Antwort erhalten"
  },
  "panels/timeline/EventUICategory.ts | receiveWebsocketHandshake": {
    "message": "WebSocket-Handshake erhalten"
  },
  "panels/timeline/EventUICategory.ts | removeTimer": {
    "message": "Timer löschen"
  },
  "panels/timeline/EventUICategory.ts | rendering": {
    "message": "Rendering"
  },
  "panels/timeline/EventUICategory.ts | requestAnimationFrame": {
    "message": "Animationsframe anfordern"
  },
  "panels/timeline/EventUICategory.ts | requestIdleCallback": {
    "message": "Callback bei Inaktivität anfordern"
  },
  "panels/timeline/EventUICategory.ts | requestMainThreadFrame": {
    "message": "Hauptthread-Frame anfragen"
  },
  "panels/timeline/EventUICategory.ts | runMicrotasks": {
    "message": "Microtasks ausführen"
  },
  "panels/timeline/EventUICategory.ts | scheduleStyleRecalculation": {
    "message": "Stilneuberechnung planen"
  },
  "panels/timeline/EventUICategory.ts | scripting": {
    "message": "Scripting"
  },
  "panels/timeline/EventUICategory.ts | scroll": {
    "message": "Scrollen"
  },
  "panels/timeline/EventUICategory.ts | sendRequest": {
    "message": "Anfrage senden"
  },
  "panels/timeline/EventUICategory.ts | sendWebsocketHandshake": {
    "message": "WebSocket-Handshake senden"
  },
  "panels/timeline/EventUICategory.ts | sign": {
    "message": "Signieren"
  },
  "panels/timeline/EventUICategory.ts | signReply": {
    "message": "Antwort signieren"
  },
  "panels/timeline/EventUICategory.ts | streamingCompileTask": {
    "message": "Streaming-Kompiliertask"
  },
  "panels/timeline/EventUICategory.ts | streamingWasmResponse": {
    "message": "Wasm-Antwort streamen"
  },
  "panels/timeline/EventUICategory.ts | system": {
    "message": "System"
  },
  "panels/timeline/EventUICategory.ts | task": {
    "message": "Task"
  },
  "panels/timeline/EventUICategory.ts | timerFired": {
    "message": "Timer ausgelöst"
  },
  "panels/timeline/EventUICategory.ts | timestamp": {
    "message": "Zeitstempel"
  },
  "panels/timeline/EventUICategory.ts | updateLayer": {
    "message": "Ebene aktualisieren"
  },
  "panels/timeline/EventUICategory.ts | updateLayerTree": {
    "message": "Ebenenstruktur aktualisieren"
  },
  "panels/timeline/EventUICategory.ts | userTiming": {
    "message": "Nutzertiming"
  },
  "panels/timeline/EventUICategory.ts | verify": {
    "message": "Verifizieren"
  },
  "panels/timeline/EventUICategory.ts | verifyReply": {
    "message": "Antwort verifizieren"
  },
  "panels/timeline/EventUICategory.ts | waitingForNetwork": {
    "message": "Auf Netzwerk warten"
  },
  "panels/timeline/EventUICategory.ts | wasmModuleCacheHit": {
    "message": "Cache-Treffer des Wasm-Moduls"
  },
  "panels/timeline/EventUICategory.ts | wasmModuleCacheInvalid": {
    "message": "Cache des Wasm-Moduls ungültig"
  },
  "panels/timeline/EventUICategory.ts | willSendRequest": {
    "message": "Anforderung wird gesendet"
  },
  "panels/timeline/EventUICategory.ts | xhrLoad": {
    "message": "Laden von XHR"
  },
  "panels/timeline/EventUICategory.ts | xhrReadyStateChange": {
    "message": "Änderung des XHR-Attributs „readyState“"
  },
  "panels/timeline/EventsTimelineTreeView.ts | Dms": {
    "message": "{PH1} ms"
  },
  "panels/timeline/EventsTimelineTreeView.ts | all": {
    "message": "Alles"
  },
  "panels/timeline/EventsTimelineTreeView.ts | durationFilter": {
    "message": "Filter „Dauer“"
  },
  "panels/timeline/EventsTimelineTreeView.ts | filterEventLog": {
    "message": "Ereignisprotokoll filtern"
  },
  "panels/timeline/EventsTimelineTreeView.ts | startTime": {
    "message": "Startzeit"
  },
  "panels/timeline/GPUTrackAppender.ts | gpu": {
    "message": "GPU"
  },
  "panels/timeline/InteractionsTrackAppender.ts | interactions": {
    "message": "Interaktionen"
  },
  "panels/timeline/IsolateSelector.ts | empty": {
    "message": "(leer)"
  },
  "panels/timeline/IsolateSelector.ts | selectJavascriptVmInstance": {
    "message": "JavaScript-VM-Instanz auswählen"
  },
  "panels/timeline/LayoutShiftsTrackAppender.ts | layoutShifts": {
    "message": "Layout Shifts"
  },
  "panels/timeline/NetworkTrackAppender.ts | network": {
    "message": "Netzwerk"
  },
  "panels/timeline/ThreadAppender.ts | anonymous": {
    "message": "(anonym)"
  },
  "panels/timeline/ThreadAppender.ts | bidderWorklet": {
    "message": "Bieter-Worklet"
  },
  "panels/timeline/ThreadAppender.ts | bidderWorkletS": {
    "message": "Bieter-Worklet — {PH1}"
  },
  "panels/timeline/ThreadAppender.ts | dedicatedWorker": {
    "message": "Dedizierter Worker"
  },
  "panels/timeline/ThreadAppender.ts | eventDispatchS": {
    "message": "Ereignis: {PH1}"
  },
  "panels/timeline/ThreadAppender.ts | frameS": {
    "message": "Frame – {PH1}"
  },
  "panels/timeline/ThreadAppender.ts | main": {
    "message": "Hauptthread"
  },
  "panels/timeline/ThreadAppender.ts | mainS": {
    "message": "Hauptframe — {PH1}"
  },
  "panels/timeline/ThreadAppender.ts | onIgnoreList": {
    "message": "Auf Ignorierliste"
  },
  "panels/timeline/ThreadAppender.ts | raster": {
    "message": "Raster"
  },
  "panels/timeline/ThreadAppender.ts | rasterizerThreadS": {
    "message": "Rasterungs-Thread {PH1}"
  },
  "panels/timeline/ThreadAppender.ts | sellerWorklet": {
    "message": "Verkäufer-Worklet"
  },
  "panels/timeline/ThreadAppender.ts | sellerWorkletS": {
    "message": "Verkäufer-Worklet – {PH1}"
  },
  "panels/timeline/ThreadAppender.ts | threadPool": {
    "message": "Threadpool"
  },
  "panels/timeline/ThreadAppender.ts | threadPoolThreadS": {
    "message": "Threadpool-Worker {PH1}"
  },
  "panels/timeline/ThreadAppender.ts | threadS": {
    "message": "Thread {PH1}"
  },
  "panels/timeline/ThreadAppender.ts | unknownWorklet": {
    "message": "Auktions-Worklet"
  },
  "panels/timeline/ThreadAppender.ts | unknownWorkletS": {
    "message": "Auktions-Worklet – {PH1}"
  },
  "panels/timeline/ThreadAppender.ts | workerS": {
    "message": "Worker — {PH1}"
  },
  "panels/timeline/ThreadAppender.ts | workerSS": {
    "message": "Worker: {PH1} – {PH2}"
  },
  "panels/timeline/ThreadAppender.ts | workletService": {
    "message": "Auktions-Worklet-Dienst"
  },
  "panels/timeline/ThreadAppender.ts | workletServiceS": {
    "message": "Auktions-Worklet-Dienst – {PH1}"
  },
  "panels/timeline/TimelineController.ts | tracingNotSupported": {
    "message": "Aufnahme des Leistungs-Trace wird für diese Art von Ziel nicht unterstützt"
  },
  "panels/timeline/TimelineDetailsView.ts | bottomup": {
    "message": "Von unten nach oben"
  },
  "panels/timeline/TimelineDetailsView.ts | callTree": {
    "message": "Baumansicht „Aufrufe“"
  },
  "panels/timeline/TimelineDetailsView.ts | eventLog": {
    "message": "Ereignisprotokoll"
  },
  "panels/timeline/TimelineDetailsView.ts | layers": {
    "message": "Ebenen"
  },
  "panels/timeline/TimelineDetailsView.ts | paintProfiler": {
    "message": "Paint Profiler"
  },
  "panels/timeline/TimelineDetailsView.ts | rangeSS": {
    "message": "Bereich: {PH1} – {PH2}"
  },
  "panels/timeline/TimelineDetailsView.ts | summary": {
    "message": "Zusammenfassung"
  },
  "panels/timeline/TimelineEventOverview.ts | cpu": {
    "message": "CPU"
  },
  "panels/timeline/TimelineEventOverview.ts | heap": {
    "message": "HEAP"
  },
  "panels/timeline/TimelineEventOverview.ts | net": {
    "message": "NET"
  },
  "panels/timeline/TimelineEventOverview.ts | sSDash": {
    "message": "{PH1} – {PH2}"
  },
  "panels/timeline/TimelineFlameChartDataProvider.ts | droppedFrame": {
    "message": "Abgelegter Frame"
  },
  "panels/timeline/TimelineFlameChartDataProvider.ts | frame": {
    "message": "Frame"
  },
  "panels/timeline/TimelineFlameChartDataProvider.ts | frameS": {
    "message": "Frame – {PH1}"
  },
  "panels/timeline/TimelineFlameChartDataProvider.ts | frames": {
    "message": "Frames"
  },
  "panels/timeline/TimelineFlameChartDataProvider.ts | idleFrame": {
    "message": "Inaktiver Frame"
  },
  "panels/timeline/TimelineFlameChartDataProvider.ts | main": {
    "message": "Hauptinhalt"
  },
  "panels/timeline/TimelineFlameChartDataProvider.ts | mainS": {
    "message": "Hauptframe — {PH1}"
  },
  "panels/timeline/TimelineFlameChartDataProvider.ts | onIgnoreList": {
    "message": "Auf Ignorierliste"
  },
  "panels/timeline/TimelineFlameChartDataProvider.ts | partiallyPresentedFrame": {
    "message": "Teilweise angezeigter Frame"
  },
  "panels/timeline/TimelineFlameChartDataProvider.ts | raster": {
    "message": "Raster"
  },
  "panels/timeline/TimelineFlameChartDataProvider.ts | rasterizerThreadS": {
    "message": "Rasterungs-Thread {PH1}"
  },
  "panels/timeline/TimelineFlameChartDataProvider.ts | sSelfS": {
    "message": "{PH1} ({PH2} im Knoten selbst)"
  },
  "panels/timeline/TimelineFlameChartDataProvider.ts | subframe": {
    "message": "Subframe"
  },
  "panels/timeline/TimelineFlameChartDataProvider.ts | thread": {
    "message": "Thread"
  },
  "panels/timeline/TimelineFlameChartView.ts | sAtS": {
    "message": "{PH1} um {PH2}"
  },
  "panels/timeline/TimelineHistoryManager.ts | currentSessionSS": {
    "message": "Aktuelle Sitzung: {PH1}. {PH2}"
  },
  "panels/timeline/TimelineHistoryManager.ts | moments": {
    "message": "Momente"
  },
  "panels/timeline/TimelineHistoryManager.ts | noRecordings": {
    "message": "(keine Aufnahmen)"
  },
  "panels/timeline/TimelineHistoryManager.ts | sAgo": {
    "message": "(Vor {PH1})"
  },
  "panels/timeline/TimelineHistoryManager.ts | sD": {
    "message": "{PH1} #{PH2}"
  },
  "panels/timeline/TimelineHistoryManager.ts | sH": {
    "message": "{PH1} h"
  },
  "panels/timeline/TimelineHistoryManager.ts | sM": {
    "message": "{PH1} m"
  },
  "panels/timeline/TimelineHistoryManager.ts | selectTimelineSession": {
    "message": "Zeitachsensitzung auswählen"
  },
  "panels/timeline/TimelineLoader.ts | legacyTimelineFormatIsNot": {
    "message": "Veraltetes Zeitachsenformat wird nicht unterstützt."
  },
  "panels/timeline/TimelineLoader.ts | malformedCpuProfileFormat": {
    "message": "Fehlerhaftes CPU-Profilformat"
  },
  "panels/timeline/TimelineLoader.ts | malformedTimelineDataS": {
    "message": "Fehlerhafte Zeitreihendaten: {PH1}"
  },
  "panels/timeline/TimelineLoader.ts | malformedTimelineDataUnknownJson": {
    "message": "Fehlerhafte Zeitreihendaten: Unbekanntes JSON-Format"
  },
  "panels/timeline/TimelineLoader.ts | malformedTimelineInputWrongJson": {
    "message": "Fehlerhafte Zeitachseneingabe, ungleiche JSON-Klammern"
  },
  "panels/timeline/TimelinePanel.ts | CpuThrottlingIsEnabled": {
    "message": "- CPU-Drosselung ist aktiviert"
  },
  "panels/timeline/TimelinePanel.ts | HardwareConcurrencyIsEnabled": {
    "message": "– Überschreibung der Hardware-Nebenläufigkeit ist aktiviert"
  },
  "panels/timeline/TimelinePanel.ts | JavascriptSamplingIsDisabled": {
    "message": "– JavaScript-Sampling ist deaktiviert"
  },
  "panels/timeline/TimelinePanel.ts | NetworkThrottlingIsEnabled": {
    "message": "- Netzwerkdrosselung ist aktiviert"
  },
  "panels/timeline/TimelinePanel.ts | SignificantOverheadDueToPaint": {
    "message": "– Erheblicher Overhead durch Paint-Instrumentierung"
  },
  "panels/timeline/TimelinePanel.ts | afterRecordingSelectAnAreaOf": {
    "message": "Wähle nach der Aufnahme in der Übersicht einen Bereich, der dich interessiert, durch Ziehen aus. Zoome und schwenke dann die Zeitachse mit dem Mausrad oder den {PH1}-Tasten. {PH2}"
  },
  "panels/timeline/TimelinePanel.ts | bufferUsage": {
    "message": "Zwischenspeichernutzung"
  },
  "panels/timeline/TimelinePanel.ts | captureScreenshots": {
    "message": "Screenshots aufnehmen"
  },
  "panels/timeline/TimelinePanel.ts | captureSettings": {
    "message": "Aufnahmeeinstellungen"
  },
  "panels/timeline/TimelinePanel.ts | capturesAdvancedPaint": {
    "message": "Erfasst erweiterte Paint-Instrumentierung, führt zu erheblichem Leistungsoverhead"
  },
  "panels/timeline/TimelinePanel.ts | clear": {
    "message": "Löschen"
  },
  "panels/timeline/TimelinePanel.ts | clickTheRecordButtonSOrHitSTo": {
    "message": "Klicke auf die Schaltfläche zum Aufzeichnen {PH1} oder drücke {PH2}, um mit der Aufzeichnung zu beginnen."
  },
  "panels/timeline/TimelinePanel.ts | clickTheReloadButtonSOrHitSTo": {
    "message": "Klicke auf die Schaltfläche zum erneuten Laden {PH1} oder drücke {PH2}, um mit der Aufzeichnung des Seitenaufbaus zu beginnen."
  },
  "panels/timeline/TimelinePanel.ts | close": {
    "message": "Schließen"
  },
  "panels/timeline/TimelinePanel.ts | cpu": {
    "message": "CPU:"
  },
  "panels/timeline/TimelinePanel.ts | description": {
    "message": "Beschreibung"
  },
  "panels/timeline/TimelinePanel.ts | disableJavascriptSamples": {
    "message": "JavaScript-Samples deaktivieren"
  },
  "panels/timeline/TimelinePanel.ts | disablesJavascriptSampling": {
    "message": "Deaktiviert JavaScript-Sampling, reduziert den Overhead bei Ausführung auf mobilen Geräten"
  },
  "panels/timeline/TimelinePanel.ts | downloadAfterError": {
    "message": "Rohdateien für Trace-Ereignis herunterladen"
  },
  "panels/timeline/TimelinePanel.ts | dropTimelineFileOrUrlHere": {
    "message": "Zeitachsendatei oder URL hier ablegen"
  },
  "panels/timeline/TimelinePanel.ts | enableAdvancedPaint": {
    "message": "Erweiterte Paint-Instrumentierung aktivieren (langsam)"
  },
  "panels/timeline/TimelinePanel.ts | failedToSaveTimelineSS": {
    "message": "Zeitachse konnte nicht gespeichert werden: {PH1} ({PH2})"
  },
  "panels/timeline/TimelinePanel.ts | initializingProfiler": {
    "message": "Profiler wird initialisiert…"
  },
  "panels/timeline/TimelinePanel.ts | learnmore": {
    "message": "Weitere Informationen"
  },
  "panels/timeline/TimelinePanel.ts | loadProfile": {
    "message": "Profil laden…"
  },
  "panels/timeline/TimelinePanel.ts | loadingProfile": {
    "message": "Profil wird geladen…"
  },
  "panels/timeline/TimelinePanel.ts | memory": {
    "message": "Arbeitsspeicher"
  },
  "panels/timeline/TimelinePanel.ts | network": {
    "message": "Netzwerk:"
  },
  "panels/timeline/TimelinePanel.ts | networkConditions": {
    "message": "Netzwerkbedingungen"
  },
  "panels/timeline/TimelinePanel.ts | processingProfile": {
    "message": "Profil wird verarbeitet…"
  },
  "panels/timeline/TimelinePanel.ts | profiling": {
    "message": "Profil wird erstellt…"
  },
  "panels/timeline/TimelinePanel.ts | received": {
    "message": "Erhalten"
  },
  "panels/timeline/TimelinePanel.ts | recordingFailed": {
    "message": "Aufnahme fehlgeschlagen"
  },
  "panels/timeline/TimelinePanel.ts | saveProfile": {
    "message": "Profil speichern…"
  },
  "panels/timeline/TimelinePanel.ts | screenshots": {
    "message": "Screenshots"
  },
  "panels/timeline/TimelinePanel.ts | showMemoryTimeline": {
    "message": "Arbeitsspeicher-Zeitachse anzeigen"
  },
  "panels/timeline/TimelinePanel.ts | ssec": {
    "message": "{PH1} Sek."
  },
  "panels/timeline/TimelinePanel.ts | status": {
    "message": "Status"
  },
  "panels/timeline/TimelinePanel.ts | stop": {
    "message": "Stopp"
  },
  "panels/timeline/TimelinePanel.ts | stoppingTimeline": {
    "message": "Zeitachse wird gestoppt…"
  },
  "panels/timeline/TimelinePanel.ts | time": {
    "message": "Zeit"
  },
  "panels/timeline/TimelinePanel.ts | wasd": {
    "message": "WASD"
  },
  "panels/timeline/TimelineTreeView.ts | activity": {
    "message": "Aktivität"
  },
  "panels/timeline/TimelineTreeView.ts | chromeExtensionsOverhead": {
    "message": "[Chrome-Erweiterungen-Overhead]"
  },
  "panels/timeline/TimelineTreeView.ts | filter": {
    "message": "Filtern"
  },
  "panels/timeline/TimelineTreeView.ts | filterBottomup": {
    "message": "Filter (von unten nach oben)"
  },
  "panels/timeline/TimelineTreeView.ts | filterCallTree": {
    "message": "Baumansicht „Aufrufe“ filtern"
  },
  "panels/timeline/TimelineTreeView.ts | fms": {
    "message": "{PH1} ms"
  },
  "panels/timeline/TimelineTreeView.ts | groupBy": {
    "message": "Gruppieren nach"
  },
  "panels/timeline/TimelineTreeView.ts | groupByActivity": {
    "message": "Nach Aktivität gruppieren"
  },
  "panels/timeline/TimelineTreeView.ts | groupByCategory": {
    "message": "Nach Kategorie gruppieren"
  },
  "panels/timeline/TimelineTreeView.ts | groupByDomain": {
    "message": "Nach Domain gruppieren"
  },
  "panels/timeline/TimelineTreeView.ts | groupByFrame": {
    "message": "Nach Frame gruppieren"
  },
  "panels/timeline/TimelineTreeView.ts | groupBySubdomain": {
    "message": "Nach Subdomain gruppieren"
  },
  "panels/timeline/TimelineTreeView.ts | groupByUrl": {
    "message": "Nach URL gruppieren"
  },
  "panels/timeline/TimelineTreeView.ts | heaviestStack": {
    "message": "Umfangreichster Stack"
  },
  "panels/timeline/TimelineTreeView.ts | heaviestStackHidden": {
    "message": "Seitenleiste des umfangreichsten Stacks ist ausgeblendet"
  },
  "panels/timeline/TimelineTreeView.ts | heaviestStackShown": {
    "message": "Seitenleiste des umfangreichsten Stacks ist eingeblendet"
  },
  "panels/timeline/TimelineTreeView.ts | hideHeaviestStack": {
    "message": "Umfangreichsten Stack ausblenden"
  },
  "panels/timeline/TimelineTreeView.ts | matchCase": {
    "message": "Groß-/Kleinschreibung beachten"
  },
  "panels/timeline/TimelineTreeView.ts | matchWholeWord": {
    "message": "Übereinstimmung mit ganzem Wort"
  },
  "panels/timeline/TimelineTreeView.ts | noGrouping": {
    "message": "Keine Gruppierung"
  },
  "panels/timeline/TimelineTreeView.ts | notOptimizedS": {
    "message": "Nicht optimiert: {PH1}"
  },
  "panels/timeline/TimelineTreeView.ts | page": {
    "message": "Seite"
  },
  "panels/timeline/TimelineTreeView.ts | percentPlaceholder": {
    "message": "{PH1} %"
  },
  "panels/timeline/TimelineTreeView.ts | performance": {
    "message": "Leistung"
  },
  "panels/timeline/TimelineTreeView.ts | selectItemForDetails": {
    "message": "Wähle ein Element aus, um weitere Informationen zu erhalten."
  },
  "panels/timeline/TimelineTreeView.ts | selfTime": {
    "message": "Zeit für Einzelaktivität"
  },
  "panels/timeline/TimelineTreeView.ts | showHeaviestStack": {
    "message": "Umfangreichsten Stack anzeigen"
  },
  "panels/timeline/TimelineTreeView.ts | timelineStack": {
    "message": "Zeitachsen-Stack"
  },
  "panels/timeline/TimelineTreeView.ts | totalTime": {
    "message": "Gesamtzeit"
  },
  "panels/timeline/TimelineTreeView.ts | unattributed": {
    "message": "[nicht zugeordnet]"
  },
  "panels/timeline/TimelineTreeView.ts | useRegularExpression": {
    "message": "Regulären Ausdruck verwenden"
  },
  "panels/timeline/TimelineTreeView.ts | vRuntime": {
    "message": "[V8-Laufzeit]"
  },
  "panels/timeline/TimelineUIUtils.ts | FromCache": {
    "message": " (vom Cache)"
  },
  "panels/timeline/TimelineUIUtils.ts | FromMemoryCache": {
    "message": " (aus Arbeitsspeicher-Cache)"
  },
  "panels/timeline/TimelineUIUtils.ts | FromPush": {
    "message": " (von Push)"
  },
  "panels/timeline/TimelineUIUtils.ts | FromServiceWorker": {
    "message": " (von service worker)"
  },
  "panels/timeline/TimelineUIUtils.ts | SSSResourceLoading": {
    "message": " (Laden von {PH1} {PH2} + {PH3} Ressourcen)"
  },
  "panels/timeline/TimelineUIUtils.ts | UnknownNode": {
    "message": "[unbekannter Knoten]"
  },
  "panels/timeline/TimelineUIUtils.ts | aggregatedTime": {
    "message": "Aggregierte Zeit"
  },
  "panels/timeline/TimelineUIUtils.ts | allottedTime": {
    "message": "Zugeteilte Zeit"
  },
  "panels/timeline/TimelineUIUtils.ts | animation": {
    "message": "Animation"
  },
  "panels/timeline/TimelineUIUtils.ts | animationFrameFired": {
    "message": "Animationsframe ausgelöst"
  },
  "panels/timeline/TimelineUIUtils.ts | animationFrameRequested": {
    "message": "Animationsframe angefordert"
  },
  "panels/timeline/TimelineUIUtils.ts | async": {
    "message": "Async"
  },
  "panels/timeline/TimelineUIUtils.ts | asyncTask": {
    "message": "Async-Task"
  },
  "panels/timeline/TimelineUIUtils.ts | cacheModule": {
    "message": "Modulcode im Cache speichern"
  },
  "panels/timeline/TimelineUIUtils.ts | cacheScript": {
    "message": "Scriptcode im Cache speichern"
  },
  "panels/timeline/TimelineUIUtils.ts | cachedWasmModule": {
    "message": "Im Cache gespeichertes Wasm-Modul"
  },
  "panels/timeline/TimelineUIUtils.ts | callStacks": {
    "message": "Aufrufstacks"
  },
  "panels/timeline/TimelineUIUtils.ts | callbackFunction": {
    "message": "Callback-Funktion"
  },
  "panels/timeline/TimelineUIUtils.ts | callbackId": {
    "message": "Callback-ID"
  },
  "panels/timeline/TimelineUIUtils.ts | cancelAnimationFrame": {
    "message": "Animationsframe abbrechen"
  },
  "panels/timeline/TimelineUIUtils.ts | cancelIdleCallback": {
    "message": "Callback bei Inaktivität abbrechen"
  },
  "panels/timeline/TimelineUIUtils.ts | collected": {
    "message": "Gesammelt"
  },
  "panels/timeline/TimelineUIUtils.ts | commit": {
    "message": "Commit"
  },
  "panels/timeline/TimelineUIUtils.ts | compilationCacheKind": {
    "message": "Art des Kompilierungs-Cache"
  },
  "panels/timeline/TimelineUIUtils.ts | compilationCacheSize": {
    "message": "„Compilation Cache“-Größe"
  },
  "panels/timeline/TimelineUIUtils.ts | compilationCacheStatus": {
    "message": "„Compilation Cache“-Status"
  },
  "panels/timeline/TimelineUIUtils.ts | compile": {
    "message": "Kompilieren"
  },
  "panels/timeline/TimelineUIUtils.ts | compileCode": {
    "message": "Code kompilieren"
  },
  "panels/timeline/TimelineUIUtils.ts | compileModule": {
    "message": "Modul kompilieren"
  },
  "panels/timeline/TimelineUIUtils.ts | compileScript": {
    "message": "Script kompilieren"
  },
  "panels/timeline/TimelineUIUtils.ts | compiledWasmModule": {
    "message": "Kompiliertes Wasm-Modul"
  },
  "panels/timeline/TimelineUIUtils.ts | compositeLayers": {
    "message": "Komposit-Ebenen"
  },
  "panels/timeline/TimelineUIUtils.ts | computeIntersections": {
    "message": "Schnittpunkte berechnen"
  },
  "panels/timeline/TimelineUIUtils.ts | consoleTime": {
    "message": "Konsolenzeit"
  },
  "panels/timeline/TimelineUIUtils.ts | consumedCacheSize": {
    "message": "Verbrauchte Cache-Größe"
  },
  "panels/timeline/TimelineUIUtils.ts | createWebsocket": {
    "message": "WebSocket erstellen"
  },
  "panels/timeline/TimelineUIUtils.ts | cumulativeLayoutShifts": {
    "message": "Cumulative Layout Shifts"
  },
  "panels/timeline/TimelineUIUtils.ts | cumulativeScore": {
    "message": "Kumulatives Ergebnis"
  },
  "panels/timeline/TimelineUIUtils.ts | currentClusterId": {
    "message": "Aktuelle Cluster-ID"
  },
  "panels/timeline/TimelineUIUtils.ts | currentClusterScore": {
    "message": "Aktueller Cluster-Wert"
  },
  "panels/timeline/TimelineUIUtils.ts | decodedBody": {
    "message": "Decodierter Body"
  },
  "panels/timeline/TimelineUIUtils.ts | decrypt": {
    "message": "Entschlüsseln"
  },
  "panels/timeline/TimelineUIUtils.ts | decryptReply": {
    "message": "Antwort entschlüsseln"
  },
  "panels/timeline/TimelineUIUtils.ts | deserializeCodeCache": {
    "message": "Code-Cache deserialisieren"
  },
  "panels/timeline/TimelineUIUtils.ts | destroyWebsocket": {
    "message": "WebSocket schließen"
  },
  "panels/timeline/TimelineUIUtils.ts | details": {
    "message": "Details"
  },
  "panels/timeline/TimelineUIUtils.ts | digest": {
    "message": "Benachrichtigung"
  },
  "panels/timeline/TimelineUIUtils.ts | digestReply": {
    "message": "Antwort auf Benachrichtigung"
  },
  "panels/timeline/TimelineUIUtils.ts | dimensions": {
    "message": "Abmessungen"
  },
  "panels/timeline/TimelineUIUtils.ts | domGc": {
    "message": "Speicherbereinigung des DOMs"
  },
  "panels/timeline/TimelineUIUtils.ts | domcontentloadedEvent": {
    "message": "DOMContentLoaded-Ereignis"
  },
  "panels/timeline/TimelineUIUtils.ts | drawFrame": {
    "message": "Frame zeichnen"
  },
  "panels/timeline/TimelineUIUtils.ts | duration": {
    "message": "Dauer"
  },
  "panels/timeline/TimelineUIUtils.ts | eagerCompile": {
    "message": "Alle Funktionen werden immer kompiliert"
  },
  "panels/timeline/TimelineUIUtils.ts | elementsAffected": {
    "message": "Betroffene Elemente"
  },
  "panels/timeline/TimelineUIUtils.ts | embedderCallback": {
    "message": "Embedder-Callback"
  },
  "panels/timeline/TimelineUIUtils.ts | emptyPlaceholder": {
    "message": "{PH1}"
  },
  "panels/timeline/TimelineUIUtils.ts | encodedData": {
    "message": "Codierte Daten"
  },
  "panels/timeline/TimelineUIUtils.ts | encrypt": {
    "message": "Verschlüsseln"
  },
  "panels/timeline/TimelineUIUtils.ts | encryptReply": {
    "message": "Antwort verschlüsseln"
  },
  "panels/timeline/TimelineUIUtils.ts | evaluateModule": {
    "message": "Modul evaluieren"
  },
  "panels/timeline/TimelineUIUtils.ts | evaluateScript": {
    "message": "Script evaluieren"
  },
  "panels/timeline/TimelineUIUtils.ts | event": {
    "message": "Ereignis"
  },
  "panels/timeline/TimelineUIUtils.ts | eventTiming": {
    "message": "Zeitangaben für Ereignis"
  },
  "panels/timeline/TimelineUIUtils.ts | evolvedClsLink": {
    "message": "weiterentwickelt"
  },
  "panels/timeline/TimelineUIUtils.ts | experience": {
    "message": "Erfahrung"
  },
  "panels/timeline/TimelineUIUtils.ts | failedToLoadScriptFromCache": {
    "message": "Fehler beim Laden des Skripts aus dem Cache"
  },
  "panels/timeline/TimelineUIUtils.ts | finishLoading": {
    "message": "Laden beenden"
  },
  "panels/timeline/TimelineUIUtils.ts | fireIdleCallback": {
    "message": "Callback bei Inaktivität auslösen"
  },
  "panels/timeline/TimelineUIUtils.ts | firstContentfulPaint": {
    "message": "First Contentful Paint"
  },
  "panels/timeline/TimelineUIUtils.ts | firstInvalidated": {
    "message": "Zuerst außer Kraft gesetzt"
  },
  "panels/timeline/TimelineUIUtils.ts | firstLayoutInvalidation": {
    "message": "Außerkraftsetzung des ersten Layouts"
  },
  "panels/timeline/TimelineUIUtils.ts | firstPaint": {
    "message": "First Paint"
  },
  "panels/timeline/TimelineUIUtils.ts | frame": {
    "message": "Frame"
  },
  "panels/timeline/TimelineUIUtils.ts | frameStart": {
    "message": "Frame-Start"
  },
  "panels/timeline/TimelineUIUtils.ts | frameStartMainThread": {
    "message": "Frame-Start (Hauptthread)"
  },
  "panels/timeline/TimelineUIUtils.ts | frameStartedLoading": {
    "message": "Laden des Frames gestartet"
  },
  "panels/timeline/TimelineUIUtils.ts | function": {
    "message": "Funktion"
  },
  "panels/timeline/TimelineUIUtils.ts | functionCall": {
    "message": "Funktionsaufruf"
  },
  "panels/timeline/TimelineUIUtils.ts | gcEvent": {
    "message": "Speicherbereinigungs-Ereignis"
  },
  "panels/timeline/TimelineUIUtils.ts | gpu": {
    "message": "GPU"
  },
  "panels/timeline/TimelineUIUtils.ts | hadRecentInput": {
    "message": "Eingabe vor Kurzem erfolgt"
  },
  "panels/timeline/TimelineUIUtils.ts | hitTest": {
    "message": "Trefferprüfung"
  },
  "panels/timeline/TimelineUIUtils.ts | idle": {
    "message": "Inaktiv"
  },
  "panels/timeline/TimelineUIUtils.ts | idleCallbackRequested": {
    "message": "Inaktiver Callback angefordert"
  },
  "panels/timeline/TimelineUIUtils.ts | imageDecode": {
    "message": "Bild-Decodierung"
  },
  "panels/timeline/TimelineUIUtils.ts | imageResize": {
    "message": "Bildgröße anpassen"
  },
  "panels/timeline/TimelineUIUtils.ts | imageUrl": {
    "message": "Bild-URL"
  },
  "panels/timeline/TimelineUIUtils.ts | initialPriority": {
    "message": "Anfängliche Priorität"
  },
  "panels/timeline/TimelineUIUtils.ts | initiator": {
    "message": "Initiator"
  },
  "panels/timeline/TimelineUIUtils.ts | inputDelay": {
    "message": "Eingabeverzögerung"
  },
  "panels/timeline/TimelineUIUtils.ts | installTimer": {
    "message": "Timer installieren"
  },
  "panels/timeline/TimelineUIUtils.ts | interactionID": {
    "message": "ID"
  },
  "panels/timeline/TimelineUIUtils.ts | invalidateLayout": {
    "message": "Layout außer Kraft setzen"
  },
  "panels/timeline/TimelineUIUtils.ts | invalidationWithCallFrame": {
    "message": "{PH1} bei {PH2}"
  },
  "panels/timeline/TimelineUIUtils.ts | invalidations": {
    "message": "Außerkraftsetzungen"
  },
  "panels/timeline/TimelineUIUtils.ts | invokedByTimeout": {
    "message": "Durch Zeitüberschreitung aufgerufen"
  },
  "panels/timeline/TimelineUIUtils.ts | jsFrame": {
    "message": "JS-Frame"
  },
  "panels/timeline/TimelineUIUtils.ts | jsIdleFrame": {
    "message": "Inaktiver JS-Frame"
  },
  "panels/timeline/TimelineUIUtils.ts | jsRoot": {
    "message": "JS-Stammknoten"
  },
  "panels/timeline/TimelineUIUtils.ts | jsSystemFrame": {
    "message": "Frame des JS-Systems"
  },
  "panels/timeline/TimelineUIUtils.ts | largestContentfulPaint": {
    "message": "Largest Contentful Paint"
  },
  "panels/timeline/TimelineUIUtils.ts | layerRoot": {
    "message": "Ebenenstamm"
  },
  "panels/timeline/TimelineUIUtils.ts | layerize": {
    "message": "Ebenenberechnung"
  },
  "panels/timeline/TimelineUIUtils.ts | layout": {
    "message": "Layout"
  },
  "panels/timeline/TimelineUIUtils.ts | layoutForced": {
    "message": "Layout erzwungen"
  },
  "panels/timeline/TimelineUIUtils.ts | layoutRoot": {
    "message": "Layoutstamm"
  },
  "panels/timeline/TimelineUIUtils.ts | layoutShift": {
    "message": "Layout Shift"
  },
  "panels/timeline/TimelineUIUtils.ts | learnMore": {
    "message": "Weitere Informationen"
  },
  "panels/timeline/TimelineUIUtils.ts | loadFromCache": {
    "message": "Aus dem Cache laden"
  },
  "panels/timeline/TimelineUIUtils.ts | loading": {
    "message": "Laden"
  },
  "panels/timeline/TimelineUIUtils.ts | location": {
    "message": "Standort"
  },
  "panels/timeline/TimelineUIUtils.ts | majorGc": {
    "message": "Größere Speicherbereinigung"
  },
  "panels/timeline/TimelineUIUtils.ts | message": {
    "message": "Nachricht"
  },
  "panels/timeline/TimelineUIUtils.ts | mimeType": {
    "message": "MIME-Typ"
  },
  "panels/timeline/TimelineUIUtils.ts | minorGc": {
    "message": "Kleinere Speicherbereinigung"
  },
  "panels/timeline/TimelineUIUtils.ts | module": {
    "message": "Modul"
  },
  "panels/timeline/TimelineUIUtils.ts | movedFrom": {
    "message": "Verschoben von"
  },
  "panels/timeline/TimelineUIUtils.ts | movedTo": {
    "message": "Verschoben nach"
  },
  "panels/timeline/TimelineUIUtils.ts | networkRequest": {
    "message": "Netzwerkanfrage"
  },
  "panels/timeline/TimelineUIUtils.ts | networkTransfer": {
    "message": "Netzwerkübertragung"
  },
  "panels/timeline/TimelineUIUtils.ts | no": {
    "message": "Nein"
  },
  "panels/timeline/TimelineUIUtils.ts | nodesThatNeedLayout": {
    "message": "Knoten, die Layout erfordern"
  },
  "panels/timeline/TimelineUIUtils.ts | onloadEvent": {
    "message": "Onload-Ereignis"
  },
  "panels/timeline/TimelineUIUtils.ts | optimizeCode": {
    "message": "Code optimieren"
  },
  "panels/timeline/TimelineUIUtils.ts | other": {
    "message": "Sonstige"
  },
  "panels/timeline/TimelineUIUtils.ts | ownerElement": {
    "message": "Inhaber-Element"
  },
  "panels/timeline/TimelineUIUtils.ts | paint": {
    "message": "Paint"
  },
  "panels/timeline/TimelineUIUtils.ts | paintImage": {
    "message": "Paint-Bild"
  },
  "panels/timeline/TimelineUIUtils.ts | paintProfiler": {
    "message": "Paint Profiler"
  },
  "panels/timeline/TimelineUIUtils.ts | paintSetup": {
    "message": "Paint-Einrichtung"
  },
  "panels/timeline/TimelineUIUtils.ts | painting": {
    "message": "Zeichnen"
  },
  "panels/timeline/TimelineUIUtils.ts | parse": {
    "message": "Parsen"
  },
  "panels/timeline/TimelineUIUtils.ts | parseAndCompile": {
    "message": "Parsen und kompilieren"
  },
  "panels/timeline/TimelineUIUtils.ts | parseHtml": {
    "message": "HTML parsen"
  },
  "panels/timeline/TimelineUIUtils.ts | parseStylesheet": {
    "message": "Stylesheet parsen"
  },
  "panels/timeline/TimelineUIUtils.ts | pendingFor": {
    "message": "Ausstehend für"
  },
  "panels/timeline/TimelineUIUtils.ts | prePaint": {
    "message": "Pre-Paint"
  },
  "panels/timeline/TimelineUIUtils.ts | presentationDelay": {
    "message": "Verzögerung bei der Präsentation"
  },
  "panels/timeline/TimelineUIUtils.ts | preview": {
    "message": "Vorschau"
  },
  "panels/timeline/TimelineUIUtils.ts | priority": {
    "message": "Priorität"
  },
  "panels/timeline/TimelineUIUtils.ts | processingTime": {
    "message": "Verarbeitungszeit"
  },
  "panels/timeline/TimelineUIUtils.ts | producedCacheSize": {
    "message": "Erstellte Cache-Größe"
  },
  "panels/timeline/TimelineUIUtils.ts | profilingOverhead": {
    "message": "Profiler-Initialisierung"
  },
  "panels/timeline/TimelineUIUtils.ts | range": {
    "message": "Bereich"
  },
  "panels/timeline/TimelineUIUtils.ts | rasterizePaint": {
    "message": "Paint rastern"
  },
  "panels/timeline/TimelineUIUtils.ts | recalculateStyle": {
    "message": "Stil neu berechnen"
  },
  "panels/timeline/TimelineUIUtils.ts | recalculationForced": {
    "message": "Neuberechnung erzwungen"
  },
  "panels/timeline/TimelineUIUtils.ts | receiveData": {
    "message": "Daten empfangen"
  },
  "panels/timeline/TimelineUIUtils.ts | receiveResponse": {
    "message": "Antwort erhalten"
  },
  "panels/timeline/TimelineUIUtils.ts | receiveWebsocketHandshake": {
    "message": "WebSocket-Handshake erhalten"
  },
  "panels/timeline/TimelineUIUtils.ts | relatedNode": {
    "message": "Zugehöriger Knoten"
  },
  "panels/timeline/TimelineUIUtils.ts | removeTimer": {
    "message": "Timer löschen"
  },
  "panels/timeline/TimelineUIUtils.ts | rendering": {
    "message": "Rendering"
  },
  "panels/timeline/TimelineUIUtils.ts | repeats": {
    "message": "Wiederholungen"
  },
  "panels/timeline/TimelineUIUtils.ts | requestAnimationFrame": {
    "message": "Animationsframe anfordern"
  },
  "panels/timeline/TimelineUIUtils.ts | requestIdleCallback": {
    "message": "Callback bei Inaktivität anfordern"
  },
  "panels/timeline/TimelineUIUtils.ts | requestMainThreadFrame": {
    "message": "Hauptthread-Frame anfragen"
  },
  "panels/timeline/TimelineUIUtils.ts | requestMethod": {
    "message": "Anfragemethode"
  },
  "panels/timeline/TimelineUIUtils.ts | reveal": {
    "message": "Anzeigen"
  },
  "panels/timeline/TimelineUIUtils.ts | runMicrotasks": {
    "message": "Microtasks ausführen"
  },
  "panels/timeline/TimelineUIUtils.ts | sAtS": {
    "message": "{PH1} um {PH2}"
  },
  "panels/timeline/TimelineUIUtils.ts | sAtSParentheses": {
    "message": "{PH1} (um {PH2})"
  },
  "panels/timeline/TimelineUIUtils.ts | sCLSInformation": {
    "message": "{PH1} kann zu einer schlechten Nutzererfahrung führen. Sie wurde kürzlich {PH2}."
  },
  "panels/timeline/TimelineUIUtils.ts | sChildren": {
    "message": "{PH1} (untergeordnet)"
  },
  "panels/timeline/TimelineUIUtils.ts | sCollected": {
    "message": "{PH1} erfasst"
  },
  "panels/timeline/TimelineUIUtils.ts | sOfS": {
    "message": "{PH1} von {PH2}"
  },
  "panels/timeline/TimelineUIUtils.ts | sS": {
    "message": "{PH1}: {PH2}"
  },
  "panels/timeline/TimelineUIUtils.ts | sSCurlyBrackets": {
    "message": "({PH1}, {PH2})"
  },
  "panels/timeline/TimelineUIUtils.ts | sSDimensions": {
    "message": "{PH1} × {PH2}"
  },
  "panels/timeline/TimelineUIUtils.ts | sSSquareBrackets": {
    "message": "{PH1} [{PH2}…]"
  },
  "panels/timeline/TimelineUIUtils.ts | sSelf": {
    "message": "{PH1} (einzeln)"
  },
  "panels/timeline/TimelineUIUtils.ts | sSs": {
    "message": "{PH1} [{PH2}…{PH3}]"
  },
  "panels/timeline/TimelineUIUtils.ts | scheduleStyleRecalculation": {
    "message": "Stilneuberechnung planen"
  },
  "panels/timeline/TimelineUIUtils.ts | score": {
    "message": "Ergebnis"
  },
  "panels/timeline/TimelineUIUtils.ts | script": {
    "message": "Script"
  },
  "panels/timeline/TimelineUIUtils.ts | scriptLoadedFromCache": {
    "message": "Aus Cache geladenes Script"
  },
  "panels/timeline/TimelineUIUtils.ts | scriptNotEligible": {
    "message": "Script erfüllt Voraussetzungen nicht"
  },
  "panels/timeline/TimelineUIUtils.ts | scripting": {
    "message": "Scripting"
  },
  "panels/timeline/TimelineUIUtils.ts | scroll": {
    "message": "Scrollen"
  },
  "panels/timeline/TimelineUIUtils.ts | selfTime": {
    "message": "Zeit für Einzelaktivität"
  },
  "panels/timeline/TimelineUIUtils.ts | sendRequest": {
    "message": "Anfrage senden"
  },
  "panels/timeline/TimelineUIUtils.ts | sendWebsocketHandshake": {
    "message": "WebSocket-Handshake senden"
  },
  "panels/timeline/TimelineUIUtils.ts | sign": {
    "message": "Signieren"
  },
  "panels/timeline/TimelineUIUtils.ts | signReply": {
    "message": "Antwort signieren"
  },
  "panels/timeline/TimelineUIUtils.ts | size": {
    "message": "Größe"
  },
  "panels/timeline/TimelineUIUtils.ts | stackTrace": {
    "message": "Stacktrace"
  },
  "panels/timeline/TimelineUIUtils.ts | state": {
    "message": "Status"
  },
  "panels/timeline/TimelineUIUtils.ts | streamed": {
    "message": "Stream beendet"
  },
  "panels/timeline/TimelineUIUtils.ts | streamingCompileTask": {
    "message": "Streaming-Kompiliertask"
  },
  "panels/timeline/TimelineUIUtils.ts | streamingWasmResponse": {
    "message": "Wasm-Antwort streamen"
  },
  "panels/timeline/TimelineUIUtils.ts | stylesheetUrl": {
    "message": "Stylesheet-URL"
  },
  "panels/timeline/TimelineUIUtils.ts | system": {
    "message": "System"
  },
  "panels/timeline/TimelineUIUtils.ts | task": {
    "message": "Task"
  },
  "panels/timeline/TimelineUIUtils.ts | timeSpentInRendering": {
    "message": "Rendering-Zeit"
  },
  "panels/timeline/TimelineUIUtils.ts | timeout": {
    "message": "Zeitlimit"
  },
  "panels/timeline/TimelineUIUtils.ts | timerFired": {
    "message": "Timer ausgelöst"
  },
  "panels/timeline/TimelineUIUtils.ts | timerId": {
    "message": "Timer-ID"
  },
  "panels/timeline/TimelineUIUtils.ts | timerInstalled": {
    "message": "Gesetzter Timer"
  },
  "panels/timeline/TimelineUIUtils.ts | timestamp": {
    "message": "Zeitstempel"
  },
  "panels/timeline/TimelineUIUtils.ts | totalTime": {
    "message": "Gesamtzeit"
  },
  "panels/timeline/TimelineUIUtils.ts | type": {
    "message": "Typ"
  },
  "panels/timeline/TimelineUIUtils.ts | updateLayer": {
    "message": "Ebene aktualisieren"
  },
  "panels/timeline/TimelineUIUtils.ts | updateLayerTree": {
    "message": "Ebenenstruktur aktualisieren"
  },
  "panels/timeline/TimelineUIUtils.ts | url": {
    "message": "URL"
  },
  "panels/timeline/TimelineUIUtils.ts | userTiming": {
    "message": "Nutzertiming"
  },
  "panels/timeline/TimelineUIUtils.ts | verify": {
    "message": "Verifizieren"
  },
  "panels/timeline/TimelineUIUtils.ts | verifyReply": {
    "message": "Antwort verifizieren"
  },
  "panels/timeline/TimelineUIUtils.ts | waitingForNetwork": {
    "message": "Auf Netzwerk warten"
  },
  "panels/timeline/TimelineUIUtils.ts | warning": {
    "message": "Warnung"
  },
  "panels/timeline/TimelineUIUtils.ts | wasmModuleCacheHit": {
    "message": "Cache-Treffer des Wasm-Moduls"
  },
  "panels/timeline/TimelineUIUtils.ts | wasmModuleCacheInvalid": {
    "message": "Cache des Wasm-Moduls ungültig"
  },
  "panels/timeline/TimelineUIUtils.ts | willSendRequest": {
    "message": "Anforderung wird gesendet"
  },
  "panels/timeline/TimelineUIUtils.ts | xhrLoad": {
    "message": "Laden von XHR"
  },
  "panels/timeline/TimelineUIUtils.ts | xhrReadyStateChange": {
    "message": "Änderung des XHR-Attributs „readyState“"
  },
  "panels/timeline/TimelineUIUtils.ts | yes": {
    "message": "Ja"
  },
  "panels/timeline/TimingsTrackAppender.ts | timings": {
    "message": "Zeitplan"
  },
  "panels/timeline/UIDevtoolsUtils.ts | drawFrame": {
    "message": "Frame zeichnen"
  },
  "panels/timeline/UIDevtoolsUtils.ts | drawing": {
    "message": "Zeichnung"
  },
  "panels/timeline/UIDevtoolsUtils.ts | frameStart": {
    "message": "Frame-Start"
  },
  "panels/timeline/UIDevtoolsUtils.ts | idle": {
    "message": "Inaktiv"
  },
  "panels/timeline/UIDevtoolsUtils.ts | layout": {
    "message": "Layout"
  },
  "panels/timeline/UIDevtoolsUtils.ts | painting": {
    "message": "Painting"
  },
  "panels/timeline/UIDevtoolsUtils.ts | rasterizing": {
    "message": "Rasterung"
  },
  "panels/timeline/UIDevtoolsUtils.ts | system": {
    "message": "System"
  },
  "panels/timeline/components/DetailsView.ts | forcedReflow": {
    "message": "Erzwungener dynamischer Umbruch"
  },
  "panels/timeline/components/DetailsView.ts | idleCallbackExecutionExtended": {
    "message": "Ausführung des inaktiven Rückrufs von {PH1} über die Frist hinaus verlängert"
  },
  "panels/timeline/components/DetailsView.ts | longInteractionINP": {
    "message": "Lange Interaktion"
  },
  "panels/timeline/components/DetailsView.ts | longTask": {
    "message": "Task, die lange gedauert hat"
  },
  "panels/timeline/components/DetailsView.ts | sIsALikelyPerformanceBottleneck": {
    "message": "{PH1} ist wahrscheinlich ein Leistungsengpass."
  },
  "panels/timeline/components/DetailsView.ts | sIsLikelyPoorPageResponsiveness": {
    "message": "{PH1} gibt eine schlechte Reaktionsfähigkeit der Seite an."
  },
  "panels/timeline/components/DetailsView.ts | sTookS": {
    "message": "{PH1} nahm {PH2}."
  },
  "panels/timeline/components/DetailsView.ts | websocketProtocol": {
    "message": "WebSocket-Protokoll"
  },
  "panels/timeline/components/InteractionBreakdown.ts | inputDelay": {
    "message": "Eingabeverzögerung"
  },
  "panels/timeline/components/InteractionBreakdown.ts | presentationDelay": {
    "message": "Verzögerung bei der Präsentation"
  },
  "panels/timeline/components/InteractionBreakdown.ts | processingTime": {
    "message": "Verarbeitungszeit"
  },
  "panels/timeline/timeline-meta.ts | hideChromeFrameInLayersView": {
    "message": "chrome-Frame in der Ebenenansicht ausblenden"
  },
  "panels/timeline/timeline-meta.ts | javascriptProfiler": {
    "message": "JavaScript-Profiler"
  },
  "panels/timeline/timeline-meta.ts | loadProfile": {
    "message": "Profil laden…"
  },
  "panels/timeline/timeline-meta.ts | nextFrame": {
    "message": "Nächster Frame"
  },
  "panels/timeline/timeline-meta.ts | nextRecording": {
    "message": "Nächste Aufnahme"
  },
  "panels/timeline/timeline-meta.ts | performance": {
    "message": "Leistung"
  },
  "panels/timeline/timeline-meta.ts | previousFrame": {
    "message": "Vorheriger Frame"
  },
  "panels/timeline/timeline-meta.ts | previousRecording": {
    "message": "Vorherige Aufnahme"
  },
  "panels/timeline/timeline-meta.ts | record": {
    "message": "Aufnehmen"
  },
  "panels/timeline/timeline-meta.ts | saveProfile": {
    "message": "Profil speichern…"
  },
  "panels/timeline/timeline-meta.ts | showJavascriptProfiler": {
    "message": "JavaScript-Profiler anzeigen"
  },
  "panels/timeline/timeline-meta.ts | showPerformance": {
    "message": "Leistung anzeigen"
  },
  "panels/timeline/timeline-meta.ts | showRecentTimelineSessions": {
    "message": "Letzte Zeitachsensitzungen anzeigen"
  },
  "panels/timeline/timeline-meta.ts | startProfilingAndReloadPage": {
    "message": "Profilerstellung starten und Seite aktualisieren"
  },
  "panels/timeline/timeline-meta.ts | startStopRecording": {
    "message": "Aufnahme starten/beenden"
  },
  "panels/timeline/timeline-meta.ts | stop": {
    "message": "Stopp"
  },
  "panels/web_audio/AudioContextContentBuilder.ts | callbackBufferSize": {
    "message": "Callback-Puffergröße"
  },
  "panels/web_audio/AudioContextContentBuilder.ts | callbackInterval": {
    "message": "Rückrufintervall"
  },
  "panels/web_audio/AudioContextContentBuilder.ts | currentTime": {
    "message": "Uhrzeit"
  },
  "panels/web_audio/AudioContextContentBuilder.ts | maxOutputChannels": {
    "message": "Max. Ausgabekanäle"
  },
  "panels/web_audio/AudioContextContentBuilder.ts | renderCapacity": {
    "message": "Renderingkapazität"
  },
  "panels/web_audio/AudioContextContentBuilder.ts | sampleRate": {
    "message": "Abtastrate"
  },
  "panels/web_audio/AudioContextContentBuilder.ts | state": {
    "message": "Status"
  },
  "panels/web_audio/AudioContextSelector.ts | audioContextS": {
    "message": "Audiokontext: {PH1}"
  },
  "panels/web_audio/AudioContextSelector.ts | noRecordings": {
    "message": "(keine Aufnahmen)"
  },
  "panels/web_audio/WebAudioView.ts | openAPageThatUsesWebAudioApiTo": {
    "message": "Öffne eine Seite, die Web Audio API verwendet, um die Überwachung zu starten."
  },
  "panels/web_audio/web_audio-meta.ts | audio": {
    "message": "Audio"
  },
  "panels/web_audio/web_audio-meta.ts | showWebaudio": {
    "message": "WebAudio anzeigen"
  },
  "panels/web_audio/web_audio-meta.ts | webaudio": {
    "message": "WebAudio"
  },
  "panels/webauthn/WebauthnPane.ts | actions": {
    "message": "Aktionen"
  },
  "panels/webauthn/WebauthnPane.ts | active": {
    "message": "Aktiv"
  },
  "panels/webauthn/WebauthnPane.ts | add": {
    "message": "Hinzufügen"
  },
  "panels/webauthn/WebauthnPane.ts | addAuthenticator": {
    "message": "Authenticator hinzufügen"
  },
  "panels/webauthn/WebauthnPane.ts | authenticatorS": {
    "message": "Authenticator {PH1}"
  },
  "panels/webauthn/WebauthnPane.ts | credentials": {
    "message": "Anmeldedaten"
  },
  "panels/webauthn/WebauthnPane.ts | editName": {
    "message": "Namen bearbeiten"
  },
  "panels/webauthn/WebauthnPane.ts | enableVirtualAuthenticator": {
    "message": "Virtuelle Authenticator-Umgebung aktivieren"
  },
  "panels/webauthn/WebauthnPane.ts | enterNewName": {
    "message": "Neuen Namen eingeben"
  },
  "panels/webauthn/WebauthnPane.ts | export": {
    "message": "Exportieren"
  },
  "panels/webauthn/WebauthnPane.ts | id": {
    "message": "ID"
  },
  "panels/webauthn/WebauthnPane.ts | isResident": {
    "message": "Ist resident"
  },
  "panels/webauthn/WebauthnPane.ts | learnMore": {
    "message": "Weitere Informationen"
  },
  "panels/webauthn/WebauthnPane.ts | newAuthenticator": {
    "message": "Neuer Authenticator"
  },
  "panels/webauthn/WebauthnPane.ts | no": {
    "message": "Nein"
  },
  "panels/webauthn/WebauthnPane.ts | noCredentialsTryCallingSFromYour": {
    "message": "Keine Anmeldedaten. Versuche, {PH1} von deiner Website aus aufzurufen."
  },
  "panels/webauthn/WebauthnPane.ts | privateKeypem": {
    "message": "Private key.pem"
  },
  "panels/webauthn/WebauthnPane.ts | protocol": {
    "message": "Protokoll"
  },
  "panels/webauthn/WebauthnPane.ts | remove": {
    "message": "Entfernen"
  },
  "panels/webauthn/WebauthnPane.ts | rpId": {
    "message": "RP-ID"
  },
  "panels/webauthn/WebauthnPane.ts | saveName": {
    "message": "Name speichern"
  },
  "panels/webauthn/WebauthnPane.ts | setSAsTheActiveAuthenticator": {
    "message": "{PH1} als aktiven Authenticator festlegen"
  },
  "panels/webauthn/WebauthnPane.ts | signCount": {
    "message": "Anzahl der Signaturen"
  },
  "panels/webauthn/WebauthnPane.ts | supportsLargeBlob": {
    "message": "Unterstützt große BLOBs"
  },
  "panels/webauthn/WebauthnPane.ts | supportsResidentKeys": {
    "message": "Unterstützt residente Schlüssel"
  },
  "panels/webauthn/WebauthnPane.ts | supportsUserVerification": {
    "message": "Unterstützt Nutzerüberprüfung"
  },
  "panels/webauthn/WebauthnPane.ts | transport": {
    "message": "Transport"
  },
  "panels/webauthn/WebauthnPane.ts | useWebauthnForPhishingresistant": {
    "message": "WebAuthn für phishing-sichere Authentifizierung verwenden"
  },
  "panels/webauthn/WebauthnPane.ts | userHandle": {
    "message": "Nutzer-Handle"
  },
  "panels/webauthn/WebauthnPane.ts | uuid": {
    "message": "UUID"
  },
  "panels/webauthn/WebauthnPane.ts | yes": {
    "message": "Ja"
  },
  "panels/webauthn/webauthn-meta.ts | showWebauthn": {
    "message": "WebAuthn anzeigen"
  },
  "panels/webauthn/webauthn-meta.ts | webauthn": {
    "message": "WebAuthn"
  },
  "ui/components/data_grid/DataGrid.ts | enterToSort": {
    "message": "Spaltensortierungsstatus: {PH1}. Eingabetaste drücken, um den Sortierfilter anzuwenden"
  },
  "ui/components/data_grid/DataGrid.ts | headerOptions": {
    "message": "Headeroptionen"
  },
  "ui/components/data_grid/DataGrid.ts | resetColumns": {
    "message": "Spalten zurücksetzen"
  },
  "ui/components/data_grid/DataGrid.ts | sortAsc": {
    "message": "Aufsteigend"
  },
  "ui/components/data_grid/DataGrid.ts | sortBy": {
    "message": "Sortieren nach"
  },
  "ui/components/data_grid/DataGrid.ts | sortDesc": {
    "message": "Absteigend"
  },
  "ui/components/data_grid/DataGrid.ts | sortNone": {
    "message": "keiner"
  },
  "ui/components/data_grid/DataGridController.ts | sortInAscendingOrder": {
    "message": "Spalte „{PH1}“ in aufsteigender Reihenfolge sortiert"
  },
  "ui/components/data_grid/DataGridController.ts | sortInDescendingOrder": {
    "message": "Spalte „{PH1}“ in absteigender Reihenfolge sortiert"
  },
  "ui/components/data_grid/DataGridController.ts | sortingCanceled": {
    "message": "Sortierung der Spalte „{PH1}“ abgebrochen"
  },
  "ui/components/dialogs/IconDialog.ts | close": {
    "message": "Schließen"
  },
  "ui/components/dialogs/ShortcutDialog.ts | close": {
    "message": "Schließen"
  },
  "ui/components/dialogs/ShortcutDialog.ts | dialogTitle": {
    "message": "Tastenkombinationen"
  },
  "ui/components/dialogs/ShortcutDialog.ts | showShortcutTitle": {
    "message": "Tastenkombinationen anzeigen"
  },
  "ui/components/diff_view/DiffView.ts | SkippingDMatchingLines": {
    "message": "( … Überspringen {PH1} übereinstimmende Zeilen … )"
  },
  "ui/components/diff_view/DiffView.ts | additions": {
    "message": "Hinzufügen:"
  },
  "ui/components/diff_view/DiffView.ts | changesDiffViewer": {
    "message": "Viewer für Änderungen"
  },
  "ui/components/diff_view/DiffView.ts | deletions": {
    "message": "Löschen:"
  },
  "ui/components/issue_counter/IssueCounter.ts | breakingChanges": {
    "message": "{issueCount,plural, =1{# funktionsgefährdende Änderung}other{# funktionsgefährdende Änderungen}}"
  },
  "ui/components/issue_counter/IssueCounter.ts | pageErrors": {
    "message": "{issueCount,plural, =1{# Fehler auf der Seite}other{# Fehler auf der Seite}}"
  },
  "ui/components/issue_counter/IssueCounter.ts | possibleImprovements": {
    "message": "{issueCount,plural, =1{# mögliche Verbesserung}other{# mögliche Verbesserungen}}"
  },
  "ui/components/issue_counter/IssueLinkIcon.ts | clickToShowIssue": {
    "message": "Klicken, um Problem im Tab „Probleme“ anzuzeigen"
  },
  "ui/components/issue_counter/IssueLinkIcon.ts | clickToShowIssueWithTitle": {
    "message": "Klicken, um den Tab „Probleme“ zu öffnen und Problem „{title}“ anzeigen zu lassen"
  },
  "ui/components/issue_counter/IssueLinkIcon.ts | issueUnavailable": {
    "message": "Problem derzeit nicht verfügbar"
  },
  "ui/components/markdown_view/CodeBlock.ts | copied": {
    "message": "In Zwischenablage kopiert"
  },
  "ui/components/markdown_view/CodeBlock.ts | copy": {
    "message": "Code kopieren"
  },
  "ui/components/panel_feedback/FeedbackButton.ts | feedback": {
    "message": "Feedback"
  },
  "ui/components/panel_feedback/PanelFeedback.ts | previewFeature": {
    "message": "Funktion in der Vorabversion"
  },
  "ui/components/panel_feedback/PanelFeedback.ts | previewText": {
    "message": "Unser Team arbeitet fortlaufend an dieser Funktion und wir würden uns sehr über dein Feedback freuen."
  },
  "ui/components/panel_feedback/PanelFeedback.ts | previewTextFeedbackLink": {
    "message": "Sende uns dein Feedback."
  },
  "ui/components/panel_feedback/PanelFeedback.ts | videoAndDocumentation": {
    "message": "Video und Dokumentation"
  },
  "ui/components/panel_feedback/PreviewToggle.ts | learnMoreLink": {
    "message": "Weitere Informationen"
  },
  "ui/components/panel_feedback/PreviewToggle.ts | previewTextFeedbackLink": {
    "message": "Sende uns dein Feedback."
  },
  "ui/components/panel_feedback/PreviewToggle.ts | shortFeedbackLink": {
    "message": "Feedback geben"
  },
  "ui/components/request_link_icon/RequestLinkIcon.ts | clickToShowRequestInTheNetwork": {
    "message": "Klicken, um den Netzwerkbereich zu öffnen und die Anfrage für die folgende URL anzuzeigen: {url}"
  },
  "ui/components/request_link_icon/RequestLinkIcon.ts | requestUnavailableInTheNetwork": {
    "message": "Anforderung im Netzwerk-Steuerfeld nicht verfügbar; versuche es, die geprüfte Seite zu aktualisieren"
  },
  "ui/components/request_link_icon/RequestLinkIcon.ts | shortenedURL": {
    "message": "Gekürzte URL"
  },
  "ui/components/survey_link/SurveyLink.ts | anErrorOccurredWithTheSurvey": {
    "message": "Bei der Umfrage ist ein Fehler aufgetreten"
  },
  "ui/components/survey_link/SurveyLink.ts | openingSurvey": {
    "message": "Umfrage öffnen…"
  },
  "ui/components/survey_link/SurveyLink.ts | thankYouForYourFeedback": {
    "message": "Vielen Dank für das Feedback"
  },
  "ui/components/text_editor/config.ts | codeEditor": {
    "message": "Codeeditor"
  },
  "ui/components/text_editor/config.ts | sSuggestionSOfS": {
    "message": "{PH1}, Vorschlag {PH2} von {PH3}"
  },
  "ui/legacy/ActionRegistration.ts | background_services": {
    "message": "Hintergrunddienste"
  },
  "ui/legacy/ActionRegistration.ts | changes": {
    "message": "Änderungen"
  },
  "ui/legacy/ActionRegistration.ts | console": {
    "message": "Konsole"
  },
  "ui/legacy/ActionRegistration.ts | debugger": {
    "message": "Debugger"
  },
  "ui/legacy/ActionRegistration.ts | drawer": {
    "message": "Leiste"
  },
  "ui/legacy/ActionRegistration.ts | elements": {
    "message": "Elemente"
  },
  "ui/legacy/ActionRegistration.ts | global": {
    "message": "Global"
  },
  "ui/legacy/ActionRegistration.ts | help": {
    "message": "Hilfe"
  },
  "ui/legacy/ActionRegistration.ts | javascript_profiler": {
    "message": "JavaScript-Profiler"
  },
  "ui/legacy/ActionRegistration.ts | layers": {
    "message": "Ebenen"
  },
  "ui/legacy/ActionRegistration.ts | memory": {
    "message": "Arbeitsspeicher"
  },
  "ui/legacy/ActionRegistration.ts | mobile": {
    "message": "Mobilgerät"
  },
  "ui/legacy/ActionRegistration.ts | navigation": {
    "message": "Navigation"
  },
  "ui/legacy/ActionRegistration.ts | network": {
    "message": "Netzwerk"
  },
  "ui/legacy/ActionRegistration.ts | performance": {
    "message": "Leistung"
  },
  "ui/legacy/ActionRegistration.ts | recorder": {
    "message": "Rekorder"
  },
  "ui/legacy/ActionRegistration.ts | rendering": {
    "message": "Rendering"
  },
  "ui/legacy/ActionRegistration.ts | resources": {
    "message": "Ressourcen"
  },
  "ui/legacy/ActionRegistration.ts | screenshot": {
    "message": "Screenshot"
  },
  "ui/legacy/ActionRegistration.ts | settings": {
    "message": "Einstellungen"
  },
  "ui/legacy/ActionRegistration.ts | sources": {
    "message": "Quellen"
  },
  "ui/legacy/DockController.ts | close": {
    "message": "Schließen"
  },
  "ui/legacy/DockController.ts | devToolsDockedTo": {
    "message": "Entwicklertools {PH1} fixiert"
  },
  "ui/legacy/DockController.ts | devtoolsUndocked": {
    "message": "Fixieren der Entwicklertools rückgängig gemacht"
  },
  "ui/legacy/DockController.ts | dockToBottom": {
    "message": "Unten fixieren"
  },
  "ui/legacy/DockController.ts | dockToLeft": {
    "message": "Links fixieren"
  },
  "ui/legacy/DockController.ts | dockToRight": {
    "message": "Rechts fixieren"
  },
  "ui/legacy/DockController.ts | undockIntoSeparateWindow": {
    "message": "In separatem Fenster anzeigen"
  },
  "ui/legacy/EmptyWidget.ts | learnMore": {
    "message": "Weitere Informationen"
  },
  "ui/legacy/FilterBar.ts | allStrings": {
    "message": "Alles"
  },
  "ui/legacy/FilterBar.ts | clearFilter": {
    "message": "Eingabe löschen"
  },
  "ui/legacy/FilterBar.ts | egSmalldUrlacomb": {
    "message": "Beispiel: /small[d]+/ url:a.com/b"
  },
  "ui/legacy/FilterBar.ts | filter": {
    "message": "Filtern"
  },
  "ui/legacy/FilterBar.ts | sclickToSelectMultipleTypes": {
    "message": "{PH1}Klicken, um mehrere Typen anzuzeigen"
  },
  "ui/legacy/Infobar.ts | close": {
    "message": "Schließen"
  },
  "ui/legacy/Infobar.ts | dontShowAgain": {
    "message": "Nicht mehr anzeigen"
  },
  "ui/legacy/Infobar.ts | showMore": {
    "message": "Mehr anzeigen"
  },
  "ui/legacy/InspectorView.ts | closeDrawer": {
    "message": "Leiste schließen"
  },
  "ui/legacy/InspectorView.ts | devToolsLanguageMissmatch": {
    "message": "DevTools ist jetzt auf {PH1} verfügbar."
  },
  "ui/legacy/InspectorView.ts | drawer": {
    "message": "Toolleiste"
  },
  "ui/legacy/InspectorView.ts | drawerHidden": {
    "message": "Leiste ausgeblendet"
  },
  "ui/legacy/InspectorView.ts | drawerShown": {
    "message": "Leiste eingeblendet"
  },
  "ui/legacy/InspectorView.ts | mainToolbar": {
    "message": "Hauptsymbolleiste"
  },
  "ui/legacy/InspectorView.ts | moreTools": {
    "message": "Weitere Tools"
  },
  "ui/legacy/InspectorView.ts | moveToBottom": {
    "message": "Ganz nach unten verschieben"
  },
  "ui/legacy/InspectorView.ts | moveToTop": {
    "message": "Ganz nach oben verschieben"
  },
  "ui/legacy/InspectorView.ts | panels": {
    "message": "Bereiche"
  },
  "ui/legacy/InspectorView.ts | reloadDevtools": {
    "message": "Entwicklertools neu laden"
  },
  "ui/legacy/InspectorView.ts | selectFolder": {
    "message": "Ordner auswählen"
  },
  "ui/legacy/InspectorView.ts | selectOverrideFolder": {
    "message": "Wähle einen Ordner aus, in dem überschriebene Dateien gespeichert werden sollen."
  },
  "ui/legacy/InspectorView.ts | setToBrowserLanguage": {
    "message": "Immer der Sprache von Chrome anpassen"
  },
  "ui/legacy/InspectorView.ts | setToSpecificLanguage": {
    "message": "DevTools auf {PH1} umstellen"
  },
  "ui/legacy/ListWidget.ts | addString": {
    "message": "Hinzufügen"
  },
  "ui/legacy/ListWidget.ts | cancelString": {
    "message": "Abbrechen"
  },
  "ui/legacy/ListWidget.ts | changesSaved": {
    "message": "Änderungen am Element wurden gespeichert"
  },
  "ui/legacy/ListWidget.ts | editString": {
    "message": "Bearbeiten"
  },
  "ui/legacy/ListWidget.ts | removeString": {
    "message": "Entfernen"
  },
  "ui/legacy/ListWidget.ts | removedItem": {
    "message": "Element wurde entfernt"
  },
  "ui/legacy/ListWidget.ts | saveString": {
    "message": "Speichern"
  },
  "ui/legacy/RemoteDebuggingTerminatedScreen.ts | debuggingConnectionWasClosed": {
    "message": "Debugging-Verbindung wurde geschlossen. Grund: "
  },
  "ui/legacy/RemoteDebuggingTerminatedScreen.ts | reconnectDevtools": {
    "message": "DevTools wieder verbinden"
  },
  "ui/legacy/RemoteDebuggingTerminatedScreen.ts | reconnectWhenReadyByReopening": {
    "message": "Nach Abschluss Verbindung durch erneutes Öffnen der Entwicklertools wiederherstellen"
  },
  "ui/legacy/SearchableView.ts | cancel": {
    "message": "Abbrechen"
  },
  "ui/legacy/SearchableView.ts | dMatches": {
    "message": "{PH1} Übereinstimmungen"
  },
  "ui/legacy/SearchableView.ts | dOfD": {
    "message": "{PH1} von {PH2}"
  },
  "ui/legacy/SearchableView.ts | findString": {
    "message": "Suchen"
  },
  "ui/legacy/SearchableView.ts | matchCase": {
    "message": "Groß-/Kleinschreibung"
  },
  "ui/legacy/SearchableView.ts | matchString": {
    "message": "1 Treffer"
  },
  "ui/legacy/SearchableView.ts | replace": {
    "message": "Ersetzen"
  },
  "ui/legacy/SearchableView.ts | replaceAll": {
    "message": "Alle ersetzen"
  },
  "ui/legacy/SearchableView.ts | searchNext": {
    "message": "Nächste durchsuchen"
  },
  "ui/legacy/SearchableView.ts | searchPrevious": {
    "message": "Vorherige durchsuchen"
  },
  "ui/legacy/SearchableView.ts | useRegularExpression": {
    "message": "Regulären Ausdruck verwenden"
  },
  "ui/legacy/SettingsUI.ts | oneOrMoreSettingsHaveChanged": {
    "message": "Eine oder mehr Einstellungen wurden geändert. Zur Umsetzung der Änderungen ist eine Aktualisierung erforderlich."
  },
  "ui/legacy/SettingsUI.ts | srequiresReload": {
    "message": "* Aktualisierung erforderlich"
  },
  "ui/legacy/SoftContextMenu.ts | checked": {
    "message": "aktiviert"
  },
  "ui/legacy/SoftContextMenu.ts | sS": {
    "message": "{PH1}, {PH2}"
  },
  "ui/legacy/SoftContextMenu.ts | sSS": {
    "message": "{PH1}, {PH2}, {PH3}"
  },
  "ui/legacy/SoftContextMenu.ts | unchecked": {
    "message": "nicht ausgewählt"
  },
  "ui/legacy/SoftDropDown.ts | noItemSelected": {
    "message": "(kein Element ausgewählt)"
  },
  "ui/legacy/SuggestBox.ts | sSuggestionSOfS": {
    "message": "{PH1}, Vorschlag {PH2} von {PH3}"
  },
  "ui/legacy/SuggestBox.ts | sSuggestionSSelected": {
    "message": "{PH1}, Vorschlag ausgewählt"
  },
  "ui/legacy/TabbedPane.ts | close": {
    "message": "Schließen"
  },
  "ui/legacy/TabbedPane.ts | closeAll": {
    "message": "Alle schließen"
  },
  "ui/legacy/TabbedPane.ts | closeOthers": {
    "message": "Andere schließen"
  },
  "ui/legacy/TabbedPane.ts | closeS": {
    "message": "{PH1} schließen"
  },
  "ui/legacy/TabbedPane.ts | closeTabsToTheRight": {
    "message": "Tabs rechts schließen"
  },
  "ui/legacy/TabbedPane.ts | moreTabs": {
    "message": "Mehr Tabs"
  },
  "ui/legacy/TabbedPane.ts | previewFeature": {
    "message": "Funktion in der Vorabversion"
  },
  "ui/legacy/TargetCrashedScreen.ts | devtoolsWasDisconnectedFromThe": {
    "message": "Die Verbindung zwischen Entwicklertools und der Seite wurde getrennt."
  },
  "ui/legacy/TargetCrashedScreen.ts | oncePageIsReloadedDevtoolsWill": {
    "message": "Sobald die Seite neu geladen ist, verbinden sich die Entwicklertools automatisch wieder."
  },
  "ui/legacy/Toolbar.ts | clearInput": {
    "message": "Eingabe löschen"
  },
  "ui/legacy/Toolbar.ts | notPressed": {
    "message": "Nicht gedrückt"
  },
  "ui/legacy/Toolbar.ts | pressed": {
    "message": "Gedrückt"
  },
  "ui/legacy/UIUtils.ts | anonymous": {
    "message": "(anonym)"
  },
  "ui/legacy/UIUtils.ts | anotherProfilerIsAlreadyActive": {
    "message": "Es ist bereits ein anderer Profiler aktiv"
  },
  "ui/legacy/UIUtils.ts | asyncCall": {
    "message": "Async-Aufruf"
  },
  "ui/legacy/UIUtils.ts | cancel": {
    "message": "Abbrechen"
  },
  "ui/legacy/UIUtils.ts | close": {
    "message": "Schließen"
  },
  "ui/legacy/UIUtils.ts | copyFileName": {
    "message": "Dateinamen kopieren"
  },
  "ui/legacy/UIUtils.ts | copyLinkAddress": {
    "message": "Linkadresse kopieren"
  },
  "ui/legacy/UIUtils.ts | ok": {
    "message": "OK"
  },
  "ui/legacy/UIUtils.ts | openInNewTab": {
    "message": "In neuem Tab öffnen"
  },
  "ui/legacy/UIUtils.ts | promiseRejectedAsync": {
    "message": "Versprechen abgelehnt (async)"
  },
  "ui/legacy/UIUtils.ts | promiseResolvedAsync": {
    "message": "Versprechen aufgelöst (Async)"
  },
  "ui/legacy/UIUtils.ts | sAsync": {
    "message": "{PH1} (async)"
  },
  "ui/legacy/ViewManager.ts | sPanel": {
    "message": "Steuerfeld „{PH1}“"
  },
  "ui/legacy/ViewRegistration.ts | drawer": {
    "message": "Leiste"
  },
  "ui/legacy/ViewRegistration.ts | drawer_sidebar": {
    "message": "Seitenleiste der Leiste"
  },
  "ui/legacy/ViewRegistration.ts | elements": {
    "message": "Elemente"
  },
  "ui/legacy/ViewRegistration.ts | network": {
    "message": "Netzwerk"
  },
  "ui/legacy/ViewRegistration.ts | panel": {
    "message": "Steuerfeld"
  },
  "ui/legacy/ViewRegistration.ts | settings": {
    "message": "Einstellungen"
  },
  "ui/legacy/ViewRegistration.ts | sources": {
    "message": "Quellen"
  },
  "ui/legacy/components/color_picker/ContrastDetails.ts | aa": {
    "message": "AA"
  },
  "ui/legacy/components/color_picker/ContrastDetails.ts | aaa": {
    "message": "AAA"
  },
  "ui/legacy/components/color_picker/ContrastDetails.ts | apca": {
    "message": "APCA"
  },
  "ui/legacy/components/color_picker/ContrastDetails.ts | contrastRatio": {
    "message": "Kontrastverhältnis"
  },
  "ui/legacy/components/color_picker/ContrastDetails.ts | noContrastInformationAvailable": {
    "message": "Keine Informationen zu Kontrasten verfügbar"
  },
  "ui/legacy/components/color_picker/ContrastDetails.ts | pickBackgroundColor": {
    "message": "Hintergrundfarbe auswählen"
  },
  "ui/legacy/components/color_picker/ContrastDetails.ts | placeholderWithColon": {
    "message": ": {PH1}"
  },
  "ui/legacy/components/color_picker/ContrastDetails.ts | showLess": {
    "message": "Weniger anzeigen"
  },
  "ui/legacy/components/color_picker/ContrastDetails.ts | showMore": {
    "message": "Mehr anzeigen"
  },
  "ui/legacy/components/color_picker/ContrastDetails.ts | toggleBackgroundColorPicker": {
    "message": "Hintergrund-Farbauswahl wechseln"
  },
  "ui/legacy/components/color_picker/ContrastDetails.ts | useSuggestedColorStoFixLow": {
    "message": "Vorgeschlagene Farbe {PH1} verwenden, um schwachen Kontrast zu beheben"
  },
  "ui/legacy/components/color_picker/FormatPickerContextMenu.ts | colorClippedTooltipText": {
    "message": "Diese Farbe wurde entsprechend der Farbskala des Formats abgeschnitten. Das tatsächliche Ergebnis war {PH1}."
  },
  "ui/legacy/components/color_picker/Spectrum.ts | addToPalette": {
    "message": "Zur Palette hinzufügen"
  },
  "ui/legacy/components/color_picker/Spectrum.ts | changeAlpha": {
    "message": "Alpha ändern"
  },
  "ui/legacy/components/color_picker/Spectrum.ts | changeColorFormat": {
    "message": "Farbformat ändern"
  },
  "ui/legacy/components/color_picker/Spectrum.ts | changeHue": {
    "message": "Farbton ändern"
  },
  "ui/legacy/components/color_picker/Spectrum.ts | clearPalette": {
    "message": "Palette löschen"
  },
  "ui/legacy/components/color_picker/Spectrum.ts | colorPalettes": {
    "message": "Farbvorlagen"
  },
  "ui/legacy/components/color_picker/Spectrum.ts | colorS": {
    "message": "Farbe {PH1}"
  },
  "ui/legacy/components/color_picker/Spectrum.ts | copyColorToClipboard": {
    "message": "Farbe in Zwischenablage kopieren"
  },
  "ui/legacy/components/color_picker/Spectrum.ts | hex": {
    "message": "HEX"
  },
  "ui/legacy/components/color_picker/Spectrum.ts | longclickOrLongpressSpaceToShow": {
    "message": "Langer Klick oder langes Drücken der Leertaste, um alternative Schattierungen von {PH1} anzuzeigen"
  },
  "ui/legacy/components/color_picker/Spectrum.ts | pressArrowKeysMessage": {
    "message": "Drücke die Pfeiltasten mit oder ohne Modifikator, um die Position von Swatch zu ändern. Eine Pfeiltaste zusammen mit der Umschalttaste verändert die Position stark, mit der Strg-Taste ist es etwas weniger und mit der Alt-Taste noch etwas weniger"
  },
  "ui/legacy/components/color_picker/Spectrum.ts | previewPalettes": {
    "message": "Palettenvorschau"
  },
  "ui/legacy/components/color_picker/Spectrum.ts | removeAllToTheRight": {
    "message": "Rechts alles entfernen"
  },
  "ui/legacy/components/color_picker/Spectrum.ts | removeColor": {
    "message": "Farbe entfernen"
  },
  "ui/legacy/components/color_picker/Spectrum.ts | returnToColorPicker": {
    "message": "Zur Farbauswahl zurück"
  },
  "ui/legacy/components/color_picker/Spectrum.ts | sInS": {
    "message": "{PH1} in {PH2}"
  },
  "ui/legacy/components/color_picker/Spectrum.ts | toggleColorPicker": {
    "message": "Pipette [{PH1}]"
  },
  "ui/legacy/components/cookie_table/CookiesTable.ts | cookies": {
    "message": "Cookies"
  },
  "ui/legacy/components/cookie_table/CookiesTable.ts | editableCookies": {
    "message": "Bearbeitbare Cookies"
  },
  "ui/legacy/components/cookie_table/CookiesTable.ts | na": {
    "message": "–"
  },
  "ui/legacy/components/cookie_table/CookiesTable.ts | name": {
    "message": "Name"
  },
  "ui/legacy/components/cookie_table/CookiesTable.ts | opaquePartitionKey": {
    "message": "(opak)"
  },
  "ui/legacy/components/cookie_table/CookiesTable.ts | session": {
    "message": "Sitzung"
  },
  "ui/legacy/components/cookie_table/CookiesTable.ts | showIssueAssociatedWithThis": {
    "message": "Mit diesem Cookie zusammenhängende Probleme anzeigen"
  },
  "ui/legacy/components/cookie_table/CookiesTable.ts | showRequestsWithThisCookie": {
    "message": "Anfragen mit diesem Cookie anzeigen"
  },
  "ui/legacy/components/cookie_table/CookiesTable.ts | size": {
    "message": "Größe"
  },
  "ui/legacy/components/cookie_table/CookiesTable.ts | sourcePortTooltip": {
    "message": "Zeigt den Quellport (Bereich 1–65535) an, auf den das Cookie gesetzt wurde. Wenn der Port unbekannt ist, wird hier -1 angezeigt."
  },
  "ui/legacy/components/cookie_table/CookiesTable.ts | sourceSchemeTooltip": {
    "message": "Zeigt das Quellschema (Secure, NonSecure) an, auf das das Cookie gesetzt wurde. Wenn das Schema unbekannt ist, wird hier Unset angezeigt."
  },
  "ui/legacy/components/cookie_table/CookiesTable.ts | timeAfter": {
    "message": "nach dem {date}"
  },
  "ui/legacy/components/cookie_table/CookiesTable.ts | timeAfterTooltip": {
    "message": "Der Ablaufzeitstempel ist {seconds} und entspricht einem Datum nach dem {date}"
  },
  "ui/legacy/components/cookie_table/CookiesTable.ts | value": {
    "message": "Wert"
  },
  "ui/legacy/components/data_grid/DataGrid.ts | addNew": {
    "message": "Neue hinzufügen"
  },
  "ui/legacy/components/data_grid/DataGrid.ts | checked": {
    "message": "aktiviert"
  },
  "ui/legacy/components/data_grid/DataGrid.ts | collapsed": {
    "message": "Minimiert"
  },
  "ui/legacy/components/data_grid/DataGrid.ts | delete": {
    "message": "Löschen"
  },
  "ui/legacy/components/data_grid/DataGrid.ts | editS": {
    "message": "„{PH1}“ bearbeiten"
  },
  "ui/legacy/components/data_grid/DataGrid.ts | emptyRowCreated": {
    "message": "Eine leere Tabellenzeile wurde erstellt. Du kannst doppelklicken oder das Kontextmenü verwenden, um die Zeile zu bearbeiten."
  },
  "ui/legacy/components/data_grid/DataGrid.ts | expanded": {
    "message": "Maximiert"
  },
  "ui/legacy/components/data_grid/DataGrid.ts | headerOptions": {
    "message": "Headeroptionen"
  },
  "ui/legacy/components/data_grid/DataGrid.ts | levelS": {
    "message": "Ebene {PH1}"
  },
  "ui/legacy/components/data_grid/DataGrid.ts | refresh": {
    "message": "Aktualisieren"
  },
  "ui/legacy/components/data_grid/DataGrid.ts | resetColumns": {
    "message": "Spalten zurücksetzen"
  },
  "ui/legacy/components/data_grid/DataGrid.ts | rowsS": {
    "message": "Zeilen: {PH1}"
  },
  "ui/legacy/components/data_grid/DataGrid.ts | sRowS": {
    "message": "{PH1} Zeile {PH2}"
  },
  "ui/legacy/components/data_grid/DataGrid.ts | sSUseTheUpAndDownArrowKeysTo": {
    "message": "{PH1} {PH2}, verwende die Nach-unten- und Nach-oben-Tasten, um in den Zeilen der Tabelle zu navigieren und mit ihnen zu interagieren. Im Durchsuchen-Modus kannst du Zelle für Zelle lesen."
  },
  "ui/legacy/components/data_grid/DataGrid.ts | sortByString": {
    "message": "Sortieren nach"
  },
  "ui/legacy/components/data_grid/ShowMoreDataGridNode.ts | showAllD": {
    "message": "Alle {PH1} anzeigen"
  },
  "ui/legacy/components/data_grid/ShowMoreDataGridNode.ts | showDAfter": {
    "message": "{PH1} danach anzeigen"
  },
  "ui/legacy/components/data_grid/ShowMoreDataGridNode.ts | showDBefore": {
    "message": "{PH1} anzeigen vor"
  },
  "ui/legacy/components/inline_editor/CSSShadowEditor.ts | blur": {
    "message": "Weichzeichnung"
  },
  "ui/legacy/components/inline_editor/CSSShadowEditor.ts | spread": {
    "message": "Auseinanderziehen"
  },
  "ui/legacy/components/inline_editor/CSSShadowEditor.ts | type": {
    "message": "Typ"
  },
  "ui/legacy/components/inline_editor/CSSShadowEditor.ts | xOffset": {
    "message": "X Offset"
  },
  "ui/legacy/components/inline_editor/CSSShadowEditor.ts | yOffset": {
    "message": "Y Offset"
  },
  "ui/legacy/components/inline_editor/ColorSwatch.ts | shiftclickToChangeColorFormat": {
    "message": "Klicke bei gedrückter Umschalttaste, um das Farbformat zu ändern"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | PleaseEnterAValidValueForSText": {
    "message": "*Gib einen gültigen Wert für die {PH1}-Texteingabe ein"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | cssProperties": {
    "message": "CSS-Properties"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | deleteS": {
    "message": "{PH1} löschen"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | fallbackS": {
    "message": "Fallback: {PH1}"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | fontFamily": {
    "message": "Schriftfamilie"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | fontSelectorDeletedAtIndexS": {
    "message": "Schriftauswahl gelöscht bei Index: {PH1}"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | fontSize": {
    "message": "Schriftgröße"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | fontWeight": {
    "message": "Schriftbreite"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | lineHeight": {
    "message": "Zeilenhöhe"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | sKeyValueSelector": {
    "message": "{PH1} Schlüsselwert-Selektor"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | sSliderInput": {
    "message": "{PH1} Schieberegelereingabe"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | sTextInput": {
    "message": "{PH1}-Texteingabe"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | sToggleInputType": {
    "message": "Eingabetyp für {PH1} umschalten"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | sUnitInput": {
    "message": "{PH1} Eingabe-Einheiten"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | selectorInputMode": {
    "message": "Selector-Eingabemodus"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | sliderInputMode": {
    "message": "Schieberegler-Eingabemodus"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | spacing": {
    "message": "Abstand"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | thereIsNoValueToDeleteAtIndexS": {
    "message": "Kein Wert zum Löschen vorhanden bei Index: {PH1}"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | thisPropertyIsSetToContainUnits": {
    "message": "Diese Property muss Einheiten enthalten, hat jedoch kein entsprechendes definiertes unitsArray: {PH1}"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | units": {
    "message": "Einheiten"
  },
  "ui/legacy/components/inline_editor/LinkSwatch.ts | sIsNotDefined": {
    "message": "{PH1} ist nicht definiert"
  },
  "ui/legacy/components/object_ui/CustomPreviewComponent.ts | showAsJavascriptObject": {
    "message": "Als JavaScript-Objekt anzeigen"
  },
  "ui/legacy/components/object_ui/ObjectPropertiesSection.ts | collapseChildren": {
    "message": "Untergeordnete Elemente minimieren"
  },
  "ui/legacy/components/object_ui/ObjectPropertiesSection.ts | copy": {
    "message": "Kopieren"
  },
  "ui/legacy/components/object_ui/ObjectPropertiesSection.ts | copyPropertyPath": {
    "message": "Property-Pfad kopieren"
  },
  "ui/legacy/components/object_ui/ObjectPropertiesSection.ts | copyValue": {
    "message": "Wert kopieren"
  },
  "ui/legacy/components/object_ui/ObjectPropertiesSection.ts | dots": {
    "message": "(...)"
  },
  "ui/legacy/components/object_ui/ObjectPropertiesSection.ts | exceptionS": {
    "message": "[Ausnahme: {PH1}]"
  },
  "ui/legacy/components/object_ui/ObjectPropertiesSection.ts | expandRecursively": {
    "message": "Wiederkehrend maximieren"
  },
  "ui/legacy/components/object_ui/ObjectPropertiesSection.ts | invokePropertyGetter": {
    "message": "Property Getter aufrufen"
  },
  "ui/legacy/components/object_ui/ObjectPropertiesSection.ts | longTextWasTruncatedS": {
    "message": "Langer Text wurde abgeschnitten ({PH1})"
  },
  "ui/legacy/components/object_ui/ObjectPropertiesSection.ts | noProperties": {
    "message": "Keine Properties"
  },
  "ui/legacy/components/object_ui/ObjectPropertiesSection.ts | revealInMemoryInpector": {
    "message": "Im Bereich „Arbeitsspeicher-Prüftool“ anzeigen"
  },
  "ui/legacy/components/object_ui/ObjectPropertiesSection.ts | showAllD": {
    "message": "Alle {PH1} anzeigen"
  },
  "ui/legacy/components/object_ui/ObjectPropertiesSection.ts | showMoreS": {
    "message": "Mehr anzeigen ({PH1})"
  },
  "ui/legacy/components/object_ui/ObjectPropertiesSection.ts | stringIsTooLargeToEdit": {
    "message": "<String ist zu groß zum Bearbeiten>"
  },
  "ui/legacy/components/object_ui/ObjectPropertiesSection.ts | unknown": {
    "message": "Unbekannt"
  },
  "ui/legacy/components/object_ui/ObjectPropertiesSection.ts | valueNotAccessibleToTheDebugger": {
    "message": "Debugger kann nicht auf den Wert zugreifen"
  },
  "ui/legacy/components/object_ui/ObjectPropertiesSection.ts | valueUnavailable": {
    "message": "<Wert nicht verfügbar>"
  },
  "ui/legacy/components/object_ui/RemoteObjectPreviewFormatter.ts | empty": {
    "message": "leer"
  },
  "ui/legacy/components/object_ui/RemoteObjectPreviewFormatter.ts | emptyD": {
    "message": "leer × {PH1}"
  },
  "ui/legacy/components/object_ui/RemoteObjectPreviewFormatter.ts | thePropertyIsComputedWithAGetter": {
    "message": "Die Property wird mit einem Getter berechnet"
  },
  "ui/legacy/components/perf_ui/FilmStripView.ts | doubleclickToZoomImageClickTo": {
    "message": "Doppelklicken, um das Bild zu zoomen. Klicken, um vorige Anfragen anzuzeigen."
  },
  "ui/legacy/components/perf_ui/FilmStripView.ts | nextFrame": {
    "message": "Nächster Frame"
  },
  "ui/legacy/components/perf_ui/FilmStripView.ts | previousFrame": {
    "message": "Vorheriger Frame"
  },
  "ui/legacy/components/perf_ui/FilmStripView.ts | screenshot": {
    "message": "Screenshot"
  },
  "ui/legacy/components/perf_ui/FilmStripView.ts | screenshotForSSelectToView": {
    "message": "Screenshot für {PH1} – auswählen, um vorherige Anforderungen aufzurufen."
  },
  "ui/legacy/components/perf_ui/FlameChart.ts | flameChart": {
    "message": "Flame-Diagramm"
  },
  "ui/legacy/components/perf_ui/FlameChart.ts | hideChildren": {
    "message": "Untergeordnete ausblenden"
  },
  "ui/legacy/components/perf_ui/FlameChart.ts | hideFunction": {
    "message": "Funktion ausblenden"
  },
  "ui/legacy/components/perf_ui/FlameChart.ts | hideRepeatingChildren": {
    "message": "Wiederkehrende untergeordnete Einträge ausblenden"
  },
  "ui/legacy/components/perf_ui/FlameChart.ts | resetTrace": {
    "message": "Trace zurücksetzen"
  },
  "ui/legacy/components/perf_ui/FlameChart.ts | sCollapsed": {
    "message": "{PH1} minimiert"
  },
  "ui/legacy/components/perf_ui/FlameChart.ts | sExpanded": {
    "message": "{PH1} maximiert"
  },
  "ui/legacy/components/perf_ui/FlameChart.ts | sHovered": {
    "message": "Mauszeiger über {PH1} bewegt"
  },
  "ui/legacy/components/perf_ui/FlameChart.ts | sSelected": {
    "message": "{PH1} ausgewählt"
  },
  "ui/legacy/components/perf_ui/NetworkPriorities.ts | high": {
    "message": "Hoch"
  },
  "ui/legacy/components/perf_ui/NetworkPriorities.ts | highest": {
    "message": "Höchste"
  },
  "ui/legacy/components/perf_ui/NetworkPriorities.ts | low": {
    "message": "Gering"
  },
  "ui/legacy/components/perf_ui/NetworkPriorities.ts | lowest": {
    "message": "Niedrigste"
  },
  "ui/legacy/components/perf_ui/NetworkPriorities.ts | medium": {
    "message": "Mittel"
  },
  "ui/legacy/components/perf_ui/OverviewGrid.ts | leftResizer": {
    "message": "Größenanpassung links"
  },
  "ui/legacy/components/perf_ui/OverviewGrid.ts | overviewGridWindow": {
    "message": "Fenster mit Übersichtsraster"
  },
  "ui/legacy/components/perf_ui/OverviewGrid.ts | rightResizer": {
    "message": "Größenanpassung rechts"
  },
  "ui/legacy/components/perf_ui/PieChart.ts | total": {
    "message": "Gesamt"
  },
  "ui/legacy/components/perf_ui/perf_ui-meta.ts | collectGarbage": {
    "message": "Automatische Speicherbereinigung"
  },
  "ui/legacy/components/perf_ui/perf_ui-meta.ts | flamechartMouseWheelAction": {
    "message": "Flamechart-Mausradaktion:"
  },
  "ui/legacy/components/perf_ui/perf_ui-meta.ts | hideLiveMemoryAllocation": {
    "message": "Anmerkungen zur Live-Arbeitsspeicherzuweisung verbergen"
  },
  "ui/legacy/components/perf_ui/perf_ui-meta.ts | liveMemoryAllocationAnnotations": {
    "message": "Anmerkungen zur Live-Arbeitsspeicherzuweisung"
  },
  "ui/legacy/components/perf_ui/perf_ui-meta.ts | scroll": {
    "message": "Scrollen"
  },
  "ui/legacy/components/perf_ui/perf_ui-meta.ts | showLiveMemoryAllocation": {
    "message": "Anmerkungen zur Live-Arbeitsspeicherzuweisung anzeigen"
  },
  "ui/legacy/components/perf_ui/perf_ui-meta.ts | zoom": {
    "message": "Zoom"
  },
  "ui/legacy/components/quick_open/CommandMenu.ts | command": {
    "message": "Befehl"
  },
  "ui/legacy/components/quick_open/CommandMenu.ts | deprecated": {
    "message": "– eingestellt"
  },
  "ui/legacy/components/quick_open/CommandMenu.ts | noCommandsFound": {
    "message": "Keine Befehle gefunden"
  },
  "ui/legacy/components/quick_open/CommandMenu.ts | oneOrMoreSettingsHaveChanged": {
    "message": "Eine oder mehr Einstellungen wurden geändert. Zur Umsetzung der Änderungen ist eine Aktualisierung erforderlich."
  },
  "ui/legacy/components/quick_open/CommandMenu.ts | run": {
    "message": "Ausführen"
  },
  "ui/legacy/components/quick_open/FilteredListWidget.ts | noResultsFound": {
    "message": "Keine Ergebnisse gefunden"
  },
  "ui/legacy/components/quick_open/FilteredListWidget.ts | quickOpen": {
    "message": "Schnelles Öffnen"
  },
  "ui/legacy/components/quick_open/FilteredListWidget.ts | quickOpenPrompt": {
    "message": "Aufforderung zum schnellen Öffnen"
  },
  "ui/legacy/components/quick_open/FilteredListWidget.ts | sItemSOfS": {
    "message": "{PH1}, Element {PH2} von {PH3}"
  },
  "ui/legacy/components/quick_open/QuickOpen.ts | typeToSeeAvailableCommands": {
    "message": "„?“ eingeben, um verfügbare Befehle zu sehen"
  },
  "ui/legacy/components/quick_open/quick_open-meta.ts | openFile": {
    "message": "Datei öffnen"
  },
  "ui/legacy/components/quick_open/quick_open-meta.ts | runCommand": {
    "message": "Befehl ausführen"
  },
  "ui/legacy/components/source_frame/FontView.ts | font": {
    "message": "Schriftart"
  },
  "ui/legacy/components/source_frame/FontView.ts | previewOfFontFromS": {
    "message": "Schriftvorschau von {PH1}"
  },
  "ui/legacy/components/source_frame/ImageView.ts | copyImageAsDataUri": {
    "message": "Bild als Daten-URI kopieren"
  },
  "ui/legacy/components/source_frame/ImageView.ts | copyImageUrl": {
    "message": "Bild-URL kopieren"
  },
  "ui/legacy/components/source_frame/ImageView.ts | dD": {
    "message": "{PH1} × {PH2}"
  },
  "ui/legacy/components/source_frame/ImageView.ts | download": {
    "message": "Download"
  },
  "ui/legacy/components/source_frame/ImageView.ts | dropImageFileHere": {
    "message": "Bilddatei hier ablegen"
  },
  "ui/legacy/components/source_frame/ImageView.ts | image": {
    "message": "Bild"
  },
  "ui/legacy/components/source_frame/ImageView.ts | imageFromS": {
    "message": "Bild von {PH1}"
  },
  "ui/legacy/components/source_frame/ImageView.ts | openImageInNewTab": {
    "message": "Bild in neuem Tab öffnen"
  },
  "ui/legacy/components/source_frame/ImageView.ts | saveImageAs": {
    "message": "Bild speichern unter…"
  },
  "ui/legacy/components/source_frame/JSONView.ts | find": {
    "message": "Suchen"
  },
  "ui/legacy/components/source_frame/PreviewFactory.ts | nothingToPreview": {
    "message": "Keine Ergebnisse zur Vorschau vorhanden"
  },
  "ui/legacy/components/source_frame/ResourceSourceFrame.ts | find": {
    "message": "Suchen"
  },
  "ui/legacy/components/source_frame/SourceFrame.ts | allow": {
    "message": "Erlauben"
  },
  "ui/legacy/components/source_frame/SourceFrame.ts | allowPasting": {
    "message": "Einfügen erlauben"
  },
  "ui/legacy/components/source_frame/SourceFrame.ts | bytecodePositionXs": {
    "message": "Bytecode-Position 0x{PH1}"
  },
  "ui/legacy/components/source_frame/SourceFrame.ts | cancel": {
    "message": "Abbrechen"
  },
  "ui/legacy/components/source_frame/SourceFrame.ts | dCharactersSelected": {
    "message": "{PH1} Zeichen ausgewählt"
  },
  "ui/legacy/components/source_frame/SourceFrame.ts | dLinesDCharactersSelected": {
    "message": "{PH1} Zeilen, {PH2} Zeichen ausgewählt"
  },
  "ui/legacy/components/source_frame/SourceFrame.ts | dSelectionRegions": {
    "message": "{PH1} Auswahlregionen"
  },
  "ui/legacy/components/source_frame/SourceFrame.ts | doNotPaste": {
    "message": "Füge keinen Code in die Entwicklertools ein, den du nicht verstehst oder nicht selbst geprüft hast. Dies könnte Angreifern ermöglichen, deine Identität zu stehlen oder die Kontrolle über deinen Computer zu erlangen. Gib unten „{PH1}“ ein, um das Einfügen zu erlauben."
  },
  "ui/legacy/components/source_frame/SourceFrame.ts | doYouTrustThisCode": {
    "message": "Ist dieser Code vertrauenswürdig?"
  },
  "ui/legacy/components/source_frame/SourceFrame.ts | lineSColumnS": {
    "message": "Zeile {PH1}, Spalte {PH2}"
  },
  "ui/legacy/components/source_frame/SourceFrame.ts | loading": {
    "message": "Wird geladen…"
  },
  "ui/legacy/components/source_frame/SourceFrame.ts | prettyPrint": {
    "message": "Pretty Print"
  },
  "ui/legacy/components/source_frame/SourceFrame.ts | source": {
    "message": "Quelle"
  },
  "ui/legacy/components/source_frame/SourceFrame.ts | typeAllowPasting": {
    "message": "Gib „{PH1}“ ein"
  },
  "ui/legacy/components/source_frame/XMLView.ts | find": {
    "message": "Suchen"
  },
  "ui/legacy/components/source_frame/source_frame-meta.ts | Spaces": {
    "message": "2 Leerzeichen"
  },
  "ui/legacy/components/source_frame/source_frame-meta.ts | defaultIndentation": {
    "message": "Standardeinrückung:"
  },
  "ui/legacy/components/source_frame/source_frame-meta.ts | eSpaces": {
    "message": "8 Leerzeichen"
  },
  "ui/legacy/components/source_frame/source_frame-meta.ts | fSpaces": {
    "message": "4 Leerzeichen"
  },
  "ui/legacy/components/source_frame/source_frame-meta.ts | setIndentationToESpaces": {
    "message": "Für Einzug 8 Leerzeichen festlegen"
  },
  "ui/legacy/components/source_frame/source_frame-meta.ts | setIndentationToFSpaces": {
    "message": "Für Einzug 4 Leerzeichen festlegen"
  },
  "ui/legacy/components/source_frame/source_frame-meta.ts | setIndentationToSpaces": {
    "message": "Für Einzug 2 Leerzeichen festlegen"
  },
  "ui/legacy/components/source_frame/source_frame-meta.ts | setIndentationToTabCharacter": {
    "message": "Einzug auf Tabulatorzeichen setzen"
  },
  "ui/legacy/components/source_frame/source_frame-meta.ts | tabCharacter": {
    "message": "Tabulatorzeichen"
  },
  "ui/legacy/components/utils/ImagePreview.ts | currentSource": {
    "message": "Aktuelle Quelle:"
  },
  "ui/legacy/components/utils/ImagePreview.ts | fileSize": {
    "message": "Dateigröße:"
  },
  "ui/legacy/components/utils/ImagePreview.ts | imageFromS": {
    "message": "Bild von {PH1}"
  },
  "ui/legacy/components/utils/ImagePreview.ts | intrinsicAspectRatio": {
    "message": "Intrinsisches Seitenverhältnis:"
  },
  "ui/legacy/components/utils/ImagePreview.ts | intrinsicSize": {
    "message": "Intrinsische Größe:"
  },
  "ui/legacy/components/utils/ImagePreview.ts | renderedAspectRatio": {
    "message": "Gerendertes Seitenverhältnis"
  },
  "ui/legacy/components/utils/ImagePreview.ts | renderedSize": {
    "message": "Gerenderte Größe:"
  },
  "ui/legacy/components/utils/ImagePreview.ts | unknownSource": {
    "message": "unbekannte Quelle"
  },
  "ui/legacy/components/utils/JSPresentationUtils.ts | addToIgnore": {
    "message": "Script zur Ignorieren-Liste hinzufügen"
  },
  "ui/legacy/components/utils/JSPresentationUtils.ts | removeFromIgnore": {
    "message": "Aus der Ignorieren-Liste löschen"
  },
  "ui/legacy/components/utils/JSPresentationUtils.ts | showLess": {
    "message": "Weniger anzeigen"
  },
  "ui/legacy/components/utils/JSPresentationUtils.ts | showSMoreFrames": {
    "message": "{n,plural, =1{# weiteren Frame anzeigen}other{# weitere Frames anzeigen}}"
  },
  "ui/legacy/components/utils/JSPresentationUtils.ts | unknownSource": {
    "message": "unbekannt"
  },
  "ui/legacy/components/utils/Linkifier.ts | auto": {
    "message": "automatisch"
  },
  "ui/legacy/components/utils/Linkifier.ts | linkHandling": {
    "message": "Linkhandling:"
  },
  "ui/legacy/components/utils/Linkifier.ts | openUsingS": {
    "message": "Mithilfe von {PH1} öffnen"
  },
  "ui/legacy/components/utils/Linkifier.ts | reveal": {
    "message": "Anzeigen"
  },
  "ui/legacy/components/utils/Linkifier.ts | revealInS": {
    "message": "In {PH1} anzeigen"
  },
  "ui/legacy/components/utils/Linkifier.ts | unknown": {
    "message": "(unbekannt)"
  },
  "ui/legacy/components/utils/TargetDetachedDialog.ts | websocketDisconnected": {
    "message": "WebSocket nicht verbunden"
  }
}
