{
  "core/common/ResourceType.ts | cspviolationreport": {
    "message": "CSPViolationReport"
  },
  "core/common/ResourceType.ts | css": {
    "message": "CSS"
  },
  "core/common/ResourceType.ts | doc": {
    "message": "Document"
  },
  "core/common/ResourceType.ts | document": {
    "message": "Document"
  },
  "core/common/ResourceType.ts | eventsource": {
    "message": "EventSource"
  },
  "core/common/ResourceType.ts | fetch": {
    "message": "Fetch"
  },
  "core/common/ResourceType.ts | fetchAndXHR": {
    "message": "Fetch et XHR"
  },
  "core/common/ResourceType.ts | font": {
    "message": "Police"
  },
  "core/common/ResourceType.ts | image": {
    "message": "Image"
  },
  "core/common/ResourceType.ts | img": {
    "message": "Image"
  },
  "core/common/ResourceType.ts | javascript": {
    "message": "JavaScript"
  },
  "core/common/ResourceType.ts | js": {
    "message": "JS"
  },
  "core/common/ResourceType.ts | manifest": {
    "message": "Fichier manifeste"
  },
  "core/common/ResourceType.ts | media": {
    "message": "Multimédia"
  },
  "core/common/ResourceType.ts | other": {
    "message": "Autre"
  },
  "core/common/ResourceType.ts | ping": {
    "message": "Ping"
  },
  "core/common/ResourceType.ts | preflight": {
    "message": "Requête préliminaire"
  },
  "core/common/ResourceType.ts | script": {
    "message": "Script"
  },
  "core/common/ResourceType.ts | signedexchange": {
    "message": "Échange signé"
  },
  "core/common/ResourceType.ts | stylesheet": {
    "message": "Feuille de style"
  },
  "core/common/ResourceType.ts | texttrack": {
    "message": "TextTrack"
  },
  "core/common/ResourceType.ts | wasm": {
    "message": "Wasm"
  },
  "core/common/ResourceType.ts | webassembly": {
    "message": "WebAssembly"
  },
  "core/common/ResourceType.ts | webbundle": {
    "message": "WebBundle"
  },
  "core/common/ResourceType.ts | websocket": {
    "message": "WebSocket"
  },
  "core/common/ResourceType.ts | webtransport": {
    "message": "WebTransport"
  },
  "core/common/ResourceType.ts | ws": {
    "message": "WS"
  },
  "core/common/Revealer.ts | applicationPanel": {
    "message": "Panneau \"Application\""
  },
  "core/common/Revealer.ts | changesDrawer": {
    "message": "Panneau des modifications"
  },
  "core/common/Revealer.ts | elementsPanel": {
    "message": "Panneau \"Elements\""
  },
  "core/common/Revealer.ts | issuesView": {
    "message": "Affichage des problèmes"
  },
  "core/common/Revealer.ts | memoryInspectorPanel": {
    "message": "Panneau de l'outil d'inspection de mémoire"
  },
  "core/common/Revealer.ts | networkPanel": {
    "message": "Panneau \"Network\""
  },
  "core/common/Revealer.ts | sourcesPanel": {
    "message": "Panneau \"Sources\""
  },
  "core/common/Revealer.ts | stylesSidebar": {
    "message": "barre latérale des styles"
  },
  "core/common/SettingRegistration.ts | adorner": {
    "message": "Ornement"
  },
  "core/common/SettingRegistration.ts | appearance": {
    "message": "Apparence"
  },
  "core/common/SettingRegistration.ts | console": {
    "message": "Console"
  },
  "core/common/SettingRegistration.ts | debugger": {
    "message": "Débogueur"
  },
  "core/common/SettingRegistration.ts | elements": {
    "message": "Éléments"
  },
  "core/common/SettingRegistration.ts | extension": {
    "message": "Extension"
  },
  "core/common/SettingRegistration.ts | global": {
    "message": "Généraux"
  },
  "core/common/SettingRegistration.ts | grid": {
    "message": "Grille"
  },
  "core/common/SettingRegistration.ts | memory": {
    "message": "Mémoire"
  },
  "core/common/SettingRegistration.ts | mobile": {
    "message": "Mobile"
  },
  "core/common/SettingRegistration.ts | network": {
    "message": "Réseau"
  },
  "core/common/SettingRegistration.ts | performance": {
    "message": "Performances"
  },
  "core/common/SettingRegistration.ts | persistence": {
    "message": "Persistance"
  },
  "core/common/SettingRegistration.ts | rendering": {
    "message": "Affichage"
  },
  "core/common/SettingRegistration.ts | sources": {
    "message": "Sources"
  },
  "core/common/SettingRegistration.ts | sync": {
    "message": "Synchronisation"
  },
  "core/host/InspectorFrontendHost.ts | devtoolsS": {
    "message": "Outils de développement - {PH1}"
  },
  "core/host/ResourceLoader.ts | cacheError": {
    "message": "Erreur de cache"
  },
  "core/host/ResourceLoader.ts | certificateError": {
    "message": "Erreur de certificat"
  },
  "core/host/ResourceLoader.ts | certificateManagerError": {
    "message": "Erreur du gestionnaire de certificats"
  },
  "core/host/ResourceLoader.ts | connectionError": {
    "message": "Erreur de connexion"
  },
  "core/host/ResourceLoader.ts | decodingDataUrlFailed": {
    "message": "Échec du décodage de l'URL des données"
  },
  "core/host/ResourceLoader.ts | dnsResolverError": {
    "message": "Erreur du résolveur DNS"
  },
  "core/host/ResourceLoader.ts | ftpError": {
    "message": "Erreur FTP"
  },
  "core/host/ResourceLoader.ts | httpError": {
    "message": "Erreur HTTP"
  },
  "core/host/ResourceLoader.ts | httpErrorStatusCodeSS": {
    "message": "Erreur HTTP : code d'état {PH1}, {PH2}"
  },
  "core/host/ResourceLoader.ts | invalidUrl": {
    "message": "URL incorrecte"
  },
  "core/host/ResourceLoader.ts | signedExchangeError": {
    "message": "Erreur d'échange signé"
  },
  "core/host/ResourceLoader.ts | systemError": {
    "message": "Erreur système"
  },
  "core/host/ResourceLoader.ts | unknownError": {
    "message": "Erreur inconnue"
  },
  "core/i18n/time-utilities.ts | fdays": {
    "message": "{PH1} jours"
  },
  "core/i18n/time-utilities.ts | fhrs": {
    "message": "{PH1} h"
  },
  "core/i18n/time-utilities.ts | fmin": {
    "message": "{PH1} min"
  },
  "core/i18n/time-utilities.ts | fmms": {
    "message": "{PH1} μs"
  },
  "core/i18n/time-utilities.ts | fms": {
    "message": "{PH1} ms"
  },
  "core/i18n/time-utilities.ts | fs": {
    "message": "{PH1} s"
  },
  "core/sdk/CPUProfilerModel.ts | profileD": {
    "message": "Profil {PH1}"
  },
  "core/sdk/CSSStyleSheetHeader.ts | couldNotFindTheOriginalStyle": {
    "message": "Impossible de trouver la feuille de style d'origine."
  },
  "core/sdk/CSSStyleSheetHeader.ts | thereWasAnErrorRetrievingThe": {
    "message": "Une erreur s'est produite lors de la récupération des styles d'origine."
  },
  "core/sdk/ChildTargetManager.ts | main": {
    "message": "Principale"
  },
  "core/sdk/CompilerSourceMappingContentProvider.ts | couldNotLoadContentForSS": {
    "message": "Impossible de charger le contenu de {PH1} ({PH2})"
  },
  "core/sdk/ConsoleModel.ts | bfcacheNavigation": {
    "message": "La navigation vers {PH1} a été restaurée à partir du cache amélioré (consultez https://web.dev/bfcache/)"
  },
  "core/sdk/ConsoleModel.ts | failedToSaveToTempVariable": {
    "message": "Échec de l'enregistrement dans la variable temporaire."
  },
  "core/sdk/ConsoleModel.ts | navigatedToS": {
    "message": "Redirigé vers {PH1}"
  },
  "core/sdk/ConsoleModel.ts | profileSFinished": {
    "message": "Profil \"{PH1}\" terminé."
  },
  "core/sdk/ConsoleModel.ts | profileSStarted": {
    "message": "Profil \"{PH1}\" commencé."
  },
  "core/sdk/DebuggerModel.ts | block": {
    "message": "Bloc"
  },
  "core/sdk/DebuggerModel.ts | catchBlock": {
    "message": "Bloc Catch"
  },
  "core/sdk/DebuggerModel.ts | closure": {
    "message": "Fermeture"
  },
  "core/sdk/DebuggerModel.ts | expression": {
    "message": "Expression"
  },
  "core/sdk/DebuggerModel.ts | global": {
    "message": "Globales"
  },
  "core/sdk/DebuggerModel.ts | local": {
    "message": "Locales"
  },
  "core/sdk/DebuggerModel.ts | module": {
    "message": "Module"
  },
  "core/sdk/DebuggerModel.ts | script": {
    "message": "Script"
  },
  "core/sdk/DebuggerModel.ts | withBlock": {
    "message": "Bloc With"
  },
  "core/sdk/NetworkManager.ts | fastG": {
    "message": "3G rapide"
  },
  "core/sdk/NetworkManager.ts | noContentForPreflight": {
    "message": "Aucun contenu disponible pour la requête préliminaire"
  },
  "core/sdk/NetworkManager.ts | noContentForRedirect": {
    "message": "Aucun contenu disponible, car cette requête a été redirigée"
  },
  "core/sdk/NetworkManager.ts | noContentForWebSocket": {
    "message": "Contenu WebSockets actuellement non pris en charge"
  },
  "core/sdk/NetworkManager.ts | noThrottling": {
    "message": "Aucune limitation"
  },
  "core/sdk/NetworkManager.ts | offline": {
    "message": "Hors connexion"
  },
  "core/sdk/NetworkManager.ts | requestWasBlockedByDevtoolsS": {
    "message": "La requête a été bloquée par les Outils de développement : \"{PH1}\""
  },
  "core/sdk/NetworkManager.ts | sFailedLoadingSS": {
    "message": "Échec du chargement de {PH1} : {PH2} \"{PH3}\"."
  },
  "core/sdk/NetworkManager.ts | sFinishedLoadingSS": {
    "message": "{PH1} a fini de se charger : {PH2} \"{PH3}\"."
  },
  "core/sdk/NetworkManager.ts | slowG": {
    "message": "3G lente"
  },
  "core/sdk/NetworkRequest.ts | anUnknownErrorWasEncounteredWhenTrying": {
    "message": "Une erreur inconnue s'est produite lors de la tentative de stocker ce cookie."
  },
  "core/sdk/NetworkRequest.ts | binary": {
    "message": "(binaire)"
  },
  "core/sdk/NetworkRequest.ts | blockedReasonInvalidDomain": {
    "message": "Cette tentative de définir un cookie via un en-tête Set-Cookie a été bloquée, car son attribut de domaine n'était pas valide compte tenu de l'URL actuelle de l'hôte."
  },
  "core/sdk/NetworkRequest.ts | blockedReasonInvalidPrefix": {
    "message": "Cette tentative de définir un cookie via un en-tête Set-Cookie a été bloquée, car son nom contenait le préfixe \"__Secure-\" ou \"__Host-\" et il enfreignait les règles supplémentaires appliquées aux cookies ayant ces préfixes, telles que définies sur https://tools.ietf.org/html/draft-west-cookie-prefixes-05."
  },
  "core/sdk/NetworkRequest.ts | blockedReasonOverwriteSecure": {
    "message": "Cette tentative de définir un cookie via un en-tête Set-Cookie a été bloquée, car il n'a pas été envoyé via une connexion sécurisée et aurait écrasé un cookie ayant l'attribut Secure."
  },
  "core/sdk/NetworkRequest.ts | blockedReasonSameSiteNoneInsecure": {
    "message": "Cette tentative de définir un cookie via un en-tête Set-Cookie a été bloquée, car il avait l'attribut SameSite=None, mais pas l'attribut Secure, lequel est nécessaire pour utiliser SameSite=None."
  },
  "core/sdk/NetworkRequest.ts | blockedReasonSameSiteStrictLax": {
    "message": "Cette tentative de définir un cookie via un en-tête Set-Cookie a été bloquée, car il avait l'attribut {PH1}, mais provenait d'une réponse intersite qui n'était pas la réponse à une navigation de niveau supérieur."
  },
  "core/sdk/NetworkRequest.ts | blockedReasonSameSiteUnspecifiedTreatedAsLax": {
    "message": "Cet en-tête Set-Cookie n'a pas spécifié d'attribut SameSite. Il a été défini par défaut sur \"SameSite=Lax,\" et a été bloqué, car il provenait d'une réponse intersite qui n'était pas la réponse à une navigation de niveau supérieur. Le Set-Cookie aurait dû être défini sur \"SameSite=None\" pour permettre une utilisation intersite."
  },
  "core/sdk/NetworkRequest.ts | blockedReasonSecureOnly": {
    "message": "Cette tentative de définir un cookie via un en-tête Set-Cookie a été bloquée, car il avait l'attribut Secure, mais n'a pas été reçu via une connexion sécurisée."
  },
  "core/sdk/NetworkRequest.ts | domainMismatch": {
    "message": "Ce cookie a été bloqué, car le domaine de l'URL de la requête ne correspondait pas exactement à celui du cookie, et le domaine de l'URL de la requête n'était pas non plus un sous-domaine de la valeur de l'attribut \"Domain\" du cookie."
  },
  "core/sdk/NetworkRequest.ts | nameValuePairExceedsMaxSize": {
    "message": "Ce cookie a été bloqué, car il est trop volumineux. La taille combinée du nom et de la valeur ne doit pas dépasser 4096 caractères."
  },
  "core/sdk/NetworkRequest.ts | notOnPath": {
    "message": "Ce cookie a été bloqué, car son chemin d'accès n'était pas une correspondance exacte ni un super-répertoire du chemin d'accès de l'URL de la requête."
  },
  "core/sdk/NetworkRequest.ts | samePartyFromCrossPartyContext": {
    "message": "Ce cookie a été bloqué, car il avait l'attribut SameParty, mais la requête était multipartie. Cette requête était considérée comme multipartie, car le domaine de l'URL de la ressource et les domaines des frames/documents englobants de la ressource ne sont pas propriétaires ni membres du même ensemble propriétaire."
  },
  "core/sdk/NetworkRequest.ts | sameSiteLax": {
    "message": "Ce cookie a été bloqué, car il avait l'attribut SameSite=Lax, et la requête a été effectuée à partir d'un autre site et n'a pas été initiée par une navigation de niveau supérieur."
  },
  "core/sdk/NetworkRequest.ts | sameSiteNoneInsecure": {
    "message": "Ce cookie a été bloqué, car il avait l'attribut SameSite=None, mais n'était pas marqué \"Secure\". Les cookies sans restrictions SameSite doivent être marqués \"Secure\" et envoyés via une connexion sécurisée."
  },
  "core/sdk/NetworkRequest.ts | sameSiteStrict": {
    "message": "Ce cookie a été bloqué, car il avait l'attribut SameSite=Strict, et la requête a été effectuée à partir d'un autre site. Cela inclut les requêtes de navigation de niveau supérieur initiées par d'autres sites."
  },
  "core/sdk/NetworkRequest.ts | sameSiteUnspecifiedTreatedAsLax": {
    "message": "Ce cookie n'a pas spécifié d'attribut SameSite lors de son stockage. Il a été défini par défaut sur \"SameSite=Lax\" et a été bloqué, car la requête a été effectuée à partir d'un autre site et n'a pas été initiée par une navigation de niveau supérieur. Le cookie aurait dû être défini sur SameSite=None pour permettre une utilisation intersite."
  },
  "core/sdk/NetworkRequest.ts | schemefulSameSiteLax": {
    "message": "Ce cookie a été bloqué, car il avait l'attribut SameSite=Lax, mais la requête était intersite et n'a pas été initiée par une navigation de niveau supérieur. Cette requête est considérée comme intersite, car l'URL a un schéma différent de celui du site actuel."
  },
  "core/sdk/NetworkRequest.ts | schemefulSameSiteStrict": {
    "message": "Ce cookie a été bloqué, car il avait l'attribut SameSite=Strict, mais la requête était intersite. Cela inclut les requêtes de navigation de niveau supérieur initiées par d'autres sites. Cette requête est considérée comme intersite, car l'URL a un schéma différent de celui du site actuel."
  },
  "core/sdk/NetworkRequest.ts | schemefulSameSiteUnspecifiedTreatedAsLax": {
    "message": "Ce cookie n'a pas spécifié d'attribut SameSite lors de son stockage. Il a été défini par défaut sur SameSite=Lax\" et a été bloqué, car la requête était intersite et n'a pas été initiée par une navigation de niveau supérieur. Cette requête est considérée comme intersite, car l'URL a un schéma différent de celui du site actuel."
  },
  "core/sdk/NetworkRequest.ts | secureOnly": {
    "message": "Ce cookie a été bloqué, car il avait l'attribut Secure, et la connexion n'était pas sécurisée."
  },
  "core/sdk/NetworkRequest.ts | setcookieHeaderIsIgnoredIn": {
    "message": "L'en-tête Set-Cookie est ignoré dans la réponse de l'URL : {PH1}. La taille combinée du nom et de la valeur ne doit pas dépasser 4096 caractères."
  },
  "core/sdk/NetworkRequest.ts | theSchemeOfThisConnectionIsNot": {
    "message": "Le schéma de cette connexion n'est pas autorisé à placer des cookies."
  },
  "core/sdk/NetworkRequest.ts | thirdPartyPhaseout": {
    "message": "Ce cookie a été bloqué, car les cookies tiers ont été abandonnés. En savoir plus dans l'onglet des problèmes"
  },
  "core/sdk/NetworkRequest.ts | thisSetcookieDidntSpecifyASamesite": {
    "message": "Cet en-tête Set-Cookie n'a pas spécifié d'attribut SameSite. Il a été défini par défaut sur \"SameSite=Lax\" et a été bloqué, car il provenait d'une réponse intersite qui n'était pas la réponse à une navigation de niveau supérieur. Cette réponse est considérée comme intersite, car l'URL a un schéma différent de celui du site actuel."
  },
  "core/sdk/NetworkRequest.ts | thisSetcookieHadADisallowedCharacter": {
    "message": "Cet en-tête Set-Cookie contenait un caractère non autorisé (un caractère de contrôle ASCII interdit ou le caractère de tabulation s'il apparaît au milieu du nom ou de la valeur du cookie, ou du nom ou de la valeur d'un attribut du cookie)."
  },
  "core/sdk/NetworkRequest.ts | thisSetcookieHadInvalidSyntax": {
    "message": "La syntaxe de cet en-tête Set-Cookie est incorrecte."
  },
  "core/sdk/NetworkRequest.ts | thisSetcookieWasBlockedBecauseItHadTheSameparty": {
    "message": "Cette tentative de définir un cookie via un en-tête Set-Cookie a été bloquée, car il avait l'attribut SameParty, mais la requête était multipartie. Cette requête était considérée comme multipartie, car le domaine de l'URL de la ressource et les domaines des frames/documents englobants de la ressource ne sont pas propriétaires ni membres du même ensemble propriétaire."
  },
  "core/sdk/NetworkRequest.ts | thisSetcookieWasBlockedBecauseItHadTheSamepartyAttribute": {
    "message": "Cette tentative de définir un cookie via un en-tête Set-Cookie a été bloquée, car il avait l'attribut SameParty ainsi que d'autres attributs en conflit. Chrome exige que les cookies qui utilisent l'attribut SameParty aient aussi l'attribut Secure et ne soient pas limités à SameSite=Strict."
  },
  "core/sdk/NetworkRequest.ts | thisSetcookieWasBlockedBecauseItHadTheSamesiteStrictLax": {
    "message": "Cette tentative de définir un cookie via un en-tête Set-Cookie a été bloquée, car il avait l'attribut {PH1}, mais provenait d'une réponse intersite qui n'était pas la réponse à une navigation de niveau supérieur. Cette réponse est considérée comme intersite, car l'URL a un schéma différent de celui du site actuel."
  },
  "core/sdk/NetworkRequest.ts | thisSetcookieWasBlockedBecauseTheNameValuePairExceedsMaxSize": {
    "message": "Cette tentative de définir un cookie via un en-tête Set-Cookie a été bloquée, car le cookie était trop volumineux. La taille combinée du nom et de la valeur ne doit pas dépasser 4096 caractères."
  },
  "core/sdk/NetworkRequest.ts | thisSetcookieWasBlockedDueThirdPartyPhaseout": {
    "message": "La définition de ce cookie a été bloquée en raison de l'abandon des cookies tiers. En savoir plus dans l'onglet des problèmes"
  },
  "core/sdk/NetworkRequest.ts | thisSetcookieWasBlockedDueToUser": {
    "message": "Cette tentative de définir un cookie via un en-tête Set-Cookie a été bloquée en raison des préférences de l'utilisateur."
  },
  "core/sdk/NetworkRequest.ts | unknownError": {
    "message": "Une erreur inconnue s'est produite au moment d'envoyer ce cookie."
  },
  "core/sdk/NetworkRequest.ts | userPreferences": {
    "message": "Ce cookie a été bloqué en raison des préférences de l'utilisateur."
  },
  "core/sdk/OverlayModel.ts | pausedInDebugger": {
    "message": "Suspendu dans le débogueur"
  },
  "core/sdk/PageResourceLoader.ts | loadCanceledDueToReloadOf": {
    "message": "Chargement annulé en raison de l'actualisation de la page inspectée"
  },
  "core/sdk/Script.ts | scriptRemovedOrDeleted": {
    "message": "Script retiré ou supprimé."
  },
  "core/sdk/Script.ts | unableToFetchScriptSource": {
    "message": "Impossible de récupérer la source du script."
  },
  "core/sdk/ServerTiming.ts | deprecatedSyntaxFoundPleaseUse": {
    "message": "Syntaxe obsolète trouvée. Veuillez utiliser : <nom>;dur=<durée>;desc=<description>"
  },
  "core/sdk/ServerTiming.ts | duplicateParameterSIgnored": {
    "message": "Paramètre \"{PH1}\" en double ignoré."
  },
  "core/sdk/ServerTiming.ts | extraneousTrailingCharacters": {
    "message": "Caractères de fin superflus."
  },
  "core/sdk/ServerTiming.ts | noValueFoundForParameterS": {
    "message": "Aucune valeur trouvé pour le paramètre \"{PH1}\"."
  },
  "core/sdk/ServerTiming.ts | unableToParseSValueS": {
    "message": "Impossible d'analyser la valeur \"{PH1}\" \"{PH2}\"."
  },
  "core/sdk/ServerTiming.ts | unrecognizedParameterS": {
    "message": "Paramètre \"{PH1}\" non reconnu."
  },
  "core/sdk/ServiceWorkerCacheModel.ts | serviceworkercacheagentError": {
    "message": "ServiceWorkerCacheAgent : erreur lors de la suppression de l'entrée du cache {PH1} dans le cache : {PH2}"
  },
  "core/sdk/ServiceWorkerManager.ts | activated": {
    "message": "activé"
  },
  "core/sdk/ServiceWorkerManager.ts | activating": {
    "message": "en cours d'activation"
  },
  "core/sdk/ServiceWorkerManager.ts | installed": {
    "message": "installé"
  },
  "core/sdk/ServiceWorkerManager.ts | installing": {
    "message": "installation"
  },
  "core/sdk/ServiceWorkerManager.ts | new": {
    "message": "nouveau"
  },
  "core/sdk/ServiceWorkerManager.ts | redundant": {
    "message": "redondant"
  },
  "core/sdk/ServiceWorkerManager.ts | running": {
    "message": "en cours d'exécution"
  },
  "core/sdk/ServiceWorkerManager.ts | sSS": {
    "message": "{PH1} #{PH2} ({PH3})"
  },
  "core/sdk/ServiceWorkerManager.ts | starting": {
    "message": "en cours de démarrage"
  },
  "core/sdk/ServiceWorkerManager.ts | stopped": {
    "message": "interrompu"
  },
  "core/sdk/ServiceWorkerManager.ts | stopping": {
    "message": "à l'arrêt"
  },
  "core/sdk/sdk-meta.ts | achromatopsia": {
    "message": "Achromatopsie (pas de couleur)"
  },
  "core/sdk/sdk-meta.ts | blurredVision": {
    "message": "Vision trouble"
  },
  "core/sdk/sdk-meta.ts | captureAsyncStackTraces": {
    "message": "Capturer les traces de pile asynchrones"
  },
  "core/sdk/sdk-meta.ts | deuteranopia": {
    "message": "Deutéranopie (pas de vert)"
  },
  "core/sdk/sdk-meta.ts | disableAsyncStackTraces": {
    "message": "Désactiver les traces de pile asynchrones"
  },
  "core/sdk/sdk-meta.ts | disableAvifFormat": {
    "message": "Désactiver le format AVIF"
  },
  "core/sdk/sdk-meta.ts | disableCache": {
    "message": "Désactiver le cache (quand les outils de développement sont ouverts)"
  },
  "core/sdk/sdk-meta.ts | disableJavascript": {
    "message": "Désactiver JavaScript"
  },
  "core/sdk/sdk-meta.ts | disableLocalFonts": {
    "message": "Désactiver les polices locales"
  },
  "core/sdk/sdk-meta.ts | disableNetworkRequestBlocking": {
    "message": "Désactiver le blocage des requêtes réseau"
  },
  "core/sdk/sdk-meta.ts | disableWebpFormat": {
    "message": "Désactiver le format WebP"
  },
  "core/sdk/sdk-meta.ts | doNotCaptureAsyncStackTraces": {
    "message": "Ne pas capturer les traces de pile asynchrones"
  },
  "core/sdk/sdk-meta.ts | doNotEmulateAFocusedPage": {
    "message": "Ne pas émuler une page sélectionnée"
  },
  "core/sdk/sdk-meta.ts | doNotEmulateAnyVisionDeficiency": {
    "message": "Ne pas émuler de déficience visuelle"
  },
  "core/sdk/sdk-meta.ts | doNotEmulateCss": {
    "message": "Ne pas émuler la CSS {PH1}"
  },
  "core/sdk/sdk-meta.ts | doNotEmulateCssMediaType": {
    "message": "Ne pas émuler le type media CSS"
  },
  "core/sdk/sdk-meta.ts | doNotExtendGridLines": {
    "message": "Ne pas prolonger les lignes de la grille"
  },
  "core/sdk/sdk-meta.ts | doNotHighlightAdFrames": {
    "message": "Ne pas mettre en surbrillance les frames publicitaires"
  },
  "core/sdk/sdk-meta.ts | doNotPauseOnExceptions": {
    "message": "Ne pas suspendre sur exceptions"
  },
  "core/sdk/sdk-meta.ts | doNotPreserveLogUponNavigation": {
    "message": "Ne pas conserver le journal lors de la navigation"
  },
  "core/sdk/sdk-meta.ts | doNotShowGridNamedAreas": {
    "message": "Ne pas afficher les zones nommées dans la grille"
  },
  "core/sdk/sdk-meta.ts | doNotShowGridTrackSizes": {
    "message": "Ne pas afficher la taille des pistes de grille"
  },
  "core/sdk/sdk-meta.ts | doNotShowRulersOnHover": {
    "message": "Ne pas afficher les règles au passage du pointeur"
  },
  "core/sdk/sdk-meta.ts | emulateAFocusedPage": {
    "message": "Émuler une page sélectionnée"
  },
  "core/sdk/sdk-meta.ts | emulateAchromatopsia": {
    "message": "Émuler l'achromatopsie (pas de couleur)"
  },
  "core/sdk/sdk-meta.ts | emulateAutoDarkMode": {
    "message": "Émuler le mode sombre automatique"
  },
  "core/sdk/sdk-meta.ts | emulateBlurredVision": {
    "message": "Émuler la vision trouble"
  },
  "core/sdk/sdk-meta.ts | emulateCss": {
    "message": "Émuler la CSS {PH1}"
  },
  "core/sdk/sdk-meta.ts | emulateCssMediaFeature": {
    "message": "Émuler la caractéristique média CSS {PH1}"
  },
  "core/sdk/sdk-meta.ts | emulateCssMediaType": {
    "message": "Émuler le type de média CSS"
  },
  "core/sdk/sdk-meta.ts | emulateCssPrintMediaType": {
    "message": "Émuler le type de média CSS print"
  },
  "core/sdk/sdk-meta.ts | emulateCssScreenMediaType": {
    "message": "Émuler le type de média CSS screen"
  },
  "core/sdk/sdk-meta.ts | emulateDeuteranopia": {
    "message": "Émuler la deutéranopie (pas de vert)"
  },
  "core/sdk/sdk-meta.ts | emulateProtanopia": {
    "message": "Émuler la protanopie (pas de rouge)"
  },
  "core/sdk/sdk-meta.ts | emulateReducedContrast": {
    "message": "Émuler le contraste réduit"
  },
  "core/sdk/sdk-meta.ts | emulateTritanopia": {
    "message": "Émuler la tritanopie (pas de bleu)"
  },
  "core/sdk/sdk-meta.ts | emulateVisionDeficiencies": {
    "message": "Émuler les déficiences visuelles"
  },
  "core/sdk/sdk-meta.ts | enableAvifFormat": {
    "message": "Activer le format AVIF"
  },
  "core/sdk/sdk-meta.ts | enableCache": {
    "message": "Activer le cache"
  },
  "core/sdk/sdk-meta.ts | enableJavascript": {
    "message": "Activer JavaScript"
  },
  "core/sdk/sdk-meta.ts | enableLocalFonts": {
    "message": "Activer les polices locales"
  },
  "core/sdk/sdk-meta.ts | enableNetworkRequestBlocking": {
    "message": "Activer le blocage de requête réseau"
  },
  "core/sdk/sdk-meta.ts | enableRemoteFileLoading": {
    "message": "Autoriser DevTools à charger des ressources, comme des cartes sources, à partir de chemins d'accès aux fichiers distants. Désactivé par défaut pour des raisons de sécurité."
  },
  "core/sdk/sdk-meta.ts | enableWebpFormat": {
    "message": "Activer le format WebP"
  },
  "core/sdk/sdk-meta.ts | extendGridLines": {
    "message": "Étendre les lignes de la grille"
  },
  "core/sdk/sdk-meta.ts | hideCoreWebVitalsOverlay": {
    "message": "Masquer la superposition Core Web Vitals"
  },
  "core/sdk/sdk-meta.ts | hideFramesPerSecondFpsMeter": {
    "message": "Masquer le compteur d'images par seconde (FPS)"
  },
  "core/sdk/sdk-meta.ts | hideLayerBorders": {
    "message": "Masquer les bordures des calques"
  },
  "core/sdk/sdk-meta.ts | hideLayoutShiftRegions": {
    "message": "Masquer les zones déplacées"
  },
  "core/sdk/sdk-meta.ts | hideLineLabels": {
    "message": "Masquer les libellés des lignes"
  },
  "core/sdk/sdk-meta.ts | hidePaintFlashingRectangles": {
    "message": "Masquer les rectangles en surbrillance à peindre"
  },
  "core/sdk/sdk-meta.ts | hideScrollPerformanceBottlenecks": {
    "message": "Masquer les goulots d'étranglement du défilement"
  },
  "core/sdk/sdk-meta.ts | highlightAdFrames": {
    "message": "Mettre en surbrillance les frames publicitaires"
  },
  "core/sdk/sdk-meta.ts | noEmulation": {
    "message": "Aucune émulation"
  },
  "core/sdk/sdk-meta.ts | pauseOnExceptions": {
    "message": "Suspendre sur les exceptions"
  },
  "core/sdk/sdk-meta.ts | preserveLogUponNavigation": {
    "message": "Conserver le journal lors de la navigation"
  },
  "core/sdk/sdk-meta.ts | print": {
    "message": "impression"
  },
  "core/sdk/sdk-meta.ts | protanopia": {
    "message": "Protanopie (daltonisme rouge)"
  },
  "core/sdk/sdk-meta.ts | query": {
    "message": "requête"
  },
  "core/sdk/sdk-meta.ts | reducedContrast": {
    "message": "Contraste réduit"
  },
  "core/sdk/sdk-meta.ts | screen": {
    "message": "écran"
  },
  "core/sdk/sdk-meta.ts | showAreaNames": {
    "message": "Afficher les noms de zone"
  },
  "core/sdk/sdk-meta.ts | showCoreWebVitalsOverlay": {
    "message": "Afficher la superposition Core Web Vitals"
  },
  "core/sdk/sdk-meta.ts | showFramesPerSecondFpsMeter": {
    "message": "Afficher le compteur d'images par seconde (FPS)"
  },
  "core/sdk/sdk-meta.ts | showGridNamedAreas": {
    "message": "Afficher les zones nommées dans la grille"
  },
  "core/sdk/sdk-meta.ts | showGridTrackSizes": {
    "message": "Afficher la taille des pistes de grille"
  },
  "core/sdk/sdk-meta.ts | showLayerBorders": {
    "message": "Afficher les bordures des calques"
  },
  "core/sdk/sdk-meta.ts | showLayoutShiftRegions": {
    "message": "Afficher les régions avec un décalage de mise en page"
  },
  "core/sdk/sdk-meta.ts | showLineLabels": {
    "message": "Afficher les libellés de lignes"
  },
  "core/sdk/sdk-meta.ts | showLineNames": {
    "message": "Afficher les libellés des lignes"
  },
  "core/sdk/sdk-meta.ts | showLineNumbers": {
    "message": "Afficher les numéros de lignes"
  },
  "core/sdk/sdk-meta.ts | showPaintFlashingRectangles": {
    "message": "Afficher les rectangles en surbrillance à peindre"
  },
  "core/sdk/sdk-meta.ts | showRulersOnHover": {
    "message": "Afficher les règles au passage du pointeur"
  },
  "core/sdk/sdk-meta.ts | showScrollPerformanceBottlenecks": {
    "message": "Afficher les goulots d'étranglement du défilement"
  },
  "core/sdk/sdk-meta.ts | showTrackSizes": {
    "message": "Afficher la taille des pistes"
  },
  "core/sdk/sdk-meta.ts | tritanopia": {
    "message": "Tritanopie (pas de bleu)"
  },
  "entrypoints/inspector_main/InspectorMain.ts | javascriptIsDisabled": {
    "message": "JavaScript est désactivé"
  },
  "entrypoints/inspector_main/InspectorMain.ts | main": {
    "message": "Principale"
  },
  "entrypoints/inspector_main/InspectorMain.ts | openDedicatedTools": {
    "message": "Ouvrir les outils de développement dédiés pour Node.js"
  },
  "entrypoints/inspector_main/InspectorMain.ts | tab": {
    "message": "Onglet"
  },
  "entrypoints/inspector_main/OutermostTargetSelector.ts | targetNotSelected": {
    "message": "Page : non sélectionnée"
  },
  "entrypoints/inspector_main/OutermostTargetSelector.ts | targetS": {
    "message": "Page : {PH1}"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | coreWebVitals": {
    "message": "Core Web Vitals"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | disableAvifImageFormat": {
    "message": "Désactiver le format d'image AVIF"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | disableLocalFonts": {
    "message": "Désactiver les polices locales"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | disableWebpImageFormat": {
    "message": "Désactiver le format d'image WebP"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | disablesLocalSourcesInFontface": {
    "message": "Désactive les sources local() dans les règles @font-face. Actualisez la page pour que le réglage s'applique."
  },
  "entrypoints/inspector_main/RenderingOptions.ts | emulateAFocusedPage": {
    "message": "Émuler une page sélectionnée"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | emulateAutoDarkMode": {
    "message": "Activer le mode sombre automatique"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | emulatesAFocusedPage": {
    "message": "Émule une page sélectionnée."
  },
  "entrypoints/inspector_main/RenderingOptions.ts | emulatesAutoDarkMode": {
    "message": "Active le mode sombre automatique et définit prefers-color-scheme sur dark."
  },
  "entrypoints/inspector_main/RenderingOptions.ts | forcesCssColorgamutMediaFeature": {
    "message": "Forcer la caractéristique média CSS color-gamut"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | forcesCssForcedColors": {
    "message": "Forcer la caractéristique média CSS forced-colors"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | forcesCssPreferscolorschemeMedia": {
    "message": "Forcer la caractéristique média CSS prefers-color-scheme"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | forcesCssPreferscontrastMedia": {
    "message": "Forcer la caractéristique média CSS prefers-contrast"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | forcesCssPrefersreduceddataMedia": {
    "message": "Forcer la caractéristique média CSS prefers-reduced-data"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | forcesCssPrefersreducedmotion": {
    "message": "Forcer la caractéristique média CSS prefers-reduced-motion"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | forcesCssPrefersreducedtransparencyMedia": {
    "message": "Forcer la caractéristique média CSS prefers-reduced-transparency"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | forcesMediaTypeForTestingPrint": {
    "message": "Le type de média pour tester les styles d'impression et d'écran est forcé"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | forcesVisionDeficiencyEmulation": {
    "message": "L'émulation de la déficience visuelle est forcée"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | frameRenderingStats": {
    "message": "Statistiques de rendu d'image"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | highlightAdFrames": {
    "message": "Mettre en surbillance les frames publicitaires"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | highlightsAreasOfThePageBlueThat": {
    "message": "Met en surbrillance (en bleu) les zones de la page déplacées. Cela peut poser problème aux personnes sujettes à des épilepsies photosensibles."
  },
  "entrypoints/inspector_main/RenderingOptions.ts | highlightsAreasOfThePageGreen": {
    "message": "Met en surbrillance (en vert) les zones de la page à repeindre. Cela peut poser problème aux personnes sujettes à des épilepsies photosensibles."
  },
  "entrypoints/inspector_main/RenderingOptions.ts | highlightsElementsTealThatCan": {
    "message": "Met en surbrillance (en turquoise) ce qui peut ralentir le défilement, comme les gestionnaires d'événements (tactiles et molette) et d'autres cas de défilement dans le thread principal."
  },
  "entrypoints/inspector_main/RenderingOptions.ts | highlightsFramesRedDetectedToBe": {
    "message": "Met en surbrillance (en rouge) les frames détectés comme étant des annonces."
  },
  "entrypoints/inspector_main/RenderingOptions.ts | layerBorders": {
    "message": "Bordures des calques"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | layoutShiftRegions": {
    "message": "Zones déplacées dans la mise en page"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | paintFlashing": {
    "message": "Clignotement de la peinture"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | plotsFrameThroughputDropped": {
    "message": "Tracer le débit des frames, la répartition des frames abandonnés et la mémoire GPU."
  },
  "entrypoints/inspector_main/RenderingOptions.ts | requiresAPageReloadToApplyAnd": {
    "message": "Nécessite que la page soit actualisée pour être appliqué, et désactive la mise en cache pour les demandes d'images."
  },
  "entrypoints/inspector_main/RenderingOptions.ts | scrollingPerformanceIssues": {
    "message": "Problèmes de performances du défilement"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | showsAnOverlayWithCoreWebVitals": {
    "message": "Afficher une superposition avec Core Web Vitals."
  },
  "entrypoints/inspector_main/RenderingOptions.ts | showsLayerBordersOrangeoliveAnd": {
    "message": "Afficher les bordures (orange/olive) et les tuiles (cyan) des calques."
  },
  "entrypoints/inspector_main/inspector_main-meta.ts | autoOpenDevTools": {
    "message": "Ouvrir automatiquement les Outils de développement pour les pop-up"
  },
  "entrypoints/inspector_main/inspector_main-meta.ts | blockAds": {
    "message": "Bloquer les annonces sur ce site"
  },
  "entrypoints/inspector_main/inspector_main-meta.ts | colorVisionDeficiency": {
    "message": "daltonisme"
  },
  "entrypoints/inspector_main/inspector_main-meta.ts | cssMediaFeature": {
    "message": "Caractéristique média CSS"
  },
  "entrypoints/inspector_main/inspector_main-meta.ts | cssMediaType": {
    "message": "Type de média CSS"
  },
  "entrypoints/inspector_main/inspector_main-meta.ts | disablePaused": {
    "message": "Désactiver la superposition d'état suspendu"
  },
  "entrypoints/inspector_main/inspector_main-meta.ts | doNotAutoOpen": {
    "message": "Ne pas ouvrir automatiquement les Outils de développement pour les pop-up"
  },
  "entrypoints/inspector_main/inspector_main-meta.ts | forceAdBlocking": {
    "message": "Forcer le blocage d'annonces sur ce site"
  },
  "entrypoints/inspector_main/inspector_main-meta.ts | fps": {
    "message": "FPS"
  },
  "entrypoints/inspector_main/inspector_main-meta.ts | hardReloadPage": {
    "message": "Forcer l'actualisation de la page"
  },
  "entrypoints/inspector_main/inspector_main-meta.ts | layout": {
    "message": "mise en page"
  },
  "entrypoints/inspector_main/inspector_main-meta.ts | paint": {
    "message": "peinture"
  },
  "entrypoints/inspector_main/inspector_main-meta.ts | reloadPage": {
    "message": "Actualiser la page"
  },
  "entrypoints/inspector_main/inspector_main-meta.ts | rendering": {
    "message": "Affichage"
  },
  "entrypoints/inspector_main/inspector_main-meta.ts | showAds": {
    "message": "Diffuser des annonces sur ce site (si autorisé)"
  },
  "entrypoints/inspector_main/inspector_main-meta.ts | showRendering": {
    "message": "Afficher le rendu"
  },
  "entrypoints/inspector_main/inspector_main-meta.ts | toggleCssPrefersColorSchemeMedia": {
    "message": "Activer la caractéristique média CSS prefers-color-scheme"
  },
  "entrypoints/inspector_main/inspector_main-meta.ts | visionDeficiency": {
    "message": "déficience visuelle"
  },
  "entrypoints/js_app/js_app.ts | main": {
    "message": "Principale"
  },
  "entrypoints/main/MainImpl.ts | customizeAndControlDevtools": {
    "message": "Personnaliser et contrôler les Outils de développement"
  },
  "entrypoints/main/MainImpl.ts | dockSide": {
    "message": "Côté d'épinglage"
  },
  "entrypoints/main/MainImpl.ts | dockSideNaviation": {
    "message": "Utilisez les flèches vers la gauche et vers la droite pour parcourir les options"
  },
  "entrypoints/main/MainImpl.ts | dockToBottom": {
    "message": "Épingler en bas"
  },
  "entrypoints/main/MainImpl.ts | dockToLeft": {
    "message": "Épingler à gauche"
  },
  "entrypoints/main/MainImpl.ts | dockToRight": {
    "message": "Épingler à droite"
  },
  "entrypoints/main/MainImpl.ts | focusDebuggee": {
    "message": "Placer le curseur sur la page"
  },
  "entrypoints/main/MainImpl.ts | help": {
    "message": "Aide"
  },
  "entrypoints/main/MainImpl.ts | hideConsoleDrawer": {
    "message": "Masquer le panneau de la console"
  },
  "entrypoints/main/MainImpl.ts | moreTools": {
    "message": "Autres outils"
  },
  "entrypoints/main/MainImpl.ts | placementOfDevtoolsRelativeToThe": {
    "message": "Position des Outils de développement par rapport à la page. (Appuyez sur {PH1} pour restaurer la dernière position.)"
  },
  "entrypoints/main/MainImpl.ts | showConsoleDrawer": {
    "message": "Afficher le panneau de la console"
  },
  "entrypoints/main/MainImpl.ts | undockIntoSeparateWindow": {
    "message": "Détacher dans une fenêtre distincte"
  },
  "entrypoints/main/main-meta.ts | auto": {
    "message": "auto"
  },
  "entrypoints/main/main-meta.ts | bottom": {
    "message": "Bas"
  },
  "entrypoints/main/main-meta.ts | browserLanguage": {
    "message": "Langue de l'UI du navigateur"
  },
  "entrypoints/main/main-meta.ts | cancelSearch": {
    "message": "Annuler la recherche"
  },
  "entrypoints/main/main-meta.ts | darkCapital": {
    "message": "Sombre"
  },
  "entrypoints/main/main-meta.ts | darkLower": {
    "message": "sombre"
  },
  "entrypoints/main/main-meta.ts | devtoolsDefault": {
    "message": "Outils de développement (par défaut)"
  },
  "entrypoints/main/main-meta.ts | dockToBottom": {
    "message": "Épingler en bas"
  },
  "entrypoints/main/main-meta.ts | dockToLeft": {
    "message": "Épingler à gauche"
  },
  "entrypoints/main/main-meta.ts | dockToRight": {
    "message": "Épingler à droite"
  },
  "entrypoints/main/main-meta.ts | enableCtrlShortcutToSwitchPanels": {
    "message": "Activer le raccourci Ctrl+1-9 pour changer de panneau"
  },
  "entrypoints/main/main-meta.ts | enableShortcutToSwitchPanels": {
    "message": "Activer le raccourci ⌘+1-9 pour changer de panneau"
  },
  "entrypoints/main/main-meta.ts | enableSync": {
    "message": "Activer la synchronisation des paramètres"
  },
  "entrypoints/main/main-meta.ts | findNextResult": {
    "message": "Trouver le résultat suivant"
  },
  "entrypoints/main/main-meta.ts | findPreviousResult": {
    "message": "Trouver le résultat précédent"
  },
  "entrypoints/main/main-meta.ts | focusDebuggee": {
    "message": "Placer le curseur sur la page"
  },
  "entrypoints/main/main-meta.ts | horizontal": {
    "message": "horizontale"
  },
  "entrypoints/main/main-meta.ts | language": {
    "message": "Langue :"
  },
  "entrypoints/main/main-meta.ts | left": {
    "message": "Gauche"
  },
  "entrypoints/main/main-meta.ts | lightCapital": {
    "message": "Clair"
  },
  "entrypoints/main/main-meta.ts | lightLower": {
    "message": "clair"
  },
  "entrypoints/main/main-meta.ts | nextPanel": {
    "message": "Panneau suivant"
  },
  "entrypoints/main/main-meta.ts | panelLayout": {
    "message": "Disposition des panneaux :"
  },
  "entrypoints/main/main-meta.ts | previousPanel": {
    "message": "Panneau précédent"
  },
  "entrypoints/main/main-meta.ts | reloadDevtools": {
    "message": "Actualiser les Outils de développement"
  },
  "entrypoints/main/main-meta.ts | resetZoomLevel": {
    "message": "Réinitialiser le niveau de zoom"
  },
  "entrypoints/main/main-meta.ts | restoreLastDockPosition": {
    "message": "Restaurer la dernière position d'épinglage"
  },
  "entrypoints/main/main-meta.ts | right": {
    "message": "Droite"
  },
  "entrypoints/main/main-meta.ts | searchAsYouTypeCommand": {
    "message": "Activer l'affichage instantané des résultats"
  },
  "entrypoints/main/main-meta.ts | searchAsYouTypeSetting": {
    "message": "Affichage instantané des résultats"
  },
  "entrypoints/main/main-meta.ts | searchInPanel": {
    "message": "Rechercher dans le panneau"
  },
  "entrypoints/main/main-meta.ts | searchOnEnterCommand": {
    "message": "Désactiver l'affichage instantané des résultats (appuyer sur \"Entrée\" pour rechercher)"
  },
  "entrypoints/main/main-meta.ts | switchToDarkTheme": {
    "message": "Passer au thème sombre"
  },
  "entrypoints/main/main-meta.ts | switchToLightTheme": {
    "message": "Passer au thème clair"
  },
  "entrypoints/main/main-meta.ts | switchToSystemPreferredColor": {
    "message": "Passer au thème de couleur préféré du système"
  },
  "entrypoints/main/main-meta.ts | systemPreference": {
    "message": "Préférence système"
  },
  "entrypoints/main/main-meta.ts | theme": {
    "message": "Thème :"
  },
  "entrypoints/main/main-meta.ts | toggleDrawer": {
    "message": "Afficher ou masquer le panneau"
  },
  "entrypoints/main/main-meta.ts | undockIntoSeparateWindow": {
    "message": "Détacher dans une fenêtre distincte"
  },
  "entrypoints/main/main-meta.ts | undocked": {
    "message": "Détaché"
  },
  "entrypoints/main/main-meta.ts | useAutomaticPanelLayout": {
    "message": "Utiliser la disposition automatique des panneaux"
  },
  "entrypoints/main/main-meta.ts | useHorizontalPanelLayout": {
    "message": "Utiliser la disposition horizontale des panneaux"
  },
  "entrypoints/main/main-meta.ts | useVerticalPanelLayout": {
    "message": "Utiliser la disposition verticale des panneaux"
  },
  "entrypoints/main/main-meta.ts | vertical": {
    "message": "verticale"
  },
  "entrypoints/main/main-meta.ts | zoomIn": {
    "message": "Zoom avant"
  },
  "entrypoints/main/main-meta.ts | zoomOut": {
    "message": "Zoom arrière"
  },
  "entrypoints/node_app/NodeConnectionsPanel.ts | addConnection": {
    "message": "Ajouter une connexion"
  },
  "entrypoints/node_app/NodeConnectionsPanel.ts | networkAddressEgLocalhost": {
    "message": "Adresse réseau (ex. : localhost:9229)"
  },
  "entrypoints/node_app/NodeConnectionsPanel.ts | noConnectionsSpecified": {
    "message": "Aucune connexion spécifiée"
  },
  "entrypoints/node_app/NodeConnectionsPanel.ts | nodejsDebuggingGuide": {
    "message": "Guide de débogage Node.js"
  },
  "entrypoints/node_app/NodeConnectionsPanel.ts | specifyNetworkEndpointAnd": {
    "message": "Spécifiez le point de terminaison du réseau, et les outils de développement s'y connecteront automatiquement. Consultez le {PH1} pour en savoir plus."
  },
  "entrypoints/node_app/NodeMain.ts | main": {
    "message": "Principale"
  },
  "entrypoints/node_app/NodeMain.ts | nodejsS": {
    "message": "Node.js : {PH1}"
  },
  "entrypoints/node_app/node_app.ts | connection": {
    "message": "Connexion"
  },
  "entrypoints/node_app/node_app.ts | networkTitle": {
    "message": "Nœud"
  },
  "entrypoints/node_app/node_app.ts | node": {
    "message": "nœud"
  },
  "entrypoints/node_app/node_app.ts | showConnection": {
    "message": "Afficher la connexion"
  },
  "entrypoints/node_app/node_app.ts | showNode": {
    "message": "Afficher le nœud"
  },
  "entrypoints/worker_app/WorkerMain.ts | main": {
    "message": "Principale"
  },
  "generated/Deprecation.ts | AuthorizationCoveredByWildcard": {
    "message": "L'autorisation ne sera pas couverte par le caractère générique (*) dans la gestion Access-Control-Allow-Headers de CORS."
  },
  "generated/Deprecation.ts | CSSSelectorInternalMediaControlsOverlayCastButton": {
    "message": "Pour désactiver l'intégration Cast par défaut, utilisez l'attribut disableRemotePlayback plutôt que le sélecteur -internal-media-controls-overlay-cast-button."
  },
  "generated/Deprecation.ts | CSSValueAppearanceNonStandard": {
    "message": "Les valeurs d'apparence CSS inner-spin-button, media-slider, media-sliderthumb, media-volume-slider, media-volume-sliderthumb, push-button, searchfield-cancel-button, slider-horizontal, sliderthumb-horizontal, sliderthumb-vertical et square-button ne sont pas standardisées et seront supprimées."
  },
  "generated/Deprecation.ts | CSSValueAppearanceSliderVertical": {
    "message": "La valeur d'apparence CSS slider-vertical n'est pas standardisée et sera supprimée."
  },
  "generated/Deprecation.ts | CanRequestURLHTTPContainingNewline": {
    "message": "Les requêtes de ressources dont les URL contiennent à la fois des espaces blancs \\(n|r|t) et des signes \"strictement inférieur à\" (<) supprimés sont bloquées. Veuillez supprimer les nouvelles lignes et encoder les symboles \"strictement inférieur à\" depuis des emplacements tels que des valeurs d'attribut d'élément pour pouvoir charger ces ressources."
  },
  "generated/Deprecation.ts | ChromeLoadTimesConnectionInfo": {
    "message": "chrome.loadTimes() est obsolète. Utilisez l'API normalisée à la place : Navigation Timing 2."
  },
  "generated/Deprecation.ts | ChromeLoadTimesFirstPaintAfterLoadTime": {
    "message": "chrome.loadTimes() est obsolète. Veuillez utiliser l'API normalisée à la place : Paint Timing."
  },
  "generated/Deprecation.ts | ChromeLoadTimesWasAlternateProtocolAvailable": {
    "message": "chrome.loadTimes() est obsolète. Veuillez utiliser l'API normalisée à la place : nextHopProtocol dans Navigation Timing 2."
  },
  "generated/Deprecation.ts | CookieWithTruncatingChar": {
    "message": "Les cookies contenant un caractère \\(0|r|n) ne seront pas tronqués, mais refusés."
  },
  "generated/Deprecation.ts | CrossOriginAccessBasedOnDocumentDomain": {
    "message": "La possibilité de contourner la règle d'origine commune en définissant document.domain est obsolète et sera désactivée par défaut. Cet avertissement concerne l'accès multi-origine activé en définissant document.domain."
  },
  "generated/Deprecation.ts | CrossOriginWindowAlert": {
    "message": "La possibilité de déclencher window.alert depuis des iFrames multi-origines est obsolète et sera supprimée."
  },
  "generated/Deprecation.ts | CrossOriginWindowConfirm": {
    "message": "La possibilité de déclencher window.confirm depuis des iFrames multi-origines est obsolète et sera supprimée."
  },
  "generated/Deprecation.ts | DOMMutationEvents": {
    "message": "Les événements de mutation DOM, y compris DOMSubtreeModified, DOMNodeInserted, DOMNodeRemoved, DOMNodeRemovedFromDocument, DOMNodeInsertedIntoDocument et DOMCharacterDataModified, sont obsolètes (https://w3c.github.io/uievents/#legacy-event-types) et seront supprimés. Veuillez utiliser MutationObserver à la place."
  },
  "generated/Deprecation.ts | DataUrlInSvgUse": {
    "message": "La prise en charge des URL \"data\" dans SVGUseElement est obsolète et sera supprimée à l'avenir."
  },
  "generated/Deprecation.ts | DocumentDomainSettingWithoutOriginAgentClusterHeader": {
    "message": "La possibilité de contourner la règle d'origine commune en définissant document.domain est obsolète et sera désactivée par défaut. Pour continuer à utiliser cette fonctionnalité, veuillez désactiver les clusters d'agents selon l'origine en envoyant un en-tête Origin-Agent-Cluster: ?0 avec la réponse HTTP pour le document et les frames. Pour en savoir plus, consultez https://developer.chrome.com/blog/immutable-document-domain/."
  },
  "generated/Deprecation.ts | GeolocationInsecureOrigin": {
    "message": "getCurrentPosition() et watchPosition() ne fonctionnent plus sur les origines non sécurisées. Pour utiliser cette fonctionnalité, vous devriez envisager d'utiliser une origine sûre pour votre application, par exemple HTTPS. Pour en savoir plus, consultez https://goo.gle/chrome-insecure-origins."
  },
  "generated/Deprecation.ts | GeolocationInsecureOriginDeprecatedNotRemoved": {
    "message": "getCurrentPosition() et watchPosition() sont obsolètes pour les origines non sécurisées. Pour utiliser cette fonctionnalité, vous devriez envisager d'utiliser une origine sûre pour votre application, par exemple HTTPS. Pour en savoir plus, consultez https://goo.gle/chrome-insecure-origins."
  },
  "generated/Deprecation.ts | GetUserMediaInsecureOrigin": {
    "message": "getUserMedia() ne fonctionne plus sur les origines non sécurisées. Pour utiliser cette fonctionnalité, vous devriez envisager d'utiliser une origine sûre pour votre application, par exemple HTTPS. Pour en savoir plus, consultez https://goo.gle/chrome-insecure-origins."
  },
  "generated/Deprecation.ts | HostCandidateAttributeGetter": {
    "message": "RTCPeerConnectionIceErrorEvent.hostCandidate est obsolète. Veuillez utiliser RTCPeerConnectionIceErrorEvent.address ou RTCPeerConnectionIceErrorEvent.port à la place."
  },
  "generated/Deprecation.ts | IdentityInCanMakePaymentEvent": {
    "message": "Le point de départ du marchand et les données arbitraires provenant de l'événement service worker canmakepayment sont obsolètes et seront supprimés : topOrigin, paymentRequestOrigin, methodData et modifiers."
  },
  "generated/Deprecation.ts | InsecurePrivateNetworkSubresourceRequest": {
    "message": "Le site Web a demandé une sous-ressource auprès d'un réseau auquel il pouvait uniquement accéder en raison de la position privilégiée de ses utilisateurs sur le réseau. Ces requêtes exposent les serveurs et les appareils non publics à Internet, ce qui augmente le risque d'attaque par falsification des requêtes intersites (CSRF) et/ou les fuites d'informations. Pour réduire ces risques, Chrome n'accepte plus les requêtes auprès de sous-ressources non publiques émises depuis des contextes non sécurisés et va commencer à les bloquer."
  },
  "generated/Deprecation.ts | InterestGroupDailyUpdateUrl": {
    "message": "Le champ dailyUpdateUrl de InterestGroups transmis à joinAdInterestGroup() a été renommé updateUrl pour refléter plus précisément son comportement."
  },
  "generated/Deprecation.ts | LocalCSSFileExtensionRejected": {
    "message": "CSS ne peut pas être chargé depuis des URL file:, sauf si elles se terminent par une extension de fichier .css."
  },
  "generated/Deprecation.ts | MediaSourceAbortRemove": {
    "message": "La possibilité d'utiliser SourceBuffer.abort() pour annuler la suppression de la plage asynchrone par remove() est obsolète, en raison d'une modification de la spécification. Sa prise en charge sera supprimée prochainement. Écoutez plutôt l'événement updateend. abort() sert uniquement à annuler l'ajout d'un contenu multimédia asynchrone ou à réinitialiser l'état de l'analyseur."
  },
  "generated/Deprecation.ts | MediaSourceDurationTruncatingBuffered": {
    "message": "La possibilité de régler MediaSource.duration à une valeur inférieure au code temporel de présentation le plus élevé de n'importe quel frame codé en mémoire tampon est obsolète en raison d'une modification de la spécification. La possibilité de supprimer implicitement des contenus multimédias tronqués en mémoire tampon sera supprimée prochainement. À la place, vous devriez exécuter remove(newDuration, oldDuration) de manière explicite sur tous les sourceBuffers, où newDuration < oldDuration."
  },
  "generated/Deprecation.ts | NoSysexWebMIDIWithoutPermission": {
    "message": "Web MIDI demandera une autorisation d'utilisation, même si le SysEx n'est pas spécifié dans les MIDIOptions."
  },
  "generated/Deprecation.ts | NotificationInsecureOrigin": {
    "message": "L'API Notification ne peut plus être utilisée depuis des origines non sécurisées. Vous devriez envisager d'utiliser une origine sûre pour votre application, par exemple HTTPS. Pour en savoir plus, consultez https://goo.gle/chrome-insecure-origins."
  },
  "generated/Deprecation.ts | NotificationPermissionRequestedIframe": {
    "message": "L'autorisation pour l'API Notification ne peut plus être demandée depuis un iFrame multi-origine. À la place, vous devriez envisager de demander l'autorisation depuis un frame de haut niveau ou d'ouvrir une nouvelle fenêtre."
  },
  "generated/Deprecation.ts | ObsoleteCreateImageBitmapImageOrientationNone": {
    "message": "L'option imageOrientation: 'none' dans createImageBitmap est obsolète. Veuillez plutôt utiliser createImageBitmap avec l'option {imageOrientation: 'from-image'}."
  },
  "generated/Deprecation.ts | ObsoleteWebRtcCipherSuite": {
    "message": "Votre partenaire négocie une version obsolète de (D)TLS. Contactez-le pour qu'il corrige ce problème."
  },
  "generated/Deprecation.ts | OverflowVisibleOnReplacedElement": {
    "message": "Si vous spécifiez overflow: visible sur \"img\", \"video\" et \"canvas\", ces tags risquent de générer du contenu visuel en dehors des limites de l'élément. Voir https://github.com/WICG/shared-element-transitions/blob/main/debugging_overflow_on_images.md."
  },
  "generated/Deprecation.ts | PaymentInstruments": {
    "message": "paymentManager.instruments est obsolète. Veuillez utiliser l'installation \"juste-à-temps\" pour les gestionnaires de paiement."
  },
  "generated/Deprecation.ts | PaymentRequestCSPViolation": {
    "message": "Votre appel PaymentRequest a contourné la directive CSP (Content-Security-Policy) connect-src. Ce contournement est obsolète. Veuillez ajouter l'identifiant du mode de paiement de l'API PaymentRequest (dans le champ supportedMethods) à la directive CSP connect-src."
  },
  "generated/Deprecation.ts | PersistentQuotaType": {
    "message": "StorageType.persistent est obsolète. Veuillez plutôt utiliser la version normalisée navigator.storage."
  },
  "generated/Deprecation.ts | PictureSourceSrc": {
    "message": "L'élément <source src> avec un parent <picture> n'est pas valide et est donc ignoré. Veuillez utiliser l'attribut <source srcset> à la place."
  },
  "generated/Deprecation.ts | PrefixedCancelAnimationFrame": {
    "message": "webkitCancelAnimationFrame est spécifique au fournisseur. Veuillez plutôt utiliser la méthode standard cancelAnimationFrame."
  },
  "generated/Deprecation.ts | PrefixedRequestAnimationFrame": {
    "message": "webkitRequestAnimationFrame est spécifique au fournisseur. Veuillez plutôt utiliser la méthode standard requestAnimationFrame."
  },
  "generated/Deprecation.ts | PrefixedVideoDisplayingFullscreen": {
    "message": "HTMLVideoElement.webkitDisplayingFullscreen est obsolète. Veuillez plutôt utiliser Document.fullscreenElement."
  },
  "generated/Deprecation.ts | PrefixedVideoEnterFullScreen": {
    "message": "HTMLVideoElement.webkitEnterFullScreen() est obsolète. Veuillez plutôt utiliser Element.requestFullscreen()."
  },
  "generated/Deprecation.ts | PrefixedVideoEnterFullscreen": {
    "message": "HTMLVideoElement.webkitEnterFullscreen() est obsolète. Veuillez plutôt utiliser Element.requestFullscreen()."
  },
  "generated/Deprecation.ts | PrefixedVideoExitFullScreen": {
    "message": "HTMLVideoElement.webkitExitFullScreen() est obsolète. Veuillez plutôt utiliser Document.exitFullscreen()."
  },
  "generated/Deprecation.ts | PrefixedVideoExitFullscreen": {
    "message": "HTMLVideoElement.webkitExitFullscreen() est obsolète. Veuillez plutôt utiliser Document.exitFullscreen()."
  },
  "generated/Deprecation.ts | PrefixedVideoSupportsFullscreen": {
    "message": "HTMLVideoElement.webkitSupportsFullscreen est obsolète. Veuillez plutôt utiliser Document.fullscreenEnabled."
  },
  "generated/Deprecation.ts | PrivacySandboxExtensionsAPI": {
    "message": "Nous abandonnons l'API chrome.privacy.websites.privacySandboxEnabled, bien qu'elle reste active pour assurer la rétrocompatibilité jusqu'à la version M113. Veuillez plutôt utiliser chrome.privacy.websites.topicsEnabled, chrome.privacy.websites.fledgeEnabled et chrome.privacy.websites.adMeasurementEnabled. Consultez https://developer.chrome.com/docs/extensions/reference/privacy/#property-websites-privacySandboxEnabled."
  },
  "generated/Deprecation.ts | RTCConstraintEnableDtlsSrtpFalse": {
    "message": "La contrainte DtlsSrtpKeyAgreement a été supprimée. Vous avez spécifié une valeur false pour cette contrainte, ce qui est interprété comme une tentative d'utiliser la méthode SDES key negotiation, qui a été supprimée. Cette fonctionnalité a été supprimée. À la place, utilisez un service compatible avec DTLS key negotiation."
  },
  "generated/Deprecation.ts | RTCConstraintEnableDtlsSrtpTrue": {
    "message": "La contrainte DtlsSrtpKeyAgreement a été supprimée. Vous avez spécifié une valeur true pour cette contrainte, qui est sans effet. Vous pouvez toutefois la supprimer pour plus de clarté."
  },
  "generated/Deprecation.ts | RTCPeerConnectionGetStatsLegacyNonCompliant": {
    "message": "La méthode getStats() basée sur le rappel est obsolète et sera supprimée. Utilisez plutôt la méthode getStats() conforme aux spécifications."
  },
  "generated/Deprecation.ts | RangeExpand": {
    "message": "Range.expand() est obsolète. Veuillez plutôt utiliser Selection.modify()."
  },
  "generated/Deprecation.ts | RequestedSubresourceWithEmbeddedCredentials": {
    "message": "Les requêtes de sous-ressources dont les URL contiennent des identifiants intégrés (https://user:pass@host/, par exemple) sont bloquées."
  },
  "generated/Deprecation.ts | RtcpMuxPolicyNegotiate": {
    "message": "L'option rtcpMuxPolicy est obsolète et sera supprimée."
  },
  "generated/Deprecation.ts | SharedArrayBufferConstructedWithoutIsolation": {
    "message": "SharedArrayBuffer nécessite une isolation multi-origine. Pour en savoir plus, consultez https://developer.chrome.com/blog/enabling-shared-array-buffer/."
  },
  "generated/Deprecation.ts | TextToSpeech_DisallowedByAutoplay": {
    "message": "La fonctionnalité speechSynthesis.speak() sans activation de l'utilisateur est obsolète et sera supprimée."
  },
  "generated/Deprecation.ts | UnloadHandler": {
    "message": "Les écouteurs d'événements de déchargement sont obsolètes et seront supprimés."
  },
  "generated/Deprecation.ts | V8SharedArrayBufferConstructedInExtensionWithoutIsolation": {
    "message": "Les extensions doivent activer l'isolation multi-origine pour pouvoir continuer à utiliser SharedArrayBuffer. Consultez https://developer.chrome.com/docs/extensions/mv3/cross-origin-isolation/."
  },
  "generated/Deprecation.ts | WebSQL": {
    "message": "Web SQL est obsolète. Veuillez utiliser SQLite WebAssembly ou Indexed Database"
  },
  "generated/Deprecation.ts | WindowPlacementPermissionDescriptorUsed": {
    "message": "Le descripteur d'autorisation window-placement est obsolète. Utilisez plutôt window-management. Pour obtenir de l'aide, consultez https://bit.ly/window-placement-rename."
  },
  "generated/Deprecation.ts | WindowPlacementPermissionPolicyParsed": {
    "message": "La règle d'autorisation window-placement est obsolète. Utilisez plutôt window-management. Pour obtenir de l'aide, consultez https://bit.ly/window-placement-rename."
  },
  "generated/Deprecation.ts | XHRJSONEncodingDetection": {
    "message": "Les réponses json n'acceptent pas l'encodage UTF-16 dans XMLHttpRequest"
  },
  "generated/Deprecation.ts | XMLHttpRequestSynchronousInNonWorkerOutsideBeforeUnload": {
    "message": "La requête XMLHttpRequest synchrone sur le thread principal est obsolète en raison de son impact négatif sur l'expérience de l'utilisateur final. Si vous avez besoin d'aide, consultez https://xhr.spec.whatwg.org/."
  },
  "generated/Deprecation.ts | XRSupportsSession": {
    "message": "supportsSession() est obsolète. Veuillez utiliser isSessionSupported() et vérifier la valeur booléenne résolue à la place."
  },
  "models/bindings/ContentProviderBasedProject.ts | unknownErrorLoadingFile": {
    "message": "Erreur inconnue lors du chargement du fichier"
  },
  "models/bindings/DebuggerLanguagePlugins.ts | debugSymbolsIncomplete": {
    "message": "Les informations de débogage pour la fonction {PH1} sont incomplètes"
  },
  "models/bindings/DebuggerLanguagePlugins.ts | errorInDebuggerLanguagePlugin": {
    "message": "Erreur dans le plug-in de langage du débogueur : {PH1}"
  },
  "models/bindings/DebuggerLanguagePlugins.ts | failedToLoadDebugSymbolsFor": {
    "message": "[{PH1}] Échec du chargement des symboles de débogage pour {PH2} ({PH3})"
  },
  "models/bindings/DebuggerLanguagePlugins.ts | failedToLoadDebugSymbolsForFunction": {
    "message": "Aucune information de débogage pour la fonction {PH1}"
  },
  "models/bindings/DebuggerLanguagePlugins.ts | loadedDebugSymbolsForButDidnt": {
    "message": "[{PH1}] Symboles de débogage chargés pour {PH2}, mais aucun fichier source trouvé"
  },
  "models/bindings/DebuggerLanguagePlugins.ts | loadedDebugSymbolsForFound": {
    "message": "[{PH1}] Symboles de débogage chargés pour {PH2}, {PH3} fichier(s) source(s) trouvé(s)"
  },
  "models/bindings/DebuggerLanguagePlugins.ts | loadingDebugSymbolsFor": {
    "message": "[{PH1}] Chargement des symboles de débogage pour {PH2}…"
  },
  "models/bindings/DebuggerLanguagePlugins.ts | loadingDebugSymbolsForVia": {
    "message": "[{PH1}] Chargement des symboles de débogage pour {PH2} (via {PH3})…"
  },
  "models/bindings/IgnoreListManager.ts | addAllContentScriptsToIgnoreList": {
    "message": "Ajouter tous les scripts d'extension à la liste des éléments à ignorer"
  },
  "models/bindings/IgnoreListManager.ts | addAllThirdPartyScriptsToIgnoreList": {
    "message": "Ajouter tous les scripts tiers à la liste des éléments à ignorer"
  },
  "models/bindings/IgnoreListManager.ts | addDirectoryToIgnoreList": {
    "message": "Ajouter un répertoire à la liste des éléments à ignorer"
  },
  "models/bindings/IgnoreListManager.ts | addScriptToIgnoreList": {
    "message": "Ajouter un script à la liste des éléments à ignorer"
  },
  "models/bindings/IgnoreListManager.ts | removeFromIgnoreList": {
    "message": "Supprimer de la liste des éléments à ignorer"
  },
  "models/bindings/ResourceScriptMapping.ts | liveEditCompileFailed": {
    "message": "Échec de la compilation du script LiveEdit : {PH1}"
  },
  "models/bindings/ResourceScriptMapping.ts | liveEditFailed": {
    "message": "Échec de LiveEdit : {PH1}"
  },
  "models/emulation/DeviceModeModel.ts | devicePixelRatioMustBeANumberOr": {
    "message": "Le rapport de pixels de l'appareil doit être un nombre ou vide."
  },
  "models/emulation/DeviceModeModel.ts | devicePixelRatioMustBeGreater": {
    "message": "Le rapport de pixels de l'appareil doit être supérieur ou égal à {PH1}."
  },
  "models/emulation/DeviceModeModel.ts | devicePixelRatioMustBeLessThanOr": {
    "message": "Le rapport de pixels de l'appareil doit être inférieur ou égal à {PH1}."
  },
  "models/emulation/DeviceModeModel.ts | heightCannotBeEmpty": {
    "message": "Vous devez indiquer une hauteur."
  },
  "models/emulation/DeviceModeModel.ts | heightMustBeANumber": {
    "message": "La hauteur doit être un nombre."
  },
  "models/emulation/DeviceModeModel.ts | heightMustBeGreaterThanOrEqualTo": {
    "message": "La hauteur doit être supérieure ou égale à {PH1}."
  },
  "models/emulation/DeviceModeModel.ts | heightMustBeLessThanOrEqualToS": {
    "message": "La hauteur doit être inférieure ou égale à {PH1}."
  },
  "models/emulation/DeviceModeModel.ts | widthCannotBeEmpty": {
    "message": "Vous devez indiquer la largeur."
  },
  "models/emulation/DeviceModeModel.ts | widthMustBeANumber": {
    "message": "La largeur doit être un nombre."
  },
  "models/emulation/DeviceModeModel.ts | widthMustBeGreaterThanOrEqualToS": {
    "message": "La largeur doit être supérieure ou égale à {PH1}."
  },
  "models/emulation/DeviceModeModel.ts | widthMustBeLessThanOrEqualToS": {
    "message": "La largeur doit être inférieure ou égale à {PH1}."
  },
  "models/emulation/EmulatedDevices.ts | laptopWithHiDPIScreen": {
    "message": "Ordinateur portable avec écran HiDPI"
  },
  "models/emulation/EmulatedDevices.ts | laptopWithMDPIScreen": {
    "message": "Ordinateur portable avec écran MDPI"
  },
  "models/emulation/EmulatedDevices.ts | laptopWithTouch": {
    "message": "Ordinateur portable avec écran tactile"
  },
  "models/har/Writer.ts | collectingContent": {
    "message": "Récupération du contenu…"
  },
  "models/har/Writer.ts | writingFile": {
    "message": "Écriture du fichier…"
  },
  "models/issues_manager/BounceTrackingIssue.ts | bounceTrackingMitigations": {
    "message": "Mesures d'atténuation du suivi des rebonds"
  },
  "models/issues_manager/ClientHintIssue.ts | clientHintsInfrastructure": {
    "message": "Infrastructure Client Hints"
  },
  "models/issues_manager/ContentSecurityPolicyIssue.ts | contentSecurityPolicyEval": {
    "message": "Content Security Policy - Évaluation"
  },
  "models/issues_manager/ContentSecurityPolicyIssue.ts | contentSecurityPolicyInlineCode": {
    "message": "Content Security Policy - Code intégré"
  },
  "models/issues_manager/ContentSecurityPolicyIssue.ts | contentSecurityPolicySource": {
    "message": "Content Security Policy - Listes d'autorisation de sources"
  },
  "models/issues_manager/ContentSecurityPolicyIssue.ts | trustedTypesFixViolations": {
    "message": "Trusted Types - Résoudre les non-respects"
  },
  "models/issues_manager/ContentSecurityPolicyIssue.ts | trustedTypesPolicyViolation": {
    "message": "Trusted Types : non-respect de la règle"
  },
  "models/issues_manager/CookieDeprecationMetadataIssue.ts | thirdPartyPhaseoutExplained": {
    "message": "Se préparer à abandonner progressivement les cookies tiers"
  },
  "models/issues_manager/CookieIssue.ts | aSecure": {
    "message": "sécurisé"
  },
  "models/issues_manager/CookieIssue.ts | anInsecure": {
    "message": "an insecure"
  },
  "models/issues_manager/CookieIssue.ts | fileCrosSiteRedirectBug": {
    "message": "Signaler un bug"
  },
  "models/issues_manager/CookieIssue.ts | firstPartySetsExplained": {
    "message": "First-Party Sets et l'attribut SameParty"
  },
  "models/issues_manager/CookieIssue.ts | howSchemefulSamesiteWorks": {
    "message": "Fonctionnement de \"Schemeful Same-Site\""
  },
  "models/issues_manager/CookieIssue.ts | samesiteCookiesExplained": {
    "message": "Explication des cookies SameSite"
  },
  "models/issues_manager/CookieIssue.ts | thirdPartyPhaseoutExplained": {
    "message": "Se préparer à abandonner progressivement les cookies tiers"
  },
  "models/issues_manager/CorsIssue.ts | CORS": {
    "message": "Cross-Origin Resource Sharing (CORS)"
  },
  "models/issues_manager/CorsIssue.ts | corsPrivateNetworkAccess": {
    "message": "Accès réseau privé"
  },
  "models/issues_manager/CrossOriginEmbedderPolicyIssue.ts | coopAndCoep": {
    "message": "COOP et COEP"
  },
  "models/issues_manager/CrossOriginEmbedderPolicyIssue.ts | samesiteAndSameorigin": {
    "message": "Same-Site et Same-Origin"
  },
  "models/issues_manager/DeprecationIssue.ts | feature": {
    "message": "Pour en savoir plus, consultez la page d'état de la fonctionnalité."
  },
  "models/issues_manager/DeprecationIssue.ts | milestone": {
    "message": "Cette modification prendra effet dans la version majeure {milestone}."
  },
  "models/issues_manager/DeprecationIssue.ts | title": {
    "message": "Fonctionnalité obsolète utilisée"
  },
  "models/issues_manager/FederatedAuthRequestIssue.ts | fedCm": {
    "message": "API Federated Credential Management"
  },
  "models/issues_manager/FederatedAuthUserInfoRequestIssue.ts | fedCmUserInfo": {
    "message": "API Federated Credential Management User Info"
  },
  "models/issues_manager/GenericIssue.ts | autocompleteAttributePageTitle": {
    "message": "Attribut HTML : saisie semi-automatique"
  },
  "models/issues_manager/GenericIssue.ts | corbExplainerPageTitle": {
    "message": "Explication de la fonctionnalité CORB"
  },
  "models/issues_manager/GenericIssue.ts | crossOriginPortalPostMessage": {
    "message": "Portails - Canaux de communication de même origine"
  },
  "models/issues_manager/GenericIssue.ts | howDoesAutofillWorkPageTitle": {
    "message": "Comment fonctionne la saisie automatique ?"
  },
  "models/issues_manager/GenericIssue.ts | inputFormElementPageTitle": {
    "message": "L'élément de saisie du formulaire"
  },
  "models/issues_manager/GenericIssue.ts | labelFormlementsPageTitle": {
    "message": "Les éléments du libellé"
  },
  "models/issues_manager/HeavyAdIssue.ts | handlingHeavyAdInterventions": {
    "message": "Gérer les interventions sur les annonces lourdes"
  },
  "models/issues_manager/Issue.ts | breakingChangeIssue": {
    "message": "Problème de modification destructive : la page peut cesser de fonctionner dans une prochaine version de Chrome"
  },
  "models/issues_manager/Issue.ts | breakingChanges": {
    "message": "Modifications destructives"
  },
  "models/issues_manager/Issue.ts | improvementIssue": {
    "message": "Problème d'amélioration : il est possible d'améliorer la page"
  },
  "models/issues_manager/Issue.ts | improvements": {
    "message": "Améliorations"
  },
  "models/issues_manager/Issue.ts | pageErrorIssue": {
    "message": "Erreur : la page ne fonctionne pas correctement"
  },
  "models/issues_manager/Issue.ts | pageErrors": {
    "message": "Erreurs dans les pages"
  },
  "models/issues_manager/LowTextContrastIssue.ts | colorAndContrastAccessibility": {
    "message": "Accessibilité aux couleurs et contrastes"
  },
  "models/issues_manager/MixedContentIssue.ts | preventingMixedContent": {
    "message": "Empêcher le contenu mixte"
  },
  "models/issues_manager/QuirksModeIssue.ts | documentCompatibilityMode": {
    "message": "Mode de compatibilité du document"
  },
  "models/issues_manager/SharedArrayBufferIssue.ts | enablingSharedArrayBuffer": {
    "message": "Activer SharedArrayBuffer"
  },
  "models/logs/NetworkLog.ts | anonymous": {
    "message": "<anonyme>"
  },
  "models/logs/logs-meta.ts | clear": {
    "message": "effacer"
  },
  "models/logs/logs-meta.ts | doNotPreserveLogOnPageReload": {
    "message": "Ne pas conserver le journal lors de la navigation sur la page/l'actualisation de la page"
  },
  "models/logs/logs-meta.ts | preserve": {
    "message": "conserver"
  },
  "models/logs/logs-meta.ts | preserveLog": {
    "message": "Conserver le journal"
  },
  "models/logs/logs-meta.ts | preserveLogOnPageReload": {
    "message": "Conserver le journal lors de la navigation/de l'actualisation de la page"
  },
  "models/logs/logs-meta.ts | recordNetworkLog": {
    "message": "Enregistrer le journal réseau"
  },
  "models/logs/logs-meta.ts | reset": {
    "message": "réinitialiser"
  },
  "models/persistence/EditFileSystemView.ts | add": {
    "message": "Ajouter"
  },
  "models/persistence/EditFileSystemView.ts | enterAPath": {
    "message": "Saisissez un chemin d'accès"
  },
  "models/persistence/EditFileSystemView.ts | enterAUniquePath": {
    "message": "Saisissez un chemin unique"
  },
  "models/persistence/EditFileSystemView.ts | excludedFolders": {
    "message": "Dossiers exclus"
  },
  "models/persistence/EditFileSystemView.ts | folderPath": {
    "message": "Chemin d'accès au dossier"
  },
  "models/persistence/EditFileSystemView.ts | none": {
    "message": "Aucun"
  },
  "models/persistence/EditFileSystemView.ts | sViaDevtools": {
    "message": "{PH1} (via .devtools)"
  },
  "models/persistence/IsolatedFileSystem.ts | blobCouldNotBeLoaded": {
    "message": "Impossible de charger le blob."
  },
  "models/persistence/IsolatedFileSystem.ts | cantReadFileSS": {
    "message": "Impossible de lire le fichier : {PH1} : {PH2}"
  },
  "models/persistence/IsolatedFileSystem.ts | fileSystemErrorS": {
    "message": "Erreur du système de fichiers : {PH1}"
  },
  "models/persistence/IsolatedFileSystem.ts | linkedToS": {
    "message": "Associé à {PH1}"
  },
  "models/persistence/IsolatedFileSystem.ts | unknownErrorReadingFileS": {
    "message": "Erreur inconnue lors de la lecture du fichier : {PH1}"
  },
  "models/persistence/IsolatedFileSystemManager.ts | unableToAddFilesystemS": {
    "message": "Impossible d'ajouter le système de fichiers : {PH1}"
  },
  "models/persistence/PersistenceActions.ts | openInContainingFolder": {
    "message": "Ouvrir dans le dossier"
  },
  "models/persistence/PersistenceActions.ts | overrideContent": {
    "message": "Remplacer le contenu"
  },
  "models/persistence/PersistenceActions.ts | overrideSourceMappedFileExplanation": {
    "message": "\"{PH1}\" est un fichier mappé source et ne peut pas être remplacé."
  },
  "models/persistence/PersistenceActions.ts | overrideSourceMappedFileWarning": {
    "message": "Ignorer plutôt \"{PH1}\" ?"
  },
  "models/persistence/PersistenceActions.ts | saveAs": {
    "message": "Enregistrer sous…"
  },
  "models/persistence/PersistenceActions.ts | saveImage": {
    "message": "Enregistrer l'image"
  },
  "models/persistence/PersistenceActions.ts | showOverrides": {
    "message": "Afficher tous les remplacements"
  },
  "models/persistence/PersistenceUtils.ts | linkedToS": {
    "message": "Associé à {PH1}"
  },
  "models/persistence/PersistenceUtils.ts | linkedToSourceMapS": {
    "message": "Associé à la carte source : {PH1}"
  },
  "models/persistence/PlatformFileSystem.ts | unableToReadFilesWithThis": {
    "message": "PlatformFileSystem ne peut pas lire les fichiers."
  },
  "models/persistence/WorkspaceSettingsTab.ts | addFolder": {
    "message": "Ajouter un dossier…"
  },
  "models/persistence/WorkspaceSettingsTab.ts | folderExcludePattern": {
    "message": "Schéma d'exclusion de dossier"
  },
  "models/persistence/WorkspaceSettingsTab.ts | mappingsAreInferredAutomatically": {
    "message": "Les mises en correspondance sont déduites automatiquement."
  },
  "models/persistence/WorkspaceSettingsTab.ts | remove": {
    "message": "Supprimer"
  },
  "models/persistence/WorkspaceSettingsTab.ts | workspace": {
    "message": "Espace de travail"
  },
  "models/persistence/persistence-meta.ts | disableOverrideNetworkRequests": {
    "message": "Désactiver le remplacement des requêtes réseau"
  },
  "models/persistence/persistence-meta.ts | enableLocalOverrides": {
    "message": "Activer les remplacements locaux"
  },
  "models/persistence/persistence-meta.ts | enableOverrideNetworkRequests": {
    "message": "Activer le remplacement des requêtes réseau"
  },
  "models/persistence/persistence-meta.ts | interception": {
    "message": "interception"
  },
  "models/persistence/persistence-meta.ts | network": {
    "message": "réseau"
  },
  "models/persistence/persistence-meta.ts | override": {
    "message": "remplacement"
  },
  "models/persistence/persistence-meta.ts | request": {
    "message": "requête"
  },
  "models/persistence/persistence-meta.ts | rewrite": {
    "message": "réécriture"
  },
  "models/persistence/persistence-meta.ts | showWorkspace": {
    "message": "Afficher les paramètres de l'espace de travail"
  },
  "models/persistence/persistence-meta.ts | workspace": {
    "message": "Espace de travail"
  },
  "models/timeline_model/TimelineJSProfile.ts | threadS": {
    "message": "Thread {PH1}"
  },
  "models/timeline_model/TimelineModel.ts | dedicatedWorker": {
    "message": "Worker dédié"
  },
  "models/timeline_model/TimelineModel.ts | threadS": {
    "message": "Thread {PH1}"
  },
  "models/timeline_model/TimelineModel.ts | workerS": {
    "message": "Worker – {PH1}"
  },
  "models/timeline_model/TimelineModel.ts | workerSS": {
    "message": "Worker : {PH1} — {PH2}"
  },
  "models/workspace/UISourceCode.ts | index": {
    "message": "(index)"
  },
  "models/workspace/UISourceCode.ts | thisFileWasChangedExternally": {
    "message": "Ce fichier a été modifié en externe. Voulez-vous l'actualiser ?"
  },
  "panels/accessibility/ARIAAttributesView.ts | ariaAttributes": {
    "message": "Attributs ARIA"
  },
  "panels/accessibility/ARIAAttributesView.ts | noAriaAttributes": {
    "message": "Aucun attribut ARIA"
  },
  "panels/accessibility/AXBreadcrumbsPane.ts | accessibilityTree": {
    "message": "Arborescence d'accessibilité"
  },
  "panels/accessibility/AXBreadcrumbsPane.ts | fullTreeExperimentDescription": {
    "message": "L'arborescence d'accessibilité a été déplacée en haut à droite de l'arborescence DOM."
  },
  "panels/accessibility/AXBreadcrumbsPane.ts | fullTreeExperimentName": {
    "message": "Activer l'arborescence d'accessibilité en pleine page"
  },
  "panels/accessibility/AXBreadcrumbsPane.ts | ignored": {
    "message": "Ignoré"
  },
  "panels/accessibility/AXBreadcrumbsPane.ts | reloadRequired": {
    "message": "Actualisation requise pour que le changement prenne effet."
  },
  "panels/accessibility/AXBreadcrumbsPane.ts | scrollIntoView": {
    "message": "Faire défiler jusqu'au contenu"
  },
  "panels/accessibility/AccessibilityNodeView.ts | accessibilityNodeNotExposed": {
    "message": "Nœud d'accessibilité non exposé"
  },
  "panels/accessibility/AccessibilityNodeView.ts | ancestorChildrenAreAll": {
    "message": "Tous les enfants de l'ancêtre sont des enfants de présentation : "
  },
  "panels/accessibility/AccessibilityNodeView.ts | computedProperties": {
    "message": "Propriétés calculées"
  },
  "panels/accessibility/AccessibilityNodeView.ts | elementHasEmptyAltText": {
    "message": "Pas de texte alternatif pour cet élément."
  },
  "panels/accessibility/AccessibilityNodeView.ts | elementHasPlaceholder": {
    "message": "Cet élément possède {PH1}."
  },
  "panels/accessibility/AccessibilityNodeView.ts | elementIsHiddenBy": {
    "message": "Élément masqué par une boîte de dialogue active : "
  },
  "panels/accessibility/AccessibilityNodeView.ts | elementIsHiddenByChildTree": {
    "message": "L'élément est masqué par l'arborescence enfant : "
  },
  "panels/accessibility/AccessibilityNodeView.ts | elementIsInAnInertSubTree": {
    "message": "L'élément se trouve dans une sous-arborescence inert de "
  },
  "panels/accessibility/AccessibilityNodeView.ts | elementIsInert": {
    "message": "Élément : inert."
  },
  "panels/accessibility/AccessibilityNodeView.ts | elementIsNotRendered": {
    "message": "Élément non affiché."
  },
  "panels/accessibility/AccessibilityNodeView.ts | elementIsNotVisible": {
    "message": "Élément invisible."
  },
  "panels/accessibility/AccessibilityNodeView.ts | elementIsPlaceholder": {
    "message": "Élément : {PH1}."
  },
  "panels/accessibility/AccessibilityNodeView.ts | elementIsPresentational": {
    "message": "Élément de présentation."
  },
  "panels/accessibility/AccessibilityNodeView.ts | elementNotInteresting": {
    "message": "Élément sans importance pour l'accessibilité."
  },
  "panels/accessibility/AccessibilityNodeView.ts | elementsInheritsPresentational": {
    "message": "L'élément hérite le rôle de présentation de "
  },
  "panels/accessibility/AccessibilityNodeView.ts | invalidSource": {
    "message": "Source non valide."
  },
  "panels/accessibility/AccessibilityNodeView.ts | labelFor": {
    "message": "Libellé pour "
  },
  "panels/accessibility/AccessibilityNodeView.ts | noAccessibilityNode": {
    "message": "Aucun nœud d'accessibilité"
  },
  "panels/accessibility/AccessibilityNodeView.ts | noNodeWithThisId": {
    "message": "Aucun nœud avec cet ID."
  },
  "panels/accessibility/AccessibilityNodeView.ts | noTextContent": {
    "message": "Aucun contenu textuel."
  },
  "panels/accessibility/AccessibilityNodeView.ts | notSpecified": {
    "message": "Non défini"
  },
  "panels/accessibility/AccessibilityNodeView.ts | partOfLabelElement": {
    "message": "Partie de l'élément de libellé : "
  },
  "panels/accessibility/AccessibilityNodeView.ts | placeholderIsPlaceholderOnAncestor": {
    "message": "{PH1} est {PH2} sur l'ancêtre : "
  },
  "panels/accessibility/AccessibilityStrings.ts | aHumanreadableVersionOfTheValue": {
    "message": "Version lisible par l'utilisateur de la valeur d'un widget de plage (si nécessaire)."
  },
  "panels/accessibility/AccessibilityStrings.ts | activeDescendant": {
    "message": "Descendant actif"
  },
  "panels/accessibility/AccessibilityStrings.ts | atomicLiveRegions": {
    "message": "Atomic (régions en direct)"
  },
  "panels/accessibility/AccessibilityStrings.ts | busyLiveRegions": {
    "message": "Busy (zones live)"
  },
  "panels/accessibility/AccessibilityStrings.ts | canSetValue": {
    "message": "Peut définir la valeur"
  },
  "panels/accessibility/AccessibilityStrings.ts | checked": {
    "message": "Coché"
  },
  "panels/accessibility/AccessibilityStrings.ts | contents": {
    "message": "Contenu"
  },
  "panels/accessibility/AccessibilityStrings.ts | controls": {
    "message": "Commandes"
  },
  "panels/accessibility/AccessibilityStrings.ts | describedBy": {
    "message": "Décrit par"
  },
  "panels/accessibility/AccessibilityStrings.ts | description": {
    "message": "Description"
  },
  "panels/accessibility/AccessibilityStrings.ts | disabled": {
    "message": "Désactivé"
  },
  "panels/accessibility/AccessibilityStrings.ts | editable": {
    "message": "Modifiable"
  },
  "panels/accessibility/AccessibilityStrings.ts | elementOrElementsWhichFormThe": {
    "message": "Élément ou description de cet élément."
  },
  "panels/accessibility/AccessibilityStrings.ts | elementOrElementsWhichMayFormThe": {
    "message": "Éléments qui peuvent constituer le nom de cet élément."
  },
  "panels/accessibility/AccessibilityStrings.ts | elementOrElementsWhichShouldBe": {
    "message": "Élément ou éléments devant être considérés comme issus du premier élément, bien qu'ils n'en soient pas dérivés dans le DOM."
  },
  "panels/accessibility/AccessibilityStrings.ts | elementOrElementsWhoseContentOr": {
    "message": "Élément(s) dont le contenu ou la présence sont contrôlés par ce widget."
  },
  "panels/accessibility/AccessibilityStrings.ts | elementToWhichTheUserMayChooseTo": {
    "message": "Élément auquel l'utilisateur peut choisir d'accéder après celui-ci, au lieu de l'élément suivant dans l'ordre DOM."
  },
  "panels/accessibility/AccessibilityStrings.ts | expanded": {
    "message": "Développé"
  },
  "panels/accessibility/AccessibilityStrings.ts | focusable": {
    "message": "Sélectionnable"
  },
  "panels/accessibility/AccessibilityStrings.ts | focused": {
    "message": "Élément(s) sélectionné(s)"
  },
  "panels/accessibility/AccessibilityStrings.ts | forARangeWidgetTheMaximumAllowed": {
    "message": "Valeur maximale autorisée pour un widget de plage."
  },
  "panels/accessibility/AccessibilityStrings.ts | forARangeWidgetTheMinimumAllowed": {
    "message": "Valeur minimale autorisée pour un widget de plage."
  },
  "panels/accessibility/AccessibilityStrings.ts | fromAttribute": {
    "message": "À partir de l'attribut"
  },
  "panels/accessibility/AccessibilityStrings.ts | fromCaption": {
    "message": "Source : caption"
  },
  "panels/accessibility/AccessibilityStrings.ts | fromDescription": {
    "message": "À partir de description"
  },
  "panels/accessibility/AccessibilityStrings.ts | fromLabel": {
    "message": "Source : label"
  },
  "panels/accessibility/AccessibilityStrings.ts | fromLabelFor": {
    "message": "Source : label (attribut for=)"
  },
  "panels/accessibility/AccessibilityStrings.ts | fromLabelWrapped": {
    "message": "À partir du label (encapsulé)"
  },
  "panels/accessibility/AccessibilityStrings.ts | fromLegend": {
    "message": "Source : legend"
  },
  "panels/accessibility/AccessibilityStrings.ts | fromNativeHtml": {
    "message": "À partir du code HTML natif"
  },
  "panels/accessibility/AccessibilityStrings.ts | fromPlaceholderAttribute": {
    "message": "À partir de l'attribut de l'espace réservé"
  },
  "panels/accessibility/AccessibilityStrings.ts | fromRubyAnnotation": {
    "message": "Depuis l'annotation Ruby"
  },
  "panels/accessibility/AccessibilityStrings.ts | fromStyle": {
    "message": "À partir du style"
  },
  "panels/accessibility/AccessibilityStrings.ts | fromTitle": {
    "message": "Du titre"
  },
  "panels/accessibility/AccessibilityStrings.ts | hasAutocomplete": {
    "message": "Inclut la saisie semi-automatique"
  },
  "panels/accessibility/AccessibilityStrings.ts | hasPopup": {
    "message": "Avec fenêtre pop-up"
  },
  "panels/accessibility/AccessibilityStrings.ts | help": {
    "message": "Aide"
  },
  "panels/accessibility/AccessibilityStrings.ts | ifAndHowThisElementCanBeEdited": {
    "message": "Indique si cet élément peut être modifié et comment."
  },
  "panels/accessibility/AccessibilityStrings.ts | ifThisElementMayReceiveLive": {
    "message": "Indique si cet élément peut recevoir des mises à jour en direct, si toute la région active doit être présentée à l'utilisateur lors des modifications, ou uniquement les nœuds modifiés."
  },
  "panels/accessibility/AccessibilityStrings.ts | ifThisElementMayReceiveLiveUpdates": {
    "message": "Indique le type de mise à jour qui doit déclencher une notification si l'élément peut recevoir des mises à jour en direct."
  },
  "panels/accessibility/AccessibilityStrings.ts | ifThisElementMayReceiveLiveUpdatesThe": {
    "message": "Si cet élément peut recevoir des mises à jour en direct, l'élément racine de la région active le contenant."
  },
  "panels/accessibility/AccessibilityStrings.ts | ifTrueThisElementCanReceiveFocus": {
    "message": "Si \"True\", cet élément peut être sélectionné."
  },
  "panels/accessibility/AccessibilityStrings.ts | ifTrueThisElementCurrentlyCannot": {
    "message": "Si \"True\", il est impossible d'interagir avec cet élément."
  },
  "panels/accessibility/AccessibilityStrings.ts | ifTrueThisElementCurrentlyHas": {
    "message": "Si la valeur est true, cet élément est actuellement sélectionné."
  },
  "panels/accessibility/AccessibilityStrings.ts | ifTrueThisElementMayBeInteracted": {
    "message": "Si \"True\", il est possible d'interagir avec cet élément, mais sa valeur ne peut pas être modifiée."
  },
  "panels/accessibility/AccessibilityStrings.ts | ifTrueThisElementsUserentered": {
    "message": "Si la réponse est \"True\", la valeur saisie par l'utilisateur pour cet élément n'est pas conforme aux exigences de vérification."
  },
  "panels/accessibility/AccessibilityStrings.ts | implicit": {
    "message": "Implicite"
  },
  "panels/accessibility/AccessibilityStrings.ts | implicitValue": {
    "message": "Valeur implicite."
  },
  "panels/accessibility/AccessibilityStrings.ts | indicatesThePurposeOfThisElement": {
    "message": "Indique l'utilité de cet élément, par exemple un idiome d'interface utilisateur pour un widget, ou un rôle structurel dans un document."
  },
  "panels/accessibility/AccessibilityStrings.ts | invalidUserEntry": {
    "message": "Saisie utilisateur non valide"
  },
  "panels/accessibility/AccessibilityStrings.ts | labeledBy": {
    "message": "Libellé ajouté par"
  },
  "panels/accessibility/AccessibilityStrings.ts | level": {
    "message": "Niveau"
  },
  "panels/accessibility/AccessibilityStrings.ts | liveRegion": {
    "message": "Région active"
  },
  "panels/accessibility/AccessibilityStrings.ts | liveRegionRoot": {
    "message": "Racine de la région active"
  },
  "panels/accessibility/AccessibilityStrings.ts | maximumValue": {
    "message": "Valeur maximale"
  },
  "panels/accessibility/AccessibilityStrings.ts | minimumValue": {
    "message": "Valeur minimale"
  },
  "panels/accessibility/AccessibilityStrings.ts | multiline": {
    "message": "Multiligne"
  },
  "panels/accessibility/AccessibilityStrings.ts | multiselectable": {
    "message": "Sélection multiple possible"
  },
  "panels/accessibility/AccessibilityStrings.ts | orientation": {
    "message": "Orientation"
  },
  "panels/accessibility/AccessibilityStrings.ts | pressed": {
    "message": "Appuyé"
  },
  "panels/accessibility/AccessibilityStrings.ts | readonlyString": {
    "message": "Lecture seule"
  },
  "panels/accessibility/AccessibilityStrings.ts | relatedElement": {
    "message": "Élément associé"
  },
  "panels/accessibility/AccessibilityStrings.ts | relevantLiveRegions": {
    "message": "Pertinent (régions actives)"
  },
  "panels/accessibility/AccessibilityStrings.ts | requiredString": {
    "message": "Obligatoire"
  },
  "panels/accessibility/AccessibilityStrings.ts | role": {
    "message": "Rôle"
  },
  "panels/accessibility/AccessibilityStrings.ts | selectedString": {
    "message": "Sélectionné"
  },
  "panels/accessibility/AccessibilityStrings.ts | theAccessibleDescriptionForThis": {
    "message": "Description accessible de cet élément."
  },
  "panels/accessibility/AccessibilityStrings.ts | theComputedHelpTextForThis": {
    "message": "Texte d'aide calculé pour cet élément."
  },
  "panels/accessibility/AccessibilityStrings.ts | theComputedNameOfThisElement": {
    "message": "Le nom calculé de cet élément."
  },
  "panels/accessibility/AccessibilityStrings.ts | theDescendantOfThisElementWhich": {
    "message": "Descendant actif de cet élément, c'est-à-dire l'élément qui doit être sélectionnable."
  },
  "panels/accessibility/AccessibilityStrings.ts | theHierarchicalLevelOfThis": {
    "message": "Niveau hiérarchique de cet élément."
  },
  "panels/accessibility/AccessibilityStrings.ts | theValueOfThisElementThisMayBe": {
    "message": "Valeur de cet élément (elle peut être fournie par l'utilisateur ou le développeur selon l'élément)."
  },
  "panels/accessibility/AccessibilityStrings.ts | value": {
    "message": "Valeur"
  },
  "panels/accessibility/AccessibilityStrings.ts | valueDescription": {
    "message": "Description de la valeur"
  },
  "panels/accessibility/AccessibilityStrings.ts | valueFromAttribute": {
    "message": "Valeur de l'attribut \"À partir de l'attribut\"."
  },
  "panels/accessibility/AccessibilityStrings.ts | valueFromDescriptionElement": {
    "message": "Valeur de l'élément description."
  },
  "panels/accessibility/AccessibilityStrings.ts | valueFromElementContents": {
    "message": "Valeur de l'attribut \"Contenu\"."
  },
  "panels/accessibility/AccessibilityStrings.ts | valueFromFigcaptionElement": {
    "message": "Valeur de l'élément figcaption."
  },
  "panels/accessibility/AccessibilityStrings.ts | valueFromLabelElement": {
    "message": "Valeur de l'élément label."
  },
  "panels/accessibility/AccessibilityStrings.ts | valueFromLabelElementWithFor": {
    "message": "Valeur de l'élément label ayant l'attribut for=."
  },
  "panels/accessibility/AccessibilityStrings.ts | valueFromLabelElementWrapped": {
    "message": "Valeur d'un élément label encapsulant."
  },
  "panels/accessibility/AccessibilityStrings.ts | valueFromLegendElement": {
    "message": "Valeur de l'élément legend."
  },
  "panels/accessibility/AccessibilityStrings.ts | valueFromNativeHtmlRuby": {
    "message": "Valeur de l'annotation Ruby HTML brut."
  },
  "panels/accessibility/AccessibilityStrings.ts | valueFromNativeHtmlUnknownSource": {
    "message": "Valeur de l'élément HTML natif (source inconnue)."
  },
  "panels/accessibility/AccessibilityStrings.ts | valueFromPlaceholderAttribute": {
    "message": "Valeur de l'attribut d'espace réservé."
  },
  "panels/accessibility/AccessibilityStrings.ts | valueFromRelatedElement": {
    "message": "Valeur d'un élément connexe."
  },
  "panels/accessibility/AccessibilityStrings.ts | valueFromStyle": {
    "message": "Valeur de l'attribut \"À partir du style\"."
  },
  "panels/accessibility/AccessibilityStrings.ts | valueFromTableCaption": {
    "message": "Valeur de table caption."
  },
  "panels/accessibility/AccessibilityStrings.ts | valueFromTitleAttribute": {
    "message": "Valeur de l'attribut \"À partir du titre\"."
  },
  "panels/accessibility/AccessibilityStrings.ts | whetherAUserMaySelectMoreThanOne": {
    "message": "Indique si un utilisateur peut sélectionner plusieurs options depuis ce widget."
  },
  "panels/accessibility/AccessibilityStrings.ts | whetherAndWhatPriorityOfLive": {
    "message": "Indique, le cas échéant, la priorité prévue pour les mises à jour en direct de cet élément."
  },
  "panels/accessibility/AccessibilityStrings.ts | whetherAndWhatTypeOfAutocomplete": {
    "message": "Indique si cet élément fournit actuellement des suggestions de saisie semi-automatique (et spécifie leur type si c'est le cas)."
  },
  "panels/accessibility/AccessibilityStrings.ts | whetherTheOptionRepresentedBy": {
    "message": "Indique si l'option représentée par cet élément est sélectionnée."
  },
  "panels/accessibility/AccessibilityStrings.ts | whetherTheValueOfThisElementCan": {
    "message": "Indique si la valeur de cet élément peut être réglée."
  },
  "panels/accessibility/AccessibilityStrings.ts | whetherThisCheckboxRadioButtonOr": {
    "message": "Indique si cette case à cocher, cette case d'option ou cet élément de l'arborescence sont cochés, décochés ou les deux (c'est-à-dire, des enfants sont cochés et d'autres non)."
  },
  "panels/accessibility/AccessibilityStrings.ts | whetherThisElementHasCausedSome": {
    "message": "Indique si cet élément a entraîné l'affichage d'une sorte de pop-up (comme un menu)."
  },
  "panels/accessibility/AccessibilityStrings.ts | whetherThisElementIsARequired": {
    "message": "Indique si cet élément est un champ obligatoire dans un formulaire."
  },
  "panels/accessibility/AccessibilityStrings.ts | whetherThisElementOrAnother": {
    "message": "Indique si cet élément, ou tout autre élément de groupe qu'il contrôle, est développé."
  },
  "panels/accessibility/AccessibilityStrings.ts | whetherThisElementOrItsSubtree": {
    "message": "Indique si cet élément ou sa sous-arborescence sont en cours de modification (et peuvent ainsi avoir un état différent)."
  },
  "panels/accessibility/AccessibilityStrings.ts | whetherThisLinearElements": {
    "message": "Indique si l'orientation de cet élément linéaire est horizontale ou verticale."
  },
  "panels/accessibility/AccessibilityStrings.ts | whetherThisTextBoxMayHaveMore": {
    "message": "Indique si ce champ de texte peut se composer de plusieurs lignes."
  },
  "panels/accessibility/AccessibilityStrings.ts | whetherThisToggleButtonIs": {
    "message": "Indique si ce bouton d'activation est actuellement enfoncé."
  },
  "panels/accessibility/SourceOrderView.ts | noSourceOrderInformation": {
    "message": "Aucune information disponible sur l'ordre des sources"
  },
  "panels/accessibility/SourceOrderView.ts | showSourceOrder": {
    "message": "Afficher l'ordre des sources"
  },
  "panels/accessibility/SourceOrderView.ts | sourceOrderViewer": {
    "message": "Visionneuse de l'ordre des sources"
  },
  "panels/accessibility/SourceOrderView.ts | thereMayBeADelayInDisplaying": {
    "message": "Il peut y avoir un retard dans l'affichage de l'ordre source des éléments comportant plusieurs enfants"
  },
  "panels/accessibility/accessibility-meta.ts | accessibility": {
    "message": "Accessibilité"
  },
  "panels/accessibility/accessibility-meta.ts | shoAccessibility": {
    "message": "Afficher le panneau \"Accessibilité\""
  },
  "panels/animation/AnimationTimeline.ts | animationPreviewS": {
    "message": "Aperçu de l'animation {PH1}"
  },
  "panels/animation/AnimationTimeline.ts | animationPreviews": {
    "message": "Aperçus des animations"
  },
  "panels/animation/AnimationTimeline.ts | clearAll": {
    "message": "Tout effacer"
  },
  "panels/animation/AnimationTimeline.ts | pause": {
    "message": "Suspendre"
  },
  "panels/animation/AnimationTimeline.ts | pauseAll": {
    "message": "Tout suspendre"
  },
  "panels/animation/AnimationTimeline.ts | pauseTimeline": {
    "message": "Suspendre la chronologie"
  },
  "panels/animation/AnimationTimeline.ts | playTimeline": {
    "message": "Lire la chronologie"
  },
  "panels/animation/AnimationTimeline.ts | playbackRatePlaceholder": {
    "message": "{PH1} %"
  },
  "panels/animation/AnimationTimeline.ts | playbackRates": {
    "message": "Vitesses de lecture"
  },
  "panels/animation/AnimationTimeline.ts | replayTimeline": {
    "message": "Chronologie de relecture"
  },
  "panels/animation/AnimationTimeline.ts | resumeAll": {
    "message": "Tout reprendre"
  },
  "panels/animation/AnimationTimeline.ts | selectAnEffectAboveToInspectAnd": {
    "message": "Sélectionnez un effet ci-dessus à inspecter et modifier."
  },
  "panels/animation/AnimationTimeline.ts | setSpeedToS": {
    "message": "Définir la vitesse sur {PH1}"
  },
  "panels/animation/AnimationTimeline.ts | waitingForAnimations": {
    "message": "En attente des animations…"
  },
  "panels/animation/AnimationUI.ts | animationEndpointSlider": {
    "message": "Curseur du point de terminaison de l'animation"
  },
  "panels/animation/AnimationUI.ts | animationKeyframeSlider": {
    "message": "Curseur de l'image clé d'animation"
  },
  "panels/animation/AnimationUI.ts | sSlider": {
    "message": "Curseur {PH1}"
  },
  "panels/animation/animation-meta.ts | animations": {
    "message": "Animations"
  },
  "panels/animation/animation-meta.ts | showAnimations": {
    "message": "Afficher les animations"
  },
  "panels/application/AppManifestView.ts | aUrlInTheManifestContainsA": {
    "message": "Une URL du fichier manifeste contient un nom d'utilisateur, un mot de passe ou un port"
  },
  "panels/application/AppManifestView.ts | actualHeightSpxOfSSDoesNotMatch": {
    "message": "La hauteur réelle ({PH1} px) de {PH2} ({PH3}) ne correspond pas à celle spécifiée ({PH4} px)"
  },
  "panels/application/AppManifestView.ts | actualSizeSspxOfSSDoesNotMatch": {
    "message": "La taille réelle ({PH1} × {PH2} px) de {PH3} {PH4} ne correspond pas à la taille spécifiée ({PH5} × {PH6} px)"
  },
  "panels/application/AppManifestView.ts | actualWidthSpxOfSSDoesNotMatch": {
    "message": "La largeur réelle ({PH1} px) de {PH2} {PH3} ne correspond pas à celle spécifiée ({PH4} px)"
  },
  "panels/application/AppManifestView.ts | appIdExplainer": {
    "message": "Permet au navigateur de savoir si le fichier manifeste doit mettre à jour une application existante ou s'il se rapporte à une nouvelle appli Web qui peut être installée."
  },
  "panels/application/AppManifestView.ts | appIdNote": {
    "message": "{PH1} {PH2} n'est pas indiqué dans le fichier manifeste. {PH3} est utilisé à la place. Pour spécifier un ID d'appli correspondant à l'identité actuelle, définissez le champ {PH4} sur {PH5} {PH6}."
  },
  "panels/application/AppManifestView.ts | avoidPurposeAnyAndMaskable": {
    "message": "Il est déconseillé de déclarer une icône avec \"purpose\" sur \"any maskable\". Elle risque de mal s'afficher sur certaines plates-formes en raison d'une marge intérieure trop petite ou trop grande."
  },
  "panels/application/AppManifestView.ts | backgroundColor": {
    "message": "Couleur d'arrière-plan"
  },
  "panels/application/AppManifestView.ts | computedAppId": {
    "message": "ID d'appli calculé"
  },
  "panels/application/AppManifestView.ts | copiedToClipboard": {
    "message": "Suggestion d'ID \"{PH1}\" copiée dans le presse-papiers"
  },
  "panels/application/AppManifestView.ts | copyToClipboard": {
    "message": "Copier l'ID suggéré dans le presse-papiers"
  },
  "panels/application/AppManifestView.ts | couldNotCheckServiceWorker": {
    "message": "Impossible de vérifier le service worker sans un champ \"start_url\" dans le fichier manifeste"
  },
  "panels/application/AppManifestView.ts | couldNotDownloadARequiredIcon": {
    "message": "Impossible de télécharger une icône requise depuis le fichier manifeste"
  },
  "panels/application/AppManifestView.ts | customizePwaTitleBar": {
    "message": "Personnalisez la superposition des commandes de fenêtre de la barre de titre de votre PWA."
  },
  "panels/application/AppManifestView.ts | darkBackgroundColor": {
    "message": "Couleur d'arrière-plan sombre"
  },
  "panels/application/AppManifestView.ts | darkThemeColor": {
    "message": "Couleur de thème sombre"
  },
  "panels/application/AppManifestView.ts | description": {
    "message": "Description"
  },
  "panels/application/AppManifestView.ts | descriptionMayBeTruncated": {
    "message": "La description peut être tronquée."
  },
  "panels/application/AppManifestView.ts | display": {
    "message": "Affichage"
  },
  "panels/application/AppManifestView.ts | documentationOnMaskableIcons": {
    "message": "Documentation sur les icônes masquables"
  },
  "panels/application/AppManifestView.ts | downloadedIconWasEmptyOr": {
    "message": "L'icône téléchargée était vide ou corrompue"
  },
  "panels/application/AppManifestView.ts | errorsAndWarnings": {
    "message": "Erreurs et avertissements"
  },
  "panels/application/AppManifestView.ts | formFactor": {
    "message": "Facteur de forme"
  },
  "panels/application/AppManifestView.ts | icon": {
    "message": "Icône"
  },
  "panels/application/AppManifestView.ts | icons": {
    "message": "Icônes"
  },
  "panels/application/AppManifestView.ts | identity": {
    "message": "Identité"
  },
  "panels/application/AppManifestView.ts | imageFromS": {
    "message": "Image issue de {PH1}"
  },
  "panels/application/AppManifestView.ts | installability": {
    "message": "Simplicité d'installation"
  },
  "panels/application/AppManifestView.ts | label": {
    "message": "Libellé"
  },
  "panels/application/AppManifestView.ts | learnMore": {
    "message": "En savoir plus"
  },
  "panels/application/AppManifestView.ts | manifestContainsDisplayoverride": {
    "message": "Le fichier manifeste contient le champ \"display_override\", et le premier mode d'affichage accepté doit être \"standalone\", \"fullscreen\" ou \"minimal-ui\""
  },
  "panels/application/AppManifestView.ts | manifestCouldNotBeFetchedIsEmpty": {
    "message": "Le fichier manifeste n'a pas pu être récupéré, est vide ou n'a pas pu être analysé"
  },
  "panels/application/AppManifestView.ts | manifestDisplayPropertyMustBeOne": {
    "message": "La propriété \"display\" du fichier manifeste doit être \"standalone\", \"fullscreen\" ou \"minimal-ui\""
  },
  "panels/application/AppManifestView.ts | manifestDoesNotContainANameOr": {
    "message": "Le manifeste ne contient pas de champ \"name\" ni \"short_name\""
  },
  "panels/application/AppManifestView.ts | manifestDoesNotContainASuitable": {
    "message": "Le fichier manifeste ne contient pas d'icône valide (au format PNG, SVG ou WebP, d'au moins {PH1} px, avec l'attribut sizes défini, et l'attribut purpose sur any s'il est défini)."
  },
  "panels/application/AppManifestView.ts | manifestSpecifies": {
    "message": "Le fichier manifeste spécifie \"prefer_related_applications: true\""
  },
  "panels/application/AppManifestView.ts | manifestStartUrlIsNotValid": {
    "message": "Le fichier manifeste \"start_url\" n'est pas valide"
  },
  "panels/application/AppManifestView.ts | name": {
    "message": "Nom"
  },
  "panels/application/AppManifestView.ts | needHelpReadOurS": {
    "message": "Besoin d'aide ? Consultez le site {PH1}."
  },
  "panels/application/AppManifestView.ts | newNoteUrl": {
    "message": "URL de nouvelle note"
  },
  "panels/application/AppManifestView.ts | noPlayStoreIdProvided": {
    "message": "Aucun ID Play Store fourni"
  },
  "panels/application/AppManifestView.ts | noScreenshotsForRicherPWAInstallOnDesktop": {
    "message": "L'interface utilisateur d'installation de PWA enrichie ne sera pas disponible sur ordinateur. Veuillez ajouter au moins une capture d'écran avec form_factor défini sur wide."
  },
  "panels/application/AppManifestView.ts | noScreenshotsForRicherPWAInstallOnMobile": {
    "message": "L'interface utilisateur d'installation de PWA enrichie ne sera pas disponible sur mobile. Veuillez ajouter au moins une capture d'écran pour laquelle form_factor n'est pas défini ou est défini sur une valeur autre que wide."
  },
  "panels/application/AppManifestView.ts | noSuppliedIconIsAtLeastSpxSquare": {
    "message": "Aucune icône fournie ne fait au moins {PH1} px carrés au format PNG, SVG ou WebP, que l'attribut de fonction soit défini ou non sur any."
  },
  "panels/application/AppManifestView.ts | note": {
    "message": "Remarque :"
  },
  "panels/application/AppManifestView.ts | orientation": {
    "message": "Orientation"
  },
  "panels/application/AppManifestView.ts | pageDoesNotWorkOffline": {
    "message": "La page ne fonctionne pas hors connexion"
  },
  "panels/application/AppManifestView.ts | pageDoesNotWorkOfflineThePage": {
    "message": "La page ne fonctionne pas hors connexion. À compter de Chrome 93, les critères d'installabilité vont changer, et ce site ne pourra plus être installé. Pour en savoir plus, rendez-vous sur {PH1}."
  },
  "panels/application/AppManifestView.ts | pageHasNoManifestLinkUrl": {
    "message": "Aucune URL <lien> de fichier manifeste n'est associée à la page"
  },
  "panels/application/AppManifestView.ts | pageIsLoadedInAnIncognitoWindow": {
    "message": "La page est chargée dans une fenêtre de navigation privée"
  },
  "panels/application/AppManifestView.ts | pageIsNotLoadedInTheMainFrame": {
    "message": "La page n'est pas chargée dans le frame principal"
  },
  "panels/application/AppManifestView.ts | pageIsNotServedFromASecureOrigin": {
    "message": "L'origine de la page n'est pas sécurisée"
  },
  "panels/application/AppManifestView.ts | platform": {
    "message": "Plate-forme"
  },
  "panels/application/AppManifestView.ts | preferrelatedapplicationsIsOnly": {
    "message": "\"prefer_related_applications\" est uniquement disponible dans les versions bêta et stable de Chrome sur Android."
  },
  "panels/application/AppManifestView.ts | presentation": {
    "message": "Présentation"
  },
  "panels/application/AppManifestView.ts | protocolHandlers": {
    "message": "Gestionnaires de protocoles"
  },
  "panels/application/AppManifestView.ts | sSDoesNotSpecifyItsSizeInThe": {
    "message": "{PH1} {PH2} ne spécifie pas sa taille dans le fichier manifeste"
  },
  "panels/application/AppManifestView.ts | sSFailedToLoad": {
    "message": "Échec du chargement de {PH1} ({PH2})"
  },
  "panels/application/AppManifestView.ts | sSHeightDoesNotComplyWithRatioRequirement": {
    "message": "La hauteur de {PH1} {PH2} ne doit pas être plus de 2,3 fois supérieure à sa largeur"
  },
  "panels/application/AppManifestView.ts | sSShouldHaveSquareIcon": {
    "message": "La plupart des systèmes d'exploitation nécessitent des icônes carrées. Veuillez inclure au moins une icône carrée dans le tableau."
  },
  "panels/application/AppManifestView.ts | sSShouldSpecifyItsSizeAs": {
    "message": "{PH1} ({PH2}) doit spécifier sa taille comme suit : [width]x[height]"
  },
  "panels/application/AppManifestView.ts | sSSizeShouldBeAtLeast320": {
    "message": "{PH1} {PH2} : taille minimale de l'image de 320 × 320"
  },
  "panels/application/AppManifestView.ts | sSSizeShouldBeAtMost3840": {
    "message": "La taille de {PH1} ({PH2}) ne doit pas dépasser 3 840 × 3 840 px"
  },
  "panels/application/AppManifestView.ts | sSWidthDoesNotComplyWithRatioRequirement": {
    "message": "La largeur de {PH1} {PH2} ne doit pas être plus de 2,3 fois supérieure à sa hauteur"
  },
  "panels/application/AppManifestView.ts | sSrcIsNotSet": {
    "message": "L'attribut \"src\" de {PH1} n'est pas défini"
  },
  "panels/application/AppManifestView.ts | sUrlSFailedToParse": {
    "message": "Échec de l'analyse de l'URL {PH1} \"{PH2}\""
  },
  "panels/application/AppManifestView.ts | screenshot": {
    "message": "Capture d'écran"
  },
  "panels/application/AppManifestView.ts | screenshotPixelSize": {
    "message": "La taille initiale de la capture d'écran {url} doit être définie en pixels [width]x[height] plutôt que sur any."
  },
  "panels/application/AppManifestView.ts | screenshotS": {
    "message": "instantané n° {PH1}"
  },
  "panels/application/AppManifestView.ts | screenshotsMustHaveSameAspectRatio": {
    "message": "Toutes les captures d'écran ayant le même form_factor doivent avoir le même format que la première capture d'écran ayant ce paramètre form_factor. Certaines captures d'écran seront ignorées."
  },
  "panels/application/AppManifestView.ts | selectWindowControlsOverlayEmulationOs": {
    "message": "Émuler la superposition des commandes de fenêtre sur"
  },
  "panels/application/AppManifestView.ts | shortName": {
    "message": "Nom court"
  },
  "panels/application/AppManifestView.ts | shortcutS": {
    "message": "Raccourci {PH1}"
  },
  "panels/application/AppManifestView.ts | shortcutSShouldIncludeAXPixel": {
    "message": "Le raccourci #{PH1} doit inclure une icône de 96 × 96 pixels"
  },
  "panels/application/AppManifestView.ts | shortcutsMayBeNotAvailable": {
    "message": "Le nombre maximal de raccourcis dépend de la plate-forme. Il est possible que certains raccourcis ne soient pas disponibles."
  },
  "panels/application/AppManifestView.ts | showOnlyTheMinimumSafeAreaFor": {
    "message": "Affichez uniquement la zone de sécurité minimale pour les icônes masquables"
  },
  "panels/application/AppManifestView.ts | startUrl": {
    "message": "Ouvrir l'URL"
  },
  "panels/application/AppManifestView.ts | theAppIsAlreadyInstalled": {
    "message": "Appli déjà installée"
  },
  "panels/application/AppManifestView.ts | thePlayStoreAppUrlAndPlayStoreId": {
    "message": "L'URL de l'application Play Store et l'ID Play Store ne correspondent pas"
  },
  "panels/application/AppManifestView.ts | theSpecifiedApplicationPlatform": {
    "message": "La plate-forme d'applications indiquée n'est pas compatible avec Android"
  },
  "panels/application/AppManifestView.ts | themeColor": {
    "message": "Couleur thème"
  },
  "panels/application/AppManifestView.ts | tooManyScreenshotsForDesktop": {
    "message": "Au maximum, huit captures d'écran s'afficheront sur le bureau. Les autres seront ignorées."
  },
  "panels/application/AppManifestView.ts | tooManyScreenshotsForMobile": {
    "message": "Au maximum, cinq captures d'écran s'afficheront sur mobile. Les autres seront ignorées."
  },
  "panels/application/AppManifestView.ts | url": {
    "message": "URL"
  },
  "panels/application/AppManifestView.ts | wcoFound": {
    "message": "Chrome a trouvé la valeur {PH1} pour le champ {PH2} dans {PH3}."
  },
  "panels/application/AppManifestView.ts | wcoNeedHelpReadMore": {
    "message": "Besoin d'aide ? Rendez-vous sur {PH1}."
  },
  "panels/application/AppManifestView.ts | wcoNotFound": {
    "message": "Définissez {PH1} dans le fichier manifeste pour utiliser l'API Window Controls Overlay et personnaliser la barre de titre de votre appli."
  },
  "panels/application/AppManifestView.ts | windowControlsOverlay": {
    "message": "Superposition des commandes de fenêtre"
  },
  "panels/application/ApplicationPanelSidebar.ts | appManifest": {
    "message": "Fichier manifeste d'appli"
  },
  "panels/application/ApplicationPanelSidebar.ts | application": {
    "message": "Appli"
  },
  "panels/application/ApplicationPanelSidebar.ts | applicationSidebarPanel": {
    "message": "Barre latérale du panneau \"Application\""
  },
  "panels/application/ApplicationPanelSidebar.ts | backgroundServices": {
    "message": "Services d'arrière-plan"
  },
  "panels/application/ApplicationPanelSidebar.ts | beforeInvokeAlert": {
    "message": "{PH1} : appelez cette commande pour défiler jusqu'à cette section du fichier manifeste"
  },
  "panels/application/ApplicationPanelSidebar.ts | clear": {
    "message": "Effacer"
  },
  "panels/application/ApplicationPanelSidebar.ts | cookies": {
    "message": "Cookies"
  },
  "panels/application/ApplicationPanelSidebar.ts | cookiesUsedByFramesFromS": {
    "message": "Cookies utilisés par les frames de {PH1}"
  },
  "panels/application/ApplicationPanelSidebar.ts | documentNotAvailable": {
    "message": "Document non disponible"
  },
  "panels/application/ApplicationPanelSidebar.ts | frames": {
    "message": "Frames"
  },
  "panels/application/ApplicationPanelSidebar.ts | indexeddb": {
    "message": "Base de données indexée"
  },
  "panels/application/ApplicationPanelSidebar.ts | keyPathS": {
    "message": "Chemin d'accès de la clé : {PH1}"
  },
  "panels/application/ApplicationPanelSidebar.ts | localFiles": {
    "message": "Fichiers locaux"
  },
  "panels/application/ApplicationPanelSidebar.ts | localStorage": {
    "message": "Stockage local"
  },
  "panels/application/ApplicationPanelSidebar.ts | manifest": {
    "message": "Fichier manifeste"
  },
  "panels/application/ApplicationPanelSidebar.ts | noManifestDetected": {
    "message": "Aucun fichier manifeste détecté"
  },
  "panels/application/ApplicationPanelSidebar.ts | onInvokeAlert": {
    "message": "Défilement jusqu'à {PH1}"
  },
  "panels/application/ApplicationPanelSidebar.ts | onInvokeManifestAlert": {
    "message": "Fichier manifeste : appelez-le pour faire défiler jusqu'en haut du fichier"
  },
  "panels/application/ApplicationPanelSidebar.ts | openedWindows": {
    "message": "Fenêtres ouvertes"
  },
  "panels/application/ApplicationPanelSidebar.ts | refreshIndexeddb": {
    "message": "Actualiser IndexedDB"
  },
  "panels/application/ApplicationPanelSidebar.ts | sessionStorage": {
    "message": "Stockage de session"
  },
  "panels/application/ApplicationPanelSidebar.ts | storage": {
    "message": "Stockage"
  },
  "panels/application/ApplicationPanelSidebar.ts | theContentOfThisDocumentHasBeen": {
    "message": "Le contenu de ce document a été généré de façon dynamique via \"document.write()\"."
  },
  "panels/application/ApplicationPanelSidebar.ts | thirdPartyPhaseout": {
    "message": "Les cookies de {PH1} ont peut-être été bloqués en raison de l'abandon des cookies tiers."
  },
  "panels/application/ApplicationPanelSidebar.ts | versionS": {
    "message": "Version : {PH1}"
  },
  "panels/application/ApplicationPanelSidebar.ts | versionSEmpty": {
    "message": "Version : {PH1} (vide)"
  },
  "panels/application/ApplicationPanelSidebar.ts | webSql": {
    "message": "Web SQL"
  },
  "panels/application/ApplicationPanelSidebar.ts | webWorkers": {
    "message": "Web Worker"
  },
  "panels/application/ApplicationPanelSidebar.ts | windowWithoutTitle": {
    "message": "Fenêtre sans titre"
  },
  "panels/application/ApplicationPanelSidebar.ts | worker": {
    "message": "worker"
  },
  "panels/application/BackForwardCacheTreeElement.ts | backForwardCache": {
    "message": "Cache amélioré"
  },
  "panels/application/BackgroundServiceView.ts | backgroundFetch": {
    "message": "Récupération de l'arrière-plan"
  },
  "panels/application/BackgroundServiceView.ts | backgroundServices": {
    "message": "Services d'arrière-plan"
  },
  "panels/application/BackgroundServiceView.ts | backgroundSync": {
    "message": "Synchronisation en arrière-plan"
  },
  "panels/application/BackgroundServiceView.ts | clear": {
    "message": "Effacer"
  },
  "panels/application/BackgroundServiceView.ts | clickTheRecordButtonSOrHitSTo": {
    "message": "Cliquez sur le bouton d'enregistrement {PH1} ou appuyez sur {PH2} pour commencer l'enregistrement."
  },
  "panels/application/BackgroundServiceView.ts | devtoolsWillRecordAllSActivity": {
    "message": "Les outils de développement enregistreront toutes les activités {PH1} pendant un maximum de 3 jours, même fermés."
  },
  "panels/application/BackgroundServiceView.ts | empty": {
    "message": "vide"
  },
  "panels/application/BackgroundServiceView.ts | event": {
    "message": "Événement"
  },
  "panels/application/BackgroundServiceView.ts | instanceId": {
    "message": "ID d'instance"
  },
  "panels/application/BackgroundServiceView.ts | learnMore": {
    "message": "En savoir plus"
  },
  "panels/application/BackgroundServiceView.ts | noMetadataForThisEvent": {
    "message": "Aucune métadonnée pour cet événement"
  },
  "panels/application/BackgroundServiceView.ts | notifications": {
    "message": "Notifications"
  },
  "panels/application/BackgroundServiceView.ts | origin": {
    "message": "Origine"
  },
  "panels/application/BackgroundServiceView.ts | paymentHandler": {
    "message": "Gestionnaire de paiements"
  },
  "panels/application/BackgroundServiceView.ts | periodicBackgroundSync": {
    "message": "Synchronisation périodique en arrière-plan"
  },
  "panels/application/BackgroundServiceView.ts | pushMessaging": {
    "message": "Messages push"
  },
  "panels/application/BackgroundServiceView.ts | recordingSActivity": {
    "message": "Enregistrement de l'activité {PH1}…"
  },
  "panels/application/BackgroundServiceView.ts | saveEvents": {
    "message": "Enregistrer les événements"
  },
  "panels/application/BackgroundServiceView.ts | selectAnEntryToViewMetadata": {
    "message": "Sélectionnez une entrée pour afficher les métadonnées"
  },
  "panels/application/BackgroundServiceView.ts | showEventsForOtherStorageKeys": {
    "message": "Afficher les événements issus d'autres partitions de stockage"
  },
  "panels/application/BackgroundServiceView.ts | showEventsFromOtherDomains": {
    "message": "Afficher les événements d'autres domaines"
  },
  "panels/application/BackgroundServiceView.ts | startRecordingEvents": {
    "message": "Démarrer l'enregistrement des événements"
  },
  "panels/application/BackgroundServiceView.ts | stopRecordingEvents": {
    "message": "Arrêter l'enregistrement d'événements"
  },
  "panels/application/BackgroundServiceView.ts | storageKey": {
    "message": "Clé de stockage"
  },
  "panels/application/BackgroundServiceView.ts | swScope": {
    "message": "Niveau d'accès du service worker"
  },
  "panels/application/BackgroundServiceView.ts | timestamp": {
    "message": "Horodatage"
  },
  "panels/application/BounceTrackingMitigationsTreeElement.ts | bounceTrackingMitigations": {
    "message": "Mesures d'atténuation du suivi des rebonds"
  },
  "panels/application/CookieItemsView.ts | clearAllCookies": {
    "message": "Supprimer tous les cookies"
  },
  "panels/application/CookieItemsView.ts | clearFilteredCookies": {
    "message": "Supprimer les cookies filtrés"
  },
  "panels/application/CookieItemsView.ts | cookies": {
    "message": "Cookies"
  },
  "panels/application/CookieItemsView.ts | numberOfCookiesShownInTableS": {
    "message": "Nombre de cookies dans la table : {PH1}"
  },
  "panels/application/CookieItemsView.ts | onlyShowCookiesWhichHaveAn": {
    "message": "Afficher uniquement les cookies présentant un problème associé"
  },
  "panels/application/CookieItemsView.ts | onlyShowCookiesWithAnIssue": {
    "message": "Afficher uniquement les cookies avec un problème"
  },
  "panels/application/CookieItemsView.ts | selectACookieToPreviewItsValue": {
    "message": "Sélectionnez un cookie pour prévisualiser sa valeur"
  },
  "panels/application/CookieItemsView.ts | showUrlDecoded": {
    "message": "Afficher les valeurs décodées via l'URL"
  },
  "panels/application/DOMStorageItemsView.ts | domStorage": {
    "message": "Espace de stockage DOM"
  },
  "panels/application/DOMStorageItemsView.ts | domStorageItemDeleted": {
    "message": "L'élément dans l'espace de stockage a été supprimé."
  },
  "panels/application/DOMStorageItemsView.ts | domStorageItems": {
    "message": "Éléments de stockage DOM"
  },
  "panels/application/DOMStorageItemsView.ts | domStorageItemsCleared": {
    "message": "Éléments de stockage DOM effacés"
  },
  "panels/application/DOMStorageItemsView.ts | domStorageNumberEntries": {
    "message": "Nombre d'entrées affichées dans le tableau : {PH1}"
  },
  "panels/application/DOMStorageItemsView.ts | key": {
    "message": "Clé"
  },
  "panels/application/DOMStorageItemsView.ts | selectAValueToPreview": {
    "message": "Sélectionnez une valeur à prévisualiser"
  },
  "panels/application/DOMStorageItemsView.ts | value": {
    "message": "Valeur"
  },
  "panels/application/DatabaseModel.ts | anUnexpectedErrorSOccurred": {
    "message": "Une erreur inattendue {PH1} s'est produite."
  },
  "panels/application/DatabaseModel.ts | databaseNoLongerHasExpected": {
    "message": "La base de données ne contient plus la version attendue."
  },
  "panels/application/DatabaseQueryView.ts | databaseQuery": {
    "message": "Requête de base de données"
  },
  "panels/application/DatabaseQueryView.ts | queryS": {
    "message": "Requête : {PH1}"
  },
  "panels/application/DatabaseTableView.ts | anErrorOccurredTryingToreadTheS": {
    "message": "Une erreur s'est produite lors de la lecture de la table \"{PH1}\"."
  },
  "panels/application/DatabaseTableView.ts | database": {
    "message": "Base de données"
  },
  "panels/application/DatabaseTableView.ts | refresh": {
    "message": "Actualiser"
  },
  "panels/application/DatabaseTableView.ts | theStableIsEmpty": {
    "message": "La table \"{PH1}\" est vide."
  },
  "panels/application/DatabaseTableView.ts | visibleColumns": {
    "message": "Colonnes visibles"
  },
  "panels/application/IndexedDBViews.ts | clearObjectStore": {
    "message": "Effacer le magasin d'objets"
  },
  "panels/application/IndexedDBViews.ts | collapse": {
    "message": "Réduire"
  },
  "panels/application/IndexedDBViews.ts | dataMayBeStale": {
    "message": "Les données peuvent être obsolètes"
  },
  "panels/application/IndexedDBViews.ts | deleteDatabase": {
    "message": "Supprimer la base de données"
  },
  "panels/application/IndexedDBViews.ts | deleteSelected": {
    "message": "Supprimer la sélection"
  },
  "panels/application/IndexedDBViews.ts | expandRecursively": {
    "message": "Développer de façon récurrente"
  },
  "panels/application/IndexedDBViews.ts | idb": {
    "message": "IDB"
  },
  "panels/application/IndexedDBViews.ts | indexedDb": {
    "message": "Base de données indexée"
  },
  "panels/application/IndexedDBViews.ts | keyGeneratorValueS": {
    "message": "Valeur du générateur de clés : {PH1}"
  },
  "panels/application/IndexedDBViews.ts | keyPath": {
    "message": "Chemin de la clé : "
  },
  "panels/application/IndexedDBViews.ts | keyString": {
    "message": "Clé"
  },
  "panels/application/IndexedDBViews.ts | objectStores": {
    "message": "Magasins d'objets"
  },
  "panels/application/IndexedDBViews.ts | pleaseConfirmDeleteOfSDatabase": {
    "message": "Veuillez confirmer la suppression de la base de données \"{PH1}\"."
  },
  "panels/application/IndexedDBViews.ts | primaryKey": {
    "message": "Clé primaire"
  },
  "panels/application/IndexedDBViews.ts | refresh": {
    "message": "Actualiser"
  },
  "panels/application/IndexedDBViews.ts | refreshDatabase": {
    "message": "Actualiser la base de données"
  },
  "panels/application/IndexedDBViews.ts | showNextPage": {
    "message": "Afficher la page suivante"
  },
  "panels/application/IndexedDBViews.ts | showPreviousPage": {
    "message": "Afficher la page précédente"
  },
  "panels/application/IndexedDBViews.ts | someEntriesMayHaveBeenModified": {
    "message": "Certaines entrées ont peut-être été modifiées"
  },
  "panels/application/IndexedDBViews.ts | startFromKey": {
    "message": "Démarrer à partir de la clé"
  },
  "panels/application/IndexedDBViews.ts | totalEntriesS": {
    "message": "Total d'entrées : {PH1}"
  },
  "panels/application/IndexedDBViews.ts | valueString": {
    "message": "Valeur"
  },
  "panels/application/IndexedDBViews.ts | version": {
    "message": "Version"
  },
  "panels/application/InterestGroupStorageView.ts | clickToDisplayBody": {
    "message": "Cliquez sur un événement de groupe de centres d'intérêt pour afficher l'état actuel du groupe"
  },
  "panels/application/InterestGroupStorageView.ts | noDataAvailable": {
    "message": "Aucun détail disponible pour le groupe de centres d'intérêt sélectionné. L'internaute a peut-être quitté le groupe."
  },
  "panels/application/InterestGroupTreeElement.ts | interestGroups": {
    "message": "Groupes d'intérêt"
  },
  "panels/application/OpenedWindowDetailsView.ts | accessToOpener": {
    "message": "Accès à l'application d'ouverture"
  },
  "panels/application/OpenedWindowDetailsView.ts | clickToRevealInElementsPanel": {
    "message": "Cliquer pour afficher dans le panneau \"Elements\""
  },
  "panels/application/OpenedWindowDetailsView.ts | closed": {
    "message": "fermée"
  },
  "panels/application/OpenedWindowDetailsView.ts | crossoriginEmbedderPolicy": {
    "message": "Règlement de l'intégrateur multi-origine"
  },
  "panels/application/OpenedWindowDetailsView.ts | document": {
    "message": "Document"
  },
  "panels/application/OpenedWindowDetailsView.ts | no": {
    "message": "Non"
  },
  "panels/application/OpenedWindowDetailsView.ts | openerFrame": {
    "message": "Frame de l'application d'ouverture"
  },
  "panels/application/OpenedWindowDetailsView.ts | reportingTo": {
    "message": "signale à"
  },
  "panels/application/OpenedWindowDetailsView.ts | security": {
    "message": "Sécurité"
  },
  "panels/application/OpenedWindowDetailsView.ts | securityIsolation": {
    "message": "Sécurité et isolement"
  },
  "panels/application/OpenedWindowDetailsView.ts | showsWhetherTheOpenedWindowIs": {
    "message": "Indique si la fenêtre ouverte peut accéder à l'application et inversement"
  },
  "panels/application/OpenedWindowDetailsView.ts | type": {
    "message": "Type"
  },
  "panels/application/OpenedWindowDetailsView.ts | unknown": {
    "message": "Inconnu"
  },
  "panels/application/OpenedWindowDetailsView.ts | url": {
    "message": "URL"
  },
  "panels/application/OpenedWindowDetailsView.ts | webWorker": {
    "message": "Nœud de calcul Web"
  },
  "panels/application/OpenedWindowDetailsView.ts | windowWithoutTitle": {
    "message": "Fenêtre sans titre"
  },
  "panels/application/OpenedWindowDetailsView.ts | worker": {
    "message": "worker"
  },
  "panels/application/OpenedWindowDetailsView.ts | yes": {
    "message": "Oui"
  },
  "panels/application/PreloadingTreeElement.ts | rules": {
    "message": "Règles"
  },
  "panels/application/PreloadingTreeElement.ts | speculations": {
    "message": "Spéculations"
  },
  "panels/application/PreloadingTreeElement.ts | speculativeLoads": {
    "message": "Chargements spéculatifs"
  },
  "panels/application/ReportingApiReportsView.ts | clickToDisplayBody": {
    "message": "Cliquez sur un rapport pour voir son corps"
  },
  "panels/application/ReportingApiTreeElement.ts | reportingApi": {
    "message": "API Reporting"
  },
  "panels/application/ResourcesPanel.ts | webSqlDeprecation": {
    "message": "Web SQL est obsolète. Vous pouvez participer à l'évaluation avant arrêt pour continuer à l'utiliser jusqu'à Chrome 123."
  },
  "panels/application/ServiceWorkerCacheTreeElement.ts | cacheStorage": {
    "message": "Espace de stockage du cache"
  },
  "panels/application/ServiceWorkerCacheTreeElement.ts | delete": {
    "message": "Supprimer"
  },
  "panels/application/ServiceWorkerCacheTreeElement.ts | refreshCaches": {
    "message": "Actualiser les caches"
  },
  "panels/application/ServiceWorkerCacheViews.ts | cache": {
    "message": "Cache"
  },
  "panels/application/ServiceWorkerCacheViews.ts | deleteSelected": {
    "message": "Supprimer la sélection"
  },
  "panels/application/ServiceWorkerCacheViews.ts | filterByPath": {
    "message": "Filtrer par chemin d'accès"
  },
  "panels/application/ServiceWorkerCacheViews.ts | headers": {
    "message": "En-têtes"
  },
  "panels/application/ServiceWorkerCacheViews.ts | matchingEntriesS": {
    "message": "Entrées correspondantes : {PH1}"
  },
  "panels/application/ServiceWorkerCacheViews.ts | name": {
    "message": "Nom"
  },
  "panels/application/ServiceWorkerCacheViews.ts | preview": {
    "message": "Aperçu"
  },
  "panels/application/ServiceWorkerCacheViews.ts | refresh": {
    "message": "Actualiser"
  },
  "panels/application/ServiceWorkerCacheViews.ts | selectACacheEntryAboveToPreview": {
    "message": "Sélectionnez une entrée de cache ci-dessus pour prévisualiser"
  },
  "panels/application/ServiceWorkerCacheViews.ts | serviceWorkerCache": {
    "message": "Cache de Service Worker"
  },
  "panels/application/ServiceWorkerCacheViews.ts | timeCached": {
    "message": "Durée de mise en cache"
  },
  "panels/application/ServiceWorkerCacheViews.ts | totalEntriesS": {
    "message": "Total d'entrées : {PH1}"
  },
  "panels/application/ServiceWorkerCacheViews.ts | varyHeaderWarning": {
    "message": "⚠️ Définir \"ignoreVary\" sur \"True\" en cas de correspondance avec cette entrée"
  },
  "panels/application/ServiceWorkerUpdateCycleView.ts | endTimeS": {
    "message": "Heure de fin : {PH1}"
  },
  "panels/application/ServiceWorkerUpdateCycleView.ts | startTimeS": {
    "message": "Heure de début : {PH1}"
  },
  "panels/application/ServiceWorkerUpdateCycleView.ts | timeline": {
    "message": "Chronologie"
  },
  "panels/application/ServiceWorkerUpdateCycleView.ts | updateActivity": {
    "message": "Mettre à jour l'activité"
  },
  "panels/application/ServiceWorkerUpdateCycleView.ts | version": {
    "message": "Version"
  },
  "panels/application/ServiceWorkersView.ts | bypassForNetwork": {
    "message": "Contourner pour le réseau"
  },
  "panels/application/ServiceWorkersView.ts | bypassTheServiceWorkerAndLoad": {
    "message": "Contourner le service worker et charger les ressources du réseau"
  },
  "panels/application/ServiceWorkersView.ts | clients": {
    "message": "Clients"
  },
  "panels/application/ServiceWorkersView.ts | focus": {
    "message": "élément sélectionné"
  },
  "panels/application/ServiceWorkersView.ts | inspect": {
    "message": "inspecter"
  },
  "panels/application/ServiceWorkersView.ts | networkRequests": {
    "message": "Requêtes réseau"
  },
  "panels/application/ServiceWorkersView.ts | onPageReloadForceTheService": {
    "message": "Lors de l'actualisation de la page, forcez la mise à jour du service worker et activez-le"
  },
  "panels/application/ServiceWorkersView.ts | periodicSync": {
    "message": "Synchronisation périodique"
  },
  "panels/application/ServiceWorkersView.ts | periodicSyncTag": {
    "message": "Tag de synchronisation périodique"
  },
  "panels/application/ServiceWorkersView.ts | pushData": {
    "message": "Données push"
  },
  "panels/application/ServiceWorkersView.ts | pushString": {
    "message": "Push"
  },
  "panels/application/ServiceWorkersView.ts | receivedS": {
    "message": "Reçu : {PH1}"
  },
  "panels/application/ServiceWorkersView.ts | routers": {
    "message": "Routeurs"
  },
  "panels/application/ServiceWorkersView.ts | sActivatedAndIsS": {
    "message": "#{PH1} activé et est {PH2}"
  },
  "panels/application/ServiceWorkersView.ts | sDeleted": {
    "message": "{PH1} (supprimé)"
  },
  "panels/application/ServiceWorkersView.ts | sIsRedundant": {
    "message": "#{PH1} est redondant"
  },
  "panels/application/ServiceWorkersView.ts | sRegistrationErrors": {
    "message": "{PH1} erreurs d'enregistrement"
  },
  "panels/application/ServiceWorkersView.ts | sTryingToInstall": {
    "message": "{PH1} tentatives d'installation"
  },
  "panels/application/ServiceWorkersView.ts | sWaitingToActivate": {
    "message": "#{PH1} en attente d'activation"
  },
  "panels/application/ServiceWorkersView.ts | seeAllRegistrations": {
    "message": "Afficher tous les enregistrements"
  },
  "panels/application/ServiceWorkersView.ts | serviceWorkerForS": {
    "message": "Service worker pour {PH1}"
  },
  "panels/application/ServiceWorkersView.ts | serviceWorkersFromOtherOrigins": {
    "message": "Service workers d'autres origines"
  },
  "panels/application/ServiceWorkersView.ts | source": {
    "message": "Source"
  },
  "panels/application/ServiceWorkersView.ts | startString": {
    "message": "démarrer"
  },
  "panels/application/ServiceWorkersView.ts | status": {
    "message": "État"
  },
  "panels/application/ServiceWorkersView.ts | stopString": {
    "message": "arrêter"
  },
  "panels/application/ServiceWorkersView.ts | syncString": {
    "message": "Synchronisation"
  },
  "panels/application/ServiceWorkersView.ts | syncTag": {
    "message": "Tag de synchronisation"
  },
  "panels/application/ServiceWorkersView.ts | testPushMessageFromDevtools": {
    "message": "Testez le message push dans les outils de développement."
  },
  "panels/application/ServiceWorkersView.ts | unregister": {
    "message": "Annuler l'enregistrement"
  },
  "panels/application/ServiceWorkersView.ts | unregisterServiceWorker": {
    "message": "Désinscrire le service worker"
  },
  "panels/application/ServiceWorkersView.ts | update": {
    "message": "Mettre à jour"
  },
  "panels/application/ServiceWorkersView.ts | updateCycle": {
    "message": "Cycle de mise à jour"
  },
  "panels/application/ServiceWorkersView.ts | updateOnReload": {
    "message": "Mettre à jour lors de l'actualisation"
  },
  "panels/application/ServiceWorkersView.ts | workerS": {
    "message": "Nœud de calcul : {PH1}"
  },
  "panels/application/SharedStorageEventsView.ts | clickToDisplayBody": {
    "message": "Cliquez sur un événement de stockage partagé pour afficher ses paramètres."
  },
  "panels/application/SharedStorageItemsView.ts | key": {
    "message": "Clé"
  },
  "panels/application/SharedStorageItemsView.ts | selectAValueToPreview": {
    "message": "Sélectionnez une valeur à prévisualiser"
  },
  "panels/application/SharedStorageItemsView.ts | sharedStorage": {
    "message": "Stockage partagé"
  },
  "panels/application/SharedStorageItemsView.ts | sharedStorageFilteredItemsCleared": {
    "message": "Les éléments filtrés du stockage partagé ont été effacés"
  },
  "panels/application/SharedStorageItemsView.ts | sharedStorageItemDeleted": {
    "message": "L'élément dans l'espace de stockage a été supprimé."
  },
  "panels/application/SharedStorageItemsView.ts | sharedStorageItemEditCanceled": {
    "message": "La modification de l'élément dans l'espace de stockage a été annulée."
  },
  "panels/application/SharedStorageItemsView.ts | sharedStorageItemEdited": {
    "message": "L'élément dans l'espace de stockage a été modifié."
  },
  "panels/application/SharedStorageItemsView.ts | sharedStorageItems": {
    "message": "Éléments de stockage partagé"
  },
  "panels/application/SharedStorageItemsView.ts | sharedStorageItemsCleared": {
    "message": "Éléments de stockage partagé effacés"
  },
  "panels/application/SharedStorageItemsView.ts | sharedStorageNumberEntries": {
    "message": "Nombre d'entrées affichées dans le tableau : {PH1}"
  },
  "panels/application/SharedStorageItemsView.ts | value": {
    "message": "Valeur"
  },
  "panels/application/SharedStorageListTreeElement.ts | sharedStorage": {
    "message": "Stockage partagé"
  },
  "panels/application/StorageBucketsTreeElement.ts | storageBuckets": {
    "message": "Compartiments de stockage"
  },
  "panels/application/StorageItemsView.ts | clearAll": {
    "message": "Tout effacer"
  },
  "panels/application/StorageItemsView.ts | deleteSelected": {
    "message": "Supprimer la sélection"
  },
  "panels/application/StorageItemsView.ts | filter": {
    "message": "Filtrer"
  },
  "panels/application/StorageItemsView.ts | refresh": {
    "message": "Actualiser"
  },
  "panels/application/StorageItemsView.ts | refreshedStatus": {
    "message": "Tableau actualisé"
  },
  "panels/application/StorageView.ts | SiteDataCleared": {
    "message": "Données des sites effacées"
  },
  "panels/application/StorageView.ts | application": {
    "message": "Appli"
  },
  "panels/application/StorageView.ts | cacheStorage": {
    "message": "Espace de stockage du cache"
  },
  "panels/application/StorageView.ts | clearSiteData": {
    "message": "Effacer les données des sites"
  },
  "panels/application/StorageView.ts | clearing": {
    "message": "Suppression..."
  },
  "panels/application/StorageView.ts | cookies": {
    "message": "Cookies"
  },
  "panels/application/StorageView.ts | fileSystem": {
    "message": "Système de fichiers"
  },
  "panels/application/StorageView.ts | includingThirdPartyCookies": {
    "message": "y compris les cookies tiers"
  },
  "panels/application/StorageView.ts | indexDB": {
    "message": "Base de données indexée"
  },
  "panels/application/StorageView.ts | internalError": {
    "message": "Erreur interne"
  },
  "panels/application/StorageView.ts | learnMore": {
    "message": "En savoir plus"
  },
  "panels/application/StorageView.ts | localAndSessionStorage": {
    "message": "Espace de stockage local et de la session"
  },
  "panels/application/StorageView.ts | mb": {
    "message": "Mo"
  },
  "panels/application/StorageView.ts | numberMustBeNonNegative": {
    "message": "La valeur ne doit pas être négative"
  },
  "panels/application/StorageView.ts | numberMustBeSmaller": {
    "message": "Le nombre doit être inférieur à {PH1}"
  },
  "panels/application/StorageView.ts | other": {
    "message": "Autre"
  },
  "panels/application/StorageView.ts | pleaseEnterANumber": {
    "message": "Veuillez saisir un nombre"
  },
  "panels/application/StorageView.ts | sFailedToLoad": {
    "message": "{PH1} (échec du chargement)"
  },
  "panels/application/StorageView.ts | serviceWorkers": {
    "message": "Service workers"
  },
  "panels/application/StorageView.ts | simulateCustomStorage": {
    "message": "Simuler un quota de stockage personnalisé"
  },
  "panels/application/StorageView.ts | storageQuotaIsLimitedIn": {
    "message": "Le quota de stockage est limité en mode navigation privée"
  },
  "panels/application/StorageView.ts | storageQuotaUsed": {
    "message": "{PH1} utilisés (quota de stockage : {PH2})"
  },
  "panels/application/StorageView.ts | storageQuotaUsedWithBytes": {
    "message": "{PH1} octets utilisés sur {PH2} (quota d'espace de stockage)"
  },
  "panels/application/StorageView.ts | storageTitle": {
    "message": "Stockage"
  },
  "panels/application/StorageView.ts | storageUsage": {
    "message": "Utilisation de l'espace de stockage"
  },
  "panels/application/StorageView.ts | storageWithCustomMarker": {
    "message": "{PH1} (personnalisé)"
  },
  "panels/application/StorageView.ts | unregisterServiceWorker": {
    "message": "Annuler l'enregistrement des service workers"
  },
  "panels/application/StorageView.ts | usage": {
    "message": "Utilisation"
  },
  "panels/application/StorageView.ts | webSql": {
    "message": "Web SQL"
  },
  "panels/application/TrustTokensTreeElement.ts | trustTokens": {
    "message": "Jetons d'état privés"
  },
  "panels/application/application-meta.ts | application": {
    "message": "Appli"
  },
  "panels/application/application-meta.ts | clearSiteData": {
    "message": "Effacer les données des sites"
  },
  "panels/application/application-meta.ts | clearSiteDataIncludingThirdparty": {
    "message": "Effacer les données du site (y compris les cookies tiers)"
  },
  "panels/application/application-meta.ts | pwa": {
    "message": "PWA"
  },
  "panels/application/application-meta.ts | showApplication": {
    "message": "Afficher l'application"
  },
  "panels/application/application-meta.ts | startRecordingEvents": {
    "message": "Démarrer l'enregistrement des événements"
  },
  "panels/application/application-meta.ts | stopRecordingEvents": {
    "message": "Arrêter l'enregistrement d'événements"
  },
  "panels/application/components/BackForwardCacheStrings.ts | CookieFlushed": {
    "message": "Non défini"
  },
  "panels/application/components/BackForwardCacheStrings.ts | HTTPAuthRequired": {
    "message": "Non défini"
  },
  "panels/application/components/BackForwardCacheStrings.ts | HTTPMethodNotGET": {
    "message": "Seules les pages chargées via une demande GET sont éligibles au cache amélioré."
  },
  "panels/application/components/BackForwardCacheStrings.ts | HTTPStatusNotOK": {
    "message": "Seules les pages dont le code d'état est 2XX peuvent être mises en cache."
  },
  "panels/application/components/BackForwardCacheStrings.ts | JavaScriptExecution": {
    "message": "Chrome a détecté une tentative d'exécuter JavaScript alors que la page se trouve dans le cache."
  },
  "panels/application/components/BackForwardCacheStrings.ts | LiveMediaStreamTrack": {
    "message": "Non défini"
  },
  "panels/application/components/BackForwardCacheStrings.ts | SmartCard": {
    "message": "Non défini"
  },
  "panels/application/components/BackForwardCacheStrings.ts | UnloadHandler": {
    "message": "Non défini"
  },
  "panels/application/components/BackForwardCacheStrings.ts | appBanner": {
    "message": "Les pages qui ont demandé une AppBanner ne sont pas éligibles au cache amélioré."
  },
  "panels/application/components/BackForwardCacheStrings.ts | backForwardCacheDisabled": {
    "message": "Le cache amélioré est désactivé dans chrome://flags. Accédez à chrome://flags/#back-forward-cache pour l'activer en local sur cet appareil."
  },
  "panels/application/components/BackForwardCacheStrings.ts | backForwardCacheDisabledByCommandLine": {
    "message": "La ligne de commande a désactivé le cache amélioré."
  },
  "panels/application/components/BackForwardCacheStrings.ts | backForwardCacheDisabledByLowMemory": {
    "message": "Le cache amélioré est désactivé en raison d'une mémoire insuffisante."
  },
  "panels/application/components/BackForwardCacheStrings.ts | backForwardCacheDisabledForDelegate": {
    "message": "Le délégué n'accepte pas le cache amélioré."
  },
  "panels/application/components/BackForwardCacheStrings.ts | backForwardCacheDisabledForPrerender": {
    "message": "Le cache amélioré est désactivé pour le prérendu."
  },
  "panels/application/components/BackForwardCacheStrings.ts | broadcastChannel": {
    "message": "La page ne peut pas être mise en cache, car elle contient une instance BroadcastChannel avec des écouteurs inscrits."
  },
  "panels/application/components/BackForwardCacheStrings.ts | cacheControlNoStore": {
    "message": "Les pages qui contiennent l'en-tête cache-control:no-store ne peuvent pas être incluses dans le cache amélioré."
  },
  "panels/application/components/BackForwardCacheStrings.ts | cacheFlushed": {
    "message": "Le cache a été effacé volontairement."
  },
  "panels/application/components/BackForwardCacheStrings.ts | cacheLimit": {
    "message": "La page a été exclue du cache afin de laisser la place à une autre."
  },
  "panels/application/components/BackForwardCacheStrings.ts | containsPlugins": {
    "message": "Les pages contenant des plug-ins ne sont actuellement pas éligibles au cache amélioré."
  },
  "panels/application/components/BackForwardCacheStrings.ts | contentFileChooser": {
    "message": "Les pages qui utilisent l'API FileChooser ne sont pas éligibles au cache amélioré."
  },
  "panels/application/components/BackForwardCacheStrings.ts | contentFileSystemAccess": {
    "message": "Les pages qui utilisent l'API File System Access ne sont pas éligibles au cache amélioré."
  },
  "panels/application/components/BackForwardCacheStrings.ts | contentMediaDevicesDispatcherHost": {
    "message": "Les pages qui utilisent Media Device Dispatcher ne sont actuellement pas éligibles au cache amélioré."
  },
  "panels/application/components/BackForwardCacheStrings.ts | contentMediaPlay": {
    "message": "La page a été quittée alors qu'un lecteur multimédia s'exécutait."
  },
  "panels/application/components/BackForwardCacheStrings.ts | contentMediaSession": {
    "message": "Les pages qui utilisent l'API MediaSession et définissent un état de lecture ne sont pas éligibles au cache amélioré."
  },
  "panels/application/components/BackForwardCacheStrings.ts | contentMediaSessionService": {
    "message": "Les pages qui utilisent l'API MediaSession et définissent des gestionnaires d'action ne sont actuellement pas éligibles au cache amélioré."
  },
  "panels/application/components/BackForwardCacheStrings.ts | contentScreenReader": {
    "message": "Le cache amélioré est désactivé en raison du lecteur d'écran."
  },
  "panels/application/components/BackForwardCacheStrings.ts | contentSecurityHandler": {
    "message": "Les pages qui utilisent SecurityHandler ne sont pas éligibles au cache amélioré."
  },
  "panels/application/components/BackForwardCacheStrings.ts | contentSerial": {
    "message": "Les pages qui utilisent l'API Serial ne sont pas éligibles au cache amélioré."
  },
  "panels/application/components/BackForwardCacheStrings.ts | contentWebAuthenticationAPI": {
    "message": "Les pages qui utilisent l'API WebAuthentication ne sont pas éligibles au cache amélioré."
  },
  "panels/application/components/BackForwardCacheStrings.ts | contentWebBluetooth": {
    "message": "Les pages qui utilisent l'API WebBluetooth ne sont pas éligibles au cache amélioré."
  },
  "panels/application/components/BackForwardCacheStrings.ts | contentWebUSB": {
    "message": "Les pages qui utilisent l'API WebUSB ne sont pas éligibles au cache amélioré."
  },
  "panels/application/components/BackForwardCacheStrings.ts | cookieDisabled": {
    "message": "Le cache amélioré est désactivé, car les cookies sont désactivés sur une page qui utilise Cache-Control: no-store."
  },
  "panels/application/components/BackForwardCacheStrings.ts | dedicatedWorkerOrWorklet": {
    "message": "Les pages qui utilisent un worker ou un worklet dédié ne sont pas éligibles au cache amélioré."
  },
  "panels/application/components/BackForwardCacheStrings.ts | documentLoaded": {
    "message": "La page a été quittée avant que le document soit entièrement chargé."
  },
  "panels/application/components/BackForwardCacheStrings.ts | embedderAppBannerManager": {
    "message": "La page a été quittée alors qu'une bannière d'appli était présente."
  },
  "panels/application/components/BackForwardCacheStrings.ts | embedderChromePasswordManagerClientBindCredentialManager": {
    "message": "La page a été quittée alors que le Gestionnaire de mots de passe Chrome était présent."
  },
  "panels/application/components/BackForwardCacheStrings.ts | embedderDomDistillerSelfDeletingRequestDelegate": {
    "message": "La page a été quittée alors que la distillation DOM était en cours."
  },
  "panels/application/components/BackForwardCacheStrings.ts | embedderDomDistillerViewerSource": {
    "message": "La page a été quittée alors que DOM Distiller Viewer était présent."
  },
  "panels/application/components/BackForwardCacheStrings.ts | embedderExtensionMessaging": {
    "message": "Le cache amélioré est désactivé en raison d'extensions utilisant une API d'envoi de messages."
  },
  "panels/application/components/BackForwardCacheStrings.ts | embedderExtensionMessagingForOpenPort": {
    "message": "Les extensions à connexion longue durée doivent fermer la connexion avant d'accéder au cache amélioré."
  },
  "panels/application/components/BackForwardCacheStrings.ts | embedderExtensionSentMessageToCachedFrame": {
    "message": "Des extensions à connexion longue durée ont tenté d'envoyer des messages aux frames dans le cache amélioré."
  },
  "panels/application/components/BackForwardCacheStrings.ts | embedderExtensions": {
    "message": "Le cache amélioré est désactivé en raison des extensions."
  },
  "panels/application/components/BackForwardCacheStrings.ts | embedderModalDialog": {
    "message": "La page a été quittée alors qu'une boîte de dialogue modale pour renvoyer un formulaire ou indiquer un mot de passe http, par exemple, était affichée pour cette page."
  },
  "panels/application/components/BackForwardCacheStrings.ts | embedderOfflinePage": {
    "message": "La page a été quittée alors que la page hors connexion était affichée."
  },
  "panels/application/components/BackForwardCacheStrings.ts | embedderOomInterventionTabHelper": {
    "message": "La page a été quittée alors que la barre d'intervention pour mémoire insuffisante était présente."
  },
  "panels/application/components/BackForwardCacheStrings.ts | embedderPermissionRequestManager": {
    "message": "La page a été quittée alors qu'il y avait des demandes d'autorisation."
  },
  "panels/application/components/BackForwardCacheStrings.ts | embedderPopupBlockerTabHelper": {
    "message": "La page a été quittée alors que le bloqueur de pop-up était présent."
  },
  "panels/application/components/BackForwardCacheStrings.ts | embedderSafeBrowsingThreatDetails": {
    "message": "La page a été quittée alors que les détails de la navigation sécurisée étaient affichés."
  },
  "panels/application/components/BackForwardCacheStrings.ts | embedderSafeBrowsingTriggeredPopupBlocker": {
    "message": "La navigation sécurisée a considéré cette page comme abusive et a bloqué le pop-up."
  },
  "panels/application/components/BackForwardCacheStrings.ts | enteredBackForwardCacheBeforeServiceWorkerHostAdded": {
    "message": "Un service worker a été activé alors que la page se trouvait dans le cache amélioré."
  },
  "panels/application/components/BackForwardCacheStrings.ts | errorDocument": {
    "message": "Le cache amélioré est désactivé à cause d'une erreur liée au document"
  },
  "panels/application/components/BackForwardCacheStrings.ts | fencedFramesEmbedder": {
    "message": "Les pages qui utilisent FencedFrames ne peuvent pas être stockées dans bfcache."
  },
  "panels/application/components/BackForwardCacheStrings.ts | foregroundCacheLimit": {
    "message": "La page a été exclue du cache afin de laisser la place à une autre."
  },
  "panels/application/components/BackForwardCacheStrings.ts | grantedMediaStreamAccess": {
    "message": "Les pages sur lesquelles l'accès au flux multimédia est autorisé ne sont actuellement pas éligibles au cache amélioré."
  },
  "panels/application/components/BackForwardCacheStrings.ts | haveInnerContents": {
    "message": "Les pages qui utilisent des portails ne sont actuellement pas éligibles au cache amélioré."
  },
  "panels/application/components/BackForwardCacheStrings.ts | idleManager": {
    "message": "Les pages qui utilisent IdleManager ne sont actuellement pas éligibles au cache amélioré."
  },
  "panels/application/components/BackForwardCacheStrings.ts | indexedDBConnection": {
    "message": "Les pages avec une connexion IndexedDB active ne sont actuellement pas éligibles au cache amélioré."
  },
  "panels/application/components/BackForwardCacheStrings.ts | indexedDBEvent": {
    "message": "Le cache amélioré est désactivé en raison d'un événement IndexedDB."
  },
  "panels/application/components/BackForwardCacheStrings.ts | ineligibleAPI": {
    "message": "Des API non éligibles ont été utilisées."
  },
  "panels/application/components/BackForwardCacheStrings.ts | injectedJavascript": {
    "message": "Les pages dans lesquelles des extensions injectent une JavaScript ne sont actuellement pas éligibles au cache amélioré."
  },
  "panels/application/components/BackForwardCacheStrings.ts | injectedStyleSheet": {
    "message": "Les pages dans lesquelles des extensions injectent une StyleSheet ne sont actuellement pas éligibles au cache amélioré."
  },
  "panels/application/components/BackForwardCacheStrings.ts | internalError": {
    "message": "Erreur interne."
  },
  "panels/application/components/BackForwardCacheStrings.ts | jsNetworkRequestReceivedCacheControlNoStoreResource": {
    "message": "Le cache amélioré est désactivé, car une requête réseau JavaScript a reçu une ressource avec l'en-tête Cache-Control: no-store."
  },
  "panels/application/components/BackForwardCacheStrings.ts | keepaliveRequest": {
    "message": "Le cache amélioré est désactivé en raison d'une requête de message keepalive."
  },
  "panels/application/components/BackForwardCacheStrings.ts | keyboardLock": {
    "message": "Les pages qui utilisent le verrouillage du clavier ne sont actuellement pas éligibles au cache amélioré."
  },
  "panels/application/components/BackForwardCacheStrings.ts | loading": {
    "message": "La page a été quittée avant d'être entièrement chargée."
  },
  "panels/application/components/BackForwardCacheStrings.ts | mainResourceHasCacheControlNoCache": {
    "message": "Les pages dont la ressource principale contient cache-control:no-cache ne peuvent pas être incluses dans le cache amélioré."
  },
  "panels/application/components/BackForwardCacheStrings.ts | mainResourceHasCacheControlNoStore": {
    "message": "Les pages dont la ressource principale contient cache-control:no-store ne peuvent pas être incluses dans le cache amélioré."
  },
  "panels/application/components/BackForwardCacheStrings.ts | navigationCancelledWhileRestoring": {
    "message": "La navigation a été annulée avant que la page puisse être restaurée à partir du cache amélioré."
  },
  "panels/application/components/BackForwardCacheStrings.ts | networkExceedsBufferLimit": {
    "message": "La page a été exclue du cache, car une connexion réseau active a reçu trop de données. Chrome limite la quantité de données qu'une page mise en cache peut recevoir."
  },
  "panels/application/components/BackForwardCacheStrings.ts | networkRequestDatapipeDrainedAsBytesConsumer": {
    "message": "Les pages ayant une requête fetch() ou XHR en cours ne sont actuellement pas éligibles au cache amélioré."
  },
  "panels/application/components/BackForwardCacheStrings.ts | networkRequestRedirected": {
    "message": "La page a été exclue du cache amélioré, car une requête réseau active impliquait une redirection."
  },
  "panels/application/components/BackForwardCacheStrings.ts | networkRequestTimeout": {
    "message": "La page a été exclue du cache, car elle est restée ouverte à une connexion réseau trop longtemps. Chrome limite la durée pendant laquelle une page mise en cache peut recevoir des données."
  },
  "panels/application/components/BackForwardCacheStrings.ts | noResponseHead": {
    "message": "Les pages dépourvues d'un en-tête de réponse valide ne peuvent pas être incluses dans le cache amélioré."
  },
  "panels/application/components/BackForwardCacheStrings.ts | notMainFrame": {
    "message": "La navigation a eu lieu dans un frame autre que le principal."
  },
  "panels/application/components/BackForwardCacheStrings.ts | outstandingIndexedDBTransaction": {
    "message": "La page avec des transactions DB indexées en cours n'est actuellement pas éligible au cache amélioré."
  },
  "panels/application/components/BackForwardCacheStrings.ts | outstandingNetworkRequestDirectSocket": {
    "message": "Les pages ayant une requête réseau en cours ne sont actuellement pas éligibles au cache amélioré."
  },
  "panels/application/components/BackForwardCacheStrings.ts | outstandingNetworkRequestFetch": {
    "message": "Les pages avec une requête réseau fetch() en cours ne sont actuellement pas éligibles au cache amélioré."
  },
  "panels/application/components/BackForwardCacheStrings.ts | outstandingNetworkRequestOthers": {
    "message": "Les pages ayant une requête réseau en cours ne sont actuellement pas éligibles au cache amélioré."
  },
  "panels/application/components/BackForwardCacheStrings.ts | outstandingNetworkRequestXHR": {
    "message": "Les pages ayant une requête réseau XHR en cours ne sont actuellement pas éligibles au cache amélioré."
  },
  "panels/application/components/BackForwardCacheStrings.ts | paymentManager": {
    "message": "Les pages qui utilisent PaymentManager ne sont actuellement pas éligibles au cache amélioré."
  },
  "panels/application/components/BackForwardCacheStrings.ts | pictureInPicture": {
    "message": "Les pages qui utilisent le Picture-in-picture ne sont actuellement pas éligibles au cache amélioré."
  },
  "panels/application/components/BackForwardCacheStrings.ts | portal": {
    "message": "Les pages qui utilisent des portails ne sont actuellement pas éligibles au cache amélioré."
  },
  "panels/application/components/BackForwardCacheStrings.ts | printing": {
    "message": "Les pages qui affichent l'UI d'impression ne sont actuellement pas éligibles au cache amélioré."
  },
  "panels/application/components/BackForwardCacheStrings.ts | relatedActiveContentsExist": {
    "message": "Soit la page a été ouverte avec window.open() (et un autre onglet comprend une référence à celle-ci), soit elle a ouvert une fenêtre."
  },
  "panels/application/components/BackForwardCacheStrings.ts | rendererProcessCrashed": {
    "message": "Le processus de rendu de la page située dans le cache amélioré a planté."
  },
  "panels/application/components/BackForwardCacheStrings.ts | rendererProcessKilled": {
    "message": "Le processus de rendu de la page située dans le cache amélioré a été interrompu."
  },
  "panels/application/components/BackForwardCacheStrings.ts | requestedAudioCapturePermission": {
    "message": "Les pages qui ont demandé des autorisations pour des captures audio ne sont actuellement pas éligibles au cache amélioré."
  },
  "panels/application/components/BackForwardCacheStrings.ts | requestedBackForwardCacheBlockedSensors": {
    "message": "Les pages qui ont demandé des autorisations pour des capteurs ne sont actuellement pas éligibles au cache amélioré."
  },
  "panels/application/components/BackForwardCacheStrings.ts | requestedBackgroundWorkPermission": {
    "message": "Les pages qui ont demandé une synchronisation en arrière-plan ou des autorisations d'extraction ne sont actuellement pas éligibles au cache amélioré."
  },
  "panels/application/components/BackForwardCacheStrings.ts | requestedMIDIPermission": {
    "message": "Les pages qui ont demandé des autorisations MIDI ne sont actuellement pas éligibles au cache amélioré."
  },
  "panels/application/components/BackForwardCacheStrings.ts | requestedNotificationsPermission": {
    "message": "Les pages qui ont demandé des autorisations pour des notifications ne sont actuellement pas éligibles au cache amélioré."
  },
  "panels/application/components/BackForwardCacheStrings.ts | requestedStorageAccessGrant": {
    "message": "Les pages qui ont demandé à accéder à l'espace de stockage ne sont actuellement pas éligibles au cache amélioré."
  },
  "panels/application/components/BackForwardCacheStrings.ts | requestedVideoCapturePermission": {
    "message": "Les pages qui ont demandé des autorisations pour des captures vidéo ne sont actuellement pas éligibles au cache amélioré."
  },
  "panels/application/components/BackForwardCacheStrings.ts | schemeNotHTTPOrHTTPS": {
    "message": "Seules les pages dont le schéma d'URL est HTTP/HTTPS peuvent être mises en cache."
  },
  "panels/application/components/BackForwardCacheStrings.ts | serviceWorkerClaim": {
    "message": "La page a été revendiquée par un service worker alors qu'elle se trouve dans le cache amélioré."
  },
  "panels/application/components/BackForwardCacheStrings.ts | serviceWorkerPostMessage": {
    "message": "Un service worker a tenté d'envoyer une propriété MessageEvent à la page située dans le cache amélioré."
  },
  "panels/application/components/BackForwardCacheStrings.ts | serviceWorkerUnregistration": {
    "message": "ServiceWorker a été désinscrit alors qu'une page se trouvait dans le cache amélioré."
  },
  "panels/application/components/BackForwardCacheStrings.ts | serviceWorkerVersionActivation": {
    "message": "La page a été exclue du cache amélioré, car un service worker a été activé."
  },
  "panels/application/components/BackForwardCacheStrings.ts | sessionRestored": {
    "message": "Chrome a redémarré et effacé les entrées du cache amélioré."
  },
  "panels/application/components/BackForwardCacheStrings.ts | sharedWorker": {
    "message": "Les pages qui utilisent SharedWorker ne sont actuellement pas éligibles au cache amélioré."
  },
  "panels/application/components/BackForwardCacheStrings.ts | speechRecognizer": {
    "message": "Les pages qui utilisent SpeechRecognizer ne sont actuellement pas éligibles au cache amélioré."
  },
  "panels/application/components/BackForwardCacheStrings.ts | speechSynthesis": {
    "message": "Les pages qui utilisent SpeechSynthesis ne sont actuellement pas éligibles au cache amélioré."
  },
  "panels/application/components/BackForwardCacheStrings.ts | subframeIsNavigating": {
    "message": "Une navigation a démarré sur un iFrame de la page, mais ne s'est pas terminée."
  },
  "panels/application/components/BackForwardCacheStrings.ts | subresourceHasCacheControlNoCache": {
    "message": "Les pages dont la sous-ressource contient cache-control:no-cache ne peuvent pas être incluses dans le cache amélioré."
  },
  "panels/application/components/BackForwardCacheStrings.ts | subresourceHasCacheControlNoStore": {
    "message": "Les pages dont la sous-ressource contient cache-control:no-store ne sont pas éligibles au cache amélioré."
  },
  "panels/application/components/BackForwardCacheStrings.ts | timeout": {
    "message": "La page a dépassé la durée maximale autorisée dans le cache amélioré et a expiré."
  },
  "panels/application/components/BackForwardCacheStrings.ts | timeoutPuttingInCache": {
    "message": "Le délai d'enregistrement de la page dans le cache amélioré a été dépassé (probablement en raison de gestionnaires pagehide de longue durée)."
  },
  "panels/application/components/BackForwardCacheStrings.ts | unloadHandlerExistsInMainFrame": {
    "message": "Le frame principal de l'image contient un gestionnaire unload."
  },
  "panels/application/components/BackForwardCacheStrings.ts | unloadHandlerExistsInSubFrame": {
    "message": "Le sous-frame de l'image contient un gestionnaire unload."
  },
  "panels/application/components/BackForwardCacheStrings.ts | userAgentOverrideDiffers": {
    "message": "Le navigateur a modifié l'en-tête de forçage user-agent."
  },
  "panels/application/components/BackForwardCacheStrings.ts | wasGrantedMediaAccess": {
    "message": "Les pages qui ont autorisé l'enregistrement audio ou vidéo ne sont actuellement pas éligibles au cache amélioré."
  },
  "panels/application/components/BackForwardCacheStrings.ts | webDatabase": {
    "message": "Les pages qui utilisent WebDatabase ne sont actuellement pas éligibles au cache amélioré."
  },
  "panels/application/components/BackForwardCacheStrings.ts | webHID": {
    "message": "Les pages qui utilisent WebHID ne sont actuellement pas éligibles au cache amélioré."
  },
  "panels/application/components/BackForwardCacheStrings.ts | webLocks": {
    "message": "Les pages qui utilisent WebLocks ne sont actuellement pas éligibles au cache amélioré."
  },
  "panels/application/components/BackForwardCacheStrings.ts | webNfc": {
    "message": "Les pages qui utilisent WebNfc ne sont actuellement pas éligibles au cache amélioré."
  },
  "panels/application/components/BackForwardCacheStrings.ts | webOTPService": {
    "message": "Les pages qui utilisent WebOTPService ne sont actuellement pas éligibles à bfcache."
  },
  "panels/application/components/BackForwardCacheStrings.ts | webRTC": {
    "message": "Les pages avec WebRTC ne peuvent pas être incluses dans le cache amélioré."
  },
  "panels/application/components/BackForwardCacheStrings.ts | webRTCSticky": {
    "message": "Le cache amélioré est désactivé, car WebRTC a été utilisé."
  },
  "panels/application/components/BackForwardCacheStrings.ts | webShare": {
    "message": "Les pages qui utilisent WebShare ne sont actuellement pas éligibles au cache amélioré."
  },
  "panels/application/components/BackForwardCacheStrings.ts | webSocket": {
    "message": "Les pages avec WebSocket ne peuvent pas être incluses dans le cache amélioré."
  },
  "panels/application/components/BackForwardCacheStrings.ts | webSocketSticky": {
    "message": "Le cache amélioré est désactivé, car WebSocket a été utilisé."
  },
  "panels/application/components/BackForwardCacheStrings.ts | webTransport": {
    "message": "Les pages avec WebTransport ne sont pas éligibles au cache amélioré."
  },
  "panels/application/components/BackForwardCacheStrings.ts | webTransportSticky": {
    "message": "Le cache amélioré est désactivé, car WebTransport a été utilisé."
  },
  "panels/application/components/BackForwardCacheStrings.ts | webXR": {
    "message": "Les pages qui utilisent WebXR ne sont actuellement pas éligibles au cache amélioré."
  },
  "panels/application/components/BackForwardCacheView.ts | backForwardCacheTitle": {
    "message": "Cache amélioré"
  },
  "panels/application/components/BackForwardCacheView.ts | blankURLTitle": {
    "message": "URL vide [{PH1}]"
  },
  "panels/application/components/BackForwardCacheView.ts | blockingExtensionId": {
    "message": "ID d'extension : "
  },
  "panels/application/components/BackForwardCacheView.ts | circumstantial": {
    "message": "Aucune action possible"
  },
  "panels/application/components/BackForwardCacheView.ts | circumstantialExplanation": {
    "message": "Vous ne pouvez pas agir sur ces raisons, car un élément échappant au contrôle de la page a empêché la mise en cache."
  },
  "panels/application/components/BackForwardCacheView.ts | filesPerIssue": {
    "message": "{n,plural, =1{# fichier}one{# fichier}other{# fichiers}}"
  },
  "panels/application/components/BackForwardCacheView.ts | framesPerIssue": {
    "message": "{n,plural, =1{# frame}one{# frame}other{# frames}}"
  },
  "panels/application/components/BackForwardCacheView.ts | framesTitle": {
    "message": "Frames"
  },
  "panels/application/components/BackForwardCacheView.ts | issuesInMultipleFrames": {
    "message": "{n,plural, =1{# problème détecté dans {m} frames.}one{# problème détecté dans {m} frames.}other{# problèmes détectés dans {m} frames.}}"
  },
  "panels/application/components/BackForwardCacheView.ts | issuesInSingleFrame": {
    "message": "{n,plural, =1{# problème détecté dans 1 frame.}one{# problème détecté dans 1 frame.}other{# problèmes détectés dans 1 frame.}}"
  },
  "panels/application/components/BackForwardCacheView.ts | learnMore": {
    "message": "En savoir plus : éligibilité au cache amélioré"
  },
  "panels/application/components/BackForwardCacheView.ts | mainFrame": {
    "message": "Frame principal"
  },
  "panels/application/components/BackForwardCacheView.ts | neverUseUnload": {
    "message": "En savoir plus : ne jamais utiliser le gestionnaire de déchargement"
  },
  "panels/application/components/BackForwardCacheView.ts | normalNavigation": {
    "message": "Pas de diffusion depuis le cache amélioré : pour activer le cache amélioré, utilisez les boutons retour/avancer de Chrome ou le bouton de test ci-dessous pour aller automatiquement d'avant en arrière."
  },
  "panels/application/components/BackForwardCacheView.ts | pageSupportNeeded": {
    "message": "Action possible"
  },
  "panels/application/components/BackForwardCacheView.ts | pageSupportNeededExplanation": {
    "message": "Vous pouvez agir sur ces raisons, autrement dit les éliminer, pour rendre la page éligible au cache amélioré."
  },
  "panels/application/components/BackForwardCacheView.ts | restoredFromBFCache": {
    "message": "Diffusion réussie depuis le cache amélioré."
  },
  "panels/application/components/BackForwardCacheView.ts | runTest": {
    "message": "Tester le cache amélioré"
  },
  "panels/application/components/BackForwardCacheView.ts | runningTest": {
    "message": "Exécution du test…"
  },
  "panels/application/components/BackForwardCacheView.ts | supportPending": {
    "message": "En attente de prise en charge"
  },
  "panels/application/components/BackForwardCacheView.ts | supportPendingExplanation": {
    "message": "La prise en charge par Chrome de ces raisons est en cours. Elles n'empêcheront pas la page d'être éligible au cache amélioré dans une future version de Chrome."
  },
  "panels/application/components/BackForwardCacheView.ts | unavailable": {
    "message": "non disponible"
  },
  "panels/application/components/BackForwardCacheView.ts | unknown": {
    "message": "État inconnu"
  },
  "panels/application/components/BackForwardCacheView.ts | url": {
    "message": "URL :"
  },
  "panels/application/components/BounceTrackingMitigationsView.ts | bounceTrackingMitigationsTitle": {
    "message": "Mesures d'atténuation du suivi des rebonds"
  },
  "panels/application/components/BounceTrackingMitigationsView.ts | checkingPotentialTrackers": {
    "message": "Recherche de sites de suivi des rebonds potentiels…"
  },
  "panels/application/components/BounceTrackingMitigationsView.ts | featureDisabled": {
    "message": "Les mesures d'atténuation du suivi des rebonds sont désactivées. Pour les activer, définissez l'indicateur {PH1} sur \"Activé avec suppression\"."
  },
  "panels/application/components/BounceTrackingMitigationsView.ts | featureFlag": {
    "message": "Commutateur de fonctionnalité d'atténuation du suivi des rebonds"
  },
  "panels/application/components/BounceTrackingMitigationsView.ts | forceRun": {
    "message": "Forcer l'exécution"
  },
  "panels/application/components/BounceTrackingMitigationsView.ts | learnMore": {
    "message": "En savoir plus : Mesures d'atténuation du suivi des rebonds"
  },
  "panels/application/components/BounceTrackingMitigationsView.ts | noPotentialBounceTrackersIdentified": {
    "message": "L'état n'a pas été autorisé pour les sites de suivi des rebonds potentiels. Aucun site n'a été identifié ou les cookies tiers ne sont pas bloqués."
  },
  "panels/application/components/BounceTrackingMitigationsView.ts | runningMitigations": {
    "message": "Exécution…"
  },
  "panels/application/components/BounceTrackingMitigationsView.ts | stateDeletedFor": {
    "message": "L'état a été supprimé pour les sites suivants :"
  },
  "panels/application/components/EndpointsGrid.ts | noEndpointsToDisplay": {
    "message": "Aucun point de terminaison à afficher"
  },
  "panels/application/components/FrameDetailsView.ts | aFrameAncestorIsAnInsecure": {
    "message": "Un ancêtre de frame est un contexte non sécurisé"
  },
  "panels/application/components/FrameDetailsView.ts | adStatus": {
    "message": "État de l'annonce"
  },
  "panels/application/components/FrameDetailsView.ts | additionalInformation": {
    "message": "Informations supplémentaires"
  },
  "panels/application/components/FrameDetailsView.ts | apiAvailability": {
    "message": "Disponibilité de l'API"
  },
  "panels/application/components/FrameDetailsView.ts | availabilityOfCertainApisDepends": {
    "message": "La disponibilité de certaines API dépend de l'isolement multi-origines du document."
  },
  "panels/application/components/FrameDetailsView.ts | available": {
    "message": "disponible"
  },
  "panels/application/components/FrameDetailsView.ts | availableNotTransferable": {
    "message": "disponible, non transférable"
  },
  "panels/application/components/FrameDetailsView.ts | availableTransferable": {
    "message": "disponible, transférable"
  },
  "panels/application/components/FrameDetailsView.ts | child": {
    "message": "enfant"
  },
  "panels/application/components/FrameDetailsView.ts | childDescription": {
    "message": "Ce frame a été identifié comme un frame enfant d'une annonce"
  },
  "panels/application/components/FrameDetailsView.ts | clickToRevealInElementsPanel": {
    "message": "Cliquer pour afficher dans le panneau \"Elements\""
  },
  "panels/application/components/FrameDetailsView.ts | clickToRevealInNetworkPanel": {
    "message": "Cliquer pour afficher dans le panneau \"Network\""
  },
  "panels/application/components/FrameDetailsView.ts | clickToRevealInNetworkPanelMight": {
    "message": "Cliquer pour afficher dans le panneau \"Network\" (vous devrez peut-être actualiser la page)"
  },
  "panels/application/components/FrameDetailsView.ts | clickToRevealInSourcesPanel": {
    "message": "Cliquer pour afficher dans le panneau \"Sources\""
  },
  "panels/application/components/FrameDetailsView.ts | contentSecurityPolicy": {
    "message": "Content Security Policy (CSP)"
  },
  "panels/application/components/FrameDetailsView.ts | createdByAdScriptExplanation": {
    "message": "Quand ce frame a été créé, un script publicitaire figurant dans la (async) stack. Vous pouvez peut-être en savoir plus en examinant la stack trace sur la création de ce frame."
  },
  "panels/application/components/FrameDetailsView.ts | creationStackTrace": {
    "message": "Stack Trace sur la création du frame"
  },
  "panels/application/components/FrameDetailsView.ts | creationStackTraceExplanation": {
    "message": "Ce frame a été créé de façon automatisée. La stack trace indique où cela s'est produit."
  },
  "panels/application/components/FrameDetailsView.ts | creatorAdScript": {
    "message": "Script d'annonce de créateur"
  },
  "panels/application/components/FrameDetailsView.ts | crossoriginIsolated": {
    "message": "Isolé multi-origine"
  },
  "panels/application/components/FrameDetailsView.ts | document": {
    "message": "Document"
  },
  "panels/application/components/FrameDetailsView.ts | frameId": {
    "message": "ID de frame"
  },
  "panels/application/components/FrameDetailsView.ts | learnMore": {
    "message": "En savoir plus"
  },
  "panels/application/components/FrameDetailsView.ts | localhostIsAlwaysASecureContext": {
    "message": "Localhost est toujours un contexte sécurisé"
  },
  "panels/application/components/FrameDetailsView.ts | matchedBlockingRuleExplanation": {
    "message": "Ce frame est considéré comme un frame publicitaire, car son document principal actuel (ou précédent) est une ressource publicitaire."
  },
  "panels/application/components/FrameDetailsView.ts | measureMemory": {
    "message": "Mesurer la mémoire"
  },
  "panels/application/components/FrameDetailsView.ts | no": {
    "message": "Non"
  },
  "panels/application/components/FrameDetailsView.ts | none": {
    "message": "Aucune"
  },
  "panels/application/components/FrameDetailsView.ts | origin": {
    "message": "Origine"
  },
  "panels/application/components/FrameDetailsView.ts | originTrialsExplanation": {
    "message": "Les essais Origin Trial vous donnent accès à une fonctionnalité nouvelle ou expérimentale."
  },
  "panels/application/components/FrameDetailsView.ts | ownerElement": {
    "message": "Élément du propriétaire"
  },
  "panels/application/components/FrameDetailsView.ts | parentIsAdExplanation": {
    "message": "Ce frame est considéré comme un frame publicitaire, car son frame parent en est un."
  },
  "panels/application/components/FrameDetailsView.ts | reportingTo": {
    "message": "signale à"
  },
  "panels/application/components/FrameDetailsView.ts | requiresCrossoriginIsolated": {
    "message": "nécessite un contexte isolé multi-origine"
  },
  "panels/application/components/FrameDetailsView.ts | root": {
    "message": "racine"
  },
  "panels/application/components/FrameDetailsView.ts | rootDescription": {
    "message": "Ce frame a été identifié comme frame racine d'une annonce"
  },
  "panels/application/components/FrameDetailsView.ts | secureContext": {
    "message": "Contexte sécurisé"
  },
  "panels/application/components/FrameDetailsView.ts | securityIsolation": {
    "message": "Sécurité et isolement"
  },
  "panels/application/components/FrameDetailsView.ts | sharedarraybufferConstructorIs": {
    "message": "Le constructeur SharedArrayBuffer est disponible et les SABs peuvent être transférés via postMessage"
  },
  "panels/application/components/FrameDetailsView.ts | sharedarraybufferConstructorIsAvailable": {
    "message": "Le constructeur SharedArrayBuffer est disponible, mais les SABs ne peuvent pas être transférés via postMessage"
  },
  "panels/application/components/FrameDetailsView.ts | theFramesSchemeIsInsecure": {
    "message": "Le format de l'image n'est pas sécurisé"
  },
  "panels/application/components/FrameDetailsView.ts | thePerformanceAPI": {
    "message": "L'API performance.measureUserAgentSpecificMemory() est disponible"
  },
  "panels/application/components/FrameDetailsView.ts | thePerformancemeasureuseragentspecificmemory": {
    "message": "L'API performance.measureUserAgentSpecificMemory() n'est pas disponible"
  },
  "panels/application/components/FrameDetailsView.ts | thisAdditionalDebugging": {
    "message": "Ces informations supplémentaires (de débogage) sont affichées, car le test \"Moniteur de protocole\" est activé."
  },
  "panels/application/components/FrameDetailsView.ts | transferRequiresCrossoriginIsolatedPermission": {
    "message": "Règle d'autorisation requise pour le transfert de SharedArrayBuffer :"
  },
  "panels/application/components/FrameDetailsView.ts | unavailable": {
    "message": "non disponible"
  },
  "panels/application/components/FrameDetailsView.ts | unreachableUrl": {
    "message": "URL inaccessible"
  },
  "panels/application/components/FrameDetailsView.ts | url": {
    "message": "URL"
  },
  "panels/application/components/FrameDetailsView.ts | willRequireCrossoriginIsolated": {
    "message": "⚠️ nécessitera à l'avenir un contexte isolé multi-origine"
  },
  "panels/application/components/FrameDetailsView.ts | yes": {
    "message": "Oui"
  },
  "panels/application/components/InterestGroupAccessGrid.ts | allInterestGroupStorageEvents": {
    "message": "Tous les événements de stockage de groupes de centres d'intérêt."
  },
  "panels/application/components/InterestGroupAccessGrid.ts | eventTime": {
    "message": "Date/Heure de l'événement"
  },
  "panels/application/components/InterestGroupAccessGrid.ts | eventType": {
    "message": "Type d'accès"
  },
  "panels/application/components/InterestGroupAccessGrid.ts | groupName": {
    "message": "Nom"
  },
  "panels/application/components/InterestGroupAccessGrid.ts | groupOwner": {
    "message": "Propriétaire"
  },
  "panels/application/components/InterestGroupAccessGrid.ts | noEvents": {
    "message": "Aucun événement de groupe de centres d'intérêt enregistré."
  },
  "panels/application/components/OriginTrialTreeView.ts | expiryTime": {
    "message": "Délai d'expiration"
  },
  "panels/application/components/OriginTrialTreeView.ts | isThirdParty": {
    "message": "Tiers"
  },
  "panels/application/components/OriginTrialTreeView.ts | matchSubDomains": {
    "message": "Correspondance des sous-domaines"
  },
  "panels/application/components/OriginTrialTreeView.ts | noTrialTokens": {
    "message": "Aucun jeton d'essai"
  },
  "panels/application/components/OriginTrialTreeView.ts | origin": {
    "message": "Origine"
  },
  "panels/application/components/OriginTrialTreeView.ts | rawTokenText": {
    "message": "Jeton brut"
  },
  "panels/application/components/OriginTrialTreeView.ts | status": {
    "message": "État du jeton"
  },
  "panels/application/components/OriginTrialTreeView.ts | token": {
    "message": "Jeton"
  },
  "panels/application/components/OriginTrialTreeView.ts | tokens": {
    "message": "{PH1} jetons"
  },
  "panels/application/components/OriginTrialTreeView.ts | trialName": {
    "message": "Nom de l'essai"
  },
  "panels/application/components/OriginTrialTreeView.ts | usageRestriction": {
    "message": "Restriction d'utilisation"
  },
  "panels/application/components/PermissionsPolicySection.ts | allowedFeatures": {
    "message": "Fonctionnalités autorisées"
  },
  "panels/application/components/PermissionsPolicySection.ts | clickToShowHeader": {
    "message": "Cliquez pour afficher la requête dont l'en-tête HTTP Permissions-Policy désactive cette fonctionnalité."
  },
  "panels/application/components/PermissionsPolicySection.ts | clickToShowIframe": {
    "message": "Cliquez pour afficher le principal iFrame qui n'autorise pas cette fonctionnalité dans le panneau \"Elements\"."
  },
  "panels/application/components/PermissionsPolicySection.ts | disabledByFencedFrame": {
    "message": "désactivé dans un fencedframe"
  },
  "panels/application/components/PermissionsPolicySection.ts | disabledByHeader": {
    "message": "désactivé par l'en-tête Permissions-Policy"
  },
  "panels/application/components/PermissionsPolicySection.ts | disabledByIframe": {
    "message": "attribut allow iFrame manquant"
  },
  "panels/application/components/PermissionsPolicySection.ts | disabledFeatures": {
    "message": "Fonctionnalités désactivées"
  },
  "panels/application/components/PermissionsPolicySection.ts | hideDetails": {
    "message": "Masquer les détails"
  },
  "panels/application/components/PermissionsPolicySection.ts | showDetails": {
    "message": "Voir les détails"
  },
  "panels/application/components/ProtocolHandlersView.ts | dropdownLabel": {
    "message": "Sélectionner le gestionnaire de protocoles"
  },
  "panels/application/components/ProtocolHandlersView.ts | manifest": {
    "message": "fichier manifeste"
  },
  "panels/application/components/ProtocolHandlersView.ts | needHelpReadOur": {
    "message": "Besoin d'aide ? Rendez-vous sur {PH1}."
  },
  "panels/application/components/ProtocolHandlersView.ts | protocolDetected": {
    "message": "Un enregistrement de gestionnaire de protocoles valide a été trouvé dans {PH1}. Une fois l'appli installée, testez les protocoles enregistrés."
  },
  "panels/application/components/ProtocolHandlersView.ts | protocolHandlerRegistrations": {
    "message": "Enregistrement du gestionnaire de protocoles d'URL pour les PWA"
  },
  "panels/application/components/ProtocolHandlersView.ts | protocolNotDetected": {
    "message": "Définissez des gestionnaires de protocoles dans {PH1} afin d'enregistrer votre appli en tant que gestionnaire pour les protocoles personnalisés lors de l'installation de votre appli."
  },
  "panels/application/components/ProtocolHandlersView.ts | testProtocol": {
    "message": "Protocole de test"
  },
  "panels/application/components/ProtocolHandlersView.ts | textboxLabel": {
    "message": "Paramètre de requête ou point de terminaison pour le gestionnaire de protocoles"
  },
  "panels/application/components/ProtocolHandlersView.ts | textboxPlaceholder": {
    "message": "Saisissez l'URL"
  },
  "panels/application/components/ReportsGrid.ts | destination": {
    "message": "Destination"
  },
  "panels/application/components/ReportsGrid.ts | generatedAt": {
    "message": "Généré à"
  },
  "panels/application/components/ReportsGrid.ts | noReportsToDisplay": {
    "message": "Aucun rapport à afficher"
  },
  "panels/application/components/ReportsGrid.ts | status": {
    "message": "État"
  },
  "panels/application/components/SharedStorageAccessGrid.ts | allSharedStorageEvents": {
    "message": "Tous les événements de stockage partagé pour cette page."
  },
  "panels/application/components/SharedStorageAccessGrid.ts | eventParams": {
    "message": "Paramètres d'événement facultatifs"
  },
  "panels/application/components/SharedStorageAccessGrid.ts | eventTime": {
    "message": "Date/Heure de l'événement"
  },
  "panels/application/components/SharedStorageAccessGrid.ts | eventType": {
    "message": "Type d'accès"
  },
  "panels/application/components/SharedStorageAccessGrid.ts | mainFrameId": {
    "message": "ID du frame principal"
  },
  "panels/application/components/SharedStorageAccessGrid.ts | noEvents": {
    "message": "Aucun événement de stockage partagé n'a été enregistré."
  },
  "panels/application/components/SharedStorageAccessGrid.ts | ownerOrigin": {
    "message": "Origine du propriétaire"
  },
  "panels/application/components/SharedStorageAccessGrid.ts | sharedStorage": {
    "message": "Stockage partagé"
  },
  "panels/application/components/SharedStorageMetadataView.ts | budgetExplanation": {
    "message": "Fuite de données restante autorisée sur une période de 24 heures pour cette origine, en bits d'entropie"
  },
  "panels/application/components/SharedStorageMetadataView.ts | creation": {
    "message": "Heure de création"
  },
  "panels/application/components/SharedStorageMetadataView.ts | entropyBudget": {
    "message": "Budget d'entropie pour Fenced Frames"
  },
  "panels/application/components/SharedStorageMetadataView.ts | notYetCreated": {
    "message": "Pas encore créé"
  },
  "panels/application/components/SharedStorageMetadataView.ts | numEntries": {
    "message": "Nombre d'entrées"
  },
  "panels/application/components/SharedStorageMetadataView.ts | resetBudget": {
    "message": "Réinitialiser le budget"
  },
  "panels/application/components/SharedStorageMetadataView.ts | sharedStorage": {
    "message": "Stockage partagé"
  },
  "panels/application/components/StackTrace.ts | cannotRenderStackTrace": {
    "message": "Impossible d'afficher la trace de la pile"
  },
  "panels/application/components/StackTrace.ts | creationStackTrace": {
    "message": "Stack Trace sur la création du frame"
  },
  "panels/application/components/StackTrace.ts | showLess": {
    "message": "Afficher moins"
  },
  "panels/application/components/StackTrace.ts | showSMoreFrames": {
    "message": "{n,plural, =1{Afficher # autre frame}one{Afficher # autre frame}other{Afficher # autres frames}}"
  },
  "panels/application/components/StorageMetadataView.ts | bucketName": {
    "message": "Nom du bucket"
  },
  "panels/application/components/StorageMetadataView.ts | confirmBucketDeletion": {
    "message": "Supprimer le bucket \"{PH1}\" ?"
  },
  "panels/application/components/StorageMetadataView.ts | defaultBucket": {
    "message": "Bucket par défaut"
  },
  "panels/application/components/StorageMetadataView.ts | deleteBucket": {
    "message": "Supprimer l'ensemble"
  },
  "panels/application/components/StorageMetadataView.ts | durability": {
    "message": "Durabilité"
  },
  "panels/application/components/StorageMetadataView.ts | expiration": {
    "message": "Date d'expiration"
  },
  "panels/application/components/StorageMetadataView.ts | isOpaque": {
    "message": "Est opaque"
  },
  "panels/application/components/StorageMetadataView.ts | isThirdParty": {
    "message": "Est tiers"
  },
  "panels/application/components/StorageMetadataView.ts | loading": {
    "message": "Chargement…"
  },
  "panels/application/components/StorageMetadataView.ts | no": {
    "message": "Non"
  },
  "panels/application/components/StorageMetadataView.ts | none": {
    "message": "Aucune"
  },
  "panels/application/components/StorageMetadataView.ts | opaque": {
    "message": "(opaque)"
  },
  "panels/application/components/StorageMetadataView.ts | origin": {
    "message": "Origine"
  },
  "panels/application/components/StorageMetadataView.ts | persistent": {
    "message": "Est persistante"
  },
  "panels/application/components/StorageMetadataView.ts | quota": {
    "message": "Quota"
  },
  "panels/application/components/StorageMetadataView.ts | topLevelSite": {
    "message": "Site de premier niveau"
  },
  "panels/application/components/StorageMetadataView.ts | yes": {
    "message": "Oui"
  },
  "panels/application/components/StorageMetadataView.ts | yesBecauseAncestorChainHasCrossSite": {
    "message": "Oui, car la chaîne d'ascendance contient une origine tierce"
  },
  "panels/application/components/StorageMetadataView.ts | yesBecauseKeyIsOpaque": {
    "message": "Oui, car la clé de stockage est opaque"
  },
  "panels/application/components/StorageMetadataView.ts | yesBecauseOriginNotInTopLevelSite": {
    "message": "Oui, car l'origine se trouve en dehors du site de premier niveau"
  },
  "panels/application/components/StorageMetadataView.ts | yesBecauseTopLevelIsOpaque": {
    "message": "Oui, car le site de premier niveau est opaque"
  },
  "panels/application/components/TrustTokensView.ts | allStoredTrustTokensAvailableIn": {
    "message": "Tous les jetons d'état privés stockés disponibles dans cette instance du navigateur."
  },
  "panels/application/components/TrustTokensView.ts | deleteTrustTokens": {
    "message": "Supprimez tous les jetons d'état privés stockés émis par {PH1}."
  },
  "panels/application/components/TrustTokensView.ts | issuer": {
    "message": "Émetteur"
  },
  "panels/application/components/TrustTokensView.ts | noTrustTokensStored": {
    "message": "Aucun jeton d'état privé n'est actuellement stocké."
  },
  "panels/application/components/TrustTokensView.ts | storedTokenCount": {
    "message": "Nombre de jetons stockés"
  },
  "panels/application/components/TrustTokensView.ts | trustTokens": {
    "message": "Jetons d'état privés"
  },
  "panels/application/preloading/PreloadingView.ts | filterAllPreloads": {
    "message": "Tous les chargements spéculatifs"
  },
  "panels/application/preloading/PreloadingView.ts | filterFilterByRuleSet": {
    "message": "Filtrer par jeu de règles"
  },
  "panels/application/preloading/PreloadingView.ts | statusFailure": {
    "message": "Échec"
  },
  "panels/application/preloading/PreloadingView.ts | statusNotTriggered": {
    "message": "Non déclenchée"
  },
  "panels/application/preloading/PreloadingView.ts | statusPending": {
    "message": "En attente"
  },
  "panels/application/preloading/PreloadingView.ts | statusReady": {
    "message": "Prêt"
  },
  "panels/application/preloading/PreloadingView.ts | statusRunning": {
    "message": "Exécution…"
  },
  "panels/application/preloading/PreloadingView.ts | statusSuccess": {
    "message": "Opération réussie"
  },
  "panels/application/preloading/PreloadingView.ts | validityInvalid": {
    "message": "Non valide"
  },
  "panels/application/preloading/PreloadingView.ts | validitySomeRulesInvalid": {
    "message": "Certaines règles ne sont pas valides"
  },
  "panels/application/preloading/PreloadingView.ts | validityValid": {
    "message": "Valide"
  },
  "panels/application/preloading/components/MismatchedPreloadingGrid.ts | action": {
    "message": "Action"
  },
  "panels/application/preloading/components/MismatchedPreloadingGrid.ts | status": {
    "message": "État"
  },
  "panels/application/preloading/components/MismatchedPreloadingGrid.ts | statusFailure": {
    "message": "Échec"
  },
  "panels/application/preloading/components/MismatchedPreloadingGrid.ts | statusNotTriggered": {
    "message": "Non déclenchée"
  },
  "panels/application/preloading/components/MismatchedPreloadingGrid.ts | statusPending": {
    "message": "En attente"
  },
  "panels/application/preloading/components/MismatchedPreloadingGrid.ts | statusReady": {
    "message": "Prêt"
  },
  "panels/application/preloading/components/MismatchedPreloadingGrid.ts | statusRunning": {
    "message": "Exécution…"
  },
  "panels/application/preloading/components/MismatchedPreloadingGrid.ts | statusSuccess": {
    "message": "Opération réussie"
  },
  "panels/application/preloading/components/MismatchedPreloadingGrid.ts | url": {
    "message": "URL"
  },
  "panels/application/preloading/components/PreloadingDetailsReportView.ts | buttonClickToInspect": {
    "message": "Cliquez pour inspecter la page prérendue"
  },
  "panels/application/preloading/components/PreloadingDetailsReportView.ts | buttonClickToRevealRuleSet": {
    "message": "Cliquez pour afficher le jeu de règles"
  },
  "panels/application/preloading/components/PreloadingDetailsReportView.ts | buttonInspect": {
    "message": "Inspecter"
  },
  "panels/application/preloading/components/PreloadingDetailsReportView.ts | detailedStatusFailure": {
    "message": "Échec du chargement spéculatif."
  },
  "panels/application/preloading/components/PreloadingDetailsReportView.ts | detailedStatusNotTriggered": {
    "message": "La tentative de chargement spéculatif n'est pas encore déclenchée."
  },
  "panels/application/preloading/components/PreloadingDetailsReportView.ts | detailedStatusPending": {
    "message": "La tentative de chargement spéculatif est éligible, mais en attente."
  },
  "panels/application/preloading/components/PreloadingDetailsReportView.ts | detailedStatusReady": {
    "message": "Le chargement spéculatif est terminé et le résultat est prêt pour la prochaine navigation."
  },
  "panels/application/preloading/components/PreloadingDetailsReportView.ts | detailedStatusRunning": {
    "message": "Le chargement spéculatif est en cours d'exécution."
  },
  "panels/application/preloading/components/PreloadingDetailsReportView.ts | detailedStatusSuccess": {
    "message": "Chargement spéculatif terminé et utilisé pour la navigation."
  },
  "panels/application/preloading/components/PreloadingDetailsReportView.ts | detailsAction": {
    "message": "Action"
  },
  "panels/application/preloading/components/PreloadingDetailsReportView.ts | detailsDetailedInformation": {
    "message": "Informations détaillées"
  },
  "panels/application/preloading/components/PreloadingDetailsReportView.ts | detailsFailureReason": {
    "message": "Motif de l'échec"
  },
  "panels/application/preloading/components/PreloadingDetailsReportView.ts | detailsRuleSet": {
    "message": "Jeu de règles"
  },
  "panels/application/preloading/components/PreloadingDetailsReportView.ts | detailsStatus": {
    "message": "État"
  },
  "panels/application/preloading/components/PreloadingDetailsReportView.ts | selectAnElementForMoreDetails": {
    "message": "Sélectionnez un élément pour en savoir plus"
  },
  "panels/application/preloading/components/PreloadingDisabledInfobar.ts | descriptionDisabledByBatterySaver": {
    "message": "Le chargement spéculatif est désactivé à cause du mode Économiseur de batterie du système d'exploitation."
  },
  "panels/application/preloading/components/PreloadingDisabledInfobar.ts | descriptionDisabledByDataSaver": {
    "message": "Le chargement spéculatif est désactivé à cause du mode Économiseur de données du système d'exploitation."
  },
  "panels/application/preloading/components/PreloadingDisabledInfobar.ts | descriptionDisabledByHoldbackPrefetchSpeculationRules": {
    "message": "Le préchargement est activé d'office, car les outils de développement sont ouverts. Lorsque les outils de développement sont fermés, le préchargement est désactivé, car cette session de navigateur fait partie d'un groupe non exposé utilisé pour la comparaison des performances."
  },
  "panels/application/preloading/components/PreloadingDisabledInfobar.ts | descriptionDisabledByHoldbackPrerenderSpeculationRules": {
    "message": "Le prérendu est activé d'office, car les outils de développement sont ouverts. Lorsque les outils de développement sont fermés, le prérendu est désactivé, car cette session de navigateur fait partie d'un groupe non exposé utilisé pour la comparaison des performances."
  },
  "panels/application/preloading/components/PreloadingDisabledInfobar.ts | descriptionDisabledByPreference": {
    "message": "Le chargement spéculatif est désactivé en raison des paramètres utilisateur ou d'une extension. Accédez à {PH1} pour mettre à jour vos préférences. Accédez à {PH2} pour désactiver toute extension qui bloque le chargement spéculatif."
  },
  "panels/application/preloading/components/PreloadingDisabledInfobar.ts | extensionsSettings": {
    "message": "Paramètres des extensions"
  },
  "panels/application/preloading/components/PreloadingDisabledInfobar.ts | footerLearnMore": {
    "message": "En savoir plus"
  },
  "panels/application/preloading/components/PreloadingDisabledInfobar.ts | headerDisabledByBatterySaver": {
    "message": "Économiseur de batterie"
  },
  "panels/application/preloading/components/PreloadingDisabledInfobar.ts | headerDisabledByDataSaver": {
    "message": "Économiseur de données"
  },
  "panels/application/preloading/components/PreloadingDisabledInfobar.ts | headerDisabledByHoldbackPrefetchSpeculationRules": {
    "message": "Le préchargement a été désactivé, mais il est désormais activé d'office"
  },
  "panels/application/preloading/components/PreloadingDisabledInfobar.ts | headerDisabledByHoldbackPrerenderSpeculationRules": {
    "message": "Le prérendu a été désactivé, mais il est désormais activé d'office"
  },
  "panels/application/preloading/components/PreloadingDisabledInfobar.ts | headerDisabledByPreference": {
    "message": "Paramètres utilisateur ou extensions"
  },
  "panels/application/preloading/components/PreloadingDisabledInfobar.ts | infobarPreloadingIsDisabled": {
    "message": "Le chargement spéculatif est désactivé"
  },
  "panels/application/preloading/components/PreloadingDisabledInfobar.ts | infobarPreloadingIsForceEnabled": {
    "message": "Le chargement spéculatif est activé d'office"
  },
  "panels/application/preloading/components/PreloadingDisabledInfobar.ts | preloadingPagesSettings": {
    "message": "Paramètres des pages préchargées"
  },
  "panels/application/preloading/components/PreloadingDisabledInfobar.ts | titleReasonsPreventingPreloading": {
    "message": "Raisons empêchant le chargement spéculatif"
  },
  "panels/application/preloading/components/PreloadingGrid.ts | action": {
    "message": "Action"
  },
  "panels/application/preloading/components/PreloadingGrid.ts | ruleSet": {
    "message": "Jeu de règles"
  },
  "panels/application/preloading/components/PreloadingGrid.ts | status": {
    "message": "État"
  },
  "panels/application/preloading/components/PreloadingMismatchedHeadersGrid.ts | activationNavigationValue": {
    "message": "Valeur de la navigation d'activation"
  },
  "panels/application/preloading/components/PreloadingMismatchedHeadersGrid.ts | headerName": {
    "message": "Nom de l'en-tête"
  },
  "panels/application/preloading/components/PreloadingMismatchedHeadersGrid.ts | initialNavigationValue": {
    "message": "Valeur dans la navigation initiale"
  },
  "panels/application/preloading/components/PreloadingMismatchedHeadersGrid.ts | missing": {
    "message": "(manquant)"
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchEvictedAfterCandidateRemoved": {
    "message": "Le préchargement a été supprimé, car aucune règle de spéculation de la page d'initialisation ne déclenche plus de préchargement pour cette URL."
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchEvictedForNewerPrefetch": {
    "message": "Le préchargement a été supprimé, car la page de lancement comporte trop de préchargements en cours et il s'agissait de l'un des plus anciens."
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchFailedIneligibleRedirect": {
    "message": "Le préchargement a été redirigé, mais l'URL de redirection n'est pas éligible au préchargement."
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchFailedInvalidRedirect": {
    "message": "Le préchargement a été redirigé, mais un problème est survenu lors de la redirection."
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchFailedMIMENotSupported": {
    "message": "Échec du préchargement, car l'en-tête Content-Type de la réponse n'était pas pris en charge."
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchFailedNetError": {
    "message": "La requête a échoué en raison d'une erreur réseau."
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchFailedNon2XX": {
    "message": "Le préchargement a échoué en raison d'un code d'état de réponse HTTP autre que 2xx."
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchFailedPerPageLimitExceeded": {
    "message": "Le préchargement n'a pas été effectué, car la page de lancement a déjà trop de préchargements en cours."
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchIneligibleRetryAfter": {
    "message": "Un préchargement précédent de l'origine a obtenu une réponse HTTP 503 avec un en-tête Retry-After qui n'a pas encore expiré."
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchIsPrivacyDecoy": {
    "message": "L'URL n'était pas éligible au préchargement, car il y avait un service worker enregistré ou des cookies intersites pour cette origine, mais le préchargement a quand même été mis sur le réseau sans être utilisé pour dissimuler le fait que l'utilisateur avait eu une relation antérieure avec l'origine."
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchIsStale": {
    "message": "Trop de temps écoulé entre le préchargement et l'utilisation ; le préchargement a donc été supprimé."
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchNotEligibleBatterySaverEnabled": {
    "message": "Le préchargement n'a pas été effectué, car le paramètre Économiseur de batterie était activé."
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchNotEligibleBrowserContextOffTheRecord": {
    "message": "Le préchargement n'a pas été effectué, car le navigateur est en mode Navigation privée ou Invité."
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchNotEligibleDataSaverEnabled": {
    "message": "Le préchargement n'a pas été effectué, car le système d'exploitation est en mode Économiseur de données."
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchNotEligibleExistingProxy": {
    "message": "L'URL n'est pas éligible au préchargement car, dans le contexte réseau par défaut, elle est configurée pour utiliser un serveur proxy."
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchNotEligibleHostIsNonUnique": {
    "message": "L'URL n'était pas éligible au préchargement, car son hôte n'était pas unique (par exemple, une adresse IP non routable publiquement ou un nom d'hôte qui n'est pas contrôlé par le registre), tandis que le préchargement était requis pour le proxy."
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchNotEligibleNonDefaultStoragePartition": {
    "message": "L'URL n'était pas éligible au préchargement, car elle utilise une partition de stockage autre que celle par défaut."
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchNotEligiblePreloadingDisabled": {
    "message": "Le préchargement n'a pas été effectué, car le chargement spéculatif a été désactivé."
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchNotEligibleSameSiteCrossOriginPrefetchRequiredProxy": {
    "message": "L'URL n'était pas éligible au préchargement, car le contexte réseau par défaut ne peut pas être configuré pour utiliser le proxy de préchargement pour une requête de préchargement multi-origine sur le même site."
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchNotEligibleSchemeIsNotHttps": {
    "message": "L'URL n'était pas éligible au préchargement, car son schéma n'était pas https:."
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchNotEligibleUserHasCookies": {
    "message": "L'URL n'était pas éligible au préchargement, car il s'agissait d'une URL intersite, alors que l'utilisateur possédait des cookies pour cette origine."
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchNotEligibleUserHasServiceWorker": {
    "message": "L'URL n'était pas éligible au préchargement, car il y avait un service worker enregistré pour cette origine, ce qui n'est actuellement pas pris en charge."
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchNotUsedCookiesChanged": {
    "message": "Le préchargement n'a pas été utilisé, car il s'agissait d'un préchargement intersite. Des cookies ont été ajoutés pour cette URL pendant que le préchargement était en cours. La réponse préchargée est donc obsolète."
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchNotUsedProbeFailed": {
    "message": "Le préchargement a été bloqué par votre fournisseur d'accès à Internet ou votre administrateur réseau."
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchProxyNotAvailable": {
    "message": "Une erreur réseau s'est produite lors de la tentative de configuration d'une connexion au proxy de préchargement."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusActivatedDuringMainFrameNavigation": {
    "message": "Page prérendue activée lors du lancement de la navigation dans le frame principal de la page."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusActivatedWithAuxiliaryBrowsingContexts": {
    "message": "Le prérendu n'a pas été utilisé, car au moment de l'activation, d'autres fenêtres présentaient une référence d'ouverture active à la page de lancement, ce qui n'est actuellement pas pris en charge."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusActivationFramePolicyNotCompatible": {
    "message": "Le prérendu n'a pas été utilisé, car les indicateurs de bac à sable ou la règle d'autorisation de la page de lancement n'étaient pas compatibles avec ceux de la page en prérendu."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusActivationNavigationParameterMismatch": {
    "message": "Le prérendu n'a pas été utilisé, car lors de l'activation, différents paramètres de navigation (en-têtes HTTP, par exemple) ont été calculés par rapport à la requête de navigation en prérendu d'origine."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusActivationUrlHasEffectiveUrl": {
    "message": "Le prérendu n'a pas été utilisé, car au moment de l'activation, la navigation a une URL effective différente de son URL normale (page \"Nouvel onglet\" ou applis hébergées, par exemple)."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusAudioOutputDeviceRequested": {
    "message": "La page prérendue a demandé une sortie audio, ce qui n'est actuellement pas pris en charge."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusBatterySaverEnabled": {
    "message": "Le prérendu n'a pas été effectué, car l'utilisateur a demandé que le navigateur utilise moins de batterie."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusBlockedByClient": {
    "message": "Une partie de la charge des ressources a été bloquée"
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusClientCertRequested": {
    "message": "La navigation en prérendu nécessitait un certificat client HTTP."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusCrossSiteNavigationInInitialNavigation": {
    "message": "La navigation en prérendu a échoué, car elle ciblait une URL intersite."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusCrossSiteNavigationInMainFrameNavigation": {
    "message": "La page prérendue a redirigé vers une URL intersite."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusCrossSiteRedirectInInitialNavigation": {
    "message": "La navigation en prérendu a échoué, car l'URL prérendue a redirigé vers une URL intersite."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusCrossSiteRedirectInMainFrameNavigation": {
    "message": "La page prérendue a redirigé vers une URL qui menait vers une URL intersite."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusDataSaverEnabled": {
    "message": "Le prérendu n'a pas été effectué, car l'utilisateur a demandé au navigateur d'utiliser moins de données."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusDownload": {
    "message": "La page prérendue a tenté de lancer un téléchargement, ce qui n'est actuellement pas pris en charge."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusHasEffectiveUrl": {
    "message": "La page de lancement ne peut pas effectuer de prérendu, car son URL effective est différente de son URL normale (page \"Nouvel onglet\" ou applis hébergées, par exemple)."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusInvalidSchemeNavigation": {
    "message": "L'URL n'était pas éligible au prérendu, car son schéma n'était pas http: ni https:."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusInvalidSchemeRedirect": {
    "message": "La navigation en prérendu a échoué, car elle a redirigé vers une URL dont le schéma n'était pas http: ni https:."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusLoginAuthRequested": {
    "message": "La navigation en prérendu nécessitait une authentification HTTP, ce qui n'est actuellement pas pris en charge."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusLowEndDevice": {
    "message": "Le prérendu n'a pas été effectué, car cet appareil ne dispose pas de suffisamment de mémoire système totale pour permettre le prérendu."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusMainFrameNavigation": {
    "message": "La page prérendue a redirigé elle-même vers une autre URL, ce qui n'est actuellement pas pris en charge."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusMaxNumOfRunningEagerPrerendersExceeded": {
    "message": "Le prérendu avec la valeur \"eager\" n'a pas été effectué, car il y a trop de prérendus en cours sur la page de lancement. Supprimez les autres règles de spéculation avec la valeur \"eager\" pour activer d'autres prérendus."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusMaxNumOfRunningEmbedderPrerendersExceeded": {
    "message": "Le prérendu déclenché par le navigateur n'a pas été effectué, car il y a trop de prérendus en cours sur la page de lancement."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusMaxNumOfRunningNonEagerPrerendersExceeded": {
    "message": "L'ancien prérendu sans la valeur \"eager\" (avec un niveau de persévérance \"moderate\" ou \"conservative\", et déclenché en pointant sur des liens ou en cliquant dessus) a été automatiquement annulé suite au lancement d'un nouveau prérendu sans la valeur \"eager\". Il peut être redéclenché en interagissant à nouveau avec le lien."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusMemoryLimitExceeded": {
    "message": "Le prérendu n'a pas été effectué, car le navigateur a dépassé la limite de mémoire pour le prérendu."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusMemoryPressureAfterTriggered": {
    "message": "La page prérendue a été déchargée, car le navigateur était soumis à une pression critique sur la mémoire."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusMemoryPressureOnTrigger": {
    "message": "Le prérendu n'a pas été effectué, car le navigateur était soumis à une pression critique sur la mémoire."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusMixedContent": {
    "message": "La page prérendue contenait du contenu mixte."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusMojoBinderPolicy": {
    "message": "La page prérendue a utilisé une API JavaScript interdite qui n'est actuellement pas compatible. (Interface Mojo interne : {PH1})"
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusNavigationBadHttpStatus": {
    "message": "La navigation en prérendu a échoué en raison d'un code d'état de réponse HTTP autre que 2xx."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusNavigationRequestBlockedByCsp": {
    "message": "La navigation en prérendu a été bloquée par une Content Security Policy."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusNavigationRequestNetworkError": {
    "message": "La navigation en prérendu a rencontré une erreur réseau."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusPreloadingDisabled": {
    "message": "Le prérendu n'a pas été effectué, car l'utilisateur a désactivé le préchargement dans les paramètres de son navigateur."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusPrerenderingDisabledByDevTools": {
    "message": "Le prérendu n'a pas été effectué, car les outils de développement ont été utilisés pour désactiver le prérendu."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusPrerenderingUrlHasEffectiveUrl": {
    "message": "La navigation en prérendu a échoué, car son URL effective est différente de son URL normale (page \"Nouvel onglet\" ou applis hébergées, par exemple)."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusPrimaryMainFrameRendererProcessCrashed": {
    "message": "La page de lancement a planté."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusPrimaryMainFrameRendererProcessKilled": {
    "message": "La page de lancement a été fermée."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusRedirectedPrerenderingUrlHasEffectiveUrl": {
    "message": "La navigation en prérendu a échoué, car elle a redirigé vers une URL effective différente de son URL normale (page \"Nouvel onglet\" ou applis hébergées, par exemple)."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusRendererProcessCrashed": {
    "message": "La page prérendue a planté."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusRendererProcessKilled": {
    "message": "La page prérendue a été fermée."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusSameSiteCrossOriginNavigationNotOptInInInitialNavigation": {
    "message": "La navigation en prérendu a échoué, car il s'agissait d'une URL multi-origine sur le même site, mais la réponse de la destination n'incluait pas l'en-tête Supports-Loading-Mode approprié."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusSameSiteCrossOriginNavigationNotOptInInMainFrameNavigation": {
    "message": "La page prérendue a redirigé vers une URL multi-origine sur le même site, mais la réponse de la destination n'incluait pas l'en-tête Supports-Loading-Mode approprié."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusSameSiteCrossOriginRedirectNotOptInInInitialNavigation": {
    "message": "La navigation en prérendu a échoué, car l'URL prérendue a redirigé vers une URL multi-origine sur le même site, mais la réponse de la destination n'incluait pas l'en-tête Supports-Loading-Mode approprié."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusSameSiteCrossOriginRedirectNotOptInInMainFrameNavigation": {
    "message": "La page prérendue a redirigé vers une URL qui menait vers une URL multi-origine sur le même site, mais la réponse de la destination n'incluait pas l'en-tête Supports-Loading-Mode approprié."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusSpeculationRuleRemoved": {
    "message": "La page prérendue a été déchargée, car la page de lancement a supprimé la règle de prérendu correspondante de <script type=\"speculationrules\">."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusSslCertificateError": {
    "message": "La navigation en prérendu a échoué en raison d'un certificat SSL non valide."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusTimeoutBackgrounded": {
    "message": "La page de lancement a été mise en arrière-plan un long moment. La page prérendue a donc été supprimée."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusTriggerBackgrounded": {
    "message": "La page de lancement a été mise en arrière-plan. La page prérendue a donc été supprimée."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusUaChangeRequiresReload": {
    "message": "L'user-agent a été modifié lors du prérendu de la navigation."
  },
  "panels/application/preloading/components/PreloadingString.ts | statusFailure": {
    "message": "Échec"
  },
  "panels/application/preloading/components/PreloadingString.ts | statusNotTriggered": {
    "message": "Non déclenchée"
  },
  "panels/application/preloading/components/PreloadingString.ts | statusPending": {
    "message": "En attente"
  },
  "panels/application/preloading/components/PreloadingString.ts | statusReady": {
    "message": "Prêt"
  },
  "panels/application/preloading/components/PreloadingString.ts | statusRunning": {
    "message": "Exécution…"
  },
  "panels/application/preloading/components/PreloadingString.ts | statusSuccess": {
    "message": "Opération réussie"
  },
  "panels/application/preloading/components/RuleSetGrid.ts | buttonClickToRevealInElementsPanel": {
    "message": "Cliquer pour afficher dans le panneau \"Elements\""
  },
  "panels/application/preloading/components/RuleSetGrid.ts | buttonClickToRevealInNetworkPanel": {
    "message": "Cliquer pour afficher dans le panneau \"Network\""
  },
  "panels/application/preloading/components/RuleSetGrid.ts | buttonRevealPreloadsAssociatedWithRuleSet": {
    "message": "Afficher les chargements spéculatifs associés à cet ensemble de règles"
  },
  "panels/application/preloading/components/RuleSetGrid.ts | errors": {
    "message": "{errorCount,plural, =1{# erreur}one{# erreur}other{# erreurs}}"
  },
  "panels/application/preloading/components/RuleSetGrid.ts | ruleSet": {
    "message": "Jeu de règles"
  },
  "panels/application/preloading/components/RuleSetGrid.ts | status": {
    "message": "État"
  },
  "panels/application/preloading/components/UsedPreloadingView.ts | badgeFailure": {
    "message": "Échec"
  },
  "panels/application/preloading/components/UsedPreloadingView.ts | badgeFailureWithCount": {
    "message": "{n,plural, =1{# échec}one{# échec}other{# échecs}}"
  },
  "panels/application/preloading/components/UsedPreloadingView.ts | badgeInProgressWithCount": {
    "message": "{n,plural, =1{# en cours}one{# en cours}other{# en cours}}"
  },
  "panels/application/preloading/components/UsedPreloadingView.ts | badgeNoSpeculativeLoads": {
    "message": "Aucun chargement spéculatif"
  },
  "panels/application/preloading/components/UsedPreloadingView.ts | badgeNotTriggeredWithCount": {
    "message": "{n,plural, =1{# non déclenchée}one{# non déclenchée}other{# non déclenchées}}"
  },
  "panels/application/preloading/components/UsedPreloadingView.ts | badgeSuccess": {
    "message": "Réussite"
  },
  "panels/application/preloading/components/UsedPreloadingView.ts | badgeSuccessWithCount": {
    "message": "{n,plural, =1{# opération réussie}one{# opération réussie}other{# opérations réussies}}"
  },
  "panels/application/preloading/components/UsedPreloadingView.ts | currentURL": {
    "message": "URL actuelle"
  },
  "panels/application/preloading/components/UsedPreloadingView.ts | detailsFailureReason": {
    "message": "Motif de l'échec"
  },
  "panels/application/preloading/components/UsedPreloadingView.ts | downgradedPrefetchUsed": {
    "message": "La page de lancement a tenté de précharger l'URL de cette page. Le prérendu a échoué, mais le corps de la réponse obtenu a quand même été utilisé comme préchargement."
  },
  "panels/application/preloading/components/UsedPreloadingView.ts | learnMore": {
    "message": "En savoir plus sur le chargement spéculatif sur developer.chrome.com"
  },
  "panels/application/preloading/components/UsedPreloadingView.ts | mismatchedHeadersDetail": {
    "message": "Les en-têtes de requête HTTP ne correspondent pas"
  },
  "panels/application/preloading/components/UsedPreloadingView.ts | noPreloads": {
    "message": "La page de lancement n'a pas tenté de charger l'URL de cette page de manière spéculative."
  },
  "panels/application/preloading/components/UsedPreloadingView.ts | prefetchFailed": {
    "message": "La page de lancement a tenté de précharger l'URL de cette page, mais le préchargement a échoué. Une navigation complète a donc été effectuée."
  },
  "panels/application/preloading/components/UsedPreloadingView.ts | prefetchUsed": {
    "message": "Cette page a bien été préchargée."
  },
  "panels/application/preloading/components/UsedPreloadingView.ts | preloadedURLs": {
    "message": "URL chargées de manière spéculative par la page de lancement"
  },
  "panels/application/preloading/components/UsedPreloadingView.ts | prerenderFailed": {
    "message": "La page de lancement a tenté de précharger l'URL de cette page, mais le prérendu a échoué. Une navigation complète a donc été effectuée."
  },
  "panels/application/preloading/components/UsedPreloadingView.ts | prerenderUsed": {
    "message": "Cette page a bien été préchargée."
  },
  "panels/application/preloading/components/UsedPreloadingView.ts | speculationsInitiatedByThisPage": {
    "message": "Spéculations initiées par cette page"
  },
  "panels/application/preloading/components/UsedPreloadingView.ts | speculativeLoadingStatusForThisPage": {
    "message": "État de chargement spéculatif pour cette page"
  },
  "panels/application/preloading/components/UsedPreloadingView.ts | viewAllRules": {
    "message": "Afficher toutes les règles de spéculation"
  },
  "panels/application/preloading/components/UsedPreloadingView.ts | viewAllSpeculations": {
    "message": "Afficher toutes les spéculations"
  },
  "panels/autofill/AutofillView.ts | addressPreview": {
    "message": "Aperçu de l'adresse"
  },
  "panels/autofill/AutofillView.ts | attr": {
    "message": "attr."
  },
  "panels/autofill/AutofillView.ts | autoShow": {
    "message": "Ouvrir le panneau lors de la saisie automatique"
  },
  "panels/autofill/AutofillView.ts | autocompleteAttribute": {
    "message": "Attribut de saisie semi-automatique"
  },
  "panels/autofill/AutofillView.ts | formField": {
    "message": "Champ du formulaire"
  },
  "panels/autofill/AutofillView.ts | formInspector": {
    "message": "Outil d'inspection de formulaires"
  },
  "panels/autofill/AutofillView.ts | heur": {
    "message": "heur."
  },
  "panels/autofill/AutofillView.ts | inferredByHeuristics": {
    "message": "Inférence heuristique"
  },
  "panels/autofill/AutofillView.ts | noDataAvailable": {
    "message": "Aucun événement de saisie automatique détecté"
  },
  "panels/autofill/AutofillView.ts | predictedAutofillValue": {
    "message": "Valeur de saisie automatique prédite"
  },
  "panels/autofill/AutofillView.ts | value": {
    "message": "Valeur"
  },
  "panels/autofill/autofill-meta.ts | autofill": {
    "message": "Saisie automatique"
  },
  "panels/autofill/autofill-meta.ts | showAutofill": {
    "message": "Afficher la saisie automatique"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | animation": {
    "message": "Animation"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | auctionWorklet": {
    "message": "Worklet d'enchères publicitaires"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | breakpointHit": {
    "message": "appel de point d'arrêt"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | canvas": {
    "message": "Dessin"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | clipboard": {
    "message": "Presse-papiers"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | control": {
    "message": "Contrôle"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | device": {
    "message": "Appareil"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | domMutation": {
    "message": "Mutation DOM"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | dragDrop": {
    "message": "Glisser-déposer"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | geolocation": {
    "message": "Géolocalisation"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | keyboard": {
    "message": "Clavier"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | load": {
    "message": "Charger"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | media": {
    "message": "Multimédia"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | mouse": {
    "message": "Souris"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | notification": {
    "message": "Notification"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | parse": {
    "message": "Analyser"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | pictureinpicture": {
    "message": "Picture-in-picture"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | pointer": {
    "message": "Pointeur"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | script": {
    "message": "Script"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | sharedStorageWorklet": {
    "message": "Worklet de stockage partagé"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | timer": {
    "message": "Minuteur"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | touch": {
    "message": "Toucher"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | trustedTypeViolations": {
    "message": "Non-respect du Trusted Type"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | webaudio": {
    "message": "WebAudio"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | window": {
    "message": "Fenêtre"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | worker": {
    "message": "Service worker"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | xhr": {
    "message": "XHR"
  },
  "panels/browser_debugger/DOMBreakpointsSidebarPane.ts | attributeModified": {
    "message": "Attribut modifié"
  },
  "panels/browser_debugger/DOMBreakpointsSidebarPane.ts | breakOn": {
    "message": "Arrêt activé"
  },
  "panels/browser_debugger/DOMBreakpointsSidebarPane.ts | breakpointHit": {
    "message": "appel de point d'arrêt"
  },
  "panels/browser_debugger/DOMBreakpointsSidebarPane.ts | breakpointRemoved": {
    "message": "Point d'arrêt supprimé"
  },
  "panels/browser_debugger/DOMBreakpointsSidebarPane.ts | breakpointSet": {
    "message": "Point d'arrêt configuré"
  },
  "panels/browser_debugger/DOMBreakpointsSidebarPane.ts | checked": {
    "message": "coché"
  },
  "panels/browser_debugger/DOMBreakpointsSidebarPane.ts | domBreakpointsList": {
    "message": "Liste des points d'arrêt DOM"
  },
  "panels/browser_debugger/DOMBreakpointsSidebarPane.ts | noBreakpoints": {
    "message": "Aucun point d'arrêt"
  },
  "panels/browser_debugger/DOMBreakpointsSidebarPane.ts | nodeRemoved": {
    "message": "Nœud supprimé"
  },
  "panels/browser_debugger/DOMBreakpointsSidebarPane.ts | removeAllDomBreakpoints": {
    "message": "Supprimer tous les points d'arrêt DOM"
  },
  "panels/browser_debugger/DOMBreakpointsSidebarPane.ts | removeBreakpoint": {
    "message": "Supprimer le point d'arrêt"
  },
  "panels/browser_debugger/DOMBreakpointsSidebarPane.ts | revealDomNodeInElementsPanel": {
    "message": "Afficher le nœud DOM dans le panneau \"Elements\""
  },
  "panels/browser_debugger/DOMBreakpointsSidebarPane.ts | sBreakpointHit": {
    "message": "appel de point d'arrêt {PH1}"
  },
  "panels/browser_debugger/DOMBreakpointsSidebarPane.ts | sS": {
    "message": "{PH1} : {PH2}"
  },
  "panels/browser_debugger/DOMBreakpointsSidebarPane.ts | sSS": {
    "message": "{PH1} : {PH2}, {PH3}"
  },
  "panels/browser_debugger/DOMBreakpointsSidebarPane.ts | subtreeModified": {
    "message": "Sous-arborescence modifiée"
  },
  "panels/browser_debugger/DOMBreakpointsSidebarPane.ts | unchecked": {
    "message": "décochée"
  },
  "panels/browser_debugger/XHRBreakpointsSidebarPane.ts | addBreakpoint": {
    "message": "Ajouter un point d'arrêt"
  },
  "panels/browser_debugger/XHRBreakpointsSidebarPane.ts | addXhrfetchBreakpoint": {
    "message": "Ajouter un point d'arrêt XHR/Fetch"
  },
  "panels/browser_debugger/XHRBreakpointsSidebarPane.ts | anyXhrOrFetch": {
    "message": "Tout XHR ou fetch"
  },
  "panels/browser_debugger/XHRBreakpointsSidebarPane.ts | breakWhenUrlContains": {
    "message": "Arrêter lorsque l'URL contient :"
  },
  "panels/browser_debugger/XHRBreakpointsSidebarPane.ts | breakpointHit": {
    "message": "appel de point d'arrêt"
  },
  "panels/browser_debugger/XHRBreakpointsSidebarPane.ts | noBreakpoints": {
    "message": "Aucun point d'arrêt"
  },
  "panels/browser_debugger/XHRBreakpointsSidebarPane.ts | removeAllBreakpoints": {
    "message": "Supprimer tous les points d'arrêt"
  },
  "panels/browser_debugger/XHRBreakpointsSidebarPane.ts | removeBreakpoint": {
    "message": "Supprimer le point d'arrêt"
  },
  "panels/browser_debugger/XHRBreakpointsSidebarPane.ts | urlBreakpoint": {
    "message": "Point d'arrêt d'URL"
  },
  "panels/browser_debugger/XHRBreakpointsSidebarPane.ts | urlContainsS": {
    "message": "L'URL contient \"{PH1}\""
  },
  "panels/browser_debugger/XHRBreakpointsSidebarPane.ts | xhrfetchBreakpoints": {
    "message": "Points d'arrêt XHR/Fetch"
  },
  "panels/browser_debugger/browser_debugger-meta.ts | contentScripts": {
    "message": "Scripts de contenu"
  },
  "panels/browser_debugger/browser_debugger-meta.ts | cspViolationBreakpoints": {
    "message": "Points d'arrêt de cas de non-respect CSP"
  },
  "panels/browser_debugger/browser_debugger-meta.ts | domBreakpoints": {
    "message": "Points d'arrêt DOM"
  },
  "panels/browser_debugger/browser_debugger-meta.ts | eventListenerBreakpoints": {
    "message": "Points d'arrêt de l'écouteur d'événements"
  },
  "panels/browser_debugger/browser_debugger-meta.ts | globalListeners": {
    "message": "Écouteurs globaux"
  },
  "panels/browser_debugger/browser_debugger-meta.ts | overrides": {
    "message": "Remplacement"
  },
  "panels/browser_debugger/browser_debugger-meta.ts | page": {
    "message": "Page"
  },
  "panels/browser_debugger/browser_debugger-meta.ts | refreshGlobalListeners": {
    "message": "Actualiser les écouteurs globaux"
  },
  "panels/browser_debugger/browser_debugger-meta.ts | showContentScripts": {
    "message": "Afficher les scripts de contenu"
  },
  "panels/browser_debugger/browser_debugger-meta.ts | showCspViolationBreakpoints": {
    "message": "Afficher les points d'arrêt des cas de non-respect CSP"
  },
  "panels/browser_debugger/browser_debugger-meta.ts | showDomBreakpoints": {
    "message": "Afficher les points d'arrêt DOM"
  },
  "panels/browser_debugger/browser_debugger-meta.ts | showEventListenerBreakpoints": {
    "message": "Afficher les points d'arrêt de l'écouteur d'événements"
  },
  "panels/browser_debugger/browser_debugger-meta.ts | showGlobalListeners": {
    "message": "Afficher les écouteurs globaux"
  },
  "panels/browser_debugger/browser_debugger-meta.ts | showOverrides": {
    "message": "Afficher les remplacements"
  },
  "panels/browser_debugger/browser_debugger-meta.ts | showPage": {
    "message": "Afficher la page"
  },
  "panels/browser_debugger/browser_debugger-meta.ts | showXhrfetchBreakpoints": {
    "message": "Afficher les points d'arrêt XHR/Fetch"
  },
  "panels/browser_debugger/browser_debugger-meta.ts | xhrfetchBreakpoints": {
    "message": "Points d'arrêt XHR/Fetch"
  },
  "panels/changes/ChangesSidebar.ts | sFromSourceMap": {
    "message": "{PH1} (de la carte source)"
  },
  "panels/changes/ChangesView.ts | binaryData": {
    "message": "Données binaires"
  },
  "panels/changes/ChangesView.ts | copy": {
    "message": "Copier"
  },
  "panels/changes/ChangesView.ts | noChanges": {
    "message": "Aucune modification"
  },
  "panels/changes/ChangesView.ts | sDeletions": {
    "message": "{n,plural, =1{# suppression (-)}one{# suppression (-)}other{# suppressions (-)}}"
  },
  "panels/changes/ChangesView.ts | sInsertions": {
    "message": "{n,plural, =1{# insertion (+)}one{# insertion (+)}other{# insertions (+)}}"
  },
  "panels/changes/changes-meta.ts | changes": {
    "message": "Modifications"
  },
  "panels/changes/changes-meta.ts | copyAllChangesFromCurrentFile": {
    "message": "Copier toutes les modifications du fichier actuel"
  },
  "panels/changes/changes-meta.ts | revertAllChangesToCurrentFile": {
    "message": "Rétablir toutes les modifications du fichier actuel"
  },
  "panels/changes/changes-meta.ts | showChanges": {
    "message": "Afficher les modifications"
  },
  "panels/console/ConsoleContextSelector.ts | extension": {
    "message": "Extension"
  },
  "panels/console/ConsoleContextSelector.ts | javascriptContextNotSelected": {
    "message": "Contexte JavaScript : non sélectionné"
  },
  "panels/console/ConsoleContextSelector.ts | javascriptContextS": {
    "message": "Contexte JavaScript : {PH1}"
  },
  "panels/console/ConsolePinPane.ts | evaluateAllowingSideEffects": {
    "message": "Évaluer, en autorisant les effets secondaires"
  },
  "panels/console/ConsolePinPane.ts | expression": {
    "message": "Expression"
  },
  "panels/console/ConsolePinPane.ts | liveExpressionEditor": {
    "message": "Éditeur de l'expression active"
  },
  "panels/console/ConsolePinPane.ts | notAvailable": {
    "message": "non disponible"
  },
  "panels/console/ConsolePinPane.ts | removeAllExpressions": {
    "message": "Supprimer toutes les expressions"
  },
  "panels/console/ConsolePinPane.ts | removeBlankExpression": {
    "message": "Supprimer l'expression vide"
  },
  "panels/console/ConsolePinPane.ts | removeExpression": {
    "message": "Supprimer l'expression"
  },
  "panels/console/ConsolePinPane.ts | removeExpressionS": {
    "message": "Supprimer l'expression : {PH1}"
  },
  "panels/console/ConsolePrompt.ts | allowPasting": {
    "message": "autoriser le collage"
  },
  "panels/console/ConsolePrompt.ts | consolePrompt": {
    "message": "Invite de la console"
  },
  "panels/console/ConsolePrompt.ts | selfXssWarning": {
    "message": "Avertissement : Ne collez pas dans la console des outils de développement du code que vous ne comprenez pas ou que vous n'avez pas examiné. Cela pourrait permettre à des pirates informatiques de voler votre identité ou de prendre le contrôle de votre ordinateur. Veuillez saisir \"{PH1}\" ci-dessous pour autoriser le collage."
  },
  "panels/console/ConsoleSidebar.ts | dErrors": {
    "message": "{n,plural, =0{Aucune erreur}=1{# erreur}one{# erreur}other{# erreurs}}"
  },
  "panels/console/ConsoleSidebar.ts | dInfo": {
    "message": "{n,plural, =0{Aucune info}=1{# info}one{# info}other{# infos}}"
  },
  "panels/console/ConsoleSidebar.ts | dMessages": {
    "message": "{n,plural, =0{Aucun message}=1{# message}one{# message}other{# messages}}"
  },
  "panels/console/ConsoleSidebar.ts | dUserMessages": {
    "message": "{n,plural, =0{Aucun message utilisateur}=1{# message utilisateur}one{# message utilisateur}other{# messages utilisateur}}"
  },
  "panels/console/ConsoleSidebar.ts | dVerbose": {
    "message": "{n,plural, =0{Aucun message détaillé}=1{# message détaillé}one{# message détaillé}other{# messages détaillés}}"
  },
  "panels/console/ConsoleSidebar.ts | dWarnings": {
    "message": "{n,plural, =0{Aucun avertissement}=1{# avertissement}one{# avertissement}other{# avertissements}}"
  },
  "panels/console/ConsoleSidebar.ts | other": {
    "message": "<autre>"
  },
  "panels/console/ConsoleView.ts | allLevels": {
    "message": "Tous les niveaux"
  },
  "panels/console/ConsoleView.ts | autocompleteFromHistory": {
    "message": "Saisie semi-automatique à partir de l'historique"
  },
  "panels/console/ConsoleView.ts | consoleCleared": {
    "message": "Console effacée"
  },
  "panels/console/ConsoleView.ts | consoleSettings": {
    "message": "Paramètres de la console"
  },
  "panels/console/ConsoleView.ts | consoleSidebarHidden": {
    "message": "Barre latérale de la console masquée"
  },
  "panels/console/ConsoleView.ts | consoleSidebarShown": {
    "message": "Barre latérale de la console affichée"
  },
  "panels/console/ConsoleView.ts | copyVisibleStyledSelection": {
    "message": "Copier la sélection visible stylisée"
  },
  "panels/console/ConsoleView.ts | customLevels": {
    "message": "Niveaux personnalisés"
  },
  "panels/console/ConsoleView.ts | default": {
    "message": "Par défaut"
  },
  "panels/console/ConsoleView.ts | defaultLevels": {
    "message": "Niveaux par défaut"
  },
  "panels/console/ConsoleView.ts | doNotClearLogOnPageReload": {
    "message": "Ne pas effacer le journal lors de la navigation/de l'actualisation de la page"
  },
  "panels/console/ConsoleView.ts | eagerlyEvaluateTextInThePrompt": {
    "message": "Évaluer rapidement le texte dans l'invite"
  },
  "panels/console/ConsoleView.ts | egEventdCdnUrlacom": {
    "message": "Ex. : /eventd/ -cdn url:a.com"
  },
  "panels/console/ConsoleView.ts | errors": {
    "message": "Erreurs"
  },
  "panels/console/ConsoleView.ts | filter": {
    "message": "Filtrer"
  },
  "panels/console/ConsoleView.ts | filteredMessagesInConsole": {
    "message": "{PH1} messages dans la console"
  },
  "panels/console/ConsoleView.ts | findStringInLogs": {
    "message": "Rechercher la chaîne dans les journaux"
  },
  "panels/console/ConsoleView.ts | groupSimilarMessagesInConsole": {
    "message": "Regrouper les messages similaires dans la console"
  },
  "panels/console/ConsoleView.ts | hideAll": {
    "message": "Tout masquer"
  },
  "panels/console/ConsoleView.ts | hideConsoleSidebar": {
    "message": "Masquer la barre latérale de la console"
  },
  "panels/console/ConsoleView.ts | hideMessagesFromS": {
    "message": "Masquer les messages de {PH1}"
  },
  "panels/console/ConsoleView.ts | hideNetwork": {
    "message": "Masquer le réseau"
  },
  "panels/console/ConsoleView.ts | info": {
    "message": "Infos"
  },
  "panels/console/ConsoleView.ts | issueToolbarClickToGoToTheIssuesTab": {
    "message": "Cliquer pour accéder à l'onglet des problèmes"
  },
  "panels/console/ConsoleView.ts | issueToolbarClickToView": {
    "message": "Cliquez pour afficher {issueEnumeration}"
  },
  "panels/console/ConsoleView.ts | issueToolbarTooltipGeneral": {
    "message": "Certains problèmes qui ne génèrent plus de messages dans la console sont affichés dans l'onglet des problèmes."
  },
  "panels/console/ConsoleView.ts | issuesWithColon": {
    "message": "{n,plural, =0{Aucun problème}=1{# problème :}one{# problème :}other{# problèmes :}}"
  },
  "panels/console/ConsoleView.ts | logLevelS": {
    "message": "Niveau de consignation : {PH1}"
  },
  "panels/console/ConsoleView.ts | logLevels": {
    "message": "Niveaux de journalisation"
  },
  "panels/console/ConsoleView.ts | logXMLHttpRequests": {
    "message": "Consigner les XMLHttpRequests"
  },
  "panels/console/ConsoleView.ts | onlyShowMessagesFromTheCurrentContext": {
    "message": "Afficher uniquement les messages du contexte actuel (top, iframe, worker, extension)"
  },
  "panels/console/ConsoleView.ts | overriddenByFilterSidebar": {
    "message": "Remplacé par la barre latérale de filtre"
  },
  "panels/console/ConsoleView.ts | preserveLog": {
    "message": "Conserver le journal"
  },
  "panels/console/ConsoleView.ts | replayXhr": {
    "message": "Relancer XHR"
  },
  "panels/console/ConsoleView.ts | sHidden": {
    "message": "{n,plural, =1{# masqué}one{# masqué}other{# masqués}}"
  },
  "panels/console/ConsoleView.ts | sOnly": {
    "message": "{PH1} uniquement"
  },
  "panels/console/ConsoleView.ts | saveAs": {
    "message": "Enregistrer sous…"
  },
  "panels/console/ConsoleView.ts | searching": {
    "message": "Recherche…"
  },
  "panels/console/ConsoleView.ts | selectedContextOnly": {
    "message": "Contexte sélectionné uniquement"
  },
  "panels/console/ConsoleView.ts | showConsoleSidebar": {
    "message": "Afficher la barre latérale de la console"
  },
  "panels/console/ConsoleView.ts | showCorsErrorsInConsole": {
    "message": "Afficher les erreurs CORS dans la console"
  },
  "panels/console/ConsoleView.ts | treatEvaluationAsUserActivation": {
    "message": "Traiter l'évaluation comme une activation par l'utilisateur"
  },
  "panels/console/ConsoleView.ts | verbose": {
    "message": "Message détaillé"
  },
  "panels/console/ConsoleView.ts | warnings": {
    "message": "Avertissements"
  },
  "panels/console/ConsoleView.ts | writingFile": {
    "message": "Écriture du fichier…"
  },
  "panels/console/ConsoleViewMessage.ts | Mxx": {
    "message": " M<XX>"
  },
  "panels/console/ConsoleViewMessage.ts | assertionFailed": {
    "message": "Échec de l'assertion : "
  },
  "panels/console/ConsoleViewMessage.ts | attribute": {
    "message": "<attribute>"
  },
  "panels/console/ConsoleViewMessage.ts | clearAllMessagesWithS": {
    "message": "Effacer tous les messages avec {PH1}"
  },
  "panels/console/ConsoleViewMessage.ts | cndBreakpoint": {
    "message": "Point d'arrêt conditionnel"
  },
  "panels/console/ConsoleViewMessage.ts | console": {
    "message": "Console"
  },
  "panels/console/ConsoleViewMessage.ts | consoleWasCleared": {
    "message": "Les données de la console ont été effacées"
  },
  "panels/console/ConsoleViewMessage.ts | consoleclearWasPreventedDueTo": {
    "message": "console.clear() a été empêché en raison de l'option \"Conserver le journal\""
  },
  "panels/console/ConsoleViewMessage.ts | deprecationS": {
    "message": "[Deprecation] {PH1}"
  },
  "panels/console/ConsoleViewMessage.ts | error": {
    "message": "Erreur"
  },
  "panels/console/ConsoleViewMessage.ts | errorS": {
    "message": "{n,plural, =1{Erreur, répétée # fois}one{Erreur, répétée # fois}other{Erreur, répétée # fois}}"
  },
  "panels/console/ConsoleViewMessage.ts | exception": {
    "message": "<exception>"
  },
  "panels/console/ConsoleViewMessage.ts | explainThisError": {
    "message": "Expliquer cette erreur"
  },
  "panels/console/ConsoleViewMessage.ts | explainThisMessage": {
    "message": "Expliquer ce message"
  },
  "panels/console/ConsoleViewMessage.ts | explainThisWarning": {
    "message": "Explication de cet avertissement"
  },
  "panels/console/ConsoleViewMessage.ts | functionWasResolvedFromBound": {
    "message": "Fonction résolue à partir de la fonction liée."
  },
  "panels/console/ConsoleViewMessage.ts | index": {
    "message": "(index)"
  },
  "panels/console/ConsoleViewMessage.ts | interventionS": {
    "message": "[Intervention] {PH1}"
  },
  "panels/console/ConsoleViewMessage.ts | logpoint": {
    "message": "Point de journalisation"
  },
  "panels/console/ConsoleViewMessage.ts | repeatS": {
    "message": "{n,plural, =1{Répété # fois}one{Répété # fois}other{Répété # fois}}"
  },
  "panels/console/ConsoleViewMessage.ts | someEvent": {
    "message": "<certains> événements"
  },
  "panels/console/ConsoleViewMessage.ts | stackMessageCollapsed": {
    "message": "Table de pile réduite"
  },
  "panels/console/ConsoleViewMessage.ts | stackMessageExpanded": {
    "message": "Table de pile développée"
  },
  "panels/console/ConsoleViewMessage.ts | thisValueWasEvaluatedUponFirst": {
    "message": "Cette valeur a été évaluée lors du premier développement. Elle a peut-être changé depuis."
  },
  "panels/console/ConsoleViewMessage.ts | thisValueWillNotBeCollectedUntil": {
    "message": "Cette valeur ne sera pas collectée tant que la console ne sera pas effacée."
  },
  "panels/console/ConsoleViewMessage.ts | tookNms": {
    "message": "a pris <N> ms"
  },
  "panels/console/ConsoleViewMessage.ts | url": {
    "message": "<URL>"
  },
  "panels/console/ConsoleViewMessage.ts | value": {
    "message": "Valeur"
  },
  "panels/console/ConsoleViewMessage.ts | violationS": {
    "message": "[Violation] {PH1}"
  },
  "panels/console/ConsoleViewMessage.ts | warning": {
    "message": "Avertissement"
  },
  "panels/console/ConsoleViewMessage.ts | warningS": {
    "message": "{n,plural, =1{Avertissement, répété # fois}one{Avertissement, répété # fois}other{Avertissement, répété # fois}}"
  },
  "panels/console/console-meta.ts | autocompleteFromHistory": {
    "message": "Saisie semi-automatique à partir de l'historique"
  },
  "panels/console/console-meta.ts | autocompleteOnEnter": {
    "message": "Accepter la suggestion de saisie semi-automatique lorsque vous appuyez sur \"Entrée\""
  },
  "panels/console/console-meta.ts | clearConsole": {
    "message": "Vider la console"
  },
  "panels/console/console-meta.ts | clearConsoleHistory": {
    "message": "Effacer l'historique de la console"
  },
  "panels/console/console-meta.ts | collapseConsoleTraceMessagesByDefault": {
    "message": "Ne pas développer automatiquement les messages console.trace()"
  },
  "panels/console/console-meta.ts | console": {
    "message": "Console"
  },
  "panels/console/console-meta.ts | createLiveExpression": {
    "message": "Créer une expression active"
  },
  "panels/console/console-meta.ts | doNotAutocompleteFromHistory": {
    "message": "Ne pas compléter automatiquement à partir de l'historique"
  },
  "panels/console/console-meta.ts | doNotAutocompleteOnEnter": {
    "message": "Ne pas accepter la suggestion de saisie semi-automatique lorsque vous appuyez sur \"Entrée\""
  },
  "panels/console/console-meta.ts | doNotEagerlyEvaluateConsole": {
    "message": "Ne pas évaluer rapidement le texte d'invite de la console"
  },
  "panels/console/console-meta.ts | doNotGroupSimilarMessagesIn": {
    "message": "Ne pas regrouper les messages similaires dans la console"
  },
  "panels/console/console-meta.ts | doNotShowCorsErrorsIn": {
    "message": "Ne pas afficher les erreurs CORS dans la console"
  },
  "panels/console/console-meta.ts | doNotTreatEvaluationAsUser": {
    "message": "Ne pas traiter l'évaluation comme une activation par l'utilisateur"
  },
  "panels/console/console-meta.ts | eagerEvaluation": {
    "message": "Évaluation stricte"
  },
  "panels/console/console-meta.ts | eagerlyEvaluateConsolePromptText": {
    "message": "Évaluer rapidement le texte d'invite de la console"
  },
  "panels/console/console-meta.ts | evaluateTriggersUserActivation": {
    "message": "Traiter l'évaluation du code comme une action de l'utilisateur"
  },
  "panels/console/console-meta.ts | expandConsoleTraceMessagesByDefault": {
    "message": "Développer automatiquement les messages console.trace()"
  },
  "panels/console/console-meta.ts | groupSimilarMessagesInConsole": {
    "message": "Regrouper les messages similaires dans la console"
  },
  "panels/console/console-meta.ts | hideNetworkMessages": {
    "message": "Masquer les messages réseau"
  },
  "panels/console/console-meta.ts | hideTimestamps": {
    "message": "Masquer l'horodatage"
  },
  "panels/console/console-meta.ts | logXmlhttprequests": {
    "message": "Consigner les XMLHttpRequests"
  },
  "panels/console/console-meta.ts | onlyShowMessagesFromTheCurrent": {
    "message": "Afficher uniquement les messages du contexte actuel (top, iframe, worker, extension)"
  },
  "panels/console/console-meta.ts | selectedContextOnly": {
    "message": "Contexte sélectionné uniquement"
  },
  "panels/console/console-meta.ts | showConsole": {
    "message": "Afficher la console"
  },
  "panels/console/console-meta.ts | showCorsErrorsInConsole": {
    "message": "Afficher les erreurs CORS dans la console"
  },
  "panels/console/console-meta.ts | showMessagesFromAllContexts": {
    "message": "Afficher les messages de tous les contextes"
  },
  "panels/console/console-meta.ts | showNetworkMessages": {
    "message": "Afficher les messages réseau"
  },
  "panels/console/console-meta.ts | showTimestamps": {
    "message": "Afficher l'horodatage"
  },
  "panels/console/console-meta.ts | toggleConsole": {
    "message": "Activer/Désactiver la console"
  },
  "panels/console/console-meta.ts | treatEvaluationAsUserActivation": {
    "message": "Traiter l'évaluation comme une activation par l'utilisateur"
  },
  "panels/console_counters/WarningErrorCounter.ts | openConsoleToViewS": {
    "message": "Ouvrir la console pour afficher {PH1}"
  },
  "panels/console_counters/WarningErrorCounter.ts | openIssuesToView": {
    "message": "{n,plural, =1{Ouvrir pour voir # problème}one{Ouvrir pour voir # problème}other{Ouvrir pour voir # problèmes}}"
  },
  "panels/console_counters/WarningErrorCounter.ts | sErrors": {
    "message": "{n,plural, =1{# erreur}one{# erreur}other{# erreurs}}"
  },
  "panels/console_counters/WarningErrorCounter.ts | sWarnings": {
    "message": "{n,plural, =1{# avertissement}one{# avertissement}other{# avertissements}}"
  },
  "panels/coverage/CoverageListView.ts | codeCoverage": {
    "message": "Couverture de code"
  },
  "panels/coverage/CoverageListView.ts | css": {
    "message": "CSS"
  },
  "panels/coverage/CoverageListView.ts | jsCoverageWithPerBlock": {
    "message": "Couverture JS avec précision par bloc : une fois qu'un bloc JavaScript a été exécuté, ce bloc est marqué comme couvert."
  },
  "panels/coverage/CoverageListView.ts | jsCoverageWithPerFunction": {
    "message": "Couverture JS avec granularité par fonction : une fois qu'une fonction a été exécutée, toute la fonction est marquée comme couverte."
  },
  "panels/coverage/CoverageListView.ts | jsPerBlock": {
    "message": "JS (par bloc)"
  },
  "panels/coverage/CoverageListView.ts | jsPerFunction": {
    "message": "JS (par fonction)"
  },
  "panels/coverage/CoverageListView.ts | sBytes": {
    "message": "{n,plural, =1{# octet}one{# octet}other{# octets}}"
  },
  "panels/coverage/CoverageListView.ts | sBytesS": {
    "message": "{n,plural, =1{# octet, {percentage}}one{# octet, {percentage}}other{# octets, {percentage}}}"
  },
  "panels/coverage/CoverageListView.ts | sBytesSBelongToBlocksOf": {
    "message": "{PH1} octets ({PH2}) appartiennent à des blocs JavaScript qui n'ont pas (encore) été exécutés."
  },
  "panels/coverage/CoverageListView.ts | sBytesSBelongToBlocksOfJavascript": {
    "message": "{PH1} octets ({PH2}) appartiennent à des blocs JavaScript qui ont été exécutés au moins une fois."
  },
  "panels/coverage/CoverageListView.ts | sBytesSBelongToFunctionsThatHave": {
    "message": "{PH1} octets ({PH2}) appartiennent à des fonctions qui n'ont pas (encore) été exécutées."
  },
  "panels/coverage/CoverageListView.ts | sBytesSBelongToFunctionsThatHaveExecuted": {
    "message": "{PH1} octets ({PH2}) appartiennent à des fonctions exécutées au moins une fois."
  },
  "panels/coverage/CoverageListView.ts | sOfFileUnusedSOfFileUsed": {
    "message": "{PH1} % du fichier inutilisés, {PH2} % du fichier utilisés"
  },
  "panels/coverage/CoverageListView.ts | totalBytes": {
    "message": "Total d'octets :"
  },
  "panels/coverage/CoverageListView.ts | type": {
    "message": "Type"
  },
  "panels/coverage/CoverageListView.ts | unusedBytes": {
    "message": "Octets inutilisés"
  },
  "panels/coverage/CoverageListView.ts | url": {
    "message": "URL"
  },
  "panels/coverage/CoverageListView.ts | usageVisualization": {
    "message": "Visualisation de l'utilisation"
  },
  "panels/coverage/CoverageView.ts | activationNoCapture": {
    "message": "Impossible de capturer les informations de couverture, car la page était prérendue en arrière-plan."
  },
  "panels/coverage/CoverageView.ts | all": {
    "message": "Tout"
  },
  "panels/coverage/CoverageView.ts | bfcacheNoCapture": {
    "message": "Impossible de capturer les informations de couverture, car la page a été diffusée depuis le cache amélioré."
  },
  "panels/coverage/CoverageView.ts | chooseCoverageGranularityPer": {
    "message": "Choisir la précision de la couverture : \"Par fonction\" présente un coût faible, \"Par bloc\" un coût élevé."
  },
  "panels/coverage/CoverageView.ts | clickTheRecordButtonSToStart": {
    "message": "Cliquez sur le bouton d'enregistrement {PH1} pour démarrer la capture de couverture."
  },
  "panels/coverage/CoverageView.ts | clickTheReloadButtonSToReloadAnd": {
    "message": "Cliquez sur le bouton {PH1} pour actualiser et commencer l'enregistrement de la couverture."
  },
  "panels/coverage/CoverageView.ts | contentScripts": {
    "message": "Scripts de contenu"
  },
  "panels/coverage/CoverageView.ts | css": {
    "message": "CSS"
  },
  "panels/coverage/CoverageView.ts | filterCoverageByType": {
    "message": "Filtrer la couverture par type"
  },
  "panels/coverage/CoverageView.ts | filteredSTotalS": {
    "message": "Filtré : {PH1}  Total : {PH2}"
  },
  "panels/coverage/CoverageView.ts | includeExtensionContentScripts": {
    "message": "Inclure les scripts de contenu d'extension"
  },
  "panels/coverage/CoverageView.ts | javascript": {
    "message": "JavaScript"
  },
  "panels/coverage/CoverageView.ts | perBlock": {
    "message": "Par bloc"
  },
  "panels/coverage/CoverageView.ts | perFunction": {
    "message": "Par fonction"
  },
  "panels/coverage/CoverageView.ts | reloadPrompt": {
    "message": "Cliquez sur le bouton d'actualisation {PH1} pour actualiser et obtenir une couverture."
  },
  "panels/coverage/CoverageView.ts | sOfSSUsedSoFarSUnused": {
    "message": "{PH1} sur {PH2} ({PH3} %) utilisés jusqu'à présent, {PH4} inutilisés."
  },
  "panels/coverage/CoverageView.ts | urlFilter": {
    "message": "Filtre d'URL"
  },
  "panels/coverage/coverage-meta.ts | clearCoverage": {
    "message": "Effacer la couverture"
  },
  "panels/coverage/coverage-meta.ts | coverage": {
    "message": "Couverture"
  },
  "panels/coverage/coverage-meta.ts | exportCoverage": {
    "message": "Exporter la couverture"
  },
  "panels/coverage/coverage-meta.ts | instrumentCoverage": {
    "message": "Couverture de l'instrument"
  },
  "panels/coverage/coverage-meta.ts | showCoverage": {
    "message": "Afficher la couverture"
  },
  "panels/coverage/coverage-meta.ts | startInstrumentingCoverageAnd": {
    "message": "Commencer à instrumenter la couverture et actualiser la page"
  },
  "panels/coverage/coverage-meta.ts | stopInstrumentingCoverageAndShow": {
    "message": "Arrêter la couverture d'instrumentation et afficher les résultats"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | aa": {
    "message": "AA"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | aaa": {
    "message": "AAA"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | apca": {
    "message": "APCA"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | attributeSelectors": {
    "message": "Sélecteurs d'attributs"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | backgroundColorsS": {
    "message": "Couleurs d'arrière-plan : {PH1}"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | borderColorsS": {
    "message": "Couleurs des bordures : {PH1}"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | classSelectors": {
    "message": "Sélecteurs de classe"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | colors": {
    "message": "Couleurs"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | contrastIssues": {
    "message": "Problèmes de contraste"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | contrastIssuesS": {
    "message": "Problèmes de contraste : {PH1}"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | contrastRatio": {
    "message": "Rapport de contraste"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | cssOverviewElements": {
    "message": "Éléments d'aperçu CSS"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | declaration": {
    "message": "Déclaration"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | element": {
    "message": "Élément"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | elements": {
    "message": "Éléments"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | externalStylesheets": {
    "message": "Feuilles de style externes"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | fillColorsS": {
    "message": "Couleurs de remplissage : {PH1}"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | fontInfo": {
    "message": "Infos sur la police"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | idSelectors": {
    "message": "Sélecteurs d'identifiants"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | inlineStyleElements": {
    "message": "Éléments de style intégrés"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | mediaQueries": {
    "message": "Requêtes média"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | nOccurrences": {
    "message": "{n,plural, =1{# occurrence}one{# occurrence}other{# occurrences}}"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | nonsimpleSelectors": {
    "message": "Sélecteurs complexes"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | overviewSummary": {
    "message": "Résumé de l'aperçu"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | showElement": {
    "message": "Afficher l'élément"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | source": {
    "message": "Source"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | styleRules": {
    "message": "Règles de style"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | textColorSOverSBackgroundResults": {
    "message": "La couleur de texte {PH1} sur un fond {PH2} réduit le contraste pour {PH3} éléments"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | textColorsS": {
    "message": "Couleurs du texte : {PH1}"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | thereAreNoFonts": {
    "message": "Aucune police."
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | thereAreNoMediaQueries": {
    "message": "Aucune requête média."
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | thereAreNoUnusedDeclarations": {
    "message": "Aucune déclaration inutilisée."
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | typeSelectors": {
    "message": "Sélecteurs de types"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | universalSelectors": {
    "message": "Sélecteurs universels"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | unusedDeclarations": {
    "message": "Déclarations inutilisées"
  },
  "panels/css_overview/CSSOverviewProcessingView.ts | cancel": {
    "message": "Annuler"
  },
  "panels/css_overview/CSSOverviewSidebarPanel.ts | clearOverview": {
    "message": "Effacer l'aperçu"
  },
  "panels/css_overview/CSSOverviewSidebarPanel.ts | cssOverviewPanelSidebar": {
    "message": "Barre latérale du panneau \"Présentation du CSS\""
  },
  "panels/css_overview/CSSOverviewUnusedDeclarations.ts | bottomAppliedToAStatically": {
    "message": "Bottom appliquées à un élément positionné statiquement"
  },
  "panels/css_overview/CSSOverviewUnusedDeclarations.ts | heightAppliedToAnInlineElement": {
    "message": "Valeur Height appliquée à un élément intégré"
  },
  "panels/css_overview/CSSOverviewUnusedDeclarations.ts | leftAppliedToAStatically": {
    "message": "Valeur Left appliquée à un élément positionné statiquement"
  },
  "panels/css_overview/CSSOverviewUnusedDeclarations.ts | rightAppliedToAStatically": {
    "message": "Valeur Right appliquée à un élément positionné statiquement"
  },
  "panels/css_overview/CSSOverviewUnusedDeclarations.ts | topAppliedToAStatically": {
    "message": "Valeur Top appliquée à un élément positionné statiquement"
  },
  "panels/css_overview/CSSOverviewUnusedDeclarations.ts | verticalAlignmentAppliedTo": {
    "message": "Alignement vertical appliqué à un élément qui n'est ni inline ni une table-cell"
  },
  "panels/css_overview/CSSOverviewUnusedDeclarations.ts | widthAppliedToAnInlineElement": {
    "message": "Valeur Width appliquée à un élément intégré"
  },
  "panels/css_overview/components/CSSOverviewStartView.ts | captureOverview": {
    "message": "Aperçu de la capture"
  },
  "panels/css_overview/components/CSSOverviewStartView.ts | capturePageCSSOverview": {
    "message": "Capturer un aperçu du CSS de votre page"
  },
  "panels/css_overview/components/CSSOverviewStartView.ts | identifyCSSImprovements": {
    "message": "Identifier les améliorations potentielles du CSS"
  },
  "panels/css_overview/components/CSSOverviewStartView.ts | identifyCSSImprovementsWithExampleIssues": {
    "message": "Identifier les améliorations potentielles du CSS (problèmes de faible contraste, déclarations inutilisées, non-correspondance des couleurs ou des polices, etc.)"
  },
  "panels/css_overview/components/CSSOverviewStartView.ts | locateAffectedElements": {
    "message": "Rechercher les éléments concernés dans le panneau Éléments"
  },
  "panels/css_overview/components/CSSOverviewStartView.ts | quickStartWithCSSOverview": {
    "message": "Démarrage rapide : premiers pas avec le nouveau panneau Présentation du CSS."
  },
  "panels/css_overview/css_overview-meta.ts | cssOverview": {
    "message": "Présentation du CSS"
  },
  "panels/css_overview/css_overview-meta.ts | showCssOverview": {
    "message": "Afficher l'aperçu CSS"
  },
  "panels/developer_resources/DeveloperResourcesListView.ts | copyInitiatorUrl": {
    "message": "Copier l'URL de l'initiateur"
  },
  "panels/developer_resources/DeveloperResourcesListView.ts | copyUrl": {
    "message": "Copier l'URL"
  },
  "panels/developer_resources/DeveloperResourcesListView.ts | developerResources": {
    "message": "Ressources pour les développeurs"
  },
  "panels/developer_resources/DeveloperResourcesListView.ts | error": {
    "message": "Erreur"
  },
  "panels/developer_resources/DeveloperResourcesListView.ts | failure": {
    "message": "échec"
  },
  "panels/developer_resources/DeveloperResourcesListView.ts | initiator": {
    "message": "Initiateur"
  },
  "panels/developer_resources/DeveloperResourcesListView.ts | pending": {
    "message": "en attente"
  },
  "panels/developer_resources/DeveloperResourcesListView.ts | sBytes": {
    "message": "{n,plural, =1{# octet}one{# octet}other{# octets}}"
  },
  "panels/developer_resources/DeveloperResourcesListView.ts | status": {
    "message": "État"
  },
  "panels/developer_resources/DeveloperResourcesListView.ts | success": {
    "message": "ok"
  },
  "panels/developer_resources/DeveloperResourcesListView.ts | totalBytes": {
    "message": "Total d'octets :"
  },
  "panels/developer_resources/DeveloperResourcesListView.ts | url": {
    "message": "URL"
  },
  "panels/developer_resources/DeveloperResourcesView.ts | enableLoadingThroughTarget": {
    "message": "Charger via le site"
  },
  "panels/developer_resources/DeveloperResourcesView.ts | enterTextToSearchTheUrlAndError": {
    "message": "Saisissez le texte à rechercher dans les colonnes \"URL\" et \"Erreur\""
  },
  "panels/developer_resources/DeveloperResourcesView.ts | loadHttpsDeveloperResources": {
    "message": "Charger les ressources HTTP(S) pour les développeurs via le site que vous inspectez, et non via les Outils de développement"
  },
  "panels/developer_resources/DeveloperResourcesView.ts | resources": {
    "message": "{n,plural, =1{# ressource}one{# ressource}other{# ressources}}"
  },
  "panels/developer_resources/DeveloperResourcesView.ts | resourcesCurrentlyLoading": {
    "message": "{PH1} ressources, {PH2} en cours de chargement"
  },
  "panels/developer_resources/developer_resources-meta.ts | developerResources": {
    "message": "Ressources pour les développeurs"
  },
  "panels/developer_resources/developer_resources-meta.ts | showDeveloperResources": {
    "message": "Afficher les ressources pour les développeurs"
  },
  "panels/elements/CSSRuleValidator.ts | flexGridContainerPropertyRuleFix": {
    "message": "Essayez de définir {PROPERTY_NAME} sur l'élément conteneur ou utilisez {ALTERNATIVE_PROPERTY_NAME} à la place."
  },
  "panels/elements/CSSRuleValidator.ts | flexGridContainerPropertyRuleReason": {
    "message": "Cet élément est de type {CONTAINER_DISPLAY_NAME} (c'est-à-dire un enfant d'un conteneur {CONTAINER_DISPLAY_NAME}), mais {PROPERTY_NAME} ne s'applique qu'aux conteneurs."
  },
  "panels/elements/CSSRuleValidator.ts | fontVariationSettingsWarning": {
    "message": "La valeur du paramètre \"{PH1}\" {PH2} est en dehors de la plage autorisée [{PH3}, {PH4}] pour la famille de polices \"{PH5}\"."
  },
  "panels/elements/CSSRuleValidator.ts | ruleViolatedByParentElementRuleFix": {
    "message": "Essayez de définir la propriété {EXISTING_PARENT_ELEMENT_RULE} du parent sur {TARGET_PARENT_ELEMENT_RULE}."
  },
  "panels/elements/CSSRuleValidator.ts | ruleViolatedByParentElementRuleReason": {
    "message": "La propriété {REASON_PROPERTY_DECLARATION_CODE} de l'élément parent empêche la mise en œuvre de {AFFECTED_PROPERTY_DECLARATION_CODE}."
  },
  "panels/elements/CSSRuleValidator.ts | ruleViolatedBySameElementRuleChangeFlexOrGrid": {
    "message": "Essayez d'ajouter {DISPLAY_GRID_RULE} ou {DISPLAY_FLEX_RULE} pour transformer cet élément en conteneur."
  },
  "panels/elements/CSSRuleValidator.ts | ruleViolatedBySameElementRuleChangeSuggestion": {
    "message": "Essayez de définir la propriété {EXISTING_PROPERTY_DECLARATION} sur {TARGET_PROPERTY_DECLARATION}."
  },
  "panels/elements/CSSRuleValidator.ts | ruleViolatedBySameElementRuleFix": {
    "message": "Essayez de définir {PROPERTY_NAME} sur une valeur autre que {PROPERTY_VALUE}."
  },
  "panels/elements/CSSRuleValidator.ts | ruleViolatedBySameElementRuleReason": {
    "message": "La propriété {REASON_PROPERTY_DECLARATION_CODE} empêche la mise en œuvre de {AFFECTED_PROPERTY_DECLARATION_CODE}."
  },
  "panels/elements/ClassesPaneWidget.ts | addNewClass": {
    "message": "Ajouter une classe"
  },
  "panels/elements/ClassesPaneWidget.ts | classSAdded": {
    "message": "Classe {PH1} ajoutée"
  },
  "panels/elements/ClassesPaneWidget.ts | classesSAdded": {
    "message": "Classes {PH1} ajoutées"
  },
  "panels/elements/ClassesPaneWidget.ts | elementClasses": {
    "message": "Classes de l'élément"
  },
  "panels/elements/ColorSwatchPopoverIcon.ts | openCubicBezierEditor": {
    "message": "Ouvrir l'éditeur de courbe de Bézier cubique"
  },
  "panels/elements/ColorSwatchPopoverIcon.ts | openShadowEditor": {
    "message": "Ouvrir l'éditeur d'ombre"
  },
  "panels/elements/ComputedStyleWidget.ts | filter": {
    "message": "Filtrer"
  },
  "panels/elements/ComputedStyleWidget.ts | filterComputedStyles": {
    "message": "Filtrer les styles calculés"
  },
  "panels/elements/ComputedStyleWidget.ts | group": {
    "message": "Regrouper"
  },
  "panels/elements/ComputedStyleWidget.ts | navigateToSelectorSource": {
    "message": "Accéder à la source du sélecteur"
  },
  "panels/elements/ComputedStyleWidget.ts | navigateToStyle": {
    "message": "Accéder au style"
  },
  "panels/elements/ComputedStyleWidget.ts | noMatchingProperty": {
    "message": "Aucune propriété correspondante"
  },
  "panels/elements/ComputedStyleWidget.ts | showAll": {
    "message": "Tout afficher"
  },
  "panels/elements/DOMLinkifier.ts | node": {
    "message": "<nœud>"
  },
  "panels/elements/ElementStatePaneWidget.ts | forceElementState": {
    "message": "Forcer l'état de l'élément"
  },
  "panels/elements/ElementStatePaneWidget.ts | toggleElementState": {
    "message": "Activer/Désactiver l'état de l'élément"
  },
  "panels/elements/ElementsPanel.ts | computed": {
    "message": "Calculés"
  },
  "panels/elements/ElementsPanel.ts | computedStylesHidden": {
    "message": "Barre latérale des styles calculés masquée"
  },
  "panels/elements/ElementsPanel.ts | computedStylesShown": {
    "message": "Barre latérale des styles calculés affichée"
  },
  "panels/elements/ElementsPanel.ts | domTreeExplorer": {
    "message": "Explorateur d'arborescence DOM"
  },
  "panels/elements/ElementsPanel.ts | elementStateS": {
    "message": "État de l'élément : {PH1}"
  },
  "panels/elements/ElementsPanel.ts | findByStringSelectorOrXpath": {
    "message": "Indiquez une chaîne, un sélecteur ou un XPath"
  },
  "panels/elements/ElementsPanel.ts | hideComputedStylesSidebar": {
    "message": "Masquer la barre latérale des styles calculés"
  },
  "panels/elements/ElementsPanel.ts | nodeCannotBeFoundInTheCurrent": {
    "message": "Impossible de trouver le nœud sur la page actuelle."
  },
  "panels/elements/ElementsPanel.ts | revealInElementsPanel": {
    "message": "Afficher dans le panneau \"Elements\""
  },
  "panels/elements/ElementsPanel.ts | showComputedStylesSidebar": {
    "message": "Afficher la barre latérale des styles calculés"
  },
  "panels/elements/ElementsPanel.ts | sidePanelContent": {
    "message": "Contenu du panneau latéral"
  },
  "panels/elements/ElementsPanel.ts | sidePanelToolbar": {
    "message": "Barre d'outils du panneau latéral"
  },
  "panels/elements/ElementsPanel.ts | styles": {
    "message": "Styles"
  },
  "panels/elements/ElementsPanel.ts | switchToAccessibilityTreeView": {
    "message": "Passer à l'arborescence d'accessibilité"
  },
  "panels/elements/ElementsPanel.ts | switchToDomTreeView": {
    "message": "Passer à l'arborescence DOM"
  },
  "panels/elements/ElementsPanel.ts | theDeferredDomNodeCouldNotBe": {
    "message": "Le nœud DOM reporté n'a pas pu être résolu en nœud valide."
  },
  "panels/elements/ElementsPanel.ts | theRemoteObjectCouldNotBe": {
    "message": "L'objet distant n'a pas pu être résolu en nœud valide."
  },
  "panels/elements/ElementsTreeElement.ts | addAttribute": {
    "message": "Ajouter un attribut"
  },
  "panels/elements/ElementsTreeElement.ts | captureNodeScreenshot": {
    "message": "Effectuer une capture d'écran du nœud"
  },
  "panels/elements/ElementsTreeElement.ts | children": {
    "message": "Enfants :"
  },
  "panels/elements/ElementsTreeElement.ts | collapseChildren": {
    "message": "Réduire les enfants"
  },
  "panels/elements/ElementsTreeElement.ts | copy": {
    "message": "Copier"
  },
  "panels/elements/ElementsTreeElement.ts | copyElement": {
    "message": "Copier l'élément"
  },
  "panels/elements/ElementsTreeElement.ts | copyFullXpath": {
    "message": "Copier le XPath complet"
  },
  "panels/elements/ElementsTreeElement.ts | copyJsPath": {
    "message": "Copier le chemin d'accès JS"
  },
  "panels/elements/ElementsTreeElement.ts | copyOuterhtml": {
    "message": "Copier outerHTML"
  },
  "panels/elements/ElementsTreeElement.ts | copySelector": {
    "message": "Copier le selector"
  },
  "panels/elements/ElementsTreeElement.ts | copyStyles": {
    "message": "Copier les styles"
  },
  "panels/elements/ElementsTreeElement.ts | copyXpath": {
    "message": "Copier le XPath"
  },
  "panels/elements/ElementsTreeElement.ts | cut": {
    "message": "Couper"
  },
  "panels/elements/ElementsTreeElement.ts | deleteElement": {
    "message": "Supprimer l'élément"
  },
  "panels/elements/ElementsTreeElement.ts | disableFlexMode": {
    "message": "Désactiver le mode Flex"
  },
  "panels/elements/ElementsTreeElement.ts | disableGridMode": {
    "message": "Désactiver le mode Grille"
  },
  "panels/elements/ElementsTreeElement.ts | disableScrollSnap": {
    "message": "Désactiver la superposition scroll-snap"
  },
  "panels/elements/ElementsTreeElement.ts | duplicateElement": {
    "message": "Élément en double"
  },
  "panels/elements/ElementsTreeElement.ts | editAsHtml": {
    "message": "Modifier au format HTML"
  },
  "panels/elements/ElementsTreeElement.ts | editAttribute": {
    "message": "Modifier l'attribut"
  },
  "panels/elements/ElementsTreeElement.ts | editText": {
    "message": "Modifier le texte"
  },
  "panels/elements/ElementsTreeElement.ts | enableFlexMode": {
    "message": "Activer le mode Flex"
  },
  "panels/elements/ElementsTreeElement.ts | enableGridMode": {
    "message": "Activer le mode Grille"
  },
  "panels/elements/ElementsTreeElement.ts | enableScrollSnap": {
    "message": "Activer la superposition scroll-snap"
  },
  "panels/elements/ElementsTreeElement.ts | expandRecursively": {
    "message": "Développer de façon récursive"
  },
  "panels/elements/ElementsTreeElement.ts | focus": {
    "message": "Sélectionner"
  },
  "panels/elements/ElementsTreeElement.ts | forceState": {
    "message": "Forcer l'état"
  },
  "panels/elements/ElementsTreeElement.ts | hideElement": {
    "message": "Masquer l'élément"
  },
  "panels/elements/ElementsTreeElement.ts | openMediaPanel": {
    "message": "Accéder au panneau \"Multimédia\""
  },
  "panels/elements/ElementsTreeElement.ts | paste": {
    "message": "Coller"
  },
  "panels/elements/ElementsTreeElement.ts | scrollIntoView": {
    "message": "Faire défiler jusqu'au contenu"
  },
  "panels/elements/ElementsTreeElement.ts | showFrameDetails": {
    "message": "Voir les détails de iframe"
  },
  "panels/elements/ElementsTreeElement.ts | thisFrameWasIdentifiedAsAnAd": {
    "message": "Ce frame a été identifié comme un frame publicitaire"
  },
  "panels/elements/ElementsTreeElement.ts | useSInTheConsoleToReferToThis": {
    "message": "Utiliser {PH1} dans la console pour faire référence à cet élément."
  },
  "panels/elements/ElementsTreeElement.ts | valueIsTooLargeToEdit": {
    "message": "<valeur trop grande pour être modifiée>"
  },
  "panels/elements/ElementsTreeOutline.ts | adornerSettings": {
    "message": "Paramètres du badge…"
  },
  "panels/elements/ElementsTreeOutline.ts | pageDom": {
    "message": "DOM de la page"
  },
  "panels/elements/ElementsTreeOutline.ts | reveal": {
    "message": "afficher"
  },
  "panels/elements/ElementsTreeOutline.ts | showAllNodesDMore": {
    "message": "Afficher tous les nœuds ({PH1} autre[s])"
  },
  "panels/elements/ElementsTreeOutline.ts | storeAsGlobalVariable": {
    "message": "Stocker en tant que variable globale"
  },
  "panels/elements/EventListenersWidget.ts | all": {
    "message": "Tout"
  },
  "panels/elements/EventListenersWidget.ts | ancestors": {
    "message": "Ancêtres"
  },
  "panels/elements/EventListenersWidget.ts | blocking": {
    "message": "Blocage"
  },
  "panels/elements/EventListenersWidget.ts | eventListenersCategory": {
    "message": "Catégorie d'écouteurs d'événements"
  },
  "panels/elements/EventListenersWidget.ts | frameworkListeners": {
    "message": "Écouteurs du Framework"
  },
  "panels/elements/EventListenersWidget.ts | passive": {
    "message": "Passif"
  },
  "panels/elements/EventListenersWidget.ts | resolveEventListenersBoundWith": {
    "message": "Résoudre les écouteurs d'événements liés au framework"
  },
  "panels/elements/EventListenersWidget.ts | showListenersOnTheAncestors": {
    "message": "Afficher les écouteurs sur les ancêtres"
  },
  "panels/elements/LayersWidget.ts | cssLayersTitle": {
    "message": "Couches CSS"
  },
  "panels/elements/LayersWidget.ts | toggleCSSLayers": {
    "message": "Activer/Désactiver la vue des couches CSS"
  },
  "panels/elements/MarkerDecorator.ts | domBreakpoint": {
    "message": "Point d'arrêt DOM"
  },
  "panels/elements/MarkerDecorator.ts | elementIsHidden": {
    "message": "L'élément est masqué"
  },
  "panels/elements/NodeStackTraceWidget.ts | noStackTraceAvailable": {
    "message": "Aucune trace de la pile disponible"
  },
  "panels/elements/PlatformFontsWidget.ts | dGlyphs": {
    "message": "{n,plural, =1{(# glyphe)}one{(# glyphe)}other{(# glyphes)}}"
  },
  "panels/elements/PlatformFontsWidget.ts | familyName": {
    "message": "Nom de famille"
  },
  "panels/elements/PlatformFontsWidget.ts | fontOrigin": {
    "message": "Origine de la police"
  },
  "panels/elements/PlatformFontsWidget.ts | localFile": {
    "message": "Fichier local"
  },
  "panels/elements/PlatformFontsWidget.ts | networkResource": {
    "message": "Ressource réseau"
  },
  "panels/elements/PlatformFontsWidget.ts | postScriptName": {
    "message": "Nom PostScript"
  },
  "panels/elements/PlatformFontsWidget.ts | renderedFonts": {
    "message": "Polices affichées"
  },
  "panels/elements/PropertiesWidget.ts | filter": {
    "message": "Filtrer"
  },
  "panels/elements/PropertiesWidget.ts | filterProperties": {
    "message": "Propriétés de filtrage"
  },
  "panels/elements/PropertiesWidget.ts | noMatchingProperty": {
    "message": "Aucune propriété correspondante"
  },
  "panels/elements/PropertiesWidget.ts | showAll": {
    "message": "Tout afficher"
  },
  "panels/elements/PropertiesWidget.ts | showAllTooltip": {
    "message": "Si cette case n'est pas cochée, seules les propriétés dont les valeurs ne sont pas nulles ni indéfinies seront affichées"
  },
  "panels/elements/StylePropertiesSection.ts | constructedStylesheet": {
    "message": "feuille de style construite"
  },
  "panels/elements/StylePropertiesSection.ts | copyAllCSSChanges": {
    "message": "Copier toutes les modifications CSS"
  },
  "panels/elements/StylePropertiesSection.ts | copyAllDeclarations": {
    "message": "Copier toutes les déclarations"
  },
  "panels/elements/StylePropertiesSection.ts | copyRule": {
    "message": "Copier la règle"
  },
  "panels/elements/StylePropertiesSection.ts | copySelector": {
    "message": "Copier le selector"
  },
  "panels/elements/StylePropertiesSection.ts | cssSelector": {
    "message": "Sélecteur de CSS"
  },
  "panels/elements/StylePropertiesSection.ts | injectedStylesheet": {
    "message": "feuille de sytle injectée"
  },
  "panels/elements/StylePropertiesSection.ts | insertStyleRuleBelow": {
    "message": "Insérer une règle de style ci-dessous"
  },
  "panels/elements/StylePropertiesSection.ts | sattributesStyle": {
    "message": "{PH1}[Style d'attributs]"
  },
  "panels/elements/StylePropertiesSection.ts | showAllPropertiesSMore": {
    "message": "Afficher toutes les propriétés ({PH1} autre[s])"
  },
  "panels/elements/StylePropertiesSection.ts | styleAttribute": {
    "message": "Attribut style"
  },
  "panels/elements/StylePropertiesSection.ts | userAgentStylesheet": {
    "message": "feuille de style user-agent"
  },
  "panels/elements/StylePropertiesSection.ts | viaInspector": {
    "message": "via l'inspecteur"
  },
  "panels/elements/StylePropertyTreeElement.ts | copyAllCSSChanges": {
    "message": "Copier toutes les modifications CSS"
  },
  "panels/elements/StylePropertyTreeElement.ts | copyAllCssDeclarationsAsJs": {
    "message": "Copier toutes les déclarations en tant que JS"
  },
  "panels/elements/StylePropertyTreeElement.ts | copyAllDeclarations": {
    "message": "Copier toutes les déclarations"
  },
  "panels/elements/StylePropertyTreeElement.ts | copyCssDeclarationAsJs": {
    "message": "Copier la déclaration en tant que JS"
  },
  "panels/elements/StylePropertyTreeElement.ts | copyDeclaration": {
    "message": "Copier la déclaration"
  },
  "panels/elements/StylePropertyTreeElement.ts | copyProperty": {
    "message": "Copier la propriété"
  },
  "panels/elements/StylePropertyTreeElement.ts | copyRule": {
    "message": "Copier la règle"
  },
  "panels/elements/StylePropertyTreeElement.ts | copyValue": {
    "message": "Copier la valeur"
  },
  "panels/elements/StylePropertyTreeElement.ts | flexboxEditorButton": {
    "message": "Ouvrir l'éditeur flexbox"
  },
  "panels/elements/StylePropertyTreeElement.ts | gridEditorButton": {
    "message": "Ouvrir l'éditeur de grid"
  },
  "panels/elements/StylePropertyTreeElement.ts | openColorPickerS": {
    "message": "Ouvrez le sélecteur de couleur. {PH1}"
  },
  "panels/elements/StylePropertyTreeElement.ts | revealInSourcesPanel": {
    "message": "Afficher dans le panneau \"Sources\""
  },
  "panels/elements/StylePropertyTreeElement.ts | shiftClickToChangeColorFormat": {
    "message": "Clic + Maj pour changer de format de couleurs."
  },
  "panels/elements/StylePropertyTreeElement.ts | togglePropertyAndContinueEditing": {
    "message": "Activer/Désactiver la propriété et continuer à modifier"
  },
  "panels/elements/StylePropertyTreeElement.ts | viewComputedValue": {
    "message": "Voir la valeur calculée"
  },
  "panels/elements/StylesSidebarPane.ts | automaticDarkMode": {
    "message": "Mode sombre automatique"
  },
  "panels/elements/StylesSidebarPane.ts | clickToRevealLayer": {
    "message": "Cliquez dessus pour afficher la couche dans l'arborescence des couches"
  },
  "panels/elements/StylesSidebarPane.ts | copiedToClipboard": {
    "message": "Copié dans le presse-papiers"
  },
  "panels/elements/StylesSidebarPane.ts | copyAllCSSChanges": {
    "message": "Copier les modifications CSS"
  },
  "panels/elements/StylesSidebarPane.ts | cssPropertyName": {
    "message": "Nom de la propriété CSS : {PH1}"
  },
  "panels/elements/StylesSidebarPane.ts | cssPropertyValue": {
    "message": "Valeur de la propriété CSS : {PH1}"
  },
  "panels/elements/StylesSidebarPane.ts | filter": {
    "message": "Filtrer"
  },
  "panels/elements/StylesSidebarPane.ts | filterStyles": {
    "message": "Filtrer les styles"
  },
  "panels/elements/StylesSidebarPane.ts | incrementdecrementWithMousewheelHundred": {
    "message": "Augmenter/Diminuer avec la molette de la souris ou les touches vers le haut/bas. {PH1} : ±100, Maj : ±10, Alt : ±0,1"
  },
  "panels/elements/StylesSidebarPane.ts | incrementdecrementWithMousewheelOne": {
    "message": "Augmenter/Diminuer avec la molette de la souris ou les touches vers le haut/bas. {PH1} : R ±1, Maj : G ±1, Alt : B ±1"
  },
  "panels/elements/StylesSidebarPane.ts | inheritedFromSPseudoOf": {
    "message": "Hérité du : pseudo {PH1} de "
  },
  "panels/elements/StylesSidebarPane.ts | inheritedFroms": {
    "message": "Hérité de "
  },
  "panels/elements/StylesSidebarPane.ts | invalidPropertyValue": {
    "message": "Valeur de propriété incorrecte"
  },
  "panels/elements/StylesSidebarPane.ts | invalidString": {
    "message": "{PH1}, nom de la propriété : {PH2}, valeur de la propriété : {PH3}"
  },
  "panels/elements/StylesSidebarPane.ts | layer": {
    "message": "Couche"
  },
  "panels/elements/StylesSidebarPane.ts | noMatchingSelectorOrStyle": {
    "message": "Aucun sélecteur ou style correspondant"
  },
  "panels/elements/StylesSidebarPane.ts | pseudoSElement": {
    "message": "Pseudo-élément ::{PH1}"
  },
  "panels/elements/StylesSidebarPane.ts | specificity": {
    "message": "Spécificité : {PH1}"
  },
  "panels/elements/StylesSidebarPane.ts | toggleRenderingEmulations": {
    "message": "Activer/Désactiver les émulations de l'affichage standard"
  },
  "panels/elements/StylesSidebarPane.ts | unknownPropertyName": {
    "message": "Nom de la propriété inconnu"
  },
  "panels/elements/StylesSidebarPane.ts | visibleSelectors": {
    "message": "{n,plural, =1{# sélecteur visible listé ci-dessous}one{# sélecteur visible listé ci-dessous}other{# sélecteurs visibles listés ci-dessous}}"
  },
  "panels/elements/TopLayerContainer.ts | reveal": {
    "message": "afficher"
  },
  "panels/elements/components/AccessibilityTreeNode.ts | ignored": {
    "message": "Ignoré"
  },
  "panels/elements/components/AdornerSettingsPane.ts | closeButton": {
    "message": "Fermer"
  },
  "panels/elements/components/AdornerSettingsPane.ts | settingsTitle": {
    "message": "Afficher les badges"
  },
  "panels/elements/components/CSSHintDetailsView.ts | learnMore": {
    "message": "En savoir plus"
  },
  "panels/elements/components/CSSPropertyDocsView.ts | dontShow": {
    "message": "Ne pas afficher"
  },
  "panels/elements/components/CSSPropertyDocsView.ts | learnMore": {
    "message": "En savoir plus"
  },
  "panels/elements/components/CSSVariableValueView.ts | invalidPropertyValue": {
    "message": "Valeur de propriété non valide, type attendu : {type}"
  },
  "panels/elements/components/CSSVariableValueView.ts | registeredPropertyLinkTitle": {
    "message": "Afficher la propriété enregistrée"
  },
  "panels/elements/components/CSSVariableValueView.ts | sIsNotDefined": {
    "message": "{PH1} non défini"
  },
  "panels/elements/components/ElementsBreadcrumbs.ts | breadcrumbs": {
    "message": "Fil d'Ariane de l'arborescence DOM"
  },
  "panels/elements/components/ElementsBreadcrumbs.ts | scrollLeft": {
    "message": "Faire défiler vers la gauche"
  },
  "panels/elements/components/ElementsBreadcrumbs.ts | scrollRight": {
    "message": "Faire défiler vers la droite"
  },
  "panels/elements/components/ElementsBreadcrumbsUtils.ts | text": {
    "message": "(texte)"
  },
  "panels/elements/components/LayoutPane.ts | chooseElementOverlayColor": {
    "message": "Sélectionnez la couleur de superposition pour cet élément"
  },
  "panels/elements/components/LayoutPane.ts | colorPickerOpened": {
    "message": "Le sélecteur de couleur a été ouvert."
  },
  "panels/elements/components/LayoutPane.ts | flexbox": {
    "message": "Flexbox"
  },
  "panels/elements/components/LayoutPane.ts | flexboxOverlays": {
    "message": "Superpositions dans Flexbox"
  },
  "panels/elements/components/LayoutPane.ts | grid": {
    "message": "Grille"
  },
  "panels/elements/components/LayoutPane.ts | gridOverlays": {
    "message": "Superpositions sur la grille"
  },
  "panels/elements/components/LayoutPane.ts | noFlexboxLayoutsFoundOnThisPage": {
    "message": "Aucune mise en page Flexbox trouvée sur cette page"
  },
  "panels/elements/components/LayoutPane.ts | noGridLayoutsFoundOnThisPage": {
    "message": "Aucune mise en page de grille trouvée sur cette page"
  },
  "panels/elements/components/LayoutPane.ts | overlayDisplaySettings": {
    "message": "Paramètres d'affichage des superpositions"
  },
  "panels/elements/components/LayoutPane.ts | showElementInTheElementsPanel": {
    "message": "Afficher l'élément dans le panneau \"Elements\""
  },
  "panels/elements/components/StylePropertyEditor.ts | deselectButton": {
    "message": "Supprimer {propertyName} : {propertyValue}"
  },
  "panels/elements/components/StylePropertyEditor.ts | selectButton": {
    "message": "Ajouter {propertyName}: {propertyValue}"
  },
  "panels/elements/elements-meta.ts | captureAreaScreenshot": {
    "message": "Effectuer une capture d'écran de la zone sélectionnée"
  },
  "panels/elements/elements-meta.ts | copyStyles": {
    "message": "Copier les styles"
  },
  "panels/elements/elements-meta.ts | disableDomWordWrap": {
    "message": "Désactiver le retour automatique à la ligne DOM"
  },
  "panels/elements/elements-meta.ts | duplicateElement": {
    "message": "Dupliquer l'élément"
  },
  "panels/elements/elements-meta.ts | editAsHtml": {
    "message": "Modifier au format HTML"
  },
  "panels/elements/elements-meta.ts | elements": {
    "message": "Éléments"
  },
  "panels/elements/elements-meta.ts | enableDomWordWrap": {
    "message": "Activer le retour automatique à la ligne DOM"
  },
  "panels/elements/elements-meta.ts | eventListeners": {
    "message": "Écouteurs d'événements"
  },
  "panels/elements/elements-meta.ts | hideElement": {
    "message": "Masquer l'élément"
  },
  "panels/elements/elements-meta.ts | hideHtmlComments": {
    "message": "Masquer les commentaires HTML"
  },
  "panels/elements/elements-meta.ts | layout": {
    "message": "Mise en page"
  },
  "panels/elements/elements-meta.ts | newStyleRule": {
    "message": "Nouvelle règle de style"
  },
  "panels/elements/elements-meta.ts | properties": {
    "message": "Propriétés"
  },
  "panels/elements/elements-meta.ts | redo": {
    "message": "Répéter"
  },
  "panels/elements/elements-meta.ts | refreshEventListeners": {
    "message": "Actualiser les écouteurs d'événements"
  },
  "panels/elements/elements-meta.ts | revealDomNodeOnHover": {
    "message": "Afficher le nœud DOM au passage du pointeur"
  },
  "panels/elements/elements-meta.ts | selectAnElementInThePageTo": {
    "message": "Sélectionner un élément de la page pour l'inspecter"
  },
  "panels/elements/elements-meta.ts | showCSSDocumentationTooltip": {
    "message": "Afficher l'info-bulle sur la documentation CSS"
  },
  "panels/elements/elements-meta.ts | showComputedStyles": {
    "message": "Afficher les styles calculés"
  },
  "panels/elements/elements-meta.ts | showDetailedInspectTooltip": {
    "message": "Afficher une info-bulle d'inspection détaillée"
  },
  "panels/elements/elements-meta.ts | showElements": {
    "message": "Afficher les éléments"
  },
  "panels/elements/elements-meta.ts | showEventListeners": {
    "message": "Afficher les écouteurs d'événements"
  },
  "panels/elements/elements-meta.ts | showHtmlComments": {
    "message": "Afficher les commentaires HTML"
  },
  "panels/elements/elements-meta.ts | showLayout": {
    "message": "Afficher la mise en page"
  },
  "panels/elements/elements-meta.ts | showProperties": {
    "message": "Afficher les propriétés"
  },
  "panels/elements/elements-meta.ts | showStackTrace": {
    "message": "Afficher la trace de la pile"
  },
  "panels/elements/elements-meta.ts | showStyles": {
    "message": "Afficher les styles"
  },
  "panels/elements/elements-meta.ts | showUserAgentShadowDOM": {
    "message": "Afficher le Shadow DOM de l'user-agent"
  },
  "panels/elements/elements-meta.ts | stackTrace": {
    "message": "Trace de la pile"
  },
  "panels/elements/elements-meta.ts | toggleEyeDropper": {
    "message": "Activer/Désactiver la pipette"
  },
  "panels/elements/elements-meta.ts | undo": {
    "message": "Annuler"
  },
  "panels/elements/elements-meta.ts | wordWrap": {
    "message": "Retour automatique à la ligne"
  },
  "panels/emulation/DeviceModeToolbar.ts | addDevicePixelRatio": {
    "message": "Ajouter le rapport de pixels de l'appareil"
  },
  "panels/emulation/DeviceModeToolbar.ts | addDeviceType": {
    "message": "Ajouter le type d'appareil"
  },
  "panels/emulation/DeviceModeToolbar.ts | autoadjustZoom": {
    "message": "Réglage automatique du zoom"
  },
  "panels/emulation/DeviceModeToolbar.ts | closeDevtools": {
    "message": "Fermer les Outils de développement"
  },
  "panels/emulation/DeviceModeToolbar.ts | defaultF": {
    "message": "Par défaut : {PH1}"
  },
  "panels/emulation/DeviceModeToolbar.ts | devicePixelRatio": {
    "message": "Rapport de pixels de l'appareil"
  },
  "panels/emulation/DeviceModeToolbar.ts | devicePosture": {
    "message": "Position de l'appareil"
  },
  "panels/emulation/DeviceModeToolbar.ts | deviceType": {
    "message": "Type d'appareil"
  },
  "panels/emulation/DeviceModeToolbar.ts | dimensions": {
    "message": "Dimensions"
  },
  "panels/emulation/DeviceModeToolbar.ts | edit": {
    "message": "Modifier…"
  },
  "panels/emulation/DeviceModeToolbar.ts | experimentalWebPlatformFeature": {
    "message": "Le flag \"Experimental Web Platform Feature\" est activé. Cliquez ici pour le désactiver."
  },
  "panels/emulation/DeviceModeToolbar.ts | experimentalWebPlatformFeatureFlag": {
    "message": "Le flag \"Experimental Web Platform Feature\" est désactivé. Cliquez ici pour l'activer."
  },
  "panels/emulation/DeviceModeToolbar.ts | fitToWindowF": {
    "message": "Ajuster à la fenêtre ({PH1} %)"
  },
  "panels/emulation/DeviceModeToolbar.ts | heightLeaveEmptyForFull": {
    "message": "Hauteur (laisser vide si pleine)"
  },
  "panels/emulation/DeviceModeToolbar.ts | hideDeviceFrame": {
    "message": "Masquer le cadre de l'appareil"
  },
  "panels/emulation/DeviceModeToolbar.ts | hideMediaQueries": {
    "message": "Masquer les requêtes médias"
  },
  "panels/emulation/DeviceModeToolbar.ts | hideRulers": {
    "message": "Masquer les règles"
  },
  "panels/emulation/DeviceModeToolbar.ts | landscape": {
    "message": "Paysage"
  },
  "panels/emulation/DeviceModeToolbar.ts | moreOptions": {
    "message": "Autres options"
  },
  "panels/emulation/DeviceModeToolbar.ts | none": {
    "message": "Aucun"
  },
  "panels/emulation/DeviceModeToolbar.ts | portrait": {
    "message": "Portrait"
  },
  "panels/emulation/DeviceModeToolbar.ts | removeDevicePixelRatio": {
    "message": "Supprimer le rapport de pixels de l'appareil"
  },
  "panels/emulation/DeviceModeToolbar.ts | removeDeviceType": {
    "message": "Supprimer le type d'appareil"
  },
  "panels/emulation/DeviceModeToolbar.ts | resetToDefaults": {
    "message": "Rétablir les valeurs par défaut"
  },
  "panels/emulation/DeviceModeToolbar.ts | responsive": {
    "message": "Réactivité"
  },
  "panels/emulation/DeviceModeToolbar.ts | rotate": {
    "message": "Faire pivoter"
  },
  "panels/emulation/DeviceModeToolbar.ts | screenOrientationOptions": {
    "message": "Options d'orientation de l'écran"
  },
  "panels/emulation/DeviceModeToolbar.ts | showDeviceFrame": {
    "message": "Afficher un cadre autour de l'appareil"
  },
  "panels/emulation/DeviceModeToolbar.ts | showMediaQueries": {
    "message": "Afficher les requêtes médias"
  },
  "panels/emulation/DeviceModeToolbar.ts | showRulers": {
    "message": "Afficher les règles"
  },
  "panels/emulation/DeviceModeToolbar.ts | toggleDualscreenMode": {
    "message": "Activer/Désactiver le mode double écran"
  },
  "panels/emulation/DeviceModeToolbar.ts | width": {
    "message": "Largeur"
  },
  "panels/emulation/DeviceModeToolbar.ts | zoom": {
    "message": "Zoom"
  },
  "panels/emulation/DeviceModeView.ts | doubleclickForFullHeight": {
    "message": "Double-cliquer pour ouvrir à pleine hauteur"
  },
  "panels/emulation/DeviceModeView.ts | laptop": {
    "message": "Ordinateur portable"
  },
  "panels/emulation/DeviceModeView.ts | laptopL": {
    "message": "Ordinateur portable L"
  },
  "panels/emulation/DeviceModeView.ts | mobileL": {
    "message": "Mobile L"
  },
  "panels/emulation/DeviceModeView.ts | mobileM": {
    "message": "Mobile M"
  },
  "panels/emulation/DeviceModeView.ts | mobileS": {
    "message": "Mobile S"
  },
  "panels/emulation/DeviceModeView.ts | tablet": {
    "message": "Tablette"
  },
  "panels/emulation/MediaQueryInspector.ts | revealInSourceCode": {
    "message": "Afficher dans le code source"
  },
  "panels/emulation/emulation-meta.ts | captureFullSizeScreenshot": {
    "message": "Effectuer une capture d'écran en taille réelle"
  },
  "panels/emulation/emulation-meta.ts | captureNodeScreenshot": {
    "message": "Effectuer une capture d'écran du nœud"
  },
  "panels/emulation/emulation-meta.ts | captureScreenshot": {
    "message": "Effectuer une capture d'écran"
  },
  "panels/emulation/emulation-meta.ts | device": {
    "message": "appareil"
  },
  "panels/emulation/emulation-meta.ts | hideDeviceFrame": {
    "message": "Masquer le cadre de l'appareil"
  },
  "panels/emulation/emulation-meta.ts | hideMediaQueries": {
    "message": "Masquer les requêtes médias"
  },
  "panels/emulation/emulation-meta.ts | hideRulers": {
    "message": "Masquer les règles dans la barre d'outils du mode Appareil"
  },
  "panels/emulation/emulation-meta.ts | showDeviceFrame": {
    "message": "Afficher le cadre de l'appareil"
  },
  "panels/emulation/emulation-meta.ts | showMediaQueries": {
    "message": "Afficher les requêtes médias"
  },
  "panels/emulation/emulation-meta.ts | showRulers": {
    "message": "Afficher les règles dans la barre d'outils du mode Appareil"
  },
  "panels/emulation/emulation-meta.ts | toggleDeviceToolbar": {
    "message": "Activer/Désactiver la barre d'outils de l'appareil"
  },
  "panels/event_listeners/EventListenersView.ts | deleteEventListener": {
    "message": "Supprimer l'écouteur d'événements"
  },
  "panels/event_listeners/EventListenersView.ts | noEventListeners": {
    "message": "Aucun écouteur d'événements"
  },
  "panels/event_listeners/EventListenersView.ts | passive": {
    "message": "Passif"
  },
  "panels/event_listeners/EventListenersView.ts | remove": {
    "message": "Supprimer"
  },
  "panels/event_listeners/EventListenersView.ts | revealInElementsPanel": {
    "message": "Afficher dans le panneau \"Elements\""
  },
  "panels/event_listeners/EventListenersView.ts | togglePassive": {
    "message": "Passer en mode passif"
  },
  "panels/event_listeners/EventListenersView.ts | toggleWhetherEventListenerIs": {
    "message": "Définir si l'écouteur d'événements est passif ou s'il bloque"
  },
  "panels/explain/components/ConsoleInsight.ts | closeInsight": {
    "message": "Fermer l'insight"
  },
  "panels/explain/components/ConsoleInsight.ts | consoleMessage": {
    "message": "Message de la console"
  },
  "panels/explain/components/ConsoleInsight.ts | error": {
    "message": "Un problème est survenu…"
  },
  "panels/explain/components/ConsoleInsight.ts | generating": {
    "message": "Génération…"
  },
  "panels/explain/components/ConsoleInsight.ts | insight": {
    "message": "Insight"
  },
  "panels/explain/components/ConsoleInsight.ts | networkRequest": {
    "message": "Requête réseau"
  },
  "panels/explain/components/ConsoleInsight.ts | opensInNewTab": {
    "message": "(s'ouvre dans un nouvel onglet)"
  },
  "panels/explain/components/ConsoleInsight.ts | relatedCode": {
    "message": "Code associé"
  },
  "panels/explain/components/ConsoleInsight.ts | stackTrace": {
    "message": "Trace de la pile"
  },
  "panels/explain/components/ConsoleInsight.ts | submitFeedback": {
    "message": "Envoyer des commentaires"
  },
  "panels/explain/explain-meta.ts | explainThisError": {
    "message": "Expliquer cette erreur"
  },
  "panels/explain/explain-meta.ts | explainThisMessage": {
    "message": "Expliquer ce message"
  },
  "panels/explain/explain-meta.ts | explainThisWarning": {
    "message": "Explication de cet avertissement"
  },
  "panels/issues/AffectedBlockedByResponseView.ts | blockedResource": {
    "message": "Ressource bloquée"
  },
  "panels/issues/AffectedBlockedByResponseView.ts | nRequests": {
    "message": "{n,plural, =1{# requête}one{# requête}other{# requêtes}}"
  },
  "panels/issues/AffectedBlockedByResponseView.ts | parentFrame": {
    "message": "Frame parent"
  },
  "panels/issues/AffectedBlockedByResponseView.ts | requestC": {
    "message": "Requête"
  },
  "panels/issues/AffectedCookiesView.ts | domain": {
    "message": "Domaine"
  },
  "panels/issues/AffectedCookiesView.ts | filterSetCookieTitle": {
    "message": "Afficher les requêtes réseau qui incluent l'en-tête Set-Cookie dans le panneau \"Network\""
  },
  "panels/issues/AffectedCookiesView.ts | nCookies": {
    "message": "{n,plural, =1{# cookie}one{# cookie}other{# cookies}}"
  },
  "panels/issues/AffectedCookiesView.ts | nRawCookieLines": {
    "message": "{n,plural, =1{1 en-tête Set-Cookie brut}one{# en-tête Set-Cookie brut}other{# en-têtes Set-Cookie bruts}}"
  },
  "panels/issues/AffectedCookiesView.ts | name": {
    "message": "Nom"
  },
  "panels/issues/AffectedCookiesView.ts | path": {
    "message": "Chemin d'accès"
  },
  "panels/issues/AffectedDirectivesView.ts | blocked": {
    "message": "bloqué"
  },
  "panels/issues/AffectedDirectivesView.ts | clickToRevealTheViolatingDomNode": {
    "message": "Cliquez pour afficher le nœud DOM non conforme dans le panneau \"Elements\""
  },
  "panels/issues/AffectedDirectivesView.ts | directiveC": {
    "message": "Instruction"
  },
  "panels/issues/AffectedDirectivesView.ts | element": {
    "message": "Élément"
  },
  "panels/issues/AffectedDirectivesView.ts | nDirectives": {
    "message": "{n,plural, =1{# directive}one{# directive}other{# directives}}"
  },
  "panels/issues/AffectedDirectivesView.ts | reportonly": {
    "message": "rapport uniquement"
  },
  "panels/issues/AffectedDirectivesView.ts | resourceC": {
    "message": "Ressource"
  },
  "panels/issues/AffectedDirectivesView.ts | sourceLocation": {
    "message": "Emplacement de la source"
  },
  "panels/issues/AffectedDirectivesView.ts | status": {
    "message": "État"
  },
  "panels/issues/AffectedDocumentsInQuirksModeView.ts | documentInTheDOMTree": {
    "message": "Document dans l'arborescence DOM"
  },
  "panels/issues/AffectedDocumentsInQuirksModeView.ts | mode": {
    "message": "Mode"
  },
  "panels/issues/AffectedDocumentsInQuirksModeView.ts | nDocuments": {
    "message": "{n,plural, =1{ document}one{ document}other{ documents}}"
  },
  "panels/issues/AffectedDocumentsInQuirksModeView.ts | url": {
    "message": "URL"
  },
  "panels/issues/AffectedElementsView.ts | nElements": {
    "message": "{n,plural, =1{# élément}one{# élément}other{# éléments}}"
  },
  "panels/issues/AffectedElementsWithLowContrastView.ts | contrastRatio": {
    "message": "Rapport de contraste"
  },
  "panels/issues/AffectedElementsWithLowContrastView.ts | element": {
    "message": "Élément"
  },
  "panels/issues/AffectedElementsWithLowContrastView.ts | minimumAA": {
    "message": "Rapport AA minimum"
  },
  "panels/issues/AffectedElementsWithLowContrastView.ts | minimumAAA": {
    "message": "Rapport AAA minimum"
  },
  "panels/issues/AffectedElementsWithLowContrastView.ts | textSize": {
    "message": "Taille du texte"
  },
  "panels/issues/AffectedElementsWithLowContrastView.ts | textWeight": {
    "message": "Épaisseur du texte"
  },
  "panels/issues/AffectedHeavyAdView.ts | cpuPeakLimit": {
    "message": "Limite maximale du processeur"
  },
  "panels/issues/AffectedHeavyAdView.ts | cpuTotalLimit": {
    "message": "Limite totale du processeur"
  },
  "panels/issues/AffectedHeavyAdView.ts | frameUrl": {
    "message": "URL du frame"
  },
  "panels/issues/AffectedHeavyAdView.ts | limitExceeded": {
    "message": "Limite dépassée"
  },
  "panels/issues/AffectedHeavyAdView.ts | nResources": {
    "message": "{n,plural, =1{# ressource}one{# ressource}other{# ressources}}"
  },
  "panels/issues/AffectedHeavyAdView.ts | networkLimit": {
    "message": "Limite sur le réseau"
  },
  "panels/issues/AffectedHeavyAdView.ts | removed": {
    "message": "Supprimé"
  },
  "panels/issues/AffectedHeavyAdView.ts | resolutionStatus": {
    "message": "État de la résolution"
  },
  "panels/issues/AffectedHeavyAdView.ts | warned": {
    "message": "Avertissement"
  },
  "panels/issues/AffectedMetadataAllowedSitesView.ts | nAllowedSites": {
    "message": "{n,plural, =1{1 site Web autorisé à accéder aux cookies}one{# site Web autorisé à accéder aux cookies}other{# sites Web autorisés à accéder aux cookies}}"
  },
  "panels/issues/AffectedResourcesView.ts | clickToRevealTheFramesDomNodeIn": {
    "message": "Cliquez pour afficher le nœud DOM du frame dans le panneau \"Elements\""
  },
  "panels/issues/AffectedResourcesView.ts | unavailable": {
    "message": "non disponible"
  },
  "panels/issues/AffectedResourcesView.ts | unknown": {
    "message": "inconnu"
  },
  "panels/issues/AffectedSharedArrayBufferIssueDetailsView.ts | aSharedarraybufferWas": {
    "message": "Un SharedArrayBuffer a été instancié dans un contexte qui n'est pas un contexte isolé multi-origine"
  },
  "panels/issues/AffectedSharedArrayBufferIssueDetailsView.ts | blocked": {
    "message": "bloqué"
  },
  "panels/issues/AffectedSharedArrayBufferIssueDetailsView.ts | instantiation": {
    "message": "Instanciation"
  },
  "panels/issues/AffectedSharedArrayBufferIssueDetailsView.ts | nViolations": {
    "message": "{n,plural, =1{# cas de non-respect}one{# cas de non-respect}other{# cas de non-respect}}"
  },
  "panels/issues/AffectedSharedArrayBufferIssueDetailsView.ts | sharedarraybufferWasTransferedTo": {
    "message": "SharedArrayBuffer a été transféré vers un contexte qui n'est pas un contexte isolé multi-origine"
  },
  "panels/issues/AffectedSharedArrayBufferIssueDetailsView.ts | sourceLocation": {
    "message": "Emplacement de la source"
  },
  "panels/issues/AffectedSharedArrayBufferIssueDetailsView.ts | status": {
    "message": "État"
  },
  "panels/issues/AffectedSharedArrayBufferIssueDetailsView.ts | transfer": {
    "message": "Transfert"
  },
  "panels/issues/AffectedSharedArrayBufferIssueDetailsView.ts | trigger": {
    "message": "Déclencheur"
  },
  "panels/issues/AffectedSharedArrayBufferIssueDetailsView.ts | warning": {
    "message": "avertissement"
  },
  "panels/issues/AffectedSourcesView.ts | nSources": {
    "message": "{n,plural, =1{# source}one{# source}other{# sources}}"
  },
  "panels/issues/AffectedTrackingSitesView.ts | nTrackingSites": {
    "message": "{n,plural, =1{1 site Web de suivi potentiel}one{# site Web de suivi potentiel}other{# sites Web de suivi potentiels}}"
  },
  "panels/issues/AttributionReportingIssueDetailsView.ts | element": {
    "message": "Élément"
  },
  "panels/issues/AttributionReportingIssueDetailsView.ts | invalidHeaderValue": {
    "message": "Valeur d'en-tête non valide"
  },
  "panels/issues/AttributionReportingIssueDetailsView.ts | nViolations": {
    "message": "{n,plural, =1{# cas de non-respect}one{# cas de non-respect}other{# cas de non-respect}}"
  },
  "panels/issues/AttributionReportingIssueDetailsView.ts | request": {
    "message": "Requête"
  },
  "panels/issues/AttributionReportingIssueDetailsView.ts | untrustworthyOrigin": {
    "message": "Origine non fiable"
  },
  "panels/issues/CorsIssueDetailsView.ts | allowCredentialsValueFromHeader": {
    "message": "Valeur de l'en-tête Access-Control-Allow-Credentials"
  },
  "panels/issues/CorsIssueDetailsView.ts | allowedOrigin": {
    "message": "Origine autorisée (à partir de l'en-tête)"
  },
  "panels/issues/CorsIssueDetailsView.ts | blocked": {
    "message": "bloqué"
  },
  "panels/issues/CorsIssueDetailsView.ts | disallowedRequestHeader": {
    "message": "En-tête de requête non autorisé"
  },
  "panels/issues/CorsIssueDetailsView.ts | disallowedRequestMethod": {
    "message": "Mode de requête non autorisé"
  },
  "panels/issues/CorsIssueDetailsView.ts | failedRequest": {
    "message": "Échec de la demande"
  },
  "panels/issues/CorsIssueDetailsView.ts | header": {
    "message": "En-tête"
  },
  "panels/issues/CorsIssueDetailsView.ts | initiatorAddressSpace": {
    "message": "Adresse de l'initiateur"
  },
  "panels/issues/CorsIssueDetailsView.ts | initiatorContext": {
    "message": "Contexte de l'initiateur"
  },
  "panels/issues/CorsIssueDetailsView.ts | insecure": {
    "message": "(non sécurisé)"
  },
  "panels/issues/CorsIssueDetailsView.ts | invalidValue": {
    "message": "Valeur non valide (si disponible)"
  },
  "panels/issues/CorsIssueDetailsView.ts | nRequests": {
    "message": "{n,plural, =1{# requête}one{# requête}other{# requêtes}}"
  },
  "panels/issues/CorsIssueDetailsView.ts | preflightDisallowedRedirect": {
    "message": "La réponse à la requête préliminaire était une redirection"
  },
  "panels/issues/CorsIssueDetailsView.ts | preflightInvalidStatus": {
    "message": "L'état HTTP de la requête préliminaire n'indique pas que l'opération a réussi"
  },
  "panels/issues/CorsIssueDetailsView.ts | preflightRequest": {
    "message": "Requête préliminaire"
  },
  "panels/issues/CorsIssueDetailsView.ts | preflightRequestIfProblematic": {
    "message": "Requête préliminaire (si problématique)"
  },
  "panels/issues/CorsIssueDetailsView.ts | problem": {
    "message": "Problème"
  },
  "panels/issues/CorsIssueDetailsView.ts | problemInvalidValue": {
    "message": "Valeur non valide"
  },
  "panels/issues/CorsIssueDetailsView.ts | problemMissingHeader": {
    "message": "En-tête manquant"
  },
  "panels/issues/CorsIssueDetailsView.ts | problemMultipleValues": {
    "message": "Plusieurs valeurs"
  },
  "panels/issues/CorsIssueDetailsView.ts | request": {
    "message": "Requête"
  },
  "panels/issues/CorsIssueDetailsView.ts | resourceAddressSpace": {
    "message": "Adresse de la ressource"
  },
  "panels/issues/CorsIssueDetailsView.ts | secure": {
    "message": "sécurisé"
  },
  "panels/issues/CorsIssueDetailsView.ts | sourceLocation": {
    "message": "Emplacement de la source"
  },
  "panels/issues/CorsIssueDetailsView.ts | status": {
    "message": "État"
  },
  "panels/issues/CorsIssueDetailsView.ts | unsupportedScheme": {
    "message": "Schéma incompatible"
  },
  "panels/issues/CorsIssueDetailsView.ts | warning": {
    "message": "avertissement"
  },
  "panels/issues/GenericIssueDetailsView.ts | frameId": {
    "message": "Frame"
  },
  "panels/issues/GenericIssueDetailsView.ts | nResources": {
    "message": "{n,plural, =1{# ressource}one{# ressource}other{# ressources}}"
  },
  "panels/issues/GenericIssueDetailsView.ts | violatingNode": {
    "message": "Nœud non conforme"
  },
  "panels/issues/HiddenIssuesRow.ts | hiddenIssues": {
    "message": "Problèmes masqués"
  },
  "panels/issues/HiddenIssuesRow.ts | unhideAll": {
    "message": "Afficher tout"
  },
  "panels/issues/IssueKindView.ts | hideAllCurrentBreakingChanges": {
    "message": "Masquer toutes les modifications destructives en cours"
  },
  "panels/issues/IssueKindView.ts | hideAllCurrentImprovements": {
    "message": "Masquer toutes les améliorations en cours"
  },
  "panels/issues/IssueKindView.ts | hideAllCurrentPageErrors": {
    "message": "Masquer toutes les erreurs dans les pages en cours"
  },
  "panels/issues/IssueView.ts | affectedResources": {
    "message": "Ressources affectées"
  },
  "panels/issues/IssueView.ts | automaticallyUpgraded": {
    "message": "mis à jour automatiquement"
  },
  "panels/issues/IssueView.ts | blocked": {
    "message": "bloqué"
  },
  "panels/issues/IssueView.ts | hideIssuesLikeThis": {
    "message": "Masquer les problèmes similaires"
  },
  "panels/issues/IssueView.ts | learnMoreS": {
    "message": "En savoir plus : {PH1}"
  },
  "panels/issues/IssueView.ts | nRequests": {
    "message": "{n,plural, =1{# requête}one{# requête}other{# requêtes}}"
  },
  "panels/issues/IssueView.ts | nResources": {
    "message": "{n,plural, =1{# ressource}one{# ressource}other{# ressources}}"
  },
  "panels/issues/IssueView.ts | name": {
    "message": "Nom"
  },
  "panels/issues/IssueView.ts | restrictionStatus": {
    "message": "État de restriction"
  },
  "panels/issues/IssueView.ts | unhideIssuesLikeThis": {
    "message": "Afficher les problèmes similaires"
  },
  "panels/issues/IssueView.ts | warned": {
    "message": "Avertissement"
  },
  "panels/issues/IssuesPane.ts | attributionReporting": {
    "message": "API Attribution Reporting"
  },
  "panels/issues/IssuesPane.ts | contentSecurityPolicy": {
    "message": "Content Security Policy"
  },
  "panels/issues/IssuesPane.ts | cors": {
    "message": "Cross-Origin Resource Sharing"
  },
  "panels/issues/IssuesPane.ts | crossOriginEmbedderPolicy": {
    "message": "Règlement de l'intégrateur multi-origine"
  },
  "panels/issues/IssuesPane.ts | generic": {
    "message": "Génériques"
  },
  "panels/issues/IssuesPane.ts | groupByCategory": {
    "message": "Regrouper par catégorie"
  },
  "panels/issues/IssuesPane.ts | groupByKind": {
    "message": "Grouper par type"
  },
  "panels/issues/IssuesPane.ts | groupDisplayedIssuesUnder": {
    "message": "Le groupe a affiché des problèmes dans les catégories associées"
  },
  "panels/issues/IssuesPane.ts | groupDisplayedIssuesUnderKind": {
    "message": "Problèmes affichés par groupes comme \"Erreurs dans les pages\", \"Modifications destructives\" et \"Améliorations\""
  },
  "panels/issues/IssuesPane.ts | heavyAds": {
    "message": "Annonces gourmandes en ressources"
  },
  "panels/issues/IssuesPane.ts | includeCookieIssuesCausedBy": {
    "message": "Inclure les problèmes de cookie causés par des sites tiers"
  },
  "panels/issues/IssuesPane.ts | includeThirdpartyCookieIssues": {
    "message": "Inclure les problèmes des cookies tiers"
  },
  "panels/issues/IssuesPane.ts | lowTextContrast": {
    "message": "Faible contraste du texte"
  },
  "panels/issues/IssuesPane.ts | mixedContent": {
    "message": "Contenu mixte"
  },
  "panels/issues/IssuesPane.ts | noIssuesDetectedSoFar": {
    "message": "Aucun problème détecté jusqu'ici"
  },
  "panels/issues/IssuesPane.ts | onlyThirdpartyCookieIssues": {
    "message": "Seuls des problèmes de cookies tiers ont été détectés jusqu'à présent"
  },
  "panels/issues/IssuesPane.ts | other": {
    "message": "Autre"
  },
  "panels/issues/IssuesPane.ts | quirksMode": {
    "message": "Mode quirks"
  },
  "panels/issues/IssuesPane.ts | samesiteCookie": {
    "message": "Cookie SameSite"
  },
  "panels/issues/components/HideIssuesMenu.ts | tooltipTitle": {
    "message": "Masquer les problèmes"
  },
  "panels/issues/issues-meta.ts | issues": {
    "message": "Problèmes"
  },
  "panels/issues/issues-meta.ts | showIssues": {
    "message": "Afficher les problèmes"
  },
  "panels/js_profiler/js_profiler-meta.ts | performance": {
    "message": "Performances"
  },
  "panels/js_profiler/js_profiler-meta.ts | profiler": {
    "message": "Profileur"
  },
  "panels/js_profiler/js_profiler-meta.ts | record": {
    "message": "Enregistrer"
  },
  "panels/js_profiler/js_profiler-meta.ts | showPerformance": {
    "message": "Afficher les performances"
  },
  "panels/js_profiler/js_profiler-meta.ts | showProfiler": {
    "message": "Afficher le profileur"
  },
  "panels/js_profiler/js_profiler-meta.ts | showRecentTimelineSessions": {
    "message": "Afficher les sessions récentes de la chronologie"
  },
  "panels/js_profiler/js_profiler-meta.ts | startProfilingAndReloadPage": {
    "message": "Démarrer le profilage et actualiser la page"
  },
  "panels/js_profiler/js_profiler-meta.ts | startStopRecording": {
    "message": "Démarrer/Arrêter l'enregistrement"
  },
  "panels/js_profiler/js_profiler-meta.ts | stop": {
    "message": "Arrêter"
  },
  "panels/layer_viewer/LayerDetailsView.ts | compositingReasons": {
    "message": "Raisons de la composition"
  },
  "panels/layer_viewer/LayerDetailsView.ts | containingBlocRectangleDimensions": {
    "message": "Contenant le bloc {PH1} × {PH2} (à {PH3}, {PH4})"
  },
  "panels/layer_viewer/LayerDetailsView.ts | mainThreadScrollingReason": {
    "message": "Motif du défilement dans le thread principal"
  },
  "panels/layer_viewer/LayerDetailsView.ts | memoryEstimate": {
    "message": "Estimation de la mémoire"
  },
  "panels/layer_viewer/LayerDetailsView.ts | nearestLayerShiftingContaining": {
    "message": "Bloc le plus proche avec un décalage de calques"
  },
  "panels/layer_viewer/LayerDetailsView.ts | nearestLayerShiftingStickyBox": {
    "message": "Champ permanent de décalage du calque le plus proche"
  },
  "panels/layer_viewer/LayerDetailsView.ts | nonFastScrollable": {
    "message": "Défilement lent"
  },
  "panels/layer_viewer/LayerDetailsView.ts | paintCount": {
    "message": "Nombre de rendus"
  },
  "panels/layer_viewer/LayerDetailsView.ts | paintProfiler": {
    "message": "Profileur de peinture"
  },
  "panels/layer_viewer/LayerDetailsView.ts | repaintsOnScroll": {
    "message": "Repeindre lors du défilement"
  },
  "panels/layer_viewer/LayerDetailsView.ts | scrollRectangleDimensions": {
    "message": "{PH1} {PH2} × {PH3} (à {PH4}, {PH5})"
  },
  "panels/layer_viewer/LayerDetailsView.ts | selectALayerToSeeItsDetails": {
    "message": "Sélectionnez un calque pour voir ses détails"
  },
  "panels/layer_viewer/LayerDetailsView.ts | size": {
    "message": "Taille"
  },
  "panels/layer_viewer/LayerDetailsView.ts | slowScrollRegions": {
    "message": "Régions à défilement lent"
  },
  "panels/layer_viewer/LayerDetailsView.ts | stickyAncenstorLayersS": {
    "message": "{PH1} : {PH2} ({PH3})"
  },
  "panels/layer_viewer/LayerDetailsView.ts | stickyBoxRectangleDimensions": {
    "message": "Champ persistant {PH1} × {PH2} (à {PH3}, {PH4})"
  },
  "panels/layer_viewer/LayerDetailsView.ts | stickyPositionConstraint": {
    "message": "Contrainte de position persistante"
  },
  "panels/layer_viewer/LayerDetailsView.ts | touchEventHandler": {
    "message": "Gestionnaire d'événements tactiles"
  },
  "panels/layer_viewer/LayerDetailsView.ts | unnamed": {
    "message": "<sans nom>"
  },
  "panels/layer_viewer/LayerDetailsView.ts | updateRectangleDimensions": {
    "message": "{PH1} × {PH2} (à {PH3},{PH4})"
  },
  "panels/layer_viewer/LayerDetailsView.ts | wheelEventHandler": {
    "message": "Gestionnaire d'événements (molette)"
  },
  "panels/layer_viewer/LayerTreeOutline.ts | layersTreePane": {
    "message": "Panneau d'arborescence des calques"
  },
  "panels/layer_viewer/LayerTreeOutline.ts | showPaintProfiler": {
    "message": "Afficher le profileur de rendus"
  },
  "panels/layer_viewer/LayerTreeOutline.ts | updateChildDimension": {
    "message": " ({PH1} × {PH2})"
  },
  "panels/layer_viewer/LayerViewHost.ts | showInternalLayers": {
    "message": "Afficher les calques internes"
  },
  "panels/layer_viewer/Layers3DView.ts | cantDisplayLayers": {
    "message": "Impossible d'afficher les calques"
  },
  "panels/layer_viewer/Layers3DView.ts | checkSForPossibleReasons": {
    "message": "Vérifiez {PH1} pour connaître les raisons possibles."
  },
  "panels/layer_viewer/Layers3DView.ts | dLayersView": {
    "message": "Vue de calques 3D"
  },
  "panels/layer_viewer/Layers3DView.ts | layerInformationIsNotYet": {
    "message": "Informations sur le calque pas encore disponibles."
  },
  "panels/layer_viewer/Layers3DView.ts | paints": {
    "message": "Peint"
  },
  "panels/layer_viewer/Layers3DView.ts | resetView": {
    "message": "Réinitialiser l'affichage"
  },
  "panels/layer_viewer/Layers3DView.ts | showPaintProfiler": {
    "message": "Afficher le profileur de rendus"
  },
  "panels/layer_viewer/Layers3DView.ts | slowScrollRects": {
    "message": "Rectangles de défilement lent"
  },
  "panels/layer_viewer/Layers3DView.ts | webglSupportIsDisabledInYour": {
    "message": "La prise en charge WebGL est désactivée dans votre navigateur."
  },
  "panels/layer_viewer/PaintProfilerView.ts | bitmap": {
    "message": "Bitmap"
  },
  "panels/layer_viewer/PaintProfilerView.ts | commandLog": {
    "message": "Journal des commandes"
  },
  "panels/layer_viewer/PaintProfilerView.ts | misc": {
    "message": "Divers"
  },
  "panels/layer_viewer/PaintProfilerView.ts | profiling": {
    "message": "Profilage…"
  },
  "panels/layer_viewer/PaintProfilerView.ts | profilingResults": {
    "message": "Résultats du profilage"
  },
  "panels/layer_viewer/PaintProfilerView.ts | shapes": {
    "message": "Formes"
  },
  "panels/layer_viewer/PaintProfilerView.ts | text": {
    "message": "Texte"
  },
  "panels/layer_viewer/TransformController.ts | panModeX": {
    "message": "Mode panoramique (X)"
  },
  "panels/layer_viewer/TransformController.ts | resetTransform": {
    "message": "Réinitialiser la transformation (0)"
  },
  "panels/layer_viewer/TransformController.ts | rotateModeV": {
    "message": "Mode rotation (V)"
  },
  "panels/layer_viewer/layer_viewer-meta.ts | panOrRotateDown": {
    "message": "Panoramique ou rotation vers le bas"
  },
  "panels/layer_viewer/layer_viewer-meta.ts | panOrRotateLeft": {
    "message": "Panoramique ou rotation vers la gauche"
  },
  "panels/layer_viewer/layer_viewer-meta.ts | panOrRotateRight": {
    "message": "Panoramique ou rotation vers la droite"
  },
  "panels/layer_viewer/layer_viewer-meta.ts | panOrRotateUp": {
    "message": "Effectuer un panoramique ou une rotation vers le haut"
  },
  "panels/layer_viewer/layer_viewer-meta.ts | resetView": {
    "message": "Rétablir la vue"
  },
  "panels/layer_viewer/layer_viewer-meta.ts | switchToPanMode": {
    "message": "Passer en mode panoramique"
  },
  "panels/layer_viewer/layer_viewer-meta.ts | switchToRotateMode": {
    "message": "Passer en mode rotation"
  },
  "panels/layer_viewer/layer_viewer-meta.ts | zoomIn": {
    "message": "Zoom avant"
  },
  "panels/layer_viewer/layer_viewer-meta.ts | zoomOut": {
    "message": "Zoom arrière"
  },
  "panels/layers/LayersPanel.ts | details": {
    "message": "Détails"
  },
  "panels/layers/LayersPanel.ts | profiler": {
    "message": "Profileur"
  },
  "panels/layers/layers-meta.ts | layers": {
    "message": "Calques"
  },
  "panels/layers/layers-meta.ts | showLayers": {
    "message": "Afficher les calques"
  },
  "panels/lighthouse/LighthouseController.ts | accessibility": {
    "message": "Accessibilité"
  },
  "panels/lighthouse/LighthouseController.ts | applyMobileEmulation": {
    "message": "Appliquer l'émulation mobile"
  },
  "panels/lighthouse/LighthouseController.ts | applyMobileEmulationDuring": {
    "message": "Appliquer l'émulation mobile pendant l'audit"
  },
  "panels/lighthouse/LighthouseController.ts | atLeastOneCategoryMustBeSelected": {
    "message": "Vous devez sélectionner au moins une catégorie."
  },
  "panels/lighthouse/LighthouseController.ts | bestPractices": {
    "message": "Bonnes pratiques"
  },
  "panels/lighthouse/LighthouseController.ts | canOnlyAuditHttphttpsPages": {
    "message": "Ne peut auditer les pages que sur HTTP ou HTTPS. Accédez à une autre page."
  },
  "panels/lighthouse/LighthouseController.ts | clearStorage": {
    "message": "Vider l'espace de stockage"
  },
  "panels/lighthouse/LighthouseController.ts | desktop": {
    "message": "Ordinateur"
  },
  "panels/lighthouse/LighthouseController.ts | devtoolsThrottling": {
    "message": "Limitation des outils de développement (avancée)"
  },
  "panels/lighthouse/LighthouseController.ts | doesThisPageFollowBestPractices": {
    "message": "Cette page respecte-t-elle les bonnes pratiques de développement Web récent ?"
  },
  "panels/lighthouse/LighthouseController.ts | doesThisPageMeetTheStandardOfA": {
    "message": "Cette page respecte-t-elle la norme d'une progressive web app"
  },
  "panels/lighthouse/LighthouseController.ts | howLongDoesThisAppTakeToShow": {
    "message": "Temps que met cette application pour afficher le contenu et être utilisable"
  },
  "panels/lighthouse/LighthouseController.ts | indexeddb": {
    "message": "Base de données indexée"
  },
  "panels/lighthouse/LighthouseController.ts | isThisPageOptimizedForAdSpeedAnd": {
    "message": "Cette page est-elle optimisée pour la qualité et la vitesse des annonces"
  },
  "panels/lighthouse/LighthouseController.ts | isThisPageOptimizedForSearch": {
    "message": "Cette page est-elle optimisée pour le classement des résultats dans les moteurs de recherche"
  },
  "panels/lighthouse/LighthouseController.ts | isThisPageUsableByPeopleWith": {
    "message": "Cette page est-elle utilisable par des personnes présentant des troubles ou un handicap"
  },
  "panels/lighthouse/LighthouseController.ts | javaScriptDisabled": {
    "message": "JavaScript est désactivé. Vous devez activer JavaScript pour auditer cette page. Ouvrez le menu \"Command\" (Commande) et exécutez la commande \"Enable JavaScript\" (Activer JavaScript) pour activer JavaScript."
  },
  "panels/lighthouse/LighthouseController.ts | lighthouseMode": {
    "message": "Mode Lighthouse"
  },
  "panels/lighthouse/LighthouseController.ts | localStorage": {
    "message": "Stockage local"
  },
  "panels/lighthouse/LighthouseController.ts | mobile": {
    "message": "Mobile"
  },
  "panels/lighthouse/LighthouseController.ts | multipleTabsAreBeingControlledBy": {
    "message": "Plusieurs onglets sont contrôlés par le même service worker. Fermez les autres onglets sur la même origine pour vérifier cette page."
  },
  "panels/lighthouse/LighthouseController.ts | navigation": {
    "message": "Navigation (par défaut)"
  },
  "panels/lighthouse/LighthouseController.ts | navigationTooltip": {
    "message": "Le mode navigation analyse le chargement d'une page, à l'instar des rapports Lighthouse d'origine."
  },
  "panels/lighthouse/LighthouseController.ts | performance": {
    "message": "Performances"
  },
  "panels/lighthouse/LighthouseController.ts | progressiveWebApp": {
    "message": "Progressive web app"
  },
  "panels/lighthouse/LighthouseController.ts | publisherAds": {
    "message": "Annonces de l'éditeur"
  },
  "panels/lighthouse/LighthouseController.ts | resetStorageLocalstorage": {
    "message": "Réinitialisez l'espace de stockage (cache, service workers, etc.) avant l'audit. (Utile pour les tests de performances et de PWA)"
  },
  "panels/lighthouse/LighthouseController.ts | runLighthouseInMode": {
    "message": "Exécuter Lighthouse en mode navigation, période ou instantané"
  },
  "panels/lighthouse/LighthouseController.ts | seo": {
    "message": "SEO"
  },
  "panels/lighthouse/LighthouseController.ts | simulateASlowerPageLoadBasedOn": {
    "message": "La limitation simulée simule un chargement de page plus lent à partir des données provenant d'un chargement initial non limité. La limitation des outils de développement ralentit la page."
  },
  "panels/lighthouse/LighthouseController.ts | simulatedThrottling": {
    "message": "Limitation simulée (par défaut)"
  },
  "panels/lighthouse/LighthouseController.ts | snapshot": {
    "message": "Instantané"
  },
  "panels/lighthouse/LighthouseController.ts | snapshotTooltip": {
    "message": "Le mode Instantané analyse la page à un moment donné, généralement après des interactions d'utilisateurs."
  },
  "panels/lighthouse/LighthouseController.ts | thereMayBeStoredDataAffectingLoadingPlural": {
    "message": "Les emplacements suivants peuvent contenir des données qui affectent les performances de chargement : {PH1}. Effectuez un audit de cette page dans une fenêtre de navigation privée afin que ces ressources n'affectent pas vos scores."
  },
  "panels/lighthouse/LighthouseController.ts | thereMayBeStoredDataAffectingSingular": {
    "message": "L'emplacement suivant peut contenir des données qui affectent les performances de chargement : {PH1}. Effectuez un audit de cette page dans une fenêtre de navigation privée afin que ces ressources n'affectent pas vos scores."
  },
  "panels/lighthouse/LighthouseController.ts | throttlingMethod": {
    "message": "Méthode de limitation"
  },
  "panels/lighthouse/LighthouseController.ts | timespan": {
    "message": "Période"
  },
  "panels/lighthouse/LighthouseController.ts | timespanTooltip": {
    "message": "Le mode période analyse une période arbitraire, contenant généralement des interactions d'utilisateurs."
  },
  "panels/lighthouse/LighthouseController.ts | webSql": {
    "message": "Web SQL"
  },
  "panels/lighthouse/LighthousePanel.ts | cancelling": {
    "message": "Annulation…"
  },
  "panels/lighthouse/LighthousePanel.ts | clearAll": {
    "message": "Tout effacer"
  },
  "panels/lighthouse/LighthousePanel.ts | dropLighthouseJsonHere": {
    "message": "Déposer le fichier JSON Lighthouse ici"
  },
  "panels/lighthouse/LighthousePanel.ts | lighthouseSettings": {
    "message": "Paramètres Lighthouse"
  },
  "panels/lighthouse/LighthousePanel.ts | performAnAudit": {
    "message": "Effectuer un audit…"
  },
  "panels/lighthouse/LighthousePanel.ts | printing": {
    "message": "Impression"
  },
  "panels/lighthouse/LighthousePanel.ts | thePrintPopupWindowIsOpenPlease": {
    "message": "Le pop-up d'impression est ouvert. Veuillez le fermer pour continuer."
  },
  "panels/lighthouse/LighthouseReportSelector.ts | newReport": {
    "message": "(nouveau rapport)"
  },
  "panels/lighthouse/LighthouseReportSelector.ts | reports": {
    "message": "Rapports"
  },
  "panels/lighthouse/LighthouseStartView.ts | analyzeNavigation": {
    "message": "Analyser le chargement de page"
  },
  "panels/lighthouse/LighthouseStartView.ts | analyzeSnapshot": {
    "message": "Analyser l'état de la page"
  },
  "panels/lighthouse/LighthouseStartView.ts | categories": {
    "message": "Catégories"
  },
  "panels/lighthouse/LighthouseStartView.ts | device": {
    "message": "Appareil"
  },
  "panels/lighthouse/LighthouseStartView.ts | generateLighthouseReport": {
    "message": "Créer un rapport Lighthouse"
  },
  "panels/lighthouse/LighthouseStartView.ts | learnMore": {
    "message": "En savoir plus"
  },
  "panels/lighthouse/LighthouseStartView.ts | mode": {
    "message": "Mode"
  },
  "panels/lighthouse/LighthouseStartView.ts | plugins": {
    "message": "Plug-ins"
  },
  "panels/lighthouse/LighthouseStartView.ts | startTimespan": {
    "message": "Démarrer la période"
  },
  "panels/lighthouse/LighthouseStatusView.ts | OfGlobalMobileUsersInWereOnGOrG": {
    "message": "En 2016, 75 % des utilisateurs de mobiles dans le monde utilisaient un réseau 2G ou 3G [Source : GSMA Mobile]"
  },
  "panels/lighthouse/LighthouseStatusView.ts | OfMobilePagesTakeNearlySeconds": {
    "message": "Pour 70 % des pages mobiles, le contenu visuel au-dessus de la ligne de flottaison s'affiche à l'écran au bout d'environ sept secondes. [Source : Think with Google]"
  },
  "panels/lighthouse/LighthouseStatusView.ts | SecondsIsTheAverageTimeAMobile": {
    "message": "Il faut en moyenne 19 secondes pour qu'une page Web mobile se charge sur une connexion 3G [Source : Google DoubleClick blog]"
  },
  "panels/lighthouse/LighthouseStatusView.ts | ahSorryWeRanIntoAnError": {
    "message": "Désolé… Une erreur s'est produite."
  },
  "panels/lighthouse/LighthouseStatusView.ts | almostThereLighthouseIsNow": {
    "message": "C'est presque terminé. Lighthouse génère maintenant votre rapport."
  },
  "panels/lighthouse/LighthouseStatusView.ts | asPageLoadTimeIncreasesFromOne": {
    "message": "Si le temps de chargement de page passe de une à sept secondes, la probabilité que l'utilisateur mobile quitte ce site augmente de 113 %. [Source : Think with Google]"
  },
  "panels/lighthouse/LighthouseStatusView.ts | asTheNumberOfElementsOnAPage": {
    "message": "Le nombre d'éléments sur une page passant de 400 à 6 000, la probabilité de conversion chute de 95 %. [Source : Think with Google]"
  },
  "panels/lighthouse/LighthouseStatusView.ts | auditingS": {
    "message": "Audit {PH1}"
  },
  "panels/lighthouse/LighthouseStatusView.ts | auditingYourWebPage": {
    "message": "Auditer votre page Web"
  },
  "panels/lighthouse/LighthouseStatusView.ts | byReducingTheResponseSizeOfJson": {
    "message": "En réduisant la taille de la réponse de l'objet JSON nécessaire à l'affichage des commentaires, Instagram a vu le nombre d'impressions augmenter [Source : WPO Stats]"
  },
  "panels/lighthouse/LighthouseStatusView.ts | cancel": {
    "message": "Annuler"
  },
  "panels/lighthouse/LighthouseStatusView.ts | cancelling": {
    "message": "Annulation…"
  },
  "panels/lighthouse/LighthouseStatusView.ts | fastFactMessageWithPlaceholder": {
    "message": "💡 {PH1}"
  },
  "panels/lighthouse/LighthouseStatusView.ts | ifASiteTakesSecondToBecome": {
    "message": "Si un site Web met plus d'une seconde à devenir interactif, les utilisateurs ne sont plus attentifs, et leur perception de la tâche qui y est exécutée est altérée [Source : Google Developers Blog]"
  },
  "panels/lighthouse/LighthouseStatusView.ts | ifThisIssueIsReproduciblePlease": {
    "message": "Si ce problème est reproductible, veuillez le signaler au dépôt Lighthouse GitHub."
  },
  "panels/lighthouse/LighthouseStatusView.ts | lighthouseIsGatheringInformation": {
    "message": "Lighthouse réunit des informations sur la page pour calculer votre score."
  },
  "panels/lighthouse/LighthouseStatusView.ts | lighthouseIsLoadingThePage": {
    "message": "Lighthouse charge la page…"
  },
  "panels/lighthouse/LighthouseStatusView.ts | lighthouseIsLoadingYourPage": {
    "message": "Lighthouse charge votre page"
  },
  "panels/lighthouse/LighthouseStatusView.ts | lighthouseIsLoadingYourPageWith": {
    "message": "Lighthouse charge la page de manière limitée pour mesurer les performances d'un appareil mobile en 3G."
  },
  "panels/lighthouse/LighthouseStatusView.ts | lighthouseIsLoadingYourPageWithMobile": {
    "message": "Lighthouse charge la page avec l'émulation de mobile."
  },
  "panels/lighthouse/LighthouseStatusView.ts | lighthouseIsLoadingYourPageWithThrottling": {
    "message": "Lighthouse charge votre page de manière limitée pour mesurer les performances sur un ordinateur de bureau avec une connexion 3G lente."
  },
  "panels/lighthouse/LighthouseStatusView.ts | lighthouseIsWarmingUp": {
    "message": "Préparation de Lighthouse…"
  },
  "panels/lighthouse/LighthouseStatusView.ts | lighthouseOnlySimulatesMobile": {
    "message": "Lighthouse simule uniquement les performances mobiles. Pour mesurer les performances sur un appareil réel, essayez WebPageTest.org [Source : équipe Lighthouse]"
  },
  "panels/lighthouse/LighthouseStatusView.ts | loading": {
    "message": "Chargement…"
  },
  "panels/lighthouse/LighthouseStatusView.ts | mbTakesAMinimumOfSecondsTo": {
    "message": "Sur une connexion 3G classique, le téléchargement d'1 Mo prend au moins 5 secondes [Source : définition de la 3G WebPageTest et DevTools]."
  },
  "panels/lighthouse/LighthouseStatusView.ts | rebuildingPinterestPagesFor": {
    "message": "La recréation des pages Pinterest pour améliorer les performances a conduit à une hausse de 15 % des taux de conversion [Source : WPO Stats]"
  },
  "panels/lighthouse/LighthouseStatusView.ts | theAverageUserDeviceCostsLess": {
    "message": "Le coût moyen de l'appareil utilisateur est de moins de 200 USD. [Source : International Data Corporation]"
  },
  "panels/lighthouse/LighthouseStatusView.ts | tryToNavigateToTheUrlInAFresh": {
    "message": "Accédez à l'URL dans un nouveau profil Chrome sans qu'aucun autre onglet ni aucune autre extension ne s'ouvre, puis réessayez."
  },
  "panels/lighthouse/LighthouseStatusView.ts | walmartSawAIncreaseInRevenueFor": {
    "message": "Walmart a vu ses revenus augmenter de 1 % chaque fois que le temps de chargement de page s'est amélioré de 100 ms [Source : WPO Stats]"
  },
  "panels/lighthouse/LighthouseTimespanView.ts | cancel": {
    "message": "Annuler"
  },
  "panels/lighthouse/LighthouseTimespanView.ts | endTimespan": {
    "message": "Arrêter la période"
  },
  "panels/lighthouse/LighthouseTimespanView.ts | timespanStarted": {
    "message": "Début de la période, interaction avec la page"
  },
  "panels/lighthouse/LighthouseTimespanView.ts | timespanStarting": {
    "message": "Démarrage de la période…"
  },
  "panels/lighthouse/lighthouse-meta.ts | showLighthouse": {
    "message": "Afficher Lighthouse"
  },
  "panels/linear_memory_inspector/LinearMemoryInspectorController.ts | couldNotOpenLinearMemory": {
    "message": "Impossible d'ouvrir l'inspecteur de mémoire linéaire : échec de la localisation du tampon."
  },
  "panels/linear_memory_inspector/LinearMemoryInspectorController.ts | revealInMemoryInspectorPanel": {
    "message": "Afficher dans le panneau \"Outil d'inspection de mémoire\""
  },
  "panels/linear_memory_inspector/LinearMemoryInspectorPane.ts | noOpenInspections": {
    "message": "Aucun examen en cours"
  },
  "panels/linear_memory_inspector/components/LinearMemoryHighlightChipList.ts | deleteHighlight": {
    "message": "Ne plus mettre en surbrillance cette mémoire"
  },
  "panels/linear_memory_inspector/components/LinearMemoryHighlightChipList.ts | jumpToAddress": {
    "message": "Accéder à cette mémoire"
  },
  "panels/linear_memory_inspector/components/LinearMemoryInspector.ts | addressHasToBeANumberBetweenSAnd": {
    "message": "L'adresse doit être un nombre compris entre {PH1} et {PH2}"
  },
  "panels/linear_memory_inspector/components/LinearMemoryNavigator.ts | enterAddress": {
    "message": "Saisir une adresse"
  },
  "panels/linear_memory_inspector/components/LinearMemoryNavigator.ts | goBackInAddressHistory": {
    "message": "Revenir en arrière dans l'historique des adresses"
  },
  "panels/linear_memory_inspector/components/LinearMemoryNavigator.ts | goForwardInAddressHistory": {
    "message": "Avancer dans l'historique des adresses"
  },
  "panels/linear_memory_inspector/components/LinearMemoryNavigator.ts | nextPage": {
    "message": "Page suivante"
  },
  "panels/linear_memory_inspector/components/LinearMemoryNavigator.ts | previousPage": {
    "message": "Page précédente"
  },
  "panels/linear_memory_inspector/components/LinearMemoryNavigator.ts | refresh": {
    "message": "Actualiser"
  },
  "panels/linear_memory_inspector/components/LinearMemoryValueInterpreter.ts | changeEndianness": {
    "message": "Modifier Endianness"
  },
  "panels/linear_memory_inspector/components/LinearMemoryValueInterpreter.ts | toggleValueTypeSettings": {
    "message": "Activer/Désactiver les paramètres du type de valeur"
  },
  "panels/linear_memory_inspector/components/ValueInterpreterDisplay.ts | addressOutOfRange": {
    "message": "Adresse hors de la plage mémoire"
  },
  "panels/linear_memory_inspector/components/ValueInterpreterDisplay.ts | changeValueTypeMode": {
    "message": "Changer de mode"
  },
  "panels/linear_memory_inspector/components/ValueInterpreterDisplay.ts | jumpToPointer": {
    "message": "Aller à l'adresse"
  },
  "panels/linear_memory_inspector/components/ValueInterpreterDisplay.ts | signedValue": {
    "message": "Valeur Signed"
  },
  "panels/linear_memory_inspector/components/ValueInterpreterDisplay.ts | unsignedValue": {
    "message": "Valeur Unsigned"
  },
  "panels/linear_memory_inspector/components/ValueInterpreterDisplayUtils.ts | notApplicable": {
    "message": "N/A"
  },
  "panels/linear_memory_inspector/components/ValueInterpreterSettings.ts | otherGroup": {
    "message": "Autre"
  },
  "panels/linear_memory_inspector/linear_memory_inspector-meta.ts | memoryInspector": {
    "message": "Outil d'inspection de mémoire"
  },
  "panels/linear_memory_inspector/linear_memory_inspector-meta.ts | showMemoryInspector": {
    "message": "Afficher l'outil d'inspection de mémoire"
  },
  "panels/media/EventDisplayTable.ts | eventDisplay": {
    "message": "Affichage d'événements"
  },
  "panels/media/EventDisplayTable.ts | eventName": {
    "message": "Nom de l'événement"
  },
  "panels/media/EventDisplayTable.ts | timestamp": {
    "message": "Horodatage"
  },
  "panels/media/EventDisplayTable.ts | value": {
    "message": "Valeur"
  },
  "panels/media/EventTimelineView.ts | bufferingStatus": {
    "message": "État de la mise en mémoire tampon"
  },
  "panels/media/EventTimelineView.ts | playbackStatus": {
    "message": "État de la lecture"
  },
  "panels/media/PlayerDetailView.ts | events": {
    "message": "Événements"
  },
  "panels/media/PlayerDetailView.ts | messages": {
    "message": "Messages"
  },
  "panels/media/PlayerDetailView.ts | playerEvents": {
    "message": "Événements du joueur"
  },
  "panels/media/PlayerDetailView.ts | playerMessages": {
    "message": "Messages du lecteur"
  },
  "panels/media/PlayerDetailView.ts | playerProperties": {
    "message": "Propriétés du lecteur"
  },
  "panels/media/PlayerDetailView.ts | playerTimeline": {
    "message": "Chronologie du joueur"
  },
  "panels/media/PlayerDetailView.ts | properties": {
    "message": "Propriétés"
  },
  "panels/media/PlayerDetailView.ts | timeline": {
    "message": "Chronologie"
  },
  "panels/media/PlayerListView.ts | hideAllOthers": {
    "message": "Masquer tous les autres"
  },
  "panels/media/PlayerListView.ts | hidePlayer": {
    "message": "Masquer le lecteur"
  },
  "panels/media/PlayerListView.ts | players": {
    "message": "Joueurs"
  },
  "panels/media/PlayerListView.ts | savePlayerInfo": {
    "message": "Enregistrer les infos du joueur"
  },
  "panels/media/PlayerMessagesView.ts | all": {
    "message": "Tout"
  },
  "panels/media/PlayerMessagesView.ts | custom": {
    "message": "Personnalisé"
  },
  "panels/media/PlayerMessagesView.ts | debug": {
    "message": "Déboguer"
  },
  "panels/media/PlayerMessagesView.ts | default": {
    "message": "Par défaut"
  },
  "panels/media/PlayerMessagesView.ts | error": {
    "message": "Erreur"
  },
  "panels/media/PlayerMessagesView.ts | errorCauseLabel": {
    "message": "Cause :"
  },
  "panels/media/PlayerMessagesView.ts | errorCodeLabel": {
    "message": "Code d'erreur :"
  },
  "panels/media/PlayerMessagesView.ts | errorDataLabel": {
    "message": "Données :"
  },
  "panels/media/PlayerMessagesView.ts | errorGroupLabel": {
    "message": "Groupe d'erreurs :"
  },
  "panels/media/PlayerMessagesView.ts | errorStackLabel": {
    "message": "Trace de la pile :"
  },
  "panels/media/PlayerMessagesView.ts | filterLogMessages": {
    "message": "Filtrer les messages du journal"
  },
  "panels/media/PlayerMessagesView.ts | info": {
    "message": "Infos"
  },
  "panels/media/PlayerMessagesView.ts | logLevel": {
    "message": "Niveau de consignation :"
  },
  "panels/media/PlayerMessagesView.ts | warning": {
    "message": "Avertissement"
  },
  "panels/media/PlayerPropertiesView.ts | audio": {
    "message": "Audio"
  },
  "panels/media/PlayerPropertiesView.ts | bitrate": {
    "message": "Débit"
  },
  "panels/media/PlayerPropertiesView.ts | decoder": {
    "message": "Décodeur"
  },
  "panels/media/PlayerPropertiesView.ts | decoderName": {
    "message": "Nom du décodeur"
  },
  "panels/media/PlayerPropertiesView.ts | decryptingDemuxer": {
    "message": "Déchiffrage du démultiplexeur"
  },
  "panels/media/PlayerPropertiesView.ts | duration": {
    "message": "Durée"
  },
  "panels/media/PlayerPropertiesView.ts | encoderName": {
    "message": "Nom de l'encodeur"
  },
  "panels/media/PlayerPropertiesView.ts | fileSize": {
    "message": "Taille du fichier"
  },
  "panels/media/PlayerPropertiesView.ts | frameRate": {
    "message": "Fréquence d'images"
  },
  "panels/media/PlayerPropertiesView.ts | hardwareDecoder": {
    "message": "Décodeur matériel"
  },
  "panels/media/PlayerPropertiesView.ts | hardwareEncoder": {
    "message": "Encodeur matériel"
  },
  "panels/media/PlayerPropertiesView.ts | noDecoder": {
    "message": "Aucun décodeur"
  },
  "panels/media/PlayerPropertiesView.ts | noEncoder": {
    "message": "Aucun encodeur"
  },
  "panels/media/PlayerPropertiesView.ts | noTextTracks": {
    "message": "Aucune piste de texte"
  },
  "panels/media/PlayerPropertiesView.ts | playbackFrameTitle": {
    "message": "Titre du frame de lecture"
  },
  "panels/media/PlayerPropertiesView.ts | playbackFrameUrl": {
    "message": "URL du frame de lecture"
  },
  "panels/media/PlayerPropertiesView.ts | properties": {
    "message": "Propriétés"
  },
  "panels/media/PlayerPropertiesView.ts | rangeHeaderSupport": {
    "message": "Prise en charge des en-têtes Range"
  },
  "panels/media/PlayerPropertiesView.ts | rendererName": {
    "message": "Nom du moteur de rendu"
  },
  "panels/media/PlayerPropertiesView.ts | resolution": {
    "message": "Résolution"
  },
  "panels/media/PlayerPropertiesView.ts | singleoriginPlayback": {
    "message": "Lecture (origine unique)"
  },
  "panels/media/PlayerPropertiesView.ts | startTime": {
    "message": "Heure de début"
  },
  "panels/media/PlayerPropertiesView.ts | streaming": {
    "message": "Streaming"
  },
  "panels/media/PlayerPropertiesView.ts | textTrack": {
    "message": "Piste de texte"
  },
  "panels/media/PlayerPropertiesView.ts | track": {
    "message": "Titre"
  },
  "panels/media/PlayerPropertiesView.ts | video": {
    "message": "Vidéo"
  },
  "panels/media/PlayerPropertiesView.ts | videoFreezingScore": {
    "message": "Score de lecture vidéo saccadée"
  },
  "panels/media/PlayerPropertiesView.ts | videoPlaybackRoughness": {
    "message": "Irrégularité de la lecture vidéo"
  },
  "panels/media/media-meta.ts | media": {
    "message": "Multimédia"
  },
  "panels/media/media-meta.ts | showMedia": {
    "message": "Afficher l'outil multimédia"
  },
  "panels/media/media-meta.ts | video": {
    "message": "vidéo"
  },
  "panels/mobile_throttling/MobileThrottlingSelector.ts | advanced": {
    "message": "Avancé"
  },
  "panels/mobile_throttling/MobileThrottlingSelector.ts | disabled": {
    "message": "Désactivée"
  },
  "panels/mobile_throttling/MobileThrottlingSelector.ts | presets": {
    "message": "Préréglages"
  },
  "panels/mobile_throttling/NetworkPanelIndicator.ts | acceptedEncodingOverrideSet": {
    "message": "L'ensemble d'en-têtes Content-Encoding acceptés a été modifié par les outils de développement. Consultez le panneau \"Conditions du réseau\""
  },
  "panels/mobile_throttling/NetworkPanelIndicator.ts | browserCacheDisabled": {
    "message": "Le cache du navigateur est désactivé"
  },
  "panels/mobile_throttling/NetworkPanelIndicator.ts | networkThrottlingIsEnabled": {
    "message": "La limitation de bande passante réseau est activée"
  },
  "panels/mobile_throttling/NetworkPanelIndicator.ts | requestsMayBeBlocked": {
    "message": "Les requêtes sont peut-être bloquées. Consultez le panneau de blocage des requêtes réseau"
  },
  "panels/mobile_throttling/NetworkPanelIndicator.ts | requestsMayBeOverridden": {
    "message": "Les requêtes peuvent être remplacées localement (voir le panneau \"Sources\")"
  },
  "panels/mobile_throttling/NetworkThrottlingSelector.ts | custom": {
    "message": "Personnalisé"
  },
  "panels/mobile_throttling/NetworkThrottlingSelector.ts | disabled": {
    "message": "Désactivé"
  },
  "panels/mobile_throttling/NetworkThrottlingSelector.ts | presets": {
    "message": "Préréglages"
  },
  "panels/mobile_throttling/ThrottlingManager.ts | add": {
    "message": "Ajouter…"
  },
  "panels/mobile_throttling/ThrottlingManager.ts | addS": {
    "message": "Ajouter {PH1}"
  },
  "panels/mobile_throttling/ThrottlingManager.ts | cpuThrottling": {
    "message": "Limitation du processeur"
  },
  "panels/mobile_throttling/ThrottlingManager.ts | cpuThrottlingIsEnabled": {
    "message": "La limitation du processeur est activée"
  },
  "panels/mobile_throttling/ThrottlingManager.ts | dSlowdown": {
    "message": "Ralentissement x {PH1}"
  },
  "panels/mobile_throttling/ThrottlingManager.ts | excessConcurrency": {
    "message": "Toute valeur supérieure à la valeur par défaut risque de dégrader les performances du système."
  },
  "panels/mobile_throttling/ThrottlingManager.ts | forceDisconnectedFromNetwork": {
    "message": "Forcer la déconnexion du réseau"
  },
  "panels/mobile_throttling/ThrottlingManager.ts | hardwareConcurrency": {
    "message": "Simultanéité matérielle"
  },
  "panels/mobile_throttling/ThrottlingManager.ts | hardwareConcurrencyIsEnabled": {
    "message": "Forçage de la simultanéité matérielle activé"
  },
  "panels/mobile_throttling/ThrottlingManager.ts | hardwareConcurrencySettingTooltip": {
    "message": "Remplacer la valeur indiquée par navigateurator.hardwareConcurrency sur la page"
  },
  "panels/mobile_throttling/ThrottlingManager.ts | noThrottling": {
    "message": "Aucune limitation"
  },
  "panels/mobile_throttling/ThrottlingManager.ts | offline": {
    "message": "Hors connexion"
  },
  "panels/mobile_throttling/ThrottlingManager.ts | resetConcurrency": {
    "message": "Rétablir la valeur par défaut"
  },
  "panels/mobile_throttling/ThrottlingManager.ts | sS": {
    "message": "{PH1} : {PH2}"
  },
  "panels/mobile_throttling/ThrottlingManager.ts | throttling": {
    "message": "Limitations"
  },
  "panels/mobile_throttling/ThrottlingPresets.ts | checkNetworkAndPerformancePanels": {
    "message": "Vérifier les panneaux \"Réseau\" et \"Performances\""
  },
  "panels/mobile_throttling/ThrottlingPresets.ts | custom": {
    "message": "Personnalisé"
  },
  "panels/mobile_throttling/ThrottlingPresets.ts | fastGXCpuSlowdown": {
    "message": "Connexion 3G rapide et processeur 4 fois plus lent"
  },
  "panels/mobile_throttling/ThrottlingPresets.ts | lowendMobile": {
    "message": "Mobile bas de gamme"
  },
  "panels/mobile_throttling/ThrottlingPresets.ts | midtierMobile": {
    "message": "Mobile de milieu de gamme"
  },
  "panels/mobile_throttling/ThrottlingPresets.ts | noInternetConnectivity": {
    "message": "Aucune connexion à Internet"
  },
  "panels/mobile_throttling/ThrottlingPresets.ts | noThrottling": {
    "message": "Aucune limitation"
  },
  "panels/mobile_throttling/ThrottlingPresets.ts | slowGXCpuSlowdown": {
    "message": "Connexion 3G lente et processeur 6 fois plus lent"
  },
  "panels/mobile_throttling/ThrottlingSettingsTab.ts | addCustomProfile": {
    "message": "Ajouter un profil personnalisé…"
  },
  "panels/mobile_throttling/ThrottlingSettingsTab.ts | dms": {
    "message": "{PH1} ms"
  },
  "panels/mobile_throttling/ThrottlingSettingsTab.ts | download": {
    "message": "Téléchargement"
  },
  "panels/mobile_throttling/ThrottlingSettingsTab.ts | dskbits": {
    "message": "{PH1} kbit/s"
  },
  "panels/mobile_throttling/ThrottlingSettingsTab.ts | fsmbits": {
    "message": "{PH1} Mbit/s"
  },
  "panels/mobile_throttling/ThrottlingSettingsTab.ts | latency": {
    "message": "Latence"
  },
  "panels/mobile_throttling/ThrottlingSettingsTab.ts | latencyMustBeAnIntegerBetweenSms": {
    "message": "La latence doit être un nombre entier compris entre {PH1} ms et {PH2} ms"
  },
  "panels/mobile_throttling/ThrottlingSettingsTab.ts | networkThrottlingProfiles": {
    "message": "Profils de limitation de bande passante réseau"
  },
  "panels/mobile_throttling/ThrottlingSettingsTab.ts | optional": {
    "message": "facultatif"
  },
  "panels/mobile_throttling/ThrottlingSettingsTab.ts | profileName": {
    "message": "Nom du profil"
  },
  "panels/mobile_throttling/ThrottlingSettingsTab.ts | profileNameCharactersLengthMust": {
    "message": "Le nom du profil doit comporter entre 1 et {PH1} caractères"
  },
  "panels/mobile_throttling/ThrottlingSettingsTab.ts | sMustBeANumberBetweenSkbsToSkbs": {
    "message": "{PH1} doit être un nombre compris entre {PH2} kbit/s et {PH3} kbit/s"
  },
  "panels/mobile_throttling/ThrottlingSettingsTab.ts | upload": {
    "message": "Importer"
  },
  "panels/mobile_throttling/mobile_throttling-meta.ts | device": {
    "message": "appareil"
  },
  "panels/mobile_throttling/mobile_throttling-meta.ts | enableFastGThrottling": {
    "message": "Activer la limitation de la bande passante de la 3G rapide"
  },
  "panels/mobile_throttling/mobile_throttling-meta.ts | enableSlowGThrottling": {
    "message": "Activer la limitation de la bande passante de la 3G lente"
  },
  "panels/mobile_throttling/mobile_throttling-meta.ts | goOffline": {
    "message": "Passer en mode hors connexion"
  },
  "panels/mobile_throttling/mobile_throttling-meta.ts | goOnline": {
    "message": "Passer en mode en ligne"
  },
  "panels/mobile_throttling/mobile_throttling-meta.ts | showThrottling": {
    "message": "Afficher la limitation"
  },
  "panels/mobile_throttling/mobile_throttling-meta.ts | throttling": {
    "message": "Limitations"
  },
  "panels/mobile_throttling/mobile_throttling-meta.ts | throttlingTag": {
    "message": "limitation"
  },
  "panels/network/BinaryResourceView.ts | binaryViewType": {
    "message": "Type d'affichage de données binaires"
  },
  "panels/network/BinaryResourceView.ts | copiedAsBase": {
    "message": "Copié au format Base64"
  },
  "panels/network/BinaryResourceView.ts | copiedAsHex": {
    "message": "Copié au format Hex"
  },
  "panels/network/BinaryResourceView.ts | copiedAsUtf": {
    "message": "Copié au format UTF-8"
  },
  "panels/network/BinaryResourceView.ts | copyAsBase": {
    "message": "Copier au format Base64"
  },
  "panels/network/BinaryResourceView.ts | copyAsHex": {
    "message": "Copier au format Hex"
  },
  "panels/network/BinaryResourceView.ts | copyAsUtf": {
    "message": "Copier au format UTF-8"
  },
  "panels/network/BinaryResourceView.ts | copyToClipboard": {
    "message": "Copier dans le presse-papiers"
  },
  "panels/network/BinaryResourceView.ts | hexViewer": {
    "message": "Visualiseur Hex"
  },
  "panels/network/BlockedURLsPane.ts | addNetworkRequestBlockingPattern": {
    "message": "Ajouter un schéma de blocage de requête réseau"
  },
  "panels/network/BlockedURLsPane.ts | addPattern": {
    "message": "Ajouter un format"
  },
  "panels/network/BlockedURLsPane.ts | dBlocked": {
    "message": "{PH1} bloquées"
  },
  "panels/network/BlockedURLsPane.ts | enableNetworkRequestBlocking": {
    "message": "Activer le blocage de requête réseau"
  },
  "panels/network/BlockedURLsPane.ts | itemDeleted": {
    "message": "L'élément a bien été supprimé"
  },
  "panels/network/BlockedURLsPane.ts | networkRequestsAreNotBlockedS": {
    "message": "Les requêtes réseau ne sont pas bloquées. {PH1}"
  },
  "panels/network/BlockedURLsPane.ts | patternAlreadyExists": {
    "message": "Ce format existe déjà."
  },
  "panels/network/BlockedURLsPane.ts | patternInputCannotBeEmpty": {
    "message": "Entrée de format obligatoire."
  },
  "panels/network/BlockedURLsPane.ts | textPatternToBlockMatching": {
    "message": "Motif de texte pour bloquer les demandes avec correspondance ; utilisez le caractère générique \"*\""
  },
  "panels/network/EventSourceMessagesView.ts | copyMessage": {
    "message": "Copier le message"
  },
  "panels/network/EventSourceMessagesView.ts | data": {
    "message": "Données"
  },
  "panels/network/EventSourceMessagesView.ts | eventSource": {
    "message": "Source de l'événement"
  },
  "panels/network/EventSourceMessagesView.ts | id": {
    "message": "ID"
  },
  "panels/network/EventSourceMessagesView.ts | time": {
    "message": "Durée"
  },
  "panels/network/EventSourceMessagesView.ts | type": {
    "message": "Type"
  },
  "panels/network/NetworkConfigView.ts | acceptedEncoding": {
    "message": "Éléments Content-Encoding acceptés"
  },
  "panels/network/NetworkConfigView.ts | caching": {
    "message": "Mise en cache"
  },
  "panels/network/NetworkConfigView.ts | clientHintsStatusText": {
    "message": "User-agent mis à jour."
  },
  "panels/network/NetworkConfigView.ts | custom": {
    "message": "Personnaliser…"
  },
  "panels/network/NetworkConfigView.ts | customUserAgentFieldIsRequired": {
    "message": "Veuillez compléter le champ user-agent personnalisé"
  },
  "panels/network/NetworkConfigView.ts | disableCache": {
    "message": "Désactiver le cache"
  },
  "panels/network/NetworkConfigView.ts | enterACustomUserAgent": {
    "message": "Indiquez un user-agent personnalisé"
  },
  "panels/network/NetworkConfigView.ts | networkConditionsPanelShown": {
    "message": "Conditions du réseau affichées"
  },
  "panels/network/NetworkConfigView.ts | networkThrottling": {
    "message": "Limitation de bande passante réseau"
  },
  "panels/network/NetworkConfigView.ts | selectAutomatically": {
    "message": "Utiliser la valeur par défaut du navigateur"
  },
  "panels/network/NetworkConfigView.ts | userAgent": {
    "message": "User-agent"
  },
  "panels/network/NetworkDataGridNode.ts | alternativeJobWonRace": {
    "message": "Chrome a utilisé une connexion HTTP/3 déclenchée par un en-tête \"Alt-Svc\", car elle a établi la connexion plus vite qu'une autre version HTTP concurrente."
  },
  "panels/network/NetworkDataGridNode.ts | alternativeJobWonWithoutRace": {
    "message": "Chrome a utilisé une connexion HTTP/3 déclenchée par un en-tête \"Alt-Svc\" sans essayer d'établir une connexion plus vite à l'aide d'une autre version HTTP concurrente."
  },
  "panels/network/NetworkDataGridNode.ts | blockedTooltip": {
    "message": "Cette requête a été bloquée en raison d'une mauvaise configuration des en-têtes de réponse. Cliquez pour afficher les en-têtes"
  },
  "panels/network/NetworkDataGridNode.ts | blockeds": {
    "message": "(bloquées : {PH1})"
  },
  "panels/network/NetworkDataGridNode.ts | broken": {
    "message": "Chrome n'a pas tenté d'établir de connexion HTTP/3, car elle a été marquée comme non opérationnelle."
  },
  "panels/network/NetworkDataGridNode.ts | canceled": {
    "message": "(annulé)"
  },
  "panels/network/NetworkDataGridNode.ts | corsError": {
    "message": "Erreur CORS"
  },
  "panels/network/NetworkDataGridNode.ts | crossoriginResourceSharingErrorS": {
    "message": "Erreur Cross-Origin Resource Sharing : {PH1}"
  },
  "panels/network/NetworkDataGridNode.ts | csp": {
    "message": "CSP"
  },
  "panels/network/NetworkDataGridNode.ts | data": {
    "message": "(données)"
  },
  "panels/network/NetworkDataGridNode.ts | devtools": {
    "message": "outils de développement"
  },
  "panels/network/NetworkDataGridNode.ts | diskCache": {
    "message": "(cache du disque)"
  },
  "panels/network/NetworkDataGridNode.ts | dnsAlpnH3JobWonRace": {
    "message": "Chrome a utilisé une connexion HTTP/3 car l'élément \"DNS record\" indiquait une compatibilité avec HTTP/3, qui a établi la connexion plus vite que les autres versions HTTP concurrentes."
  },
  "panels/network/NetworkDataGridNode.ts | dnsAlpnH3JobWonWithoutRace": {
    "message": "Chrome a utilisé une connexion HTTP/3 car l'élément \"DNS record\" indiquait une compatibilité avec HTTP/3. Il n'y a pas eu de mise en concurrence pour tenter d'établir une connexion à l'aide d'une autre version HTTP."
  },
  "panels/network/NetworkDataGridNode.ts | failed": {
    "message": "(échec)"
  },
  "panels/network/NetworkDataGridNode.ts | finished": {
    "message": "Terminé"
  },
  "panels/network/NetworkDataGridNode.ts | initialPriorityToolTip": {
    "message": "{PH1}, priorité initiale : {PH2}"
  },
  "panels/network/NetworkDataGridNode.ts | level": {
    "message": "niveau 1"
  },
  "panels/network/NetworkDataGridNode.ts | mainJobWonRace": {
    "message": "Chrome a utilisé ce protocole, car il s'agissait du plus rapide pour établir une connexion HTTP/3."
  },
  "panels/network/NetworkDataGridNode.ts | mappingMissing": {
    "message": "Chrome n'a pas utilisé une autre version HTTP car aucune information sur l'autre protocole n'était disponible lorsque la requête a été envoyée, mais un en-tête \"Alt-Svc\" était présent dans la réponse."
  },
  "panels/network/NetworkDataGridNode.ts | matchedToServiceWorkerRouter": {
    "message": "Associé à ServiceWorker router#{PH1}, taille de la ressource : {PH2}"
  },
  "panels/network/NetworkDataGridNode.ts | memoryCache": {
    "message": "(cache mémoire)"
  },
  "panels/network/NetworkDataGridNode.ts | origin": {
    "message": "origine"
  },
  "panels/network/NetworkDataGridNode.ts | other": {
    "message": "autre"
  },
  "panels/network/NetworkDataGridNode.ts | otherC": {
    "message": "Autre"
  },
  "panels/network/NetworkDataGridNode.ts | parser": {
    "message": "Analyseur"
  },
  "panels/network/NetworkDataGridNode.ts | pending": {
    "message": "En attente"
  },
  "panels/network/NetworkDataGridNode.ts | pendingq": {
    "message": "(en attente)"
  },
  "panels/network/NetworkDataGridNode.ts | prefetchCache": {
    "message": "(cache de préchargement)"
  },
  "panels/network/NetworkDataGridNode.ts | preflight": {
    "message": "Requête préliminaire"
  },
  "panels/network/NetworkDataGridNode.ts | preload": {
    "message": "Précharger"
  },
  "panels/network/NetworkDataGridNode.ts | push": {
    "message": "Push/ "
  },
  "panels/network/NetworkDataGridNode.ts | redirect": {
    "message": "Rediriger"
  },
  "panels/network/NetworkDataGridNode.ts | requestContentHeadersOverridden": {
    "message": "Le contenu et les en-têtes de requêtes sont remplacés"
  },
  "panels/network/NetworkDataGridNode.ts | requestContentOverridden": {
    "message": "Le contenu de la requête est ignoré"
  },
  "panels/network/NetworkDataGridNode.ts | requestHeadersOverridden": {
    "message": "Les en-têtes de requêtes sont remplacés"
  },
  "panels/network/NetworkDataGridNode.ts | sPreflight": {
    "message": "{PH1} + requête préliminaire"
  },
  "panels/network/NetworkDataGridNode.ts | script": {
    "message": "Script"
  },
  "panels/network/NetworkDataGridNode.ts | selectPreflightRequest": {
    "message": "Sélectionner la requête préliminaire"
  },
  "panels/network/NetworkDataGridNode.ts | selectTheRequestThatTriggered": {
    "message": "Sélectionner la requête qui a déclenché cette requête préliminaire"
  },
  "panels/network/NetworkDataGridNode.ts | servedFromDiskCacheResourceSizeS": {
    "message": "Diffusé depuis le cache du disque ; taille de la ressource : {PH1}"
  },
  "panels/network/NetworkDataGridNode.ts | servedFromMemoryCacheResource": {
    "message": "Diffusée à partir du cache mémoire, taille de la ressource : {PH1}"
  },
  "panels/network/NetworkDataGridNode.ts | servedFromPrefetchCacheResource": {
    "message": "Diffusé à partir du cache de préchargement, taille de la ressource : {PH1}"
  },
  "panels/network/NetworkDataGridNode.ts | servedFromServiceWorkerResource": {
    "message": "Diffusée à partir de ServiceWorker, taille de la ressource : {PH1}"
  },
  "panels/network/NetworkDataGridNode.ts | servedFromSignedHttpExchange": {
    "message": "Diffusé depuis Signed HTTP Exchange ; taille de la ressource : {PH1}"
  },
  "panels/network/NetworkDataGridNode.ts | servedFromWebBundle": {
    "message": "Diffusé depuis Web Bundle, taille de la ressource : {PH1}"
  },
  "panels/network/NetworkDataGridNode.ts | serviceWorker": {
    "message": "(ServiceWorker)"
  },
  "panels/network/NetworkDataGridNode.ts | signedexchange": {
    "message": "échange signé"
  },
  "panels/network/NetworkDataGridNode.ts | thirdPartyPhaseout": {
    "message": "Les cookies pour cette requête sont bloqués en raison de l'abandon des cookies tiers. En savoir plus dans l'onglet des problèmes"
  },
  "panels/network/NetworkDataGridNode.ts | timeSubtitleTooltipText": {
    "message": "Latence (heure de réception de la réponse - heure de début)"
  },
  "panels/network/NetworkDataGridNode.ts | unknown": {
    "message": "(inconnu)"
  },
  "panels/network/NetworkDataGridNode.ts | unknownExplanation": {
    "message": "L'état de la requête ne peut pas être affiché ici, car la page qui l'a émise s'est déchargée lors de la transmission de la requête. Vous pouvez utiliser chrome://net-export pour récupérer un journal réseau et voir tous les détails de la requête."
  },
  "panels/network/NetworkDataGridNode.ts | webBundle": {
    "message": "(Web Bundle)"
  },
  "panels/network/NetworkDataGridNode.ts | webBundleError": {
    "message": "Erreur Web Bundle"
  },
  "panels/network/NetworkDataGridNode.ts | webBundleInnerRequest": {
    "message": "Envoyée depuis Web Bundle"
  },
  "panels/network/NetworkItemView.ts | containsOverriddenHeaders": {
    "message": "Cette réponse contient des en-têtes remplacés par les outils de développement"
  },
  "panels/network/NetworkItemView.ts | cookies": {
    "message": "Cookies"
  },
  "panels/network/NetworkItemView.ts | eventstream": {
    "message": "EventStream"
  },
  "panels/network/NetworkItemView.ts | headers": {
    "message": "En-têtes"
  },
  "panels/network/NetworkItemView.ts | initiator": {
    "message": "Initiateur"
  },
  "panels/network/NetworkItemView.ts | messages": {
    "message": "Messages"
  },
  "panels/network/NetworkItemView.ts | payload": {
    "message": "Charge utile"
  },
  "panels/network/NetworkItemView.ts | preview": {
    "message": "Aperçu"
  },
  "panels/network/NetworkItemView.ts | rawResponseData": {
    "message": "Données de réponse brutes"
  },
  "panels/network/NetworkItemView.ts | requestAndResponseCookies": {
    "message": "Cookies des requêtes et des réponses"
  },
  "panels/network/NetworkItemView.ts | requestAndResponseTimeline": {
    "message": "Chronologie des requêtes et réponses"
  },
  "panels/network/NetworkItemView.ts | requestInitiatorCallStack": {
    "message": "Pile d'appel de l'initiateur de la requête"
  },
  "panels/network/NetworkItemView.ts | response": {
    "message": "Réponse"
  },
  "panels/network/NetworkItemView.ts | responseIsOverridden": {
    "message": "Cette réponse est remplacée par les outils de développement"
  },
  "panels/network/NetworkItemView.ts | responsePreview": {
    "message": "Aperçu de la réponse"
  },
  "panels/network/NetworkItemView.ts | signedexchangeError": {
    "message": "Erreur SignedExchange"
  },
  "panels/network/NetworkItemView.ts | thirdPartyPhaseout": {
    "message": "Cookies bloqués en raison de l'abandon des cookies tiers."
  },
  "panels/network/NetworkItemView.ts | timing": {
    "message": "Délai"
  },
  "panels/network/NetworkItemView.ts | trustTokenOperationDetails": {
    "message": "Détails de l'opération sur le jeton d'état privé"
  },
  "panels/network/NetworkItemView.ts | trustTokens": {
    "message": "Jetons d'état privés"
  },
  "panels/network/NetworkItemView.ts | websocketMessages": {
    "message": "Messages WebSocket"
  },
  "panels/network/NetworkLogView.ts | allStrings": {
    "message": "Tout"
  },
  "panels/network/NetworkLogView.ts | areYouSureYouWantToClearBrowser": {
    "message": "Voulez-vous vraiment vider le cache du navigateur ?"
  },
  "panels/network/NetworkLogView.ts | areYouSureYouWantToClearBrowserCookies": {
    "message": "Voulez-vous vraiment supprimer les cookies du navigateur ?"
  },
  "panels/network/NetworkLogView.ts | blockRequestDomain": {
    "message": "Bloquer le domaine de la requête"
  },
  "panels/network/NetworkLogView.ts | blockRequestUrl": {
    "message": "Bloquer l'URL de la requête"
  },
  "panels/network/NetworkLogView.ts | blockedRequests": {
    "message": "Requêtes bloquées"
  },
  "panels/network/NetworkLogView.ts | chromeExtensions": {
    "message": "Masquer les URL des extensions"
  },
  "panels/network/NetworkLogView.ts | clearBrowserCache": {
    "message": "Vider le cache du navigateur"
  },
  "panels/network/NetworkLogView.ts | clearBrowserCookies": {
    "message": "Supprimer les cookies du navigateur"
  },
  "panels/network/NetworkLogView.ts | copy": {
    "message": "Copier"
  },
  "panels/network/NetworkLogView.ts | copyAllAsCurl": {
    "message": "Tout copier au format cURL"
  },
  "panels/network/NetworkLogView.ts | copyAllAsCurlBash": {
    "message": "Tout copier au format cURL (bash)"
  },
  "panels/network/NetworkLogView.ts | copyAllAsCurlCmd": {
    "message": "Tout copier au format cURL (cmd)"
  },
  "panels/network/NetworkLogView.ts | copyAllAsFetch": {
    "message": "Tout copier au format fetch"
  },
  "panels/network/NetworkLogView.ts | copyAllAsHar": {
    "message": "Tout copier au format HAR"
  },
  "panels/network/NetworkLogView.ts | copyAllAsNodejsFetch": {
    "message": "Tout copier au format fetch (Node.js)"
  },
  "panels/network/NetworkLogView.ts | copyAllAsPowershell": {
    "message": "Tout copier au format PowerShell"
  },
  "panels/network/NetworkLogView.ts | copyAllURLs": {
    "message": "Copier toutes les URL"
  },
  "panels/network/NetworkLogView.ts | copyAsCurl": {
    "message": "Copier au format cURL"
  },
  "panels/network/NetworkLogView.ts | copyAsCurlBash": {
    "message": "Copier au format cURL (bash)"
  },
  "panels/network/NetworkLogView.ts | copyAsCurlCmd": {
    "message": "Copier au format cURL (cmd)"
  },
  "panels/network/NetworkLogView.ts | copyAsFetch": {
    "message": "Copier au format fetch"
  },
  "panels/network/NetworkLogView.ts | copyAsNodejsFetch": {
    "message": "Copier au format fetch (Node.js)"
  },
  "panels/network/NetworkLogView.ts | copyAsPowershell": {
    "message": "Copier au format PowerShell"
  },
  "panels/network/NetworkLogView.ts | copyRequestHeaders": {
    "message": "Copier les en-têtes de requête"
  },
  "panels/network/NetworkLogView.ts | copyResponse": {
    "message": "Copier la réponse"
  },
  "panels/network/NetworkLogView.ts | copyResponseHeaders": {
    "message": "Copier les en-têtes de réponse"
  },
  "panels/network/NetworkLogView.ts | copyStacktrace": {
    "message": "Copier la trace de la pile"
  },
  "panels/network/NetworkLogView.ts | copyURL": {
    "message": "Copier l'URL"
  },
  "panels/network/NetworkLogView.ts | domcontentloadedS": {
    "message": "DOMContentLoaded : {PH1}"
  },
  "panels/network/NetworkLogView.ts | dropHarFilesHere": {
    "message": "Déposer les fichiers HAR ici"
  },
  "panels/network/NetworkLogView.ts | finishS": {
    "message": "Terminer : {PH1}"
  },
  "panels/network/NetworkLogView.ts | hasBlockedCookies": {
    "message": "Cookies de réponse bloqués"
  },
  "panels/network/NetworkLogView.ts | hideChromeExtension": {
    "message": "Masquer les URL \"chrome-extension://\""
  },
  "panels/network/NetworkLogView.ts | hideDataUrls": {
    "message": "Masquer les URL de données"
  },
  "panels/network/NetworkLogView.ts | hidesDataAndBlobUrls": {
    "message": "Masquer les URL \"data:\" et \"blob:\""
  },
  "panels/network/NetworkLogView.ts | invertFilter": {
    "message": "Inverser"
  },
  "panels/network/NetworkLogView.ts | invertsFilter": {
    "message": "Inverser le filtre de recherche"
  },
  "panels/network/NetworkLogView.ts | learnMore": {
    "message": "En savoir plus"
  },
  "panels/network/NetworkLogView.ts | loadS": {
    "message": "Chargement : {PH1}"
  },
  "panels/network/NetworkLogView.ts | moreFilters": {
    "message": "Autres filtres"
  },
  "panels/network/NetworkLogView.ts | networkDataAvailable": {
    "message": "Données réseau disponibles"
  },
  "panels/network/NetworkLogView.ts | onlyShowBlockedRequests": {
    "message": "Afficher uniquement les requêtes bloquées"
  },
  "panels/network/NetworkLogView.ts | onlyShowRequestsWithBlockedCookies": {
    "message": "Afficher uniquement les requêtes dont les cookies de réponse ont été bloqués"
  },
  "panels/network/NetworkLogView.ts | onlyShowThirdPartyRequests": {
    "message": "Afficher uniquement les requêtes dont l'origine est différente de celle de la page"
  },
  "panels/network/NetworkLogView.ts | overTwoTypesSelected": {
    "message": "{PH1}, {PH2}..."
  },
  "panels/network/NetworkLogView.ts | overrideHeaders": {
    "message": "Ignorer les en-têtes"
  },
  "panels/network/NetworkLogView.ts | performARequestOrHitSToRecordThe": {
    "message": "Exécutez une requête ou appuyez sur {PH1} pour enregistrer l'actualisation."
  },
  "panels/network/NetworkLogView.ts | recordToDisplayNetworkActivity": {
    "message": "Enregistrez le journal réseau ({PH1}) pour afficher l'activité du réseau."
  },
  "panels/network/NetworkLogView.ts | recordingNetworkActivity": {
    "message": "Enregistrement de l'activité réseau…"
  },
  "panels/network/NetworkLogView.ts | replayXhr": {
    "message": "Relancer XHR"
  },
  "panels/network/NetworkLogView.ts | requestTypes": {
    "message": "Types de requêtes"
  },
  "panels/network/NetworkLogView.ts | requestTypesToInclude": {
    "message": "Types de requêtes à inclure"
  },
  "panels/network/NetworkLogView.ts | requestTypesTooltip": {
    "message": "Filtrer les requêtes par type"
  },
  "panels/network/NetworkLogView.ts | sBResourcesLoadedByThePage": {
    "message": "{PH1} B de ressources chargées par la page"
  },
  "panels/network/NetworkLogView.ts | sBSBResourcesLoadedByThePage": {
    "message": "Ressources {PH1} B/{PH2} B chargées par la page"
  },
  "panels/network/NetworkLogView.ts | sBSBTransferredOverNetwork": {
    "message": "{PH1} B/{PH2} B transférés sur le réseau"
  },
  "panels/network/NetworkLogView.ts | sBTransferredOverNetwork": {
    "message": "{PH1} B transférés sur le réseau"
  },
  "panels/network/NetworkLogView.ts | sRequests": {
    "message": "{PH1} requêtes"
  },
  "panels/network/NetworkLogView.ts | sResources": {
    "message": "{PH1} ressources"
  },
  "panels/network/NetworkLogView.ts | sSRequests": {
    "message": "{PH1} requête(s) sur {PH2}"
  },
  "panels/network/NetworkLogView.ts | sSResources": {
    "message": "Ressources : {PH1}/{PH2}"
  },
  "panels/network/NetworkLogView.ts | sSTransferred": {
    "message": "{PH1}/{PH2} transférés"
  },
  "panels/network/NetworkLogView.ts | sTransferred": {
    "message": "{PH1} transféré(s)"
  },
  "panels/network/NetworkLogView.ts | saveAllAsHarWithContent": {
    "message": "Tout enregistrer au format HAR avec le contenu"
  },
  "panels/network/NetworkLogView.ts | showOnly": {
    "message": "Afficher uniquement {PH1}"
  },
  "panels/network/NetworkLogView.ts | showOnlyHideRequests": {
    "message": "Afficher uniquement/Masquer les requêtes"
  },
  "panels/network/NetworkLogView.ts | thirdParty": {
    "message": "Requêtes tierces"
  },
  "panels/network/NetworkLogView.ts | twoTypesSelected": {
    "message": "{PH1}, {PH2}"
  },
  "panels/network/NetworkLogView.ts | unblockS": {
    "message": "Débloquer {PH1}"
  },
  "panels/network/NetworkLogViewColumns.ts | connectionId": {
    "message": "ID de connexion"
  },
  "panels/network/NetworkLogViewColumns.ts | content": {
    "message": "Contenu"
  },
  "panels/network/NetworkLogViewColumns.ts | cookies": {
    "message": "Cookies"
  },
  "panels/network/NetworkLogViewColumns.ts | domain": {
    "message": "Domaine"
  },
  "panels/network/NetworkLogViewColumns.ts | endTime": {
    "message": "Heure de fin"
  },
  "panels/network/NetworkLogViewColumns.ts | hasOverrides": {
    "message": "Comporte des forçages"
  },
  "panels/network/NetworkLogViewColumns.ts | initiator": {
    "message": "Initiateur"
  },
  "panels/network/NetworkLogViewColumns.ts | initiatorAddressSpace": {
    "message": "Espace d'adresse de l'initiateur"
  },
  "panels/network/NetworkLogViewColumns.ts | latency": {
    "message": "Latence"
  },
  "panels/network/NetworkLogViewColumns.ts | manageHeaderColumns": {
    "message": "Gérer les colonnes d'en-tête…"
  },
  "panels/network/NetworkLogViewColumns.ts | method": {
    "message": "Méthode"
  },
  "panels/network/NetworkLogViewColumns.ts | name": {
    "message": "Nom"
  },
  "panels/network/NetworkLogViewColumns.ts | networkLog": {
    "message": "Journal du réseau"
  },
  "panels/network/NetworkLogViewColumns.ts | path": {
    "message": "Chemin d'accès"
  },
  "panels/network/NetworkLogViewColumns.ts | priority": {
    "message": "Priorité"
  },
  "panels/network/NetworkLogViewColumns.ts | protocol": {
    "message": "Protocole"
  },
  "panels/network/NetworkLogViewColumns.ts | remoteAddress": {
    "message": "Adresse distante"
  },
  "panels/network/NetworkLogViewColumns.ts | remoteAddressSpace": {
    "message": "Espace d'adresse à distance"
  },
  "panels/network/NetworkLogViewColumns.ts | responseHeaders": {
    "message": "En-têtes de réponse"
  },
  "panels/network/NetworkLogViewColumns.ts | responseTime": {
    "message": "Délai de réponse"
  },
  "panels/network/NetworkLogViewColumns.ts | scheme": {
    "message": "Schéma"
  },
  "panels/network/NetworkLogViewColumns.ts | setCookies": {
    "message": "Placer des cookies"
  },
  "panels/network/NetworkLogViewColumns.ts | size": {
    "message": "Taille"
  },
  "panels/network/NetworkLogViewColumns.ts | startTime": {
    "message": "Heure de début"
  },
  "panels/network/NetworkLogViewColumns.ts | status": {
    "message": "État"
  },
  "panels/network/NetworkLogViewColumns.ts | text": {
    "message": "Texte"
  },
  "panels/network/NetworkLogViewColumns.ts | time": {
    "message": "Durée"
  },
  "panels/network/NetworkLogViewColumns.ts | totalDuration": {
    "message": "Durée totale"
  },
  "panels/network/NetworkLogViewColumns.ts | type": {
    "message": "Type"
  },
  "panels/network/NetworkLogViewColumns.ts | url": {
    "message": "URL"
  },
  "panels/network/NetworkLogViewColumns.ts | waterfall": {
    "message": "Cascade"
  },
  "panels/network/NetworkManageCustomHeadersView.ts | addCustomHeader": {
    "message": "Ajouter un en-tête personnalisé…"
  },
  "panels/network/NetworkManageCustomHeadersView.ts | headerName": {
    "message": "Nom de l'en-tête"
  },
  "panels/network/NetworkManageCustomHeadersView.ts | manageHeaderColumns": {
    "message": "Gérer les colonnes d'en-tête"
  },
  "panels/network/NetworkManageCustomHeadersView.ts | noCustomHeaders": {
    "message": "Aucun en-tête personnalisé"
  },
  "panels/network/NetworkPanel.ts | captureScreenshots": {
    "message": "Captures d'écran"
  },
  "panels/network/NetworkPanel.ts | captureScreenshotsWhenLoadingA": {
    "message": "Effectuer des captures d'écran lors du chargement d'une page"
  },
  "panels/network/NetworkPanel.ts | close": {
    "message": "Fermer"
  },
  "panels/network/NetworkPanel.ts | disableCache": {
    "message": "Désactiver le cache"
  },
  "panels/network/NetworkPanel.ts | disableCacheWhileDevtoolsIsOpen": {
    "message": "Désactiver le cache (quand les outils de développement sont ouverts)"
  },
  "panels/network/NetworkPanel.ts | doNotClearLogOnPageReload": {
    "message": "Ne pas effacer le journal lors de la navigation/de l'actualisation de la page"
  },
  "panels/network/NetworkPanel.ts | exportHar": {
    "message": "Exporter HAR…"
  },
  "panels/network/NetworkPanel.ts | fetchingFrames": {
    "message": "Récupération des images…"
  },
  "panels/network/NetworkPanel.ts | groupByFrame": {
    "message": "Regrouper par frame"
  },
  "panels/network/NetworkPanel.ts | groupRequestsByTopLevelRequest": {
    "message": "Regrouper les requêtes par frame de requête de niveau supérieur"
  },
  "panels/network/NetworkPanel.ts | hitSToReloadAndCaptureFilmstrip": {
    "message": "Appuyez sur {PH1} pour recharger et capturer la pellicule."
  },
  "panels/network/NetworkPanel.ts | importHarFile": {
    "message": "Importer le fichier HAR…"
  },
  "panels/network/NetworkPanel.ts | moreNetworkConditions": {
    "message": "Plus d'infos sur l'état du réseau…"
  },
  "panels/network/NetworkPanel.ts | networkSettings": {
    "message": "Paramètres réseau"
  },
  "panels/network/NetworkPanel.ts | preserveLog": {
    "message": "Conserver le journal"
  },
  "panels/network/NetworkPanel.ts | recordingFrames": {
    "message": "Enregistrement de frames…"
  },
  "panels/network/NetworkPanel.ts | revealInNetworkPanel": {
    "message": "Afficher dans le panneau \"Network\""
  },
  "panels/network/NetworkPanel.ts | search": {
    "message": "Rechercher"
  },
  "panels/network/NetworkPanel.ts | showMoreInformationInRequestRows": {
    "message": "Afficher plus d'informations dans les lignes de requête"
  },
  "panels/network/NetworkPanel.ts | showOverview": {
    "message": "Présentation"
  },
  "panels/network/NetworkPanel.ts | showOverviewOfNetworkRequests": {
    "message": "Afficher un aperçu des requêtes réseau"
  },
  "panels/network/NetworkPanel.ts | throttling": {
    "message": "Limitations"
  },
  "panels/network/NetworkPanel.ts | useLargeRequestRows": {
    "message": "Larges lignes de requêtes"
  },
  "panels/network/NetworkSearchScope.ts | url": {
    "message": "URL"
  },
  "panels/network/NetworkTimeCalculator.ts | sDownload": {
    "message": "{PH1} téléchargements"
  },
  "panels/network/NetworkTimeCalculator.ts | sFromCache": {
    "message": "{PH1} (depuis le cache)"
  },
  "panels/network/NetworkTimeCalculator.ts | sFromServiceworker": {
    "message": "{PH1} (de ServiceWorker)"
  },
  "panels/network/NetworkTimeCalculator.ts | sLatency": {
    "message": "Latence : {PH1}"
  },
  "panels/network/NetworkTimeCalculator.ts | sLatencySDownloadSTotal": {
    "message": "latence {PH1}, téléchargement {PH2} (total {PH3})"
  },
  "panels/network/RequestCookiesView.ts | cookiesThatWereReceivedFromThe": {
    "message": "Cookies reçus du serveur dans l'en-tête \"set-cookie\" de la réponse"
  },
  "panels/network/RequestCookiesView.ts | cookiesThatWereReceivedFromTheServer": {
    "message": "Cookies reçus du serveur dans l'en-tête \"set-cookie\" de la réponse, mais qui sont mal formés"
  },
  "panels/network/RequestCookiesView.ts | cookiesThatWereSentToTheServerIn": {
    "message": "Cookies envoyés au serveur dans l'en-tête \"cookie\" de la requête"
  },
  "panels/network/RequestCookiesView.ts | learnMore": {
    "message": "En savoir plus"
  },
  "panels/network/RequestCookiesView.ts | malformedResponseCookies": {
    "message": "Cookies de réponse non valides"
  },
  "panels/network/RequestCookiesView.ts | noRequestCookiesWereSent": {
    "message": "Aucun cookie de requête n'a été envoyé."
  },
  "panels/network/RequestCookiesView.ts | requestCookies": {
    "message": "Cookies de requête"
  },
  "panels/network/RequestCookiesView.ts | responseCookies": {
    "message": "Cookies de réponse"
  },
  "panels/network/RequestCookiesView.ts | showFilteredOutRequestCookies": {
    "message": "afficher les cookies de requête filtrés"
  },
  "panels/network/RequestCookiesView.ts | siteHasCookieInOtherPartition": {
    "message": "Ce site contient des cookies dans une autre partition, qui n'ont pas été envoyés avec cette requête. {PH1}"
  },
  "panels/network/RequestCookiesView.ts | thisRequestHasNoCookies": {
    "message": "Cette requête ne contient aucun cookie."
  },
  "panels/network/RequestInitiatorView.ts | requestCallStack": {
    "message": "Pile d'appel de requête"
  },
  "panels/network/RequestInitiatorView.ts | requestInitiatorChain": {
    "message": "Chaîne de l'initiateur de requête"
  },
  "panels/network/RequestInitiatorView.ts | thisRequestHasNoInitiatorData": {
    "message": "Cette requête ne contient aucune donnée d'initiateur."
  },
  "panels/network/RequestPayloadView.ts | copyValue": {
    "message": "Copier la valeur"
  },
  "panels/network/RequestPayloadView.ts | empty": {
    "message": "(vide)"
  },
  "panels/network/RequestPayloadView.ts | formData": {
    "message": "Données de formulaire"
  },
  "panels/network/RequestPayloadView.ts | queryStringParameters": {
    "message": "Paramètres de chaîne de requête"
  },
  "panels/network/RequestPayloadView.ts | requestPayload": {
    "message": "Charges utiles de la requête"
  },
  "panels/network/RequestPayloadView.ts | showMore": {
    "message": "Plus"
  },
  "panels/network/RequestPayloadView.ts | unableToDecodeValue": {
    "message": "(impossible de décoder la valeur)"
  },
  "panels/network/RequestPayloadView.ts | viewDecoded": {
    "message": "Afficher les données décodées"
  },
  "panels/network/RequestPayloadView.ts | viewDecodedL": {
    "message": "afficher les données décodées"
  },
  "panels/network/RequestPayloadView.ts | viewParsed": {
    "message": "Afficher analysés"
  },
  "panels/network/RequestPayloadView.ts | viewParsedL": {
    "message": "afficher les données analysées"
  },
  "panels/network/RequestPayloadView.ts | viewSource": {
    "message": "Afficher la source"
  },
  "panels/network/RequestPayloadView.ts | viewSourceL": {
    "message": "afficher la source"
  },
  "panels/network/RequestPayloadView.ts | viewUrlEncoded": {
    "message": "Afficher les données encodées en URL"
  },
  "panels/network/RequestPayloadView.ts | viewUrlEncodedL": {
    "message": "afficher les données encodées en URL"
  },
  "panels/network/RequestPreviewView.ts | failedToLoadResponseData": {
    "message": "Échec du chargement des données de la réponse"
  },
  "panels/network/RequestPreviewView.ts | previewNotAvailable": {
    "message": "Aperçu non disponible"
  },
  "panels/network/RequestResponseView.ts | failedToLoadResponseData": {
    "message": "Échec du chargement des données de la réponse"
  },
  "panels/network/RequestResponseView.ts | thisRequestHasNoResponseData": {
    "message": "Aucune donnée de réponse disponible pour cette requête."
  },
  "panels/network/RequestTimingView.ts | cacheStorageCacheNameS": {
    "message": "Nom du cache de l'espace de stockage : {PH1}"
  },
  "panels/network/RequestTimingView.ts | cacheStorageCacheNameUnknown": {
    "message": "Nom du cache de l'espace de stockage : inconnu"
  },
  "panels/network/RequestTimingView.ts | cautionRequestIsNotFinishedYet": {
    "message": "ATTENTION : La requête n'est pas encore terminée."
  },
  "panels/network/RequestTimingView.ts | connectionStart": {
    "message": "Début de connexion"
  },
  "panels/network/RequestTimingView.ts | contentDownload": {
    "message": "Téléchargement du contenu"
  },
  "panels/network/RequestTimingView.ts | dnsLookup": {
    "message": "Résolution DNS"
  },
  "panels/network/RequestTimingView.ts | duration": {
    "message": "Durée"
  },
  "panels/network/RequestTimingView.ts | durationC": {
    "message": "DURÉE"
  },
  "panels/network/RequestTimingView.ts | duringDevelopmentYouCanUseSToAdd": {
    "message": "Pendant le développement, vous pouvez utiliser {PH1} pour ajouter des données au délai de cette requête côté serveur."
  },
  "panels/network/RequestTimingView.ts | explanation": {
    "message": "Explication"
  },
  "panels/network/RequestTimingView.ts | fallbackCode": {
    "message": "Code de remplacement"
  },
  "panels/network/RequestTimingView.ts | fromHttpCache": {
    "message": "Depuis le cache HTTP"
  },
  "panels/network/RequestTimingView.ts | initialConnection": {
    "message": "Connexion initiale"
  },
  "panels/network/RequestTimingView.ts | label": {
    "message": "Libellé"
  },
  "panels/network/RequestTimingView.ts | networkFetch": {
    "message": "Récupération du réseau"
  },
  "panels/network/RequestTimingView.ts | originalRequest": {
    "message": "Requête initiale"
  },
  "panels/network/RequestTimingView.ts | proxyNegotiation": {
    "message": "Négociation du proxy"
  },
  "panels/network/RequestTimingView.ts | queuedAtS": {
    "message": "En file d'attente depuis {PH1}"
  },
  "panels/network/RequestTimingView.ts | queueing": {
    "message": "Mise en file d'attente"
  },
  "panels/network/RequestTimingView.ts | readingPush": {
    "message": "Lecture du Push"
  },
  "panels/network/RequestTimingView.ts | receivingPush": {
    "message": "Réception du Push"
  },
  "panels/network/RequestTimingView.ts | requestSent": {
    "message": "Requête envoyée"
  },
  "panels/network/RequestTimingView.ts | requestToServiceworker": {
    "message": "Demander à ServiceWorker"
  },
  "panels/network/RequestTimingView.ts | requestresponse": {
    "message": "Requête/Réponse"
  },
  "panels/network/RequestTimingView.ts | resourceScheduling": {
    "message": "Planification des ressources"
  },
  "panels/network/RequestTimingView.ts | respondwith": {
    "message": "Répondre avec"
  },
  "panels/network/RequestTimingView.ts | responseReceived": {
    "message": "Réponse reçue"
  },
  "panels/network/RequestTimingView.ts | retrievalTimeS": {
    "message": "Temps de récupération : {PH1}"
  },
  "panels/network/RequestTimingView.ts | serverPush": {
    "message": "Server Push"
  },
  "panels/network/RequestTimingView.ts | serverTiming": {
    "message": "Server Timing"
  },
  "panels/network/RequestTimingView.ts | serviceworkerCacheStorage": {
    "message": "Espace de stockage du cache ServiceWorker"
  },
  "panels/network/RequestTimingView.ts | sourceOfResponseS": {
    "message": "Source de la réponse : {PH1}"
  },
  "panels/network/RequestTimingView.ts | ssl": {
    "message": "SSL"
  },
  "panels/network/RequestTimingView.ts | stalled": {
    "message": "Bloqué"
  },
  "panels/network/RequestTimingView.ts | startedAtS": {
    "message": "Début : {PH1}"
  },
  "panels/network/RequestTimingView.ts | startup": {
    "message": "Démarrage"
  },
  "panels/network/RequestTimingView.ts | theServerTimingApi": {
    "message": "l'API Server Timing"
  },
  "panels/network/RequestTimingView.ts | time": {
    "message": "DURÉE"
  },
  "panels/network/RequestTimingView.ts | total": {
    "message": "Total"
  },
  "panels/network/RequestTimingView.ts | unknown": {
    "message": "Inconnu"
  },
  "panels/network/RequestTimingView.ts | waitingTtfb": {
    "message": "En attente de la réponse du serveur"
  },
  "panels/network/RequestTimingView.ts | waterfall": {
    "message": "Cascade"
  },
  "panels/network/ResourceWebSocketFrameView.ts | all": {
    "message": "Tout"
  },
  "panels/network/ResourceWebSocketFrameView.ts | binaryMessage": {
    "message": "Message binaire"
  },
  "panels/network/ResourceWebSocketFrameView.ts | clearAll": {
    "message": "Tout effacer"
  },
  "panels/network/ResourceWebSocketFrameView.ts | clearAllL": {
    "message": "Tout effacer"
  },
  "panels/network/ResourceWebSocketFrameView.ts | connectionCloseMessage": {
    "message": "Message de fermeture de connexion"
  },
  "panels/network/ResourceWebSocketFrameView.ts | continuationFrame": {
    "message": "Frame de continuation"
  },
  "panels/network/ResourceWebSocketFrameView.ts | copyMessage": {
    "message": "Copier le message"
  },
  "panels/network/ResourceWebSocketFrameView.ts | copyMessageD": {
    "message": "Copie du message…"
  },
  "panels/network/ResourceWebSocketFrameView.ts | data": {
    "message": "Données"
  },
  "panels/network/ResourceWebSocketFrameView.ts | enterRegex": {
    "message": "Saisissez une expression régulière telle que (web)?socket"
  },
  "panels/network/ResourceWebSocketFrameView.ts | filter": {
    "message": "Filtrer"
  },
  "panels/network/ResourceWebSocketFrameView.ts | length": {
    "message": "Durée"
  },
  "panels/network/ResourceWebSocketFrameView.ts | na": {
    "message": "N/A"
  },
  "panels/network/ResourceWebSocketFrameView.ts | pingMessage": {
    "message": "Message ping"
  },
  "panels/network/ResourceWebSocketFrameView.ts | pongMessage": {
    "message": "Message pong"
  },
  "panels/network/ResourceWebSocketFrameView.ts | receive": {
    "message": "Recevoir"
  },
  "panels/network/ResourceWebSocketFrameView.ts | sOpcodeS": {
    "message": "{PH1} (code opération {PH2})"
  },
  "panels/network/ResourceWebSocketFrameView.ts | sOpcodeSMask": {
    "message": "{PH1} (code opération {PH2}, masque)"
  },
  "panels/network/ResourceWebSocketFrameView.ts | selectMessageToBrowseItsContent": {
    "message": "Sélectionnez le message pour accéder à son contenu."
  },
  "panels/network/ResourceWebSocketFrameView.ts | send": {
    "message": "Envoyer"
  },
  "panels/network/ResourceWebSocketFrameView.ts | textMessage": {
    "message": "SMS"
  },
  "panels/network/ResourceWebSocketFrameView.ts | time": {
    "message": "Durée"
  },
  "panels/network/ResourceWebSocketFrameView.ts | webSocketFrame": {
    "message": "Frame WebSocket"
  },
  "panels/network/SignedExchangeInfoView.ts | certificate": {
    "message": "Certificat"
  },
  "panels/network/SignedExchangeInfoView.ts | certificateSha": {
    "message": "Certificat SHA-256"
  },
  "panels/network/SignedExchangeInfoView.ts | certificateUrl": {
    "message": "URL du certificat"
  },
  "panels/network/SignedExchangeInfoView.ts | date": {
    "message": "Date"
  },
  "panels/network/SignedExchangeInfoView.ts | errors": {
    "message": "Erreurs"
  },
  "panels/network/SignedExchangeInfoView.ts | expires": {
    "message": "Date d'expiration"
  },
  "panels/network/SignedExchangeInfoView.ts | headerIntegrityHash": {
    "message": "Hashage de l'intégrité de l'en-tête"
  },
  "panels/network/SignedExchangeInfoView.ts | integrity": {
    "message": "Intégrité"
  },
  "panels/network/SignedExchangeInfoView.ts | issuer": {
    "message": "Émetteur"
  },
  "panels/network/SignedExchangeInfoView.ts | label": {
    "message": "Libellé"
  },
  "panels/network/SignedExchangeInfoView.ts | learnmore": {
    "message": "En savoir plus"
  },
  "panels/network/SignedExchangeInfoView.ts | requestUrl": {
    "message": "URL de requête"
  },
  "panels/network/SignedExchangeInfoView.ts | responseCode": {
    "message": "Code de réponse"
  },
  "panels/network/SignedExchangeInfoView.ts | responseHeaders": {
    "message": "En-têtes de réponse"
  },
  "panels/network/SignedExchangeInfoView.ts | signature": {
    "message": "Signature"
  },
  "panels/network/SignedExchangeInfoView.ts | signedHttpExchange": {
    "message": "Signed HTTP Exchange"
  },
  "panels/network/SignedExchangeInfoView.ts | subject": {
    "message": "Objet"
  },
  "panels/network/SignedExchangeInfoView.ts | validFrom": {
    "message": "Valide à partir du"
  },
  "panels/network/SignedExchangeInfoView.ts | validUntil": {
    "message": "Valable jusqu'au"
  },
  "panels/network/SignedExchangeInfoView.ts | validityUrl": {
    "message": "URL de validité"
  },
  "panels/network/SignedExchangeInfoView.ts | viewCertificate": {
    "message": "Afficher le certificat"
  },
  "panels/network/components/HeaderSectionRow.ts | activeClientExperimentVariation": {
    "message": "client experiment variation IDs actifs."
  },
  "panels/network/components/HeaderSectionRow.ts | activeClientExperimentVariationIds": {
    "message": "client experiment variation IDs actifs qui déclenchent un comportement côté serveur."
  },
  "panels/network/components/HeaderSectionRow.ts | decoded": {
    "message": "Décodées :"
  },
  "panels/network/components/HeaderSectionRow.ts | editHeader": {
    "message": "Ignorer l'en-tête"
  },
  "panels/network/components/HeaderSectionRow.ts | headerNamesOnlyLetters": {
    "message": "Les noms d'en-têtes ne doivent contenir que des lettres, des chiffres, des traits d'union ou des traits de soulignement"
  },
  "panels/network/components/HeaderSectionRow.ts | learnMore": {
    "message": "En savoir plus"
  },
  "panels/network/components/HeaderSectionRow.ts | learnMoreInTheIssuesTab": {
    "message": "En savoir plus dans l'onglet des problèmes"
  },
  "panels/network/components/HeaderSectionRow.ts | reloadPrompt": {
    "message": "Actualisez la page/demande pour que ces modifications soient prises en compte"
  },
  "panels/network/components/HeaderSectionRow.ts | removeOverride": {
    "message": "Supprimer le forçage de cet en-tête"
  },
  "panels/network/components/RequestHeaderSection.ts | learnMore": {
    "message": "En savoir plus"
  },
  "panels/network/components/RequestHeaderSection.ts | onlyProvisionalHeadersAre": {
    "message": "Seuls les en-têtes provisoires sont disponibles, car cette requête n'a pas été envoyée sur le réseau, mais diffusée depuis un cache local qui ne stocke pas les en-têtes de requête d'origine. Désactivez le cache pour voir les en-têtes de requête complets."
  },
  "panels/network/components/RequestHeaderSection.ts | provisionalHeadersAreShown": {
    "message": "Les en-têtes affichés sont provisoires."
  },
  "panels/network/components/RequestHeaderSection.ts | provisionalHeadersAreShownDisableCache": {
    "message": "Les en-têtes affichés sont provisoires. Désactivez le cache pour voir les en-têtes complets."
  },
  "panels/network/components/RequestHeadersView.ts | fromDiskCache": {
    "message": "(à partir du cache du disque)"
  },
  "panels/network/components/RequestHeadersView.ts | fromMemoryCache": {
    "message": "(depuis le cache mémoire)"
  },
  "panels/network/components/RequestHeadersView.ts | fromPrefetchCache": {
    "message": "(à partir du cache de préchargement)"
  },
  "panels/network/components/RequestHeadersView.ts | fromServiceWorker": {
    "message": "(à partir de service worker)"
  },
  "panels/network/components/RequestHeadersView.ts | fromSignedexchange": {
    "message": "(à partir de l'échange signé)"
  },
  "panels/network/components/RequestHeadersView.ts | fromWebBundle": {
    "message": "(depuis Web Bundle)"
  },
  "panels/network/components/RequestHeadersView.ts | general": {
    "message": "Général"
  },
  "panels/network/components/RequestHeadersView.ts | raw": {
    "message": "Brut"
  },
  "panels/network/components/RequestHeadersView.ts | referrerPolicy": {
    "message": "Règlement sur les URL de provenance"
  },
  "panels/network/components/RequestHeadersView.ts | remoteAddress": {
    "message": "Adresse distante"
  },
  "panels/network/components/RequestHeadersView.ts | requestHeaders": {
    "message": "En-têtes de requête"
  },
  "panels/network/components/RequestHeadersView.ts | requestMethod": {
    "message": "Méthode de requête"
  },
  "panels/network/components/RequestHeadersView.ts | requestUrl": {
    "message": "URL de requête"
  },
  "panels/network/components/RequestHeadersView.ts | responseHeaders": {
    "message": "En-têtes de réponse"
  },
  "panels/network/components/RequestHeadersView.ts | revealHeaderOverrides": {
    "message": "Afficher les définitions de forçage d'en-tête"
  },
  "panels/network/components/RequestHeadersView.ts | showMore": {
    "message": "Plus"
  },
  "panels/network/components/RequestHeadersView.ts | statusCode": {
    "message": "Code d'état"
  },
  "panels/network/components/RequestTrustTokensView.ts | aClientprovidedArgumentWas": {
    "message": "Un argument fourni par le client était mal formé ou autrement non valide."
  },
  "panels/network/components/RequestTrustTokensView.ts | eitherNoInputsForThisOperation": {
    "message": "Soit aucune entrée n'est disponible pour cette opération, soit la sortie dépasse le quota d'opérations."
  },
  "panels/network/components/RequestTrustTokensView.ts | failure": {
    "message": "Échec"
  },
  "panels/network/components/RequestTrustTokensView.ts | issuer": {
    "message": "Émetteur"
  },
  "panels/network/components/RequestTrustTokensView.ts | issuers": {
    "message": "Émetteurs"
  },
  "panels/network/components/RequestTrustTokensView.ts | numberOfIssuedTokens": {
    "message": "Nombre de jetons émis"
  },
  "panels/network/components/RequestTrustTokensView.ts | parameters": {
    "message": "Paramètres"
  },
  "panels/network/components/RequestTrustTokensView.ts | refreshPolicy": {
    "message": "Règle d'actualisation"
  },
  "panels/network/components/RequestTrustTokensView.ts | result": {
    "message": "Résultat"
  },
  "panels/network/components/RequestTrustTokensView.ts | status": {
    "message": "État"
  },
  "panels/network/components/RequestTrustTokensView.ts | success": {
    "message": "Opération réussie"
  },
  "panels/network/components/RequestTrustTokensView.ts | theKeysForThisPSTIssuerAreUnavailable": {
    "message": "Les clés de cet émetteur PST ne sont pas disponibles. L'émetteur devra peut-être être enregistré via le processus d'enregistrement Chrome."
  },
  "panels/network/components/RequestTrustTokensView.ts | theOperationFailedForAnUnknown": {
    "message": "Échec de l'opération pour une raison inconnue."
  },
  "panels/network/components/RequestTrustTokensView.ts | theOperationWasFulfilledLocally": {
    "message": "L'opération a été réalisée en local. Aucune requête n'a été envoyée."
  },
  "panels/network/components/RequestTrustTokensView.ts | theOperationsResultWasServedFrom": {
    "message": "Résultat des opérations diffusé à partir du cache."
  },
  "panels/network/components/RequestTrustTokensView.ts | theServersResponseWasMalformedOr": {
    "message": "Réponse du serveur incorrecte ou non valide."
  },
  "panels/network/components/RequestTrustTokensView.ts | topLevelOrigin": {
    "message": "Origine de niveau supérieur"
  },
  "panels/network/components/RequestTrustTokensView.ts | type": {
    "message": "Type"
  },
  "panels/network/components/ResponseHeaderSection.ts | addHeader": {
    "message": "Ajouter un en-tête"
  },
  "panels/network/components/ResponseHeaderSection.ts | chooseThisOptionIfTheResourceAnd": {
    "message": "Sélectionnez cette option si la ressource et le document sont diffusés à partir du même site."
  },
  "panels/network/components/ResponseHeaderSection.ts | onlyChooseThisOptionIfAn": {
    "message": "Ne sélectionnez cette option que si un site Web arbitraire incluant cette ressource ne présente pas de risque de sécurité."
  },
  "panels/network/components/ResponseHeaderSection.ts | thisDocumentWasBlockedFrom": {
    "message": "Le chargement du document dans un pop-up ouvert par un iFrame en bac à sable a été bloqué en raison d'une règle d'ouverture multi-origine spécifiée pour ce document."
  },
  "panels/network/components/ResponseHeaderSection.ts | toEmbedThisFrameInYourDocument": {
    "message": "Pour intégrer cette image à votre document, la réponse doit activer la règle d'intégrateur multi-origine en spécifiant l'en-tête de réponse suivant :"
  },
  "panels/network/components/ResponseHeaderSection.ts | toUseThisResourceFromADifferent": {
    "message": "Pour utiliser cette ressource depuis une autre origine, le serveur doit spécifier une règle pour les ressources multi-origines dans les en-têtes de réponse :"
  },
  "panels/network/components/ResponseHeaderSection.ts | toUseThisResourceFromADifferentOrigin": {
    "message": "Pour utiliser cette ressource depuis une autre origine, le serveur peut libérer l'en-tête de la réponse de la règle sur les ressources multi-origines :"
  },
  "panels/network/components/ResponseHeaderSection.ts | toUseThisResourceFromADifferentSite": {
    "message": "Pour utiliser cette ressource depuis un autre site, le serveur peut libérer l'en-tête de la réponse de la règle sur les ressources multi-origines :"
  },
  "panels/network/components/WebBundleInfoView.ts | bundledResource": {
    "message": "Ressource dans un Web Bundle"
  },
  "panels/network/network-meta.ts | addNetworkRequestBlockingPattern": {
    "message": "Ajouter un schéma de blocage de requête réseau"
  },
  "panels/network/network-meta.ts | clear": {
    "message": "Effacer le journal réseau"
  },
  "panels/network/network-meta.ts | colorCode": {
    "message": "code couleur"
  },
  "panels/network/network-meta.ts | colorCodeByResourceType": {
    "message": "Code couleur par type de ressource"
  },
  "panels/network/network-meta.ts | colorcodeResourceTypes": {
    "message": "Attribuer un code couleurs aux types de ressources"
  },
  "panels/network/network-meta.ts | diskCache": {
    "message": "cache du disque"
  },
  "panels/network/network-meta.ts | dontGroupNetworkLogItemsByFrame": {
    "message": "Ne pas regrouper les éléments du journal réseau par frame"
  },
  "panels/network/network-meta.ts | frame": {
    "message": "frame"
  },
  "panels/network/network-meta.ts | group": {
    "message": "groupe"
  },
  "panels/network/network-meta.ts | groupNetworkLogByFrame": {
    "message": "Regrouper le journal du réseau par frame"
  },
  "panels/network/network-meta.ts | groupNetworkLogItemsByFrame": {
    "message": "Regrouper les éléments du journal réseau par frame"
  },
  "panels/network/network-meta.ts | hideRequestDetails": {
    "message": "Masquer les détails de la requête"
  },
  "panels/network/network-meta.ts | netWork": {
    "message": "réseau"
  },
  "panels/network/network-meta.ts | network": {
    "message": "Réseau"
  },
  "panels/network/network-meta.ts | networkConditions": {
    "message": "Conditions du réseau"
  },
  "panels/network/network-meta.ts | networkRequestBlocking": {
    "message": "Blocage de requête réseau"
  },
  "panels/network/network-meta.ts | networkThrottling": {
    "message": "limitation de bande passante réseau"
  },
  "panels/network/network-meta.ts | recordNetworkLog": {
    "message": "Enregistrer le journal réseau"
  },
  "panels/network/network-meta.ts | removeAllNetworkRequestBlockingPatterns": {
    "message": "Supprimer tous les schémas de blocage des requêtes réseau"
  },
  "panels/network/network-meta.ts | resourceType": {
    "message": "type de ressource"
  },
  "panels/network/network-meta.ts | search": {
    "message": "Rechercher"
  },
  "panels/network/network-meta.ts | showNetwork": {
    "message": "Afficher le panneau \"Réseau\""
  },
  "panels/network/network-meta.ts | showNetworkConditions": {
    "message": "Afficher l'état du réseau"
  },
  "panels/network/network-meta.ts | showNetworkRequestBlocking": {
    "message": "Afficher le blocage des requêtes réseau"
  },
  "panels/network/network-meta.ts | showSearch": {
    "message": "Afficher la recherche"
  },
  "panels/network/network-meta.ts | stopRecordingNetworkLog": {
    "message": "Arrêter l'enregistrement du journal réseau"
  },
  "panels/network/network-meta.ts | useDefaultColors": {
    "message": "Utiliser les couleurs par défaut"
  },
  "panels/performance_monitor/PerformanceMonitor.ts | cpuUsage": {
    "message": "Utilisation de l'UC"
  },
  "panels/performance_monitor/PerformanceMonitor.ts | documentFrames": {
    "message": "Frames de document"
  },
  "panels/performance_monitor/PerformanceMonitor.ts | documents": {
    "message": "Documents"
  },
  "panels/performance_monitor/PerformanceMonitor.ts | domNodes": {
    "message": "Nœuds DOM"
  },
  "panels/performance_monitor/PerformanceMonitor.ts | graphsDisplayingARealtimeViewOf": {
    "message": "Graphiques des mesures de performances en temps réel"
  },
  "panels/performance_monitor/PerformanceMonitor.ts | jsEventListeners": {
    "message": "Écouteurs d'événements JS"
  },
  "panels/performance_monitor/PerformanceMonitor.ts | jsHeapSize": {
    "message": "Taille du segment de mémoire JS"
  },
  "panels/performance_monitor/PerformanceMonitor.ts | layoutsSec": {
    "message": "Calques par seconde"
  },
  "panels/performance_monitor/PerformanceMonitor.ts | paused": {
    "message": "En pause"
  },
  "panels/performance_monitor/PerformanceMonitor.ts | styleRecalcsSec": {
    "message": "Nouveaux calculs de styles par seconde"
  },
  "panels/performance_monitor/performance_monitor-meta.ts | activity": {
    "message": "activité"
  },
  "panels/performance_monitor/performance_monitor-meta.ts | metrics": {
    "message": "Statistiques"
  },
  "panels/performance_monitor/performance_monitor-meta.ts | monitor": {
    "message": "moniteur"
  },
  "panels/performance_monitor/performance_monitor-meta.ts | performance": {
    "message": "performance"
  },
  "panels/performance_monitor/performance_monitor-meta.ts | performanceMonitor": {
    "message": "Surveillance des performances"
  },
  "panels/performance_monitor/performance_monitor-meta.ts | showPerformanceMonitor": {
    "message": "Afficher l'analyseur de performances"
  },
  "panels/performance_monitor/performance_monitor-meta.ts | systemMonitor": {
    "message": "outil de surveillance système"
  },
  "panels/profiler/CPUProfileView.ts | aggregatedSelfTime": {
    "message": "Cumul de la durée de l'activité"
  },
  "panels/profiler/CPUProfileView.ts | aggregatedTotalTime": {
    "message": "Temps total cumulé"
  },
  "panels/profiler/CPUProfileView.ts | cpuProfiles": {
    "message": "PROFILS DE PROCESSEUR"
  },
  "panels/profiler/CPUProfileView.ts | cpuProfilesShow": {
    "message": "Les profils de processeur indiquent à quoi correspond le temps d'exécution dans les fonctions JavaScript de votre page."
  },
  "panels/profiler/CPUProfileView.ts | fms": {
    "message": "{PH1} ms"
  },
  "panels/profiler/CPUProfileView.ts | formatPercent": {
    "message": "{PH1} %"
  },
  "panels/profiler/CPUProfileView.ts | name": {
    "message": "Nom"
  },
  "panels/profiler/CPUProfileView.ts | notOptimized": {
    "message": "Non optimisé"
  },
  "panels/profiler/CPUProfileView.ts | recordJavascriptCpuProfile": {
    "message": "Enregistrer le profil du processeur JavaScript"
  },
  "panels/profiler/CPUProfileView.ts | recording": {
    "message": "Enregistrement…"
  },
  "panels/profiler/CPUProfileView.ts | selfTime": {
    "message": "Durée individuelle"
  },
  "panels/profiler/CPUProfileView.ts | startCpuProfiling": {
    "message": "Lancer le profilage du processeur"
  },
  "panels/profiler/CPUProfileView.ts | stopCpuProfiling": {
    "message": "Arrêter le profilage du processeur"
  },
  "panels/profiler/CPUProfileView.ts | totalTime": {
    "message": "Durée totale"
  },
  "panels/profiler/CPUProfileView.ts | url": {
    "message": "URL"
  },
  "panels/profiler/HeapProfileView.ts | allocationSampling": {
    "message": "Échantillonnage d'allocation"
  },
  "panels/profiler/HeapProfileView.ts | formatPercent": {
    "message": "{PH1} %"
  },
  "panels/profiler/HeapProfileView.ts | heapProfilerIsRecording": {
    "message": "Le profileur de segments de mémoire est en train d'enregistrer des données"
  },
  "panels/profiler/HeapProfileView.ts | itProvidesGoodApproximation": {
    "message": "Fournit une bonne estimation des allocations réparties par pile d'exécution JavaScript."
  },
  "panels/profiler/HeapProfileView.ts | name": {
    "message": "Nom"
  },
  "panels/profiler/HeapProfileView.ts | profileD": {
    "message": "Profil {PH1}"
  },
  "panels/profiler/HeapProfileView.ts | recordMemoryAllocations": {
    "message": "Enregistrer les allocations de mémoire en utilisant la méthode d'échantillonnage."
  },
  "panels/profiler/HeapProfileView.ts | recording": {
    "message": "Enregistrement…"
  },
  "panels/profiler/HeapProfileView.ts | sBytes": {
    "message": "{PH1} octets"
  },
  "panels/profiler/HeapProfileView.ts | samplingProfiles": {
    "message": "PROFILS TESTS"
  },
  "panels/profiler/HeapProfileView.ts | selectedSizeS": {
    "message": "Taille sélectionnée : {PH1}"
  },
  "panels/profiler/HeapProfileView.ts | selfSize": {
    "message": "Dimensionnement automatique"
  },
  "panels/profiler/HeapProfileView.ts | selfSizeBytes": {
    "message": "Dimensionnement automatique (octets)"
  },
  "panels/profiler/HeapProfileView.ts | skb": {
    "message": "{PH1} ko"
  },
  "panels/profiler/HeapProfileView.ts | startHeapProfiling": {
    "message": "Démarrer la création de profil de segment de mémoire"
  },
  "panels/profiler/HeapProfileView.ts | stopHeapProfiling": {
    "message": "Arrêter le profilage du segment de mémoire"
  },
  "panels/profiler/HeapProfileView.ts | stopping": {
    "message": "Arrêt…"
  },
  "panels/profiler/HeapProfileView.ts | thisProfileTypeHasMinimal": {
    "message": "Ce type de profil, dont le coût sur les performances est minime, peut être utilisé pour des opérations de longue durée."
  },
  "panels/profiler/HeapProfileView.ts | totalSize": {
    "message": "Taille totale"
  },
  "panels/profiler/HeapProfileView.ts | totalSizeBytes": {
    "message": "Taille totale (octets)"
  },
  "panels/profiler/HeapProfileView.ts | url": {
    "message": "URL"
  },
  "panels/profiler/HeapProfilerPanel.ts | revealInSummaryView": {
    "message": "Afficher dans la vue \"Résumé\""
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | Deleted": {
    "message": "# supprimé"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | Delta": {
    "message": "# Delta"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | New": {
    "message": "# nouveaux"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | allocSize": {
    "message": "Alloc. Taille"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | allocation": {
    "message": "Allocation"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | constructorString": {
    "message": "Constructeur"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | count": {
    "message": "Nombre"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | distance": {
    "message": "Distance"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | distanceFromWindowObject": {
    "message": "Distance par rapport à l'objet fenêtre"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | freedSize": {
    "message": "Taille libérée"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | function": {
    "message": "Fonction"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | heapSnapshotConstructors": {
    "message": "Constructeurs d'instantanés de segments de mémoire"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | heapSnapshotDiff": {
    "message": "Diff. instantané de segment de mémoire"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | heapSnapshotRetainment": {
    "message": "Conservation d'instantané de segment de mémoire"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | liveCount": {
    "message": "Nombre actif"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | liveSize": {
    "message": "Taille active"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | object": {
    "message": "Objet"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | retainedSize": {
    "message": "Taille conservée"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | shallowSize": {
    "message": "Taille peu profonde"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | size": {
    "message": "Taille"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | sizeDelta": {
    "message": "Delta de la taille"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | sizeOfTheObjectItselfInBytes": {
    "message": "Taille de l'objet lui-même en octets"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | sizeOfTheObjectPlusTheGraphIt": {
    "message": "Taille de l'objet plus le graphique qu'il contient (en octets)"
  },
  "panels/profiler/HeapSnapshotGridNodes.ts | detachedFromDomTree": {
    "message": "Dissocié de l'arborescence DOM"
  },
  "panels/profiler/HeapSnapshotGridNodes.ts | genericStringsTwoPlaceholders": {
    "message": "{PH1}, {PH2}"
  },
  "panels/profiler/HeapSnapshotGridNodes.ts | inElement": {
    "message": "dans"
  },
  "panels/profiler/HeapSnapshotGridNodes.ts | internalArray": {
    "message": "(tableau interne)[]"
  },
  "panels/profiler/HeapSnapshotGridNodes.ts | previewIsNotAvailable": {
    "message": "Aperçu non disponible"
  },
  "panels/profiler/HeapSnapshotGridNodes.ts | revealInSummaryView": {
    "message": "Afficher dans la vue \"Résumé\""
  },
  "panels/profiler/HeapSnapshotGridNodes.ts | revealObjectSWithIdSInSummary": {
    "message": "Afficher l'objet \"{PH1}\" ayant l'ID @{PH2} dans la vue Résumé"
  },
  "panels/profiler/HeapSnapshotGridNodes.ts | storeAsGlobalVariable": {
    "message": "Stocker en tant que variable globale"
  },
  "panels/profiler/HeapSnapshotGridNodes.ts | summary": {
    "message": "Résumé"
  },
  "panels/profiler/HeapSnapshotGridNodes.ts | userObjectReachableFromWindow": {
    "message": "Objet utilisateur accessible depuis la fenêtre"
  },
  "panels/profiler/HeapSnapshotProxy.ts | anErrorOccurredWhenACallToMethod": {
    "message": "Une erreur s'est produite lorsque la méthode \"{PH1}\" a été demandée"
  },
  "panels/profiler/HeapSnapshotView.ts | AllocationTimelinesShowInstrumented": {
    "message": "Les chronologies d'allocation montrent les allocations de mémoire JavaScript instrumentées au fil du temps. Une fois le profil enregistré, vous pouvez sélectionner un intervalle de temps pour voir les objets qui y ont été alloués et étaient toujours actifs à la fin de l'enregistrement. Utilisez ce type de profil pour isoler les fuites de mémoire."
  },
  "panels/profiler/HeapSnapshotView.ts | allObjects": {
    "message": "Tous les objets"
  },
  "panels/profiler/HeapSnapshotView.ts | allocation": {
    "message": "Allocation"
  },
  "panels/profiler/HeapSnapshotView.ts | allocationInstrumentationOn": {
    "message": "Instrumentation d'allocations figurant dans la chronologie"
  },
  "panels/profiler/HeapSnapshotView.ts | allocationStack": {
    "message": "Pile d'allocation"
  },
  "panels/profiler/HeapSnapshotView.ts | allocationTimelines": {
    "message": "CHRONOLOGIE D'ALLOCATION"
  },
  "panels/profiler/HeapSnapshotView.ts | baseSnapshot": {
    "message": "Instantané pour la base"
  },
  "panels/profiler/HeapSnapshotView.ts | captureNumericValue": {
    "message": "Inclure les valeurs numériques dans la capture"
  },
  "panels/profiler/HeapSnapshotView.ts | classFilter": {
    "message": "Filtre de classe"
  },
  "panels/profiler/HeapSnapshotView.ts | code": {
    "message": "Code"
  },
  "panels/profiler/HeapSnapshotView.ts | comparison": {
    "message": "Comparaison"
  },
  "panels/profiler/HeapSnapshotView.ts | containment": {
    "message": "Endiguement"
  },
  "panels/profiler/HeapSnapshotView.ts | exposeInternals": {
    "message": "Exposez les éléments internes (y compris des détails supplémentaires propres à l'implémentation)"
  },
  "panels/profiler/HeapSnapshotView.ts | filter": {
    "message": "Filtrer"
  },
  "panels/profiler/HeapSnapshotView.ts | find": {
    "message": "Rechercher"
  },
  "panels/profiler/HeapSnapshotView.ts | heapMemoryUsage": {
    "message": "Utilisation du segment de mémoire"
  },
  "panels/profiler/HeapSnapshotView.ts | heapSnapshot": {
    "message": "Instantané de segment de mémoire"
  },
  "panels/profiler/HeapSnapshotView.ts | heapSnapshotProfilesShowMemory": {
    "message": "Les profils d'instantané de segment de mémoire montrent comment la mémoire est répartie entre les objets JavaScript et les nœuds DOM associés de votre page."
  },
  "panels/profiler/HeapSnapshotView.ts | heapSnapshots": {
    "message": "INSTANTANÉS DE SEGMENT DE MÉMOIRE"
  },
  "panels/profiler/HeapSnapshotView.ts | jsArrays": {
    "message": "Tableaux JS"
  },
  "panels/profiler/HeapSnapshotView.ts | liveObjects": {
    "message": "Objets live"
  },
  "panels/profiler/HeapSnapshotView.ts | loading": {
    "message": "Chargement…"
  },
  "panels/profiler/HeapSnapshotView.ts | objectsAllocatedBeforeS": {
    "message": "Objets alloués avant {PH1}"
  },
  "panels/profiler/HeapSnapshotView.ts | objectsAllocatedBetweenSAndS": {
    "message": "Objets alloués entre le {PH1} et le {PH2}"
  },
  "panels/profiler/HeapSnapshotView.ts | percentagePlaceholder": {
    "message": "{PH1} %"
  },
  "panels/profiler/HeapSnapshotView.ts | perspective": {
    "message": "Perspective"
  },
  "panels/profiler/HeapSnapshotView.ts | recordAllocationStacksExtra": {
    "message": "Enregistrer les traces de pile des allocations (surcharge des performances supplémentaire)"
  },
  "panels/profiler/HeapSnapshotView.ts | recording": {
    "message": "Enregistrement…"
  },
  "panels/profiler/HeapSnapshotView.ts | retainers": {
    "message": "Éléments de conservation"
  },
  "panels/profiler/HeapSnapshotView.ts | savingD": {
    "message": "Enregistrement… {PH1} %"
  },
  "panels/profiler/HeapSnapshotView.ts | selectedSizeS": {
    "message": "Taille sélectionnée : {PH1}"
  },
  "panels/profiler/HeapSnapshotView.ts | snapshotD": {
    "message": "Instantané {PH1}"
  },
  "panels/profiler/HeapSnapshotView.ts | snapshotting": {
    "message": "Création d'instantanés…"
  },
  "panels/profiler/HeapSnapshotView.ts | stackWasNotRecordedForThisObject": {
    "message": "La pile n'a pas été enregistrée pour cet objet, car elle a été allouée avant que l'enregistrement du profil ne démarre."
  },
  "panels/profiler/HeapSnapshotView.ts | startRecordingHeapProfile": {
    "message": "Démarrer l'enregistrement du profil de segment de mémoire"
  },
  "panels/profiler/HeapSnapshotView.ts | statistics": {
    "message": "Statistiques"
  },
  "panels/profiler/HeapSnapshotView.ts | stopRecordingHeapProfile": {
    "message": "Arrêter l'enregistrement du profileur de segments de mémoire"
  },
  "panels/profiler/HeapSnapshotView.ts | strings": {
    "message": "Chaînes"
  },
  "panels/profiler/HeapSnapshotView.ts | summary": {
    "message": "Résumé"
  },
  "panels/profiler/HeapSnapshotView.ts | systemObjects": {
    "message": "Objets système"
  },
  "panels/profiler/HeapSnapshotView.ts | takeHeapSnapshot": {
    "message": "Prendre un instantané de segment de mémoire"
  },
  "panels/profiler/HeapSnapshotView.ts | typedArrays": {
    "message": "Tableaux saisis"
  },
  "panels/profiler/IsolateSelector.ts | changeRate": {
    "message": "{PH1}/s"
  },
  "panels/profiler/IsolateSelector.ts | decreasingBySPerSecond": {
    "message": "diminution de {PH1} par seconde"
  },
  "panels/profiler/IsolateSelector.ts | empty": {
    "message": "(vide)"
  },
  "panels/profiler/IsolateSelector.ts | heapSizeChangeTrendOverTheLastS": {
    "message": "Tendance de changement de la taille de segment de mémoire au cours des {PH1} dernières minutes."
  },
  "panels/profiler/IsolateSelector.ts | heapSizeInUseByLiveJsObjects": {
    "message": "Taille du tas utilisée par les objets JS actifs."
  },
  "panels/profiler/IsolateSelector.ts | increasingBySPerSecond": {
    "message": "augmentation de {PH1} par seconde"
  },
  "panels/profiler/IsolateSelector.ts | javascriptVmInstances": {
    "message": "Instances de VM pour JavaScript"
  },
  "panels/profiler/IsolateSelector.ts | totalJsHeapSize": {
    "message": "Taille totale du segment de mémoire JS"
  },
  "panels/profiler/IsolateSelector.ts | totalPageJsHeapSizeAcrossAllVm": {
    "message": "Taille de segment de mémoire JS pour toutes les pages sur toutes les instances de VM"
  },
  "panels/profiler/IsolateSelector.ts | totalPageJsHeapSizeChangeTrend": {
    "message": "Tendance de changement de la taille de segment de mémoire JS pour toutes les pages au cours des {PH1} dernières minutes."
  },
  "panels/profiler/LiveHeapProfileView.ts | allocatedJsHeapSizeCurrentlyIn": {
    "message": "Taille du segment de mémoire JS alloué actuellement utilisée"
  },
  "panels/profiler/LiveHeapProfileView.ts | anonymousScriptS": {
    "message": "(script anonyme {PH1})"
  },
  "panels/profiler/LiveHeapProfileView.ts | heapProfile": {
    "message": "Profil de segment de mémoire"
  },
  "panels/profiler/LiveHeapProfileView.ts | jsHeap": {
    "message": "Segment de mémoire JS"
  },
  "panels/profiler/LiveHeapProfileView.ts | kb": {
    "message": "ko"
  },
  "panels/profiler/LiveHeapProfileView.ts | numberOfVmsSharingTheSameScript": {
    "message": "Nombre de VM partageant la même source de script"
  },
  "panels/profiler/LiveHeapProfileView.ts | scriptUrl": {
    "message": "URL de script"
  },
  "panels/profiler/LiveHeapProfileView.ts | urlOfTheScriptSource": {
    "message": "URL de la source du script"
  },
  "panels/profiler/LiveHeapProfileView.ts | vms": {
    "message": "VM"
  },
  "panels/profiler/ModuleUIStrings.ts | buildingAllocationStatistics": {
    "message": "Création des statistiques d'allocation…"
  },
  "panels/profiler/ModuleUIStrings.ts | buildingDominatedNodes": {
    "message": "Création de nœuds dominés…"
  },
  "panels/profiler/ModuleUIStrings.ts | buildingDominatorTree": {
    "message": "Création d'une arborescence de dominateurs…"
  },
  "panels/profiler/ModuleUIStrings.ts | buildingEdgeIndexes": {
    "message": "Création des index de liaison…"
  },
  "panels/profiler/ModuleUIStrings.ts | buildingLocations": {
    "message": "Création des emplacements…"
  },
  "panels/profiler/ModuleUIStrings.ts | buildingPostorderIndex": {
    "message": "Création de l'index Postorder…"
  },
  "panels/profiler/ModuleUIStrings.ts | buildingRetainers": {
    "message": "Création d'éléments de conservation…"
  },
  "panels/profiler/ModuleUIStrings.ts | calculatingDistances": {
    "message": "Calcul des distances…"
  },
  "panels/profiler/ModuleUIStrings.ts | calculatingNodeFlags": {
    "message": "Calcul des indicateurs de nœud…"
  },
  "panels/profiler/ModuleUIStrings.ts | calculatingRetainedSizes": {
    "message": "Calcul des tailles conservées…"
  },
  "panels/profiler/ModuleUIStrings.ts | calculatingSamples": {
    "message": "Calcul des échantillons…"
  },
  "panels/profiler/ModuleUIStrings.ts | calculatingStatistics": {
    "message": "Calcul des statistiques…"
  },
  "panels/profiler/ModuleUIStrings.ts | done": {
    "message": "OK"
  },
  "panels/profiler/ModuleUIStrings.ts | finishedProcessing": {
    "message": "Traitement terminé."
  },
  "panels/profiler/ModuleUIStrings.ts | loadingAllocationTracesD": {
    "message": "Chargement des traces d'allocation ({PH1} %)…"
  },
  "panels/profiler/ModuleUIStrings.ts | loadingEdgesD": {
    "message": "Chargement des bordures… {PH1} %"
  },
  "panels/profiler/ModuleUIStrings.ts | loadingLocations": {
    "message": "Chargement des emplacements…"
  },
  "panels/profiler/ModuleUIStrings.ts | loadingNodesD": {
    "message": "Chargement des nœuds… {PH1} %"
  },
  "panels/profiler/ModuleUIStrings.ts | loadingSamples": {
    "message": "Chargement des échantillons…"
  },
  "panels/profiler/ModuleUIStrings.ts | loadingSnapshotInfo": {
    "message": "Chargement des infos de l'instantané…"
  },
  "panels/profiler/ModuleUIStrings.ts | loadingStrings": {
    "message": "Chargement des chaînes…"
  },
  "panels/profiler/ModuleUIStrings.ts | parsingStrings": {
    "message": "Analyse des chaînes…"
  },
  "panels/profiler/ModuleUIStrings.ts | processingSnapshot": {
    "message": "Traitement de l'instantané…"
  },
  "panels/profiler/ModuleUIStrings.ts | propagatingDomState": {
    "message": "Propagation de l'état DOM…"
  },
  "panels/profiler/ProfileDataGrid.ts | genericTextTwoPlaceholders": {
    "message": "{PH1}, {PH2}"
  },
  "panels/profiler/ProfileDataGrid.ts | notOptimizedS": {
    "message": "Non optimisé : {PH1}"
  },
  "panels/profiler/ProfileLauncherView.ts | load": {
    "message": "Charger"
  },
  "panels/profiler/ProfileLauncherView.ts | selectJavascriptVmInstance": {
    "message": "Sélectionner l'instance de VM JavaScript"
  },
  "panels/profiler/ProfileLauncherView.ts | selectProfilingType": {
    "message": "Sélectionner le type de profilage"
  },
  "panels/profiler/ProfileLauncherView.ts | start": {
    "message": "Démarrer"
  },
  "panels/profiler/ProfileLauncherView.ts | stop": {
    "message": "Arrêter"
  },
  "panels/profiler/ProfileLauncherView.ts | takeSnapshot": {
    "message": "Réaliser un instantané"
  },
  "panels/profiler/ProfileSidebarTreeElement.ts | profileOptions": {
    "message": "Options de profil"
  },
  "panels/profiler/ProfileView.ts | chart": {
    "message": "Graphique"
  },
  "panels/profiler/ProfileView.ts | excludeSelectedFunction": {
    "message": "Exclure la fonction sélectionnée"
  },
  "panels/profiler/ProfileView.ts | failedToReadFile": {
    "message": "Échec de la lecture du fichier"
  },
  "panels/profiler/ProfileView.ts | fileSReadErrorS": {
    "message": "Erreur de lecture du fichier \"{PH1}\" : {PH2}"
  },
  "panels/profiler/ProfileView.ts | findByCostMsNameOrFile": {
    "message": "Rechercher par coût (>50 ms), nom ou fichier"
  },
  "panels/profiler/ProfileView.ts | focusSelectedFunction": {
    "message": "Mettre en évidence la fonction sélectionnée"
  },
  "panels/profiler/ProfileView.ts | function": {
    "message": "Fonction"
  },
  "panels/profiler/ProfileView.ts | heavyBottomUp": {
    "message": "Lourd (de bas en haut)"
  },
  "panels/profiler/ProfileView.ts | loaded": {
    "message": "Chargement terminé"
  },
  "panels/profiler/ProfileView.ts | loading": {
    "message": "Chargement…"
  },
  "panels/profiler/ProfileView.ts | loadingD": {
    "message": "Chargement ({PH1} %)…"
  },
  "panels/profiler/ProfileView.ts | parsing": {
    "message": "Analyse…"
  },
  "panels/profiler/ProfileView.ts | profile": {
    "message": "Profil"
  },
  "panels/profiler/ProfileView.ts | profileD": {
    "message": "Profil {PH1}"
  },
  "panels/profiler/ProfileView.ts | profileViewMode": {
    "message": "Mode de consultation du profil"
  },
  "panels/profiler/ProfileView.ts | profiler": {
    "message": "Profileur"
  },
  "panels/profiler/ProfileView.ts | restoreAllFunctions": {
    "message": "Rétablir toutes les fonctions"
  },
  "panels/profiler/ProfileView.ts | treeTopDown": {
    "message": "Arborescence (descendante)"
  },
  "panels/profiler/ProfilesPanel.ts | cantLoadFileSupportedFile": {
    "message": "Impossible de charger le fichier. Extensions de fichier compatibles : \"{PH1}\"."
  },
  "panels/profiler/ProfilesPanel.ts | cantLoadProfileWhileAnother": {
    "message": "Impossible de charger un profil quand un autre est en cours d'enregistrement."
  },
  "panels/profiler/ProfilesPanel.ts | deprecationWarnMsg": {
    "message": "Ce panneau sera abandonné dans la prochaine version. Utilisez le panneau \"Performances\" pour enregistrer des profils de processeur JavaScript."
  },
  "panels/profiler/ProfilesPanel.ts | feedback": {
    "message": "Commentaires"
  },
  "panels/profiler/ProfilesPanel.ts | goToPerformancePanel": {
    "message": "Accéder au panneau \"Performances\""
  },
  "panels/profiler/ProfilesPanel.ts | profileLoadingFailedS": {
    "message": "Échec du chargement du profil : {PH1}."
  },
  "panels/profiler/ProfilesPanel.ts | profiles": {
    "message": "Profils"
  },
  "panels/profiler/ProfilesPanel.ts | runD": {
    "message": "Exécuter {PH1}"
  },
  "panels/profiler/profiler-meta.ts | clearAllProfiles": {
    "message": "Effacer tous les profils"
  },
  "panels/profiler/profiler-meta.ts | deleteProfile": {
    "message": "Supprimer le profil"
  },
  "panels/profiler/profiler-meta.ts | liveHeapProfile": {
    "message": "Profil de segment de mémoire actif"
  },
  "panels/profiler/profiler-meta.ts | loadProfile": {
    "message": "Charger le profil…"
  },
  "panels/profiler/profiler-meta.ts | memory": {
    "message": "Mémoire"
  },
  "panels/profiler/profiler-meta.ts | saveProfile": {
    "message": "Enregistrer le profil…"
  },
  "panels/profiler/profiler-meta.ts | showLiveHeapProfile": {
    "message": "Afficher le profil du segment de mémoire actif"
  },
  "panels/profiler/profiler-meta.ts | showMemory": {
    "message": "Afficher la mémoire"
  },
  "panels/profiler/profiler-meta.ts | startRecordingHeapAllocations": {
    "message": "Lancer l'enregistrement des allocations de segments de mémoire"
  },
  "panels/profiler/profiler-meta.ts | startRecordingHeapAllocationsAndReload": {
    "message": "Commencer l'enregistrement des allocations de segment de mémoire et actualiser la page"
  },
  "panels/profiler/profiler-meta.ts | startStopRecording": {
    "message": "Démarrer/Arrêter l'enregistrement"
  },
  "panels/profiler/profiler-meta.ts | stopRecordingHeapAllocations": {
    "message": "Arrêter l'enregistrement d'allocations de segments de mémoire"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | CDPCommandEditorHidden": {
    "message": "Éditeur de commande CDP masqué"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | CDPCommandEditorShown": {
    "message": "Éditeur de commande CDP affiché"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | clearAll": {
    "message": "Tout effacer"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | documentation": {
    "message": "Documentation"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | editAndResend": {
    "message": "Modifier et renvoyer"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | elapsedTime": {
    "message": "Durée écoulée"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | filter": {
    "message": "Filtrer"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | hideCDPCommandEditor": {
    "message": "Masquer l'éditeur de commandes CDP"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | method": {
    "message": "Méthode"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | noMessageSelected": {
    "message": "Aucun message sélectionné"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | record": {
    "message": "Enregistrer"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | request": {
    "message": "Requête"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | response": {
    "message": "Réponse"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | sMs": {
    "message": "{PH1} ms"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | save": {
    "message": "Enregistrer"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | selectTarget": {
    "message": "Sélectionnez une cible"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | sendRawCDPCommand": {
    "message": "Envoyer une commande CDP brute"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | sendRawCDPCommandExplanation": {
    "message": "Format : 'Domain.commandName' pour une commande sans paramètres ou '{\"command\":\"Domain.commandName\", \"parameters\": {...}}' comme objet JSON pour une commande avec paramètres. 'cmd'/'method' et 'args'/'params'/'arguments' sont également acceptés comme clés alternatives pour l'objet JSON."
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | session": {
    "message": "Session"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | showCDPCommandEditor": {
    "message": "Afficher l'éditeur de commandes CDP"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | target": {
    "message": "Cible"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | timestamp": {
    "message": "Horodatage"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | type": {
    "message": "Type"
  },
  "panels/protocol_monitor/components/JSONEditor.ts | addCustomProperty": {
    "message": "Ajouter une propriété personnalisée"
  },
  "panels/protocol_monitor/components/JSONEditor.ts | addParameter": {
    "message": "Ajouter un paramètre"
  },
  "panels/protocol_monitor/components/JSONEditor.ts | deleteParameter": {
    "message": "Supprimer le paramètre"
  },
  "panels/protocol_monitor/components/JSONEditor.ts | resetDefaultValue": {
    "message": "Rétablir la valeur par défaut"
  },
  "panels/protocol_monitor/components/Toolbar.ts | copyCommand": {
    "message": "Copier la commande"
  },
  "panels/protocol_monitor/components/Toolbar.ts | sendCommandCmdEnter": {
    "message": "Envoyer la commande - ⌘+Entrée"
  },
  "panels/protocol_monitor/components/Toolbar.ts | sendCommandCtrlEnter": {
    "message": "Envoyer la commande - Ctrl+Entrée"
  },
  "panels/protocol_monitor/protocol_monitor-meta.ts | protocolMonitor": {
    "message": "Moniteur de protocole"
  },
  "panels/protocol_monitor/protocol_monitor-meta.ts | showProtocolMonitor": {
    "message": "Afficher le moniteur de protocole"
  },
  "panels/recorder/RecorderController.ts | continueReplay": {
    "message": "Continuer"
  },
  "panels/recorder/RecorderController.ts | copyShortcut": {
    "message": "Copier l'enregistrement ou l'étape sélectionnée"
  },
  "panels/recorder/RecorderController.ts | createRecording": {
    "message": "Créer un enregistrement"
  },
  "panels/recorder/RecorderController.ts | deleteRecording": {
    "message": "Supprimer l'enregistrement"
  },
  "panels/recorder/RecorderController.ts | export": {
    "message": "Exporter"
  },
  "panels/recorder/RecorderController.ts | exportRecording": {
    "message": "Exporter"
  },
  "panels/recorder/RecorderController.ts | exportViaExtensions": {
    "message": "Exporter via les extensions"
  },
  "panels/recorder/RecorderController.ts | getExtensions": {
    "message": "Obtenir des extensions…"
  },
  "panels/recorder/RecorderController.ts | importRecording": {
    "message": "Importer l'enregistrement"
  },
  "panels/recorder/RecorderController.ts | noRecordings": {
    "message": "Aucun enregistrement"
  },
  "panels/recorder/RecorderController.ts | numberOfRecordings": {
    "message": "enregistrement(s)"
  },
  "panels/recorder/RecorderController.ts | replayRecording": {
    "message": "Rediffuser l'enregistrement"
  },
  "panels/recorder/RecorderController.ts | sendFeedback": {
    "message": "Envoyer des commentaires"
  },
  "panels/recorder/RecorderController.ts | startStopRecording": {
    "message": "Démarrer/Arrêter l'enregistrement"
  },
  "panels/recorder/RecorderController.ts | stepOverReplay": {
    "message": "Exécuter une étape"
  },
  "panels/recorder/RecorderController.ts | toggleCode": {
    "message": "Activer/Désactiver la vue Code"
  },
  "panels/recorder/components/CreateRecordingView.ts | cancelRecording": {
    "message": "Annuler l'enregistrement"
  },
  "panels/recorder/components/CreateRecordingView.ts | createRecording": {
    "message": "Créer un enregistrement"
  },
  "panels/recorder/components/CreateRecordingView.ts | includeNecessarySelectors": {
    "message": "Vous devez choisir l'une de ces options : CSS, Pierce ou XPath. Vous avez la garantie que seuls ces sélecteurs seront enregistrés, car les sélecteurs ARIA et de texte peuvent ne pas être uniques."
  },
  "panels/recorder/components/CreateRecordingView.ts | recordingName": {
    "message": "Nom de l'enregistrement"
  },
  "panels/recorder/components/CreateRecordingView.ts | recordingNameIsRequired": {
    "message": "Veuillez indiquer le nom de l'enregistrement"
  },
  "panels/recorder/components/CreateRecordingView.ts | selectorAttribute": {
    "message": "Attribut de sélecteur"
  },
  "panels/recorder/components/CreateRecordingView.ts | selectorTypeARIA": {
    "message": "ARIA"
  },
  "panels/recorder/components/CreateRecordingView.ts | selectorTypeCSS": {
    "message": "CSS"
  },
  "panels/recorder/components/CreateRecordingView.ts | selectorTypePierce": {
    "message": "Pierce"
  },
  "panels/recorder/components/CreateRecordingView.ts | selectorTypeText": {
    "message": "Texte"
  },
  "panels/recorder/components/CreateRecordingView.ts | selectorTypeXPath": {
    "message": "XPath"
  },
  "panels/recorder/components/CreateRecordingView.ts | selectorTypes": {
    "message": "Types de sélecteurs pour l'enregistrement"
  },
  "panels/recorder/components/CreateRecordingView.ts | startRecording": {
    "message": "Lancer l'enregistrement"
  },
  "panels/recorder/components/ExtensionView.ts | closeView": {
    "message": "Fermer"
  },
  "panels/recorder/components/ExtensionView.ts | extension": {
    "message": "Contenu fourni par une extension de navigateur"
  },
  "panels/recorder/components/RecordingListView.ts | createRecording": {
    "message": "Créer un enregistrement"
  },
  "panels/recorder/components/RecordingListView.ts | deleteRecording": {
    "message": "Supprimer l'enregistrement"
  },
  "panels/recorder/components/RecordingListView.ts | openRecording": {
    "message": "Ouvrir l'enregistrement"
  },
  "panels/recorder/components/RecordingListView.ts | playRecording": {
    "message": "Lire l'enregistrement"
  },
  "panels/recorder/components/RecordingListView.ts | savedRecordings": {
    "message": "Enregistrements sauvegardés"
  },
  "panels/recorder/components/RecordingView.ts | addAssertion": {
    "message": "Ajouter une assertion"
  },
  "panels/recorder/components/RecordingView.ts | cancelReplay": {
    "message": "Ne pas relire"
  },
  "panels/recorder/components/RecordingView.ts | default": {
    "message": "Par défaut"
  },
  "panels/recorder/components/RecordingView.ts | desktop": {
    "message": "Ordinateur"
  },
  "panels/recorder/components/RecordingView.ts | download": {
    "message": "Télécharger : {value}"
  },
  "panels/recorder/components/RecordingView.ts | editReplaySettings": {
    "message": "Modifier les paramètres de nouvelle lecture"
  },
  "panels/recorder/components/RecordingView.ts | editTitle": {
    "message": "Modifier le titre"
  },
  "panels/recorder/components/RecordingView.ts | endRecording": {
    "message": "Terminer l'enregistrement"
  },
  "panels/recorder/components/RecordingView.ts | environment": {
    "message": "Environnement"
  },
  "panels/recorder/components/RecordingView.ts | hideCode": {
    "message": "Masquer le code"
  },
  "panels/recorder/components/RecordingView.ts | latency": {
    "message": "Latence : {value} ms"
  },
  "panels/recorder/components/RecordingView.ts | mobile": {
    "message": "Mobile"
  },
  "panels/recorder/components/RecordingView.ts | network": {
    "message": "Réseau"
  },
  "panels/recorder/components/RecordingView.ts | performancePanel": {
    "message": "Panneau \"Performances\""
  },
  "panels/recorder/components/RecordingView.ts | recording": {
    "message": "Enregistrement…"
  },
  "panels/recorder/components/RecordingView.ts | recordingIsBeingStopped": {
    "message": "Arrêt de l'enregistrement…"
  },
  "panels/recorder/components/RecordingView.ts | replaySettings": {
    "message": "Paramètres de nouvelle lecture"
  },
  "panels/recorder/components/RecordingView.ts | requiredTitleError": {
    "message": "Veuillez saisir un titre"
  },
  "panels/recorder/components/RecordingView.ts | screenshotForSection": {
    "message": "Capture d'écran de cette section"
  },
  "panels/recorder/components/RecordingView.ts | showCode": {
    "message": "Afficher le code"
  },
  "panels/recorder/components/RecordingView.ts | timeout": {
    "message": "Délai d'inactivité : {value} ms"
  },
  "panels/recorder/components/RecordingView.ts | timeoutExplanation": {
    "message": "Le paramètre de délai d'inactivité (en millisecondes) s'applique à chaque action lors de la relecture de l'enregistrement. Par exemple, si un élément DOM identifié par un sélecteur CSS n'apparaît pas sur la page dans le délai spécifié, la relecture échoue et une erreur est générée."
  },
  "panels/recorder/components/RecordingView.ts | timeoutLabel": {
    "message": "Délai d'inactivité"
  },
  "panels/recorder/components/RecordingView.ts | upload": {
    "message": "Importation : {value}"
  },
  "panels/recorder/components/ReplayButton.ts | ReplayExtremelySlowButtonLabel": {
    "message": "Nouvelle lecture extrêmement lente"
  },
  "panels/recorder/components/ReplayButton.ts | ReplayExtremelySlowItemLabel": {
    "message": "Extrêmement lente"
  },
  "panels/recorder/components/ReplayButton.ts | ReplayNormalButtonLabel": {
    "message": "Relire"
  },
  "panels/recorder/components/ReplayButton.ts | ReplayNormalItemLabel": {
    "message": "Normale (par défaut)"
  },
  "panels/recorder/components/ReplayButton.ts | ReplaySlowButtonLabel": {
    "message": "Nouvelle lecture lente"
  },
  "panels/recorder/components/ReplayButton.ts | ReplaySlowItemLabel": {
    "message": "Lente"
  },
  "panels/recorder/components/ReplayButton.ts | ReplayVerySlowButtonLabel": {
    "message": "Nouvelle lecture très lente"
  },
  "panels/recorder/components/ReplayButton.ts | ReplayVerySlowItemLabel": {
    "message": "Très lente"
  },
  "panels/recorder/components/ReplayButton.ts | extensionGroup": {
    "message": "Extensions"
  },
  "panels/recorder/components/ReplayButton.ts | speedGroup": {
    "message": "Vitesse"
  },
  "panels/recorder/components/StartView.ts | createRecording": {
    "message": "Créer un enregistrement"
  },
  "panels/recorder/components/StartView.ts | header": {
    "message": "Mesurer les performances tout au long du parcours utilisateur"
  },
  "panels/recorder/components/StartView.ts | quickStart": {
    "message": "Démarrage rapide : découvrez le nouveau panneau \"Enregistreur\" dans les Outils de développement"
  },
  "panels/recorder/components/StartView.ts | step1": {
    "message": "Enregistrer un parcours utilisateur courant sur votre site ou dans votre appli"
  },
  "panels/recorder/components/StartView.ts | step2": {
    "message": "Relancez l'enregistrement pour vérifier si le flux fonctionne"
  },
  "panels/recorder/components/StartView.ts | step3": {
    "message": "Générez une trace des performances détaillée ou exportez un script Puppeteer pour faire des tests"
  },
  "panels/recorder/components/StepEditor.ts | addAttribute": {
    "message": "Ajouter {attributeName}"
  },
  "panels/recorder/components/StepEditor.ts | addFrameIndex": {
    "message": "Ajouter un index de frames dans l'arborescence des frames"
  },
  "panels/recorder/components/StepEditor.ts | addSelector": {
    "message": "Ajouter un sélecteur"
  },
  "panels/recorder/components/StepEditor.ts | addSelectorPart": {
    "message": "Ajouter une partie de sélecteur"
  },
  "panels/recorder/components/StepEditor.ts | deleteRow": {
    "message": "Supprimer la ligne"
  },
  "panels/recorder/components/StepEditor.ts | notSaved": {
    "message": "Échec de l'enregistrement : {error}"
  },
  "panels/recorder/components/StepEditor.ts | removeFrameIndex": {
    "message": "Supprimer l'index des frames"
  },
  "panels/recorder/components/StepEditor.ts | removeSelector": {
    "message": "Supprimer un sélecteur"
  },
  "panels/recorder/components/StepEditor.ts | removeSelectorPart": {
    "message": "Supprimer une partie de sélecteur"
  },
  "panels/recorder/components/StepEditor.ts | selectorPicker": {
    "message": "Sélectionner un élément sur la page pour mettre à jour les sélecteurs"
  },
  "panels/recorder/components/StepEditor.ts | unknownActionType": {
    "message": "Type d'action inconnu."
  },
  "panels/recorder/components/StepView.ts | addBreakpoint": {
    "message": "Ajouter un point d'arrêt"
  },
  "panels/recorder/components/StepView.ts | addStepAfter": {
    "message": "Ajouter une étape après"
  },
  "panels/recorder/components/StepView.ts | addStepBefore": {
    "message": "Ajouter une étape avant"
  },
  "panels/recorder/components/StepView.ts | breakpoints": {
    "message": "Points d'arrêt"
  },
  "panels/recorder/components/StepView.ts | changeStepTitle": {
    "message": "Modifier"
  },
  "panels/recorder/components/StepView.ts | clickStepTitle": {
    "message": "Cliquer"
  },
  "panels/recorder/components/StepView.ts | closeStepTitle": {
    "message": "Fermer"
  },
  "panels/recorder/components/StepView.ts | copyAs": {
    "message": "Copier en tant que"
  },
  "panels/recorder/components/StepView.ts | customStepTitle": {
    "message": "Étape personnalisée"
  },
  "panels/recorder/components/StepView.ts | doubleClickStepTitle": {
    "message": "Double-clic"
  },
  "panels/recorder/components/StepView.ts | elementRoleButton": {
    "message": "Bouton"
  },
  "panels/recorder/components/StepView.ts | elementRoleFallback": {
    "message": "Élément"
  },
  "panels/recorder/components/StepView.ts | elementRoleInput": {
    "message": "Entrée"
  },
  "panels/recorder/components/StepView.ts | emulateNetworkConditionsStepTitle": {
    "message": "Émuler les conditions du réseau"
  },
  "panels/recorder/components/StepView.ts | hoverStepTitle": {
    "message": "Pointer"
  },
  "panels/recorder/components/StepView.ts | keyDownStepTitle": {
    "message": "Touche appuyée"
  },
  "panels/recorder/components/StepView.ts | keyUpStepTitle": {
    "message": "Touche relâchée"
  },
  "panels/recorder/components/StepView.ts | navigateStepTitle": {
    "message": "Parcourir"
  },
  "panels/recorder/components/StepView.ts | openStepActions": {
    "message": "Ouvrir les actions de l'étape"
  },
  "panels/recorder/components/StepView.ts | removeBreakpoint": {
    "message": "Supprimer le point d'arrêt"
  },
  "panels/recorder/components/StepView.ts | removeStep": {
    "message": "Supprimer l'étape"
  },
  "panels/recorder/components/StepView.ts | scrollStepTitle": {
    "message": "Faire défiler"
  },
  "panels/recorder/components/StepView.ts | setViewportClickTitle": {
    "message": "Définir la fenêtre d'affichage"
  },
  "panels/recorder/components/StepView.ts | stepManagement": {
    "message": "Gérer les étapes"
  },
  "panels/recorder/components/StepView.ts | waitForElementStepTitle": {
    "message": "Attendre l'élément"
  },
  "panels/recorder/components/StepView.ts | waitForExpressionStepTitle": {
    "message": "Attendre l'expression"
  },
  "panels/recorder/models/RecorderSettings.ts | defaultRecordingName": {
    "message": "Enregistrement du {DATE} à {TIME}"
  },
  "panels/recorder/recorder-meta.ts | createRecording": {
    "message": "Créer un enregistrement"
  },
  "panels/recorder/recorder-meta.ts | recorder": {
    "message": "Enregistreur"
  },
  "panels/recorder/recorder-meta.ts | replayRecording": {
    "message": "Rediffuser l'enregistrement"
  },
  "panels/recorder/recorder-meta.ts | showRecorder": {
    "message": "Afficher l'Enregistreur"
  },
  "panels/recorder/recorder-meta.ts | startStopRecording": {
    "message": "Démarrer/Arrêter l'enregistrement"
  },
  "panels/recorder/recorder-meta.ts | toggleCode": {
    "message": "Activer/Désactiver la vue Code"
  },
  "panels/screencast/ScreencastApp.ts | toggleScreencast": {
    "message": "Activer/désactiver l'enregistrement d'écran"
  },
  "panels/screencast/ScreencastView.ts | addressBar": {
    "message": "Barre d'adresse"
  },
  "panels/screencast/ScreencastView.ts | back": {
    "message": "retour"
  },
  "panels/screencast/ScreencastView.ts | forward": {
    "message": "transférer"
  },
  "panels/screencast/ScreencastView.ts | mouseInput": {
    "message": "Utiliser la souris"
  },
  "panels/screencast/ScreencastView.ts | profilingInProgress": {
    "message": "Profilage…"
  },
  "panels/screencast/ScreencastView.ts | reload": {
    "message": "actualiser"
  },
  "panels/screencast/ScreencastView.ts | screencastViewOfDebugTarget": {
    "message": "Vue d'enregistrement d'écran de la cible de débogage"
  },
  "panels/screencast/ScreencastView.ts | theTabIsInactive": {
    "message": "L'onglet est inactif"
  },
  "panels/screencast/ScreencastView.ts | touchInput": {
    "message": "Utiliser le toucher"
  },
  "panels/search/SearchResultsPane.ts | lineS": {
    "message": "Ligne {PH1}"
  },
  "panels/search/SearchResultsPane.ts | matchesCountS": {
    "message": "Nombre de correspondances : {PH1}"
  },
  "panels/search/SearchResultsPane.ts | showDMore": {
    "message": "Afficher {PH1} autre(s)"
  },
  "panels/search/SearchView.ts | clear": {
    "message": "Effacer"
  },
  "panels/search/SearchView.ts | foundDMatchingLinesInDFiles": {
    "message": "{PH1} lignes correspondantes trouvées dans {PH2} fichiers."
  },
  "panels/search/SearchView.ts | foundDMatchingLinesInFile": {
    "message": "{PH1} lignes correspondantes trouvées dans 1 fichier."
  },
  "panels/search/SearchView.ts | foundMatchingLineInFile": {
    "message": "1 ligne correspondante trouvée dans 1 fichier."
  },
  "panels/search/SearchView.ts | indexing": {
    "message": "Indexation…"
  },
  "panels/search/SearchView.ts | indexingInterrupted": {
    "message": "Indexation interrompue"
  },
  "panels/search/SearchView.ts | matchCase": {
    "message": "Respecter la casse"
  },
  "panels/search/SearchView.ts | noMatchesFound": {
    "message": "Aucune correspondance trouvée."
  },
  "panels/search/SearchView.ts | refresh": {
    "message": "Actualiser"
  },
  "panels/search/SearchView.ts | search": {
    "message": "Rechercher"
  },
  "panels/search/SearchView.ts | searchFinished": {
    "message": "Recherche terminée."
  },
  "panels/search/SearchView.ts | searchInterrupted": {
    "message": "Recherche interrompue."
  },
  "panels/search/SearchView.ts | searchQuery": {
    "message": "Requête de recherche"
  },
  "panels/search/SearchView.ts | searching": {
    "message": "Recherche…"
  },
  "panels/search/SearchView.ts | useRegularExpression": {
    "message": "Utiliser une expression régulière"
  },
  "panels/security/SecurityModel.ts | cipherWithMAC": {
    "message": "{PH1} avec {PH2}"
  },
  "panels/security/SecurityModel.ts | keyExchangeWithGroup": {
    "message": "{PH1} avec {PH2}"
  },
  "panels/security/SecurityModel.ts | theSecurityOfThisPageIsUnknown": {
    "message": "Sécurité inconnue pour cette page."
  },
  "panels/security/SecurityModel.ts | thisPageIsNotSecure": {
    "message": "Cette page n'est pas sécurisée."
  },
  "panels/security/SecurityModel.ts | thisPageIsNotSecureBrokenHttps": {
    "message": "Cette page n'est pas sécurisée (HTTPS brisé)."
  },
  "panels/security/SecurityModel.ts | thisPageIsSecureValidHttps": {
    "message": "Cette page est sécurisée (HTTPS valide)."
  },
  "panels/security/SecurityPanel.ts | activeContentWithCertificate": {
    "message": "contenu actif avec des erreurs de certificat"
  },
  "panels/security/SecurityPanel.ts | activeMixedContent": {
    "message": "contenu mixte actif"
  },
  "panels/security/SecurityPanel.ts | allResourcesOnThisPageAreServed": {
    "message": "Toutes les ressources situées sur cette page sont traitées de manière sécurisée."
  },
  "panels/security/SecurityPanel.ts | allServedSecurely": {
    "message": "toutes diffusées de façon sécurisée"
  },
  "panels/security/SecurityPanel.ts | blockedMixedContent": {
    "message": "Contenu mixte bloqué"
  },
  "panels/security/SecurityPanel.ts | certificate": {
    "message": "Certificat"
  },
  "panels/security/SecurityPanel.ts | certificateExpiresSoon": {
    "message": "Le certificat va bientôt expirer"
  },
  "panels/security/SecurityPanel.ts | certificateTransparency": {
    "message": "Transparence des certificats"
  },
  "panels/security/SecurityPanel.ts | chromeHasDeterminedThatThisSiteS": {
    "message": "Chrome a établi que ce site pouvait être fictif ou frauduleux."
  },
  "panels/security/SecurityPanel.ts | cipher": {
    "message": "Algorithme de chiffrement"
  },
  "panels/security/SecurityPanel.ts | connection": {
    "message": "Connexion"
  },
  "panels/security/SecurityPanel.ts | contentWithCertificateErrors": {
    "message": "contenu avec des erreurs de certificat"
  },
  "panels/security/SecurityPanel.ts | enabled": {
    "message": "activé"
  },
  "panels/security/SecurityPanel.ts | encryptedClientHello": {
    "message": "ClientHello chiffré"
  },
  "panels/security/SecurityPanel.ts | flaggedByGoogleSafeBrowsing": {
    "message": "Signalé par la navigation sécurisée Google"
  },
  "panels/security/SecurityPanel.ts | hashAlgorithm": {
    "message": "Algorithme de hachage"
  },
  "panels/security/SecurityPanel.ts | hideFullDetails": {
    "message": "Masquer les détails"
  },
  "panels/security/SecurityPanel.ts | ifYouBelieveThisIsShownIn": {
    "message": "Si vous pensez que ce message est affiché par erreur, veuillez consulter https://g.co/chrome/lookalike-warnings."
  },
  "panels/security/SecurityPanel.ts | ifYouBelieveThisIsShownInErrorSafety": {
    "message": "Si vous pensez que ce message est affiché par erreur, veuillez consulter https://g.co/chrome/lookalike-warnings."
  },
  "panels/security/SecurityPanel.ts | info": {
    "message": "Infos"
  },
  "panels/security/SecurityPanel.ts | insecureSha": {
    "message": "non sécurisé (SHA-1)"
  },
  "panels/security/SecurityPanel.ts | issuedAt": {
    "message": "Envoyé à"
  },
  "panels/security/SecurityPanel.ts | issuer": {
    "message": "Émetteur"
  },
  "panels/security/SecurityPanel.ts | keyExchange": {
    "message": "Échange de clés"
  },
  "panels/security/SecurityPanel.ts | logId": {
    "message": "ID du journal"
  },
  "panels/security/SecurityPanel.ts | logName": {
    "message": "Nom du journal"
  },
  "panels/security/SecurityPanel.ts | mainOrigin": {
    "message": "Origine principale"
  },
  "panels/security/SecurityPanel.ts | mainOriginNonsecure": {
    "message": "Origine principale (non sécurisée)"
  },
  "panels/security/SecurityPanel.ts | mainOriginSecure": {
    "message": "Origine principale (sécurisée)"
  },
  "panels/security/SecurityPanel.ts | missing": {
    "message": "manquant"
  },
  "panels/security/SecurityPanel.ts | mixedContent": {
    "message": "contenu mixte"
  },
  "panels/security/SecurityPanel.ts | na": {
    "message": "(N/A)"
  },
  "panels/security/SecurityPanel.ts | noSecurityDetailsAreAvailableFor": {
    "message": "Aucun détail de sécurité disponible pour cette origine."
  },
  "panels/security/SecurityPanel.ts | noSecurityInformation": {
    "message": "Aucune information de sécurité"
  },
  "panels/security/SecurityPanel.ts | nonsecureForm": {
    "message": "formulaire non sécurisé"
  },
  "panels/security/SecurityPanel.ts | nonsecureOrigins": {
    "message": "Origines non sécurisées"
  },
  "panels/security/SecurityPanel.ts | notSecure": {
    "message": "Non sécurisé"
  },
  "panels/security/SecurityPanel.ts | notSecureBroken": {
    "message": "Non sécurisé (brisé)"
  },
  "panels/security/SecurityPanel.ts | obsoleteConnectionSettings": {
    "message": "paramètres de connexion obsolètes"
  },
  "panels/security/SecurityPanel.ts | openFullCertificateDetails": {
    "message": "Afficher tous les détails du certificat"
  },
  "panels/security/SecurityPanel.ts | origin": {
    "message": "Origine"
  },
  "panels/security/SecurityPanel.ts | overview": {
    "message": "Présentation"
  },
  "panels/security/SecurityPanel.ts | possibleSpoofingUrl": {
    "message": "URL potentiellement falsifiée"
  },
  "panels/security/SecurityPanel.ts | protocol": {
    "message": "Protocole"
  },
  "panels/security/SecurityPanel.ts | publickeypinningBypassed": {
    "message": "Public-Key-Pinning ignoré"
  },
  "panels/security/SecurityPanel.ts | publickeypinningWasBypassedByA": {
    "message": "L'épinglage de clé publique a été contourné par un certificat racine local."
  },
  "panels/security/SecurityPanel.ts | reloadThePageToRecordRequestsFor": {
    "message": "Actualisez la page pour enregistrer les requêtes pour les ressources HTTP."
  },
  "panels/security/SecurityPanel.ts | reloadToViewDetails": {
    "message": "Recharger pour afficher les détails"
  },
  "panels/security/SecurityPanel.ts | resources": {
    "message": "Ressources"
  },
  "panels/security/SecurityPanel.ts | rsaKeyExchangeIsObsoleteEnableAn": {
    "message": "Échange de clés RSA obsolète. Activez une suite de chiffrement ECDHE."
  },
  "panels/security/SecurityPanel.ts | sIsObsoleteEnableAnAesgcmbased": {
    "message": "{PH1} est obsolète. Activez une suite d'algorithme de chiffrement basée sur AES-GCM."
  },
  "panels/security/SecurityPanel.ts | sIsObsoleteEnableTlsOrLater": {
    "message": "{PH1} est obsolète. Activez TLS 1.2 ou version ultérieure."
  },
  "panels/security/SecurityPanel.ts | sct": {
    "message": "SCT"
  },
  "panels/security/SecurityPanel.ts | secure": {
    "message": "Sécurisé"
  },
  "panels/security/SecurityPanel.ts | secureConnectionSettings": {
    "message": "paramètres de connexion sécurisée"
  },
  "panels/security/SecurityPanel.ts | secureOrigins": {
    "message": "Origines sécurisées"
  },
  "panels/security/SecurityPanel.ts | securityOverview": {
    "message": "Présentation de la sécurité"
  },
  "panels/security/SecurityPanel.ts | serverSignature": {
    "message": "Signature du serveur"
  },
  "panels/security/SecurityPanel.ts | showFullDetails": {
    "message": "Afficher tous les détails"
  },
  "panels/security/SecurityPanel.ts | showLess": {
    "message": "Moins"
  },
  "panels/security/SecurityPanel.ts | showMoreSTotal": {
    "message": "Voir plus ({PH1} au total)"
  },
  "panels/security/SecurityPanel.ts | signatureAlgorithm": {
    "message": "Algorithme de signature"
  },
  "panels/security/SecurityPanel.ts | signatureData": {
    "message": "Données de signature"
  },
  "panels/security/SecurityPanel.ts | source": {
    "message": "Source"
  },
  "panels/security/SecurityPanel.ts | subject": {
    "message": "Objet"
  },
  "panels/security/SecurityPanel.ts | subjectAlternativeNameMissing": {
    "message": "Subject Alternative Name manquant"
  },
  "panels/security/SecurityPanel.ts | theCertificateChainForThisSite": {
    "message": "La chaîne de certificats de ce site contient un certificat signé avec SHA-1."
  },
  "panels/security/SecurityPanel.ts | theCertificateForThisSiteDoesNot": {
    "message": "Le certificat de ce site ne comporte pas d'extension Subject Alternative Name contenant un nom de domaine ou une adresse IP."
  },
  "panels/security/SecurityPanel.ts | theCertificateForThisSiteExpires": {
    "message": "Le certificat de ce site expire dans moins de 48 heures et doit être renouvelé."
  },
  "panels/security/SecurityPanel.ts | theConnectionToThisSiteIs": {
    "message": "La connexion à ce site est chiffrée et authentifiée avec {PH1}, {PH2} et {PH3}."
  },
  "panels/security/SecurityPanel.ts | theConnectionToThisSiteIsUsingA": {
    "message": "La connexion à ce site utilise un certificat de serveur de confiance valide, émis par {PH1}."
  },
  "panels/security/SecurityPanel.ts | theSecurityDetailsAboveAreFrom": {
    "message": "Les détails de sécurité ci-dessus proviennent de la première réponse examinée."
  },
  "panels/security/SecurityPanel.ts | theServerSignatureUsesShaWhichIs": {
    "message": "La signature du serveur utilise SHA-1, qui est obsolète. Activez l'algorithme de signature SHA-2 à la place. Notez que ceci est différent de la signature du certificat."
  },
  "panels/security/SecurityPanel.ts | thisIsAnErrorPage": {
    "message": "Il s'agit d'une page d'erreur."
  },
  "panels/security/SecurityPanel.ts | thisOriginIsANonhttpsSecure": {
    "message": "Cette origine n'est pas une origine HTTPS sécurisée."
  },
  "panels/security/SecurityPanel.ts | thisPageHasANonhttpsSecureOrigin": {
    "message": "Cette page n'a pas d'origine HTTPS sécurisée."
  },
  "panels/security/SecurityPanel.ts | thisPageIncludesAFormWithA": {
    "message": "Cette page inclut un formulaire avec un attribut \"action\" non sécurisé."
  },
  "panels/security/SecurityPanel.ts | thisPageIncludesHttpResources": {
    "message": "Cette page inclut des ressources HTTP."
  },
  "panels/security/SecurityPanel.ts | thisPageIncludesResourcesThat": {
    "message": "Cette page inclut les ressources qui ont été chargées avec des erreurs de certificat."
  },
  "panels/security/SecurityPanel.ts | thisPageIsDangerousFlaggedBy": {
    "message": "Page dangereuse (signalée par la navigation sécurisée Google)."
  },
  "panels/security/SecurityPanel.ts | thisPageIsInsecureUnencrypted": {
    "message": "Cette page n'est pas sécurisée (HTTP non chiffré)."
  },
  "panels/security/SecurityPanel.ts | thisPageIsSuspicious": {
    "message": "Cette page est suspecte"
  },
  "panels/security/SecurityPanel.ts | thisPageIsSuspiciousFlaggedBy": {
    "message": "Cette page est suspecte (signalée par Chrome)."
  },
  "panels/security/SecurityPanel.ts | thisRequestCompliesWithChromes": {
    "message": "Cette requête est conforme au règlement sur la transparence des certificats de Chrome."
  },
  "panels/security/SecurityPanel.ts | thisRequestDoesNotComplyWith": {
    "message": "Cette requête ne respecte pas les règles de transparence des certificats de Chrome."
  },
  "panels/security/SecurityPanel.ts | thisResponseWasLoadedFromCache": {
    "message": "Cette réponse a été chargée depuis le cache. Certaines informations de sécurité peuvent être absentes."
  },
  "panels/security/SecurityPanel.ts | thisSiteIsMissingAValidTrusted": {
    "message": "Aucun certificat de confiance valide ({PH1}) pour ce site."
  },
  "panels/security/SecurityPanel.ts | thisSitesHostnameLooksSimilarToP": {
    "message": "Le nom d'hôte de ce site ressemble à {PH1}. Les pirates informatiques tentent parfois d'imiter des sites Web en modifiant le nom de domaine de façon subtile pour que le changement passe inaperçu."
  },
  "panels/security/SecurityPanel.ts | toCheckThisPagesStatusVisit": {
    "message": "Pour vérifier l'état de cette page, consultez g.co/safebrowsingstatus."
  },
  "panels/security/SecurityPanel.ts | unknownCanceled": {
    "message": "Inconnu/annulé"
  },
  "panels/security/SecurityPanel.ts | unknownField": {
    "message": "inconnu"
  },
  "panels/security/SecurityPanel.ts | validAndTrusted": {
    "message": "valide et fiable"
  },
  "panels/security/SecurityPanel.ts | validFrom": {
    "message": "Valide à partir du"
  },
  "panels/security/SecurityPanel.ts | validUntil": {
    "message": "Valable jusqu'au"
  },
  "panels/security/SecurityPanel.ts | validationStatus": {
    "message": "État de validation"
  },
  "panels/security/SecurityPanel.ts | viewCertificate": {
    "message": "Afficher le certificat"
  },
  "panels/security/SecurityPanel.ts | viewDRequestsInNetworkPanel": {
    "message": "{n,plural, =1{Afficher # requête dans le panneau \"Network\"}one{Afficher # requête dans le panneau \"Network\"}other{Afficher # requêtes dans le panneau \"Network\"}}"
  },
  "panels/security/SecurityPanel.ts | viewRequestsInNetworkPanel": {
    "message": "Afficher les requêtes dans le panneau \"Network\""
  },
  "panels/security/SecurityPanel.ts | youHaveRecentlyAllowedContent": {
    "message": "Vous avez récemment autorisé l'exécution sur ce site de contenus chargés avec des erreurs au niveau des certificats (tels que des scripts ou des cadres iFrame)."
  },
  "panels/security/SecurityPanel.ts | youHaveRecentlyAllowedNonsecure": {
    "message": "Vous avez récemment autorisé l'exécution de contenus non sécurisés (tels que des scripts ou des cadres iFrame) sur ce site."
  },
  "panels/security/SecurityPanel.ts | yourConnectionToThisOriginIsNot": {
    "message": "Votre connexion à cette origine n'est pas sécurisée."
  },
  "panels/security/SecurityPanel.ts | yourPageRequestedNonsecure": {
    "message": "Votre page a demandé des ressources non sécurisées qui ont été bloquées."
  },
  "panels/security/security-meta.ts | security": {
    "message": "Sécurité"
  },
  "panels/security/security-meta.ts | showSecurity": {
    "message": "Afficher le panneau Sécurité"
  },
  "panels/sensors/LocationsSettingsTab.ts | addLocation": {
    "message": "Ajouter un emplacement…"
  },
  "panels/sensors/LocationsSettingsTab.ts | customLocations": {
    "message": "Emplacements personnalisés"
  },
  "panels/sensors/LocationsSettingsTab.ts | lat": {
    "message": "Lat."
  },
  "panels/sensors/LocationsSettingsTab.ts | latitude": {
    "message": "Latitude"
  },
  "panels/sensors/LocationsSettingsTab.ts | latitudeMustBeANumber": {
    "message": "La latitude doit être un nombre"
  },
  "panels/sensors/LocationsSettingsTab.ts | latitudeMustBeGreaterThanOrEqual": {
    "message": "La latitude doit être supérieure ou égale à {PH1}."
  },
  "panels/sensors/LocationsSettingsTab.ts | latitudeMustBeLessThanOrEqualToS": {
    "message": "La latitude doit être inférieure ou égale à {PH1}."
  },
  "panels/sensors/LocationsSettingsTab.ts | locale": {
    "message": "Paramètres régionaux"
  },
  "panels/sensors/LocationsSettingsTab.ts | localeMustContainAlphabetic": {
    "message": "La langue doit comporter des caractères alphabétiques"
  },
  "panels/sensors/LocationsSettingsTab.ts | locationName": {
    "message": "Nom de l'emplacement"
  },
  "panels/sensors/LocationsSettingsTab.ts | locationNameCannotBeEmpty": {
    "message": "Vous devez indiquer un nom d'emplacement"
  },
  "panels/sensors/LocationsSettingsTab.ts | locationNameMustBeLessThanS": {
    "message": "Le nom du lieu doit comporter moins de {PH1} caractères"
  },
  "panels/sensors/LocationsSettingsTab.ts | long": {
    "message": "Long."
  },
  "panels/sensors/LocationsSettingsTab.ts | longitude": {
    "message": "Longitude"
  },
  "panels/sensors/LocationsSettingsTab.ts | longitudeMustBeANumber": {
    "message": "La longitude doit être un nombre"
  },
  "panels/sensors/LocationsSettingsTab.ts | longitudeMustBeGreaterThanOr": {
    "message": "La longitude doit être supérieure ou égale à {PH1}"
  },
  "panels/sensors/LocationsSettingsTab.ts | longitudeMustBeLessThanOrEqualTo": {
    "message": "La longitude doit être inférieure ou égale à {PH1}"
  },
  "panels/sensors/LocationsSettingsTab.ts | timezoneId": {
    "message": "ID de fuseau horaire"
  },
  "panels/sensors/LocationsSettingsTab.ts | timezoneIdMustContainAlphabetic": {
    "message": "L'ID de fuseau horaire doit contenir des caractères alphabétiques"
  },
  "panels/sensors/SensorsView.ts | adjustWithMousewheelOrUpdownKeys": {
    "message": "Ajustez la valeur avec la molette ou les touches haut/bas. {PH1} : ±10, Maj : ±1, Alt : ±0,01"
  },
  "panels/sensors/SensorsView.ts | alpha": {
    "message": "α (alpha)"
  },
  "panels/sensors/SensorsView.ts | beta": {
    "message": "β (bêta)"
  },
  "panels/sensors/SensorsView.ts | customOrientation": {
    "message": "Orientation personnalisée"
  },
  "panels/sensors/SensorsView.ts | deviceOrientationSetToAlphaSBeta": {
    "message": "Orientation de l'appareil définie sur alpha : {PH1}, bêta : {PH2}, gamma : {PH3}"
  },
  "panels/sensors/SensorsView.ts | displayDown": {
    "message": "Écran vers le bas"
  },
  "panels/sensors/SensorsView.ts | displayUp": {
    "message": "Écran vers le haut"
  },
  "panels/sensors/SensorsView.ts | enableOrientationToRotate": {
    "message": "Activer l'orientation pour faire pivoter"
  },
  "panels/sensors/SensorsView.ts | error": {
    "message": "Erreur"
  },
  "panels/sensors/SensorsView.ts | forcesSelectedIdleStateEmulation": {
    "message": "Forcer l'émulation de l'état inactif sélectionné"
  },
  "panels/sensors/SensorsView.ts | forcesTouchInsteadOfClick": {
    "message": "Forcer le toucher par rapport au clic"
  },
  "panels/sensors/SensorsView.ts | gamma": {
    "message": "γ (gamma)"
  },
  "panels/sensors/SensorsView.ts | landscapeLeft": {
    "message": "Paysage à gauche"
  },
  "panels/sensors/SensorsView.ts | landscapeRight": {
    "message": "Paysage à droite"
  },
  "panels/sensors/SensorsView.ts | latitude": {
    "message": "Latitude"
  },
  "panels/sensors/SensorsView.ts | locale": {
    "message": "paramètres régionaux"
  },
  "panels/sensors/SensorsView.ts | location": {
    "message": "Localisation"
  },
  "panels/sensors/SensorsView.ts | locationUnavailable": {
    "message": "Emplacement non disponible"
  },
  "panels/sensors/SensorsView.ts | longitude": {
    "message": "Longitude"
  },
  "panels/sensors/SensorsView.ts | manage": {
    "message": "Gérer"
  },
  "panels/sensors/SensorsView.ts | manageTheListOfLocations": {
    "message": "Gérer la liste des emplacements"
  },
  "panels/sensors/SensorsView.ts | noOverride": {
    "message": "Aucun remplacement"
  },
  "panels/sensors/SensorsView.ts | off": {
    "message": "Désactivé"
  },
  "panels/sensors/SensorsView.ts | orientation": {
    "message": "Orientation"
  },
  "panels/sensors/SensorsView.ts | other": {
    "message": "Autre…"
  },
  "panels/sensors/SensorsView.ts | overrides": {
    "message": "Remplacements"
  },
  "panels/sensors/SensorsView.ts | portrait": {
    "message": "Portrait"
  },
  "panels/sensors/SensorsView.ts | portraitUpsideDown": {
    "message": "Portrait à l'envers"
  },
  "panels/sensors/SensorsView.ts | presets": {
    "message": "Préréglages"
  },
  "panels/sensors/SensorsView.ts | reset": {
    "message": "Réinitialiser"
  },
  "panels/sensors/SensorsView.ts | resetDeviceOrientation": {
    "message": "Réinitialiser l'orientation de l'appareil"
  },
  "panels/sensors/SensorsView.ts | shiftdragHorizontallyToRotate": {
    "message": "Maj + glisser horizontal pour pivoter autour de l'axe y"
  },
  "panels/sensors/SensorsView.ts | timezoneId": {
    "message": "Identifiant du fuseau horaire"
  },
  "panels/sensors/sensors-meta.ts | accelerometer": {
    "message": "accéléromètre"
  },
  "panels/sensors/sensors-meta.ts | deviceOrientation": {
    "message": "Orientation de l'appareil"
  },
  "panels/sensors/sensors-meta.ts | devicebased": {
    "message": "Basé sur l'appareil"
  },
  "panels/sensors/sensors-meta.ts | emulateIdleDetectorState": {
    "message": "Émuler l'état du détecteur d'inactivité"
  },
  "panels/sensors/sensors-meta.ts | forceEnabled": {
    "message": "Forçage activé"
  },
  "panels/sensors/sensors-meta.ts | geolocation": {
    "message": "géolocalisation"
  },
  "panels/sensors/sensors-meta.ts | locale": {
    "message": "paramètres régionaux"
  },
  "panels/sensors/sensors-meta.ts | locales": {
    "message": "paramètres régionaux"
  },
  "panels/sensors/sensors-meta.ts | locations": {
    "message": "Lieux"
  },
  "panels/sensors/sensors-meta.ts | noIdleEmulation": {
    "message": "Aucune émulation de l'état inactif"
  },
  "panels/sensors/sensors-meta.ts | sensors": {
    "message": "Capteurs"
  },
  "panels/sensors/sensors-meta.ts | showLocations": {
    "message": "Afficher les emplacements"
  },
  "panels/sensors/sensors-meta.ts | showSensors": {
    "message": "Afficher les capteurs"
  },
  "panels/sensors/sensors-meta.ts | timezones": {
    "message": "fuseaux horaires"
  },
  "panels/sensors/sensors-meta.ts | touch": {
    "message": "Tactile"
  },
  "panels/sensors/sensors-meta.ts | userActiveScreenLocked": {
    "message": "Utilisateur actif, écran verrouillé"
  },
  "panels/sensors/sensors-meta.ts | userActiveScreenUnlocked": {
    "message": "Utilisateur actif, écran déverrouillé"
  },
  "panels/sensors/sensors-meta.ts | userIdleScreenLocked": {
    "message": "Utilisateur inactif, écran verrouillé"
  },
  "panels/sensors/sensors-meta.ts | userIdleScreenUnlocked": {
    "message": "Utilisateur inactif, écran déverrouillé"
  },
  "panels/settings/FrameworkIgnoreListSettingsTab.ts | addFilenamePattern": {
    "message": "Ajouter le format du nom de fichier"
  },
  "panels/settings/FrameworkIgnoreListSettingsTab.ts | addPattern": {
    "message": "Ajouter un format"
  },
  "panels/settings/FrameworkIgnoreListSettingsTab.ts | automaticallyIgnoreListKnownThirdPartyScripts": {
    "message": "Scripts tiers connus de cartes sources"
  },
  "panels/settings/FrameworkIgnoreListSettingsTab.ts | customExclusionRules": {
    "message": "Règles d'exclusion personnalisées :"
  },
  "panels/settings/FrameworkIgnoreListSettingsTab.ts | debuggerWillSkipThroughThe": {
    "message": "Debugger ignorera les scripts et ne s'arrêtera pas aux exceptions qu'ils imposent."
  },
  "panels/settings/FrameworkIgnoreListSettingsTab.ts | enableIgnoreListing": {
    "message": "Activer les listes d'éléments à ignorer"
  },
  "panels/settings/FrameworkIgnoreListSettingsTab.ts | enableIgnoreListingTooltip": {
    "message": "Décocher pour désactiver toutes les listes d'éléments à ignorer"
  },
  "panels/settings/FrameworkIgnoreListSettingsTab.ts | frameworkIgnoreList": {
    "message": "Liste de frameworks à ignorer"
  },
  "panels/settings/FrameworkIgnoreListSettingsTab.ts | generalExclusionRules": {
    "message": "Règles générales d'exclusion :"
  },
  "panels/settings/FrameworkIgnoreListSettingsTab.ts | ignoreListContentScripts": {
    "message": "Scripts de contenu injectés par des extensions"
  },
  "panels/settings/FrameworkIgnoreListSettingsTab.ts | ignoreScriptsWhoseNamesMatchS": {
    "message": "Ignorer les scripts dont le nom correspond à \"{PH1}\""
  },
  "panels/settings/FrameworkIgnoreListSettingsTab.ts | learnMore": {
    "message": "En savoir plus"
  },
  "panels/settings/FrameworkIgnoreListSettingsTab.ts | pattern": {
    "message": "Ajouter un format"
  },
  "panels/settings/FrameworkIgnoreListSettingsTab.ts | patternAlreadyExists": {
    "message": "Ce format existe déjà"
  },
  "panels/settings/FrameworkIgnoreListSettingsTab.ts | patternCannotBeEmpty": {
    "message": "Vous devez indiquer un format"
  },
  "panels/settings/FrameworkIgnoreListSettingsTab.ts | patternMustBeAValidRegular": {
    "message": "Le format doit être une expression régulière valide"
  },
  "panels/settings/KeybindsSettingsTab.ts | FullListOfDevtoolsKeyboard": {
    "message": "Liste complète des raccourcis clavier et des gestes dans les outils de développement"
  },
  "panels/settings/KeybindsSettingsTab.ts | ResetShortcutsForAction": {
    "message": "Réinitialiser les raccourcis de l'action"
  },
  "panels/settings/KeybindsSettingsTab.ts | RestoreDefaultShortcuts": {
    "message": "Restaurer les raccourcis par défaut"
  },
  "panels/settings/KeybindsSettingsTab.ts | addAShortcut": {
    "message": "Ajouter un raccourci"
  },
  "panels/settings/KeybindsSettingsTab.ts | confirmChanges": {
    "message": "Confirmer les modifications"
  },
  "panels/settings/KeybindsSettingsTab.ts | discardChanges": {
    "message": "Ignorer les modifications"
  },
  "panels/settings/KeybindsSettingsTab.ts | editShortcut": {
    "message": "Modifier le raccourci"
  },
  "panels/settings/KeybindsSettingsTab.ts | keyboardShortcutsList": {
    "message": "Liste des raccourcis clavier"
  },
  "panels/settings/KeybindsSettingsTab.ts | matchShortcutsFromPreset": {
    "message": "Associer les raccourcis prédéfinis"
  },
  "panels/settings/KeybindsSettingsTab.ts | noShortcutForAction": {
    "message": "Aucun raccourci pour cette action"
  },
  "panels/settings/KeybindsSettingsTab.ts | removeShortcut": {
    "message": "Supprimer le raccourci"
  },
  "panels/settings/KeybindsSettingsTab.ts | shortcutModified": {
    "message": "Raccourci modifié"
  },
  "panels/settings/KeybindsSettingsTab.ts | shortcuts": {
    "message": "Raccourcis"
  },
  "panels/settings/KeybindsSettingsTab.ts | shortcutsCannotContainOnly": {
    "message": "Les raccourcis ne peuvent pas inclure que des touches de modification."
  },
  "panels/settings/KeybindsSettingsTab.ts | thisShortcutIsInUseByS": {
    "message": "Ce raccourci est utilisé par {PH1} : {PH2}."
  },
  "panels/settings/SettingsScreen.ts | experiments": {
    "message": "Tests"
  },
  "panels/settings/SettingsScreen.ts | filterExperimentsLabel": {
    "message": "Filtrer"
  },
  "panels/settings/SettingsScreen.ts | learnMore": {
    "message": "En savoir plus"
  },
  "panels/settings/SettingsScreen.ts | noResults": {
    "message": "Aucun test ne correspond à ce filtre"
  },
  "panels/settings/SettingsScreen.ts | oneOrMoreSettingsHaveChanged": {
    "message": "Actualisez la page pour appliquer les changements apportés à un ou plusieurs paramètres."
  },
  "panels/settings/SettingsScreen.ts | preferences": {
    "message": "Préférences"
  },
  "panels/settings/SettingsScreen.ts | restoreDefaultsAndReload": {
    "message": "Restaurer les valeurs par défaut et actualiser"
  },
  "panels/settings/SettingsScreen.ts | sendFeedback": {
    "message": "Envoyer des commentaires"
  },
  "panels/settings/SettingsScreen.ts | settings": {
    "message": "Paramètres"
  },
  "panels/settings/SettingsScreen.ts | shortcuts": {
    "message": "Raccourcis"
  },
  "panels/settings/SettingsScreen.ts | theseExperimentsAreParticularly": {
    "message": "Ces tests sont particulièrement instables. Vous les activez à vos risques et périls."
  },
  "panels/settings/SettingsScreen.ts | theseExperimentsCouldBeUnstable": {
    "message": "Ces tests peuvent être instables ou peu fiables. Vous devrez peut-être redémarrer les outils de développement."
  },
  "panels/settings/SettingsScreen.ts | warning": {
    "message": "AVERTISSEMENT :"
  },
  "panels/settings/components/SyncSection.ts | preferencesSyncDisabled": {
    "message": "Avant d'activer ce paramètre, vous devez activer la synchronisation des paramètres dans Chrome."
  },
  "panels/settings/components/SyncSection.ts | settings": {
    "message": "Accéder aux paramètres"
  },
  "panels/settings/components/SyncSection.ts | signedIn": {
    "message": "Connecté à Chrome en tant que :"
  },
  "panels/settings/components/SyncSection.ts | syncDisabled": {
    "message": "Pour activer ce paramètre, vous devez activer la synchronisation Chrome."
  },
  "panels/settings/emulation/DevicesSettingsTab.ts | addCustomDevice": {
    "message": "Ajouter un appareil personnalisé…"
  },
  "panels/settings/emulation/DevicesSettingsTab.ts | device": {
    "message": "Appareil"
  },
  "panels/settings/emulation/DevicesSettingsTab.ts | deviceAddedOrUpdated": {
    "message": "L'appareil {PH1} a bien été ajouté/mis à jour."
  },
  "panels/settings/emulation/DevicesSettingsTab.ts | deviceName": {
    "message": "Nom de l'appareil"
  },
  "panels/settings/emulation/DevicesSettingsTab.ts | deviceNameCannotBeEmpty": {
    "message": "Nom de l'appareil obligatoire."
  },
  "panels/settings/emulation/DevicesSettingsTab.ts | deviceNameMustBeLessThanS": {
    "message": "Le nom de l'appareil doit comporter moins de {PH1} caractères."
  },
  "panels/settings/emulation/DevicesSettingsTab.ts | devicePixelRatio": {
    "message": "Rapport de pixels de l'appareil"
  },
  "panels/settings/emulation/DevicesSettingsTab.ts | emulatedDevices": {
    "message": "Appareils émulés"
  },
  "panels/settings/emulation/DevicesSettingsTab.ts | height": {
    "message": "Hauteur"
  },
  "panels/settings/emulation/DevicesSettingsTab.ts | userAgentString": {
    "message": "Chaîne user-agent"
  },
  "panels/settings/emulation/DevicesSettingsTab.ts | userAgentType": {
    "message": "Type d'user-agent"
  },
  "panels/settings/emulation/DevicesSettingsTab.ts | width": {
    "message": "Largeur"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | addBrand": {
    "message": "Ajouter une marque"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | addedBrand": {
    "message": "Ligne des marques ajoutée"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | architecture": {
    "message": "Architecture (Sec-CH-UA-Arch)"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | architecturePlaceholder": {
    "message": "Architecture (ex. : x86)"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | brandFullVersionListDelete": {
    "message": "Supprimer la marque de la liste complète des versions"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | brandName": {
    "message": "Marque"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | brandNameAriaLabel": {
    "message": "{PH1} de marques"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | brandProperties": {
    "message": "Propriétés du user-agent"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | brandUserAgentDelete": {
    "message": "Supprimer la marque de la section user-agent"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | brandVersionAriaLabel": {
    "message": "Version {PH1}"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | brandVersionPlaceholder": {
    "message": "Version (ex. : 87.0.4280.88)"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | deletedBrand": {
    "message": "Ligne des marques supprimée"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | deviceModel": {
    "message": "Modèle de l'appareil (Sec-CH-UA-Model)"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | deviceProperties": {
    "message": "Propriétés de l'appareil"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | fullBrowserVersion": {
    "message": "Version complète du navigateur (Sec-CH-UA-Full-Browser-Version)"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | fullBrowserVersionPlaceholder": {
    "message": "Version complète du navigateur (ex. : 87.0.4280.88)"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | fullVersionList": {
    "message": "Liste des versions complètes (Sec-CH-UA-Full-Version-List)"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | learnMore": {
    "message": "En savoir plus"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | mobileCheckboxLabel": {
    "message": "Mobile"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | notRepresentable": {
    "message": "Non représentable en tant que chaîne d'en-têtes structurés."
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | platformLabel": {
    "message": "Plate-forme (Sec-CH-UA-Platform/Sec-CH-UA-Platform-Version)"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | platformPlaceholder": {
    "message": "Plate-forme (ex. : Android)"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | platformProperties": {
    "message": "Propriétés de la plate-forme"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | platformVersion": {
    "message": "Version de la plate-forme"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | significantBrandVersionPlaceholder": {
    "message": "Version significative (ex. : 87)"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | title": {
    "message": "Indices client user-agent"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | update": {
    "message": "Mettre à jour"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | userAgentClientHintsInfo": {
    "message": "Les hints client user-agent offrent une alternative à la chaîne user-agent. Ils identifient le navigateur et l'appareil de façon plus structurée, en tenant mieux compte de la protection de la confidentialité."
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | useragent": {
    "message": "User-agent (Sec-CH-UA)"
  },
  "panels/settings/emulation/emulation-meta.ts | devices": {
    "message": "Appareils"
  },
  "panels/settings/emulation/emulation-meta.ts | showDevices": {
    "message": "Afficher les appareils"
  },
  "panels/settings/settings-meta.ts | documentation": {
    "message": "Documentation"
  },
  "panels/settings/settings-meta.ts | experiments": {
    "message": "Tests"
  },
  "panels/settings/settings-meta.ts | ignoreList": {
    "message": "Liste d'éléments à ignorer"
  },
  "panels/settings/settings-meta.ts | preferences": {
    "message": "Préférences"
  },
  "panels/settings/settings-meta.ts | settings": {
    "message": "Paramètres"
  },
  "panels/settings/settings-meta.ts | shortcuts": {
    "message": "Raccourcis"
  },
  "panels/settings/settings-meta.ts | showExperiments": {
    "message": "Afficher les tests"
  },
  "panels/settings/settings-meta.ts | showIgnoreList": {
    "message": "Afficher la liste d'éléments à ignorer"
  },
  "panels/settings/settings-meta.ts | showPreferences": {
    "message": "Afficher les préférences"
  },
  "panels/settings/settings-meta.ts | showShortcuts": {
    "message": "Afficher les raccourcis"
  },
  "panels/snippets/ScriptSnippetFileSystem.ts | linkedTo": {
    "message": "Associé à {PH1}"
  },
  "panels/snippets/ScriptSnippetFileSystem.ts | scriptSnippet": {
    "message": "Extrait de script n° {PH1}"
  },
  "panels/snippets/SnippetsQuickOpen.ts | noSnippetsFound": {
    "message": "Aucun extrait trouvé."
  },
  "panels/snippets/SnippetsQuickOpen.ts | run": {
    "message": "Exécuter"
  },
  "panels/snippets/SnippetsQuickOpen.ts | snippet": {
    "message": "Extrait"
  },
  "panels/sources/AddSourceMapURLDialog.ts | add": {
    "message": "Ajouter"
  },
  "panels/sources/AddSourceMapURLDialog.ts | debugInfoUrl": {
    "message": "URL des symboles DWARF : "
  },
  "panels/sources/AddSourceMapURLDialog.ts | sourceMapUrl": {
    "message": "URL de la carte source : "
  },
  "panels/sources/BreakpointEditDialog.ts | breakpoint": {
    "message": "Point d'arrêt"
  },
  "panels/sources/BreakpointEditDialog.ts | breakpointType": {
    "message": "Type de point d'arrêt"
  },
  "panels/sources/BreakpointEditDialog.ts | closeDialog": {
    "message": "Fermer la boîte de dialogue de modification et enregistrer les changements"
  },
  "panels/sources/BreakpointEditDialog.ts | conditionalBreakpoint": {
    "message": "Point d'arrêt conditionnel"
  },
  "panels/sources/BreakpointEditDialog.ts | expressionToCheckBeforePausingEg": {
    "message": "Expression à vérifier avant suspension (ex. : x > 5)"
  },
  "panels/sources/BreakpointEditDialog.ts | learnMoreOnBreakpointTypes": {
    "message": "En savoir plus : types de points d'arrêt"
  },
  "panels/sources/BreakpointEditDialog.ts | logAMessageToConsoleDoNotBreak": {
    "message": "Consigner un message dans la console (ne pas interrompre)"
  },
  "panels/sources/BreakpointEditDialog.ts | logMessageEgXIsX": {
    "message": "Consigner le message (ex. : 'x is', x)"
  },
  "panels/sources/BreakpointEditDialog.ts | logpoint": {
    "message": "Point de journalisation"
  },
  "panels/sources/BreakpointEditDialog.ts | pauseOnlyWhenTheConditionIsTrue": {
    "message": "Suspendre uniquement quand la condition est \"True\""
  },
  "panels/sources/CSSPlugin.ts | addSourceMap": {
    "message": "Ajouter une carte source…"
  },
  "panels/sources/CSSPlugin.ts | openColorPicker": {
    "message": "Ouvrir le sélecteur de couleur."
  },
  "panels/sources/CSSPlugin.ts | openCubicBezierEditor": {
    "message": "Ouvrez l'éditeur de courbe de Bézier cubique."
  },
  "panels/sources/CallStackSidebarPane.ts | callFrameWarnings": {
    "message": "Des avertissements existent pour certains frames d'appel"
  },
  "panels/sources/CallStackSidebarPane.ts | callStack": {
    "message": "Pile d'appel"
  },
  "panels/sources/CallStackSidebarPane.ts | copyStackTrace": {
    "message": "Copier la trace de la pile"
  },
  "panels/sources/CallStackSidebarPane.ts | debugFileNotFound": {
    "message": "Échec du chargement du fichier de débogage {PH1}."
  },
  "panels/sources/CallStackSidebarPane.ts | notPaused": {
    "message": "Non suspendu"
  },
  "panels/sources/CallStackSidebarPane.ts | onIgnoreList": {
    "message": "sur la liste des éléments à ignorer"
  },
  "panels/sources/CallStackSidebarPane.ts | restartFrame": {
    "message": "Redémarrer le frame"
  },
  "panels/sources/CallStackSidebarPane.ts | showIgnorelistedFrames": {
    "message": "Afficher les frames de la liste des éléments à ignorer"
  },
  "panels/sources/CallStackSidebarPane.ts | showMore": {
    "message": "Plus"
  },
  "panels/sources/CategorizedBreakpointL10n.ts | animationFrameFired": {
    "message": "Frame d'animation déclenché"
  },
  "panels/sources/CategorizedBreakpointL10n.ts | beforeBidderWorkletBiddingStart": {
    "message": "Début de la phase de définition d'enchères"
  },
  "panels/sources/CategorizedBreakpointL10n.ts | beforeBidderWorkletReportingStart": {
    "message": "Début de la phase de création de rapports des enchérisseurs"
  },
  "panels/sources/CategorizedBreakpointL10n.ts | beforeSellerWorkletReportingStart": {
    "message": "Début de la phase de création de rapports des vendeurs"
  },
  "panels/sources/CategorizedBreakpointL10n.ts | beforeSellerWorkletScoringStart": {
    "message": "Début de la phase d'attribution de scores par les vendeurs"
  },
  "panels/sources/CategorizedBreakpointL10n.ts | cancelAnimationFrame": {
    "message": "Annuler le frame d'animation"
  },
  "panels/sources/CategorizedBreakpointL10n.ts | closeAudiocontext": {
    "message": "Fermer AudioContext"
  },
  "panels/sources/CategorizedBreakpointL10n.ts | createAudiocontext": {
    "message": "Créer AudioContext"
  },
  "panels/sources/CategorizedBreakpointL10n.ts | createCanvasContext": {
    "message": "Créer un contexte de canevas"
  },
  "panels/sources/CategorizedBreakpointL10n.ts | policyViolations": {
    "message": "Non-respect des règles"
  },
  "panels/sources/CategorizedBreakpointL10n.ts | requestAnimationFrame": {
    "message": "Demander un frame d'animation"
  },
  "panels/sources/CategorizedBreakpointL10n.ts | resumeAudiocontext": {
    "message": "Reprendre AudioContext"
  },
  "panels/sources/CategorizedBreakpointL10n.ts | scriptBlockedByContentSecurity": {
    "message": "Script bloqué par Content Security Policy"
  },
  "panels/sources/CategorizedBreakpointL10n.ts | scriptFirstStatement": {
    "message": "Première déclaration du script"
  },
  "panels/sources/CategorizedBreakpointL10n.ts | setInnerhtml": {
    "message": "Définir innerHTML"
  },
  "panels/sources/CategorizedBreakpointL10n.ts | setTimeoutOrIntervalFired": {
    "message": "{PH1} déclenché"
  },
  "panels/sources/CategorizedBreakpointL10n.ts | sinkViolations": {
    "message": "Non-respects (récepteur)"
  },
  "panels/sources/CategorizedBreakpointL10n.ts | suspendAudiocontext": {
    "message": "Suspendre AudioContext"
  },
  "panels/sources/CategorizedBreakpointL10n.ts | webglErrorFired": {
    "message": "Erreur WebGL déclenchée"
  },
  "panels/sources/CategorizedBreakpointL10n.ts | webglWarningFired": {
    "message": "Avertissement WebGL déclenché"
  },
  "panels/sources/CoveragePlugin.ts | clickToShowCoveragePanel": {
    "message": "Cliquez ici pour afficher le panneau \"Couverture\""
  },
  "panels/sources/CoveragePlugin.ts | coverageNa": {
    "message": "Couverture : N/A"
  },
  "panels/sources/CoveragePlugin.ts | coverageS": {
    "message": "Couverture : {PH1}"
  },
  "panels/sources/CoveragePlugin.ts | showDetails": {
    "message": "Afficher les détails"
  },
  "panels/sources/DebuggerPausedMessage.ts | attributeModifications": {
    "message": "modifications d'attributs"
  },
  "panels/sources/DebuggerPausedMessage.ts | childSAdded": {
    "message": "{PH1} enfant ajouté"
  },
  "panels/sources/DebuggerPausedMessage.ts | debuggerPaused": {
    "message": "Débogueur suspendu"
  },
  "panels/sources/DebuggerPausedMessage.ts | descendantSAdded": {
    "message": "{PH1} descendant ajouté"
  },
  "panels/sources/DebuggerPausedMessage.ts | descendantSRemoved": {
    "message": "{PH1} descendant supprimé"
  },
  "panels/sources/DebuggerPausedMessage.ts | nodeRemoval": {
    "message": "suppression de nœud"
  },
  "panels/sources/DebuggerPausedMessage.ts | pausedBeforePotentialOutofmemory": {
    "message": "Suspendu avant plantage potentiel pour mémoire insuffisante"
  },
  "panels/sources/DebuggerPausedMessage.ts | pausedOnAssertion": {
    "message": "Suspendu sur assertion"
  },
  "panels/sources/DebuggerPausedMessage.ts | pausedOnBreakpoint": {
    "message": "Suspendu sur point d'arrêt"
  },
  "panels/sources/DebuggerPausedMessage.ts | pausedOnCspViolation": {
    "message": "Suspendu sur non-respect de CSP"
  },
  "panels/sources/DebuggerPausedMessage.ts | pausedOnDebuggedFunction": {
    "message": "Suspendu sur fonction déboguée"
  },
  "panels/sources/DebuggerPausedMessage.ts | pausedOnEventListener": {
    "message": "Suspendu sur écouteur d'événements"
  },
  "panels/sources/DebuggerPausedMessage.ts | pausedOnException": {
    "message": "Suspendu sur exception"
  },
  "panels/sources/DebuggerPausedMessage.ts | pausedOnPromiseRejection": {
    "message": "Suspendu lors du rejet de promise"
  },
  "panels/sources/DebuggerPausedMessage.ts | pausedOnS": {
    "message": "Suspendu sur {PH1}"
  },
  "panels/sources/DebuggerPausedMessage.ts | pausedOnXhrOrFetch": {
    "message": "Suspendu sur XHR ou fetch"
  },
  "panels/sources/DebuggerPausedMessage.ts | scriptBlockedDueToContent": {
    "message": "Script bloqué en raison de la directive Content Security Policy : {PH1}"
  },
  "panels/sources/DebuggerPausedMessage.ts | subtreeModifications": {
    "message": "modifications de la sous-arborescence"
  },
  "panels/sources/DebuggerPausedMessage.ts | trustedTypePolicyViolation": {
    "message": "Non-respect de la règle Trusted Type"
  },
  "panels/sources/DebuggerPausedMessage.ts | trustedTypeSinkViolation": {
    "message": "Non-respect (récepteur) - Trusted Type"
  },
  "panels/sources/DebuggerPausedMessage.ts | webglErrorFiredS": {
    "message": "Erreur WebGL déclenchée ({PH1})"
  },
  "panels/sources/DebuggerPlugin.ts | addBreakpoint": {
    "message": "Ajouter un point d'arrêt"
  },
  "panels/sources/DebuggerPlugin.ts | addConditionalBreakpoint": {
    "message": "Ajouter un point d'arrêt conditionnel…"
  },
  "panels/sources/DebuggerPlugin.ts | addLogpoint": {
    "message": "Ajouter un point de journalisation…"
  },
  "panels/sources/DebuggerPlugin.ts | addSourceMap": {
    "message": "Ajouter une carte source…"
  },
  "panels/sources/DebuggerPlugin.ts | addWasmDebugInfo": {
    "message": "Ajouter des infos de débogage DWARF…"
  },
  "panels/sources/DebuggerPlugin.ts | associatedFilesAreAvailable": {
    "message": "Les fichiers associés sont disponibles via l'arborescence de fichiers ou {PH1}."
  },
  "panels/sources/DebuggerPlugin.ts | associatedFilesShouldBeAdded": {
    "message": "Les fichiers associés doivent être ajoutés à l'arborescence de fichiers. Vous pouvez déboguer ces fichiers sources résolus en tant que fichiers JavaScript normaux."
  },
  "panels/sources/DebuggerPlugin.ts | configure": {
    "message": "Configurer"
  },
  "panels/sources/DebuggerPlugin.ts | debugFileNotFound": {
    "message": "Échec du chargement du fichier de débogage {PH1}."
  },
  "panels/sources/DebuggerPlugin.ts | debugInfoNotFound": {
    "message": "Échec du chargement des informations de débogage pour {PH1}."
  },
  "panels/sources/DebuggerPlugin.ts | debuggingPowerReduced": {
    "message": "Les outils de développement ne peuvent pas afficher les sources créées, mais vous pouvez déboguer le code déployé."
  },
  "panels/sources/DebuggerPlugin.ts | disableBreakpoint": {
    "message": "{n,plural, =1{Désactiver le point d'arrêt}one{Désactiver le point d'arrêt dans la ligne}other{Désactiver tous les points d'arrêt dans la ligne}}"
  },
  "panels/sources/DebuggerPlugin.ts | editBreakpoint": {
    "message": "Modifier le point d'arrêt…"
  },
  "panels/sources/DebuggerPlugin.ts | enableBreakpoint": {
    "message": "{n,plural, =1{Activer le point d'arrêt}one{Activer le point d'arrêt dans la ligne}other{Activer tous les points d'arrêt dans la ligne}}"
  },
  "panels/sources/DebuggerPlugin.ts | errorLoading": {
    "message": "Erreur lors du chargement de l'URL {PH1} : {PH2}"
  },
  "panels/sources/DebuggerPlugin.ts | ignoreContentScripts": {
    "message": "Ignorer les scripts d'extension"
  },
  "panels/sources/DebuggerPlugin.ts | ignoreScript": {
    "message": "Ignorer ce fichier"
  },
  "panels/sources/DebuggerPlugin.ts | neverPauseHere": {
    "message": "Ne jamais suspendre ici"
  },
  "panels/sources/DebuggerPlugin.ts | reloadForSourceMap": {
    "message": "Pour la réactiver, assurez-vous que le fichier ne figure pas dans la liste des éléments à ignorer et actualisez."
  },
  "panels/sources/DebuggerPlugin.ts | removeBreakpoint": {
    "message": "{n,plural, =1{Supprimer le point d'arrêt}one{Supprimer le point d'arrêt dans la ligne}other{Supprimer tous les points d'arrêt dans la ligne}}"
  },
  "panels/sources/DebuggerPlugin.ts | removeFromIgnoreList": {
    "message": "Supprimer de la liste des éléments à ignorer"
  },
  "panels/sources/DebuggerPlugin.ts | sourceMapFailed": {
    "message": "Échec du chargement de la carte source."
  },
  "panels/sources/DebuggerPlugin.ts | sourceMapLoaded": {
    "message": "Carte source chargée."
  },
  "panels/sources/DebuggerPlugin.ts | sourceMapSkipped": {
    "message": "Carte source ignorée pour ce fichier."
  },
  "panels/sources/DebuggerPlugin.ts | theDebuggerWillSkipStepping": {
    "message": "Le débogueur ignorera les étapes de ce script et ne s'arrêtera pas sur les exceptions."
  },
  "panels/sources/DebuggerPlugin.ts | thisScriptIsOnTheDebuggersIgnore": {
    "message": "Ce script est sur la liste des éléments à ignorer du débogueur"
  },
  "panels/sources/FilteredUISourceCodeListProvider.ts | noFilesFound": {
    "message": "Aucun fichier trouvé"
  },
  "panels/sources/FilteredUISourceCodeListProvider.ts | sIgnoreListed": {
    "message": "{PH1} (sur la liste des éléments à ignorer)"
  },
  "panels/sources/GoToLineQuickOpen.ts | currentLineSTypeALineNumber": {
    "message": "Ligne actuelle : {PH1}. Saisissez un numéro de ligne compris entre 1 et {PH2} pour y accéder."
  },
  "panels/sources/GoToLineQuickOpen.ts | currentPositionXsTypeAnOffset": {
    "message": "Position actuelle : 0x{PH1}. Saisissez un décalage entre 0x{PH2} et 0x{PH3} pour y accéder."
  },
  "panels/sources/GoToLineQuickOpen.ts | goToLineS": {
    "message": "Accéder à la ligne {PH1}."
  },
  "panels/sources/GoToLineQuickOpen.ts | goToLineSAndColumnS": {
    "message": "Accédez à la ligne {PH1}, colonne {PH2}."
  },
  "panels/sources/GoToLineQuickOpen.ts | goToOffsetXs": {
    "message": "Accédez au décalage 0x{PH1}."
  },
  "panels/sources/GoToLineQuickOpen.ts | noFileSelected": {
    "message": "Aucun fichier sélectionné."
  },
  "panels/sources/GoToLineQuickOpen.ts | noResultsFound": {
    "message": "Aucun résultat trouvé"
  },
  "panels/sources/GoToLineQuickOpen.ts | typeANumberToGoToThatLine": {
    "message": "Saisissez un nombre pour accéder à la ligne correspondante."
  },
  "panels/sources/InplaceFormatterEditorAction.ts | format": {
    "message": "Formatter"
  },
  "panels/sources/InplaceFormatterEditorAction.ts | formatS": {
    "message": "Format : {PH1}"
  },
  "panels/sources/NavigatorView.ts | actionCannotBeUndone": {
    "message": "Cette action est irréversible."
  },
  "panels/sources/NavigatorView.ts | areYouSureYouWantToDeleteFolder": {
    "message": "Voulez-vous vraiment supprimer ce dossier et son contenu ?"
  },
  "panels/sources/NavigatorView.ts | areYouSureYouWantToDeleteThis": {
    "message": "Voulez-vous vraiment supprimer ce fichier ?"
  },
  "panels/sources/NavigatorView.ts | areYouSureYouWantToExcludeThis": {
    "message": "Voulez-vous vraiment exclure ce dossier ?"
  },
  "panels/sources/NavigatorView.ts | areYouSureYouWantToRemoveThis": {
    "message": "Supprimer \"{PH1}\" de l'espace de travail ?"
  },
  "panels/sources/NavigatorView.ts | authored": {
    "message": "Créées"
  },
  "panels/sources/NavigatorView.ts | authoredTooltip": {
    "message": "Contient des sources d'origine"
  },
  "panels/sources/NavigatorView.ts | delete": {
    "message": "Supprimer"
  },
  "panels/sources/NavigatorView.ts | deployed": {
    "message": "Déployées"
  },
  "panels/sources/NavigatorView.ts | deployedTooltip": {
    "message": "Contient les sources finales que le navigateur voit"
  },
  "panels/sources/NavigatorView.ts | excludeFolder": {
    "message": "Exclure de l'espace de travail"
  },
  "panels/sources/NavigatorView.ts | makeACopy": {
    "message": "Créer une copie…"
  },
  "panels/sources/NavigatorView.ts | newFile": {
    "message": "Nouveau fichier"
  },
  "panels/sources/NavigatorView.ts | noDomain": {
    "message": "(aucun domaine)"
  },
  "panels/sources/NavigatorView.ts | openFolder": {
    "message": "Ouvrir le dossier"
  },
  "panels/sources/NavigatorView.ts | remove": {
    "message": "Supprimer"
  },
  "panels/sources/NavigatorView.ts | removeFolderFromWorkspace": {
    "message": "Supprimer de l'espace de travail"
  },
  "panels/sources/NavigatorView.ts | rename": {
    "message": "Renommer…"
  },
  "panels/sources/NavigatorView.ts | sFromSourceMap": {
    "message": "{PH1} (de la carte source)"
  },
  "panels/sources/NavigatorView.ts | sIgnoreListed": {
    "message": "{PH1} (sur la liste des éléments à ignorer)"
  },
  "panels/sources/NavigatorView.ts | searchInAllFiles": {
    "message": "Rechercher dans tous les fichiers"
  },
  "panels/sources/NavigatorView.ts | searchInFolder": {
    "message": "Rechercher dans le dossier"
  },
  "panels/sources/NavigatorView.ts | workspaceStopSyncing": {
    "message": "Les modifications apportées dans les outils de développement ne seront plus synchronisées avec vos sources."
  },
  "panels/sources/OutlineQuickOpen.ts | noFileSelected": {
    "message": "Aucun fichier sélectionné."
  },
  "panels/sources/OutlineQuickOpen.ts | noResultsFound": {
    "message": "Aucun résultat trouvé"
  },
  "panels/sources/OutlineQuickOpen.ts | openAJavascriptOrCssFileToSee": {
    "message": "Ouvrir un fichier JavaScript ou CSS pour voir les symboles"
  },
  "panels/sources/ProfilePlugin.ts | kb": {
    "message": "ko"
  },
  "panels/sources/ProfilePlugin.ts | mb": {
    "message": "Mo"
  },
  "panels/sources/ProfilePlugin.ts | ms": {
    "message": "ms"
  },
  "panels/sources/ResourceOriginPlugin.ts | fromS": {
    "message": "(À partir de {PH1})"
  },
  "panels/sources/ResourceOriginPlugin.ts | sourceMappedFromS": {
    "message": "(Source mappée à partir de {PH1})"
  },
  "panels/sources/ScopeChainSidebarPane.ts | closure": {
    "message": "Fermeture"
  },
  "panels/sources/ScopeChainSidebarPane.ts | closureS": {
    "message": "Fermeture ({PH1})"
  },
  "panels/sources/ScopeChainSidebarPane.ts | exception": {
    "message": "Exception"
  },
  "panels/sources/ScopeChainSidebarPane.ts | loading": {
    "message": "Chargement…"
  },
  "panels/sources/ScopeChainSidebarPane.ts | noVariables": {
    "message": "Aucune variable"
  },
  "panels/sources/ScopeChainSidebarPane.ts | notPaused": {
    "message": "Non suspendu"
  },
  "panels/sources/ScopeChainSidebarPane.ts | returnValue": {
    "message": "Valeur renvoyée"
  },
  "panels/sources/SnippetsPlugin.ts | ctrlenter": {
    "message": "Ctrl+Entrée"
  },
  "panels/sources/SnippetsPlugin.ts | enter": {
    "message": "⌘+Entrée"
  },
  "panels/sources/SourcesNavigator.ts | clearConfiguration": {
    "message": "Effacer la configuration"
  },
  "panels/sources/SourcesNavigator.ts | createNewSnippet": {
    "message": "Créer un extrait"
  },
  "panels/sources/SourcesNavigator.ts | explainContentScripts": {
    "message": "Afficher les scripts de contenu diffusés par les extensions"
  },
  "panels/sources/SourcesNavigator.ts | explainLocalOverrides": {
    "message": "Remplacer les requêtes réseau et le contenu Web en local pour simuler des ressources distantes"
  },
  "panels/sources/SourcesNavigator.ts | explainSnippets": {
    "message": "Enregistrez le code JavaScript que vous exécutez souvent afin de l'exécuter à nouveau à tout moment"
  },
  "panels/sources/SourcesNavigator.ts | explainWorkspace": {
    "message": "Configurez Workspace pour synchroniser les modifications directement avec les sources que vous développez."
  },
  "panels/sources/SourcesNavigator.ts | learnMore": {
    "message": "En savoir plus"
  },
  "panels/sources/SourcesNavigator.ts | newSnippet": {
    "message": "Nouvel extrait"
  },
  "panels/sources/SourcesNavigator.ts | remove": {
    "message": "Supprimer"
  },
  "panels/sources/SourcesNavigator.ts | rename": {
    "message": "Renommer…"
  },
  "panels/sources/SourcesNavigator.ts | run": {
    "message": "Exécuter"
  },
  "panels/sources/SourcesNavigator.ts | saveAs": {
    "message": "Enregistrer sous…"
  },
  "panels/sources/SourcesNavigator.ts | selectFolderForOverrides": {
    "message": "Sélectionner le dossier des remplacements"
  },
  "panels/sources/SourcesPanel.ts | continueToHere": {
    "message": "Continuer jusqu'ici"
  },
  "panels/sources/SourcesPanel.ts | copyS": {
    "message": "Copier {PH1}"
  },
  "panels/sources/SourcesPanel.ts | copyStringAsJSLiteral": {
    "message": "Copier la chaîne en tant que littéral JavaScript"
  },
  "panels/sources/SourcesPanel.ts | copyStringAsJSONLiteral": {
    "message": "Copier la chaîne en tant que littéral JSON"
  },
  "panels/sources/SourcesPanel.ts | copyStringContents": {
    "message": "Copier le contenu de la chaîne"
  },
  "panels/sources/SourcesPanel.ts | debuggerHidden": {
    "message": "Barre latérale du débogueur masquée"
  },
  "panels/sources/SourcesPanel.ts | debuggerShown": {
    "message": "Barre latérale du débogueur affichée"
  },
  "panels/sources/SourcesPanel.ts | dropWorkspaceFolderHere": {
    "message": "Déposez le dossier de l'espace de travail ici"
  },
  "panels/sources/SourcesPanel.ts | groupByAuthored": {
    "message": "Grouper par créé/déployé"
  },
  "panels/sources/SourcesPanel.ts | groupByFolder": {
    "message": "Regrouper par dossier"
  },
  "panels/sources/SourcesPanel.ts | hideDebugger": {
    "message": "Masquer le débogueur"
  },
  "panels/sources/SourcesPanel.ts | hideIgnoreListed": {
    "message": "Masquer les sources de la liste des éléments à ignorer"
  },
  "panels/sources/SourcesPanel.ts | hideNavigator": {
    "message": "Masquer le navigateur"
  },
  "panels/sources/SourcesPanel.ts | moreOptions": {
    "message": "Autres options"
  },
  "panels/sources/SourcesPanel.ts | navigatorHidden": {
    "message": "Barre latérale du navigateur masquée"
  },
  "panels/sources/SourcesPanel.ts | navigatorShown": {
    "message": "Barre latérale du navigateur affichée"
  },
  "panels/sources/SourcesPanel.ts | openInSourcesPanel": {
    "message": "Ouvrir dans le panneau \"Sources\""
  },
  "panels/sources/SourcesPanel.ts | pauseOnCaughtExceptions": {
    "message": "Suspendre sur les exceptions interceptées"
  },
  "panels/sources/SourcesPanel.ts | resumeWithAllPausesBlockedForMs": {
    "message": "Reprendre avec toutes les suspensions bloquées pendant 500 ms"
  },
  "panels/sources/SourcesPanel.ts | revealInSidebar": {
    "message": "Afficher dans la barre latérale du navigateur"
  },
  "panels/sources/SourcesPanel.ts | showDebugger": {
    "message": "Afficher le débogueur"
  },
  "panels/sources/SourcesPanel.ts | showFunctionDefinition": {
    "message": "Afficher la définition de la fonction"
  },
  "panels/sources/SourcesPanel.ts | showNavigator": {
    "message": "Afficher le navigateur"
  },
  "panels/sources/SourcesPanel.ts | storeAsGlobalVariable": {
    "message": "Stocker en tant que variable globale"
  },
  "panels/sources/SourcesPanel.ts | terminateCurrentJavascriptCall": {
    "message": "Mettre fin à l'appel JavaScript en cours"
  },
  "panels/sources/SourcesView.ts | openFile": {
    "message": "Ouvrir un fichier"
  },
  "panels/sources/SourcesView.ts | runCommand": {
    "message": "Exécuter la commande"
  },
  "panels/sources/SourcesView.ts | selectFolder": {
    "message": "Sélectionner un dossier"
  },
  "panels/sources/SourcesView.ts | sourceViewActions": {
    "message": "Actions pour afficher la source"
  },
  "panels/sources/SourcesView.ts | workspaceDropInAFolderToSyncSources": {
    "message": "Pour synchroniser les modifications dans l'espace de travail, déposez un dossier contenant vos sources ici ou"
  },
  "panels/sources/TabbedEditorContainer.ts | areYouSureYouWantToCloseUnsaved": {
    "message": "Voulez-vous vraiment fermer le fichier {PH1} non enregistré ?"
  },
  "panels/sources/TabbedEditorContainer.ts | changesToThisFileWereNotSavedTo": {
    "message": "Les modifications apportées à ce fichier n'ont pas été enregistrées dans le système de fichiers."
  },
  "panels/sources/TabbedEditorContainer.ts | unableToLoadThisContent": {
    "message": "Impossible de charger ce contenu."
  },
  "panels/sources/ThreadsSidebarPane.ts | paused": {
    "message": "suspendu"
  },
  "panels/sources/WatchExpressionsSidebarPane.ts | addPropertyPathToWatch": {
    "message": "Ajouter le chemin d'accès de la propriété au contrôle"
  },
  "panels/sources/WatchExpressionsSidebarPane.ts | addWatchExpression": {
    "message": "Ajouter une expression de contrôle"
  },
  "panels/sources/WatchExpressionsSidebarPane.ts | copyValue": {
    "message": "Copier la valeur"
  },
  "panels/sources/WatchExpressionsSidebarPane.ts | deleteAllWatchExpressions": {
    "message": "Supprimer toutes les expressions de contrôle"
  },
  "panels/sources/WatchExpressionsSidebarPane.ts | deleteWatchExpression": {
    "message": "Supprimer l'expression de contrôle"
  },
  "panels/sources/WatchExpressionsSidebarPane.ts | noWatchExpressions": {
    "message": "Aucune expression de contrôle"
  },
  "panels/sources/WatchExpressionsSidebarPane.ts | notAvailable": {
    "message": "<non disponible>"
  },
  "panels/sources/WatchExpressionsSidebarPane.ts | refreshWatchExpressions": {
    "message": "Actualiser les expressions de contrôle"
  },
  "panels/sources/components/BreakpointsView.ts | breakpointHit": {
    "message": "appel de point d'arrêt {PH1}"
  },
  "panels/sources/components/BreakpointsView.ts | checked": {
    "message": "coché"
  },
  "panels/sources/components/BreakpointsView.ts | conditionCode": {
    "message": "Condition : {PH1}"
  },
  "panels/sources/components/BreakpointsView.ts | disableAllBreakpointsInFile": {
    "message": "Désactiver les points d'arrêt dans le fichier"
  },
  "panels/sources/components/BreakpointsView.ts | editCondition": {
    "message": "Modifier la condition"
  },
  "panels/sources/components/BreakpointsView.ts | editLogpoint": {
    "message": "Modifier le point de journalisation"
  },
  "panels/sources/components/BreakpointsView.ts | enableAllBreakpointsInFile": {
    "message": "Activer tous les points d'arrêt dans le fichier"
  },
  "panels/sources/components/BreakpointsView.ts | indeterminate": {
    "message": "mixte"
  },
  "panels/sources/components/BreakpointsView.ts | logpointCode": {
    "message": "Point de journalisation : {PH1}"
  },
  "panels/sources/components/BreakpointsView.ts | pauseOnCaughtExceptions": {
    "message": "Suspendre sur les exceptions interceptées"
  },
  "panels/sources/components/BreakpointsView.ts | pauseOnUncaughtExceptions": {
    "message": "Suspendre sur les exceptions non détectées"
  },
  "panels/sources/components/BreakpointsView.ts | removeAllBreakpoints": {
    "message": "Supprimer tous les points d'arrêt"
  },
  "panels/sources/components/BreakpointsView.ts | removeAllBreakpointsInFile": {
    "message": "Supprimer tous les points d'arrêt dans le fichier"
  },
  "panels/sources/components/BreakpointsView.ts | removeBreakpoint": {
    "message": "Supprimer le point d'arrêt"
  },
  "panels/sources/components/BreakpointsView.ts | removeOtherBreakpoints": {
    "message": "Supprimer d'autres points d'arrêt"
  },
  "panels/sources/components/BreakpointsView.ts | revealLocation": {
    "message": "Afficher l'emplacement"
  },
  "panels/sources/components/BreakpointsView.ts | unchecked": {
    "message": "décochée"
  },
  "panels/sources/components/HeadersView.ts | addHeader": {
    "message": "Ajouter un en-tête"
  },
  "panels/sources/components/HeadersView.ts | addOverrideRule": {
    "message": "Ajouter une règle de forçage"
  },
  "panels/sources/components/HeadersView.ts | errorWhenParsing": {
    "message": "Erreur lors de l'analyse de ''{PH1}''."
  },
  "panels/sources/components/HeadersView.ts | learnMore": {
    "message": "En savoir plus"
  },
  "panels/sources/components/HeadersView.ts | parsingErrorExplainer": {
    "message": "Cela est probablement dû à une erreur de syntaxe dans ''{PH1}''. Essayez d'ouvrir ce fichier dans un éditeur externe pour corriger l'erreur ou supprimez-le, puis remplacez-le par une nouvelle version."
  },
  "panels/sources/components/HeadersView.ts | removeBlock": {
    "message": "Supprimer cette section ApplyTo"
  },
  "panels/sources/components/HeadersView.ts | removeHeader": {
    "message": "Supprimer cet en-tête"
  },
  "panels/sources/sources-meta.ts | activateBreakpoints": {
    "message": "Activer les points d'arrêt"
  },
  "panels/sources/sources-meta.ts | addFolder": {
    "message": "Ajouter un dossier"
  },
  "panels/sources/sources-meta.ts | addFolderToWorkspace": {
    "message": "Ajouter un dossier à l'espace de travail"
  },
  "panels/sources/sources-meta.ts | addSelectedTextToWatches": {
    "message": "Ajouter le texte sélectionné aux expressions de contrôle"
  },
  "panels/sources/sources-meta.ts | all": {
    "message": "Tout"
  },
  "panels/sources/sources-meta.ts | allowScrollingPastEndOfFile": {
    "message": "Autoriser le défilement au-delà de la fin du fichier"
  },
  "panels/sources/sources-meta.ts | autocompletion": {
    "message": "Saisie semi-automatique"
  },
  "panels/sources/sources-meta.ts | automaticallyRevealFilesIn": {
    "message": "Afficher automatiquement les fichiers dans la barre latérale"
  },
  "panels/sources/sources-meta.ts | bracketMatching": {
    "message": "Correspondance entre crochets"
  },
  "panels/sources/sources-meta.ts | breakpoints": {
    "message": "Points d'arrêt"
  },
  "panels/sources/sources-meta.ts | closeAll": {
    "message": "Tout fermer"
  },
  "panels/sources/sources-meta.ts | closeTheActiveTab": {
    "message": "Fermer l'onglet ouvert"
  },
  "panels/sources/sources-meta.ts | codeFolding": {
    "message": "Pliage du code"
  },
  "panels/sources/sources-meta.ts | createNewSnippet": {
    "message": "Créer un extrait"
  },
  "panels/sources/sources-meta.ts | deactivateBreakpoints": {
    "message": "Désactiver les points d'arrêt"
  },
  "panels/sources/sources-meta.ts | decrementCssUnitBy": {
    "message": "Diminuer l'unité CSS de {PH1}"
  },
  "panels/sources/sources-meta.ts | detectIndentation": {
    "message": "Détecter les retraits"
  },
  "panels/sources/sources-meta.ts | disableAutoFocusOnDebuggerPaused": {
    "message": "Ne pas ouvrir le panneau \"Sources\" au déclenchement d'un point d'arrêt"
  },
  "panels/sources/sources-meta.ts | disableAutocompletion": {
    "message": "Désactiver la saisie semi-automatique"
  },
  "panels/sources/sources-meta.ts | disableBracketMatching": {
    "message": "Désactiver la correspondance entre crochets"
  },
  "panels/sources/sources-meta.ts | disableCodeFolding": {
    "message": "Désactiver le pliage de code"
  },
  "panels/sources/sources-meta.ts | disableCssSourceMaps": {
    "message": "Désactiver les cartes sources CSS"
  },
  "panels/sources/sources-meta.ts | disableTabMovesFocus": {
    "message": "Désactiver Tabulation pour déplacer le curseur"
  },
  "panels/sources/sources-meta.ts | disableWasmAutoStepping": {
    "message": "Désactiver l'exécution automatique de Wasm"
  },
  "panels/sources/sources-meta.ts | disallowScrollingPastEndOfFile": {
    "message": "Interdire le défilement au-delà de la fin du fichier"
  },
  "panels/sources/sources-meta.ts | displayVariableValuesInlineWhile": {
    "message": "Afficher les valeurs de variables intégrées lors du débogage"
  },
  "panels/sources/sources-meta.ts | doNotAutomaticallyRevealFilesIn": {
    "message": "Ne pas afficher automatiquement les fichiers dans la barre latérale"
  },
  "panels/sources/sources-meta.ts | doNotDetectIndentation": {
    "message": "Ne pas détecter les retraits"
  },
  "panels/sources/sources-meta.ts | doNotDisplayVariableValuesInline": {
    "message": "Ne pas afficher les valeurs de variables intégrées lors du débogage"
  },
  "panels/sources/sources-meta.ts | doNotSearchInAnonymousAndContent": {
    "message": "Ne pas rechercher dans les scripts anonymes et de contenu"
  },
  "panels/sources/sources-meta.ts | doNotShowWhitespaceCharacters": {
    "message": "Ne pas afficher les espaces blancs"
  },
  "panels/sources/sources-meta.ts | enableAutoFocusOnDebuggerPaused": {
    "message": "Ouvrir le panneau \"Sources\" au déclenchement d'un point d'arrêt"
  },
  "panels/sources/sources-meta.ts | enableAutocompletion": {
    "message": "Activer la saisie semi-automatique"
  },
  "panels/sources/sources-meta.ts | enableBracketMatching": {
    "message": "Activer la correspondance entre crochets"
  },
  "panels/sources/sources-meta.ts | enableCodeFolding": {
    "message": "Activer le pliage de code"
  },
  "panels/sources/sources-meta.ts | enableCssSourceMaps": {
    "message": "Activer les cartes sources CSS"
  },
  "panels/sources/sources-meta.ts | enableTabMovesFocus": {
    "message": "Activer Tabulation pour déplacer le curseur"
  },
  "panels/sources/sources-meta.ts | enableWasmAutoStepping": {
    "message": "Activer l'exécution automatique de Wasm"
  },
  "panels/sources/sources-meta.ts | evaluateSelectedTextInConsole": {
    "message": "Évaluer le texte sélectionné dans la console"
  },
  "panels/sources/sources-meta.ts | file": {
    "message": "Fichier"
  },
  "panels/sources/sources-meta.ts | goTo": {
    "message": "Accédez à"
  },
  "panels/sources/sources-meta.ts | goToAFunctionDeclarationruleSet": {
    "message": "Accéder à une déclaration de fonction/un ensemble de règles"
  },
  "panels/sources/sources-meta.ts | goToLine": {
    "message": "Accéder à la ligne"
  },
  "panels/sources/sources-meta.ts | incrementCssUnitBy": {
    "message": "Augmenter l'unité CSS de {PH1}"
  },
  "panels/sources/sources-meta.ts | jumpToNextEditingLocation": {
    "message": "Passer à l'emplacement de modification suivant"
  },
  "panels/sources/sources-meta.ts | jumpToPreviousEditingLocation": {
    "message": "Passer à l'emplacement de modification précédent"
  },
  "panels/sources/sources-meta.ts | line": {
    "message": "Ligne"
  },
  "panels/sources/sources-meta.ts | nextCallFrame": {
    "message": "Frame d'appel suivant"
  },
  "panels/sources/sources-meta.ts | nextEditorTab": {
    "message": "Éditeur suivant"
  },
  "panels/sources/sources-meta.ts | none": {
    "message": "Aucun"
  },
  "panels/sources/sources-meta.ts | open": {
    "message": "Ouvrir"
  },
  "panels/sources/sources-meta.ts | pauseScriptExecution": {
    "message": "Suspendre l'exécution du script"
  },
  "panels/sources/sources-meta.ts | previousCallFrame": {
    "message": "Frame d'appel précédent"
  },
  "panels/sources/sources-meta.ts | previousEditorTab": {
    "message": "Éditeur précédent"
  },
  "panels/sources/sources-meta.ts | quickSource": {
    "message": "Source rapide"
  },
  "panels/sources/sources-meta.ts | rename": {
    "message": "Renommer"
  },
  "panels/sources/sources-meta.ts | resumeScriptExecution": {
    "message": "Reprendre l'exécution du script"
  },
  "panels/sources/sources-meta.ts | revealActiveFileInSidebar": {
    "message": "Afficher le fichier actif dans la barre latérale du navigateur"
  },
  "panels/sources/sources-meta.ts | runSnippet": {
    "message": "Exécuter l'extrait"
  },
  "panels/sources/sources-meta.ts | save": {
    "message": "Enregistrer"
  },
  "panels/sources/sources-meta.ts | saveAll": {
    "message": "Tout enregistrer"
  },
  "panels/sources/sources-meta.ts | scope": {
    "message": "NIveau d'accès"
  },
  "panels/sources/sources-meta.ts | search": {
    "message": "Rechercher"
  },
  "panels/sources/sources-meta.ts | searchInAnonymousAndContent": {
    "message": "Rechercher dans les scripts anonymes et de contenu"
  },
  "panels/sources/sources-meta.ts | showAllWhitespaceCharacters": {
    "message": "Afficher tous les espaces blancs"
  },
  "panels/sources/sources-meta.ts | showBreakpoints": {
    "message": "Afficher les points d'arrêt"
  },
  "panels/sources/sources-meta.ts | showQuickSource": {
    "message": "Afficher la source rapide"
  },
  "panels/sources/sources-meta.ts | showScope": {
    "message": "Afficher le niveau d'accès"
  },
  "panels/sources/sources-meta.ts | showSearch": {
    "message": "Afficher la recherche"
  },
  "panels/sources/sources-meta.ts | showSnippets": {
    "message": "Afficher les extraits"
  },
  "panels/sources/sources-meta.ts | showSources": {
    "message": "Afficher les sources"
  },
  "panels/sources/sources-meta.ts | showThreads": {
    "message": "Afficher les threads"
  },
  "panels/sources/sources-meta.ts | showTrailingWhitespaceCharacters": {
    "message": "Afficher les espaces blancs de fin"
  },
  "panels/sources/sources-meta.ts | showWatch": {
    "message": "Afficher l'outil de contrôle"
  },
  "panels/sources/sources-meta.ts | showWhitespaceCharacters": {
    "message": "Afficher les espaces blancs :"
  },
  "panels/sources/sources-meta.ts | showWorkspace": {
    "message": "Afficher l'espace de travail"
  },
  "panels/sources/sources-meta.ts | snippets": {
    "message": "Extraits"
  },
  "panels/sources/sources-meta.ts | sources": {
    "message": "Sources"
  },
  "panels/sources/sources-meta.ts | step": {
    "message": "Étape"
  },
  "panels/sources/sources-meta.ts | stepIntoNextFunctionCall": {
    "message": "Passer à l'appel de fonction suivant"
  },
  "panels/sources/sources-meta.ts | stepOutOfCurrentFunction": {
    "message": "Quitter la fonction actuelle"
  },
  "panels/sources/sources-meta.ts | stepOverNextFunctionCall": {
    "message": "Passer l'appel de fonction suivant"
  },
  "panels/sources/sources-meta.ts | switchFile": {
    "message": "Changer le fichier"
  },
  "panels/sources/sources-meta.ts | symbol": {
    "message": "Symbole"
  },
  "panels/sources/sources-meta.ts | threads": {
    "message": "Threads"
  },
  "panels/sources/sources-meta.ts | toggleBreakpoint": {
    "message": "Activer/Désactiver le point d'arrêt"
  },
  "panels/sources/sources-meta.ts | toggleBreakpointEnabled": {
    "message": "Désactiver le point d'arrêt activé"
  },
  "panels/sources/sources-meta.ts | toggleBreakpointInputWindow": {
    "message": "Activer/Désactiver la fenêtre de saisie du point d'arrêt"
  },
  "panels/sources/sources-meta.ts | toggleDebuggerSidebar": {
    "message": "Activer/Désactiver la barre latérale du débogueur"
  },
  "panels/sources/sources-meta.ts | toggleNavigatorSidebar": {
    "message": "Activer/Désactiver la barre latérale du navigateur"
  },
  "panels/sources/sources-meta.ts | trailing": {
    "message": "De fin"
  },
  "panels/sources/sources-meta.ts | wasmAutoStepping": {
    "message": "Lors du débogage de Wasm avec des informations de débogage, ne suspendez pas le bytecode Wasm si possible."
  },
  "panels/sources/sources-meta.ts | watch": {
    "message": "Contrôle"
  },
  "panels/sources/sources-meta.ts | workspace": {
    "message": "Espace de travail"
  },
  "panels/timeline/AnimationsTrackAppender.ts | animations": {
    "message": "Animations"
  },
  "panels/timeline/AppenderUtils.ts | sSelfS": {
    "message": "{PH1} (individuel : {PH2})"
  },
  "panels/timeline/CountersGraph.ts | documents": {
    "message": "Documents"
  },
  "panels/timeline/CountersGraph.ts | gpuMemory": {
    "message": "Mémoire GPU"
  },
  "panels/timeline/CountersGraph.ts | jsHeap": {
    "message": "Segment de mémoire JS"
  },
  "panels/timeline/CountersGraph.ts | listeners": {
    "message": "Écouteurs"
  },
  "panels/timeline/CountersGraph.ts | nodes": {
    "message": "Nœuds"
  },
  "panels/timeline/CountersGraph.ts | ss": {
    "message": "[{PH1} – {PH2}]"
  },
  "panels/timeline/EventUICategory.ts | animation": {
    "message": "Animation"
  },
  "panels/timeline/EventUICategory.ts | animationFrameFired": {
    "message": "Frame d'animation déclenché"
  },
  "panels/timeline/EventUICategory.ts | async": {
    "message": "Asynchrone"
  },
  "panels/timeline/EventUICategory.ts | asyncTask": {
    "message": "Tâche asynchrone"
  },
  "panels/timeline/EventUICategory.ts | cacheModule": {
    "message": "Mettre en cache le code du module"
  },
  "panels/timeline/EventUICategory.ts | cacheScript": {
    "message": "Mettre en cache le code du script"
  },
  "panels/timeline/EventUICategory.ts | cachedWasmModule": {
    "message": "Module Wasm en cache"
  },
  "panels/timeline/EventUICategory.ts | cancelAnimationFrame": {
    "message": "Annuler le frame d'animation"
  },
  "panels/timeline/EventUICategory.ts | cancelIdleCallback": {
    "message": "Annuler le rappel à la prochaine période d'inactivité"
  },
  "panels/timeline/EventUICategory.ts | commit": {
    "message": "Commit"
  },
  "panels/timeline/EventUICategory.ts | compileCode": {
    "message": "Compiler le code"
  },
  "panels/timeline/EventUICategory.ts | compileModule": {
    "message": "Compiler le module"
  },
  "panels/timeline/EventUICategory.ts | compileScript": {
    "message": "Compiler le script"
  },
  "panels/timeline/EventUICategory.ts | compiledWasmModule": {
    "message": "Module Wasm compilé"
  },
  "panels/timeline/EventUICategory.ts | compositeLayers": {
    "message": "Calques composites"
  },
  "panels/timeline/EventUICategory.ts | computeIntersections": {
    "message": "Calcul des intersections"
  },
  "panels/timeline/EventUICategory.ts | consoleTime": {
    "message": "Heure de la console"
  },
  "panels/timeline/EventUICategory.ts | cppGc": {
    "message": "Récupération de mémoire pour C++"
  },
  "panels/timeline/EventUICategory.ts | createWebsocket": {
    "message": "Créer un WebSocket"
  },
  "panels/timeline/EventUICategory.ts | decrypt": {
    "message": "Déchiffrer"
  },
  "panels/timeline/EventUICategory.ts | decryptReply": {
    "message": "Déchiffrer la réponse"
  },
  "panels/timeline/EventUICategory.ts | deserializeCodeCache": {
    "message": "Désérialiser le cache du code"
  },
  "panels/timeline/EventUICategory.ts | destroyWebsocket": {
    "message": "Détruire WebSocket"
  },
  "panels/timeline/EventUICategory.ts | digest": {
    "message": "Condensé"
  },
  "panels/timeline/EventUICategory.ts | digestReply": {
    "message": "Réponse condensée"
  },
  "panels/timeline/EventUICategory.ts | domGc": {
    "message": "Récupération de mémoire DOM"
  },
  "panels/timeline/EventUICategory.ts | domcontentloadedEvent": {
    "message": "Événement \"DOMContentLoaded\""
  },
  "panels/timeline/EventUICategory.ts | drawFrame": {
    "message": "Dessiner un frame"
  },
  "panels/timeline/EventUICategory.ts | embedderCallback": {
    "message": "Rappel de l'outil d'intégration"
  },
  "panels/timeline/EventUICategory.ts | encrypt": {
    "message": "Chiffrer"
  },
  "panels/timeline/EventUICategory.ts | encryptReply": {
    "message": "Chiffrer la réponse"
  },
  "panels/timeline/EventUICategory.ts | evaluateModule": {
    "message": "Évaluer le module"
  },
  "panels/timeline/EventUICategory.ts | evaluateScript": {
    "message": "Évaluer le script"
  },
  "panels/timeline/EventUICategory.ts | event": {
    "message": "Événement"
  },
  "panels/timeline/EventUICategory.ts | eventTiming": {
    "message": "Durée de l'événement"
  },
  "panels/timeline/EventUICategory.ts | experience": {
    "message": "Expérience"
  },
  "panels/timeline/EventUICategory.ts | finishLoading": {
    "message": "Terminer le chargement"
  },
  "panels/timeline/EventUICategory.ts | fireIdleCallback": {
    "message": "Déclencher le rappel à la prochaine période d'inactivité"
  },
  "panels/timeline/EventUICategory.ts | firstContentfulPaint": {
    "message": "First Contentful Paint"
  },
  "panels/timeline/EventUICategory.ts | firstPaint": {
    "message": "First Paint"
  },
  "panels/timeline/EventUICategory.ts | frameStart": {
    "message": "Début du frame"
  },
  "panels/timeline/EventUICategory.ts | frameStartMainThread": {
    "message": "Début du frame (thread principal)"
  },
  "panels/timeline/EventUICategory.ts | frameStartedLoading": {
    "message": "Le frame a commencé à se charger"
  },
  "panels/timeline/EventUICategory.ts | functionCall": {
    "message": "Appel de fonction"
  },
  "panels/timeline/EventUICategory.ts | gcEvent": {
    "message": "Événement de récupération de mémoire"
  },
  "panels/timeline/EventUICategory.ts | gpu": {
    "message": "GPU"
  },
  "panels/timeline/EventUICategory.ts | hitTest": {
    "message": "Test de positionnement"
  },
  "panels/timeline/EventUICategory.ts | idle": {
    "message": "Inactivité"
  },
  "panels/timeline/EventUICategory.ts | imageDecode": {
    "message": "Décodage d'image"
  },
  "panels/timeline/EventUICategory.ts | imageResize": {
    "message": "Redimensionner l'image"
  },
  "panels/timeline/EventUICategory.ts | installTimer": {
    "message": "Installer un minuteur"
  },
  "panels/timeline/EventUICategory.ts | invalidateLayout": {
    "message": "Invalider la mise en page"
  },
  "panels/timeline/EventUICategory.ts | jsFrame": {
    "message": "Frame JS"
  },
  "panels/timeline/EventUICategory.ts | largestContentfulPaint": {
    "message": "Largest Contentful Paint"
  },
  "panels/timeline/EventUICategory.ts | layerize": {
    "message": "Calcul des couches"
  },
  "panels/timeline/EventUICategory.ts | layout": {
    "message": "Disposition"
  },
  "panels/timeline/EventUICategory.ts | layoutShift": {
    "message": "Décalage de mise en page"
  },
  "panels/timeline/EventUICategory.ts | loading": {
    "message": "Chargement"
  },
  "panels/timeline/EventUICategory.ts | majorGc": {
    "message": "Récupération de mémoire majeure"
  },
  "panels/timeline/EventUICategory.ts | minorGc": {
    "message": "Récupération de mémoire mineure"
  },
  "panels/timeline/EventUICategory.ts | onloadEvent": {
    "message": "Événement de chargement"
  },
  "panels/timeline/EventUICategory.ts | optimizeCode": {
    "message": "Optimiser le code"
  },
  "panels/timeline/EventUICategory.ts | other": {
    "message": "Autre"
  },
  "panels/timeline/EventUICategory.ts | paint": {
    "message": "Peinture"
  },
  "panels/timeline/EventUICategory.ts | paintImage": {
    "message": "Peinture d'image"
  },
  "panels/timeline/EventUICategory.ts | paintSetup": {
    "message": "Configuration de la peinture"
  },
  "panels/timeline/EventUICategory.ts | painting": {
    "message": "Rendu"
  },
  "panels/timeline/EventUICategory.ts | parseAndCompile": {
    "message": "Analyser et compiler"
  },
  "panels/timeline/EventUICategory.ts | parseHtml": {
    "message": "Analyser le code HTML"
  },
  "panels/timeline/EventUICategory.ts | parseStylesheet": {
    "message": "Analyser la feuille de style"
  },
  "panels/timeline/EventUICategory.ts | prePaint": {
    "message": "Pré-peinture"
  },
  "panels/timeline/EventUICategory.ts | profilingOverhead": {
    "message": "Frais généraux de profilage"
  },
  "panels/timeline/EventUICategory.ts | rasterizePaint": {
    "message": "Rastériser la peinture"
  },
  "panels/timeline/EventUICategory.ts | recalculateStyle": {
    "message": "Recalculer le style"
  },
  "panels/timeline/EventUICategory.ts | receiveData": {
    "message": "Recevoir des données"
  },
  "panels/timeline/EventUICategory.ts | receiveResponse": {
    "message": "Recevoir la réponse"
  },
  "panels/timeline/EventUICategory.ts | receiveWebsocketHandshake": {
    "message": "Recevoir le handshake WebSocket"
  },
  "panels/timeline/EventUICategory.ts | removeTimer": {
    "message": "Supprimer le minuteur"
  },
  "panels/timeline/EventUICategory.ts | rendering": {
    "message": "Affichage"
  },
  "panels/timeline/EventUICategory.ts | requestAnimationFrame": {
    "message": "Demander un frame d'animation"
  },
  "panels/timeline/EventUICategory.ts | requestIdleCallback": {
    "message": "Demander un rappel à la prochaine période d'inactivité"
  },
  "panels/timeline/EventUICategory.ts | requestMainThreadFrame": {
    "message": "Demander le frame du thread principal"
  },
  "panels/timeline/EventUICategory.ts | runMicrotasks": {
    "message": "Exécuter des microtâches"
  },
  "panels/timeline/EventUICategory.ts | scheduleStyleRecalculation": {
    "message": "Programmer le recalcul des styles"
  },
  "panels/timeline/EventUICategory.ts | scripting": {
    "message": "Script"
  },
  "panels/timeline/EventUICategory.ts | scroll": {
    "message": "Faire défiler"
  },
  "panels/timeline/EventUICategory.ts | sendRequest": {
    "message": "Envoyer la demande"
  },
  "panels/timeline/EventUICategory.ts | sendWebsocketHandshake": {
    "message": "Envoyer le handshake WebSocket"
  },
  "panels/timeline/EventUICategory.ts | sign": {
    "message": "Signer"
  },
  "panels/timeline/EventUICategory.ts | signReply": {
    "message": "Signer la réponse"
  },
  "panels/timeline/EventUICategory.ts | streamingCompileTask": {
    "message": "Streaming de la tâche de compilation"
  },
  "panels/timeline/EventUICategory.ts | streamingWasmResponse": {
    "message": "Streaming de la réponse Wasm"
  },
  "panels/timeline/EventUICategory.ts | system": {
    "message": "Système"
  },
  "panels/timeline/EventUICategory.ts | task": {
    "message": "Tâche"
  },
  "panels/timeline/EventUICategory.ts | timerFired": {
    "message": "Minuteur déclenché"
  },
  "panels/timeline/EventUICategory.ts | timestamp": {
    "message": "Horodatage"
  },
  "panels/timeline/EventUICategory.ts | updateLayer": {
    "message": "Actualiser le calque"
  },
  "panels/timeline/EventUICategory.ts | updateLayerTree": {
    "message": "Modifier l'arborescence des calques"
  },
  "panels/timeline/EventUICategory.ts | userTiming": {
    "message": "Temps utilisateur"
  },
  "panels/timeline/EventUICategory.ts | verify": {
    "message": "Valider"
  },
  "panels/timeline/EventUICategory.ts | verifyReply": {
    "message": "Valider la réponse"
  },
  "panels/timeline/EventUICategory.ts | waitingForNetwork": {
    "message": "En attente du réseau"
  },
  "panels/timeline/EventUICategory.ts | wasmModuleCacheHit": {
    "message": "Succès de cache (hit) du module Wasm"
  },
  "panels/timeline/EventUICategory.ts | wasmModuleCacheInvalid": {
    "message": "Cache du module Wasm non valide"
  },
  "panels/timeline/EventUICategory.ts | willSendRequest": {
    "message": "Enverra une requête"
  },
  "panels/timeline/EventUICategory.ts | xhrLoad": {
    "message": "Chargement de XHR"
  },
  "panels/timeline/EventUICategory.ts | xhrReadyStateChange": {
    "message": "Changement de l'état prêt de XHR"
  },
  "panels/timeline/EventsTimelineTreeView.ts | Dms": {
    "message": "{PH1} ms"
  },
  "panels/timeline/EventsTimelineTreeView.ts | all": {
    "message": "Tout"
  },
  "panels/timeline/EventsTimelineTreeView.ts | durationFilter": {
    "message": "Filtre de durée"
  },
  "panels/timeline/EventsTimelineTreeView.ts | filterEventLog": {
    "message": "Filtrer le journal des événements"
  },
  "panels/timeline/EventsTimelineTreeView.ts | startTime": {
    "message": "Heure de début"
  },
  "panels/timeline/GPUTrackAppender.ts | gpu": {
    "message": "GPU"
  },
  "panels/timeline/InteractionsTrackAppender.ts | interactions": {
    "message": "Interactions"
  },
  "panels/timeline/IsolateSelector.ts | empty": {
    "message": "(vide)"
  },
  "panels/timeline/IsolateSelector.ts | selectJavascriptVmInstance": {
    "message": "Sélectionner l'instance de VM JavaScript"
  },
  "panels/timeline/LayoutShiftsTrackAppender.ts | layoutShifts": {
    "message": "Décalages de mise en page"
  },
  "panels/timeline/NetworkTrackAppender.ts | network": {
    "message": "Réseau"
  },
  "panels/timeline/ThreadAppender.ts | anonymous": {
    "message": "(anonyme)"
  },
  "panels/timeline/ThreadAppender.ts | bidderWorklet": {
    "message": "Worklet d'enchérisseur"
  },
  "panels/timeline/ThreadAppender.ts | bidderWorkletS": {
    "message": "Worklet d'enchérisseur : {PH1}"
  },
  "panels/timeline/ThreadAppender.ts | dedicatedWorker": {
    "message": "Worker dédié"
  },
  "panels/timeline/ThreadAppender.ts | eventDispatchS": {
    "message": "Événement : {PH1}"
  },
  "panels/timeline/ThreadAppender.ts | frameS": {
    "message": "Frame – {PH1}"
  },
  "panels/timeline/ThreadAppender.ts | main": {
    "message": "Principal"
  },
  "panels/timeline/ThreadAppender.ts | mainS": {
    "message": "Principal – {PH1}"
  },
  "panels/timeline/ThreadAppender.ts | onIgnoreList": {
    "message": "Sur la liste des éléments à ignorer"
  },
  "panels/timeline/ThreadAppender.ts | raster": {
    "message": "Trame"
  },
  "panels/timeline/ThreadAppender.ts | rasterizerThreadS": {
    "message": "Thread du rastériseur {PH1}"
  },
  "panels/timeline/ThreadAppender.ts | sellerWorklet": {
    "message": "Worklet de vendeur"
  },
  "panels/timeline/ThreadAppender.ts | sellerWorkletS": {
    "message": "Worklet de vendeur : {PH1}"
  },
  "panels/timeline/ThreadAppender.ts | threadPool": {
    "message": "Pool de threads"
  },
  "panels/timeline/ThreadAppender.ts | threadPoolThreadS": {
    "message": "Nœud de calcul de pool de threads {PH1}"
  },
  "panels/timeline/ThreadAppender.ts | threadS": {
    "message": "Thread {PH1}"
  },
  "panels/timeline/ThreadAppender.ts | unknownWorklet": {
    "message": "Worklet d'enchères"
  },
  "panels/timeline/ThreadAppender.ts | unknownWorkletS": {
    "message": "Worklet d'enchères : {PH1}"
  },
  "panels/timeline/ThreadAppender.ts | workerS": {
    "message": "Worker – {PH1}"
  },
  "panels/timeline/ThreadAppender.ts | workerSS": {
    "message": "Worker : {PH1} — {PH2}"
  },
  "panels/timeline/ThreadAppender.ts | workletService": {
    "message": "Service de Worklet d'enchères"
  },
  "panels/timeline/ThreadAppender.ts | workletServiceS": {
    "message": "Service de Worklet d'enchères : {PH1}"
  },
  "panels/timeline/TimelineController.ts | tracingNotSupported": {
    "message": "Impossible d'enregistrer une trace des performances pour ce type de cible"
  },
  "panels/timeline/TimelineDetailsView.ts | bottomup": {
    "message": "Bas en haut"
  },
  "panels/timeline/TimelineDetailsView.ts | callTree": {
    "message": "Arborescence d'appel"
  },
  "panels/timeline/TimelineDetailsView.ts | eventLog": {
    "message": "Journal des événements"
  },
  "panels/timeline/TimelineDetailsView.ts | layers": {
    "message": "Calques"
  },
  "panels/timeline/TimelineDetailsView.ts | paintProfiler": {
    "message": "Profileur de peinture"
  },
  "panels/timeline/TimelineDetailsView.ts | rangeSS": {
    "message": "Plage : {PH1} – {PH2}"
  },
  "panels/timeline/TimelineDetailsView.ts | summary": {
    "message": "Résumé"
  },
  "panels/timeline/TimelineEventOverview.ts | cpu": {
    "message": "Processeur"
  },
  "panels/timeline/TimelineEventOverview.ts | heap": {
    "message": "SEGMENT DE MÉMOIRE"
  },
  "panels/timeline/TimelineEventOverview.ts | net": {
    "message": "RÉSEAU"
  },
  "panels/timeline/TimelineEventOverview.ts | sSDash": {
    "message": "{PH1} - {PH2}"
  },
  "panels/timeline/TimelineFlameChartDataProvider.ts | droppedFrame": {
    "message": "Frame supprimé"
  },
  "panels/timeline/TimelineFlameChartDataProvider.ts | frame": {
    "message": "Frame"
  },
  "panels/timeline/TimelineFlameChartDataProvider.ts | frameS": {
    "message": "Frame – {PH1}"
  },
  "panels/timeline/TimelineFlameChartDataProvider.ts | frames": {
    "message": "Frames"
  },
  "panels/timeline/TimelineFlameChartDataProvider.ts | idleFrame": {
    "message": "Frame inactif"
  },
  "panels/timeline/TimelineFlameChartDataProvider.ts | main": {
    "message": "Principale"
  },
  "panels/timeline/TimelineFlameChartDataProvider.ts | mainS": {
    "message": "Principal – {PH1}"
  },
  "panels/timeline/TimelineFlameChartDataProvider.ts | onIgnoreList": {
    "message": "Sur la liste des éléments à ignorer"
  },
  "panels/timeline/TimelineFlameChartDataProvider.ts | partiallyPresentedFrame": {
    "message": "Frame partiellement présenté"
  },
  "panels/timeline/TimelineFlameChartDataProvider.ts | raster": {
    "message": "Trame"
  },
  "panels/timeline/TimelineFlameChartDataProvider.ts | rasterizerThreadS": {
    "message": "Thread du rastériseur {PH1}"
  },
  "panels/timeline/TimelineFlameChartDataProvider.ts | sSelfS": {
    "message": "{PH1} (individuel : {PH2})"
  },
  "panels/timeline/TimelineFlameChartDataProvider.ts | subframe": {
    "message": "Sous-frame"
  },
  "panels/timeline/TimelineFlameChartDataProvider.ts | thread": {
    "message": "Thread"
  },
  "panels/timeline/TimelineFlameChartView.ts | sAtS": {
    "message": "{PH1} à {PH2}"
  },
  "panels/timeline/TimelineHistoryManager.ts | currentSessionSS": {
    "message": "Session en cours : {PH1}. {PH2}"
  },
  "panels/timeline/TimelineHistoryManager.ts | moments": {
    "message": "moments"
  },
  "panels/timeline/TimelineHistoryManager.ts | noRecordings": {
    "message": "(aucun enregistrement)"
  },
  "panels/timeline/TimelineHistoryManager.ts | sAgo": {
    "message": "(il y a {PH1})"
  },
  "panels/timeline/TimelineHistoryManager.ts | sD": {
    "message": "{PH1} #{PH2}"
  },
  "panels/timeline/TimelineHistoryManager.ts | sH": {
    "message": "{PH1} h"
  },
  "panels/timeline/TimelineHistoryManager.ts | sM": {
    "message": "{PH1} m"
  },
  "panels/timeline/TimelineHistoryManager.ts | selectTimelineSession": {
    "message": "Sélectionnez la session de la chronologie"
  },
  "panels/timeline/TimelineLoader.ts | legacyTimelineFormatIsNot": {
    "message": "Le format de la chronologie héritée n'est pas pris en charge."
  },
  "panels/timeline/TimelineLoader.ts | malformedCpuProfileFormat": {
    "message": "Profil de processeur mal formé"
  },
  "panels/timeline/TimelineLoader.ts | malformedTimelineDataS": {
    "message": "Données de la chronologie mal formées : {PH1}"
  },
  "panels/timeline/TimelineLoader.ts | malformedTimelineDataUnknownJson": {
    "message": "Données de la chronologie mal formées : format JSON inconnu"
  },
  "panels/timeline/TimelineLoader.ts | malformedTimelineInputWrongJson": {
    "message": "Entrée de la chronologie mal formée, déséquilibre des crochets JSON"
  },
  "panels/timeline/TimelinePanel.ts | CpuThrottlingIsEnabled": {
    "message": "- La limitation du processeur est activée"
  },
  "panels/timeline/TimelinePanel.ts | HardwareConcurrencyIsEnabled": {
    "message": "- Forçage de la simultanéité matérielle activé"
  },
  "panels/timeline/TimelinePanel.ts | JavascriptSamplingIsDisabled": {
    "message": "- L'échantillonnage JavaScript est désactivé"
  },
  "panels/timeline/TimelinePanel.ts | NetworkThrottlingIsEnabled": {
    "message": "- Limitation de bande passante réseau activée"
  },
  "panels/timeline/TimelinePanel.ts | SignificantOverheadDueToPaint": {
    "message": "- Surcharge importante due à l'instrumentation de peinture"
  },
  "panels/timeline/TimelinePanel.ts | afterRecordingSelectAnAreaOf": {
    "message": "Après l'enregistrement, sélectionnez une zone d'intérêt dans l'aperçu en la faisant glisser. Effectuez ensuite un zoom et un panoramique sur la chronologie à l'aide de la molette de la souris ou en appuyant sur les touches {PH1}. {PH2}"
  },
  "panels/timeline/TimelinePanel.ts | bufferUsage": {
    "message": "Utilisation du tampon"
  },
  "panels/timeline/TimelinePanel.ts | captureScreenshots": {
    "message": "Faites des captures d'écran"
  },
  "panels/timeline/TimelinePanel.ts | captureSettings": {
    "message": "Paramètres de capture"
  },
  "panels/timeline/TimelinePanel.ts | capturesAdvancedPaint": {
    "message": "Capture une instrumentation de peinture avancée, introduit une surcharge de performance significative"
  },
  "panels/timeline/TimelinePanel.ts | clear": {
    "message": "Effacer"
  },
  "panels/timeline/TimelinePanel.ts | clickTheRecordButtonSOrHitSTo": {
    "message": "Cliquez sur le bouton {PH1} ou appuyez sur {PH2} pour débuter un enregistrement."
  },
  "panels/timeline/TimelinePanel.ts | clickTheReloadButtonSOrHitSTo": {
    "message": "Cliquez sur le bouton {PH1} pour actualiser la page ou appuyez sur {PH2} pour enregistrer son chargement."
  },
  "panels/timeline/TimelinePanel.ts | close": {
    "message": "Fermer"
  },
  "panels/timeline/TimelinePanel.ts | cpu": {
    "message": "Processeur :"
  },
  "panels/timeline/TimelinePanel.ts | description": {
    "message": "Description"
  },
  "panels/timeline/TimelinePanel.ts | disableJavascriptSamples": {
    "message": "Désactiver les échantillons JavaScript"
  },
  "panels/timeline/TimelinePanel.ts | disablesJavascriptSampling": {
    "message": "Désactive l'échantillonnage JavaScript, réduit les coûts lors de l'exécution sur des appareils mobiles"
  },
  "panels/timeline/TimelinePanel.ts | downloadAfterError": {
    "message": "Télécharger les événements de trace bruts"
  },
  "panels/timeline/TimelinePanel.ts | dropTimelineFileOrUrlHere": {
    "message": "Déposez l'URL ou le fichier de la chronologie ici"
  },
  "panels/timeline/TimelinePanel.ts | enableAdvancedPaint": {
    "message": "Activer l'instrumentation de peinture avancée (lent)"
  },
  "panels/timeline/TimelinePanel.ts | failedToSaveTimelineSS": {
    "message": "Échec de l'enregistrement de la chronologie : {PH1} ({PH2})"
  },
  "panels/timeline/TimelinePanel.ts | initializingProfiler": {
    "message": "Initialisation du profileur…"
  },
  "panels/timeline/TimelinePanel.ts | learnmore": {
    "message": "En savoir plus"
  },
  "panels/timeline/TimelinePanel.ts | loadProfile": {
    "message": "Charger le profil…"
  },
  "panels/timeline/TimelinePanel.ts | loadingProfile": {
    "message": "Chargement du profil…"
  },
  "panels/timeline/TimelinePanel.ts | memory": {
    "message": "Mémoire"
  },
  "panels/timeline/TimelinePanel.ts | network": {
    "message": "Réseau :"
  },
  "panels/timeline/TimelinePanel.ts | networkConditions": {
    "message": "Conditions du réseau"
  },
  "panels/timeline/TimelinePanel.ts | processingProfile": {
    "message": "Traitement du profil…"
  },
  "panels/timeline/TimelinePanel.ts | profiling": {
    "message": "Profilage…"
  },
  "panels/timeline/TimelinePanel.ts | received": {
    "message": "Reçu"
  },
  "panels/timeline/TimelinePanel.ts | recordingFailed": {
    "message": "Échec de l'enregistrement"
  },
  "panels/timeline/TimelinePanel.ts | saveProfile": {
    "message": "Enregistrer le profil…"
  },
  "panels/timeline/TimelinePanel.ts | screenshots": {
    "message": "Captures d'écran"
  },
  "panels/timeline/TimelinePanel.ts | showMemoryTimeline": {
    "message": "Afficher la chronologie de la mémoire"
  },
  "panels/timeline/TimelinePanel.ts | ssec": {
    "message": "{PH1} s"
  },
  "panels/timeline/TimelinePanel.ts | status": {
    "message": "État"
  },
  "panels/timeline/TimelinePanel.ts | stop": {
    "message": "Arrêter"
  },
  "panels/timeline/TimelinePanel.ts | stoppingTimeline": {
    "message": "Arrêt de la chronologie…"
  },
  "panels/timeline/TimelinePanel.ts | time": {
    "message": "Durée"
  },
  "panels/timeline/TimelinePanel.ts | wasd": {
    "message": "WASD"
  },
  "panels/timeline/TimelineTreeView.ts | activity": {
    "message": "Activité"
  },
  "panels/timeline/TimelineTreeView.ts | chromeExtensionsOverhead": {
    "message": "[Surcharge des extensions Chrome]"
  },
  "panels/timeline/TimelineTreeView.ts | filter": {
    "message": "Filtrer"
  },
  "panels/timeline/TimelineTreeView.ts | filterBottomup": {
    "message": "Filtrer de bas en haut"
  },
  "panels/timeline/TimelineTreeView.ts | filterCallTree": {
    "message": "Filtrer l'arborescence des appels"
  },
  "panels/timeline/TimelineTreeView.ts | fms": {
    "message": "{PH1} ms"
  },
  "panels/timeline/TimelineTreeView.ts | groupBy": {
    "message": "Regrouper par"
  },
  "panels/timeline/TimelineTreeView.ts | groupByActivity": {
    "message": "Regrouper par activité"
  },
  "panels/timeline/TimelineTreeView.ts | groupByCategory": {
    "message": "Regrouper par catégorie"
  },
  "panels/timeline/TimelineTreeView.ts | groupByDomain": {
    "message": "Regrouper par domaine"
  },
  "panels/timeline/TimelineTreeView.ts | groupByFrame": {
    "message": "Regrouper par frame"
  },
  "panels/timeline/TimelineTreeView.ts | groupBySubdomain": {
    "message": "Regrouper par sous-domaine"
  },
  "panels/timeline/TimelineTreeView.ts | groupByUrl": {
    "message": "Regrouper par URL"
  },
  "panels/timeline/TimelineTreeView.ts | heaviestStack": {
    "message": "Pile la plus lourde"
  },
  "panels/timeline/TimelineTreeView.ts | heaviestStackHidden": {
    "message": "Barre latérale de la pile la plus lourde masquée"
  },
  "panels/timeline/TimelineTreeView.ts | heaviestStackShown": {
    "message": "Barre latérale de la pile la plus lourde affichée"
  },
  "panels/timeline/TimelineTreeView.ts | hideHeaviestStack": {
    "message": "Masquer la pile la plus lourde"
  },
  "panels/timeline/TimelineTreeView.ts | matchCase": {
    "message": "Respecter la casse"
  },
  "panels/timeline/TimelineTreeView.ts | matchWholeWord": {
    "message": "Correspondre au mot entier"
  },
  "panels/timeline/TimelineTreeView.ts | noGrouping": {
    "message": "Aucun regroupement"
  },
  "panels/timeline/TimelineTreeView.ts | notOptimizedS": {
    "message": "Non optimisé : {PH1}"
  },
  "panels/timeline/TimelineTreeView.ts | page": {
    "message": "Page"
  },
  "panels/timeline/TimelineTreeView.ts | percentPlaceholder": {
    "message": "{PH1} %"
  },
  "panels/timeline/TimelineTreeView.ts | performance": {
    "message": "Performances"
  },
  "panels/timeline/TimelineTreeView.ts | selectItemForDetails": {
    "message": "Sélectionnez un élément pour voir les détails."
  },
  "panels/timeline/TimelineTreeView.ts | selfTime": {
    "message": "Durée individuelle"
  },
  "panels/timeline/TimelineTreeView.ts | showHeaviestStack": {
    "message": "Afficher la pile la plus lourde"
  },
  "panels/timeline/TimelineTreeView.ts | timelineStack": {
    "message": "Pile de la chronologie"
  },
  "panels/timeline/TimelineTreeView.ts | totalTime": {
    "message": "Durée totale"
  },
  "panels/timeline/TimelineTreeView.ts | unattributed": {
    "message": "[non attribué]"
  },
  "panels/timeline/TimelineTreeView.ts | useRegularExpression": {
    "message": "Utiliser une expression régulière"
  },
  "panels/timeline/TimelineTreeView.ts | vRuntime": {
    "message": "[Environnement d'exécution V8]"
  },
  "panels/timeline/TimelineUIUtils.ts | FromCache": {
    "message": " (depuis le cache)"
  },
  "panels/timeline/TimelineUIUtils.ts | FromMemoryCache": {
    "message": " (du cache mémoire)"
  },
  "panels/timeline/TimelineUIUtils.ts | FromPush": {
    "message": " (du push)"
  },
  "panels/timeline/TimelineUIUtils.ts | FromServiceWorker": {
    "message": " (du service worker)"
  },
  "panels/timeline/TimelineUIUtils.ts | SSSResourceLoading": {
    "message": " ({PH2} {PH1} + chargement de ressources {PH3})"
  },
  "panels/timeline/TimelineUIUtils.ts | UnknownNode": {
    "message": "[nœud inconnu]"
  },
  "panels/timeline/TimelineUIUtils.ts | aggregatedTime": {
    "message": "Temps agrégé"
  },
  "panels/timeline/TimelineUIUtils.ts | allottedTime": {
    "message": "Temps alloué"
  },
  "panels/timeline/TimelineUIUtils.ts | animation": {
    "message": "Animation"
  },
  "panels/timeline/TimelineUIUtils.ts | animationFrameFired": {
    "message": "Frame d'animation déclenché"
  },
  "panels/timeline/TimelineUIUtils.ts | animationFrameRequested": {
    "message": "Frame d'animation demandé"
  },
  "panels/timeline/TimelineUIUtils.ts | async": {
    "message": "Asynchrone"
  },
  "panels/timeline/TimelineUIUtils.ts | asyncTask": {
    "message": "Tâche asynchrone"
  },
  "panels/timeline/TimelineUIUtils.ts | cacheModule": {
    "message": "Mettre en cache le code du module"
  },
  "panels/timeline/TimelineUIUtils.ts | cacheScript": {
    "message": "Mettre en cache le code du script"
  },
  "panels/timeline/TimelineUIUtils.ts | cachedWasmModule": {
    "message": "Module Wasm en cache"
  },
  "panels/timeline/TimelineUIUtils.ts | callStacks": {
    "message": "Piles d'appel"
  },
  "panels/timeline/TimelineUIUtils.ts | callbackFunction": {
    "message": "Fonction de rappel"
  },
  "panels/timeline/TimelineUIUtils.ts | callbackId": {
    "message": "ID de rappel"
  },
  "panels/timeline/TimelineUIUtils.ts | cancelAnimationFrame": {
    "message": "Annuler le frame d'animation"
  },
  "panels/timeline/TimelineUIUtils.ts | cancelIdleCallback": {
    "message": "Annuler le rappel à la prochaine période d'inactivité"
  },
  "panels/timeline/TimelineUIUtils.ts | collected": {
    "message": "Collecté"
  },
  "panels/timeline/TimelineUIUtils.ts | commit": {
    "message": "Commit"
  },
  "panels/timeline/TimelineUIUtils.ts | compilationCacheKind": {
    "message": "Type du cache de compilation"
  },
  "panels/timeline/TimelineUIUtils.ts | compilationCacheSize": {
    "message": "Taille du cache de compilation"
  },
  "panels/timeline/TimelineUIUtils.ts | compilationCacheStatus": {
    "message": "État du cache de la compilation"
  },
  "panels/timeline/TimelineUIUtils.ts | compile": {
    "message": "Compiler"
  },
  "panels/timeline/TimelineUIUtils.ts | compileCode": {
    "message": "Compiler le code"
  },
  "panels/timeline/TimelineUIUtils.ts | compileModule": {
    "message": "Compiler le module"
  },
  "panels/timeline/TimelineUIUtils.ts | compileScript": {
    "message": "Compiler le script"
  },
  "panels/timeline/TimelineUIUtils.ts | compiledWasmModule": {
    "message": "Module Wasm compilé"
  },
  "panels/timeline/TimelineUIUtils.ts | compositeLayers": {
    "message": "Calques composites"
  },
  "panels/timeline/TimelineUIUtils.ts | computeIntersections": {
    "message": "Calcul des intersections"
  },
  "panels/timeline/TimelineUIUtils.ts | consoleTime": {
    "message": "Heure de la console"
  },
  "panels/timeline/TimelineUIUtils.ts | consumedCacheSize": {
    "message": "Taille du cache utilisé"
  },
  "panels/timeline/TimelineUIUtils.ts | createWebsocket": {
    "message": "Créer un WebSocket"
  },
  "panels/timeline/TimelineUIUtils.ts | cumulativeLayoutShifts": {
    "message": "Cumulative Layout Shifts"
  },
  "panels/timeline/TimelineUIUtils.ts | cumulativeScore": {
    "message": "Score cumulé"
  },
  "panels/timeline/TimelineUIUtils.ts | currentClusterId": {
    "message": "ID du cluster actuel"
  },
  "panels/timeline/TimelineUIUtils.ts | currentClusterScore": {
    "message": "Score du cluster actuel"
  },
  "panels/timeline/TimelineUIUtils.ts | decodedBody": {
    "message": "Corps décodé"
  },
  "panels/timeline/TimelineUIUtils.ts | decrypt": {
    "message": "Déchiffrer"
  },
  "panels/timeline/TimelineUIUtils.ts | decryptReply": {
    "message": "Déchiffrer la réponse"
  },
  "panels/timeline/TimelineUIUtils.ts | deserializeCodeCache": {
    "message": "Désérialiser le cache du code"
  },
  "panels/timeline/TimelineUIUtils.ts | destroyWebsocket": {
    "message": "Détruire WebSocket"
  },
  "panels/timeline/TimelineUIUtils.ts | details": {
    "message": "Détails"
  },
  "panels/timeline/TimelineUIUtils.ts | digest": {
    "message": "Condensé"
  },
  "panels/timeline/TimelineUIUtils.ts | digestReply": {
    "message": "Réponse condensée"
  },
  "panels/timeline/TimelineUIUtils.ts | dimensions": {
    "message": "Dimensions"
  },
  "panels/timeline/TimelineUIUtils.ts | domGc": {
    "message": "Récupération de mémoire DOM"
  },
  "panels/timeline/TimelineUIUtils.ts | domcontentloadedEvent": {
    "message": "Événement \"DOMContentLoaded\""
  },
  "panels/timeline/TimelineUIUtils.ts | drawFrame": {
    "message": "Dessiner un frame"
  },
  "panels/timeline/TimelineUIUtils.ts | duration": {
    "message": "Durée"
  },
  "panels/timeline/TimelineUIUtils.ts | eagerCompile": {
    "message": "Compilation rapide de toutes les fonctions…"
  },
  "panels/timeline/TimelineUIUtils.ts | elementsAffected": {
    "message": "Éléments concernés"
  },
  "panels/timeline/TimelineUIUtils.ts | embedderCallback": {
    "message": "Rappel de l'outil d'intégration"
  },
  "panels/timeline/TimelineUIUtils.ts | emptyPlaceholder": {
    "message": "{PH1}"
  },
  "panels/timeline/TimelineUIUtils.ts | encodedData": {
    "message": "Données encodées"
  },
  "panels/timeline/TimelineUIUtils.ts | encrypt": {
    "message": "Chiffrer"
  },
  "panels/timeline/TimelineUIUtils.ts | encryptReply": {
    "message": "Chiffrer la réponse"
  },
  "panels/timeline/TimelineUIUtils.ts | evaluateModule": {
    "message": "Évaluer le module"
  },
  "panels/timeline/TimelineUIUtils.ts | evaluateScript": {
    "message": "Évaluer le script"
  },
  "panels/timeline/TimelineUIUtils.ts | event": {
    "message": "Événement"
  },
  "panels/timeline/TimelineUIUtils.ts | eventTiming": {
    "message": "Durée de l'événement"
  },
  "panels/timeline/TimelineUIUtils.ts | evolvedClsLink": {
    "message": "évolué"
  },
  "panels/timeline/TimelineUIUtils.ts | experience": {
    "message": "Expérience"
  },
  "panels/timeline/TimelineUIUtils.ts | failedToLoadScriptFromCache": {
    "message": "échec du chargement du script à partir du cache"
  },
  "panels/timeline/TimelineUIUtils.ts | finishLoading": {
    "message": "Terminer le chargement"
  },
  "panels/timeline/TimelineUIUtils.ts | fireIdleCallback": {
    "message": "Déclencher le rappel à la prochaine période d'inactivité"
  },
  "panels/timeline/TimelineUIUtils.ts | firstContentfulPaint": {
    "message": "First Contentful Paint"
  },
  "panels/timeline/TimelineUIUtils.ts | firstInvalidated": {
    "message": "Premier invalidé"
  },
  "panels/timeline/TimelineUIUtils.ts | firstLayoutInvalidation": {
    "message": "Première invalidation de mise en page"
  },
  "panels/timeline/TimelineUIUtils.ts | firstPaint": {
    "message": "First Paint"
  },
  "panels/timeline/TimelineUIUtils.ts | frame": {
    "message": "Frame"
  },
  "panels/timeline/TimelineUIUtils.ts | frameStart": {
    "message": "Début du frame"
  },
  "panels/timeline/TimelineUIUtils.ts | frameStartMainThread": {
    "message": "Début du frame (thread principal)"
  },
  "panels/timeline/TimelineUIUtils.ts | frameStartedLoading": {
    "message": "Le frame a commencé à se charger"
  },
  "panels/timeline/TimelineUIUtils.ts | function": {
    "message": "Fonction"
  },
  "panels/timeline/TimelineUIUtils.ts | functionCall": {
    "message": "Appel de fonction"
  },
  "panels/timeline/TimelineUIUtils.ts | gcEvent": {
    "message": "Événement de récupération de mémoire"
  },
  "panels/timeline/TimelineUIUtils.ts | gpu": {
    "message": "GPU"
  },
  "panels/timeline/TimelineUIUtils.ts | hadRecentInput": {
    "message": "Valeur saisie récemment"
  },
  "panels/timeline/TimelineUIUtils.ts | hitTest": {
    "message": "Test de positionnement"
  },
  "panels/timeline/TimelineUIUtils.ts | idle": {
    "message": "Inactivité"
  },
  "panels/timeline/TimelineUIUtils.ts | idleCallbackRequested": {
    "message": "Rappel à la prochaine période d'inactivité demandé"
  },
  "panels/timeline/TimelineUIUtils.ts | imageDecode": {
    "message": "Décodage d'image"
  },
  "panels/timeline/TimelineUIUtils.ts | imageResize": {
    "message": "Redimensionner l'image"
  },
  "panels/timeline/TimelineUIUtils.ts | imageUrl": {
    "message": "URL de l'image"
  },
  "panels/timeline/TimelineUIUtils.ts | initialPriority": {
    "message": "Priorité initiale"
  },
  "panels/timeline/TimelineUIUtils.ts | initiator": {
    "message": "Initiateur"
  },
  "panels/timeline/TimelineUIUtils.ts | inputDelay": {
    "message": "Délai de réponse à l'entrée utilisateur"
  },
  "panels/timeline/TimelineUIUtils.ts | installTimer": {
    "message": "Installer un minuteur"
  },
  "panels/timeline/TimelineUIUtils.ts | interactionID": {
    "message": "ID"
  },
  "panels/timeline/TimelineUIUtils.ts | invalidateLayout": {
    "message": "Invalider la mise en page"
  },
  "panels/timeline/TimelineUIUtils.ts | invalidationWithCallFrame": {
    "message": "{PH1} à {PH2}"
  },
  "panels/timeline/TimelineUIUtils.ts | invalidations": {
    "message": "Invalidations"
  },
  "panels/timeline/TimelineUIUtils.ts | invokedByTimeout": {
    "message": "Appelé par le délai d'inactivité"
  },
  "panels/timeline/TimelineUIUtils.ts | jsFrame": {
    "message": "Frame JS"
  },
  "panels/timeline/TimelineUIUtils.ts | jsIdleFrame": {
    "message": "Frame JS inactif"
  },
  "panels/timeline/TimelineUIUtils.ts | jsRoot": {
    "message": "Racine JS"
  },
  "panels/timeline/TimelineUIUtils.ts | jsSystemFrame": {
    "message": "Frame système JS"
  },
  "panels/timeline/TimelineUIUtils.ts | largestContentfulPaint": {
    "message": "Largest Contentful Paint"
  },
  "panels/timeline/TimelineUIUtils.ts | layerRoot": {
    "message": "Racine du calque"
  },
  "panels/timeline/TimelineUIUtils.ts | layerize": {
    "message": "Calcul des couches"
  },
  "panels/timeline/TimelineUIUtils.ts | layout": {
    "message": "Disposition"
  },
  "panels/timeline/TimelineUIUtils.ts | layoutForced": {
    "message": "Mise en page forcée"
  },
  "panels/timeline/TimelineUIUtils.ts | layoutRoot": {
    "message": "Racine de mise en page"
  },
  "panels/timeline/TimelineUIUtils.ts | layoutShift": {
    "message": "Décalage de mise en page"
  },
  "panels/timeline/TimelineUIUtils.ts | learnMore": {
    "message": "En savoir plus"
  },
  "panels/timeline/TimelineUIUtils.ts | loadFromCache": {
    "message": "charger à partir du cache"
  },
  "panels/timeline/TimelineUIUtils.ts | loading": {
    "message": "Chargement"
  },
  "panels/timeline/TimelineUIUtils.ts | location": {
    "message": "Localisation"
  },
  "panels/timeline/TimelineUIUtils.ts | majorGc": {
    "message": "Récupération de mémoire majeure"
  },
  "panels/timeline/TimelineUIUtils.ts | message": {
    "message": "Message"
  },
  "panels/timeline/TimelineUIUtils.ts | mimeType": {
    "message": "Type MIME"
  },
  "panels/timeline/TimelineUIUtils.ts | minorGc": {
    "message": "Récupération de mémoire mineure"
  },
  "panels/timeline/TimelineUIUtils.ts | module": {
    "message": "Module"
  },
  "panels/timeline/TimelineUIUtils.ts | movedFrom": {
    "message": "Déplacés depuis"
  },
  "panels/timeline/TimelineUIUtils.ts | movedTo": {
    "message": "Déplacés vers"
  },
  "panels/timeline/TimelineUIUtils.ts | networkRequest": {
    "message": "Requête réseau"
  },
  "panels/timeline/TimelineUIUtils.ts | networkTransfer": {
    "message": "transfert réseau"
  },
  "panels/timeline/TimelineUIUtils.ts | no": {
    "message": "Non"
  },
  "panels/timeline/TimelineUIUtils.ts | nodesThatNeedLayout": {
    "message": "Nœuds nécessitant une mise en page"
  },
  "panels/timeline/TimelineUIUtils.ts | onloadEvent": {
    "message": "Événement de chargement"
  },
  "panels/timeline/TimelineUIUtils.ts | optimizeCode": {
    "message": "Optimiser le code"
  },
  "panels/timeline/TimelineUIUtils.ts | other": {
    "message": "Autre"
  },
  "panels/timeline/TimelineUIUtils.ts | ownerElement": {
    "message": "Élément du propriétaire"
  },
  "panels/timeline/TimelineUIUtils.ts | paint": {
    "message": "Peinture"
  },
  "panels/timeline/TimelineUIUtils.ts | paintImage": {
    "message": "Peinture d'image"
  },
  "panels/timeline/TimelineUIUtils.ts | paintProfiler": {
    "message": "Profileur de peinture"
  },
  "panels/timeline/TimelineUIUtils.ts | paintSetup": {
    "message": "Configuration de la peinture"
  },
  "panels/timeline/TimelineUIUtils.ts | painting": {
    "message": "Rendu"
  },
  "panels/timeline/TimelineUIUtils.ts | parse": {
    "message": "Analyser"
  },
  "panels/timeline/TimelineUIUtils.ts | parseAndCompile": {
    "message": "Analyser et compiler"
  },
  "panels/timeline/TimelineUIUtils.ts | parseHtml": {
    "message": "Analyser le code HTML"
  },
  "panels/timeline/TimelineUIUtils.ts | parseStylesheet": {
    "message": "Analyser la feuille de style"
  },
  "panels/timeline/TimelineUIUtils.ts | pendingFor": {
    "message": "En attente de"
  },
  "panels/timeline/TimelineUIUtils.ts | prePaint": {
    "message": "Pré-peinture"
  },
  "panels/timeline/TimelineUIUtils.ts | presentationDelay": {
    "message": "Délai de présentation"
  },
  "panels/timeline/TimelineUIUtils.ts | preview": {
    "message": "Aperçu"
  },
  "panels/timeline/TimelineUIUtils.ts | priority": {
    "message": "Priorité"
  },
  "panels/timeline/TimelineUIUtils.ts | processingTime": {
    "message": "Temps de traitement"
  },
  "panels/timeline/TimelineUIUtils.ts | producedCacheSize": {
    "message": "Taille du cache créé"
  },
  "panels/timeline/TimelineUIUtils.ts | profilingOverhead": {
    "message": "Frais généraux de profilage"
  },
  "panels/timeline/TimelineUIUtils.ts | range": {
    "message": "Plage"
  },
  "panels/timeline/TimelineUIUtils.ts | rasterizePaint": {
    "message": "Rastériser la peinture"
  },
  "panels/timeline/TimelineUIUtils.ts | recalculateStyle": {
    "message": "Recalculer le style"
  },
  "panels/timeline/TimelineUIUtils.ts | recalculationForced": {
    "message": "Recalcul forcé"
  },
  "panels/timeline/TimelineUIUtils.ts | receiveData": {
    "message": "Recevoir des données"
  },
  "panels/timeline/TimelineUIUtils.ts | receiveResponse": {
    "message": "Recevoir la réponse"
  },
  "panels/timeline/TimelineUIUtils.ts | receiveWebsocketHandshake": {
    "message": "Recevoir le handshake WebSocket"
  },
  "panels/timeline/TimelineUIUtils.ts | relatedNode": {
    "message": "Nœud similaire"
  },
  "panels/timeline/TimelineUIUtils.ts | removeTimer": {
    "message": "Supprimer le minuteur"
  },
  "panels/timeline/TimelineUIUtils.ts | rendering": {
    "message": "Affichage"
  },
  "panels/timeline/TimelineUIUtils.ts | repeats": {
    "message": "Récurrent"
  },
  "panels/timeline/TimelineUIUtils.ts | requestAnimationFrame": {
    "message": "Demander un frame d'animation"
  },
  "panels/timeline/TimelineUIUtils.ts | requestIdleCallback": {
    "message": "Demander un rappel à la prochaine période d'inactivité"
  },
  "panels/timeline/TimelineUIUtils.ts | requestMainThreadFrame": {
    "message": "Demander le frame du thread principal"
  },
  "panels/timeline/TimelineUIUtils.ts | requestMethod": {
    "message": "Mode de requête"
  },
  "panels/timeline/TimelineUIUtils.ts | reveal": {
    "message": "Afficher"
  },
  "panels/timeline/TimelineUIUtils.ts | runMicrotasks": {
    "message": "Exécuter des microtâches"
  },
  "panels/timeline/TimelineUIUtils.ts | sAtS": {
    "message": "{PH1} à {PH2}"
  },
  "panels/timeline/TimelineUIUtils.ts | sAtSParentheses": {
    "message": "{PH1} (à {PH2})"
  },
  "panels/timeline/TimelineUIUtils.ts | sCLSInformation": {
    "message": "{PH1} peut conduire à une mauvaise expérience utilisateur. Il a récemment {PH2}."
  },
  "panels/timeline/TimelineUIUtils.ts | sChildren": {
    "message": "{PH1} (enfants)"
  },
  "panels/timeline/TimelineUIUtils.ts | sCollected": {
    "message": "{PH1} collectés"
  },
  "panels/timeline/TimelineUIUtils.ts | sOfS": {
    "message": "{PH1} sur {PH2}"
  },
  "panels/timeline/TimelineUIUtils.ts | sS": {
    "message": "{PH1} : {PH2}"
  },
  "panels/timeline/TimelineUIUtils.ts | sSCurlyBrackets": {
    "message": "({PH1}, {PH2})"
  },
  "panels/timeline/TimelineUIUtils.ts | sSDimensions": {
    "message": "{PH1} × {PH2}"
  },
  "panels/timeline/TimelineUIUtils.ts | sSSquareBrackets": {
    "message": "{PH1} [{PH2}…]"
  },
  "panels/timeline/TimelineUIUtils.ts | sSelf": {
    "message": "{PH1} (individuel)"
  },
  "panels/timeline/TimelineUIUtils.ts | sSs": {
    "message": "{PH1} [{PH2}…{PH3}]"
  },
  "panels/timeline/TimelineUIUtils.ts | scheduleStyleRecalculation": {
    "message": "Programmer le recalcul des styles"
  },
  "panels/timeline/TimelineUIUtils.ts | score": {
    "message": "Score"
  },
  "panels/timeline/TimelineUIUtils.ts | script": {
    "message": "Script"
  },
  "panels/timeline/TimelineUIUtils.ts | scriptLoadedFromCache": {
    "message": "script chargé depuis le cache"
  },
  "panels/timeline/TimelineUIUtils.ts | scriptNotEligible": {
    "message": "script non éligible"
  },
  "panels/timeline/TimelineUIUtils.ts | scripting": {
    "message": "Script"
  },
  "panels/timeline/TimelineUIUtils.ts | scroll": {
    "message": "Faire défiler"
  },
  "panels/timeline/TimelineUIUtils.ts | selfTime": {
    "message": "Durée individuelle"
  },
  "panels/timeline/TimelineUIUtils.ts | sendRequest": {
    "message": "Envoyer la demande"
  },
  "panels/timeline/TimelineUIUtils.ts | sendWebsocketHandshake": {
    "message": "Envoyer le handshake WebSocket"
  },
  "panels/timeline/TimelineUIUtils.ts | sign": {
    "message": "Signer"
  },
  "panels/timeline/TimelineUIUtils.ts | signReply": {
    "message": "Signer la réponse"
  },
  "panels/timeline/TimelineUIUtils.ts | size": {
    "message": "Taille"
  },
  "panels/timeline/TimelineUIUtils.ts | stackTrace": {
    "message": "Trace de la pile"
  },
  "panels/timeline/TimelineUIUtils.ts | state": {
    "message": "État"
  },
  "panels/timeline/TimelineUIUtils.ts | streamed": {
    "message": "Streamé"
  },
  "panels/timeline/TimelineUIUtils.ts | streamingCompileTask": {
    "message": "Streaming de la tâche de compilation"
  },
  "panels/timeline/TimelineUIUtils.ts | streamingWasmResponse": {
    "message": "Streaming de la réponse Wasm"
  },
  "panels/timeline/TimelineUIUtils.ts | stylesheetUrl": {
    "message": "URL de la feuille de style"
  },
  "panels/timeline/TimelineUIUtils.ts | system": {
    "message": "Système"
  },
  "panels/timeline/TimelineUIUtils.ts | task": {
    "message": "Tâche"
  },
  "panels/timeline/TimelineUIUtils.ts | timeSpentInRendering": {
    "message": "Temps passé à afficher"
  },
  "panels/timeline/TimelineUIUtils.ts | timeout": {
    "message": "Délai d'inactivité"
  },
  "panels/timeline/TimelineUIUtils.ts | timerFired": {
    "message": "Minuteur déclenché"
  },
  "panels/timeline/TimelineUIUtils.ts | timerId": {
    "message": "ID de minuteur"
  },
  "panels/timeline/TimelineUIUtils.ts | timerInstalled": {
    "message": "Minuteur installé"
  },
  "panels/timeline/TimelineUIUtils.ts | timestamp": {
    "message": "Horodatage"
  },
  "panels/timeline/TimelineUIUtils.ts | totalTime": {
    "message": "Durée totale"
  },
  "panels/timeline/TimelineUIUtils.ts | type": {
    "message": "Type"
  },
  "panels/timeline/TimelineUIUtils.ts | updateLayer": {
    "message": "Actualiser le calque"
  },
  "panels/timeline/TimelineUIUtils.ts | updateLayerTree": {
    "message": "Modifier l'arborescence des calques"
  },
  "panels/timeline/TimelineUIUtils.ts | url": {
    "message": "URL"
  },
  "panels/timeline/TimelineUIUtils.ts | userTiming": {
    "message": "Temps utilisateur"
  },
  "panels/timeline/TimelineUIUtils.ts | verify": {
    "message": "Valider"
  },
  "panels/timeline/TimelineUIUtils.ts | verifyReply": {
    "message": "Valider la réponse"
  },
  "panels/timeline/TimelineUIUtils.ts | waitingForNetwork": {
    "message": "En attente du réseau"
  },
  "panels/timeline/TimelineUIUtils.ts | warning": {
    "message": "Avertissement"
  },
  "panels/timeline/TimelineUIUtils.ts | wasmModuleCacheHit": {
    "message": "Succès de cache (hit) du module Wasm"
  },
  "panels/timeline/TimelineUIUtils.ts | wasmModuleCacheInvalid": {
    "message": "Cache du module Wasm non valide"
  },
  "panels/timeline/TimelineUIUtils.ts | willSendRequest": {
    "message": "Enverra une requête"
  },
  "panels/timeline/TimelineUIUtils.ts | xhrLoad": {
    "message": "Chargement de XHR"
  },
  "panels/timeline/TimelineUIUtils.ts | xhrReadyStateChange": {
    "message": "Changement de l'état prêt de XHR"
  },
  "panels/timeline/TimelineUIUtils.ts | yes": {
    "message": "Oui"
  },
  "panels/timeline/TimingsTrackAppender.ts | timings": {
    "message": "Durées"
  },
  "panels/timeline/UIDevtoolsUtils.ts | drawFrame": {
    "message": "Dessiner un frame"
  },
  "panels/timeline/UIDevtoolsUtils.ts | drawing": {
    "message": "Dessin"
  },
  "panels/timeline/UIDevtoolsUtils.ts | frameStart": {
    "message": "Début du frame"
  },
  "panels/timeline/UIDevtoolsUtils.ts | idle": {
    "message": "Inactif"
  },
  "panels/timeline/UIDevtoolsUtils.ts | layout": {
    "message": "Disposition"
  },
  "panels/timeline/UIDevtoolsUtils.ts | painting": {
    "message": "Peinture"
  },
  "panels/timeline/UIDevtoolsUtils.ts | rasterizing": {
    "message": "Rastérisation"
  },
  "panels/timeline/UIDevtoolsUtils.ts | system": {
    "message": "Système"
  },
  "panels/timeline/components/DetailsView.ts | forcedReflow": {
    "message": "Ajustement forcé de la mise en page"
  },
  "panels/timeline/components/DetailsView.ts | idleCallbackExecutionExtended": {
    "message": "Exécution du rappel à la prochaine période d'inactivité prolongée au-delà de la durée maximale de {PH1}"
  },
  "panels/timeline/components/DetailsView.ts | longInteractionINP": {
    "message": "Longue interaction"
  },
  "panels/timeline/components/DetailsView.ts | longTask": {
    "message": "Tâche longue"
  },
  "panels/timeline/components/DetailsView.ts | sIsALikelyPerformanceBottleneck": {
    "message": "{PH1} est probablement un goulot d'étranglement."
  },
  "panels/timeline/components/DetailsView.ts | sIsLikelyPoorPageResponsiveness": {
    "message": "{PH1} indique une mauvaise réactivité de la page."
  },
  "panels/timeline/components/DetailsView.ts | sTookS": {
    "message": "{PH1} a mis {PH2}."
  },
  "panels/timeline/components/DetailsView.ts | websocketProtocol": {
    "message": "Protocole WebSocket"
  },
  "panels/timeline/components/InteractionBreakdown.ts | inputDelay": {
    "message": "Délai de réponse à l'entrée utilisateur"
  },
  "panels/timeline/components/InteractionBreakdown.ts | presentationDelay": {
    "message": "Délai de présentation"
  },
  "panels/timeline/components/InteractionBreakdown.ts | processingTime": {
    "message": "Temps de traitement"
  },
  "panels/timeline/timeline-meta.ts | hideChromeFrameInLayersView": {
    "message": "Masquer le frame chrome dans la vue des calques"
  },
  "panels/timeline/timeline-meta.ts | javascriptProfiler": {
    "message": "Profileur JavaScript"
  },
  "panels/timeline/timeline-meta.ts | loadProfile": {
    "message": "Charger le profil…"
  },
  "panels/timeline/timeline-meta.ts | nextFrame": {
    "message": "Frame suivant"
  },
  "panels/timeline/timeline-meta.ts | nextRecording": {
    "message": "Enregistrement suivant"
  },
  "panels/timeline/timeline-meta.ts | performance": {
    "message": "Performances"
  },
  "panels/timeline/timeline-meta.ts | previousFrame": {
    "message": "Frame précédent"
  },
  "panels/timeline/timeline-meta.ts | previousRecording": {
    "message": "Enregistrement précédent"
  },
  "panels/timeline/timeline-meta.ts | record": {
    "message": "Enregistrer"
  },
  "panels/timeline/timeline-meta.ts | saveProfile": {
    "message": "Enregistrer le profil…"
  },
  "panels/timeline/timeline-meta.ts | showJavascriptProfiler": {
    "message": "Afficher le profileur JavaScript"
  },
  "panels/timeline/timeline-meta.ts | showPerformance": {
    "message": "Afficher les performances"
  },
  "panels/timeline/timeline-meta.ts | showRecentTimelineSessions": {
    "message": "Afficher les sessions récentes de la chronologie"
  },
  "panels/timeline/timeline-meta.ts | startProfilingAndReloadPage": {
    "message": "Démarrer le profilage et actualiser la page"
  },
  "panels/timeline/timeline-meta.ts | startStopRecording": {
    "message": "Démarrer/Arrêter l'enregistrement"
  },
  "panels/timeline/timeline-meta.ts | stop": {
    "message": "Arrêter"
  },
  "panels/web_audio/AudioContextContentBuilder.ts | callbackBufferSize": {
    "message": "Taille du tampon de rappel"
  },
  "panels/web_audio/AudioContextContentBuilder.ts | callbackInterval": {
    "message": "Intervalle de rappel"
  },
  "panels/web_audio/AudioContextContentBuilder.ts | currentTime": {
    "message": "Heure actuelle"
  },
  "panels/web_audio/AudioContextContentBuilder.ts | maxOutputChannels": {
    "message": "Nombre max. de canaux de sortie"
  },
  "panels/web_audio/AudioContextContentBuilder.ts | renderCapacity": {
    "message": "Capacité de rendu"
  },
  "panels/web_audio/AudioContextContentBuilder.ts | sampleRate": {
    "message": "Taux d'échantillonnage"
  },
  "panels/web_audio/AudioContextContentBuilder.ts | state": {
    "message": "État"
  },
  "panels/web_audio/AudioContextSelector.ts | audioContextS": {
    "message": "Contexte audio : {PH1}"
  },
  "panels/web_audio/AudioContextSelector.ts | noRecordings": {
    "message": "(aucun enregistrement)"
  },
  "panels/web_audio/WebAudioView.ts | openAPageThatUsesWebAudioApiTo": {
    "message": "Ouvrez une page qui utilise l'API Web Audio pour commencer la surveillance."
  },
  "panels/web_audio/web_audio-meta.ts | audio": {
    "message": "audio"
  },
  "panels/web_audio/web_audio-meta.ts | showWebaudio": {
    "message": "Afficher WebAudio"
  },
  "panels/web_audio/web_audio-meta.ts | webaudio": {
    "message": "WebAudio"
  },
  "panels/webauthn/WebauthnPane.ts | actions": {
    "message": "Actions"
  },
  "panels/webauthn/WebauthnPane.ts | active": {
    "message": "Actif"
  },
  "panels/webauthn/WebauthnPane.ts | add": {
    "message": "Ajouter"
  },
  "panels/webauthn/WebauthnPane.ts | addAuthenticator": {
    "message": "Ajouter un authentificateur"
  },
  "panels/webauthn/WebauthnPane.ts | authenticatorS": {
    "message": "Authentificateur {PH1}"
  },
  "panels/webauthn/WebauthnPane.ts | credentials": {
    "message": "Identifiants"
  },
  "panels/webauthn/WebauthnPane.ts | editName": {
    "message": "Modifier le nom"
  },
  "panels/webauthn/WebauthnPane.ts | enableVirtualAuthenticator": {
    "message": "Activer l'environnement d'authentification virtuelle"
  },
  "panels/webauthn/WebauthnPane.ts | enterNewName": {
    "message": "Saisissez un nouveau nom"
  },
  "panels/webauthn/WebauthnPane.ts | export": {
    "message": "Exporter"
  },
  "panels/webauthn/WebauthnPane.ts | id": {
    "message": "Pièce d'identité"
  },
  "panels/webauthn/WebauthnPane.ts | isResident": {
    "message": "Est résident"
  },
  "panels/webauthn/WebauthnPane.ts | learnMore": {
    "message": "En savoir plus"
  },
  "panels/webauthn/WebauthnPane.ts | newAuthenticator": {
    "message": "Nouvel authentificateur"
  },
  "panels/webauthn/WebauthnPane.ts | no": {
    "message": "Non"
  },
  "panels/webauthn/WebauthnPane.ts | noCredentialsTryCallingSFromYour": {
    "message": "Aucun identifiant. Essayez d'appeler {PH1} depuis votre site Web."
  },
  "panels/webauthn/WebauthnPane.ts | privateKeypem": {
    "message": "Clé privée .pem"
  },
  "panels/webauthn/WebauthnPane.ts | protocol": {
    "message": "Protocole"
  },
  "panels/webauthn/WebauthnPane.ts | remove": {
    "message": "Supprimer"
  },
  "panels/webauthn/WebauthnPane.ts | rpId": {
    "message": "ID RP"
  },
  "panels/webauthn/WebauthnPane.ts | saveName": {
    "message": "Enregistrer le nom"
  },
  "panels/webauthn/WebauthnPane.ts | setSAsTheActiveAuthenticator": {
    "message": "Définir {PH1} comme authentificateur actif"
  },
  "panels/webauthn/WebauthnPane.ts | signCount": {
    "message": "Nombre de signatures"
  },
  "panels/webauthn/WebauthnPane.ts | supportsLargeBlob": {
    "message": "Accepte les blobs volumineux"
  },
  "panels/webauthn/WebauthnPane.ts | supportsResidentKeys": {
    "message": "Compatible avec les clés résidentes"
  },
  "panels/webauthn/WebauthnPane.ts | supportsUserVerification": {
    "message": "Prend en charge la validation d'utilisateur"
  },
  "panels/webauthn/WebauthnPane.ts | transport": {
    "message": "Transport"
  },
  "panels/webauthn/WebauthnPane.ts | useWebauthnForPhishingresistant": {
    "message": "Utiliser WebAuthn pour une authentification anti-hameçonnage"
  },
  "panels/webauthn/WebauthnPane.ts | userHandle": {
    "message": "Poignée utilisateur"
  },
  "panels/webauthn/WebauthnPane.ts | uuid": {
    "message": "UUID"
  },
  "panels/webauthn/WebauthnPane.ts | yes": {
    "message": "Oui"
  },
  "panels/webauthn/webauthn-meta.ts | showWebauthn": {
    "message": "Afficher WebAuthn"
  },
  "panels/webauthn/webauthn-meta.ts | webauthn": {
    "message": "WebAuthn"
  },
  "ui/components/data_grid/DataGrid.ts | enterToSort": {
    "message": "État du tri de la colonne : {PH1}. Appuyez sur Entrée pour appliquer le filtre de tri"
  },
  "ui/components/data_grid/DataGrid.ts | headerOptions": {
    "message": "Options pour l'en-tête"
  },
  "ui/components/data_grid/DataGrid.ts | resetColumns": {
    "message": "Réinitialiser les colonnes"
  },
  "ui/components/data_grid/DataGrid.ts | sortAsc": {
    "message": "croissant"
  },
  "ui/components/data_grid/DataGrid.ts | sortBy": {
    "message": "Trier par"
  },
  "ui/components/data_grid/DataGrid.ts | sortDesc": {
    "message": "décroissant"
  },
  "ui/components/data_grid/DataGrid.ts | sortNone": {
    "message": "aucun"
  },
  "ui/components/data_grid/DataGridController.ts | sortInAscendingOrder": {
    "message": "{PH1}, tri par ordre croissant"
  },
  "ui/components/data_grid/DataGridController.ts | sortInDescendingOrder": {
    "message": "{PH1}, tri par ordre décroissant"
  },
  "ui/components/data_grid/DataGridController.ts | sortingCanceled": {
    "message": "{PH1}, tri annulé"
  },
  "ui/components/dialogs/IconDialog.ts | close": {
    "message": "Fermer"
  },
  "ui/components/dialogs/ShortcutDialog.ts | close": {
    "message": "Fermer"
  },
  "ui/components/dialogs/ShortcutDialog.ts | dialogTitle": {
    "message": "Raccourcis clavier"
  },
  "ui/components/dialogs/ShortcutDialog.ts | showShortcutTitle": {
    "message": "Afficher les raccourcis"
  },
  "ui/components/diff_view/DiffView.ts | SkippingDMatchingLines": {
    "message": "(… {PH1} lignes correspondantes ignorées …)"
  },
  "ui/components/diff_view/DiffView.ts | additions": {
    "message": "Ajout :"
  },
  "ui/components/diff_view/DiffView.ts | changesDiffViewer": {
    "message": "Visionneuse des différences de changements"
  },
  "ui/components/diff_view/DiffView.ts | deletions": {
    "message": "Suppression :"
  },
  "ui/components/issue_counter/IssueCounter.ts | breakingChanges": {
    "message": "{issueCount,plural, =1{# modification destructive}one{# modification destructive}other{# modifications destructives}}"
  },
  "ui/components/issue_counter/IssueCounter.ts | pageErrors": {
    "message": "{issueCount,plural, =1{# erreur dans la page}one{# erreur dans la page}other{# erreurs dans la page}}"
  },
  "ui/components/issue_counter/IssueCounter.ts | possibleImprovements": {
    "message": "{issueCount,plural, =1{# amélioration possible}one{# amélioration possible}other{# améliorations possibles}}"
  },
  "ui/components/issue_counter/IssueLinkIcon.ts | clickToShowIssue": {
    "message": "Cliquez pour afficher le problème dans l'onglet dédié"
  },
  "ui/components/issue_counter/IssueLinkIcon.ts | clickToShowIssueWithTitle": {
    "message": "Cliquer pour afficher le problème \"{title}\" dans l'onglet dédié"
  },
  "ui/components/issue_counter/IssueLinkIcon.ts | issueUnavailable": {
    "message": "Problème non disponible pour le moment"
  },
  "ui/components/markdown_view/CodeBlock.ts | copied": {
    "message": "Copié dans le presse-papiers"
  },
  "ui/components/markdown_view/CodeBlock.ts | copy": {
    "message": "Copier le code"
  },
  "ui/components/panel_feedback/FeedbackButton.ts | feedback": {
    "message": "Commentaires"
  },
  "ui/components/panel_feedback/PanelFeedback.ts | previewFeature": {
    "message": "Fonctionnalité bêta"
  },
  "ui/components/panel_feedback/PanelFeedback.ts | previewText": {
    "message": "Notre équipe, qui travaille activement sur cette fonctionnalité, serait ravie de savoir ce que vous en pensez."
  },
  "ui/components/panel_feedback/PanelFeedback.ts | previewTextFeedbackLink": {
    "message": "Envoyez-nous vos commentaires."
  },
  "ui/components/panel_feedback/PanelFeedback.ts | videoAndDocumentation": {
    "message": "Vidéo et documentation"
  },
  "ui/components/panel_feedback/PreviewToggle.ts | learnMoreLink": {
    "message": "En savoir plus"
  },
  "ui/components/panel_feedback/PreviewToggle.ts | previewTextFeedbackLink": {
    "message": "Envoyez-nous vos commentaires."
  },
  "ui/components/panel_feedback/PreviewToggle.ts | shortFeedbackLink": {
    "message": "Envoyer des commentaires"
  },
  "ui/components/request_link_icon/RequestLinkIcon.ts | clickToShowRequestInTheNetwork": {
    "message": "Cliquez pour ouvrir le panneau \"Network\" et afficher la requête pour l'URL {url}"
  },
  "ui/components/request_link_icon/RequestLinkIcon.ts | requestUnavailableInTheNetwork": {
    "message": "Requête non disponible dans le panneau \"Network\". Essayez d'actualiser la page inspectée"
  },
  "ui/components/request_link_icon/RequestLinkIcon.ts | shortenedURL": {
    "message": "URL courte"
  },
  "ui/components/survey_link/SurveyLink.ts | anErrorOccurredWithTheSurvey": {
    "message": "Une erreur s'est produite dans l'enquête"
  },
  "ui/components/survey_link/SurveyLink.ts | openingSurvey": {
    "message": "Ouverture de l'enquête…"
  },
  "ui/components/survey_link/SurveyLink.ts | thankYouForYourFeedback": {
    "message": "Merci pour vos commentaires"
  },
  "ui/components/text_editor/config.ts | codeEditor": {
    "message": "Éditeur de code"
  },
  "ui/components/text_editor/config.ts | sSuggestionSOfS": {
    "message": "{PH1}, suggestion {PH2} sur {PH3}"
  },
  "ui/legacy/ActionRegistration.ts | background_services": {
    "message": "Services d'arrière-plan"
  },
  "ui/legacy/ActionRegistration.ts | changes": {
    "message": "Modifications"
  },
  "ui/legacy/ActionRegistration.ts | console": {
    "message": "Console"
  },
  "ui/legacy/ActionRegistration.ts | debugger": {
    "message": "Débogueur"
  },
  "ui/legacy/ActionRegistration.ts | drawer": {
    "message": "Panneau"
  },
  "ui/legacy/ActionRegistration.ts | elements": {
    "message": "Éléments"
  },
  "ui/legacy/ActionRegistration.ts | global": {
    "message": "Global"
  },
  "ui/legacy/ActionRegistration.ts | help": {
    "message": "Aide"
  },
  "ui/legacy/ActionRegistration.ts | javascript_profiler": {
    "message": "Profileur JavaScript"
  },
  "ui/legacy/ActionRegistration.ts | layers": {
    "message": "Couches"
  },
  "ui/legacy/ActionRegistration.ts | memory": {
    "message": "Mémoire"
  },
  "ui/legacy/ActionRegistration.ts | mobile": {
    "message": "Mobile"
  },
  "ui/legacy/ActionRegistration.ts | navigation": {
    "message": "Navigation"
  },
  "ui/legacy/ActionRegistration.ts | network": {
    "message": "Réseau"
  },
  "ui/legacy/ActionRegistration.ts | performance": {
    "message": "Performances"
  },
  "ui/legacy/ActionRegistration.ts | recorder": {
    "message": "Enregistreur"
  },
  "ui/legacy/ActionRegistration.ts | rendering": {
    "message": "Affichage"
  },
  "ui/legacy/ActionRegistration.ts | resources": {
    "message": "Ressources"
  },
  "ui/legacy/ActionRegistration.ts | screenshot": {
    "message": "Capture d'écran"
  },
  "ui/legacy/ActionRegistration.ts | settings": {
    "message": "Paramètres"
  },
  "ui/legacy/ActionRegistration.ts | sources": {
    "message": "Sources"
  },
  "ui/legacy/DockController.ts | close": {
    "message": "Fermer"
  },
  "ui/legacy/DockController.ts | devToolsDockedTo": {
    "message": "Les outils de développement sont rattachés à {PH1}"
  },
  "ui/legacy/DockController.ts | devtoolsUndocked": {
    "message": "Les Outils de développement sont détachés"
  },
  "ui/legacy/DockController.ts | dockToBottom": {
    "message": "Épingler en bas"
  },
  "ui/legacy/DockController.ts | dockToLeft": {
    "message": "Épingler à gauche"
  },
  "ui/legacy/DockController.ts | dockToRight": {
    "message": "Épingler à droite"
  },
  "ui/legacy/DockController.ts | undockIntoSeparateWindow": {
    "message": "Détacher dans une fenêtre distincte"
  },
  "ui/legacy/EmptyWidget.ts | learnMore": {
    "message": "En savoir plus"
  },
  "ui/legacy/FilterBar.ts | allStrings": {
    "message": "Tout"
  },
  "ui/legacy/FilterBar.ts | clearFilter": {
    "message": "Effacer la saisie"
  },
  "ui/legacy/FilterBar.ts | egSmalldUrlacomb": {
    "message": "Ex. : /small[d]+/ url:a.com/b"
  },
  "ui/legacy/FilterBar.ts | filter": {
    "message": "Filtrer"
  },
  "ui/legacy/FilterBar.ts | sclickToSelectMultipleTypes": {
    "message": "Cliquez ici tout en maintenant la touche {PH1} enfoncée pour sélectionner plusieurs types"
  },
  "ui/legacy/Infobar.ts | close": {
    "message": "Fermer"
  },
  "ui/legacy/Infobar.ts | dontShowAgain": {
    "message": "Ne plus afficher"
  },
  "ui/legacy/Infobar.ts | showMore": {
    "message": "Afficher plus"
  },
  "ui/legacy/InspectorView.ts | closeDrawer": {
    "message": "Fermer le panneau"
  },
  "ui/legacy/InspectorView.ts | devToolsLanguageMissmatch": {
    "message": "Les outils de développement sont désormais disponibles en {PH1} !"
  },
  "ui/legacy/InspectorView.ts | drawer": {
    "message": "Panneau d'outils"
  },
  "ui/legacy/InspectorView.ts | drawerHidden": {
    "message": "Panneau masqué"
  },
  "ui/legacy/InspectorView.ts | drawerShown": {
    "message": "Panneau affiché"
  },
  "ui/legacy/InspectorView.ts | mainToolbar": {
    "message": "Barre d'outils principale"
  },
  "ui/legacy/InspectorView.ts | moreTools": {
    "message": "Plus d'outils"
  },
  "ui/legacy/InspectorView.ts | moveToBottom": {
    "message": "Placer en dernier"
  },
  "ui/legacy/InspectorView.ts | moveToTop": {
    "message": "Déplacer vers le haut"
  },
  "ui/legacy/InspectorView.ts | panels": {
    "message": "Panneaux"
  },
  "ui/legacy/InspectorView.ts | reloadDevtools": {
    "message": "Actualiser les Outils de développement"
  },
  "ui/legacy/InspectorView.ts | selectFolder": {
    "message": "Sélectionner un dossier"
  },
  "ui/legacy/InspectorView.ts | selectOverrideFolder": {
    "message": "Sélectionnez le dossier dans lequel stocker les fichiers de remplacement."
  },
  "ui/legacy/InspectorView.ts | setToBrowserLanguage": {
    "message": "Toujours faire correspondre à la langue de Chrome'"
  },
  "ui/legacy/InspectorView.ts | setToSpecificLanguage": {
    "message": "Faire passer les outils de développement en {PH1}"
  },
  "ui/legacy/ListWidget.ts | addString": {
    "message": "Ajouter"
  },
  "ui/legacy/ListWidget.ts | cancelString": {
    "message": "Annuler"
  },
  "ui/legacy/ListWidget.ts | changesSaved": {
    "message": "Les modifications apportées à l'élément ont été enregistrées"
  },
  "ui/legacy/ListWidget.ts | editString": {
    "message": "Modifier"
  },
  "ui/legacy/ListWidget.ts | removeString": {
    "message": "Supprimer"
  },
  "ui/legacy/ListWidget.ts | removedItem": {
    "message": "L'élément a été supprimé"
  },
  "ui/legacy/ListWidget.ts | saveString": {
    "message": "Enregistrer"
  },
  "ui/legacy/RemoteDebuggingTerminatedScreen.ts | debuggingConnectionWasClosed": {
    "message": "La connexion du débogage a été fermée. Motif : "
  },
  "ui/legacy/RemoteDebuggingTerminatedScreen.ts | reconnectDevtools": {
    "message": "Reconnecter DevTools"
  },
  "ui/legacy/RemoteDebuggingTerminatedScreen.ts | reconnectWhenReadyByReopening": {
    "message": "Rouvrez les Outils de développement pour vous reconnecter."
  },
  "ui/legacy/SearchableView.ts | cancel": {
    "message": "Annuler"
  },
  "ui/legacy/SearchableView.ts | dMatches": {
    "message": "{PH1} correspondances"
  },
  "ui/legacy/SearchableView.ts | dOfD": {
    "message": "{PH1} sur {PH2}"
  },
  "ui/legacy/SearchableView.ts | findString": {
    "message": "Rechercher"
  },
  "ui/legacy/SearchableView.ts | matchCase": {
    "message": "Respecter la casse"
  },
  "ui/legacy/SearchableView.ts | matchString": {
    "message": "1 correspondance"
  },
  "ui/legacy/SearchableView.ts | replace": {
    "message": "Remplacer"
  },
  "ui/legacy/SearchableView.ts | replaceAll": {
    "message": "Tout remplacer"
  },
  "ui/legacy/SearchableView.ts | searchNext": {
    "message": "Rechercher l'instance suivante"
  },
  "ui/legacy/SearchableView.ts | searchPrevious": {
    "message": "Rechercher l'instance précédente"
  },
  "ui/legacy/SearchableView.ts | useRegularExpression": {
    "message": "Utiliser une expression régulière"
  },
  "ui/legacy/SettingsUI.ts | oneOrMoreSettingsHaveChanged": {
    "message": "Actualisez la page pour appliquer les changements apportés à un ou plusieurs paramètres."
  },
  "ui/legacy/SettingsUI.ts | srequiresReload": {
    "message": "* Actualisation requise"
  },
  "ui/legacy/SoftContextMenu.ts | checked": {
    "message": "coché"
  },
  "ui/legacy/SoftContextMenu.ts | sS": {
    "message": "{PH1}, {PH2}"
  },
  "ui/legacy/SoftContextMenu.ts | sSS": {
    "message": "{PH1}, {PH2}, {PH3}"
  },
  "ui/legacy/SoftContextMenu.ts | unchecked": {
    "message": "décochée"
  },
  "ui/legacy/SoftDropDown.ts | noItemSelected": {
    "message": "(aucun élément sélectionné)"
  },
  "ui/legacy/SuggestBox.ts | sSuggestionSOfS": {
    "message": "{PH1}, suggestion {PH2} sur {PH3}"
  },
  "ui/legacy/SuggestBox.ts | sSuggestionSSelected": {
    "message": "{PH1}, suggestion sélectionnée"
  },
  "ui/legacy/TabbedPane.ts | close": {
    "message": "Fermer"
  },
  "ui/legacy/TabbedPane.ts | closeAll": {
    "message": "Tout fermer"
  },
  "ui/legacy/TabbedPane.ts | closeOthers": {
    "message": "Fermer les autres"
  },
  "ui/legacy/TabbedPane.ts | closeS": {
    "message": "Fermer {PH1}"
  },
  "ui/legacy/TabbedPane.ts | closeTabsToTheRight": {
    "message": "Fermer les onglets de droite"
  },
  "ui/legacy/TabbedPane.ts | moreTabs": {
    "message": "Plus d'onglets"
  },
  "ui/legacy/TabbedPane.ts | previewFeature": {
    "message": "Fonctionnalité bêta"
  },
  "ui/legacy/TargetCrashedScreen.ts | devtoolsWasDisconnectedFromThe": {
    "message": "Les Outils de développement ont été déconnectés de la page"
  },
  "ui/legacy/TargetCrashedScreen.ts | oncePageIsReloadedDevtoolsWill": {
    "message": "Une fois la page actualisée, les Outils de développement se reconnecteront automatiquement."
  },
  "ui/legacy/Toolbar.ts | clearInput": {
    "message": "Effacer la saisie"
  },
  "ui/legacy/Toolbar.ts | notPressed": {
    "message": "non sélectionné"
  },
  "ui/legacy/Toolbar.ts | pressed": {
    "message": "sélectionné"
  },
  "ui/legacy/UIUtils.ts | anonymous": {
    "message": "(anonyme)"
  },
  "ui/legacy/UIUtils.ts | anotherProfilerIsAlreadyActive": {
    "message": "Un autre profileur est déjà actif"
  },
  "ui/legacy/UIUtils.ts | asyncCall": {
    "message": "Appel asynchrone"
  },
  "ui/legacy/UIUtils.ts | cancel": {
    "message": "Annuler"
  },
  "ui/legacy/UIUtils.ts | close": {
    "message": "Fermer"
  },
  "ui/legacy/UIUtils.ts | copyFileName": {
    "message": "Copier le nom de fichier"
  },
  "ui/legacy/UIUtils.ts | copyLinkAddress": {
    "message": "Copier l'adresse du lien"
  },
  "ui/legacy/UIUtils.ts | ok": {
    "message": "OK"
  },
  "ui/legacy/UIUtils.ts | openInNewTab": {
    "message": "Ouvrir dans un nouvel onglet"
  },
  "ui/legacy/UIUtils.ts | promiseRejectedAsync": {
    "message": "Promesse rejetée (asynchrone)"
  },
  "ui/legacy/UIUtils.ts | promiseResolvedAsync": {
    "message": "Promesse résolue (asynchrone)"
  },
  "ui/legacy/UIUtils.ts | sAsync": {
    "message": "{PH1} (asynchrone)"
  },
  "ui/legacy/ViewManager.ts | sPanel": {
    "message": "Panneau \"{PH1}\""
  },
  "ui/legacy/ViewRegistration.ts | drawer": {
    "message": "Panneau"
  },
  "ui/legacy/ViewRegistration.ts | drawer_sidebar": {
    "message": "Barre latérale du panneau"
  },
  "ui/legacy/ViewRegistration.ts | elements": {
    "message": "Éléments"
  },
  "ui/legacy/ViewRegistration.ts | network": {
    "message": "Réseau"
  },
  "ui/legacy/ViewRegistration.ts | panel": {
    "message": "Panneau"
  },
  "ui/legacy/ViewRegistration.ts | settings": {
    "message": "Paramètres"
  },
  "ui/legacy/ViewRegistration.ts | sources": {
    "message": "Sources"
  },
  "ui/legacy/components/color_picker/ContrastDetails.ts | aa": {
    "message": "AA"
  },
  "ui/legacy/components/color_picker/ContrastDetails.ts | aaa": {
    "message": "AAA"
  },
  "ui/legacy/components/color_picker/ContrastDetails.ts | apca": {
    "message": "APCA"
  },
  "ui/legacy/components/color_picker/ContrastDetails.ts | contrastRatio": {
    "message": "Rapport de contraste"
  },
  "ui/legacy/components/color_picker/ContrastDetails.ts | noContrastInformationAvailable": {
    "message": "Aucune information disponible sur le contraste"
  },
  "ui/legacy/components/color_picker/ContrastDetails.ts | pickBackgroundColor": {
    "message": "Sélectionnez la couleur d'arrière-plan"
  },
  "ui/legacy/components/color_picker/ContrastDetails.ts | placeholderWithColon": {
    "message": " : {PH1}"
  },
  "ui/legacy/components/color_picker/ContrastDetails.ts | showLess": {
    "message": "Moins"
  },
  "ui/legacy/components/color_picker/ContrastDetails.ts | showMore": {
    "message": "Plus"
  },
  "ui/legacy/components/color_picker/ContrastDetails.ts | toggleBackgroundColorPicker": {
    "message": "Activer/Désactiver le sélecteur de couleur en arrière-plan"
  },
  "ui/legacy/components/color_picker/ContrastDetails.ts | useSuggestedColorStoFixLow": {
    "message": "Utiliser la couleur {PH1} suggérée pour corriger le faible contraste"
  },
  "ui/legacy/components/color_picker/FormatPickerContextMenu.ts | colorClippedTooltipText": {
    "message": "Cette couleur a été coupée pour correspondre à la gamme du format. Le résultat était en fait : {PH1}"
  },
  "ui/legacy/components/color_picker/Spectrum.ts | addToPalette": {
    "message": "Ajouter à la palette"
  },
  "ui/legacy/components/color_picker/Spectrum.ts | changeAlpha": {
    "message": "Modifier alpha"
  },
  "ui/legacy/components/color_picker/Spectrum.ts | changeColorFormat": {
    "message": "Modifier le format de couleurs"
  },
  "ui/legacy/components/color_picker/Spectrum.ts | changeHue": {
    "message": "Modifier la teinte"
  },
  "ui/legacy/components/color_picker/Spectrum.ts | clearPalette": {
    "message": "Effacer la palette"
  },
  "ui/legacy/components/color_picker/Spectrum.ts | colorPalettes": {
    "message": "Palettes de couleurs"
  },
  "ui/legacy/components/color_picker/Spectrum.ts | colorS": {
    "message": "Couleur : {PH1}"
  },
  "ui/legacy/components/color_picker/Spectrum.ts | copyColorToClipboard": {
    "message": "Copier la couleur dans le presse-papiers"
  },
  "ui/legacy/components/color_picker/Spectrum.ts | hex": {
    "message": "HEX"
  },
  "ui/legacy/components/color_picker/Spectrum.ts | longclickOrLongpressSpaceToShow": {
    "message": "Effectuer un clic long ou appuyer de manière prolongée sur la barre d'espace pour afficher les autres nuances de {PH1}"
  },
  "ui/legacy/components/color_picker/Spectrum.ts | pressArrowKeysMessage": {
    "message": "Pour déplacer la palette, appuyez sur les touches fléchées avec ou sans modificateurs. Pour la déplacer davantage, appuyez sur une touche fléchée+Maj, pour réduire le déplacement, appuyez sur une touche fléchée+Ctrl, et pour le réduire davantage, appuyez sur une touche fléchée+Alt"
  },
  "ui/legacy/components/color_picker/Spectrum.ts | previewPalettes": {
    "message": "Prévisualiser les palettes"
  },
  "ui/legacy/components/color_picker/Spectrum.ts | removeAllToTheRight": {
    "message": "Supprimer tous les éléments à droite"
  },
  "ui/legacy/components/color_picker/Spectrum.ts | removeColor": {
    "message": "Supprimer la couleur"
  },
  "ui/legacy/components/color_picker/Spectrum.ts | returnToColorPicker": {
    "message": "Revenir au sélecteur de couleur"
  },
  "ui/legacy/components/color_picker/Spectrum.ts | sInS": {
    "message": "{PH1} dans {PH2}"
  },
  "ui/legacy/components/color_picker/Spectrum.ts | toggleColorPicker": {
    "message": "Pipette [{PH1}]"
  },
  "ui/legacy/components/cookie_table/CookiesTable.ts | cookies": {
    "message": "Cookies"
  },
  "ui/legacy/components/cookie_table/CookiesTable.ts | editableCookies": {
    "message": "Cookies modifiables"
  },
  "ui/legacy/components/cookie_table/CookiesTable.ts | na": {
    "message": "N/A"
  },
  "ui/legacy/components/cookie_table/CookiesTable.ts | name": {
    "message": "Nom"
  },
  "ui/legacy/components/cookie_table/CookiesTable.ts | opaquePartitionKey": {
    "message": "(opaque)"
  },
  "ui/legacy/components/cookie_table/CookiesTable.ts | session": {
    "message": "Session"
  },
  "ui/legacy/components/cookie_table/CookiesTable.ts | showIssueAssociatedWithThis": {
    "message": "Affichez le problème associé à ce cookie"
  },
  "ui/legacy/components/cookie_table/CookiesTable.ts | showRequestsWithThisCookie": {
    "message": "Afficher les requêtes avec ce cookie"
  },
  "ui/legacy/components/cookie_table/CookiesTable.ts | size": {
    "message": "Taille"
  },
  "ui/legacy/components/cookie_table/CookiesTable.ts | sourcePortTooltip": {
    "message": "Afficher le port source (plage 1 à 65 535) sur lequel le cookie a été défini. Si le port est inconnu, la valeur \"-1\" est affichée."
  },
  "ui/legacy/components/cookie_table/CookiesTable.ts | sourceSchemeTooltip": {
    "message": "Afficher le schéma source (Secure, NonSecure) sur lequel le cookie a été défini. Si le schéma est inconnu, la valeur Unset est affichée."
  },
  "ui/legacy/components/cookie_table/CookiesTable.ts | timeAfter": {
    "message": "Après le {date}"
  },
  "ui/legacy/components/cookie_table/CookiesTable.ts | timeAfterTooltip": {
    "message": "L'horodatage d'expiration est {seconds}, ce qui correspond à une date après le {date}"
  },
  "ui/legacy/components/cookie_table/CookiesTable.ts | value": {
    "message": "Valeur"
  },
  "ui/legacy/components/data_grid/DataGrid.ts | addNew": {
    "message": "Ajouter"
  },
  "ui/legacy/components/data_grid/DataGrid.ts | checked": {
    "message": "coché"
  },
  "ui/legacy/components/data_grid/DataGrid.ts | collapsed": {
    "message": "réduits"
  },
  "ui/legacy/components/data_grid/DataGrid.ts | delete": {
    "message": "Supprimer"
  },
  "ui/legacy/components/data_grid/DataGrid.ts | editS": {
    "message": "Modifier \"{PH1}\""
  },
  "ui/legacy/components/data_grid/DataGrid.ts | emptyRowCreated": {
    "message": "Une ligne vide a été créée dans le tableau. Double-cliquez ou utilisez le menu contextuel pour modifier."
  },
  "ui/legacy/components/data_grid/DataGrid.ts | expanded": {
    "message": "développé"
  },
  "ui/legacy/components/data_grid/DataGrid.ts | headerOptions": {
    "message": "Options pour l'en-tête"
  },
  "ui/legacy/components/data_grid/DataGrid.ts | levelS": {
    "message": "niveau {PH1}"
  },
  "ui/legacy/components/data_grid/DataGrid.ts | refresh": {
    "message": "Actualiser"
  },
  "ui/legacy/components/data_grid/DataGrid.ts | resetColumns": {
    "message": "Réinitialiser les colonnes"
  },
  "ui/legacy/components/data_grid/DataGrid.ts | rowsS": {
    "message": "Lignes : {PH1}"
  },
  "ui/legacy/components/data_grid/DataGrid.ts | sRowS": {
    "message": "{PH1} ligne {PH2}"
  },
  "ui/legacy/components/data_grid/DataGrid.ts | sSUseTheUpAndDownArrowKeysTo": {
    "message": "{PH1} {PH2} : utilisez les touches fléchées vers le haut et vers le bas pour naviguer entre les lignes de la table et interagir avec celles-ci. Utilisez le mode de navigation pour lire chaque cellule l'une après l'autre."
  },
  "ui/legacy/components/data_grid/DataGrid.ts | sortByString": {
    "message": "Trier par"
  },
  "ui/legacy/components/data_grid/ShowMoreDataGridNode.ts | showAllD": {
    "message": "Tout afficher ({PH1})"
  },
  "ui/legacy/components/data_grid/ShowMoreDataGridNode.ts | showDAfter": {
    "message": "Afficher {PH1} après"
  },
  "ui/legacy/components/data_grid/ShowMoreDataGridNode.ts | showDBefore": {
    "message": "Afficher {PH1} avant"
  },
  "ui/legacy/components/inline_editor/CSSShadowEditor.ts | blur": {
    "message": "Flou"
  },
  "ui/legacy/components/inline_editor/CSSShadowEditor.ts | spread": {
    "message": "Propager"
  },
  "ui/legacy/components/inline_editor/CSSShadowEditor.ts | type": {
    "message": "Type"
  },
  "ui/legacy/components/inline_editor/CSSShadowEditor.ts | xOffset": {
    "message": "Décalage axe X"
  },
  "ui/legacy/components/inline_editor/CSSShadowEditor.ts | yOffset": {
    "message": "Décalage axe Y"
  },
  "ui/legacy/components/inline_editor/ColorSwatch.ts | shiftclickToChangeColorFormat": {
    "message": "Cliquez en maintenant la touche Maj enfoncée pour changer de format de couleurs"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | PleaseEnterAValidValueForSText": {
    "message": "* Veuillez saisir une valeur valide pour le texte {PH1}"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | cssProperties": {
    "message": "Propriétés CSS"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | deleteS": {
    "message": "Supprimer {PH1}"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | fallbackS": {
    "message": "Application de secours {PH1}"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | fontFamily": {
    "message": "Famille de polices"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | fontSelectorDeletedAtIndexS": {
    "message": "Sélecteur de polices supprimé au niveau l'index : {PH1}"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | fontSize": {
    "message": "Taille de police"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | fontWeight": {
    "message": "Épaisseur de la police"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | lineHeight": {
    "message": "Hauteur de ligne"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | sKeyValueSelector": {
    "message": "Sélecteur de clé-valeur {PH1}"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | sSliderInput": {
    "message": "Entrée de curseur {PH1}"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | sTextInput": {
    "message": "Saisie de texte : {PH1}"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | sToggleInputType": {
    "message": "Type d'entrée d'activation/de désactivation de {PH1}"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | sUnitInput": {
    "message": "Entrée d'unités {PH1}"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | selectorInputMode": {
    "message": "Mode de saisie du sélecteur"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | sliderInputMode": {
    "message": "Mode de saisie avec le curseur"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | spacing": {
    "message": "Espacement"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | thereIsNoValueToDeleteAtIndexS": {
    "message": "Aucune valeur valide à supprimer dans l'index : {PH1}"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | thisPropertyIsSetToContainUnits": {
    "message": "Cette propriété est définie pour contenir des unités, mais aucune unitsArray correspondante n'est définie : {PH1}"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | units": {
    "message": "Unités"
  },
  "ui/legacy/components/inline_editor/LinkSwatch.ts | sIsNotDefined": {
    "message": "{PH1} non défini"
  },
  "ui/legacy/components/object_ui/CustomPreviewComponent.ts | showAsJavascriptObject": {
    "message": "Afficher en tant qu'objet JavaScript"
  },
  "ui/legacy/components/object_ui/ObjectPropertiesSection.ts | collapseChildren": {
    "message": "Réduire les enfants"
  },
  "ui/legacy/components/object_ui/ObjectPropertiesSection.ts | copy": {
    "message": "Copier"
  },
  "ui/legacy/components/object_ui/ObjectPropertiesSection.ts | copyPropertyPath": {
    "message": "Copier le chemin de la propriété"
  },
  "ui/legacy/components/object_ui/ObjectPropertiesSection.ts | copyValue": {
    "message": "Copier la valeur"
  },
  "ui/legacy/components/object_ui/ObjectPropertiesSection.ts | dots": {
    "message": "(…)"
  },
  "ui/legacy/components/object_ui/ObjectPropertiesSection.ts | exceptionS": {
    "message": "[Exception : {PH1}]"
  },
  "ui/legacy/components/object_ui/ObjectPropertiesSection.ts | expandRecursively": {
    "message": "Développer de façon récursive"
  },
  "ui/legacy/components/object_ui/ObjectPropertiesSection.ts | invokePropertyGetter": {
    "message": "Appeler le getter de propriété"
  },
  "ui/legacy/components/object_ui/ObjectPropertiesSection.ts | longTextWasTruncatedS": {
    "message": "text long tronqué ({PH1})"
  },
  "ui/legacy/components/object_ui/ObjectPropertiesSection.ts | noProperties": {
    "message": "Aucune propriété"
  },
  "ui/legacy/components/object_ui/ObjectPropertiesSection.ts | revealInMemoryInpector": {
    "message": "Afficher dans le panneau \"Outil d'inspection de mémoire\""
  },
  "ui/legacy/components/object_ui/ObjectPropertiesSection.ts | showAllD": {
    "message": "Tout afficher ({PH1})"
  },
  "ui/legacy/components/object_ui/ObjectPropertiesSection.ts | showMoreS": {
    "message": "Afficher plus ({PH1})"
  },
  "ui/legacy/components/object_ui/ObjectPropertiesSection.ts | stringIsTooLargeToEdit": {
    "message": "<chaîne trop grande à modifier>"
  },
  "ui/legacy/components/object_ui/ObjectPropertiesSection.ts | unknown": {
    "message": "inconnu"
  },
  "ui/legacy/components/object_ui/ObjectPropertiesSection.ts | valueNotAccessibleToTheDebugger": {
    "message": "Le débogueur n'a pas accès à la valeur"
  },
  "ui/legacy/components/object_ui/ObjectPropertiesSection.ts | valueUnavailable": {
    "message": "<valeur indisponible>"
  },
  "ui/legacy/components/object_ui/RemoteObjectPreviewFormatter.ts | empty": {
    "message": "vide"
  },
  "ui/legacy/components/object_ui/RemoteObjectPreviewFormatter.ts | emptyD": {
    "message": "vide × {PH1}"
  },
  "ui/legacy/components/object_ui/RemoteObjectPreviewFormatter.ts | thePropertyIsComputedWithAGetter": {
    "message": "Propriété calculée avec un getter"
  },
  "ui/legacy/components/perf_ui/FilmStripView.ts | doubleclickToZoomImageClickTo": {
    "message": "Double-cliquez pour zoomer sur l'image. Cliquez pour afficher les requêtes précédentes."
  },
  "ui/legacy/components/perf_ui/FilmStripView.ts | nextFrame": {
    "message": "Frame suivant"
  },
  "ui/legacy/components/perf_ui/FilmStripView.ts | previousFrame": {
    "message": "Frame précédent"
  },
  "ui/legacy/components/perf_ui/FilmStripView.ts | screenshot": {
    "message": "Capture d'écran"
  },
  "ui/legacy/components/perf_ui/FilmStripView.ts | screenshotForSSelectToView": {
    "message": "Capture d'écran pour {PH1} - sélectionnez pour voir les requêtes précédentes."
  },
  "ui/legacy/components/perf_ui/FlameChart.ts | flameChart": {
    "message": "Graphique de type \"flamme\""
  },
  "ui/legacy/components/perf_ui/FlameChart.ts | hideChildren": {
    "message": "Masquer les enfants"
  },
  "ui/legacy/components/perf_ui/FlameChart.ts | hideFunction": {
    "message": "Masquer une fonction"
  },
  "ui/legacy/components/perf_ui/FlameChart.ts | hideRepeatingChildren": {
    "message": "Masquer les enfants récurrents"
  },
  "ui/legacy/components/perf_ui/FlameChart.ts | resetTrace": {
    "message": "Réinitialiser la trace"
  },
  "ui/legacy/components/perf_ui/FlameChart.ts | sCollapsed": {
    "message": "{PH1} réduit"
  },
  "ui/legacy/components/perf_ui/FlameChart.ts | sExpanded": {
    "message": "{PH1} développé"
  },
  "ui/legacy/components/perf_ui/FlameChart.ts | sHovered": {
    "message": "Pointeur sur {PH1}"
  },
  "ui/legacy/components/perf_ui/FlameChart.ts | sSelected": {
    "message": "{PH1} sélectionné(s)"
  },
  "ui/legacy/components/perf_ui/NetworkPriorities.ts | high": {
    "message": "Élevée"
  },
  "ui/legacy/components/perf_ui/NetworkPriorities.ts | highest": {
    "message": "La plus élevée"
  },
  "ui/legacy/components/perf_ui/NetworkPriorities.ts | low": {
    "message": "Faible"
  },
  "ui/legacy/components/perf_ui/NetworkPriorities.ts | lowest": {
    "message": "La plus faible"
  },
  "ui/legacy/components/perf_ui/NetworkPriorities.ts | medium": {
    "message": "Moyenne"
  },
  "ui/legacy/components/perf_ui/OverviewGrid.ts | leftResizer": {
    "message": "Outil de redimensionnement gauche"
  },
  "ui/legacy/components/perf_ui/OverviewGrid.ts | overviewGridWindow": {
    "message": "Fenêtre de la grille d'aperçu"
  },
  "ui/legacy/components/perf_ui/OverviewGrid.ts | rightResizer": {
    "message": "Outil de redimensionnement à droite"
  },
  "ui/legacy/components/perf_ui/PieChart.ts | total": {
    "message": "Total"
  },
  "ui/legacy/components/perf_ui/perf_ui-meta.ts | collectGarbage": {
    "message": "Récupérer la mémoire"
  },
  "ui/legacy/components/perf_ui/perf_ui-meta.ts | flamechartMouseWheelAction": {
    "message": "Action de la molette de la souris pour les graphiques de type \"flamme\" :"
  },
  "ui/legacy/components/perf_ui/perf_ui-meta.ts | hideLiveMemoryAllocation": {
    "message": "Masquer les annotations sur l'allocation de mémoire active"
  },
  "ui/legacy/components/perf_ui/perf_ui-meta.ts | liveMemoryAllocationAnnotations": {
    "message": "Annotations sur l'allocation de mémoire active"
  },
  "ui/legacy/components/perf_ui/perf_ui-meta.ts | scroll": {
    "message": "Faire défiler"
  },
  "ui/legacy/components/perf_ui/perf_ui-meta.ts | showLiveMemoryAllocation": {
    "message": "Afficher les annotations pour l'allocation de mémoire en direct"
  },
  "ui/legacy/components/perf_ui/perf_ui-meta.ts | zoom": {
    "message": "Zoom"
  },
  "ui/legacy/components/quick_open/CommandMenu.ts | command": {
    "message": "Commande"
  },
  "ui/legacy/components/quick_open/CommandMenu.ts | deprecated": {
    "message": "— Obsolète"
  },
  "ui/legacy/components/quick_open/CommandMenu.ts | noCommandsFound": {
    "message": "Aucune commande trouvée"
  },
  "ui/legacy/components/quick_open/CommandMenu.ts | oneOrMoreSettingsHaveChanged": {
    "message": "Actualisez la page pour appliquer les changements apportés à un ou plusieurs paramètres."
  },
  "ui/legacy/components/quick_open/CommandMenu.ts | run": {
    "message": "Exécuter"
  },
  "ui/legacy/components/quick_open/FilteredListWidget.ts | noResultsFound": {
    "message": "Aucun résultat trouvé"
  },
  "ui/legacy/components/quick_open/FilteredListWidget.ts | quickOpen": {
    "message": "Ouverture rapide"
  },
  "ui/legacy/components/quick_open/FilteredListWidget.ts | quickOpenPrompt": {
    "message": "Invite d'ouverture rapide"
  },
  "ui/legacy/components/quick_open/FilteredListWidget.ts | sItemSOfS": {
    "message": "{PH1}, élément {PH2} sur {PH3}"
  },
  "ui/legacy/components/quick_open/QuickOpen.ts | typeToSeeAvailableCommands": {
    "message": "Tapez ? pour voir les commandes disponibles"
  },
  "ui/legacy/components/quick_open/quick_open-meta.ts | openFile": {
    "message": "Ouvrir le fichier"
  },
  "ui/legacy/components/quick_open/quick_open-meta.ts | runCommand": {
    "message": "Exécuter la commande"
  },
  "ui/legacy/components/source_frame/FontView.ts | font": {
    "message": "Police"
  },
  "ui/legacy/components/source_frame/FontView.ts | previewOfFontFromS": {
    "message": "Aperçu de la police depuis {PH1}"
  },
  "ui/legacy/components/source_frame/ImageView.ts | copyImageAsDataUri": {
    "message": "Copier l'image en tant qu'URI de données"
  },
  "ui/legacy/components/source_frame/ImageView.ts | copyImageUrl": {
    "message": "Copier l'URL de l'image"
  },
  "ui/legacy/components/source_frame/ImageView.ts | dD": {
    "message": "{PH1} × {PH2}"
  },
  "ui/legacy/components/source_frame/ImageView.ts | download": {
    "message": "télécharger"
  },
  "ui/legacy/components/source_frame/ImageView.ts | dropImageFileHere": {
    "message": "Déposer le fichier image ici"
  },
  "ui/legacy/components/source_frame/ImageView.ts | image": {
    "message": "Image"
  },
  "ui/legacy/components/source_frame/ImageView.ts | imageFromS": {
    "message": "Image issue de {PH1}"
  },
  "ui/legacy/components/source_frame/ImageView.ts | openImageInNewTab": {
    "message": "Ouvrir l'image dans un nouvel onglet"
  },
  "ui/legacy/components/source_frame/ImageView.ts | saveImageAs": {
    "message": "Enregistrer l'image sous…"
  },
  "ui/legacy/components/source_frame/JSONView.ts | find": {
    "message": "Rechercher"
  },
  "ui/legacy/components/source_frame/PreviewFactory.ts | nothingToPreview": {
    "message": "Aucun élément à prévisualiser"
  },
  "ui/legacy/components/source_frame/ResourceSourceFrame.ts | find": {
    "message": "Rechercher"
  },
  "ui/legacy/components/source_frame/SourceFrame.ts | allow": {
    "message": "Autoriser"
  },
  "ui/legacy/components/source_frame/SourceFrame.ts | allowPasting": {
    "message": "autoriser le collage"
  },
  "ui/legacy/components/source_frame/SourceFrame.ts | bytecodePositionXs": {
    "message": "Position du bytecode 0x{PH1}"
  },
  "ui/legacy/components/source_frame/SourceFrame.ts | cancel": {
    "message": "Annuler"
  },
  "ui/legacy/components/source_frame/SourceFrame.ts | dCharactersSelected": {
    "message": "{PH1} caractères sélectionnés"
  },
  "ui/legacy/components/source_frame/SourceFrame.ts | dLinesDCharactersSelected": {
    "message": "{PH1} lignes, {PH2} caractères sélectionnés"
  },
  "ui/legacy/components/source_frame/SourceFrame.ts | dSelectionRegions": {
    "message": "Régions sélectionnées : {PH1}"
  },
  "ui/legacy/components/source_frame/SourceFrame.ts | doNotPaste": {
    "message": "Ne collez pas de code que vous ne comprenez pas ou que vous n'avez pas examiné dans les outils de développement. Cela pourrait permettre à des pirates informatiques de voler votre identité ou de prendre le contrôle de votre ordinateur. Veuillez saisir \"{PH1}\" ci-dessous pour autoriser le collage."
  },
  "ui/legacy/components/source_frame/SourceFrame.ts | doYouTrustThisCode": {
    "message": "Faites-vous confiance à ce code ?"
  },
  "ui/legacy/components/source_frame/SourceFrame.ts | lineSColumnS": {
    "message": "Ligne {PH1}, colonne {PH2}"
  },
  "ui/legacy/components/source_frame/SourceFrame.ts | loading": {
    "message": "Chargement…"
  },
  "ui/legacy/components/source_frame/SourceFrame.ts | prettyPrint": {
    "message": "Impression élégante"
  },
  "ui/legacy/components/source_frame/SourceFrame.ts | source": {
    "message": "Source"
  },
  "ui/legacy/components/source_frame/SourceFrame.ts | typeAllowPasting": {
    "message": "Saisir ''{PH1}''"
  },
  "ui/legacy/components/source_frame/XMLView.ts | find": {
    "message": "Rechercher"
  },
  "ui/legacy/components/source_frame/source_frame-meta.ts | Spaces": {
    "message": "2 espaces"
  },
  "ui/legacy/components/source_frame/source_frame-meta.ts | defaultIndentation": {
    "message": "Retrait par défaut :"
  },
  "ui/legacy/components/source_frame/source_frame-meta.ts | eSpaces": {
    "message": "8 espaces"
  },
  "ui/legacy/components/source_frame/source_frame-meta.ts | fSpaces": {
    "message": "4 espaces"
  },
  "ui/legacy/components/source_frame/source_frame-meta.ts | setIndentationToESpaces": {
    "message": "Définir le retrait sur 8 espaces"
  },
  "ui/legacy/components/source_frame/source_frame-meta.ts | setIndentationToFSpaces": {
    "message": "Définir le retrait sur 4 espaces"
  },
  "ui/legacy/components/source_frame/source_frame-meta.ts | setIndentationToSpaces": {
    "message": "Définir le retrait sur 2 espaces"
  },
  "ui/legacy/components/source_frame/source_frame-meta.ts | setIndentationToTabCharacter": {
    "message": "Définir le retrait sur le caractère de tabulation"
  },
  "ui/legacy/components/source_frame/source_frame-meta.ts | tabCharacter": {
    "message": "Caractère de tabulation"
  },
  "ui/legacy/components/utils/ImagePreview.ts | currentSource": {
    "message": "Source actuelle :"
  },
  "ui/legacy/components/utils/ImagePreview.ts | fileSize": {
    "message": "Taille du fichier :"
  },
  "ui/legacy/components/utils/ImagePreview.ts | imageFromS": {
    "message": "Image issue de {PH1}"
  },
  "ui/legacy/components/utils/ImagePreview.ts | intrinsicAspectRatio": {
    "message": "Format intrinsèque :"
  },
  "ui/legacy/components/utils/ImagePreview.ts | intrinsicSize": {
    "message": "Taille intrinsèque :"
  },
  "ui/legacy/components/utils/ImagePreview.ts | renderedAspectRatio": {
    "message": "Format affiché :"
  },
  "ui/legacy/components/utils/ImagePreview.ts | renderedSize": {
    "message": "Taille affichée :"
  },
  "ui/legacy/components/utils/ImagePreview.ts | unknownSource": {
    "message": "source inconnue"
  },
  "ui/legacy/components/utils/JSPresentationUtils.ts | addToIgnore": {
    "message": "Ajouter un script à la liste des éléments à ignorer"
  },
  "ui/legacy/components/utils/JSPresentationUtils.ts | removeFromIgnore": {
    "message": "Supprimer de la liste des éléments à ignorer"
  },
  "ui/legacy/components/utils/JSPresentationUtils.ts | showLess": {
    "message": "Afficher moins"
  },
  "ui/legacy/components/utils/JSPresentationUtils.ts | showSMoreFrames": {
    "message": "{n,plural, =1{Afficher # autre frame}one{Afficher # autre frame}other{Afficher # autres frames}}"
  },
  "ui/legacy/components/utils/JSPresentationUtils.ts | unknownSource": {
    "message": "inconnu"
  },
  "ui/legacy/components/utils/Linkifier.ts | auto": {
    "message": "auto"
  },
  "ui/legacy/components/utils/Linkifier.ts | linkHandling": {
    "message": "Gestion des liens :"
  },
  "ui/legacy/components/utils/Linkifier.ts | openUsingS": {
    "message": "Ouvrir avec {PH1}"
  },
  "ui/legacy/components/utils/Linkifier.ts | reveal": {
    "message": "Afficher"
  },
  "ui/legacy/components/utils/Linkifier.ts | revealInS": {
    "message": "Afficher dans {PH1}"
  },
  "ui/legacy/components/utils/Linkifier.ts | unknown": {
    "message": "(inconnu)"
  },
  "ui/legacy/components/utils/TargetDetachedDialog.ts | websocketDisconnected": {
    "message": "WebSocket déconnecté"
  }
}
