{
  "core/common/ResourceType.ts | cspviolationreport": {
    "message": "CSPViolationReport"
  },
  "core/common/ResourceType.ts | css": {
    "message": "CSS"
  },
  "core/common/ResourceType.ts | doc": {
    "message": "ドキュメント"
  },
  "core/common/ResourceType.ts | document": {
    "message": "ドキュメント"
  },
  "core/common/ResourceType.ts | eventsource": {
    "message": "EventSource"
  },
  "core/common/ResourceType.ts | fetch": {
    "message": "フェッチ"
  },
  "core/common/ResourceType.ts | fetchAndXHR": {
    "message": "Fetch、XHR"
  },
  "core/common/ResourceType.ts | font": {
    "message": "フォント"
  },
  "core/common/ResourceType.ts | image": {
    "message": "画像"
  },
  "core/common/ResourceType.ts | img": {
    "message": "画像"
  },
  "core/common/ResourceType.ts | javascript": {
    "message": "JavaScript"
  },
  "core/common/ResourceType.ts | js": {
    "message": "JS"
  },
  "core/common/ResourceType.ts | manifest": {
    "message": "マニフェスト"
  },
  "core/common/ResourceType.ts | media": {
    "message": "メディア"
  },
  "core/common/ResourceType.ts | other": {
    "message": "その他"
  },
  "core/common/ResourceType.ts | ping": {
    "message": "ping"
  },
  "core/common/ResourceType.ts | preflight": {
    "message": "プリフライト"
  },
  "core/common/ResourceType.ts | script": {
    "message": "スクリプト"
  },
  "core/common/ResourceType.ts | signedexchange": {
    "message": "SignedExchange"
  },
  "core/common/ResourceType.ts | stylesheet": {
    "message": "スタイルシート"
  },
  "core/common/ResourceType.ts | texttrack": {
    "message": "TextTrack"
  },
  "core/common/ResourceType.ts | wasm": {
    "message": "Wasm"
  },
  "core/common/ResourceType.ts | webassembly": {
    "message": "WebAssembly"
  },
  "core/common/ResourceType.ts | webbundle": {
    "message": "WebBundle"
  },
  "core/common/ResourceType.ts | websocket": {
    "message": "WebSocket"
  },
  "core/common/ResourceType.ts | webtransport": {
    "message": "WebTransport"
  },
  "core/common/ResourceType.ts | ws": {
    "message": "WS"
  },
  "core/common/Revealer.ts | applicationPanel": {
    "message": "アプリケーション パネル"
  },
  "core/common/Revealer.ts | changesDrawer": {
    "message": "変更ドロワー"
  },
  "core/common/Revealer.ts | elementsPanel": {
    "message": "[要素] パネル"
  },
  "core/common/Revealer.ts | issuesView": {
    "message": "問題を表示"
  },
  "core/common/Revealer.ts | memoryInspectorPanel": {
    "message": "Memory Inspector パネル"
  },
  "core/common/Revealer.ts | networkPanel": {
    "message": "ネットワーク パネル"
  },
  "core/common/Revealer.ts | sourcesPanel": {
    "message": "[ソース] パネル"
  },
  "core/common/Revealer.ts | stylesSidebar": {
    "message": "スタイル サイドバー"
  },
  "core/common/SettingRegistration.ts | adorner": {
    "message": "Adorner"
  },
  "core/common/SettingRegistration.ts | appearance": {
    "message": "デザイン"
  },
  "core/common/SettingRegistration.ts | console": {
    "message": "コンソール"
  },
  "core/common/SettingRegistration.ts | debugger": {
    "message": "デバッガ"
  },
  "core/common/SettingRegistration.ts | elements": {
    "message": "要素"
  },
  "core/common/SettingRegistration.ts | extension": {
    "message": "拡張機能"
  },
  "core/common/SettingRegistration.ts | global": {
    "message": "グローバル"
  },
  "core/common/SettingRegistration.ts | grid": {
    "message": "グリッド"
  },
  "core/common/SettingRegistration.ts | memory": {
    "message": "メモリ"
  },
  "core/common/SettingRegistration.ts | mobile": {
    "message": "モバイル"
  },
  "core/common/SettingRegistration.ts | network": {
    "message": "ネットワーク"
  },
  "core/common/SettingRegistration.ts | performance": {
    "message": "パフォーマンス"
  },
  "core/common/SettingRegistration.ts | persistence": {
    "message": "永続化"
  },
  "core/common/SettingRegistration.ts | rendering": {
    "message": "レンダリング"
  },
  "core/common/SettingRegistration.ts | sources": {
    "message": "ソース"
  },
  "core/common/SettingRegistration.ts | sync": {
    "message": "同期"
  },
  "core/host/InspectorFrontendHost.ts | devtoolsS": {
    "message": "DevTools - {PH1}"
  },
  "core/host/ResourceLoader.ts | cacheError": {
    "message": "キャッシュ エラー"
  },
  "core/host/ResourceLoader.ts | certificateError": {
    "message": "証明書エラー"
  },
  "core/host/ResourceLoader.ts | certificateManagerError": {
    "message": "証明書マネージャー エラー"
  },
  "core/host/ResourceLoader.ts | connectionError": {
    "message": "接続エラー"
  },
  "core/host/ResourceLoader.ts | decodingDataUrlFailed": {
    "message": "データ URL のデコードエラー"
  },
  "core/host/ResourceLoader.ts | dnsResolverError": {
    "message": "DNS リゾルバ エラー"
  },
  "core/host/ResourceLoader.ts | ftpError": {
    "message": "FTP エラー"
  },
  "core/host/ResourceLoader.ts | httpError": {
    "message": "HTTP エラー"
  },
  "core/host/ResourceLoader.ts | httpErrorStatusCodeSS": {
    "message": "HTTP エラー: ステータス コード {PH1}、{PH2}"
  },
  "core/host/ResourceLoader.ts | invalidUrl": {
    "message": "無効な URL"
  },
  "core/host/ResourceLoader.ts | signedExchangeError": {
    "message": "Signed Exchange エラー"
  },
  "core/host/ResourceLoader.ts | systemError": {
    "message": "システムエラー"
  },
  "core/host/ResourceLoader.ts | unknownError": {
    "message": "不明なエラー"
  },
  "core/i18n/time-utilities.ts | fdays": {
    "message": "{PH1}日"
  },
  "core/i18n/time-utilities.ts | fhrs": {
    "message": "{PH1}時間"
  },
  "core/i18n/time-utilities.ts | fmin": {
    "message": "{PH1}分"
  },
  "core/i18n/time-utilities.ts | fmms": {
    "message": "{PH1} μs"
  },
  "core/i18n/time-utilities.ts | fms": {
    "message": "{PH1} ミリ秒"
  },
  "core/i18n/time-utilities.ts | fs": {
    "message": "{PH1}秒"
  },
  "core/sdk/CPUProfilerModel.ts | profileD": {
    "message": "プロフィール {PH1}"
  },
  "core/sdk/CSSStyleSheetHeader.ts | couldNotFindTheOriginalStyle": {
    "message": "元のスタイルシートが見つかりませんでした。"
  },
  "core/sdk/CSSStyleSheetHeader.ts | thereWasAnErrorRetrievingThe": {
    "message": "ソーススタイルの取得中にエラーが発生しました。"
  },
  "core/sdk/ChildTargetManager.ts | main": {
    "message": "メイン"
  },
  "core/sdk/CompilerSourceMappingContentProvider.ts | couldNotLoadContentForSS": {
    "message": "{PH1} のコンテンツを読み込めませんでした（{PH2}）"
  },
  "core/sdk/ConsoleModel.ts | bfcacheNavigation": {
    "message": "{PH1} への移動がバックフォワード キャッシュから復元されました（https://web.dev/bfcache/ を参照）"
  },
  "core/sdk/ConsoleModel.ts | failedToSaveToTempVariable": {
    "message": "一時変数への保存に失敗しました。"
  },
  "core/sdk/ConsoleModel.ts | navigatedToS": {
    "message": "{PH1} に移動しました"
  },
  "core/sdk/ConsoleModel.ts | profileSFinished": {
    "message": "プロファイル「{PH1}」が終了しました。"
  },
  "core/sdk/ConsoleModel.ts | profileSStarted": {
    "message": "プロファイル「{PH1}」が開始しました。"
  },
  "core/sdk/DebuggerModel.ts | block": {
    "message": "ブロック"
  },
  "core/sdk/DebuggerModel.ts | catchBlock": {
    "message": "Catch ブロック"
  },
  "core/sdk/DebuggerModel.ts | closure": {
    "message": "クロージャ"
  },
  "core/sdk/DebuggerModel.ts | expression": {
    "message": "式"
  },
  "core/sdk/DebuggerModel.ts | global": {
    "message": "グローバル"
  },
  "core/sdk/DebuggerModel.ts | local": {
    "message": "ローカル"
  },
  "core/sdk/DebuggerModel.ts | module": {
    "message": "モジュール"
  },
  "core/sdk/DebuggerModel.ts | script": {
    "message": "スクリプト"
  },
  "core/sdk/DebuggerModel.ts | withBlock": {
    "message": "With ブロック"
  },
  "core/sdk/NetworkManager.ts | fastG": {
    "message": "高速 3G"
  },
  "core/sdk/NetworkManager.ts | noContentForPreflight": {
    "message": "プリフライト リクエストのコンテンツがありません"
  },
  "core/sdk/NetworkManager.ts | noContentForRedirect": {
    "message": "このリクエストはリダイレクトされたため、コンテンツはありません"
  },
  "core/sdk/NetworkManager.ts | noContentForWebSocket": {
    "message": "WebSocket のコンテンツは現在サポートされていません"
  },
  "core/sdk/NetworkManager.ts | noThrottling": {
    "message": "スロットリングなし"
  },
  "core/sdk/NetworkManager.ts | offline": {
    "message": "オフライン"
  },
  "core/sdk/NetworkManager.ts | requestWasBlockedByDevtoolsS": {
    "message": "リクエストは DevTools によってブロックされました（「{PH1}」）"
  },
  "core/sdk/NetworkManager.ts | sFailedLoadingSS": {
    "message": "{PH1} が {PH2} \"{PH3}\" の読み込みに失敗しました。"
  },
  "core/sdk/NetworkManager.ts | sFinishedLoadingSS": {
    "message": "{PH1} が {PH2} \"{PH3}\" の読み込みを終了しました。"
  },
  "core/sdk/NetworkManager.ts | slowG": {
    "message": "低速 3G"
  },
  "core/sdk/NetworkRequest.ts | anUnknownErrorWasEncounteredWhenTrying": {
    "message": "この Cookie を保存する際に不明なエラーが発生しました。"
  },
  "core/sdk/NetworkRequest.ts | binary": {
    "message": "（バイナリ）"
  },
  "core/sdk/NetworkRequest.ts | blockedReasonInvalidDomain": {
    "message": "Set-Cookie ヘッダーを介して Cookie の設定を試みましたが、Domain 属性が現在のホスト URL に関して無効だったため、ブロックされました。"
  },
  "core/sdk/NetworkRequest.ts | blockedReasonInvalidPrefix": {
    "message": "Set-Cookie ヘッダーを介して Cookie の設定を試みましたが、名前に「__Secure-」または「__Host-」接頭辞を使用しており、https://tools.ietf.org/html/draft-west-cookie-prefixes-05 で定義されているこれらの接頭辞を持つ Cookie に適用される追加ルールに違反していたため、ブロックされました。"
  },
  "core/sdk/NetworkRequest.ts | blockedReasonOverwriteSecure": {
    "message": "Set-Cookie ヘッダーを介して Cookie の設定を試みましたが、安全な接続を介して送信されず、Secure 属性を持つ Cookie を上書きしてしまうため、ブロックされました。"
  },
  "core/sdk/NetworkRequest.ts | blockedReasonSameSiteNoneInsecure": {
    "message": "Set-Cookie ヘッダーを介して Cookie の設定を試みましたが、「SameSite=None」属性は指定されていたものの「Secure」属性が指定されていなかったため、ブロックされました。「SameSite=None」を使用するには「Secure」属性が必要です。"
  },
  "core/sdk/NetworkRequest.ts | blockedReasonSameSiteStrictLax": {
    "message": "Set-Cookie ヘッダーを介して Cookie の設定を試みましたが、「{PH1}」属性は指定されていたものの、トップレベル ナビゲーションへのレスポンスではないクロスサイト レスポンスが送信元だったため、ブロックされました。"
  },
  "core/sdk/NetworkRequest.ts | blockedReasonSameSiteUnspecifiedTreatedAsLax": {
    "message": "この Set-Cookie ヘッダーは、「SameSite」属性を指定しておらず、デフォルトで「SameSite=Lax,」に設定されていましたが、トップレベル ナビゲーションへのレスポンスではないクロスサイト レスポンスが送信元だったため、ブロックされました。Set-Cookie には「SameSite=None」を設定し、クロスサイトでの使用を有効にしておく必要があります。"
  },
  "core/sdk/NetworkRequest.ts | blockedReasonSecureOnly": {
    "message": "Set-Cookie ヘッダーを介して Cookie の設定を試みましたが、「Secure」属性は指定されていたものの安全な接続を介して受信されなかったため、ブロックされました。"
  },
  "core/sdk/NetworkRequest.ts | domainMismatch": {
    "message": "この Cookie は、リクエスト URL のドメインが Cookie のドメインと完全に一致せず、リクエスト URL のドメインが Cookie の Domain 属性の値のサブドメインでもなかったため、ブロックされました。"
  },
  "core/sdk/NetworkRequest.ts | nameValuePairExceedsMaxSize": {
    "message": "この Cookie はサイズが大きすぎたため、ブロックされました。名前と値の合計サイズは、4096 文字以下にする必要があります。"
  },
  "core/sdk/NetworkRequest.ts | notOnPath": {
    "message": "この Cookie は、パスがリクエスト URL のパスと完全に一致しなかった、またはそのスーパーディレクトリではなかったため、ブロックされました。"
  },
  "core/sdk/NetworkRequest.ts | samePartyFromCrossPartyContext": {
    "message": "この Cookie は、「SameParty」属性がありましたが、リクエストがクロスパーティだったため、ブロックされました。リソースの URL のドメインと、リソースに含まれているフレーム / ドキュメントのドメインが、同じ First-Party Set 内の所有者でもメンバーでもないため、リクエストはクロスパーティと見なされました。"
  },
  "core/sdk/NetworkRequest.ts | sameSiteLax": {
    "message": "この Cookie は、「SameSite=Lax」属性があり、リクエストが別のサイトから行われ、トップレベル ナビゲーションで開始されなかったため、ブロックされました。"
  },
  "core/sdk/NetworkRequest.ts | sameSiteNoneInsecure": {
    "message": "この Cookie は、「SameSite=None」属性がありましたが、「Secure」としてマークされていなかったため、ブロックされました。SameSite 制限のない Cookie は「Secure」としてマークし、安全な接続を介して送信する必要があります。"
  },
  "core/sdk/NetworkRequest.ts | sameSiteStrict": {
    "message": "この Cookie は、「SameSite=Strict」属性があり、リクエストが別のサイトから行われたため、ブロックされました。これには、他のサイトで開始されたトップレベル ナビゲーションのリクエストなどが含まれます。"
  },
  "core/sdk/NetworkRequest.ts | sameSiteUnspecifiedTreatedAsLax": {
    "message": "この Cookie は保存時に「SameSite」属性を指定しておらず、デフォルトで「SameSite=Lax」に設定されていましたが、リクエストが別のサイトから行われ、トップレベル ナビゲーションで開始されなかったため、ブロックされました。この Cookie には「SameSite=None」を設定してクロスサイトでの使用を有効にする必要がありました。"
  },
  "core/sdk/NetworkRequest.ts | schemefulSameSiteLax": {
    "message": "この Cookie は、「SameSite=Lax」属性がありましたが、リクエストがクロスサイトで、トップレベル ナビゲーションで開始されたものではなかったため、ブロックされました。このリクエストは、URL のスキームが現在のサイトとは異なるため、クロスサイトと見なされます。"
  },
  "core/sdk/NetworkRequest.ts | schemefulSameSiteStrict": {
    "message": "この Cookie は、「SameSite=Strict」属性がありましたが、リクエストがクロスサイトだったため、ブロックされました。これには、他のサイトで開始されたトップレベル ナビゲーションのリクエストなどが含まれます。このリクエストは、URL のスキームが現在のサイトとは異なるため、クロスサイトと見なされます。"
  },
  "core/sdk/NetworkRequest.ts | schemefulSameSiteUnspecifiedTreatedAsLax": {
    "message": "この Cookie は保存時に「SameSite」属性を指定しなかったため、デフォルトで「SameSite=Lax\"」に設定されましたが、リクエストがクロスサイトで、トップレベル ナビゲーションで開始されなかったため、ブロックされました。このリクエストは、URL のスキームが現在のサイトとは異なるため、クロスサイトと見なされます。"
  },
  "core/sdk/NetworkRequest.ts | secureOnly": {
    "message": "この Cookie は、「Secure」属性がありましたが、接続が安全ではなかったため、ブロックされました。"
  },
  "core/sdk/NetworkRequest.ts | setcookieHeaderIsIgnoredIn": {
    "message": "Set-Cookie ヘッダーは URL: {PH1} からのレスポンスで無視されています。名前と値の合計サイズは、4096 文字以下にする必要があります。"
  },
  "core/sdk/NetworkRequest.ts | theSchemeOfThisConnectionIsNot": {
    "message": "この接続のスキームに Cookie の保存は許可されていません。"
  },
  "core/sdk/NetworkRequest.ts | thirdPartyPhaseout": {
    "message": "この Cookie は、サードパーティ Cookie の段階的廃止によりブロックされました。詳しくは、[問題] タブをご覧ください。"
  },
  "core/sdk/NetworkRequest.ts | thisSetcookieDidntSpecifyASamesite": {
    "message": "この Set-Cookie ヘッダーは、「SameSite」属性を指定しておらず、デフォルトで「SameSite=Lax\"」に設定されていましたが、トップレベル ナビゲーションへのレスポンスではないクロスサイト レスポンスが送信元だったため、ブロックされました。このレスポンスは、URL のスキームが現在のサイトとは異なるため、クロスサイトと見なされます。"
  },
  "core/sdk/NetworkRequest.ts | thisSetcookieHadADisallowedCharacter": {
    "message": "この Set-Cookie ヘッダーには、使用できない文字（禁止されている ASCII 制御文字、またはタブ文字（Cookie 名、値、属性名、属性値の中央にある場合））が含まれていました。"
  },
  "core/sdk/NetworkRequest.ts | thisSetcookieHadInvalidSyntax": {
    "message": "この Set-Cookie ヘッダーの構文が無効でした。"
  },
  "core/sdk/NetworkRequest.ts | thisSetcookieWasBlockedBecauseItHadTheSameparty": {
    "message": "Set-Cookie ヘッダーを介して Cookie の設定を試みましたが、「SameParty」属性は指定されていたもののリクエストがクロスパーティだったため、ブロックされました。リソースの URL のドメインと、リソースに含まれているフレーム / ドキュメントのドメインが、同じ First-Party Set 内の所有者でもメンバーでもないため、リクエストはクロスパーティと見なされました。"
  },
  "core/sdk/NetworkRequest.ts | thisSetcookieWasBlockedBecauseItHadTheSamepartyAttribute": {
    "message": "Set-Cookie ヘッダーを介して Cookie の設定を試みましたが、「SameParty」属性とともに他の競合する属性も指定されていたため、ブロックされました。「SameParty」属性を使用する Cookie には「Secure」属性も設定し、「SameSite=Strict」に制限しないことが Chrome で要求されています。"
  },
  "core/sdk/NetworkRequest.ts | thisSetcookieWasBlockedBecauseItHadTheSamesiteStrictLax": {
    "message": "Set-Cookie ヘッダーを介して Cookie の設定を試みましたが、「{PH1}」属性は指定されていたものの、トップレベル ナビゲーションへのレスポンスではないクロスサイト レスポンスが送信元だったため、ブロックされました。このレスポンスは、URL のスキームが現在のサイトとは異なるため、クロスサイトと見なされます。"
  },
  "core/sdk/NetworkRequest.ts | thisSetcookieWasBlockedBecauseTheNameValuePairExceedsMaxSize": {
    "message": "Set-Cookie ヘッダーを介して Cookie の設定を試みましたが、Cookie のサイズが大きすぎたためブロックされました。名前と値の合計サイズは、4096 文字以下にする必要があります。"
  },
  "core/sdk/NetworkRequest.ts | thisSetcookieWasBlockedDueThirdPartyPhaseout": {
    "message": "この Cookie の設定は、サードパーティ Cookie の段階的廃止によりブロックされました。詳しくは、[問題] タブをご覧ください。"
  },
  "core/sdk/NetworkRequest.ts | thisSetcookieWasBlockedDueToUser": {
    "message": "Set-Cookie ヘッダーを介して Cookie の設定を試みましたが、ユーザー設定によりブロックされました。"
  },
  "core/sdk/NetworkRequest.ts | unknownError": {
    "message": "この Cookie を保存する際に不明なエラーが発生しました。"
  },
  "core/sdk/NetworkRequest.ts | userPreferences": {
    "message": "この Cookie はユーザー設定のためにブロックされました。"
  },
  "core/sdk/OverlayModel.ts | pausedInDebugger": {
    "message": "デバッガ内で一時停止"
  },
  "core/sdk/PageResourceLoader.ts | loadCanceledDueToReloadOf": {
    "message": "検査ページの再読み込みのために読み込みがキャンセルされました"
  },
  "core/sdk/Script.ts | scriptRemovedOrDeleted": {
    "message": "スクリプトは削除されました。"
  },
  "core/sdk/Script.ts | unableToFetchScriptSource": {
    "message": "スクリプト ソースをフェッチできません。"
  },
  "core/sdk/ServerTiming.ts | deprecatedSyntaxFoundPleaseUse": {
    "message": "サポート終了の構文が見つかりました。<name>;dur=<duration>;desc=<description> を使用してください。"
  },
  "core/sdk/ServerTiming.ts | duplicateParameterSIgnored": {
    "message": "重複パラメータ「{PH1}」は無視されました。"
  },
  "core/sdk/ServerTiming.ts | extraneousTrailingCharacters": {
    "message": "末尾に余分な文字があります。"
  },
  "core/sdk/ServerTiming.ts | noValueFoundForParameterS": {
    "message": "パラメータ「{PH1}」の値がありません。"
  },
  "core/sdk/ServerTiming.ts | unableToParseSValueS": {
    "message": "「{PH1}」の値「{PH2}」を貼り付けられません。"
  },
  "core/sdk/ServerTiming.ts | unrecognizedParameterS": {
    "message": "パラメータ「{PH1}」が認識されませんでした。"
  },
  "core/sdk/ServiceWorkerCacheModel.ts | serviceworkercacheagentError": {
    "message": "キャッシュ内のキャッシュ項目 {PH1} の削除中に ServiceWorkerCacheAgent エラーが発生しました（{PH2}）"
  },
  "core/sdk/ServiceWorkerManager.ts | activated": {
    "message": "有効"
  },
  "core/sdk/ServiceWorkerManager.ts | activating": {
    "message": "有効化しています"
  },
  "core/sdk/ServiceWorkerManager.ts | installed": {
    "message": "インストール済み"
  },
  "core/sdk/ServiceWorkerManager.ts | installing": {
    "message": "インストールしています"
  },
  "core/sdk/ServiceWorkerManager.ts | new": {
    "message": "新規"
  },
  "core/sdk/ServiceWorkerManager.ts | redundant": {
    "message": "冗長"
  },
  "core/sdk/ServiceWorkerManager.ts | running": {
    "message": "実行中"
  },
  "core/sdk/ServiceWorkerManager.ts | sSS": {
    "message": "{PH1} #{PH2}（{PH3}）"
  },
  "core/sdk/ServiceWorkerManager.ts | starting": {
    "message": "開始中"
  },
  "core/sdk/ServiceWorkerManager.ts | stopped": {
    "message": "停止"
  },
  "core/sdk/ServiceWorkerManager.ts | stopping": {
    "message": "停止中"
  },
  "core/sdk/sdk-meta.ts | achromatopsia": {
    "message": "色覚異常（色の識別不可）"
  },
  "core/sdk/sdk-meta.ts | blurredVision": {
    "message": "かすみ目"
  },
  "core/sdk/sdk-meta.ts | captureAsyncStackTraces": {
    "message": "非同期スタック トレースをキャプチャ"
  },
  "core/sdk/sdk-meta.ts | deuteranopia": {
    "message": "2 型 2 色覚（緑色の識別不可）"
  },
  "core/sdk/sdk-meta.ts | disableAsyncStackTraces": {
    "message": "非同期スタック トレースを無効にする"
  },
  "core/sdk/sdk-meta.ts | disableAvifFormat": {
    "message": "AVIF 形式を無効にする"
  },
  "core/sdk/sdk-meta.ts | disableCache": {
    "message": "（DevTools が開いている間に）キャッシュを無効にする"
  },
  "core/sdk/sdk-meta.ts | disableJavascript": {
    "message": "JavaScript を無効にする"
  },
  "core/sdk/sdk-meta.ts | disableLocalFonts": {
    "message": "ローカル フォントを無効にする"
  },
  "core/sdk/sdk-meta.ts | disableNetworkRequestBlocking": {
    "message": "ネットワーク リクエストのブロックを無効にする"
  },
  "core/sdk/sdk-meta.ts | disableWebpFormat": {
    "message": "WebP 形式を無効にする"
  },
  "core/sdk/sdk-meta.ts | doNotCaptureAsyncStackTraces": {
    "message": "非同期のスタック トレースをキャプチャしない"
  },
  "core/sdk/sdk-meta.ts | doNotEmulateAFocusedPage": {
    "message": "フォーカスのあるページをエミュレートしない"
  },
  "core/sdk/sdk-meta.ts | doNotEmulateAnyVisionDeficiency": {
    "message": "色覚異常をエミュレートしない"
  },
  "core/sdk/sdk-meta.ts | doNotEmulateCss": {
    "message": "CSS {PH1} をエミュレートしない"
  },
  "core/sdk/sdk-meta.ts | doNotEmulateCssMediaType": {
    "message": "CSS メディアタイプをエミュレートしない"
  },
  "core/sdk/sdk-meta.ts | doNotExtendGridLines": {
    "message": "グリッド線を延長しない"
  },
  "core/sdk/sdk-meta.ts | doNotHighlightAdFrames": {
    "message": "広告のフレームをハイライト表示しない"
  },
  "core/sdk/sdk-meta.ts | doNotPauseOnExceptions": {
    "message": "例外で一時停止しない"
  },
  "core/sdk/sdk-meta.ts | doNotPreserveLogUponNavigation": {
    "message": "移動時にログを保持しない"
  },
  "core/sdk/sdk-meta.ts | doNotShowGridNamedAreas": {
    "message": "グリッド名前付き領域を表示しない"
  },
  "core/sdk/sdk-meta.ts | doNotShowGridTrackSizes": {
    "message": "グリッド トラック サイズを表示しない"
  },
  "core/sdk/sdk-meta.ts | doNotShowRulersOnHover": {
    "message": "カーソルを合わせたときに定規を表示しない"
  },
  "core/sdk/sdk-meta.ts | emulateAFocusedPage": {
    "message": "フォーカスのあるページをエミュレート"
  },
  "core/sdk/sdk-meta.ts | emulateAchromatopsia": {
    "message": "色覚異常（色の識別不可）をエミュレート"
  },
  "core/sdk/sdk-meta.ts | emulateAutoDarkMode": {
    "message": "自動ダークモードをエミュレートする"
  },
  "core/sdk/sdk-meta.ts | emulateBlurredVision": {
    "message": "かすみ目をエミュレート"
  },
  "core/sdk/sdk-meta.ts | emulateCss": {
    "message": "CSS {PH1} をエミュレートする"
  },
  "core/sdk/sdk-meta.ts | emulateCssMediaFeature": {
    "message": "CSS メディア特性 {PH1} をエミュレートする"
  },
  "core/sdk/sdk-meta.ts | emulateCssMediaType": {
    "message": "CSS メディアタイプをエミュレート"
  },
  "core/sdk/sdk-meta.ts | emulateCssPrintMediaType": {
    "message": "CSS 印刷メディアタイプをエミュレート"
  },
  "core/sdk/sdk-meta.ts | emulateCssScreenMediaType": {
    "message": "CSS スクリーン メディアタイプをエミュレート"
  },
  "core/sdk/sdk-meta.ts | emulateDeuteranopia": {
    "message": "2 型 2 色覚（緑色の識別不可）をエミュレート"
  },
  "core/sdk/sdk-meta.ts | emulateProtanopia": {
    "message": "1 型 2 色覚（赤色の識別不可）をエミュレート"
  },
  "core/sdk/sdk-meta.ts | emulateReducedContrast": {
    "message": "低コントラストをエミュレート"
  },
  "core/sdk/sdk-meta.ts | emulateTritanopia": {
    "message": "3 型 2 色覚（青色の識別不可）をエミュレート"
  },
  "core/sdk/sdk-meta.ts | emulateVisionDeficiencies": {
    "message": "色覚異常をエミュレート"
  },
  "core/sdk/sdk-meta.ts | enableAvifFormat": {
    "message": "AVIF 形式を有効にする"
  },
  "core/sdk/sdk-meta.ts | enableCache": {
    "message": "キャッシュを有効にする"
  },
  "core/sdk/sdk-meta.ts | enableJavascript": {
    "message": "JavaScript を有効にする"
  },
  "core/sdk/sdk-meta.ts | enableLocalFonts": {
    "message": "ローカル フォントを有効にする"
  },
  "core/sdk/sdk-meta.ts | enableNetworkRequestBlocking": {
    "message": "ネットワーク リクエストのブロックを有効にする"
  },
  "core/sdk/sdk-meta.ts | enableRemoteFileLoading": {
    "message": "DevTools がリモート ファイルパスからソースマップなどのリソースを読み込むことを許可します。セキュリティ上の理由により、デフォルトで無効になっています。"
  },
  "core/sdk/sdk-meta.ts | enableWebpFormat": {
    "message": "WebP 形式を有効にする"
  },
  "core/sdk/sdk-meta.ts | extendGridLines": {
    "message": "グリッド線を延長"
  },
  "core/sdk/sdk-meta.ts | hideCoreWebVitalsOverlay": {
    "message": "ウェブに関する主な指標のオーバーレイを非表示"
  },
  "core/sdk/sdk-meta.ts | hideFramesPerSecondFpsMeter": {
    "message": "フレーム/秒（FPS）メーターを非表示"
  },
  "core/sdk/sdk-meta.ts | hideLayerBorders": {
    "message": "レイヤの枠線を非表示"
  },
  "core/sdk/sdk-meta.ts | hideLayoutShiftRegions": {
    "message": "レイアウト シフト領域を非表示"
  },
  "core/sdk/sdk-meta.ts | hideLineLabels": {
    "message": "行ラベルを非表示"
  },
  "core/sdk/sdk-meta.ts | hidePaintFlashingRectangles": {
    "message": "ペイント点滅の矩形を非表示"
  },
  "core/sdk/sdk-meta.ts | hideScrollPerformanceBottlenecks": {
    "message": "スクロール パフォーマンスのボトルネックを非表示"
  },
  "core/sdk/sdk-meta.ts | highlightAdFrames": {
    "message": "広告フレームをハイライト表示"
  },
  "core/sdk/sdk-meta.ts | noEmulation": {
    "message": "エミュレーションなし"
  },
  "core/sdk/sdk-meta.ts | pauseOnExceptions": {
    "message": "例外で一時停止"
  },
  "core/sdk/sdk-meta.ts | preserveLogUponNavigation": {
    "message": "移動時にログを保持"
  },
  "core/sdk/sdk-meta.ts | print": {
    "message": "印刷"
  },
  "core/sdk/sdk-meta.ts | protanopia": {
    "message": "1 型 2 色覚（赤色の識別不可）"
  },
  "core/sdk/sdk-meta.ts | query": {
    "message": "クエリ"
  },
  "core/sdk/sdk-meta.ts | reducedContrast": {
    "message": "低コントラスト"
  },
  "core/sdk/sdk-meta.ts | screen": {
    "message": "スクリーン"
  },
  "core/sdk/sdk-meta.ts | showAreaNames": {
    "message": "領域名を表示"
  },
  "core/sdk/sdk-meta.ts | showCoreWebVitalsOverlay": {
    "message": "ウェブに関する主な指標のオーバーレイを表示"
  },
  "core/sdk/sdk-meta.ts | showFramesPerSecondFpsMeter": {
    "message": "フレーム/秒（FPS）メーターを表示"
  },
  "core/sdk/sdk-meta.ts | showGridNamedAreas": {
    "message": "グリッド名前付き領域を表示"
  },
  "core/sdk/sdk-meta.ts | showGridTrackSizes": {
    "message": "グリッド トラック サイズを表示"
  },
  "core/sdk/sdk-meta.ts | showLayerBorders": {
    "message": "レイヤの枠線を表示"
  },
  "core/sdk/sdk-meta.ts | showLayoutShiftRegions": {
    "message": "レイアウト シフト領域を表示"
  },
  "core/sdk/sdk-meta.ts | showLineLabels": {
    "message": "行ラベルを表示"
  },
  "core/sdk/sdk-meta.ts | showLineNames": {
    "message": "行名を表示"
  },
  "core/sdk/sdk-meta.ts | showLineNumbers": {
    "message": "行番号を表示"
  },
  "core/sdk/sdk-meta.ts | showPaintFlashingRectangles": {
    "message": "ペイント点滅の矩形を表示"
  },
  "core/sdk/sdk-meta.ts | showRulersOnHover": {
    "message": "カーソルを合わせたときに定規を表示する"
  },
  "core/sdk/sdk-meta.ts | showScrollPerformanceBottlenecks": {
    "message": "スクロール パフォーマンスのボトルネックを表示"
  },
  "core/sdk/sdk-meta.ts | showTrackSizes": {
    "message": "トラックサイズを表示"
  },
  "core/sdk/sdk-meta.ts | tritanopia": {
    "message": "3 型 2 色覚（青色の識別不可）"
  },
  "entrypoints/inspector_main/InspectorMain.ts | javascriptIsDisabled": {
    "message": "JavaScript が無効です"
  },
  "entrypoints/inspector_main/InspectorMain.ts | main": {
    "message": "メイン"
  },
  "entrypoints/inspector_main/InspectorMain.ts | openDedicatedTools": {
    "message": "Node.js 専用の DevTools を開く"
  },
  "entrypoints/inspector_main/InspectorMain.ts | tab": {
    "message": "タブ"
  },
  "entrypoints/inspector_main/OutermostTargetSelector.ts | targetNotSelected": {
    "message": "ページ: 未選択"
  },
  "entrypoints/inspector_main/OutermostTargetSelector.ts | targetS": {
    "message": "ページ: {PH1}"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | coreWebVitals": {
    "message": "ウェブに関する主な指標"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | disableAvifImageFormat": {
    "message": "AVIF 画像形式を無効にする"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | disableLocalFonts": {
    "message": "ローカル フォントを無効にする"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | disableWebpImageFormat": {
    "message": "WebP 画像形式を無効にする"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | disablesLocalSourcesInFontface": {
    "message": "@font-face ルール内の local() ソースを無効にします。ページ再読み込みを適用する必要があります。"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | emulateAFocusedPage": {
    "message": "フォーカスのあるページをエミュレートする"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | emulateAutoDarkMode": {
    "message": "自動ダークモードを有効にする"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | emulatesAFocusedPage": {
    "message": "フォーカスのあるページをエミュレートします。"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | emulatesAutoDarkMode": {
    "message": "自動ダークモードを有効にして、prefers-color-scheme を dark に設定します。"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | forcesCssColorgamutMediaFeature": {
    "message": "CSS color-gamut メディア特性を強制します"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | forcesCssForcedColors": {
    "message": "CSS 強制色のメディア機能を自動適用します"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | forcesCssPreferscolorschemeMedia": {
    "message": "CSS prefers-color-scheme メディア特性を強制します"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | forcesCssPreferscontrastMedia": {
    "message": "CSS prefers-contrast メディア特性を強制します"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | forcesCssPrefersreduceddataMedia": {
    "message": "CSS prefers-reduced-data メディア特性を強制します"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | forcesCssPrefersreducedmotion": {
    "message": "CSS prefers-reduced-motion メディア特性を強制します"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | forcesCssPrefersreducedtransparencyMedia": {
    "message": "CSS prefers-reduced-transparency メディア特性を強制します"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | forcesMediaTypeForTestingPrint": {
    "message": "印刷スタイルとスクリーン スタイルのテストでメディアタイプを強制します"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | forcesVisionDeficiencyEmulation": {
    "message": "色覚異常のエミュレーションを強制します"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | frameRenderingStats": {
    "message": "フレーム レンダリング統計情報"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | highlightAdFrames": {
    "message": "広告フレームをハイライト表示する"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | highlightsAreasOfThePageBlueThat": {
    "message": "シフトされたページの領域（青）をハイライト表示します。光過敏性てんかんを起こしやすいユーザーには適さない可能性があります。"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | highlightsAreasOfThePageGreen": {
    "message": "再ペイントする必要があるページの領域（緑）をハイライト表示します。光過敏性てんかんを起こしやすいユーザーには適さない可能性があります。"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | highlightsElementsTealThatCan": {
    "message": "タップ イベント ハンドラ、ホイール イベント ハンドラや、その他のメインスレッドのスクロール状況など、スクロール操作が低速になる可能性がある要素（青緑）をハイライト表示します。"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | highlightsFramesRedDetectedToBe": {
    "message": "広告として検出されたフレーム（赤）をハイライト表示します。"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | layerBorders": {
    "message": "レイヤの枠線"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | layoutShiftRegions": {
    "message": "レイアウト シフト領域"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | paintFlashing": {
    "message": "ペイント点滅"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | plotsFrameThroughputDropped": {
    "message": "フレーム スループット、フレーム落ちの分布、GPU メモリをプロットします。"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | requiresAPageReloadToApplyAnd": {
    "message": "ページ再読み込みを適用する必要があり、画像リクエストに対しキャッシュを無効にします。"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | scrollingPerformanceIssues": {
    "message": "スクロールのパフォーマンスの問題"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | showsAnOverlayWithCoreWebVitals": {
    "message": "ウェブに関する主な指標でオーバーレイを表示します。"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | showsLayerBordersOrangeoliveAnd": {
    "message": "レイヤの枠線（オレンジ / オリーブ）とタイル（シアン）を表示します。"
  },
  "entrypoints/inspector_main/inspector_main-meta.ts | autoOpenDevTools": {
    "message": "DevTools をポップアップで自動オープン"
  },
  "entrypoints/inspector_main/inspector_main-meta.ts | blockAds": {
    "message": "このサイト上の広告をブロック"
  },
  "entrypoints/inspector_main/inspector_main-meta.ts | colorVisionDeficiency": {
    "message": "色覚異常"
  },
  "entrypoints/inspector_main/inspector_main-meta.ts | cssMediaFeature": {
    "message": "CSS メディア特性"
  },
  "entrypoints/inspector_main/inspector_main-meta.ts | cssMediaType": {
    "message": "CSS メディアタイプ"
  },
  "entrypoints/inspector_main/inspector_main-meta.ts | disablePaused": {
    "message": "一時停止状態のオーバーレイを無効にする"
  },
  "entrypoints/inspector_main/inspector_main-meta.ts | doNotAutoOpen": {
    "message": "DevTools をポップアップで自動オープンしない"
  },
  "entrypoints/inspector_main/inspector_main-meta.ts | forceAdBlocking": {
    "message": "このサイトで広告ブロックを強制"
  },
  "entrypoints/inspector_main/inspector_main-meta.ts | fps": {
    "message": "FPS"
  },
  "entrypoints/inspector_main/inspector_main-meta.ts | hardReloadPage": {
    "message": "ページをハード再読み込み"
  },
  "entrypoints/inspector_main/inspector_main-meta.ts | layout": {
    "message": "レイアウト"
  },
  "entrypoints/inspector_main/inspector_main-meta.ts | paint": {
    "message": "ペイント"
  },
  "entrypoints/inspector_main/inspector_main-meta.ts | reloadPage": {
    "message": "ページを再読み込み"
  },
  "entrypoints/inspector_main/inspector_main-meta.ts | rendering": {
    "message": "レンダリング"
  },
  "entrypoints/inspector_main/inspector_main-meta.ts | showAds": {
    "message": "このサイトに広告を表示（許可されている場合）"
  },
  "entrypoints/inspector_main/inspector_main-meta.ts | showRendering": {
    "message": "レンダリングを表示"
  },
  "entrypoints/inspector_main/inspector_main-meta.ts | toggleCssPrefersColorSchemeMedia": {
    "message": "CSS メディア特性 prefers-color-scheme をトグル"
  },
  "entrypoints/inspector_main/inspector_main-meta.ts | visionDeficiency": {
    "message": "色覚異常"
  },
  "entrypoints/js_app/js_app.ts | main": {
    "message": "メイン"
  },
  "entrypoints/main/MainImpl.ts | customizeAndControlDevtools": {
    "message": "DevTools のカスタマイズと管理"
  },
  "entrypoints/main/MainImpl.ts | dockSide": {
    "message": "固定サイド"
  },
  "entrypoints/main/MainImpl.ts | dockSideNaviation": {
    "message": "オプション間を移動するには左右の矢印キーを使用します"
  },
  "entrypoints/main/MainImpl.ts | dockToBottom": {
    "message": "下部に固定"
  },
  "entrypoints/main/MainImpl.ts | dockToLeft": {
    "message": "左に固定"
  },
  "entrypoints/main/MainImpl.ts | dockToRight": {
    "message": "右に固定"
  },
  "entrypoints/main/MainImpl.ts | focusDebuggee": {
    "message": "ページにフォーカス"
  },
  "entrypoints/main/MainImpl.ts | help": {
    "message": "ヘルプ"
  },
  "entrypoints/main/MainImpl.ts | hideConsoleDrawer": {
    "message": "コンソール ドロワーを非表示"
  },
  "entrypoints/main/MainImpl.ts | moreTools": {
    "message": "その他のツール"
  },
  "entrypoints/main/MainImpl.ts | placementOfDevtoolsRelativeToThe": {
    "message": "このページを基準とする DevTools の配置です（{PH1} で前回の位置が復元されます）。"
  },
  "entrypoints/main/MainImpl.ts | showConsoleDrawer": {
    "message": "コンソール ドロワーを表示"
  },
  "entrypoints/main/MainImpl.ts | undockIntoSeparateWindow": {
    "message": "固定を解除して別ウィンドウに表示"
  },
  "entrypoints/main/main-meta.ts | auto": {
    "message": "自動"
  },
  "entrypoints/main/main-meta.ts | bottom": {
    "message": "下部"
  },
  "entrypoints/main/main-meta.ts | browserLanguage": {
    "message": "ブラウザの UI 言語"
  },
  "entrypoints/main/main-meta.ts | cancelSearch": {
    "message": "検索をキャンセル"
  },
  "entrypoints/main/main-meta.ts | darkCapital": {
    "message": "ダーク"
  },
  "entrypoints/main/main-meta.ts | darkLower": {
    "message": "ダーク"
  },
  "entrypoints/main/main-meta.ts | devtoolsDefault": {
    "message": "DevTools（デフォルト）"
  },
  "entrypoints/main/main-meta.ts | dockToBottom": {
    "message": "下部に固定"
  },
  "entrypoints/main/main-meta.ts | dockToLeft": {
    "message": "左に固定"
  },
  "entrypoints/main/main-meta.ts | dockToRight": {
    "message": "右に固定"
  },
  "entrypoints/main/main-meta.ts | enableCtrlShortcutToSwitchPanels": {
    "message": "パネルの切り替えに Ctrl+1～9 のショートカットを有効にする"
  },
  "entrypoints/main/main-meta.ts | enableShortcutToSwitchPanels": {
    "message": "パネルの切り替えに ⌘+1～9 のショートカットを有効にする"
  },
  "entrypoints/main/main-meta.ts | enableSync": {
    "message": "設定の同期を有効にする"
  },
  "entrypoints/main/main-meta.ts | findNextResult": {
    "message": "次の結果を探す"
  },
  "entrypoints/main/main-meta.ts | findPreviousResult": {
    "message": "前の検索結果を探す"
  },
  "entrypoints/main/main-meta.ts | focusDebuggee": {
    "message": "ページにフォーカス"
  },
  "entrypoints/main/main-meta.ts | horizontal": {
    "message": "水平方向"
  },
  "entrypoints/main/main-meta.ts | language": {
    "message": "言語:"
  },
  "entrypoints/main/main-meta.ts | left": {
    "message": "左"
  },
  "entrypoints/main/main-meta.ts | lightCapital": {
    "message": "ライト"
  },
  "entrypoints/main/main-meta.ts | lightLower": {
    "message": "ライト"
  },
  "entrypoints/main/main-meta.ts | nextPanel": {
    "message": "次のパネル"
  },
  "entrypoints/main/main-meta.ts | panelLayout": {
    "message": "パネル レイアウト:"
  },
  "entrypoints/main/main-meta.ts | previousPanel": {
    "message": "前のパネル"
  },
  "entrypoints/main/main-meta.ts | reloadDevtools": {
    "message": "DevTools を再読み込み"
  },
  "entrypoints/main/main-meta.ts | resetZoomLevel": {
    "message": "ズームレベルをリセット"
  },
  "entrypoints/main/main-meta.ts | restoreLastDockPosition": {
    "message": "前回の固定位置を復元"
  },
  "entrypoints/main/main-meta.ts | right": {
    "message": "右"
  },
  "entrypoints/main/main-meta.ts | searchAsYouTypeCommand": {
    "message": "入力逐次検索を有効にする"
  },
  "entrypoints/main/main-meta.ts | searchAsYouTypeSetting": {
    "message": "入力逐次検索"
  },
  "entrypoints/main/main-meta.ts | searchInPanel": {
    "message": "パネル内で検索"
  },
  "entrypoints/main/main-meta.ts | searchOnEnterCommand": {
    "message": "入力逐次検索を無効にする（Enter キーを押して検索）"
  },
  "entrypoints/main/main-meta.ts | switchToDarkTheme": {
    "message": "ダークモードに切り替え"
  },
  "entrypoints/main/main-meta.ts | switchToLightTheme": {
    "message": "ライトモードに切り替え"
  },
  "entrypoints/main/main-meta.ts | switchToSystemPreferredColor": {
    "message": "システムの優先色テーマに切り替え"
  },
  "entrypoints/main/main-meta.ts | systemPreference": {
    "message": "システム設定"
  },
  "entrypoints/main/main-meta.ts | theme": {
    "message": "テーマ:"
  },
  "entrypoints/main/main-meta.ts | toggleDrawer": {
    "message": "ドロワーを切り替え"
  },
  "entrypoints/main/main-meta.ts | undockIntoSeparateWindow": {
    "message": "固定を解除して別ウィンドウに表示"
  },
  "entrypoints/main/main-meta.ts | undocked": {
    "message": "固定を解除"
  },
  "entrypoints/main/main-meta.ts | useAutomaticPanelLayout": {
    "message": "自動パネル レイアウトを使用"
  },
  "entrypoints/main/main-meta.ts | useHorizontalPanelLayout": {
    "message": "水平方向のパネル レイアウトを使用"
  },
  "entrypoints/main/main-meta.ts | useVerticalPanelLayout": {
    "message": "垂直方向のパネル レイアウトを使用"
  },
  "entrypoints/main/main-meta.ts | vertical": {
    "message": "垂直方法"
  },
  "entrypoints/main/main-meta.ts | zoomIn": {
    "message": "拡大"
  },
  "entrypoints/main/main-meta.ts | zoomOut": {
    "message": "縮小"
  },
  "entrypoints/node_app/NodeConnectionsPanel.ts | addConnection": {
    "message": "接続を追加"
  },
  "entrypoints/node_app/NodeConnectionsPanel.ts | networkAddressEgLocalhost": {
    "message": "ネットワーク アドレス（例: localhost:9229）"
  },
  "entrypoints/node_app/NodeConnectionsPanel.ts | noConnectionsSpecified": {
    "message": "接続が指定されていません"
  },
  "entrypoints/node_app/NodeConnectionsPanel.ts | nodejsDebuggingGuide": {
    "message": "Node.js デバッグガイド"
  },
  "entrypoints/node_app/NodeConnectionsPanel.ts | specifyNetworkEndpointAnd": {
    "message": "ネットワーク エンドポイントを指定すると、DevTools が自動的に接続されます。詳しくは {PH1} をご覧ください。"
  },
  "entrypoints/node_app/NodeMain.ts | main": {
    "message": "メイン"
  },
  "entrypoints/node_app/NodeMain.ts | nodejsS": {
    "message": "Node.js: {PH1}"
  },
  "entrypoints/node_app/node_app.ts | connection": {
    "message": "接続"
  },
  "entrypoints/node_app/node_app.ts | networkTitle": {
    "message": "ノード"
  },
  "entrypoints/node_app/node_app.ts | node": {
    "message": "ノード"
  },
  "entrypoints/node_app/node_app.ts | showConnection": {
    "message": "接続を表示"
  },
  "entrypoints/node_app/node_app.ts | showNode": {
    "message": "ノードを表示"
  },
  "entrypoints/worker_app/WorkerMain.ts | main": {
    "message": "メイン"
  },
  "generated/Deprecation.ts | AuthorizationCoveredByWildcard": {
    "message": "CORS の Access-Control-Allow-Headers の処理では、Authorization はワイルドカード記号（*）で表されなくなります。"
  },
  "generated/Deprecation.ts | CSSSelectorInternalMediaControlsOverlayCastButton": {
    "message": "デフォルトの Cast の統合を無効にするには、-internal-media-controls-overlay-cast-button セレクタではなく disableRemotePlayback 属性を使用する必要があります。"
  },
  "generated/Deprecation.ts | CSSValueAppearanceNonStandard": {
    "message": "CSS の appearance 値 inner-spin-button、media-slider、media-sliderthumb、media-volume-slider、media-volume-sliderthumb、push-button、searchfield-cancel-button、slider-horizontal、sliderthumb-horizontal、sliderthumb-vertical、square-button は標準化されておらず、削除される予定です。"
  },
  "generated/Deprecation.ts | CSSValueAppearanceSliderVertical": {
    "message": "CSS の appearance 値 slider-vertical は標準化されておらず、削除される予定です。"
  },
  "generated/Deprecation.ts | CanRequestURLHTTPContainingNewline": {
    "message": "URL に削除された空白文字（\\(n|r|t)）と未満文字（<）が含まれるリソース リクエストはブロックされます。これらのリソースを読み込むには、要素の属性値などの場所にある改行を削除し、未満文字をエンコードしてください。"
  },
  "generated/Deprecation.ts | ChromeLoadTimesConnectionInfo": {
    "message": "chrome.loadTimes() は非推奨となっています。代わりに標準化 API の Navigation Timing 2 を使用してください。"
  },
  "generated/Deprecation.ts | ChromeLoadTimesFirstPaintAfterLoadTime": {
    "message": "chrome.loadTimes() は非推奨となっています。代わりに標準化 API の Paint Timing を使用してください。"
  },
  "generated/Deprecation.ts | ChromeLoadTimesWasAlternateProtocolAvailable": {
    "message": "chrome.loadTimes() は非推奨となっています。代わりに標準化 API である Navigation Timing 2 の nextHopProtocol を使用してください。"
  },
  "generated/Deprecation.ts | CookieWithTruncatingChar": {
    "message": "\\(0|r|n) 文字が含まれる Cookie は、切り捨てではなく拒否されます。"
  },
  "generated/Deprecation.ts | CrossOriginAccessBasedOnDocumentDomain": {
    "message": "document.domain の設定による同一オリジン ポリシーの緩和は非推奨であり、デフォルトで無効になる予定です。この非推奨の警告は、document.domain の設定により有効にしたクロスオリジンのアクセスに対して行われます。"
  },
  "generated/Deprecation.ts | CrossOriginWindowAlert": {
    "message": "クロスオリジンの iframe から window.alert をトリガーすることは非推奨であり、今後削除される予定です。"
  },
  "generated/Deprecation.ts | CrossOriginWindowConfirm": {
    "message": "クロスオリジンの iframe から window.confirm をトリガーすることは非推奨であり、今後削除される予定です。"
  },
  "generated/Deprecation.ts | DOMMutationEvents": {
    "message": "DOMSubtreeModified、DOMNodeInserted、DOMNodeRemoved、DOMNodeRemovedFromDocument、DOMNodeInsertedIntoDocument、DOMCharacterDataModified を含む DOM ミューテーション イベントは非推奨となり（https://w3c.github.io/uievents/#legacy-event-types）、削除される予定です。代わりに MutationObserver を使用してください。"
  },
  "generated/Deprecation.ts | DataUrlInSvgUse": {
    "message": "データのサポート: SVGUseElement の URL は非推奨となり、今後削除される予定です。"
  },
  "generated/Deprecation.ts | DocumentDomainSettingWithoutOriginAgentClusterHeader": {
    "message": "document.domain の設定による同一オリジン ポリシーの緩和は非推奨であり、デフォルトで無効になる予定です。引き続きこの機能を使用するには、オリジンキー エージェント クラスタを無効にしてください。これには、ドキュメントとフレームの HTTP レスポンスとともに Origin-Agent-Cluster: ?0 ヘッダーを送信します。詳しくは、https://developer.chrome.com/blog/immutable-document-domain/ をご覧ください。"
  },
  "generated/Deprecation.ts | GeolocationInsecureOrigin": {
    "message": "getCurrentPosition() と watchPosition() は、保護されていないオリジンでは使用できなくなりました。この機能を使用する場合は、アプリケーションを安全なオリジン（HTTPS など）に切り替えることを検討してください。詳しくは、https://goo.gle/chrome-insecure-origins をご覧ください。"
  },
  "generated/Deprecation.ts | GeolocationInsecureOriginDeprecatedNotRemoved": {
    "message": "getCurrentPosition() と watchPosition() は、保護されていないオリジンでは非推奨となっています。この機能を使用する場合は、アプリケーションを安全なオリジン（HTTPS など）に切り替えることを検討してください。詳しくは、https://goo.gle/chrome-insecure-origins をご覧ください。"
  },
  "generated/Deprecation.ts | GetUserMediaInsecureOrigin": {
    "message": "getUserMedia() は、保護されていないオリジンでは使用できなくなりました。この機能を使用する場合は、アプリケーションを安全なオリジン（HTTPS など）に切り替えることを検討してください。詳しくは、https://goo.gle/chrome-insecure-origins をご覧ください。"
  },
  "generated/Deprecation.ts | HostCandidateAttributeGetter": {
    "message": "RTCPeerConnectionIceErrorEvent.hostCandidate のサポートは終了しました。代わりに RTCPeerConnectionIceErrorEvent.address または RTCPeerConnectionIceErrorEvent.port を使用してください。"
  },
  "generated/Deprecation.ts | IdentityInCanMakePaymentEvent": {
    "message": "canmakepayment　Service Worker イベントの、次の販売者のオリジンと任意のデータのサポートは終了し、削除される予定です。topOrigin、paymentRequestOrigin、methodData、modifiers。"
  },
  "generated/Deprecation.ts | InsecurePrivateNetworkSubresourceRequest": {
    "message": "ウェブサイトが、ネットワークで特権を持つユーザーのみアクセス可能な、ネットワークのサブリソースをリクエストしました。これらのリクエストにより、非公開のデバイスやサーバーがインターネット上で参照できるようになるため、クロスサイト リクエスト フォージェリ（CSRF）攻撃や情報漏洩のリスクが高まります。これらのリスクを軽減するため、Chrome では、保護されていないコンテキストからの非公開サブリソースへのリクエストは非推奨となっており、今後ブロックされるようになる予定です。"
  },
  "generated/Deprecation.ts | InterestGroupDailyUpdateUrl": {
    "message": "動作を正確に反映させるため、joinAdInterestGroup() に渡される InterestGroups の dailyUpdateUrl フィールドの名前を updateUrl に変更しました。"
  },
  "generated/Deprecation.ts | LocalCSSFileExtensionRejected": {
    "message": "末尾が .css ファイル拡張子ではない CSS を、file: の URL から読み込むことはできません。"
  },
  "generated/Deprecation.ts | MediaSourceAbortRemove": {
    "message": "remove() の非同期の範囲の削除を中止するための SourceBuffer.abort() の使用は、仕様変更により非推奨となっており、今後サポートされなくなります。代わりに updateend イベントをリッスンします。なお、abort() については、非同期メディアの追加の中止と、パーサーの状態のリセットのみを行います。"
  },
  "generated/Deprecation.ts | MediaSourceDurationTruncatingBuffered": {
    "message": "バッファ済みコードフレームの最も高いプレゼンテーション タイムスタンプを下回る MediaSource.duration の設定は、仕様変更により非推奨となりました。切り捨てられたバッファ済みメディアの暗黙的な削除は、今後サポートされなくなります。代わりに、すべての sourceBuffers で明示的に remove(newDuration, oldDuration) を実行してください。このとき、newDuration < oldDuration となるよう指定してください。"
  },
  "generated/Deprecation.ts | NoSysexWebMIDIWithoutPermission": {
    "message": "Web MIDI は、MIDIOptions で SysEx が指定されていない場合でも使用許可を要求します。"
  },
  "generated/Deprecation.ts | NotificationInsecureOrigin": {
    "message": "通知 API は保護されていないオリジンから使用できなくなっている可能性があります。アプリケーションを安全なオリジン（HTTPS など）に切り替えることを検討してください。詳しくは、https://goo.gle/chrome-insecure-origins をご覧ください。"
  },
  "generated/Deprecation.ts | NotificationPermissionRequestedIframe": {
    "message": "通知 API の権限は、クロスオリジンの iframe からリクエストできなくなっている可能性があります。最上位フレームからの権限をリクエストするか、代わりに新しいウィンドウを開くことを検討してください。"
  },
  "generated/Deprecation.ts | ObsoleteCreateImageBitmapImageOrientationNone": {
    "message": "createImageBitmap の imageOrientation: 'none' オプションは非推奨になりました。createImageBitmap を使用する際は、代わりに {imageOrientation: 'from-image'} オプションを使用してください。"
  },
  "generated/Deprecation.ts | ObsoleteWebRtcCipherSuite": {
    "message": "パートナーは古い（D）TLS バージョンの交渉を行っています。パートナーに確認してこれを修正してもらってください。"
  },
  "generated/Deprecation.ts | OverflowVisibleOnReplacedElement": {
    "message": "img タグ、video タグ、canvas タグに overflow: visible を指定すると、要素の境界外にビジュアル コンテンツが作成される場合があります。https://github.com/WICG/shared-element-transitions/blob/main/debugging_overflow_on_images.md をご覧ください。"
  },
  "generated/Deprecation.ts | PaymentInstruments": {
    "message": "paymentManager.instruments は非推奨になりました。支払いハンドラには、代わりに JIT インストールを使用してください。"
  },
  "generated/Deprecation.ts | PaymentRequestCSPViolation": {
    "message": "PaymentRequest 呼び出しが Content-Security-Policy（CSP）connect-src ディレクティブをバイパスしました。このバイパスは非推奨となっています。PaymentRequest API（supportedMethods フィールド）のお支払い方法 ID を CSP の connect-src ディレクティブに追加してください。"
  },
  "generated/Deprecation.ts | PersistentQuotaType": {
    "message": "StorageType.persistent のサポートは終了しました。代わりに、標準化された navigator.storage を使用してください。"
  },
  "generated/Deprecation.ts | PictureSourceSrc": {
    "message": "<source src> で <picture> 親要素を使用すると無効となり、無視されます。代わりに <source srcset> を使用してください。"
  },
  "generated/Deprecation.ts | PrefixedCancelAnimationFrame": {
    "message": "webkitCancelAnimationFrame はベンダー固有です。代わりに標準の cancelAnimationFrame を使用してください。"
  },
  "generated/Deprecation.ts | PrefixedRequestAnimationFrame": {
    "message": "webkitRequestAnimationFrame はベンダー固有です。代わりに標準の requestAnimationFrame を使用してください。"
  },
  "generated/Deprecation.ts | PrefixedVideoDisplayingFullscreen": {
    "message": "HTMLVideoElement.webkitDisplayingFullscreen は非推奨になりました。代わりに Document.fullscreenElement を使用してください。"
  },
  "generated/Deprecation.ts | PrefixedVideoEnterFullScreen": {
    "message": "HTMLVideoElement.webkitEnterFullScreen() は非推奨になりました。代わりに Element.requestFullscreen() を使用してください。"
  },
  "generated/Deprecation.ts | PrefixedVideoEnterFullscreen": {
    "message": "HTMLVideoElement.webkitEnterFullscreen() は非推奨になりました。代わりに Element.requestFullscreen() を使用してください。"
  },
  "generated/Deprecation.ts | PrefixedVideoExitFullScreen": {
    "message": "HTMLVideoElement.webkitExitFullScreen() は非推奨になりました。代わりに Document.exitFullscreen() を使用してください。"
  },
  "generated/Deprecation.ts | PrefixedVideoExitFullscreen": {
    "message": "HTMLVideoElement.webkitExitFullscreen() は非推奨になりました。代わりに Document.exitFullscreen() を使用してください。"
  },
  "generated/Deprecation.ts | PrefixedVideoSupportsFullscreen": {
    "message": "HTMLVideoElement.webkitSupportsFullscreen は非推奨になりました。代わりに Document.fullscreenEnabled を使用してください。"
  },
  "generated/Deprecation.ts | PrivacySandboxExtensionsAPI": {
    "message": "API chrome.privacy.websites.privacySandboxEnabled は非推奨になりますが、下位互換性を確保するため、リリース M113 まで引き続き有効です。代わりに、chrome.privacy.websites.topicsEnabled、chrome.privacy.websites.fledgeEnabled、chrome.privacy.websites.adMeasurementEnabled を使用してください。詳しくは https://developer.chrome.com/docs/extensions/reference/privacy/#property-websites-privacySandboxEnabled をご覧ください。"
  },
  "generated/Deprecation.ts | RTCConstraintEnableDtlsSrtpFalse": {
    "message": "DtlsSrtpKeyAgreement の制約は削除されました。この制約に指定されている false 値は、削除された SDES key negotiation の方法を使用する試みとして解釈されます。この機能は削除されたため、DTLS key negotiation をサポートしているサービスで代用してください。"
  },
  "generated/Deprecation.ts | RTCConstraintEnableDtlsSrtpTrue": {
    "message": "DtlsSrtpKeyAgreement の制約は削除されました。この制約に指定されている true 値は適用されませんが、この制約を削除するとシンプルにできます。"
  },
  "generated/Deprecation.ts | RTCPeerConnectionGetStatsLegacyNonCompliant": {
    "message": "コールバックベースの getStats() は非推奨になっており、今後削除されます。代わりに、仕様に準拠した getStats() を使用してください。"
  },
  "generated/Deprecation.ts | RangeExpand": {
    "message": "Range.expand() は非推奨になりました。代わりに Selection.modify() を使用してください。"
  },
  "generated/Deprecation.ts | RequestedSubresourceWithEmbeddedCredentials": {
    "message": "URL に埋め込み認証情報（https://user:pass@host/ など）が含まれるサブリソース リクエストはブロックされます。"
  },
  "generated/Deprecation.ts | RtcpMuxPolicyNegotiate": {
    "message": "rtcpMuxPolicy オプションは非推奨であり、削除される予定です。"
  },
  "generated/Deprecation.ts | SharedArrayBufferConstructedWithoutIsolation": {
    "message": "SharedArrayBuffer ではクロスオリジン分離が必要となります。詳しくは、https://developer.chrome.com/blog/enabling-shared-array-buffer/ をご覧ください。"
  },
  "generated/Deprecation.ts | TextToSpeech_DisallowedByAutoplay": {
    "message": "ユーザー アクティベーションのない speechSynthesis.speak() は非推奨であり、削除される予定です。"
  },
  "generated/Deprecation.ts | UnloadHandler": {
    "message": "unload イベント リスナーはサポートが終了したため、今後削除されます。"
  },
  "generated/Deprecation.ts | V8SharedArrayBufferConstructedInExtensionWithoutIsolation": {
    "message": "拡張機能で引き続き SharedArrayBuffer を使用するは、クロスオリジン分離を有効にする必要があります。https://developer.chrome.com/docs/extensions/mv3/cross-origin-isolation/ をご覧ください。"
  },
  "generated/Deprecation.ts | WebSQL": {
    "message": "ウェブ SQL は非推奨となっています。SQLite WebAssembly または Indexed Database を使用してください"
  },
  "generated/Deprecation.ts | WindowPlacementPermissionDescriptorUsed": {
    "message": "権限記述子 window-placement は非推奨になりました。代わりに window-management を使用してください。詳しくは、https://bit.ly/window-placement-rename をご覧ください。"
  },
  "generated/Deprecation.ts | WindowPlacementPermissionPolicyParsed": {
    "message": "権限ポリシー window-placement は非推奨になりました。代わりに window-management を使用してください。詳しくは、https://bit.ly/window-placement-rename をご覧ください。"
  },
  "generated/Deprecation.ts | XHRJSONEncodingDetection": {
    "message": "UTF-16 は、XMLHttpRequest のレスポンス JSON ではサポートされていません。"
  },
  "generated/Deprecation.ts | XMLHttpRequestSynchronousInNonWorkerOutsideBeforeUnload": {
    "message": "メインスレッドの同期的な XMLHttpRequest は、エンドユーザーのエクスペリエンスに悪影響があるため、非推奨となっています。詳しくは、https://xhr.spec.whatwg.org/ をご覧ください。"
  },
  "generated/Deprecation.ts | XRSupportsSession": {
    "message": "supportsSession() は非推奨となっています。代わりに isSessionSupported() を使用して、解決済みのブール値を確認してください。"
  },
  "models/bindings/ContentProviderBasedProject.ts | unknownErrorLoadingFile": {
    "message": "ファイルの読み込み中に不明なエラーが発生しました"
  },
  "models/bindings/DebuggerLanguagePlugins.ts | debugSymbolsIncomplete": {
    "message": "関数 {PH1} のデバッグ情報が不完全です"
  },
  "models/bindings/DebuggerLanguagePlugins.ts | errorInDebuggerLanguagePlugin": {
    "message": "デバッガ言語プラグインでエラーが発生しました（{PH1}）"
  },
  "models/bindings/DebuggerLanguagePlugins.ts | failedToLoadDebugSymbolsFor": {
    "message": "[{PH1}] {PH2} のデバッグ シンボルの読み込みに失敗しました（{PH3}）"
  },
  "models/bindings/DebuggerLanguagePlugins.ts | failedToLoadDebugSymbolsForFunction": {
    "message": "関数「{PH1}」のデバッグ情報がありません"
  },
  "models/bindings/DebuggerLanguagePlugins.ts | loadedDebugSymbolsForButDidnt": {
    "message": "[{PH1}] {PH2} のデバッグ シンボルを読み込みましたが、ソースファイルが見つかりませんでした"
  },
  "models/bindings/DebuggerLanguagePlugins.ts | loadedDebugSymbolsForFound": {
    "message": "[{PH1}] {PH2} のデバッグ シンボルを読み込み、{PH3} 件のソースファイルが見つかりました"
  },
  "models/bindings/DebuggerLanguagePlugins.ts | loadingDebugSymbolsFor": {
    "message": "[{PH1}] {PH2} のデバッグ シンボルを読み込んでいます..."
  },
  "models/bindings/DebuggerLanguagePlugins.ts | loadingDebugSymbolsForVia": {
    "message": "[{PH1}] {PH2} のデバッグ シンボルを（{PH3} を介して）読み込んでいます..."
  },
  "models/bindings/IgnoreListManager.ts | addAllContentScriptsToIgnoreList": {
    "message": "無視リストに拡張機能スクリプトをすべて追加"
  },
  "models/bindings/IgnoreListManager.ts | addAllThirdPartyScriptsToIgnoreList": {
    "message": "無視リストにすべてのサードパーティ スクリプトを追加"
  },
  "models/bindings/IgnoreListManager.ts | addDirectoryToIgnoreList": {
    "message": "無視リストにディレクトリを追加"
  },
  "models/bindings/IgnoreListManager.ts | addScriptToIgnoreList": {
    "message": "無視リストにスクリプトを追加"
  },
  "models/bindings/IgnoreListManager.ts | removeFromIgnoreList": {
    "message": "無視リストから削除"
  },
  "models/bindings/ResourceScriptMapping.ts | liveEditCompileFailed": {
    "message": "LiveEdit コンパイルに失敗しました（{PH1}）"
  },
  "models/bindings/ResourceScriptMapping.ts | liveEditFailed": {
    "message": "LiveEdit 失敗: {PH1}"
  },
  "models/emulation/DeviceModeModel.ts | devicePixelRatioMustBeANumberOr": {
    "message": "デバイスのピクセル比は数字で入力するか、空白にしてください。"
  },
  "models/emulation/DeviceModeModel.ts | devicePixelRatioMustBeGreater": {
    "message": "デバイスのピクセル比は {PH1} 以上にしてください。"
  },
  "models/emulation/DeviceModeModel.ts | devicePixelRatioMustBeLessThanOr": {
    "message": "デバイスのピクセル比は {PH1} 以下にしてください。"
  },
  "models/emulation/DeviceModeModel.ts | heightCannotBeEmpty": {
    "message": "高さを指定してください。"
  },
  "models/emulation/DeviceModeModel.ts | heightMustBeANumber": {
    "message": "高さは数字で入力してください。"
  },
  "models/emulation/DeviceModeModel.ts | heightMustBeGreaterThanOrEqualTo": {
    "message": "高さは {PH1} 以上にしてください。"
  },
  "models/emulation/DeviceModeModel.ts | heightMustBeLessThanOrEqualToS": {
    "message": "高さは {PH1} 以下にしてください。"
  },
  "models/emulation/DeviceModeModel.ts | widthCannotBeEmpty": {
    "message": "幅を指定してください。"
  },
  "models/emulation/DeviceModeModel.ts | widthMustBeANumber": {
    "message": "幅は数字で入力してください。"
  },
  "models/emulation/DeviceModeModel.ts | widthMustBeGreaterThanOrEqualToS": {
    "message": "幅は {PH1} 以上にしてください。"
  },
  "models/emulation/DeviceModeModel.ts | widthMustBeLessThanOrEqualToS": {
    "message": "幅は {PH1} 以下にしてください。"
  },
  "models/emulation/EmulatedDevices.ts | laptopWithHiDPIScreen": {
    "message": "HiDPI 画面搭載のノートパソコン"
  },
  "models/emulation/EmulatedDevices.ts | laptopWithMDPIScreen": {
    "message": "MDPI 画面搭載のノートパソコン"
  },
  "models/emulation/EmulatedDevices.ts | laptopWithTouch": {
    "message": "タップ操作のノートパソコン"
  },
  "models/har/Writer.ts | collectingContent": {
    "message": "コンテンツを収集しています…"
  },
  "models/har/Writer.ts | writingFile": {
    "message": "ファイルを書き込んでいます…"
  },
  "models/issues_manager/BounceTrackingIssue.ts | bounceTrackingMitigations": {
    "message": "バウンス トラッキング対策"
  },
  "models/issues_manager/ClientHintIssue.ts | clientHintsInfrastructure": {
    "message": "Client Hints インフラストラクチャ"
  },
  "models/issues_manager/ContentSecurityPolicyIssue.ts | contentSecurityPolicyEval": {
    "message": "コンテンツ セキュリティ ポリシー - Eval"
  },
  "models/issues_manager/ContentSecurityPolicyIssue.ts | contentSecurityPolicyInlineCode": {
    "message": "コンテンツ セキュリティ ポリシー - インライン コード"
  },
  "models/issues_manager/ContentSecurityPolicyIssue.ts | contentSecurityPolicySource": {
    "message": "コンテンツ セキュリティ ポリシー - ソース許可リスト"
  },
  "models/issues_manager/ContentSecurityPolicyIssue.ts | trustedTypesFixViolations": {
    "message": "Trusted Type - 違反を修正"
  },
  "models/issues_manager/ContentSecurityPolicyIssue.ts | trustedTypesPolicyViolation": {
    "message": "Trusted Type - ポリシー違反"
  },
  "models/issues_manager/CookieDeprecationMetadataIssue.ts | thirdPartyPhaseoutExplained": {
    "message": "サードパーティ Cookie の段階的廃止に備える"
  },
  "models/issues_manager/CookieIssue.ts | aSecure": {
    "message": "安全な"
  },
  "models/issues_manager/CookieIssue.ts | anInsecure": {
    "message": "安全ではない"
  },
  "models/issues_manager/CookieIssue.ts | fileCrosSiteRedirectBug": {
    "message": "バグを報告"
  },
  "models/issues_manager/CookieIssue.ts | firstPartySetsExplained": {
    "message": "First-Party Sets と SameParty 属性"
  },
  "models/issues_manager/CookieIssue.ts | howSchemefulSamesiteWorks": {
    "message": "スキームフル Same-Site の仕組み"
  },
  "models/issues_manager/CookieIssue.ts | samesiteCookiesExplained": {
    "message": "SameSite Cookie の説明"
  },
  "models/issues_manager/CookieIssue.ts | thirdPartyPhaseoutExplained": {
    "message": "サードパーティ Cookie の段階的廃止に備える"
  },
  "models/issues_manager/CorsIssue.ts | CORS": {
    "message": "クロスオリジン リソース シェアリング（CORS）"
  },
  "models/issues_manager/CorsIssue.ts | corsPrivateNetworkAccess": {
    "message": "プライベート ネットワーク アクセス"
  },
  "models/issues_manager/CrossOriginEmbedderPolicyIssue.ts | coopAndCoep": {
    "message": "COOP と COEP"
  },
  "models/issues_manager/CrossOriginEmbedderPolicyIssue.ts | samesiteAndSameorigin": {
    "message": "Same-Site と Same-Origin"
  },
  "models/issues_manager/DeprecationIssue.ts | feature": {
    "message": "詳しくは、機能のステータスページをご覧ください。"
  },
  "models/issues_manager/DeprecationIssue.ts | milestone": {
    "message": "この変更はマイルストーン {milestone} で有効になります。"
  },
  "models/issues_manager/DeprecationIssue.ts | title": {
    "message": "非推奨の機能が使用されています"
  },
  "models/issues_manager/FederatedAuthRequestIssue.ts | fedCm": {
    "message": "Federated Credential Management API"
  },
  "models/issues_manager/FederatedAuthUserInfoRequestIssue.ts | fedCmUserInfo": {
    "message": "Federated Credential Management User Info API"
  },
  "models/issues_manager/GenericIssue.ts | autocompleteAttributePageTitle": {
    "message": "HTML 属性: autocomplete"
  },
  "models/issues_manager/GenericIssue.ts | corbExplainerPageTitle": {
    "message": "CORB の解説"
  },
  "models/issues_manager/GenericIssue.ts | crossOriginPortalPostMessage": {
    "message": "ポータル - 同じオリジンの通信チャネル"
  },
  "models/issues_manager/GenericIssue.ts | howDoesAutofillWorkPageTitle": {
    "message": "自動入力の仕組み"
  },
  "models/issues_manager/GenericIssue.ts | inputFormElementPageTitle": {
    "message": "フォームの入力要素"
  },
  "models/issues_manager/GenericIssue.ts | labelFormlementsPageTitle": {
    "message": "ラベル要素"
  },
  "models/issues_manager/HeavyAdIssue.ts | handlingHeavyAdInterventions": {
    "message": "時間のかかった広告の問題を処理する"
  },
  "models/issues_manager/Issue.ts | breakingChangeIssue": {
    "message": "互換性を破る変更の問題: Chrome の今後のバージョンでページが動作を停止する可能性があります"
  },
  "models/issues_manager/Issue.ts | breakingChanges": {
    "message": "破壊的変更"
  },
  "models/issues_manager/Issue.ts | improvementIssue": {
    "message": "改善対象の問題: ページを改善するための最適化案があります"
  },
  "models/issues_manager/Issue.ts | improvements": {
    "message": "改善"
  },
  "models/issues_manager/Issue.ts | pageErrorIssue": {
    "message": "ページエラー問題: ページが正しく動作していません"
  },
  "models/issues_manager/Issue.ts | pageErrors": {
    "message": "ページエラー"
  },
  "models/issues_manager/LowTextContrastIssue.ts | colorAndContrastAccessibility": {
    "message": "色とコントラストのユーザー補助"
  },
  "models/issues_manager/MixedContentIssue.ts | preventingMixedContent": {
    "message": "混合コンテンツを防ぐ"
  },
  "models/issues_manager/QuirksModeIssue.ts | documentCompatibilityMode": {
    "message": "ドキュメント互換モード"
  },
  "models/issues_manager/SharedArrayBufferIssue.ts | enablingSharedArrayBuffer": {
    "message": "SharedArrayBuffer を有効にしています"
  },
  "models/logs/NetworkLog.ts | anonymous": {
    "message": "<匿名>"
  },
  "models/logs/logs-meta.ts | clear": {
    "message": "消去"
  },
  "models/logs/logs-meta.ts | doNotPreserveLogOnPageReload": {
    "message": "ページの再読み込み / 移動時にログを保持しない"
  },
  "models/logs/logs-meta.ts | preserve": {
    "message": "保持"
  },
  "models/logs/logs-meta.ts | preserveLog": {
    "message": "ログを保持"
  },
  "models/logs/logs-meta.ts | preserveLogOnPageReload": {
    "message": "ページの再読み込み / 移動時にログを保持"
  },
  "models/logs/logs-meta.ts | recordNetworkLog": {
    "message": "ネットワーク ログを記録"
  },
  "models/logs/logs-meta.ts | reset": {
    "message": "リセット"
  },
  "models/persistence/EditFileSystemView.ts | add": {
    "message": "追加"
  },
  "models/persistence/EditFileSystemView.ts | enterAPath": {
    "message": "パスを入力"
  },
  "models/persistence/EditFileSystemView.ts | enterAUniquePath": {
    "message": "一意のパスを入力してください"
  },
  "models/persistence/EditFileSystemView.ts | excludedFolders": {
    "message": "除外フォルダ"
  },
  "models/persistence/EditFileSystemView.ts | folderPath": {
    "message": "フォルダパス"
  },
  "models/persistence/EditFileSystemView.ts | none": {
    "message": "なし"
  },
  "models/persistence/EditFileSystemView.ts | sViaDevtools": {
    "message": "{PH1}（DevTools 使用）"
  },
  "models/persistence/IsolatedFileSystem.ts | blobCouldNotBeLoaded": {
    "message": "blob を読み込めませんでした。"
  },
  "models/persistence/IsolatedFileSystem.ts | cantReadFileSS": {
    "message": "ファイルを読み取れません: {PH1}: {PH2}"
  },
  "models/persistence/IsolatedFileSystem.ts | fileSystemErrorS": {
    "message": "ファイルシステム エラー: {PH1}"
  },
  "models/persistence/IsolatedFileSystem.ts | linkedToS": {
    "message": "{PH1} にリンク"
  },
  "models/persistence/IsolatedFileSystem.ts | unknownErrorReadingFileS": {
    "message": "ファイル（{PH1}）の読み取り中に不明なエラーが発生しました"
  },
  "models/persistence/IsolatedFileSystemManager.ts | unableToAddFilesystemS": {
    "message": "ファイルシステムを追加できません: {PH1}"
  },
  "models/persistence/PersistenceActions.ts | openInContainingFolder": {
    "message": "フォルダで開く"
  },
  "models/persistence/PersistenceActions.ts | overrideContent": {
    "message": "コンテンツをオーバーライド"
  },
  "models/persistence/PersistenceActions.ts | overrideSourceMappedFileExplanation": {
    "message": "「{PH1}」はソースマップ ファイルであり、オーバーライドできません。"
  },
  "models/persistence/PersistenceActions.ts | overrideSourceMappedFileWarning": {
    "message": "代わりに「{PH1}」をオーバーライドしますか？"
  },
  "models/persistence/PersistenceActions.ts | saveAs": {
    "message": "名前を付けて保存..."
  },
  "models/persistence/PersistenceActions.ts | saveImage": {
    "message": "画像を保存"
  },
  "models/persistence/PersistenceActions.ts | showOverrides": {
    "message": "すべてのオーバーライドを表示"
  },
  "models/persistence/PersistenceUtils.ts | linkedToS": {
    "message": "{PH1} にリンク"
  },
  "models/persistence/PersistenceUtils.ts | linkedToSourceMapS": {
    "message": "ソースマップにリンク: {PH1}"
  },
  "models/persistence/PlatformFileSystem.ts | unableToReadFilesWithThis": {
    "message": "PlatformFileSystem がファイルを読み取れません。"
  },
  "models/persistence/WorkspaceSettingsTab.ts | addFolder": {
    "message": "フォルダを追加…"
  },
  "models/persistence/WorkspaceSettingsTab.ts | folderExcludePattern": {
    "message": "フォルダ除外パターン"
  },
  "models/persistence/WorkspaceSettingsTab.ts | mappingsAreInferredAutomatically": {
    "message": "マッピングは自動的に推測されます。"
  },
  "models/persistence/WorkspaceSettingsTab.ts | remove": {
    "message": "削除"
  },
  "models/persistence/WorkspaceSettingsTab.ts | workspace": {
    "message": "ワークスペース"
  },
  "models/persistence/persistence-meta.ts | disableOverrideNetworkRequests": {
    "message": "ネットワーク リクエストのオーバーライドを無効化"
  },
  "models/persistence/persistence-meta.ts | enableLocalOverrides": {
    "message": "ローカルのオーバーライドを有効化"
  },
  "models/persistence/persistence-meta.ts | enableOverrideNetworkRequests": {
    "message": "ネットワーク リクエストのオーバーライドを有効化"
  },
  "models/persistence/persistence-meta.ts | interception": {
    "message": "インターセプション"
  },
  "models/persistence/persistence-meta.ts | network": {
    "message": "ネットワーク"
  },
  "models/persistence/persistence-meta.ts | override": {
    "message": "オーバーライド"
  },
  "models/persistence/persistence-meta.ts | request": {
    "message": "リクエスト"
  },
  "models/persistence/persistence-meta.ts | rewrite": {
    "message": "書き換え"
  },
  "models/persistence/persistence-meta.ts | showWorkspace": {
    "message": "ワークスペースの設定を表示"
  },
  "models/persistence/persistence-meta.ts | workspace": {
    "message": "ワークスペース"
  },
  "models/timeline_model/TimelineJSProfile.ts | threadS": {
    "message": "スレッド {PH1}"
  },
  "models/timeline_model/TimelineModel.ts | dedicatedWorker": {
    "message": "専用の Worker"
  },
  "models/timeline_model/TimelineModel.ts | threadS": {
    "message": "スレッド {PH1}"
  },
  "models/timeline_model/TimelineModel.ts | workerS": {
    "message": "Worker — {PH1}"
  },
  "models/timeline_model/TimelineModel.ts | workerSS": {
    "message": "Worker: {PH1} — {PH2}"
  },
  "models/workspace/UISourceCode.ts | index": {
    "message": "（インデックス）"
  },
  "models/workspace/UISourceCode.ts | thisFileWasChangedExternally": {
    "message": "このファイルは外部で変更されました。再読み込みしますか？"
  },
  "panels/accessibility/ARIAAttributesView.ts | ariaAttributes": {
    "message": "ARIA 属性"
  },
  "panels/accessibility/ARIAAttributesView.ts | noAriaAttributes": {
    "message": "ARIA 属性がありません"
  },
  "panels/accessibility/AXBreadcrumbsPane.ts | accessibilityTree": {
    "message": "ユーザー補助ツリー"
  },
  "panels/accessibility/AXBreadcrumbsPane.ts | fullTreeExperimentDescription": {
    "message": "アクセシビリティ ツリーは、DOM ツリーの右上に移動しました。"
  },
  "panels/accessibility/AXBreadcrumbsPane.ts | fullTreeExperimentName": {
    "message": "アクセシビリティ ツリーの全ページ表示を有効にする"
  },
  "panels/accessibility/AXBreadcrumbsPane.ts | ignored": {
    "message": "除外"
  },
  "panels/accessibility/AXBreadcrumbsPane.ts | reloadRequired": {
    "message": "変更を反映するには、再読み込みする必要があります。"
  },
  "panels/accessibility/AXBreadcrumbsPane.ts | scrollIntoView": {
    "message": "表示される位置までスクロール"
  },
  "panels/accessibility/AccessibilityNodeView.ts | accessibilityNodeNotExposed": {
    "message": "非公開のユーザー補助ノード"
  },
  "panels/accessibility/AccessibilityNodeView.ts | ancestorChildrenAreAll": {
    "message": "祖先の子がすべてレイアウト用です: "
  },
  "panels/accessibility/AccessibilityNodeView.ts | computedProperties": {
    "message": "計算済みプロパティ"
  },
  "panels/accessibility/AccessibilityNodeView.ts | elementHasEmptyAltText": {
    "message": "要素の代替テキストが空白です。"
  },
  "panels/accessibility/AccessibilityNodeView.ts | elementHasPlaceholder": {
    "message": "要素に {PH1} が含まれています。"
  },
  "panels/accessibility/AccessibilityNodeView.ts | elementIsHiddenBy": {
    "message": "要素は次のアクティブなモーダル ダイアログにより非表示になっています:"
  },
  "panels/accessibility/AccessibilityNodeView.ts | elementIsHiddenByChildTree": {
    "message": "要素が子ツリーで非表示になっています:"
  },
  "panels/accessibility/AccessibilityNodeView.ts | elementIsInAnInertSubTree": {
    "message": "要素が次の inert サブツリー内にあります:"
  },
  "panels/accessibility/AccessibilityNodeView.ts | elementIsInert": {
    "message": "要素が inert です。"
  },
  "panels/accessibility/AccessibilityNodeView.ts | elementIsNotRendered": {
    "message": "要素がレンダリングされていません。"
  },
  "panels/accessibility/AccessibilityNodeView.ts | elementIsNotVisible": {
    "message": "要素は表示されません。"
  },
  "panels/accessibility/AccessibilityNodeView.ts | elementIsPlaceholder": {
    "message": "要素が {PH1} です。"
  },
  "panels/accessibility/AccessibilityNodeView.ts | elementIsPresentational": {
    "message": "レイアウト用の要素です。"
  },
  "panels/accessibility/AccessibilityNodeView.ts | elementNotInteresting": {
    "message": "要素はユーザー補助とは関係がありません。"
  },
  "panels/accessibility/AccessibilityNodeView.ts | elementsInheritsPresentational": {
    "message": "要素は次のレイアウト用ロールを継承します:"
  },
  "panels/accessibility/AccessibilityNodeView.ts | invalidSource": {
    "message": "無効なソース。"
  },
  "panels/accessibility/AccessibilityNodeView.ts | labelFor": {
    "message": "ラベル:"
  },
  "panels/accessibility/AccessibilityNodeView.ts | noAccessibilityNode": {
    "message": "ユーザー補助ノードなし"
  },
  "panels/accessibility/AccessibilityNodeView.ts | noNodeWithThisId": {
    "message": "この ID を持つノードはありません。"
  },
  "panels/accessibility/AccessibilityNodeView.ts | noTextContent": {
    "message": "テキスト コンテンツはありません。"
  },
  "panels/accessibility/AccessibilityNodeView.ts | notSpecified": {
    "message": "指定なし"
  },
  "panels/accessibility/AccessibilityNodeView.ts | partOfLabelElement": {
    "message": "ラベル要素の一部: "
  },
  "panels/accessibility/AccessibilityNodeView.ts | placeholderIsPlaceholderOnAncestor": {
    "message": "{PH1} は祖先の {PH2} です:  "
  },
  "panels/accessibility/AccessibilityStrings.ts | aHumanreadableVersionOfTheValue": {
    "message": "人間が読める形式の、範囲ウィジェットの値（必要な場合）。"
  },
  "panels/accessibility/AccessibilityStrings.ts | activeDescendant": {
    "message": "アクティブな下位要素"
  },
  "panels/accessibility/AccessibilityStrings.ts | atomicLiveRegions": {
    "message": "atomic（ライブ領域）"
  },
  "panels/accessibility/AccessibilityStrings.ts | busyLiveRegions": {
    "message": "Busy（ライブ領域）"
  },
  "panels/accessibility/AccessibilityStrings.ts | canSetValue": {
    "message": "値を設定可能"
  },
  "panels/accessibility/AccessibilityStrings.ts | checked": {
    "message": "オン"
  },
  "panels/accessibility/AccessibilityStrings.ts | contents": {
    "message": "コンテンツ"
  },
  "panels/accessibility/AccessibilityStrings.ts | controls": {
    "message": "コントロール"
  },
  "panels/accessibility/AccessibilityStrings.ts | describedBy": {
    "message": "記述元:"
  },
  "panels/accessibility/AccessibilityStrings.ts | description": {
    "message": "説明"
  },
  "panels/accessibility/AccessibilityStrings.ts | disabled": {
    "message": "無効"
  },
  "panels/accessibility/AccessibilityStrings.ts | editable": {
    "message": "編集可能"
  },
  "panels/accessibility/AccessibilityStrings.ts | elementOrElementsWhichFormThe": {
    "message": "この要素の記述を構成する要素です。"
  },
  "panels/accessibility/AccessibilityStrings.ts | elementOrElementsWhichMayFormThe": {
    "message": "この要素の名前に含まれる可能性のある 1 つまたは複数の要素。"
  },
  "panels/accessibility/AccessibilityStrings.ts | elementOrElementsWhichShouldBe": {
    "message": "DOM ではこの要素の下位の要素とされていないが、実際には下位の要素とみなすべき要素です。"
  },
  "panels/accessibility/AccessibilityStrings.ts | elementOrElementsWhoseContentOr": {
    "message": "このウィジェットでコンテンツまたはプレゼンスが制御される要素。"
  },
  "panels/accessibility/AccessibilityStrings.ts | elementToWhichTheUserMayChooseTo": {
    "message": "DOM 順の次の要素ではなく、この要素の後に移動するようにユーザーが選択できる要素。"
  },
  "panels/accessibility/AccessibilityStrings.ts | expanded": {
    "message": "展開表示中"
  },
  "panels/accessibility/AccessibilityStrings.ts | focusable": {
    "message": "フォーカス可能"
  },
  "panels/accessibility/AccessibilityStrings.ts | focused": {
    "message": "フォーカス"
  },
  "panels/accessibility/AccessibilityStrings.ts | forARangeWidgetTheMaximumAllowed": {
    "message": "範囲ウィジェットの場合、最大許容値"
  },
  "panels/accessibility/AccessibilityStrings.ts | forARangeWidgetTheMinimumAllowed": {
    "message": "範囲ウィジェットの場合、最小許容値"
  },
  "panels/accessibility/AccessibilityStrings.ts | fromAttribute": {
    "message": "属性から"
  },
  "panels/accessibility/AccessibilityStrings.ts | fromCaption": {
    "message": "caption から受信"
  },
  "panels/accessibility/AccessibilityStrings.ts | fromDescription": {
    "message": "description から"
  },
  "panels/accessibility/AccessibilityStrings.ts | fromLabel": {
    "message": "label から受信"
  },
  "panels/accessibility/AccessibilityStrings.ts | fromLabelFor": {
    "message": "label（for= 属性）から受信"
  },
  "panels/accessibility/AccessibilityStrings.ts | fromLabelWrapped": {
    "message": "label から（ラップ）"
  },
  "panels/accessibility/AccessibilityStrings.ts | fromLegend": {
    "message": "legend から受信"
  },
  "panels/accessibility/AccessibilityStrings.ts | fromNativeHtml": {
    "message": "ネイティブ HTML から"
  },
  "panels/accessibility/AccessibilityStrings.ts | fromPlaceholderAttribute": {
    "message": "プレースホルダ属性から"
  },
  "panels/accessibility/AccessibilityStrings.ts | fromRubyAnnotation": {
    "message": "ruby アノテーションから"
  },
  "panels/accessibility/AccessibilityStrings.ts | fromStyle": {
    "message": "スタイルから"
  },
  "panels/accessibility/AccessibilityStrings.ts | fromTitle": {
    "message": "タイトルから"
  },
  "panels/accessibility/AccessibilityStrings.ts | hasAutocomplete": {
    "message": "オートコンプリート対応"
  },
  "panels/accessibility/AccessibilityStrings.ts | hasPopup": {
    "message": "ポップアップあり"
  },
  "panels/accessibility/AccessibilityStrings.ts | help": {
    "message": "ヘルプ"
  },
  "panels/accessibility/AccessibilityStrings.ts | ifAndHowThisElementCanBeEdited": {
    "message": "この要素を編集できるかどうかと、編集する方法。"
  },
  "panels/accessibility/AccessibilityStrings.ts | ifThisElementMayReceiveLive": {
    "message": "この要素がライブ アップデートを受け取る可能性がある場合、変更時にライブ領域全体をユーザーに提示するか、変更されたノードのみを提示するか。"
  },
  "panels/accessibility/AccessibilityStrings.ts | ifThisElementMayReceiveLiveUpdates": {
    "message": "この要素がライブ アップデートを受け取る場合に、通知をトリガーすべき更新情報。"
  },
  "panels/accessibility/AccessibilityStrings.ts | ifThisElementMayReceiveLiveUpdatesThe": {
    "message": "この要素がリアルタイムで更新を受け取れる場合、それに含まれるライブ領域のルート要素。"
  },
  "panels/accessibility/AccessibilityStrings.ts | ifTrueThisElementCanReceiveFocus": {
    "message": "true の場合、この要素はフォーカスを受け取ることができます。"
  },
  "panels/accessibility/AccessibilityStrings.ts | ifTrueThisElementCurrentlyCannot": {
    "message": "true の場合、この要素は現在操作できません。"
  },
  "panels/accessibility/AccessibilityStrings.ts | ifTrueThisElementCurrentlyHas": {
    "message": "true の場合、この要素がフォーカスされています。"
  },
  "panels/accessibility/AccessibilityStrings.ts | ifTrueThisElementMayBeInteracted": {
    "message": "true の場合、この要素は操作できますが、値は変更できません。"
  },
  "panels/accessibility/AccessibilityStrings.ts | ifTrueThisElementsUserentered": {
    "message": "true に設定されている場合、この要素のユーザー入力値は検証要件を満たしていません。"
  },
  "panels/accessibility/AccessibilityStrings.ts | implicit": {
    "message": "暗黙的"
  },
  "panels/accessibility/AccessibilityStrings.ts | implicitValue": {
    "message": "暗黙的な値。"
  },
  "panels/accessibility/AccessibilityStrings.ts | indicatesThePurposeOfThisElement": {
    "message": "ウィジェットのユーザー インターフェースのイディオムやドキュメントの構造的役割など、この要素の目的を示します。"
  },
  "panels/accessibility/AccessibilityStrings.ts | invalidUserEntry": {
    "message": "無効なユーザー入力"
  },
  "panels/accessibility/AccessibilityStrings.ts | labeledBy": {
    "message": "ラベル付け"
  },
  "panels/accessibility/AccessibilityStrings.ts | level": {
    "message": "レベル"
  },
  "panels/accessibility/AccessibilityStrings.ts | liveRegion": {
    "message": "ライブ リージョン"
  },
  "panels/accessibility/AccessibilityStrings.ts | liveRegionRoot": {
    "message": "ライブ地域ルート"
  },
  "panels/accessibility/AccessibilityStrings.ts | maximumValue": {
    "message": "最大値"
  },
  "panels/accessibility/AccessibilityStrings.ts | minimumValue": {
    "message": "最小値"
  },
  "panels/accessibility/AccessibilityStrings.ts | multiline": {
    "message": "複数行"
  },
  "panels/accessibility/AccessibilityStrings.ts | multiselectable": {
    "message": "複数選択可能"
  },
  "panels/accessibility/AccessibilityStrings.ts | orientation": {
    "message": "向き"
  },
  "panels/accessibility/AccessibilityStrings.ts | pressed": {
    "message": "押下"
  },
  "panels/accessibility/AccessibilityStrings.ts | readonlyString": {
    "message": "読み取り専用"
  },
  "panels/accessibility/AccessibilityStrings.ts | relatedElement": {
    "message": "関連要素"
  },
  "panels/accessibility/AccessibilityStrings.ts | relevantLiveRegions": {
    "message": "関連性が高い（ライブ領域）"
  },
  "panels/accessibility/AccessibilityStrings.ts | requiredString": {
    "message": "必須"
  },
  "panels/accessibility/AccessibilityStrings.ts | role": {
    "message": "役割"
  },
  "panels/accessibility/AccessibilityStrings.ts | selectedString": {
    "message": "選択済み"
  },
  "panels/accessibility/AccessibilityStrings.ts | theAccessibleDescriptionForThis": {
    "message": "この要素のユーザー補助用の説明"
  },
  "panels/accessibility/AccessibilityStrings.ts | theComputedHelpTextForThis": {
    "message": "この要素の算出ヘルプテキスト。"
  },
  "panels/accessibility/AccessibilityStrings.ts | theComputedNameOfThisElement": {
    "message": "この要素の計算済みの名前。"
  },
  "panels/accessibility/AccessibilityStrings.ts | theDescendantOfThisElementWhich": {
    "message": "アクティブなこの要素の下位要素（フォーカスの委任先とすべき要素）。"
  },
  "panels/accessibility/AccessibilityStrings.ts | theHierarchicalLevelOfThis": {
    "message": "この要素の階層レベル。"
  },
  "panels/accessibility/AccessibilityStrings.ts | theValueOfThisElementThisMayBe": {
    "message": "この要素の値。要素によっては、ユーザー提供の場合もあれば、デベロッパー提供の場合もあります。"
  },
  "panels/accessibility/AccessibilityStrings.ts | value": {
    "message": "値"
  },
  "panels/accessibility/AccessibilityStrings.ts | valueDescription": {
    "message": "値の説明"
  },
  "panels/accessibility/AccessibilityStrings.ts | valueFromAttribute": {
    "message": "属性からの値。"
  },
  "panels/accessibility/AccessibilityStrings.ts | valueFromDescriptionElement": {
    "message": "description 要素からの値です。"
  },
  "panels/accessibility/AccessibilityStrings.ts | valueFromElementContents": {
    "message": "要素コンテンツからの値"
  },
  "panels/accessibility/AccessibilityStrings.ts | valueFromFigcaptionElement": {
    "message": "figcaption 要素からの値です。"
  },
  "panels/accessibility/AccessibilityStrings.ts | valueFromLabelElement": {
    "message": "label 要素からの値です。"
  },
  "panels/accessibility/AccessibilityStrings.ts | valueFromLabelElementWithFor": {
    "message": "for= 属性を持つ label 要素からの値です。"
  },
  "panels/accessibility/AccessibilityStrings.ts | valueFromLabelElementWrapped": {
    "message": "ラップしている label 要素からの値です。"
  },
  "panels/accessibility/AccessibilityStrings.ts | valueFromLegendElement": {
    "message": "legend 要素からの値です。"
  },
  "panels/accessibility/AccessibilityStrings.ts | valueFromNativeHtmlRuby": {
    "message": "プレーン HTML ルビー アノテーションからの値です。"
  },
  "panels/accessibility/AccessibilityStrings.ts | valueFromNativeHtmlUnknownSource": {
    "message": "ネイティブ HTML の値（不明なソース）"
  },
  "panels/accessibility/AccessibilityStrings.ts | valueFromPlaceholderAttribute": {
    "message": "プレースホルダ属性からの値。"
  },
  "panels/accessibility/AccessibilityStrings.ts | valueFromRelatedElement": {
    "message": "関連する要素の値。"
  },
  "panels/accessibility/AccessibilityStrings.ts | valueFromStyle": {
    "message": "スタイルからの値。"
  },
  "panels/accessibility/AccessibilityStrings.ts | valueFromTableCaption": {
    "message": "table caption からの値です。"
  },
  "panels/accessibility/AccessibilityStrings.ts | valueFromTitleAttribute": {
    "message": "タイトル属性からの値。"
  },
  "panels/accessibility/AccessibilityStrings.ts | whetherAUserMaySelectMoreThanOne": {
    "message": "このウィジェットからの複数オプションの選択をユーザーに許可するか指定します。"
  },
  "panels/accessibility/AccessibilityStrings.ts | whetherAndWhatPriorityOfLive": {
    "message": "この要素に対して想定されるライブ アップデートの有無およびその優先度。"
  },
  "panels/accessibility/AccessibilityStrings.ts | whetherAndWhatTypeOfAutocomplete": {
    "message": "この要素により、どのような種類のオートコンプリートの候補が提示されるかを示します。"
  },
  "panels/accessibility/AccessibilityStrings.ts | whetherTheOptionRepresentedBy": {
    "message": "この要素で表されるオプションが現在選択されているかどうかを示します。"
  },
  "panels/accessibility/AccessibilityStrings.ts | whetherTheValueOfThisElementCan": {
    "message": "この要素の値を設定できるかどうかを示します。"
  },
  "panels/accessibility/AccessibilityStrings.ts | whetherThisCheckboxRadioButtonOr": {
    "message": "このチェックボックス、ラジオボタン、ツリーアイテムがオンになっているか、オフになっているか、またはその組み合わせ（例: オンになっている子とオフになっている子の両方が存在する）であるかを示します。"
  },
  "panels/accessibility/AccessibilityStrings.ts | whetherThisElementHasCausedSome": {
    "message": "この要素によって、なんらかのポップアップ（メニューなど）が表示されたか。"
  },
  "panels/accessibility/AccessibilityStrings.ts | whetherThisElementIsARequired": {
    "message": "この要素がフォーム内の必須フィールドであるかどうかを示します。"
  },
  "panels/accessibility/AccessibilityStrings.ts | whetherThisElementOrAnother": {
    "message": "この要素またはこの要素が制御している別のグループ要素が展開されているかどうかを示します。"
  },
  "panels/accessibility/AccessibilityStrings.ts | whetherThisElementOrItsSubtree": {
    "message": "この要素またはそのサブツリーが現在更新されている（したがって矛盾した状態にある可能性がある）かどうか。"
  },
  "panels/accessibility/AccessibilityStrings.ts | whetherThisLinearElements": {
    "message": "この線形要素の向きが水平か垂直か。"
  },
  "panels/accessibility/AccessibilityStrings.ts | whetherThisTextBoxMayHaveMore": {
    "message": "このテキスト ボックスに複数行を許可するか選択します。"
  },
  "panels/accessibility/AccessibilityStrings.ts | whetherThisToggleButtonIs": {
    "message": "この切り替えボタンが現在押された状態かどうか"
  },
  "panels/accessibility/SourceOrderView.ts | noSourceOrderInformation": {
    "message": "利用可能なソースオーダー情報がありません"
  },
  "panels/accessibility/SourceOrderView.ts | showSourceOrder": {
    "message": "ソースオーダーを表示"
  },
  "panels/accessibility/SourceOrderView.ts | sourceOrderViewer": {
    "message": "ソースオーダー ビューア"
  },
  "panels/accessibility/SourceOrderView.ts | thereMayBeADelayInDisplaying": {
    "message": "子要素の多い要素のソースオーダーを表示する際は遅延が生じる可能性があります。"
  },
  "panels/accessibility/accessibility-meta.ts | accessibility": {
    "message": "アクセシビリティ"
  },
  "panels/accessibility/accessibility-meta.ts | shoAccessibility": {
    "message": "ユーザー補助を表示"
  },
  "panels/animation/AnimationTimeline.ts | animationPreviewS": {
    "message": "アニメーションのプレビュー {PH1}"
  },
  "panels/animation/AnimationTimeline.ts | animationPreviews": {
    "message": "アニメーション プレビュー"
  },
  "panels/animation/AnimationTimeline.ts | clearAll": {
    "message": "すべてクリア"
  },
  "panels/animation/AnimationTimeline.ts | pause": {
    "message": "一時停止"
  },
  "panels/animation/AnimationTimeline.ts | pauseAll": {
    "message": "すべてを一時停止"
  },
  "panels/animation/AnimationTimeline.ts | pauseTimeline": {
    "message": "タイムラインを一時停止"
  },
  "panels/animation/AnimationTimeline.ts | playTimeline": {
    "message": "タイムラインを再生"
  },
  "panels/animation/AnimationTimeline.ts | playbackRatePlaceholder": {
    "message": "{PH1}%"
  },
  "panels/animation/AnimationTimeline.ts | playbackRates": {
    "message": "再生速度"
  },
  "panels/animation/AnimationTimeline.ts | replayTimeline": {
    "message": "再生タイムライン"
  },
  "panels/animation/AnimationTimeline.ts | resumeAll": {
    "message": "すべて再開"
  },
  "panels/animation/AnimationTimeline.ts | selectAnEffectAboveToInspectAnd": {
    "message": "上にある効果のいずれかを選択し、検査と変更を行います。"
  },
  "panels/animation/AnimationTimeline.ts | setSpeedToS": {
    "message": "速度を {PH1} に設定"
  },
  "panels/animation/AnimationTimeline.ts | waitingForAnimations": {
    "message": "アニメーションを待機しています..."
  },
  "panels/animation/AnimationUI.ts | animationEndpointSlider": {
    "message": "アニメーション エンドポイント スライダー"
  },
  "panels/animation/AnimationUI.ts | animationKeyframeSlider": {
    "message": "アニメーション キーフレーム スライダー"
  },
  "panels/animation/AnimationUI.ts | sSlider": {
    "message": "{PH1} スライダー"
  },
  "panels/animation/animation-meta.ts | animations": {
    "message": "アニメーション"
  },
  "panels/animation/animation-meta.ts | showAnimations": {
    "message": "アニメーションを表示"
  },
  "panels/application/AppManifestView.ts | aUrlInTheManifestContainsA": {
    "message": "マニフェストの URL にユーザー名、パスワード、またはポートが含まれています"
  },
  "panels/application/AppManifestView.ts | actualHeightSpxOfSSDoesNotMatch": {
    "message": "{PH2} {PH3} の実際の高さ（{PH1}px）が指定の高さ（{PH4}px）に一致しません"
  },
  "panels/application/AppManifestView.ts | actualSizeSspxOfSSDoesNotMatch": {
    "message": "{PH3} {PH4} の実際のサイズ（{PH1}×{PH2}）ピクセルが、指定されたサイズ（{PH5}×{PH6} ピクセル）と一致しません"
  },
  "panels/application/AppManifestView.ts | actualWidthSpxOfSSDoesNotMatch": {
    "message": "{PH2} {PH3} の実際の幅（{PH1} ピクセル）が、指定された幅（{PH4} ピクセル）に一致しません。"
  },
  "panels/application/AppManifestView.ts | appIdExplainer": {
    "message": "マニフェストで既存のアプリを更新するのか、またはインストール可能な新しいウェブアプリを参照するのかをブラウザに通知するために使用されます。"
  },
  "panels/application/AppManifestView.ts | appIdNote": {
    "message": "{PH1} {PH2} がマニフェストで指定されていません。代わりに {PH3} を使用します。現在のアプリを示すアプリ ID を指定するには、{PH4} フィールドを {PH5} {PH6} に設定します。"
  },
  "panels/application/AppManifestView.ts | avoidPurposeAnyAndMaskable": {
    "message": "アイコンの「purpose」を「any maskable」と宣言することは推奨されません。プラットフォームによっては、パディングが過多または過少になって、正しく表示されない可能性があります。"
  },
  "panels/application/AppManifestView.ts | backgroundColor": {
    "message": "背景の色"
  },
  "panels/application/AppManifestView.ts | computedAppId": {
    "message": "計算済みアプリ ID"
  },
  "panels/application/AppManifestView.ts | copiedToClipboard": {
    "message": "候補の ID {PH1} をクリップボードにコピーしました"
  },
  "panels/application/AppManifestView.ts | copyToClipboard": {
    "message": "提案された ID をクリップボードにコピー"
  },
  "panels/application/AppManifestView.ts | couldNotCheckServiceWorker": {
    "message": "マニフェストに「start_url」フィールドがないため service worker をチェックできませんでした"
  },
  "panels/application/AppManifestView.ts | couldNotDownloadARequiredIcon": {
    "message": "マ二フェストから必要なアイコンをダウンロードできませんでした"
  },
  "panels/application/AppManifestView.ts | customizePwaTitleBar": {
    "message": "PWA のタイトルバーのウィンドウ コントロール オーバーレイをカスタマイズ"
  },
  "panels/application/AppManifestView.ts | darkBackgroundColor": {
    "message": "暗い背景の色"
  },
  "panels/application/AppManifestView.ts | darkThemeColor": {
    "message": "ダークモードの色"
  },
  "panels/application/AppManifestView.ts | description": {
    "message": "説明"
  },
  "panels/application/AppManifestView.ts | descriptionMayBeTruncated": {
    "message": "説明は省略できます。"
  },
  "panels/application/AppManifestView.ts | display": {
    "message": "ディスプレイ"
  },
  "panels/application/AppManifestView.ts | documentationOnMaskableIcons": {
    "message": "マスク可能なアイコンに関するドキュメント"
  },
  "panels/application/AppManifestView.ts | downloadedIconWasEmptyOr": {
    "message": "ダウンロードしたアイコンが空か、破損しています"
  },
  "panels/application/AppManifestView.ts | errorsAndWarnings": {
    "message": "エラーと警告"
  },
  "panels/application/AppManifestView.ts | formFactor": {
    "message": "フォーム ファクタ"
  },
  "panels/application/AppManifestView.ts | icon": {
    "message": "アイコン"
  },
  "panels/application/AppManifestView.ts | icons": {
    "message": "アイコン"
  },
  "panels/application/AppManifestView.ts | identity": {
    "message": "ID"
  },
  "panels/application/AppManifestView.ts | imageFromS": {
    "message": "{PH1} からの画像"
  },
  "panels/application/AppManifestView.ts | installability": {
    "message": "インストール性"
  },
  "panels/application/AppManifestView.ts | label": {
    "message": "ラベル"
  },
  "panels/application/AppManifestView.ts | learnMore": {
    "message": "詳細"
  },
  "panels/application/AppManifestView.ts | manifestContainsDisplayoverride": {
    "message": "マニフェストに「display_override」フィールドが含まれており、最初のサポート表示モードを「standalone」、「fullscreen」、「minimal-ui」のいずれかに設定する必要があります"
  },
  "panels/application/AppManifestView.ts | manifestCouldNotBeFetchedIsEmpty": {
    "message": "マニフェストを取得または解析できなかったか、マニフェストが空です"
  },
  "panels/application/AppManifestView.ts | manifestDisplayPropertyMustBeOne": {
    "message": "マニフェストの「display」プロパティは、「standalone」、「fullscreen」、「minimal-ui」のいずれかにする必要があります。"
  },
  "panels/application/AppManifestView.ts | manifestDoesNotContainANameOr": {
    "message": "マニフェストに「name」または「short_name」フィールドがありません"
  },
  "panels/application/AppManifestView.ts | manifestDoesNotContainASuitable": {
    "message": "マニフェストに適切なアイコンが含まれていません。{PH1} ピクセル以上の PNG、SVG、または WebP 形式のアイコンが必要です。また、そのアイコンには「sizes」属性を設定し、「purpose」属性が設定されている場合は「any」を含める必要があります。"
  },
  "panels/application/AppManifestView.ts | manifestSpecifies": {
    "message": "マニフェストで「prefer_related_applications: true」が指定されています"
  },
  "panels/application/AppManifestView.ts | manifestStartUrlIsNotValid": {
    "message": "マニフェスト「start_url」が無効です"
  },
  "panels/application/AppManifestView.ts | name": {
    "message": "名前"
  },
  "panels/application/AppManifestView.ts | needHelpReadOurS": {
    "message": "ご不明な点がある場合は、{PH1} をご覧ください。"
  },
  "panels/application/AppManifestView.ts | newNoteUrl": {
    "message": "新しいメモ URL"
  },
  "panels/application/AppManifestView.ts | noPlayStoreIdProvided": {
    "message": "Play ストアの ID が提供されていません"
  },
  "panels/application/AppManifestView.ts | noScreenshotsForRicherPWAInstallOnDesktop": {
    "message": "情報が追加された PWA インストール UI はパソコンで使用できません。form_factor が wide に設定されていることを示す 1 つ以上のスクリーンショットを追加してください。"
  },
  "panels/application/AppManifestView.ts | noScreenshotsForRicherPWAInstallOnMobile": {
    "message": "情報が追加された PWA インストール UI はモバイルで使用できません。form_factor が設定されていないか、wide 以外の値に設定されていることを示すスクリーンショットを 1 つ以上追加してください。"
  },
  "panels/application/AppManifestView.ts | noSuppliedIconIsAtLeastSpxSquare": {
    "message": "purpose 属性が設定されていないか any に設定された、PNG、SVG、または WebP 形式の {PH1} 平方ピクセル以上のアイコンが提供されていません。"
  },
  "panels/application/AppManifestView.ts | note": {
    "message": "注:"
  },
  "panels/application/AppManifestView.ts | orientation": {
    "message": "向き"
  },
  "panels/application/AppManifestView.ts | pageDoesNotWorkOffline": {
    "message": "ページがオフラインに対応していません"
  },
  "panels/application/AppManifestView.ts | pageDoesNotWorkOfflineThePage": {
    "message": "ページがオフラインに対応していません。Chrome 93 以降、インストール可能となる条件が変わり、このサイトはインストール可能と見なされなくなります。詳しくは、{PH1} をご覧ください。"
  },
  "panels/application/AppManifestView.ts | pageHasNoManifestLinkUrl": {
    "message": "ページにマニフェスト <link> URL がありません"
  },
  "panels/application/AppManifestView.ts | pageIsLoadedInAnIncognitoWindow": {
    "message": "ページがシークレット ウィンドウで読み込まれます"
  },
  "panels/application/AppManifestView.ts | pageIsNotLoadedInTheMainFrame": {
    "message": "ページがメインフレームに読み込まれません"
  },
  "panels/application/AppManifestView.ts | pageIsNotServedFromASecureOrigin": {
    "message": "ページが安全な提供元から配信されていません"
  },
  "panels/application/AppManifestView.ts | platform": {
    "message": "プラットフォーム"
  },
  "panels/application/AppManifestView.ts | preferrelatedapplicationsIsOnly": {
    "message": "Android 上の Chrome の Beta チャンネルと Stable チャンネルでサポートされるのは「prefer_related_applications」のみです。"
  },
  "panels/application/AppManifestView.ts | presentation": {
    "message": "プレゼンテーション"
  },
  "panels/application/AppManifestView.ts | protocolHandlers": {
    "message": "プロトコル ハンドラ"
  },
  "panels/application/AppManifestView.ts | sSDoesNotSpecifyItsSizeInThe": {
    "message": "{PH1} {PH2} のサイズがマニフェストで指定されていません"
  },
  "panels/application/AppManifestView.ts | sSFailedToLoad": {
    "message": "{PH1} {PH2} 読み込みに失敗しました"
  },
  "panels/application/AppManifestView.ts | sSHeightDoesNotComplyWithRatioRequirement": {
    "message": "{PH1}（{PH2}）の高さは幅の 2.3 倍以下にしてください"
  },
  "panels/application/AppManifestView.ts | sSShouldHaveSquareIcon": {
    "message": "ほとんどのオペレーティング システムに正方形アイコンが必要です。配列に 1 つ以上の正方形アイコンを含めてください。"
  },
  "panels/application/AppManifestView.ts | sSShouldSpecifyItsSizeAs": {
    "message": "{PH1} {PH2} サイズを [width]x[height] として指定する必要があります"
  },
  "panels/application/AppManifestView.ts | sSSizeShouldBeAtLeast320": {
    "message": "{PH1} {PH2} サイズは 320×320 以上にしてください"
  },
  "panels/application/AppManifestView.ts | sSSizeShouldBeAtMost3840": {
    "message": "{PH1} {PH2} のサイズは 3,840 × 3,840 以上にしてください"
  },
  "panels/application/AppManifestView.ts | sSWidthDoesNotComplyWithRatioRequirement": {
    "message": "{PH1}（{PH2}）の幅は高さの 2.3 倍以下にしてください"
  },
  "panels/application/AppManifestView.ts | sSrcIsNotSet": {
    "message": "{PH1}「src」が設定されていません"
  },
  "panels/application/AppManifestView.ts | sUrlSFailedToParse": {
    "message": "{PH1} URL「{PH2}」を解析できませんでした"
  },
  "panels/application/AppManifestView.ts | screenshot": {
    "message": "スクリーンショット"
  },
  "panels/application/AppManifestView.ts | screenshotPixelSize": {
    "message": "スクリーンショット「{url}」では、最初のサイズとして「any」の代わりにピクセルサイズ「[width]x[height]」を指定する必要があります。"
  },
  "panels/application/AppManifestView.ts | screenshotS": {
    "message": "スクリーンショット #{PH1}"
  },
  "panels/application/AppManifestView.ts | screenshotsMustHaveSameAspectRatio": {
    "message": "同じ form_factor を含むすべてのスクリーンショットは、その form_factor を含む最初のスクリーンショットと同じアスペクト比である必要があります。一部のスクリーンショットは無視されます。"
  },
  "panels/application/AppManifestView.ts | selectWindowControlsOverlayEmulationOs": {
    "message": "ウィンドウ コントロール オーバーレイをエミュレート"
  },
  "panels/application/AppManifestView.ts | shortName": {
    "message": "略称"
  },
  "panels/application/AppManifestView.ts | shortcutS": {
    "message": "ショートカット #{PH1}"
  },
  "panels/application/AppManifestView.ts | shortcutSShouldIncludeAXPixel": {
    "message": "ショートカット #{PH1} には 96×96 ピクセルのアイコンが含まれている必要があります"
  },
  "panels/application/AppManifestView.ts | shortcutsMayBeNotAvailable": {
    "message": "ショートカットの最大数はプラットフォームによって異なります。一部のショートカットは使用できない場合があります。"
  },
  "panels/application/AppManifestView.ts | showOnlyTheMinimumSafeAreaFor": {
    "message": "マスク可能なアイコンの最小セーフエリアのみを表示"
  },
  "panels/application/AppManifestView.ts | startUrl": {
    "message": "開始 URL"
  },
  "panels/application/AppManifestView.ts | theAppIsAlreadyInstalled": {
    "message": "このアプリはすでにインストールされています"
  },
  "panels/application/AppManifestView.ts | thePlayStoreAppUrlAndPlayStoreId": {
    "message": "Play ストア アプリの URL と Play ストアの ID が一致しません"
  },
  "panels/application/AppManifestView.ts | theSpecifiedApplicationPlatform": {
    "message": "指定されたアプリ プラットフォームは Android でサポートされていません"
  },
  "panels/application/AppManifestView.ts | themeColor": {
    "message": "テーマの色"
  },
  "panels/application/AppManifestView.ts | tooManyScreenshotsForDesktop": {
    "message": "パソコンに表示されるスクリーンショットは最大 8 枚です。残りの要素は無視されます。"
  },
  "panels/application/AppManifestView.ts | tooManyScreenshotsForMobile": {
    "message": "モバイルで表示されるスクリーンショットは最大 5 枚です。残りは無視されます。"
  },
  "panels/application/AppManifestView.ts | url": {
    "message": "URL"
  },
  "panels/application/AppManifestView.ts | wcoFound": {
    "message": "Chrome で {PH3} の {PH2} フィールドの {PH1} 値を検出しました。"
  },
  "panels/application/AppManifestView.ts | wcoNeedHelpReadMore": {
    "message": "サポートが必要ですか？{PH1} をご覧ください。"
  },
  "panels/application/AppManifestView.ts | wcoNotFound": {
    "message": "Window Controls Overlay API を使用してアプリのタイトルバーをカスタマイズするには、マニフェストで {PH1} を定義します。"
  },
  "panels/application/AppManifestView.ts | windowControlsOverlay": {
    "message": "ウィンドウ コントロール オーバーレイ"
  },
  "panels/application/ApplicationPanelSidebar.ts | appManifest": {
    "message": "アプリ マニフェスト"
  },
  "panels/application/ApplicationPanelSidebar.ts | application": {
    "message": "アプリケーション"
  },
  "panels/application/ApplicationPanelSidebar.ts | applicationSidebarPanel": {
    "message": "アプリケーション パネルのサイドバー"
  },
  "panels/application/ApplicationPanelSidebar.ts | backgroundServices": {
    "message": "バックグラウンド サービス"
  },
  "panels/application/ApplicationPanelSidebar.ts | beforeInvokeAlert": {
    "message": "{PH1}: 呼び出すと、マニフェストのこのセクションまでスクロールします"
  },
  "panels/application/ApplicationPanelSidebar.ts | clear": {
    "message": "消去"
  },
  "panels/application/ApplicationPanelSidebar.ts | cookies": {
    "message": "Cookie"
  },
  "panels/application/ApplicationPanelSidebar.ts | cookiesUsedByFramesFromS": {
    "message": "{PH1} からのフレームで使用されている Cookie"
  },
  "panels/application/ApplicationPanelSidebar.ts | documentNotAvailable": {
    "message": "利用可能なドキュメントはありません"
  },
  "panels/application/ApplicationPanelSidebar.ts | frames": {
    "message": "フレーム"
  },
  "panels/application/ApplicationPanelSidebar.ts | indexeddb": {
    "message": "IndexedDB"
  },
  "panels/application/ApplicationPanelSidebar.ts | keyPathS": {
    "message": "キーパス: {PH1}"
  },
  "panels/application/ApplicationPanelSidebar.ts | localFiles": {
    "message": "ローカル ファイル"
  },
  "panels/application/ApplicationPanelSidebar.ts | localStorage": {
    "message": "ローカル ストレージ"
  },
  "panels/application/ApplicationPanelSidebar.ts | manifest": {
    "message": "マニフェスト"
  },
  "panels/application/ApplicationPanelSidebar.ts | noManifestDetected": {
    "message": "マニフェストが検出されませんでした"
  },
  "panels/application/ApplicationPanelSidebar.ts | onInvokeAlert": {
    "message": "{PH1} までスクロールしました"
  },
  "panels/application/ApplicationPanelSidebar.ts | onInvokeManifestAlert": {
    "message": "マニフェスト: 呼び出すと、マニフェストの上部までスクロールします"
  },
  "panels/application/ApplicationPanelSidebar.ts | openedWindows": {
    "message": "開いているウィンドウ"
  },
  "panels/application/ApplicationPanelSidebar.ts | refreshIndexeddb": {
    "message": "IndexedDB を更新"
  },
  "panels/application/ApplicationPanelSidebar.ts | sessionStorage": {
    "message": "セッション ストレージ"
  },
  "panels/application/ApplicationPanelSidebar.ts | storage": {
    "message": "ストレージ"
  },
  "panels/application/ApplicationPanelSidebar.ts | theContentOfThisDocumentHasBeen": {
    "message": "このドキュメントのコンテンツは、「document.write()」を介して動的に生成されています。"
  },
  "panels/application/ApplicationPanelSidebar.ts | thirdPartyPhaseout": {
    "message": "サードパーティ Cookie の段階的廃止により、{PH1} からの Cookie がブロックされた可能性があります。"
  },
  "panels/application/ApplicationPanelSidebar.ts | versionS": {
    "message": "バージョン: {PH1}"
  },
  "panels/application/ApplicationPanelSidebar.ts | versionSEmpty": {
    "message": "バージョン: {PH1}（空白）"
  },
  "panels/application/ApplicationPanelSidebar.ts | webSql": {
    "message": "ウェブ SQL"
  },
  "panels/application/ApplicationPanelSidebar.ts | webWorkers": {
    "message": "ウェブワーカー"
  },
  "panels/application/ApplicationPanelSidebar.ts | windowWithoutTitle": {
    "message": "タイトルなしのウィンドウ"
  },
  "panels/application/ApplicationPanelSidebar.ts | worker": {
    "message": "ワーカー"
  },
  "panels/application/BackForwardCacheTreeElement.ts | backForwardCache": {
    "message": "バックフォワード キャッシュ"
  },
  "panels/application/BackgroundServiceView.ts | backgroundFetch": {
    "message": "バックグラウンド フェッチ"
  },
  "panels/application/BackgroundServiceView.ts | backgroundServices": {
    "message": "バックグラウンド サービス"
  },
  "panels/application/BackgroundServiceView.ts | backgroundSync": {
    "message": "バックグラウンド同期"
  },
  "panels/application/BackgroundServiceView.ts | clear": {
    "message": "消去"
  },
  "panels/application/BackgroundServiceView.ts | clickTheRecordButtonSOrHitSTo": {
    "message": "記録ボタン {PH1} をクリックするか {PH2} を押すと、記録が開始されます。"
  },
  "panels/application/BackgroundServiceView.ts | devtoolsWillRecordAllSActivity": {
    "message": "DevTools を終了しても、すべての {PH1} アクティビティが最大 3 日間記録されます。"
  },
  "panels/application/BackgroundServiceView.ts | empty": {
    "message": "なし"
  },
  "panels/application/BackgroundServiceView.ts | event": {
    "message": "イベント"
  },
  "panels/application/BackgroundServiceView.ts | instanceId": {
    "message": "インスタンス ID"
  },
  "panels/application/BackgroundServiceView.ts | learnMore": {
    "message": "詳細"
  },
  "panels/application/BackgroundServiceView.ts | noMetadataForThisEvent": {
    "message": "このイベントのメタデータはありません"
  },
  "panels/application/BackgroundServiceView.ts | notifications": {
    "message": "通知"
  },
  "panels/application/BackgroundServiceView.ts | origin": {
    "message": "オリジン"
  },
  "panels/application/BackgroundServiceView.ts | paymentHandler": {
    "message": "支払いハンドラ"
  },
  "panels/application/BackgroundServiceView.ts | periodicBackgroundSync": {
    "message": "定期的なバックグラウンド同期"
  },
  "panels/application/BackgroundServiceView.ts | pushMessaging": {
    "message": "プッシュ メッセージング"
  },
  "panels/application/BackgroundServiceView.ts | recordingSActivity": {
    "message": "{PH1} アクティビティを記録しています..."
  },
  "panels/application/BackgroundServiceView.ts | saveEvents": {
    "message": "イベントを保存"
  },
  "panels/application/BackgroundServiceView.ts | selectAnEntryToViewMetadata": {
    "message": "メタデータを表示するエントリを選択してください"
  },
  "panels/application/BackgroundServiceView.ts | showEventsForOtherStorageKeys": {
    "message": "他のストレージ パーティションのイベントを表示する"
  },
  "panels/application/BackgroundServiceView.ts | showEventsFromOtherDomains": {
    "message": "他のドメインのイベントを表示"
  },
  "panels/application/BackgroundServiceView.ts | startRecordingEvents": {
    "message": "イベントの記録を開始"
  },
  "panels/application/BackgroundServiceView.ts | stopRecordingEvents": {
    "message": "イベントの録画を停止"
  },
  "panels/application/BackgroundServiceView.ts | storageKey": {
    "message": "ストレージキー"
  },
  "panels/application/BackgroundServiceView.ts | swScope": {
    "message": "Service Worker のスコープ"
  },
  "panels/application/BackgroundServiceView.ts | timestamp": {
    "message": "タイムスタンプ"
  },
  "panels/application/BounceTrackingMitigationsTreeElement.ts | bounceTrackingMitigations": {
    "message": "バウンス トラッキング対策"
  },
  "panels/application/CookieItemsView.ts | clearAllCookies": {
    "message": "すべての Cookie を削除する"
  },
  "panels/application/CookieItemsView.ts | clearFilteredCookies": {
    "message": "フィルタ済み Cookie を消去"
  },
  "panels/application/CookieItemsView.ts | cookies": {
    "message": "Cookie"
  },
  "panels/application/CookieItemsView.ts | numberOfCookiesShownInTableS": {
    "message": "テーブルに表示されている Cookie の数: {PH1}"
  },
  "panels/application/CookieItemsView.ts | onlyShowCookiesWhichHaveAn": {
    "message": "関連する問題がある Cookie のみ表示"
  },
  "panels/application/CookieItemsView.ts | onlyShowCookiesWithAnIssue": {
    "message": "問題のある Cookie のみを表示"
  },
  "panels/application/CookieItemsView.ts | selectACookieToPreviewItsValue": {
    "message": "値をプレビューする Cookie を選択します"
  },
  "panels/application/CookieItemsView.ts | showUrlDecoded": {
    "message": "デコードされた URL を表示する"
  },
  "panels/application/DOMStorageItemsView.ts | domStorage": {
    "message": "DOM ストレージ"
  },
  "panels/application/DOMStorageItemsView.ts | domStorageItemDeleted": {
    "message": "ストレージのアイテムが削除されました。"
  },
  "panels/application/DOMStorageItemsView.ts | domStorageItems": {
    "message": "DOM ストレージのアイテム"
  },
  "panels/application/DOMStorageItemsView.ts | domStorageItemsCleared": {
    "message": "DOM ストレージのアイテムを消去しました"
  },
  "panels/application/DOMStorageItemsView.ts | domStorageNumberEntries": {
    "message": "表に表示されているエントリの数: {PH1}"
  },
  "panels/application/DOMStorageItemsView.ts | key": {
    "message": "キー"
  },
  "panels/application/DOMStorageItemsView.ts | selectAValueToPreview": {
    "message": "プレビューする値を選択してください"
  },
  "panels/application/DOMStorageItemsView.ts | value": {
    "message": "値"
  },
  "panels/application/DatabaseModel.ts | anUnexpectedErrorSOccurred": {
    "message": "予期しないエラー {PH1} が発生しました。"
  },
  "panels/application/DatabaseModel.ts | databaseNoLongerHasExpected": {
    "message": "データベースのバージョンが、想定されるバージョンではなくなりました。"
  },
  "panels/application/DatabaseQueryView.ts | databaseQuery": {
    "message": "データベース クエリ"
  },
  "panels/application/DatabaseQueryView.ts | queryS": {
    "message": "クエリ: {PH1}"
  },
  "panels/application/DatabaseTableView.ts | anErrorOccurredTryingToreadTheS": {
    "message": "「{PH1}」テーブルの読み込み中にエラーが発生しました。"
  },
  "panels/application/DatabaseTableView.ts | database": {
    "message": "データベース"
  },
  "panels/application/DatabaseTableView.ts | refresh": {
    "message": "更新"
  },
  "panels/application/DatabaseTableView.ts | theStableIsEmpty": {
    "message": "「{PH1}」テーブルは空です。"
  },
  "panels/application/DatabaseTableView.ts | visibleColumns": {
    "message": "表示される項目"
  },
  "panels/application/IndexedDBViews.ts | clearObjectStore": {
    "message": "オブジェクト ストアを消去します"
  },
  "panels/application/IndexedDBViews.ts | collapse": {
    "message": "折りたたむ"
  },
  "panels/application/IndexedDBViews.ts | dataMayBeStale": {
    "message": "データが最新でない可能性があります"
  },
  "panels/application/IndexedDBViews.ts | deleteDatabase": {
    "message": "データベースを削除"
  },
  "panels/application/IndexedDBViews.ts | deleteSelected": {
    "message": "選択した項目を削除"
  },
  "panels/application/IndexedDBViews.ts | expandRecursively": {
    "message": "再帰的に展開"
  },
  "panels/application/IndexedDBViews.ts | idb": {
    "message": "IDB"
  },
  "panels/application/IndexedDBViews.ts | indexedDb": {
    "message": "インデックス登録済み DB"
  },
  "panels/application/IndexedDBViews.ts | keyGeneratorValueS": {
    "message": "キー生成ツールの値: {PH1}"
  },
  "panels/application/IndexedDBViews.ts | keyPath": {
    "message": "キーパス: "
  },
  "panels/application/IndexedDBViews.ts | keyString": {
    "message": "キー"
  },
  "panels/application/IndexedDBViews.ts | objectStores": {
    "message": "オブジェクト記憶領域"
  },
  "panels/application/IndexedDBViews.ts | pleaseConfirmDeleteOfSDatabase": {
    "message": "「{PH1}」データベースの削除を確認してください。"
  },
  "panels/application/IndexedDBViews.ts | primaryKey": {
    "message": "主キー"
  },
  "panels/application/IndexedDBViews.ts | refresh": {
    "message": "更新"
  },
  "panels/application/IndexedDBViews.ts | refreshDatabase": {
    "message": "データベースを更新"
  },
  "panels/application/IndexedDBViews.ts | showNextPage": {
    "message": "次のページを表示"
  },
  "panels/application/IndexedDBViews.ts | showPreviousPage": {
    "message": "前のページを表示"
  },
  "panels/application/IndexedDBViews.ts | someEntriesMayHaveBeenModified": {
    "message": "一部のエントリが変更されている可能性があります"
  },
  "panels/application/IndexedDBViews.ts | startFromKey": {
    "message": "キーから開始"
  },
  "panels/application/IndexedDBViews.ts | totalEntriesS": {
    "message": "合計エントリ数: {PH1}"
  },
  "panels/application/IndexedDBViews.ts | valueString": {
    "message": "値"
  },
  "panels/application/IndexedDBViews.ts | version": {
    "message": "バージョン"
  },
  "panels/application/InterestGroupStorageView.ts | clickToDisplayBody": {
    "message": "インタレスト グループ イベントをクリックすると、そのグループの現在の状態が表示されます"
  },
  "panels/application/InterestGroupStorageView.ts | noDataAvailable": {
    "message": "選択したインタレスト グループについて表示できる情報はありません。ブラウザでグループの情報が記録されていない可能性があります。"
  },
  "panels/application/InterestGroupTreeElement.ts | interestGroups": {
    "message": "インタレスト グループ"
  },
  "panels/application/OpenedWindowDetailsView.ts | accessToOpener": {
    "message": "オープナーへのアクセス"
  },
  "panels/application/OpenedWindowDetailsView.ts | clickToRevealInElementsPanel": {
    "message": "クリックして要素パネルに表示"
  },
  "panels/application/OpenedWindowDetailsView.ts | closed": {
    "message": "閉"
  },
  "panels/application/OpenedWindowDetailsView.ts | crossoriginEmbedderPolicy": {
    "message": "クロスオリジンの埋め込みポリシー"
  },
  "panels/application/OpenedWindowDetailsView.ts | document": {
    "message": "ドキュメント"
  },
  "panels/application/OpenedWindowDetailsView.ts | no": {
    "message": "なし"
  },
  "panels/application/OpenedWindowDetailsView.ts | openerFrame": {
    "message": "オープナー フレーム"
  },
  "panels/application/OpenedWindowDetailsView.ts | reportingTo": {
    "message": "報告先:"
  },
  "panels/application/OpenedWindowDetailsView.ts | security": {
    "message": "セキュリティ"
  },
  "panels/application/OpenedWindowDetailsView.ts | securityIsolation": {
    "message": "セキュリティと隔離"
  },
  "panels/application/OpenedWindowDetailsView.ts | showsWhetherTheOpenedWindowIs": {
    "message": "開いたウィンドウとそのオープナーが相互にアクセスできるかどうかを示します"
  },
  "panels/application/OpenedWindowDetailsView.ts | type": {
    "message": "タイプ"
  },
  "panels/application/OpenedWindowDetailsView.ts | unknown": {
    "message": "不明"
  },
  "panels/application/OpenedWindowDetailsView.ts | url": {
    "message": "URL"
  },
  "panels/application/OpenedWindowDetailsView.ts | webWorker": {
    "message": "ウェブワーカー"
  },
  "panels/application/OpenedWindowDetailsView.ts | windowWithoutTitle": {
    "message": "タイトルなしのウィンドウ"
  },
  "panels/application/OpenedWindowDetailsView.ts | worker": {
    "message": "ワーカー"
  },
  "panels/application/OpenedWindowDetailsView.ts | yes": {
    "message": "はい"
  },
  "panels/application/PreloadingTreeElement.ts | rules": {
    "message": "ルール"
  },
  "panels/application/PreloadingTreeElement.ts | speculations": {
    "message": "投機"
  },
  "panels/application/PreloadingTreeElement.ts | speculativeLoads": {
    "message": "投機的読み込み"
  },
  "panels/application/ReportingApiReportsView.ts | clickToDisplayBody": {
    "message": "レポートをクリックすると本文が表示されます"
  },
  "panels/application/ReportingApiTreeElement.ts | reportingApi": {
    "message": "Reporting API"
  },
  "panels/application/ResourcesPanel.ts | webSqlDeprecation": {
    "message": "ウェブ SQL は非推奨となっています。非推奨トライアルに参加すると、Chrome 123 まで引き続き使用できます。"
  },
  "panels/application/ServiceWorkerCacheTreeElement.ts | cacheStorage": {
    "message": "キャッシュ ストレージ"
  },
  "panels/application/ServiceWorkerCacheTreeElement.ts | delete": {
    "message": "削除"
  },
  "panels/application/ServiceWorkerCacheTreeElement.ts | refreshCaches": {
    "message": "キャッシュを更新"
  },
  "panels/application/ServiceWorkerCacheViews.ts | cache": {
    "message": "キャッシュ"
  },
  "panels/application/ServiceWorkerCacheViews.ts | deleteSelected": {
    "message": "選択した項目を削除"
  },
  "panels/application/ServiceWorkerCacheViews.ts | filterByPath": {
    "message": "パスでフィルタ"
  },
  "panels/application/ServiceWorkerCacheViews.ts | headers": {
    "message": "ヘッダー"
  },
  "panels/application/ServiceWorkerCacheViews.ts | matchingEntriesS": {
    "message": "一致するエントリ: {PH1}"
  },
  "panels/application/ServiceWorkerCacheViews.ts | name": {
    "message": "名前"
  },
  "panels/application/ServiceWorkerCacheViews.ts | preview": {
    "message": "プレビュー"
  },
  "panels/application/ServiceWorkerCacheViews.ts | refresh": {
    "message": "更新"
  },
  "panels/application/ServiceWorkerCacheViews.ts | selectACacheEntryAboveToPreview": {
    "message": "上のキャッシュ エントリを選択してプレビュー"
  },
  "panels/application/ServiceWorkerCacheViews.ts | serviceWorkerCache": {
    "message": "Service Worker キャッシュ"
  },
  "panels/application/ServiceWorkerCacheViews.ts | timeCached": {
    "message": "キャッシュに保存された時間"
  },
  "panels/application/ServiceWorkerCacheViews.ts | totalEntriesS": {
    "message": "合計エントリ数: {PH1}"
  },
  "panels/application/ServiceWorkerCacheViews.ts | varyHeaderWarning": {
    "message": "⚠️ この項目と一致する場合は ignoreVary を true に設定してください"
  },
  "panels/application/ServiceWorkerUpdateCycleView.ts | endTimeS": {
    "message": "終了時間: {PH1}"
  },
  "panels/application/ServiceWorkerUpdateCycleView.ts | startTimeS": {
    "message": "開始時間: {PH1}"
  },
  "panels/application/ServiceWorkerUpdateCycleView.ts | timeline": {
    "message": "スケジュール"
  },
  "panels/application/ServiceWorkerUpdateCycleView.ts | updateActivity": {
    "message": "アクティビティを更新"
  },
  "panels/application/ServiceWorkerUpdateCycleView.ts | version": {
    "message": "バージョン"
  },
  "panels/application/ServiceWorkersView.ts | bypassForNetwork": {
    "message": "ネットワークのバイパス"
  },
  "panels/application/ServiceWorkersView.ts | bypassTheServiceWorkerAndLoad": {
    "message": "service worker をバイパスしてネットワークからリソースを読み込む"
  },
  "panels/application/ServiceWorkersView.ts | clients": {
    "message": "クライアント"
  },
  "panels/application/ServiceWorkersView.ts | focus": {
    "message": "フォーカス"
  },
  "panels/application/ServiceWorkersView.ts | inspect": {
    "message": "検査"
  },
  "panels/application/ServiceWorkersView.ts | networkRequests": {
    "message": "ネットワーク リクエスト"
  },
  "panels/application/ServiceWorkersView.ts | onPageReloadForceTheService": {
    "message": "ページの再読み込み時、service worker を強制的に更新してアクティブにします"
  },
  "panels/application/ServiceWorkersView.ts | periodicSync": {
    "message": "定期的同期"
  },
  "panels/application/ServiceWorkersView.ts | periodicSyncTag": {
    "message": "定期的同期タグ"
  },
  "panels/application/ServiceWorkersView.ts | pushData": {
    "message": "データを push"
  },
  "panels/application/ServiceWorkersView.ts | pushString": {
    "message": "プッシュ"
  },
  "panels/application/ServiceWorkersView.ts | receivedS": {
    "message": "{PH1} に受信しました"
  },
  "panels/application/ServiceWorkersView.ts | routers": {
    "message": "ルーター"
  },
  "panels/application/ServiceWorkersView.ts | sActivatedAndIsS": {
    "message": "{PH1} が起動され、{PH2} です"
  },
  "panels/application/ServiceWorkersView.ts | sDeleted": {
    "message": "{PH1} - 削除済み"
  },
  "panels/application/ServiceWorkersView.ts | sIsRedundant": {
    "message": "#{PH1} が重複しています"
  },
  "panels/application/ServiceWorkersView.ts | sRegistrationErrors": {
    "message": "登録エラー {PH1} 件"
  },
  "panels/application/ServiceWorkersView.ts | sTryingToInstall": {
    "message": "#{PH1} インストールの試行"
  },
  "panels/application/ServiceWorkersView.ts | sWaitingToActivate": {
    "message": "#{PH1} 件の有効化を待機中"
  },
  "panels/application/ServiceWorkersView.ts | seeAllRegistrations": {
    "message": "登録をすべて表示"
  },
  "panels/application/ServiceWorkersView.ts | serviceWorkerForS": {
    "message": "{PH1} の Service worker"
  },
  "panels/application/ServiceWorkersView.ts | serviceWorkersFromOtherOrigins": {
    "message": "他の提供元からの Service Worker"
  },
  "panels/application/ServiceWorkersView.ts | source": {
    "message": "ソース"
  },
  "panels/application/ServiceWorkersView.ts | startString": {
    "message": "開始"
  },
  "panels/application/ServiceWorkersView.ts | status": {
    "message": "ステータス"
  },
  "panels/application/ServiceWorkersView.ts | stopString": {
    "message": "停止"
  },
  "panels/application/ServiceWorkersView.ts | syncString": {
    "message": "同期"
  },
  "panels/application/ServiceWorkersView.ts | syncTag": {
    "message": "タグの同期"
  },
  "panels/application/ServiceWorkersView.ts | testPushMessageFromDevtools": {
    "message": "DevTools からのプッシュ メッセージをテスト"
  },
  "panels/application/ServiceWorkersView.ts | unregister": {
    "message": "登録解除"
  },
  "panels/application/ServiceWorkersView.ts | unregisterServiceWorker": {
    "message": "Service Worker の登録を解除する"
  },
  "panels/application/ServiceWorkersView.ts | update": {
    "message": "更新"
  },
  "panels/application/ServiceWorkersView.ts | updateCycle": {
    "message": "更新サイクル"
  },
  "panels/application/ServiceWorkersView.ts | updateOnReload": {
    "message": "再読み込み時に更新"
  },
  "panels/application/ServiceWorkersView.ts | workerS": {
    "message": "ワーカー: {PH1}"
  },
  "panels/application/SharedStorageEventsView.ts | clickToDisplayBody": {
    "message": "イベント パラメータを表示するには、共有ストレージ イベントをクリックします。"
  },
  "panels/application/SharedStorageItemsView.ts | key": {
    "message": "キー"
  },
  "panels/application/SharedStorageItemsView.ts | selectAValueToPreview": {
    "message": "プレビューする値を選択してください"
  },
  "panels/application/SharedStorageItemsView.ts | sharedStorage": {
    "message": "共有ストレージ"
  },
  "panels/application/SharedStorageItemsView.ts | sharedStorageFilteredItemsCleared": {
    "message": "共有ストレージのフィルタ済みアイテムが消去されました"
  },
  "panels/application/SharedStorageItemsView.ts | sharedStorageItemDeleted": {
    "message": "ストレージのアイテムが削除されました。"
  },
  "panels/application/SharedStorageItemsView.ts | sharedStorageItemEditCanceled": {
    "message": "ストレージのアイテムの編集がキャンセルされました。"
  },
  "panels/application/SharedStorageItemsView.ts | sharedStorageItemEdited": {
    "message": "ストレージのアイテムが編集されました。"
  },
  "panels/application/SharedStorageItemsView.ts | sharedStorageItems": {
    "message": "共有ストレージのアイテム"
  },
  "panels/application/SharedStorageItemsView.ts | sharedStorageItemsCleared": {
    "message": "共有ストレージのアイテムが消去されました"
  },
  "panels/application/SharedStorageItemsView.ts | sharedStorageNumberEntries": {
    "message": "表に表示されているエントリの数: {PH1}"
  },
  "panels/application/SharedStorageItemsView.ts | value": {
    "message": "値"
  },
  "panels/application/SharedStorageListTreeElement.ts | sharedStorage": {
    "message": "共有ストレージ"
  },
  "panels/application/StorageBucketsTreeElement.ts | storageBuckets": {
    "message": "ストレージ バケット"
  },
  "panels/application/StorageItemsView.ts | clearAll": {
    "message": "すべて消去"
  },
  "panels/application/StorageItemsView.ts | deleteSelected": {
    "message": "選択した項目を削除"
  },
  "panels/application/StorageItemsView.ts | filter": {
    "message": "フィルタ"
  },
  "panels/application/StorageItemsView.ts | refresh": {
    "message": "更新"
  },
  "panels/application/StorageItemsView.ts | refreshedStatus": {
    "message": "表を更新しました"
  },
  "panels/application/StorageView.ts | SiteDataCleared": {
    "message": "サイトデータを消去しました"
  },
  "panels/application/StorageView.ts | application": {
    "message": "アプリケーション"
  },
  "panels/application/StorageView.ts | cacheStorage": {
    "message": "キャッシュ ストレージ"
  },
  "panels/application/StorageView.ts | clearSiteData": {
    "message": "サイトデータを消去"
  },
  "panels/application/StorageView.ts | clearing": {
    "message": "クリアしています..."
  },
  "panels/application/StorageView.ts | cookies": {
    "message": "Cookie"
  },
  "panels/application/StorageView.ts | fileSystem": {
    "message": "ファイル システム"
  },
  "panels/application/StorageView.ts | includingThirdPartyCookies": {
    "message": "サードパーティの Cookie を含む"
  },
  "panels/application/StorageView.ts | indexDB": {
    "message": "IndexedDB"
  },
  "panels/application/StorageView.ts | internalError": {
    "message": "内部エラー"
  },
  "panels/application/StorageView.ts | learnMore": {
    "message": "詳細"
  },
  "panels/application/StorageView.ts | localAndSessionStorage": {
    "message": "ローカル ストレージとセッション ストレージ"
  },
  "panels/application/StorageView.ts | mb": {
    "message": "MB"
  },
  "panels/application/StorageView.ts | numberMustBeNonNegative": {
    "message": "負の数を指定しないでください"
  },
  "panels/application/StorageView.ts | numberMustBeSmaller": {
    "message": "{PH1} より小さい数を指定してください"
  },
  "panels/application/StorageView.ts | other": {
    "message": "その他"
  },
  "panels/application/StorageView.ts | pleaseEnterANumber": {
    "message": "数字を入力してください"
  },
  "panels/application/StorageView.ts | sFailedToLoad": {
    "message": "{PH1}（読み込み失敗）"
  },
  "panels/application/StorageView.ts | serviceWorkers": {
    "message": "Service Worker"
  },
  "panels/application/StorageView.ts | simulateCustomStorage": {
    "message": "カスタムの保存容量をシミュレート"
  },
  "panels/application/StorageView.ts | storageQuotaIsLimitedIn": {
    "message": "シークレット モードで保存容量が制限されています"
  },
  "panels/application/StorageView.ts | storageQuotaUsed": {
    "message": "{PH2} の保存容量のうち {PH1} を使用済み"
  },
  "panels/application/StorageView.ts | storageQuotaUsedWithBytes": {
    "message": "{PH2} バイトの保存容量のうち {PH1} バイトを使用済み"
  },
  "panels/application/StorageView.ts | storageTitle": {
    "message": "ストレージ"
  },
  "panels/application/StorageView.ts | storageUsage": {
    "message": "ストレージ使用量"
  },
  "panels/application/StorageView.ts | storageWithCustomMarker": {
    "message": "{PH1}（カスタム）"
  },
  "panels/application/StorageView.ts | unregisterServiceWorker": {
    "message": "Service Worker の登録を解除"
  },
  "panels/application/StorageView.ts | usage": {
    "message": "使用量"
  },
  "panels/application/StorageView.ts | webSql": {
    "message": "ウェブ SQL"
  },
  "panels/application/TrustTokensTreeElement.ts | trustTokens": {
    "message": "プライベート ステート トークン"
  },
  "panels/application/application-meta.ts | application": {
    "message": "アプリケーション"
  },
  "panels/application/application-meta.ts | clearSiteData": {
    "message": "サイトデータを消去"
  },
  "panels/application/application-meta.ts | clearSiteDataIncludingThirdparty": {
    "message": "サイトデータを消去（サードパーティの Cookie を含む）"
  },
  "panels/application/application-meta.ts | pwa": {
    "message": "PWA"
  },
  "panels/application/application-meta.ts | showApplication": {
    "message": "アプリケーションを表示"
  },
  "panels/application/application-meta.ts | startRecordingEvents": {
    "message": "イベントの記録を開始"
  },
  "panels/application/application-meta.ts | stopRecordingEvents": {
    "message": "イベントの録画を停止"
  },
  "panels/application/components/BackForwardCacheStrings.ts | CookieFlushed": {
    "message": "未定義"
  },
  "panels/application/components/BackForwardCacheStrings.ts | HTTPAuthRequired": {
    "message": "未定義"
  },
  "panels/application/components/BackForwardCacheStrings.ts | HTTPMethodNotGET": {
    "message": "バックフォワード キャッシュの対象になるのは、GET リクエストで読み込まれたページのみです。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | HTTPStatusNotOK": {
    "message": "キャッシュに保存できるのは、ステータス コードが 2XX のページのみです。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | JavaScriptExecution": {
    "message": "キャッシュにある間に JavaScript を実行しようとしていることが検出されました。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | LiveMediaStreamTrack": {
    "message": "未定義"
  },
  "panels/application/components/BackForwardCacheStrings.ts | SmartCard": {
    "message": "未定義"
  },
  "panels/application/components/BackForwardCacheStrings.ts | UnloadHandler": {
    "message": "未定義"
  },
  "panels/application/components/BackForwardCacheStrings.ts | appBanner": {
    "message": "AppBanner をリクエストしたページは、現時点ではバックフォワード キャッシュの対象になりません。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | backForwardCacheDisabled": {
    "message": "バックフォワード キャッシュはフラグにより無効になっています。chrome://flags/#back-forward-cache に移動して、このデバイスでローカルに有効化してください。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | backForwardCacheDisabledByCommandLine": {
    "message": "バックフォワード キャッシュはコマンドラインにより無効になっています。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | backForwardCacheDisabledByLowMemory": {
    "message": "バックフォワード キャッシュはメモリ不足のため無効になっています。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | backForwardCacheDisabledForDelegate": {
    "message": "バックフォワード キャッシュは委任には対応していません。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | backForwardCacheDisabledForPrerender": {
    "message": "バックフォワード キャッシュは事前レンダリングのため無効になっています。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | broadcastChannel": {
    "message": "このページにはリスナーが登録された BroadcastChannel インスタンスがあるため、キャッシュに保存できません。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | cacheControlNoStore": {
    "message": "Cache-Control: no-store ヘッダーがあるページは、バックフォワード キャッシュに保存できません。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | cacheFlushed": {
    "message": "キャッシュは意図的に消去されました。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | cacheLimit": {
    "message": "別のページをキャッシュに保存できるようにするため、ページがキャッシュから削除されました。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | containsPlugins": {
    "message": "プラグインを含むページは、現時点ではバックフォワード キャッシュの対象になりません。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | contentFileChooser": {
    "message": "FileChooser API を使用するページはバックフォワード キャッシュの対象になりません。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | contentFileSystemAccess": {
    "message": "File System Access API を使用するページはバックフォワード キャッシュの対象になりません。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | contentMediaDevicesDispatcherHost": {
    "message": "メディア デバイス ディスパッチャーを使用するページはバックフォワード キャッシュの対象になりません。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | contentMediaPlay": {
    "message": "ページから移動するときにメディア プレーヤーが再生中でした。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | contentMediaSession": {
    "message": "MediaSession API を使用しており再生状態にあるページは、バックフォワード キャッシュの対象になりません。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | contentMediaSessionService": {
    "message": "MediaSession API を使用しておりアクション ハンドラを設定するページは、バックフォワード キャッシュの対象になりません。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | contentScreenReader": {
    "message": "バックフォワード キャッシュはスクリーン リーダーが原因で無効になっています。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | contentSecurityHandler": {
    "message": "SecurityHandler を使用するページはバックフォワード キャッシュの対象になりません。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | contentSerial": {
    "message": "Serial API を使用するページはバックフォワード キャッシュの対象になりません。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | contentWebAuthenticationAPI": {
    "message": "WebAuthentication API を使用するページはバックフォワード キャッシュの対象になりません。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | contentWebBluetooth": {
    "message": "WebBluetooth API を使用するページはバックフォワード キャッシュの対象になりません。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | contentWebUSB": {
    "message": "WebUSB API を使用するページはバックフォワード キャッシュの対象になりません。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | cookieDisabled": {
    "message": "Cache-Control: no-store を使用するページで Cookie が無効になっているため、バックフォワード キャッシュは無効になっています。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | dedicatedWorkerOrWorklet": {
    "message": "専用のワーカーまたはワークレットを使用するページは、現時点ではバックフォワード キャッシュの対象になりません。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | documentLoaded": {
    "message": "読み込みが終了していないドキュメントから移動しました。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | embedderAppBannerManager": {
    "message": "ページから移動するときにアプリバナーが実行中でした。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | embedderChromePasswordManagerClientBindCredentialManager": {
    "message": "ページから移動するときに Chrome パスワード マネージャーが実行中でした。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | embedderDomDistillerSelfDeletingRequestDelegate": {
    "message": "ページから移動するときに DOM 抽出の処理が実行中でした。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | embedderDomDistillerViewerSource": {
    "message": "ページから移動するときに DOM Distiller ビューアが実行中でした。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | embedderExtensionMessaging": {
    "message": "バックフォワード キャッシュは、Messaging API を使用している拡張機能が原因で無効になっています。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | embedderExtensionMessagingForOpenPort": {
    "message": "バックフォワード キャッシュを使用する前に、持続的に接続している拡張機能の接続を終了する必要があります。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | embedderExtensionSentMessageToCachedFrame": {
    "message": "持続的に接続している拡張機能で、バックフォワード キャッシュのフレームへのメッセージ送信が試行されていました。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | embedderExtensions": {
    "message": "バックフォワード キャッシュは拡張機能が原因で無効になっています。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | embedderModalDialog": {
    "message": "ページから移動するときにフォームの再送信や HTTP パスワード ダイアログなどのモーダル ダイアログがページに表示されていました。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | embedderOfflinePage": {
    "message": "ページから移動するときにオフラインのページが表示されていました。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | embedderOomInterventionTabHelper": {
    "message": "ページから移動するときにメモリ不足介入バーが実行中でした。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | embedderPermissionRequestManager": {
    "message": "ページから移動するときに権限リクエストが実行中でした。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | embedderPopupBlockerTabHelper": {
    "message": "ページから移動するときにポップアップ ブロッカーが実行中でした。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | embedderSafeBrowsingThreatDetails": {
    "message": "ページから移動するときにセーフ ブラウジングのメッセージが表示されていました。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | embedderSafeBrowsingTriggeredPopupBlocker": {
    "message": "セーフ ブラウジングでこのページが不正と判断され、ポップアップがブロックされました。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | enteredBackForwardCacheBeforeServiceWorkerHostAdded": {
    "message": "ページがバックフォワード キャッシュにある間に、Service Worker が起動されました。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | errorDocument": {
    "message": "バックフォワード キャッシュはドキュメントのエラーが原因で無効になっています。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | fencedFramesEmbedder": {
    "message": "Fenced Frame を使用しているページは、バックフォワード キャッシュに保存できません。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | foregroundCacheLimit": {
    "message": "別のページをキャッシュに保存できるようにするため、ページがキャッシュから削除されました。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | grantedMediaStreamAccess": {
    "message": "メディア ストリーム アクセスが可能なページは、現時点ではバックフォワード キャッシュの対象になりません。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | haveInnerContents": {
    "message": "ポータルを使用するページは、現時点ではバックフォワード キャッシュの対象になりません。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | idleManager": {
    "message": "IdleManager を使用するページは、現時点ではバックフォワード キャッシュの対象になりません。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | indexedDBConnection": {
    "message": "IndexedDB 接続が開いているページは、現時点ではバックフォワード キャッシュの対象になりません。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | indexedDBEvent": {
    "message": "バックフォワード キャッシュは IndexedDB イベントが原因で無効になっています。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | ineligibleAPI": {
    "message": "対象外の API が使用されました。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | injectedJavascript": {
    "message": "拡張機能によって JavaScript が挿入されるページは、現時点ではバックフォワード キャッシュの対象になりません。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | injectedStyleSheet": {
    "message": "拡張機能によって StyleSheet が挿入されるページは、現時点ではバックフォワード キャッシュの対象になりません。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | internalError": {
    "message": "内部エラーが発生しました。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | jsNetworkRequestReceivedCacheControlNoStoreResource": {
    "message": "一部の JavaScript ネットワーク リクエストで Cache-Control: no-store ヘッダーを含むリソースが返されたため、バックフォワード キャッシュは無効になっています。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | keepaliveRequest": {
    "message": "バックフォワード キャッシュはキープアライブ リクエストが原因で無効になっています。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | keyboardLock": {
    "message": "キーボード ロックを使用するページは、現時点ではバックフォワード キャッシュの対象になりません。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | loading": {
    "message": "読み込みが終了していないページから移動しました。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | mainResourceHasCacheControlNoCache": {
    "message": "Cache-Control: no-cache のメインリソースがあるページは、バックフォワード キャッシュに保存できません。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | mainResourceHasCacheControlNoStore": {
    "message": "Cache-Control: no-store のメインリソースがあるページは、バックフォワード キャッシュに保存できません。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | navigationCancelledWhileRestoring": {
    "message": "ページがバックフォワード キャッシュから復元される前に移動がキャンセルされました。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | networkExceedsBufferLimit": {
    "message": "アクティブなネットワーク接続による受信データが多すぎたため、ページがキャッシュから削除されました。Chrome は、キャッシュに保存されたページが受信できるデータ量に上限を設けています。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | networkRequestDatapipeDrainedAsBytesConsumer": {
    "message": "処理中の fetch() または XHR があるページは、現時点ではバックフォワード キャッシュの対象になりません。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | networkRequestRedirected": {
    "message": "アクティブなネットワーク リクエストにリダイレクトが含まれていたため、ページがバックフォワード キャッシュから削除されました。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | networkRequestTimeout": {
    "message": "ネットワーク接続の時間が長すぎたため、ページがキャッシュから削除されました。Chrome は、キャッシュに保存されたページがデータを受信できる時間に上限を設けています。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | noResponseHead": {
    "message": "有効なレスポンス ヘッダーのないページはバックフォワード キャッシュに保存できません。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | notMainFrame": {
    "message": "メインフレーム以外のフレームで移動が行われました。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | outstandingIndexedDBTransaction": {
    "message": "インデックス登録済み DB のトランザクションが進行中のページは、現時点ではバックフォワード キャッシュの対象になりません。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | outstandingNetworkRequestDirectSocket": {
    "message": "処理中のネットワーク リクエストがあるページは、現時点ではバックフォワード キャッシュの対象になりません。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | outstandingNetworkRequestFetch": {
    "message": "処理中の fetch ネットワーク リクエストがあるページは、現時点ではバックフォワード キャッシュの対象になりません。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | outstandingNetworkRequestOthers": {
    "message": "処理中のネットワーク リクエストがあるページは、現時点ではバックフォワード キャッシュの対象になりません。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | outstandingNetworkRequestXHR": {
    "message": "処理中の XHR ネットワーク リクエストがあるページは、現時点ではバックフォワード キャッシュの対象になりません。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | paymentManager": {
    "message": "PaymentManager を使用するページは、現時点ではバックフォワード キャッシュの対象になりません。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | pictureInPicture": {
    "message": "ピクチャー イン ピクチャーを使用するページは、現時点ではバックフォワード キャッシュの対象になりません。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | portal": {
    "message": "ポータルを使用するページは、現時点ではバックフォワード キャッシュの対象になりません。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | printing": {
    "message": "印刷 UI を表示するページは、現時点ではバックフォワード キャッシュの対象になりません。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | relatedActiveContentsExist": {
    "message": "このページは、window.open() を使用して開かれ、他のタブから参照されているか、ウィンドウが開かれています。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | rendererProcessCrashed": {
    "message": "バックフォワード キャッシュにあるページのレンダラ プロセスに問題が発生しました。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | rendererProcessKilled": {
    "message": "バックフォワード キャッシュにあるページのレンダラ プロセスが強制終了されました。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | requestedAudioCapturePermission": {
    "message": "音声キャプチャの権限をリクエストしたページは、現時点ではバックフォワード キャッシュの対象になりません。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | requestedBackForwardCacheBlockedSensors": {
    "message": "センサーの権限をリクエストしたページは、現時点ではバックフォワード キャッシュの対象になりません。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | requestedBackgroundWorkPermission": {
    "message": "バックグラウンド同期またはバックグラウンド フェッチの権限をリクエストしたページは、現時点ではバックフォワード キャッシュの対象になりません。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | requestedMIDIPermission": {
    "message": "MIDI の権限をリクエストしたページは、現時点ではバックフォワード キャッシュの対象になりません。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | requestedNotificationsPermission": {
    "message": "通知の権限をリクエストしたページは、現時点ではバックフォワード キャッシュの対象になりません。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | requestedStorageAccessGrant": {
    "message": "ストレージ アクセスをリクエストしたページは、現時点ではバックフォワード キャッシュの対象になりません。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | requestedVideoCapturePermission": {
    "message": "動画キャプチャの権限をリクエストしたページは、現時点ではバックフォワード キャッシュの対象になりません。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | schemeNotHTTPOrHTTPS": {
    "message": "キャッシュに保存できるのは、URL スキームが HTTP または HTTPS のページのみです。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | serviceWorkerClaim": {
    "message": "ページがバックフォワード キャッシュにある間に Service Worker に要求されました。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | serviceWorkerPostMessage": {
    "message": "Service Worker がバックフォワード キャッシュ内のページに MessageEvent を送信しようとしました。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | serviceWorkerUnregistration": {
    "message": "ページがバックフォワード キャッシュにある間に Service Worker が登録解除されました。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | serviceWorkerVersionActivation": {
    "message": "Service Worker の起動により、ページがバックフォワード キャッシュから削除されました。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | sessionRestored": {
    "message": "Chrome が再起動し、バックフォワード キャッシュの内容が消去されました。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | sharedWorker": {
    "message": "SharedWorker を使用するページは、現時点ではバックフォワード キャッシュの対象になりません。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | speechRecognizer": {
    "message": "SpeechRecognizer を使用するページは、現時点ではバックフォワード キャッシュの対象になりません。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | speechSynthesis": {
    "message": "SpeechSynthesis を使用するページは、現時点ではバックフォワード キャッシュの対象になりません。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | subframeIsNavigating": {
    "message": "ページ上で iframe が移動を開始し、完了しませんでした。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | subresourceHasCacheControlNoCache": {
    "message": "Cache-Control: no-cache のサブリソースがあるページは、バックフォワード キャッシュに保存できません。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | subresourceHasCacheControlNoStore": {
    "message": "Cache-Control: no-store のサブリソースがあるページは、バックフォワード キャッシュに保存できません。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | timeout": {
    "message": "このページは、バックフォワード キャッシュの最大保存時間を超えたため期限切れとなりました。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | timeoutPuttingInCache": {
    "message": "ページのバックフォワード キャッシュへの保存がタイムアウトしました（長時間実行中の pagehide ハンドラが原因である可能性があります）。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | unloadHandlerExistsInMainFrame": {
    "message": "ページのメインフレームにアンロード ハンドラがあります。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | unloadHandlerExistsInSubFrame": {
    "message": "ページのサブフレームにアンロード ハンドラがあります。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | userAgentOverrideDiffers": {
    "message": "ブラウザによりユーザー エージェント オーバーライド ヘッダーが変更されました。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | wasGrantedMediaAccess": {
    "message": "録画や録音が可能なページは、現時点ではバックフォワード キャッシュの対象になりません。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | webDatabase": {
    "message": "WebDatabase を使用するページは、現時点ではバックフォワード キャッシュの対象になりません。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | webHID": {
    "message": "WebHID を使用するページは、現時点ではバックフォワード キャッシュの対象になりません。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | webLocks": {
    "message": "WebLocks を使用するページは、現時点ではバックフォワード キャッシュの対象になりません。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | webNfc": {
    "message": "WebNFC を使用するページは、現時点ではバックフォワード キャッシュの対象になりません。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | webOTPService": {
    "message": "WebOTPService を使用するページは、現時点ではバックフォワード キャッシュの対象になりません。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | webRTC": {
    "message": "WebRTC を使用するページは、バックフォワード キャッシュに保存できません。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | webRTCSticky": {
    "message": "バックフォワード キャッシュは、WebRTC が使用されているため無効になっています。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | webShare": {
    "message": "WebShare を使用するページは、現時点ではバックフォワード キャッシュの対象になりません。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | webSocket": {
    "message": "WebSocket を使用するページはバックフォワード キャッシュに保存できません。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | webSocketSticky": {
    "message": "バックフォワード キャッシュは、WebSocket が使用されているため無効になっています。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | webTransport": {
    "message": "WebTransport を使用するページはバックフォワード キャッシュに保存できません。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | webTransportSticky": {
    "message": "バックフォワード キャッシュは、WebTransport が使用されているため無効になっています。"
  },
  "panels/application/components/BackForwardCacheStrings.ts | webXR": {
    "message": "WebXR を使用するページは、現時点ではバックフォワード キャッシュの対象になりません。"
  },
  "panels/application/components/BackForwardCacheView.ts | backForwardCacheTitle": {
    "message": "バックフォワード キャッシュ"
  },
  "panels/application/components/BackForwardCacheView.ts | blankURLTitle": {
    "message": "空白の URL [{PH1}]"
  },
  "panels/application/components/BackForwardCacheView.ts | blockingExtensionId": {
    "message": "拡張機能 ID: "
  },
  "panels/application/components/BackForwardCacheView.ts | circumstantial": {
    "message": "対応不可"
  },
  "panels/application/components/BackForwardCacheView.ts | circumstantialExplanation": {
    "message": "これらの原因は対処不可能です。つまり、ページから直接制御できない外部要因によってキャッシュ保存が妨げられました。"
  },
  "panels/application/components/BackForwardCacheView.ts | filesPerIssue": {
    "message": "{n,plural, =1{# 件のファイル}other{# 件のファイル}}"
  },
  "panels/application/components/BackForwardCacheView.ts | framesPerIssue": {
    "message": "{n,plural, =1{# 個のフレーム}other{# 個のフレーム}}"
  },
  "panels/application/components/BackForwardCacheView.ts | framesTitle": {
    "message": "フレーム"
  },
  "panels/application/components/BackForwardCacheView.ts | issuesInMultipleFrames": {
    "message": "{n,plural, =1{{m} 個のフレームで # 件の問題が見つかりました。}other{{m} 個のフレームで # 件の問題が見つかりました。}}"
  },
  "panels/application/components/BackForwardCacheView.ts | issuesInSingleFrame": {
    "message": "{n,plural, =1{1 個のフレームで # 件の問題が見つかりました。}other{1 個のフレームで # 件の問題が見つかりました。}}"
  },
  "panels/application/components/BackForwardCacheView.ts | learnMore": {
    "message": "バックフォワード キャッシュの使用に関する詳細"
  },
  "panels/application/components/BackForwardCacheView.ts | mainFrame": {
    "message": "メインフレーム"
  },
  "panels/application/components/BackForwardCacheView.ts | neverUseUnload": {
    "message": "詳細: アンロード ハンドラを使わないようにします"
  },
  "panels/application/components/BackForwardCacheView.ts | normalNavigation": {
    "message": "バックフォワード キャッシュから配信されませんでした: バックフォワード キャッシュを読み込むには、Chrome の戻る / 進むボタンを使用するか、下のテストボタンを使用して、自動で前後に移動してください。"
  },
  "panels/application/components/BackForwardCacheView.ts | pageSupportNeeded": {
    "message": "対応可能"
  },
  "panels/application/components/BackForwardCacheView.ts | pageSupportNeededExplanation": {
    "message": "これらの原因は対処可能です。つまり、解消してページをバックフォワード キャッシュの対象にできます。"
  },
  "panels/application/components/BackForwardCacheView.ts | restoredFromBFCache": {
    "message": "バックフォワード キャッシュから正常に配信されました。"
  },
  "panels/application/components/BackForwardCacheView.ts | runTest": {
    "message": "バックフォワード キャッシュをテスト"
  },
  "panels/application/components/BackForwardCacheView.ts | runningTest": {
    "message": "テスト実行中"
  },
  "panels/application/components/BackForwardCacheView.ts | supportPending": {
    "message": "サポート保留中"
  },
  "panels/application/components/BackForwardCacheView.ts | supportPendingExplanation": {
    "message": "これらの原因に対する Chrome のサポートは保留中です。つまり、Chrome の将来のバージョンでは、これらはページがバックフォワード キャッシュの対象から外れる原因にはなりません。"
  },
  "panels/application/components/BackForwardCacheView.ts | unavailable": {
    "message": "使用不可"
  },
  "panels/application/components/BackForwardCacheView.ts | unknown": {
    "message": "不明なステータス"
  },
  "panels/application/components/BackForwardCacheView.ts | url": {
    "message": "URL:"
  },
  "panels/application/components/BounceTrackingMitigationsView.ts | bounceTrackingMitigationsTitle": {
    "message": "バウンス トラッキング対策"
  },
  "panels/application/components/BounceTrackingMitigationsView.ts | checkingPotentialTrackers": {
    "message": "バウンス トラッキング サイトの可能性を確認しています。"
  },
  "panels/application/components/BounceTrackingMitigationsView.ts | featureDisabled": {
    "message": "バウンス トラッキング対策は無効になっています。有効にするには、{PH1} のフラグを「削除で無効化」に設定します。"
  },
  "panels/application/components/BounceTrackingMitigationsView.ts | featureFlag": {
    "message": "バウンス トラッキング対策の機能フラグ"
  },
  "panels/application/components/BounceTrackingMitigationsView.ts | forceRun": {
    "message": "強制実行"
  },
  "panels/application/components/BounceTrackingMitigationsView.ts | learnMore": {
    "message": "詳細: バウンス トラッキング対策"
  },
  "panels/application/components/BounceTrackingMitigationsView.ts | noPotentialBounceTrackersIdentified": {
    "message": "バウンス トラッキング サイトの可能性があるどのサイトについても、状態は消去されませんでした。バウンス トラッキング サイトが特定されなかったか、サードパーティ Cookie がブロックされていません。"
  },
  "panels/application/components/BounceTrackingMitigationsView.ts | runningMitigations": {
    "message": "実行中"
  },
  "panels/application/components/BounceTrackingMitigationsView.ts | stateDeletedFor": {
    "message": "次のサイトの状態が削除されました。"
  },
  "panels/application/components/EndpointsGrid.ts | noEndpointsToDisplay": {
    "message": "表示するエンドポイントがありません"
  },
  "panels/application/components/FrameDetailsView.ts | aFrameAncestorIsAnInsecure": {
    "message": "フレームの祖先のコンテキストが安全ではありません"
  },
  "panels/application/components/FrameDetailsView.ts | adStatus": {
    "message": "広告ステータス"
  },
  "panels/application/components/FrameDetailsView.ts | additionalInformation": {
    "message": "詳細情報"
  },
  "panels/application/components/FrameDetailsView.ts | apiAvailability": {
    "message": "API の可用性"
  },
  "panels/application/components/FrameDetailsView.ts | availabilityOfCertainApisDepends": {
    "message": "特定の API を使用できるかは、ドキュメントがクロスオリジン分離されているかどうかによります。"
  },
  "panels/application/components/FrameDetailsView.ts | available": {
    "message": "利用可能"
  },
  "panels/application/components/FrameDetailsView.ts | availableNotTransferable": {
    "message": "利用できますが移行できません"
  },
  "panels/application/components/FrameDetailsView.ts | availableTransferable": {
    "message": "利用可能、転送可能"
  },
  "panels/application/components/FrameDetailsView.ts | child": {
    "message": "子"
  },
  "panels/application/components/FrameDetailsView.ts | childDescription": {
    "message": "このフレームは広告の子フレームと識別されました"
  },
  "panels/application/components/FrameDetailsView.ts | clickToRevealInElementsPanel": {
    "message": "クリックして要素パネルに表示"
  },
  "panels/application/components/FrameDetailsView.ts | clickToRevealInNetworkPanel": {
    "message": "クリックしてネットワーク パネルに表示"
  },
  "panels/application/components/FrameDetailsView.ts | clickToRevealInNetworkPanelMight": {
    "message": "クリックしてネットワーク パネルに表示（ページの再読み込みが必要な場合があります）"
  },
  "panels/application/components/FrameDetailsView.ts | clickToRevealInSourcesPanel": {
    "message": "クリックして [ソース] パネルに表示"
  },
  "panels/application/components/FrameDetailsView.ts | contentSecurityPolicy": {
    "message": "コンテンツ セキュリティ ポリシー（CSP）"
  },
  "panels/application/components/FrameDetailsView.ts | createdByAdScriptExplanation": {
    "message": "このフレームを作成したときの (async) stack に広告スクリプトがありました。フレーム作成時の stack trace で、より詳しい情報を確認できる可能性があります。"
  },
  "panels/application/components/FrameDetailsView.ts | creationStackTrace": {
    "message": "フレーム作成の Stack Trace"
  },
  "panels/application/components/FrameDetailsView.ts | creationStackTraceExplanation": {
    "message": "このフレームはプログラムで作成されました。stack trace でその発生場所を確認できます。"
  },
  "panels/application/components/FrameDetailsView.ts | creatorAdScript": {
    "message": "クリエイター広告スクリプト"
  },
  "panels/application/components/FrameDetailsView.ts | crossoriginIsolated": {
    "message": "クロスオリジン分離"
  },
  "panels/application/components/FrameDetailsView.ts | document": {
    "message": "ドキュメント"
  },
  "panels/application/components/FrameDetailsView.ts | frameId": {
    "message": "フレーム ID"
  },
  "panels/application/components/FrameDetailsView.ts | learnMore": {
    "message": "詳細"
  },
  "panels/application/components/FrameDetailsView.ts | localhostIsAlwaysASecureContext": {
    "message": "Localhost は常に安全なコンテキストです"
  },
  "panels/application/components/FrameDetailsView.ts | matchedBlockingRuleExplanation": {
    "message": "このフレームは、現在（または前の）メイン ドキュメントが広告リソースのため、広告フレームと考えられます。"
  },
  "panels/application/components/FrameDetailsView.ts | measureMemory": {
    "message": "メモリを測定"
  },
  "panels/application/components/FrameDetailsView.ts | no": {
    "message": "なし"
  },
  "panels/application/components/FrameDetailsView.ts | none": {
    "message": "なし"
  },
  "panels/application/components/FrameDetailsView.ts | origin": {
    "message": "オリジン"
  },
  "panels/application/components/FrameDetailsView.ts | originTrialsExplanation": {
    "message": "オリジン トライアルでは、新しい機能や試験運用版の機能をご利用いただけます。"
  },
  "panels/application/components/FrameDetailsView.ts | ownerElement": {
    "message": "所有者要素"
  },
  "panels/application/components/FrameDetailsView.ts | parentIsAdExplanation": {
    "message": "このフレームは、親フレームが広告フレームのため、広告フレームと考えられます。"
  },
  "panels/application/components/FrameDetailsView.ts | reportingTo": {
    "message": "報告先:"
  },
  "panels/application/components/FrameDetailsView.ts | requiresCrossoriginIsolated": {
    "message": "クロスオリジン分離コンテキストが必要です"
  },
  "panels/application/components/FrameDetailsView.ts | root": {
    "message": "ルート"
  },
  "panels/application/components/FrameDetailsView.ts | rootDescription": {
    "message": "このフレームは広告のルートフレームと識別されました"
  },
  "panels/application/components/FrameDetailsView.ts | secureContext": {
    "message": "セキュア コンテキスト"
  },
  "panels/application/components/FrameDetailsView.ts | securityIsolation": {
    "message": "セキュリティと隔離"
  },
  "panels/application/components/FrameDetailsView.ts | sharedarraybufferConstructorIs": {
    "message": "SharedArrayBuffer コンストラクタを利用できます。SABs は postMessage 経由で転送できます"
  },
  "panels/application/components/FrameDetailsView.ts | sharedarraybufferConstructorIsAvailable": {
    "message": "SharedArrayBuffer コンストラクタを利用できますが、SABs は postMessage 経由で転送できません"
  },
  "panels/application/components/FrameDetailsView.ts | theFramesSchemeIsInsecure": {
    "message": "フレームのスキームが安全ではありません"
  },
  "panels/application/components/FrameDetailsView.ts | thePerformanceAPI": {
    "message": "performance.measureUserAgentSpecificMemory() API を使用できます"
  },
  "panels/application/components/FrameDetailsView.ts | thePerformancemeasureuseragentspecificmemory": {
    "message": "performance.measureUserAgentSpecificMemory() API は使用できません"
  },
  "panels/application/components/FrameDetailsView.ts | thisAdditionalDebugging": {
    "message": "「プロトコル モニター」テストが有効であるため、この追加（デバッグ）情報が表示されています。"
  },
  "panels/application/components/FrameDetailsView.ts | transferRequiresCrossoriginIsolatedPermission": {
    "message": "SharedArrayBuffer 転送を使用するには、許可ポリシーを有効にする必要があります:"
  },
  "panels/application/components/FrameDetailsView.ts | unavailable": {
    "message": "使用不可"
  },
  "panels/application/components/FrameDetailsView.ts | unreachableUrl": {
    "message": "アクセスできない URL"
  },
  "panels/application/components/FrameDetailsView.ts | url": {
    "message": "URL"
  },
  "panels/application/components/FrameDetailsView.ts | willRequireCrossoriginIsolated": {
    "message": "今後 ⚠️ にはクロスオリジン分離コンテキストが必要です"
  },
  "panels/application/components/FrameDetailsView.ts | yes": {
    "message": "はい"
  },
  "panels/application/components/InterestGroupAccessGrid.ts | allInterestGroupStorageEvents": {
    "message": "すべてのインタレスト グループのストレージ イベント。"
  },
  "panels/application/components/InterestGroupAccessGrid.ts | eventTime": {
    "message": "イベント時間"
  },
  "panels/application/components/InterestGroupAccessGrid.ts | eventType": {
    "message": "アクセスタイプ"
  },
  "panels/application/components/InterestGroupAccessGrid.ts | groupName": {
    "message": "名前"
  },
  "panels/application/components/InterestGroupAccessGrid.ts | groupOwner": {
    "message": "オーナー"
  },
  "panels/application/components/InterestGroupAccessGrid.ts | noEvents": {
    "message": "インタレスト グループ イベントは記録されていません。"
  },
  "panels/application/components/OriginTrialTreeView.ts | expiryTime": {
    "message": "有効期限"
  },
  "panels/application/components/OriginTrialTreeView.ts | isThirdParty": {
    "message": "サードパーティ"
  },
  "panels/application/components/OriginTrialTreeView.ts | matchSubDomains": {
    "message": "サブドメイン マッチング"
  },
  "panels/application/components/OriginTrialTreeView.ts | noTrialTokens": {
    "message": "トライアル トークンなし"
  },
  "panels/application/components/OriginTrialTreeView.ts | origin": {
    "message": "オリジン"
  },
  "panels/application/components/OriginTrialTreeView.ts | rawTokenText": {
    "message": "未加工トークン"
  },
  "panels/application/components/OriginTrialTreeView.ts | status": {
    "message": "トークンのステータス"
  },
  "panels/application/components/OriginTrialTreeView.ts | token": {
    "message": "トークン"
  },
  "panels/application/components/OriginTrialTreeView.ts | tokens": {
    "message": "{PH1}　件のトークン"
  },
  "panels/application/components/OriginTrialTreeView.ts | trialName": {
    "message": "トライアル名"
  },
  "panels/application/components/OriginTrialTreeView.ts | usageRestriction": {
    "message": "用途の制限"
  },
  "panels/application/components/PermissionsPolicySection.ts | allowedFeatures": {
    "message": "許可された機能"
  },
  "panels/application/components/PermissionsPolicySection.ts | clickToShowHeader": {
    "message": "クリックすると、この機能を無効にする「Permissions-Policy」HTTP ヘッダーのリクエストが表示されます。"
  },
  "panels/application/components/PermissionsPolicySection.ts | clickToShowIframe": {
    "message": "クリックすると、この機能を許可しない最上位の iframe が [要素] パネルに表示されます。"
  },
  "panels/application/components/PermissionsPolicySection.ts | disabledByFencedFrame": {
    "message": "fencedframe 内では無効になっています"
  },
  "panels/application/components/PermissionsPolicySection.ts | disabledByHeader": {
    "message": "「Permissions-Policy」ヘッダーで無効"
  },
  "panels/application/components/PermissionsPolicySection.ts | disabledByIframe": {
    "message": "iframe に「allow」属性がありません"
  },
  "panels/application/components/PermissionsPolicySection.ts | disabledFeatures": {
    "message": "無効な機能"
  },
  "panels/application/components/PermissionsPolicySection.ts | hideDetails": {
    "message": "詳細を非表示"
  },
  "panels/application/components/PermissionsPolicySection.ts | showDetails": {
    "message": "詳細を表示"
  },
  "panels/application/components/ProtocolHandlersView.ts | dropdownLabel": {
    "message": "プロトコル ハンドラを選択"
  },
  "panels/application/components/ProtocolHandlersView.ts | manifest": {
    "message": "マニフェスト"
  },
  "panels/application/components/ProtocolHandlersView.ts | needHelpReadOur": {
    "message": "お困りの場合は、{PH1} をご覧ください。"
  },
  "panels/application/components/ProtocolHandlersView.ts | protocolDetected": {
    "message": "{PH1} で有効なプロトコル ハンドラ登録が見つかりました。インストールされたアプリを使用して、登録済みプロトコルをテストします。"
  },
  "panels/application/components/ProtocolHandlersView.ts | protocolHandlerRegistrations": {
    "message": "PWA の URL プロトコル ハンドラの登録"
  },
  "panels/application/components/ProtocolHandlersView.ts | protocolNotDetected": {
    "message": "{PH1} でプロトコル ハンドラを定義して、アプリのインストール時にカスタム プロトコルのハンドラとしてアプリを登録します。"
  },
  "panels/application/components/ProtocolHandlersView.ts | testProtocol": {
    "message": "プロトコルをテスト"
  },
  "panels/application/components/ProtocolHandlersView.ts | textboxLabel": {
    "message": "プロトコル ハンドラのクエリ パラメータまたはエンドポイント"
  },
  "panels/application/components/ProtocolHandlersView.ts | textboxPlaceholder": {
    "message": "URL を入力"
  },
  "panels/application/components/ReportsGrid.ts | destination": {
    "message": "送信先"
  },
  "panels/application/components/ReportsGrid.ts | generatedAt": {
    "message": "生成日"
  },
  "panels/application/components/ReportsGrid.ts | noReportsToDisplay": {
    "message": "表示するレポートがありません"
  },
  "panels/application/components/ReportsGrid.ts | status": {
    "message": "ステータス"
  },
  "panels/application/components/SharedStorageAccessGrid.ts | allSharedStorageEvents": {
    "message": "このページのすべての共有ストレージ イベント。"
  },
  "panels/application/components/SharedStorageAccessGrid.ts | eventParams": {
    "message": "オプションのイベント パラメータ"
  },
  "panels/application/components/SharedStorageAccessGrid.ts | eventTime": {
    "message": "イベント時間"
  },
  "panels/application/components/SharedStorageAccessGrid.ts | eventType": {
    "message": "アクセスタイプ"
  },
  "panels/application/components/SharedStorageAccessGrid.ts | mainFrameId": {
    "message": "メインフレーム ID"
  },
  "panels/application/components/SharedStorageAccessGrid.ts | noEvents": {
    "message": "共有ストレージ イベントは記録されていません。"
  },
  "panels/application/components/SharedStorageAccessGrid.ts | ownerOrigin": {
    "message": "オーナー オリジン"
  },
  "panels/application/components/SharedStorageAccessGrid.ts | sharedStorage": {
    "message": "共有ストレージ"
  },
  "panels/application/components/SharedStorageMetadataView.ts | budgetExplanation": {
    "message": "このオリジンで 24 時間に許可されている残りのデータ流出量（エントロピー ビット）"
  },
  "panels/application/components/SharedStorageMetadataView.ts | creation": {
    "message": "作成時間"
  },
  "panels/application/components/SharedStorageMetadataView.ts | entropyBudget": {
    "message": "フェンス付きフレームのエントロピー収支"
  },
  "panels/application/components/SharedStorageMetadataView.ts | notYetCreated": {
    "message": "まだ作成されていません"
  },
  "panels/application/components/SharedStorageMetadataView.ts | numEntries": {
    "message": "エントリ数"
  },
  "panels/application/components/SharedStorageMetadataView.ts | resetBudget": {
    "message": "予算をリセット"
  },
  "panels/application/components/SharedStorageMetadataView.ts | sharedStorage": {
    "message": "共有ストレージ"
  },
  "panels/application/components/StackTrace.ts | cannotRenderStackTrace": {
    "message": "スタック トレースをレンダリングできません"
  },
  "panels/application/components/StackTrace.ts | creationStackTrace": {
    "message": "フレーム作成の Stack Trace"
  },
  "panels/application/components/StackTrace.ts | showLess": {
    "message": "一部表示"
  },
  "panels/application/components/StackTrace.ts | showSMoreFrames": {
    "message": "{n,plural, =1{他 # 件のフレームを表示}other{他 # 件のフレームを表示}}"
  },
  "panels/application/components/StorageMetadataView.ts | bucketName": {
    "message": "バケット名"
  },
  "panels/application/components/StorageMetadataView.ts | confirmBucketDeletion": {
    "message": "「{PH1}」バケットを削除しますか？"
  },
  "panels/application/components/StorageMetadataView.ts | defaultBucket": {
    "message": "デフォルトのバケット"
  },
  "panels/application/components/StorageMetadataView.ts | deleteBucket": {
    "message": "バケットを削除"
  },
  "panels/application/components/StorageMetadataView.ts | durability": {
    "message": "耐久性"
  },
  "panels/application/components/StorageMetadataView.ts | expiration": {
    "message": "期限"
  },
  "panels/application/components/StorageMetadataView.ts | isOpaque": {
    "message": "不透明"
  },
  "panels/application/components/StorageMetadataView.ts | isThirdParty": {
    "message": "サードパーティ"
  },
  "panels/application/components/StorageMetadataView.ts | loading": {
    "message": "読み込んでいます…"
  },
  "panels/application/components/StorageMetadataView.ts | no": {
    "message": "×"
  },
  "panels/application/components/StorageMetadataView.ts | none": {
    "message": "なし"
  },
  "panels/application/components/StorageMetadataView.ts | opaque": {
    "message": "（不透明）"
  },
  "panels/application/components/StorageMetadataView.ts | origin": {
    "message": "オリジン"
  },
  "panels/application/components/StorageMetadataView.ts | persistent": {
    "message": "永続的"
  },
  "panels/application/components/StorageMetadataView.ts | quota": {
    "message": "割り当て"
  },
  "panels/application/components/StorageMetadataView.ts | topLevelSite": {
    "message": "トップレベル サイト"
  },
  "panels/application/components/StorageMetadataView.ts | yes": {
    "message": "〇"
  },
  "panels/application/components/StorageMetadataView.ts | yesBecauseAncestorChainHasCrossSite": {
    "message": "はい、系図チェーンにサードパーティのオリジンが含まれています"
  },
  "panels/application/components/StorageMetadataView.ts | yesBecauseKeyIsOpaque": {
    "message": "はい、ストレージキーが不透明です"
  },
  "panels/application/components/StorageMetadataView.ts | yesBecauseOriginNotInTopLevelSite": {
    "message": "はい、オリジンがトップレベル サイト外にあります"
  },
  "panels/application/components/StorageMetadataView.ts | yesBecauseTopLevelIsOpaque": {
    "message": "はい、トップレベル サイトが不透明です"
  },
  "panels/application/components/TrustTokensView.ts | allStoredTrustTokensAvailableIn": {
    "message": "このブラウザ インスタンスで利用可能なすべての保存済みプライベート ステート トークン。"
  },
  "panels/application/components/TrustTokensView.ts | deleteTrustTokens": {
    "message": "{PH1} が発行した保存済みプライベート ステート トークンをすべて削除します。"
  },
  "panels/application/components/TrustTokensView.ts | issuer": {
    "message": "発行元"
  },
  "panels/application/components/TrustTokensView.ts | noTrustTokensStored": {
    "message": "現在保存されているプライベート ステート トークンはありません。"
  },
  "panels/application/components/TrustTokensView.ts | storedTokenCount": {
    "message": "保存済みのトークン数"
  },
  "panels/application/components/TrustTokensView.ts | trustTokens": {
    "message": "プライベート ステート トークン"
  },
  "panels/application/preloading/PreloadingView.ts | filterAllPreloads": {
    "message": "すべての投機的読み込み"
  },
  "panels/application/preloading/PreloadingView.ts | filterFilterByRuleSet": {
    "message": "ルールセットでフィルタ"
  },
  "panels/application/preloading/PreloadingView.ts | statusFailure": {
    "message": "エラー"
  },
  "panels/application/preloading/PreloadingView.ts | statusNotTriggered": {
    "message": "トリガーされていません"
  },
  "panels/application/preloading/PreloadingView.ts | statusPending": {
    "message": "保留中"
  },
  "panels/application/preloading/PreloadingView.ts | statusReady": {
    "message": "準備完了"
  },
  "panels/application/preloading/PreloadingView.ts | statusRunning": {
    "message": "実行中"
  },
  "panels/application/preloading/PreloadingView.ts | statusSuccess": {
    "message": "正常に完了"
  },
  "panels/application/preloading/PreloadingView.ts | validityInvalid": {
    "message": "無効"
  },
  "panels/application/preloading/PreloadingView.ts | validitySomeRulesInvalid": {
    "message": "一部のルールが無効です"
  },
  "panels/application/preloading/PreloadingView.ts | validityValid": {
    "message": "有効"
  },
  "panels/application/preloading/components/MismatchedPreloadingGrid.ts | action": {
    "message": "アクション"
  },
  "panels/application/preloading/components/MismatchedPreloadingGrid.ts | status": {
    "message": "ステータス"
  },
  "panels/application/preloading/components/MismatchedPreloadingGrid.ts | statusFailure": {
    "message": "エラー"
  },
  "panels/application/preloading/components/MismatchedPreloadingGrid.ts | statusNotTriggered": {
    "message": "トリガーされていません"
  },
  "panels/application/preloading/components/MismatchedPreloadingGrid.ts | statusPending": {
    "message": "保留中"
  },
  "panels/application/preloading/components/MismatchedPreloadingGrid.ts | statusReady": {
    "message": "準備完了"
  },
  "panels/application/preloading/components/MismatchedPreloadingGrid.ts | statusRunning": {
    "message": "実行中"
  },
  "panels/application/preloading/components/MismatchedPreloadingGrid.ts | statusSuccess": {
    "message": "正常に完了"
  },
  "panels/application/preloading/components/MismatchedPreloadingGrid.ts | url": {
    "message": "URL"
  },
  "panels/application/preloading/components/PreloadingDetailsReportView.ts | buttonClickToInspect": {
    "message": "クリックして事前レンダリングされたページを検証"
  },
  "panels/application/preloading/components/PreloadingDetailsReportView.ts | buttonClickToRevealRuleSet": {
    "message": "クリックしてルールセットを表示"
  },
  "panels/application/preloading/components/PreloadingDetailsReportView.ts | buttonInspect": {
    "message": "検証"
  },
  "panels/application/preloading/components/PreloadingDetailsReportView.ts | detailedStatusFailure": {
    "message": "投機的読み込みに失敗しました。"
  },
  "panels/application/preloading/components/PreloadingDetailsReportView.ts | detailedStatusNotTriggered": {
    "message": "投機的読み込みの試行はまだトリガーされていません。"
  },
  "panels/application/preloading/components/PreloadingDetailsReportView.ts | detailedStatusPending": {
    "message": "投機的読み込みの試行は可能ですが、保留中です。"
  },
  "panels/application/preloading/components/PreloadingDetailsReportView.ts | detailedStatusReady": {
    "message": "投機的読み込みが終了し、結果が次のナビゲーションに使用できるようになりました。"
  },
  "panels/application/preloading/components/PreloadingDetailsReportView.ts | detailedStatusRunning": {
    "message": "投機的読み込みを行っています。"
  },
  "panels/application/preloading/components/PreloadingDetailsReportView.ts | detailedStatusSuccess": {
    "message": "投機的読み込みが終了し、ナビゲーションに使用されました。"
  },
  "panels/application/preloading/components/PreloadingDetailsReportView.ts | detailsAction": {
    "message": "アクション"
  },
  "panels/application/preloading/components/PreloadingDetailsReportView.ts | detailsDetailedInformation": {
    "message": "詳細情報"
  },
  "panels/application/preloading/components/PreloadingDetailsReportView.ts | detailsFailureReason": {
    "message": "失敗の理由"
  },
  "panels/application/preloading/components/PreloadingDetailsReportView.ts | detailsRuleSet": {
    "message": "ルールセット"
  },
  "panels/application/preloading/components/PreloadingDetailsReportView.ts | detailsStatus": {
    "message": "ステータス"
  },
  "panels/application/preloading/components/PreloadingDetailsReportView.ts | selectAnElementForMoreDetails": {
    "message": "要素を選択すると詳細が表示されます"
  },
  "panels/application/preloading/components/PreloadingDisabledInfobar.ts | descriptionDisabledByBatterySaver": {
    "message": "オペレーティング システムのバッテリー セーバー モードが原因で、投機的読み込みが無効になっています。"
  },
  "panels/application/preloading/components/PreloadingDisabledInfobar.ts | descriptionDisabledByDataSaver": {
    "message": "オペレーティング システムのデータセーバー モードが原因で、投機的読み込みが無効になっています。"
  },
  "panels/application/preloading/components/PreloadingDisabledInfobar.ts | descriptionDisabledByHoldbackPrefetchSpeculationRules": {
    "message": "DevTools が開いているため、プリフェッチが強制的に有効になっています。このブラウザ セッションはパフォーマンスの比較に使用されるホールドバック グループの一部であるため、DevTools を閉じるとプリフェッチは無効になります。"
  },
  "panels/application/preloading/components/PreloadingDisabledInfobar.ts | descriptionDisabledByHoldbackPrerenderSpeculationRules": {
    "message": "DevTools が開いているため、事前レンダリングが強制的に有効になっています。このブラウザ セッションはパフォーマンスの比較に使用されるホールドバック グループの一部であるため、DevTools を閉じると事前レンダリングは無効になります。"
  },
  "panels/application/preloading/components/PreloadingDisabledInfobar.ts | descriptionDisabledByPreference": {
    "message": "ユーザー設定または拡張機能が原因で、投機的読み込みが無効になっています。設定を更新するには、{PH1} に移動してください。投機的読み込みをブロックしている拡張機能を無効にするには、{PH2} に移動してください。"
  },
  "panels/application/preloading/components/PreloadingDisabledInfobar.ts | extensionsSettings": {
    "message": "拡張機能の設定"
  },
  "panels/application/preloading/components/PreloadingDisabledInfobar.ts | footerLearnMore": {
    "message": "詳細"
  },
  "panels/application/preloading/components/PreloadingDisabledInfobar.ts | headerDisabledByBatterySaver": {
    "message": "バッテリー セーバー"
  },
  "panels/application/preloading/components/PreloadingDisabledInfobar.ts | headerDisabledByDataSaver": {
    "message": "データセーバー"
  },
  "panels/application/preloading/components/PreloadingDisabledInfobar.ts | headerDisabledByHoldbackPrefetchSpeculationRules": {
    "message": "プリフェッチは無効でしたが、現在は強制的に有効になっています"
  },
  "panels/application/preloading/components/PreloadingDisabledInfobar.ts | headerDisabledByHoldbackPrerenderSpeculationRules": {
    "message": "事前レンダリングは無効でしたが、現在は強制的に有効になっています"
  },
  "panels/application/preloading/components/PreloadingDisabledInfobar.ts | headerDisabledByPreference": {
    "message": "ユーザー設定または拡張機能"
  },
  "panels/application/preloading/components/PreloadingDisabledInfobar.ts | infobarPreloadingIsDisabled": {
    "message": "投機的読み込みは無効です"
  },
  "panels/application/preloading/components/PreloadingDisabledInfobar.ts | infobarPreloadingIsForceEnabled": {
    "message": "投機的読み込みは強制的に有効化されています"
  },
  "panels/application/preloading/components/PreloadingDisabledInfobar.ts | preloadingPagesSettings": {
    "message": "ページのプリロード設定"
  },
  "panels/application/preloading/components/PreloadingDisabledInfobar.ts | titleReasonsPreventingPreloading": {
    "message": "投機的読み込みが行われない理由"
  },
  "panels/application/preloading/components/PreloadingGrid.ts | action": {
    "message": "アクション"
  },
  "panels/application/preloading/components/PreloadingGrid.ts | ruleSet": {
    "message": "ルールセット"
  },
  "panels/application/preloading/components/PreloadingGrid.ts | status": {
    "message": "ステータス"
  },
  "panels/application/preloading/components/PreloadingMismatchedHeadersGrid.ts | activationNavigationValue": {
    "message": "アクティベーション ナビゲーションの値"
  },
  "panels/application/preloading/components/PreloadingMismatchedHeadersGrid.ts | headerName": {
    "message": "ヘッダー名"
  },
  "panels/application/preloading/components/PreloadingMismatchedHeadersGrid.ts | initialNavigationValue": {
    "message": "最初のナビゲーションの値"
  },
  "panels/application/preloading/components/PreloadingMismatchedHeadersGrid.ts | missing": {
    "message": "（該当なし）"
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchEvictedAfterCandidateRemoved": {
    "message": "開始ページの投機ルールでこの URL のプリフェッチがトリガーされなくなったため、プリフェッチは破棄されました。"
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchEvictedForNewerPrefetch": {
    "message": "開始ページで大量のプリフェッチが実行されていたため、プリフェッチは破棄されました。これは最も古いプリフェッチの 1 つです。"
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchFailedIneligibleRedirect": {
    "message": "プリフェッチがリダイレクトされましたが、リダイレクト URL はプリフェッチの対象となりませんでした。"
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchFailedInvalidRedirect": {
    "message": "プリフェッチはリダイレクトされましたが、リダイレクトで問題が発生しました。"
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchFailedMIMENotSupported": {
    "message": "レスポンスの Content-Type ヘッダーがサポートされていないため、プリフェッチに失敗しました。"
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchFailedNetError": {
    "message": "ネットワーク エラーのため、プリフェッチに失敗しました。"
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchFailedNon2XX": {
    "message": "2xx 以外の HTTP レスポンス ステータス コードのため、プリフェッチに失敗しました。"
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchFailedPerPageLimitExceeded": {
    "message": "開始ページで大量のプリフェッチがすでに実行されていたため、プリフェッチは実行されませんでした。"
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchIneligibleRetryAfter": {
    "message": "オリジンに対する前回のプリフェッチで、まだ経過していない Retry-After ヘッダーを含む HTTP 503 レスポンスが返されました。"
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchIsPrivacyDecoy": {
    "message": "この URL は、オリジンに登録済みの Service Worker またはクロスサイト Cookie があったため、プリフェッチの対象となりませんでした。なお、ユーザーとそのオリジンとの過去の関係を隠すため、プリフェッチはネットワークに送られましたが使用されませんでした。"
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchIsStale": {
    "message": "プリフェッチから使用までの間隔が長すぎたため、プリフェッチは破棄されました。"
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchNotEligibleBatterySaverEnabled": {
    "message": "バッテリー セーバーの設定が有効になっているため、プリフェッチは実行されませんでした。"
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchNotEligibleBrowserContextOffTheRecord": {
    "message": "ブラウザがシークレット モードまたはゲストモードのため、プリフェッチは実行されませんでした。"
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchNotEligibleDataSaverEnabled": {
    "message": "オペレーティング システムがデータセーバー モードのため、プリフェッチは実行されませんでした。"
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchNotEligibleExistingProxy": {
    "message": "この URL は、デフォルトのネットワーク コンテキストではプロキシ サーバーを使用するよう構成されているため、プリフェッチの対象となりません。"
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchNotEligibleHostIsNonUnique": {
    "message": "この URL は、ホストが一意でないため（一般公開されていないルーティング可能な IP アドレス、レジストリで管理されていないホスト名など）、プリフェッチの対象となりませんでしたが、プリフェッチをプロキシ送信する必要がありました。"
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchNotEligibleNonDefaultStoragePartition": {
    "message": "この URL は、デフォルト以外のストレージ パーティションを使用しているため、プリフェッチの対象となりませんでした。"
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchNotEligiblePreloadingDisabled": {
    "message": "投機的読み込みは無効化されているため、プリフェッチは行われませんでした。"
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchNotEligibleSameSiteCrossOriginPrefetchRequiredProxy": {
    "message": "この URL は、デフォルトのネットワーク コンテキストで同一サイトのクロスオリジン プリフェッチ リクエストに対してプリフェッチ プロキシを使用するよう構成できなかったため、プリフェッチの対象となりませんでした。"
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchNotEligibleSchemeIsNotHttps": {
    "message": "この URL は、スキームが https: でないため、プリフェッチの対象となりませんでした。"
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchNotEligibleUserHasCookies": {
    "message": "この URL はクロスサイトのため、プリフェッチの対象となりませんでしたが、ユーザーはこのオリジンの Cookie を保有しています。"
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchNotEligibleUserHasServiceWorker": {
    "message": "この URL は、オリジンに登録済みの Service Worker があり、現在サポートされていないため、プリフェッチの対象となりませんでした。"
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchNotUsedCookiesChanged": {
    "message": "クロスサイト プリフェッチだったためプリフェッチが使用されず、プリフェッチの実行中にその URL の Cookie が追加されたため、プリフェッチ レスポンスが最新ではなくなりました。"
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchNotUsedProbeFailed": {
    "message": "プリフェッチはインターネット サービス プロバイダまたはネットワーク管理者によってブロックされました。"
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchProxyNotAvailable": {
    "message": "プリフェッチ プロキシへの接続を設定しようとしたときに、ネットワーク エラーが発生しました。"
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusActivatedDuringMainFrameNavigation": {
    "message": "事前レンダリングされたページは、開始ページのメインフレーム ナビゲーション時に有効になりました。"
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusActivatedWithAuxiliaryBrowsingContexts": {
    "message": "有効化時に、開始ページへの有効なオープナー参照（現在サポートされていない）を持つ他のウィンドウがあったため、事前レンダリングは使用されませんでした。"
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusActivationFramePolicyNotCompatible": {
    "message": "開始ページのサンドボックス化のフラグまたは許可ポリシーが事前レンダリング ページのものに対応していなかったため、事前レンダリングは使用されませんでした。"
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusActivationNavigationParameterMismatch": {
    "message": "有効化時に、元の事前レンダリング ナビゲーションのリクエスト時とは異なるナビゲーション パラメータ（HTTP ヘッダーなど）が計算されたため、事前レンダリングは使用されませんでした。"
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusActivationUrlHasEffectiveUrl": {
    "message": "有効化時に、通常の URL とは異なる有効な URL（新しいタブページ、ホストされているアプリなど）がナビゲーションに含まれていたため、事前レンダリングは使用されませんでした。"
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusAudioOutputDeviceRequested": {
    "message": "事前レンダリングされたページでリクエストされたオーディオ出力は、現在サポートされていません。"
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusBatterySaverEnabled": {
    "message": "ブラウザによるバッテリー使用量の削減をユーザーがリクエストしたため、事前レンダリングは行われませんでした。"
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusBlockedByClient": {
    "message": "一部のリソースの読み込みがブロックされました。"
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusClientCertRequested": {
    "message": "事前レンダリング ナビゲーションには HTTP クライアント証明書が必要です。"
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusCrossSiteNavigationInInitialNavigation": {
    "message": "クロスサイト URL がターゲットに設定されていたため、事前レンダリング ナビゲーションに失敗しました。"
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusCrossSiteNavigationInMainFrameNavigation": {
    "message": "事前レンダリングされたページは、クロスサイト URL にナビゲーションされました。"
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusCrossSiteRedirectInInitialNavigation": {
    "message": "事前レンダリングされた URL がクロスサイト URL にリダイレクトされたため、事前レンダリング ナビゲーションに失敗しました。"
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusCrossSiteRedirectInMainFrameNavigation": {
    "message": "事前レンダリングされたページは、クロスサイト URL にリダイレクトされる URL にナビゲーションされました。"
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusDataSaverEnabled": {
    "message": "ブラウザによるデータ使用量の削減をユーザーがリクエストしたため、事前レンダリングは行われませんでした。"
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusDownload": {
    "message": "事前レンダリングされたページでダウンロードを開始しようとしましたが、現在ダウンロードはサポートされていません。"
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusHasEffectiveUrl": {
    "message": "通常の URL とは異なる有効な URL（新しいタブページ、ホストされているアプリなど）が含まれているため、開始ページで事前レンダリングを行えません。"
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusInvalidSchemeNavigation": {
    "message": "スキームが http: でも https: でもないため、この URL を事前レンダリングできませんでした。"
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusInvalidSchemeRedirect": {
    "message": "スキームが http: でも https: でもない URL にリダイレクトされたため、事前レンダリング ナビゲーションに失敗しました。"
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusLoginAuthRequested": {
    "message": "事前レンダリング ナビゲーションには HTTP 認証が必要ですが、現在 HTTP 認証はサポートされていません。"
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusLowEndDevice": {
    "message": "このデバイスは事前レンダリングに対応するためのシステムメモリの合計容量が不足しているため、事前レンダリングは行われませんでした。"
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusMainFrameNavigation": {
    "message": "事前レンダリングされたページが自己ナビゲーションした別の URL は、現在サポートされていません。"
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusMaxNumOfRunningEagerPrerendersExceeded": {
    "message": "開始ページですでに多数の事前レンダリングが進行中だったため、先行度が「eager」の事前レンダリングは行われませんでした。これらの事前レンダリングを行えるようにするには、「eager」に関する他の投機ルールを削除してください。"
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusMaxNumOfRunningEmbedderPrerendersExceeded": {
    "message": "開始ページですでに多数の事前レンダリングが進行中だったため、ブラウザがトリガーした事前レンダリングは行われませんでした。"
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusMaxNumOfRunningNonEagerPrerendersExceeded": {
    "message": "新しい「eager」以外の事前レンダリングが開始されたため、古い「eager」以外の事前レンダリング（先行度が「moderate」または「conservative」で、リンクにカーソルを合わせるかクリックすることでトリガーされる）は自動的にキャンセルされました。リンクをもう一度操作すると、再びトリガーできます。"
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusMemoryLimitExceeded": {
    "message": "ブラウザが事前レンダリングのメモリ上限を超えたため、事前レンダリングは行われませんでした。"
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusMemoryPressureAfterTriggered": {
    "message": "ブラウザに重大なメモリ負荷がかかったため、事前レンダリングされたページはアンロードされました。"
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusMemoryPressureOnTrigger": {
    "message": "ブラウザに重大なメモリ負荷がかかっていたため、事前レンダリングは行われませんでした。"
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusMixedContent": {
    "message": "事前レンダリングされたページに、混合コンテンツが含まれていました。"
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusMojoBinderPolicy": {
    "message": "事前レンダリングされたページで、現在サポートされていない、禁止された JavaScript API が使用されました（内部 Mojo インターフェース: {PH1}）。"
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusNavigationBadHttpStatus": {
    "message": "2xx 以外の HTTP レスポンス ステータス コードが原因で事前レンダリング ナビゲーションに失敗しました。"
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusNavigationRequestBlockedByCsp": {
    "message": "事前レンダリング ナビゲーションはコンテンツ セキュリティ ポリシーによってブロックされました。"
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusNavigationRequestNetworkError": {
    "message": "事前レンダリング ナビゲーションでネットワーク エラーが発生しました。"
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusPreloadingDisabled": {
    "message": "ユーザーがブラウザ設定でプリロードを無効にしたため、事前レンダリングは行われませんでした。"
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusPrerenderingDisabledByDevTools": {
    "message": "DevTools を使用して事前レンダリングが無効にされたため、事前レンダリングは実行されませんでした。"
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusPrerenderingUrlHasEffectiveUrl": {
    "message": "通常の URL とは異なる有効な URL（新しいタブページ、ホストされているアプリなど）が含まれているため、事前レンダリング ナビゲーションに失敗しました。"
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusPrimaryMainFrameRendererProcessCrashed": {
    "message": "開始ページで問題が発生しました。"
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusPrimaryMainFrameRendererProcessKilled": {
    "message": "開始ページは強制終了されました。"
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusRedirectedPrerenderingUrlHasEffectiveUrl": {
    "message": "通常の URL とは異なる有効な URL（新しいタブページ、ホストされているアプリなど）にリダイレクトされたため、事前レンダリング ナビゲーションに失敗しました。"
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusRendererProcessCrashed": {
    "message": "事前レンダリングされたページで問題が発生しました。"
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusRendererProcessKilled": {
    "message": "事前レンダリングされたページは強制終了されました。"
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusSameSiteCrossOriginNavigationNotOptInInInitialNavigation": {
    "message": "クロスオリジンの同一サイト URL に移動しましたが、移動先のレスポンスに適切な Supports-Loading-Mode ヘッダーが含まれていなかったため、事前レンダリング ナビゲーションに失敗しました。"
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusSameSiteCrossOriginNavigationNotOptInInMainFrameNavigation": {
    "message": "事前レンダリングされたページは、クロスオリジンの同一サイト URL にナビゲーションされましたが、ナビゲーション先のレスポンスに適切な Supports-Loading-Mode ヘッダーが含まれていませんでした。"
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusSameSiteCrossOriginRedirectNotOptInInInitialNavigation": {
    "message": "事前レンダリングされた URL がクロスオリジンの同一サイト URL にリダイレクトされましたが、リダイレクト先のレスポンスに適切な Supports-Loading-Mode ヘッダーが含まれていなかったため、事前レンダリング ナビゲーションに失敗しました。"
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusSameSiteCrossOriginRedirectNotOptInInMainFrameNavigation": {
    "message": "事前レンダリングされたページは、クロスオリジンの同一サイト URL にリダイレクトされる URL にナビゲーションされましたが、ナビゲーション先のレスポンスに適切な Supports-Loading-Mode ヘッダーが含まれていませんでした。"
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusSpeculationRuleRemoved": {
    "message": "開始ページによって <script type=\"speculationrules\"> から対応する事前レンダリング ルールが削除されたため、事前レンダリングされたページはアンロードされました。"
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusSslCertificateError": {
    "message": "SSL 証明書が無効なため、事前レンダリング ナビゲーションに失敗しました。"
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusTimeoutBackgrounded": {
    "message": "開始ページは長い間バックグラウンドで動作していたため、事前レンダリングされたページは破棄されました。"
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusTriggerBackgrounded": {
    "message": "開始ページはバックグラウンドで動作していたため、事前レンダリングされたページは破棄されました。"
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusUaChangeRequiresReload": {
    "message": "事前レンダリング ナビゲーションでユーザー エージェントが変更されました。"
  },
  "panels/application/preloading/components/PreloadingString.ts | statusFailure": {
    "message": "エラー"
  },
  "panels/application/preloading/components/PreloadingString.ts | statusNotTriggered": {
    "message": "トリガーされていません"
  },
  "panels/application/preloading/components/PreloadingString.ts | statusPending": {
    "message": "保留中"
  },
  "panels/application/preloading/components/PreloadingString.ts | statusReady": {
    "message": "準備完了"
  },
  "panels/application/preloading/components/PreloadingString.ts | statusRunning": {
    "message": "実行中"
  },
  "panels/application/preloading/components/PreloadingString.ts | statusSuccess": {
    "message": "正常に完了"
  },
  "panels/application/preloading/components/RuleSetGrid.ts | buttonClickToRevealInElementsPanel": {
    "message": "クリックして要素パネルに表示"
  },
  "panels/application/preloading/components/RuleSetGrid.ts | buttonClickToRevealInNetworkPanel": {
    "message": "クリックしてネットワーク パネルに表示"
  },
  "panels/application/preloading/components/RuleSetGrid.ts | buttonRevealPreloadsAssociatedWithRuleSet": {
    "message": "このルールセットに関連付けられている投機的読み込みを表示"
  },
  "panels/application/preloading/components/RuleSetGrid.ts | errors": {
    "message": "{errorCount,plural, =1{# 件のエラー}other{# 件のエラー}}"
  },
  "panels/application/preloading/components/RuleSetGrid.ts | ruleSet": {
    "message": "ルールセット"
  },
  "panels/application/preloading/components/RuleSetGrid.ts | status": {
    "message": "ステータス"
  },
  "panels/application/preloading/components/UsedPreloadingView.ts | badgeFailure": {
    "message": "失敗"
  },
  "panels/application/preloading/components/UsedPreloadingView.ts | badgeFailureWithCount": {
    "message": "{n,plural, =1{# 件失敗}other{# 件失敗}}"
  },
  "panels/application/preloading/components/UsedPreloadingView.ts | badgeInProgressWithCount": {
    "message": "{n,plural, =1{# 件読み込み中}other{# 件読み込み中}}"
  },
  "panels/application/preloading/components/UsedPreloadingView.ts | badgeNoSpeculativeLoads": {
    "message": "投機的読み込みなし"
  },
  "panels/application/preloading/components/UsedPreloadingView.ts | badgeNotTriggeredWithCount": {
    "message": "{n,plural, =1{# 件トリガーされませんでした}other{# 件トリガーされませんでした}}"
  },
  "panels/application/preloading/components/UsedPreloadingView.ts | badgeSuccess": {
    "message": "成功"
  },
  "panels/application/preloading/components/UsedPreloadingView.ts | badgeSuccessWithCount": {
    "message": "{n,plural, =1{# 件成功}other{# 件成功}}"
  },
  "panels/application/preloading/components/UsedPreloadingView.ts | currentURL": {
    "message": "現在の URL"
  },
  "panels/application/preloading/components/UsedPreloadingView.ts | detailsFailureReason": {
    "message": "失敗の理由"
  },
  "panels/application/preloading/components/UsedPreloadingView.ts | downgradedPrefetchUsed": {
    "message": "開始ページはこのページの URL の事前レンダリングを試みました。事前レンダリングには失敗しましたが、結果のレスポンス ボディはプリフェッチとして使用されました。"
  },
  "panels/application/preloading/components/UsedPreloadingView.ts | learnMore": {
    "message": "詳細: developer.chrome.com での投機的読み込み"
  },
  "panels/application/preloading/components/UsedPreloadingView.ts | mismatchedHeadersDetail": {
    "message": "HTTP リクエスト ヘッダーが一致しません"
  },
  "panels/application/preloading/components/UsedPreloadingView.ts | noPreloads": {
    "message": "開始ページはこのページの URL の投機的読み込みを試行しませんでした。"
  },
  "panels/application/preloading/components/UsedPreloadingView.ts | prefetchFailed": {
    "message": "開始ページはこのページの URL のプリフェッチを試みましたが、プリフェッチに失敗したため、代わりに完全なナビゲーションが実行されました。"
  },
  "panels/application/preloading/components/UsedPreloadingView.ts | prefetchUsed": {
    "message": "このページはプリフェッチされました。"
  },
  "panels/application/preloading/components/UsedPreloadingView.ts | preloadedURLs": {
    "message": "開始ページで投機的に読み込まれる URL"
  },
  "panels/application/preloading/components/UsedPreloadingView.ts | prerenderFailed": {
    "message": "開始ページはこのページの URL の事前レンダリングを試みましたが、事前レンダリングに失敗したため、代わりに完全なナビゲーションが実行されました。"
  },
  "panels/application/preloading/components/UsedPreloadingView.ts | prerenderUsed": {
    "message": "このページは事前レンダリングされました。"
  },
  "panels/application/preloading/components/UsedPreloadingView.ts | speculationsInitiatedByThisPage": {
    "message": "このページで行われた投機的読み込み"
  },
  "panels/application/preloading/components/UsedPreloadingView.ts | speculativeLoadingStatusForThisPage": {
    "message": "このページの投機的読み込みステータス"
  },
  "panels/application/preloading/components/UsedPreloadingView.ts | viewAllRules": {
    "message": "すべての投機ルールを表示"
  },
  "panels/application/preloading/components/UsedPreloadingView.ts | viewAllSpeculations": {
    "message": "すべての投機的読み込みを表示"
  },
  "panels/autofill/AutofillView.ts | addressPreview": {
    "message": "住所のプレビュー"
  },
  "panels/autofill/AutofillView.ts | attr": {
    "message": "attr"
  },
  "panels/autofill/AutofillView.ts | autoShow": {
    "message": "自動入力でパネルを開く"
  },
  "panels/autofill/AutofillView.ts | autocompleteAttribute": {
    "message": "autocomplete 属性"
  },
  "panels/autofill/AutofillView.ts | formField": {
    "message": "フォームの項目"
  },
  "panels/autofill/AutofillView.ts | formInspector": {
    "message": "フォーム インスペクタ"
  },
  "panels/autofill/AutofillView.ts | heur": {
    "message": "heur"
  },
  "panels/autofill/AutofillView.ts | inferredByHeuristics": {
    "message": "ヒューリスティックにより推定"
  },
  "panels/autofill/AutofillView.ts | noDataAvailable": {
    "message": "自動入力イベントは検出されませんでした"
  },
  "panels/autofill/AutofillView.ts | predictedAutofillValue": {
    "message": "自動入力の予測値"
  },
  "panels/autofill/AutofillView.ts | value": {
    "message": "値"
  },
  "panels/autofill/autofill-meta.ts | autofill": {
    "message": "自動入力"
  },
  "panels/autofill/autofill-meta.ts | showAutofill": {
    "message": "自動入力を表示"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | animation": {
    "message": "アニメーション"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | auctionWorklet": {
    "message": "広告オークションのワークレット"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | breakpointHit": {
    "message": "ブレークポイントに達しました"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | canvas": {
    "message": "描画キャンバス"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | clipboard": {
    "message": "クリップボード"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | control": {
    "message": "管理"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | device": {
    "message": "デバイス"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | domMutation": {
    "message": "DOM ミューテーション"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | dragDrop": {
    "message": "ドラッグ / ドロップ"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | geolocation": {
    "message": "位置情報"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | keyboard": {
    "message": "キーボード"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | load": {
    "message": "読み込み"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | media": {
    "message": "メディア"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | mouse": {
    "message": "マウス"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | notification": {
    "message": "通知"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | parse": {
    "message": "解析"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | pictureinpicture": {
    "message": "ピクチャー イン ピクチャー"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | pointer": {
    "message": "ポインタ"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | script": {
    "message": "スクリプト"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | sharedStorageWorklet": {
    "message": "共有ストレージ ワークレット"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | timer": {
    "message": "タイマー"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | touch": {
    "message": "タップ"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | trustedTypeViolations": {
    "message": "Trusted Type 違反"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | webaudio": {
    "message": "WebAudio"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | window": {
    "message": "ウィンドウ"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | worker": {
    "message": "Worker"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | xhr": {
    "message": "XHR"
  },
  "panels/browser_debugger/DOMBreakpointsSidebarPane.ts | attributeModified": {
    "message": "属性が変更されました"
  },
  "panels/browser_debugger/DOMBreakpointsSidebarPane.ts | breakOn": {
    "message": "ブレークポイントの位置"
  },
  "panels/browser_debugger/DOMBreakpointsSidebarPane.ts | breakpointHit": {
    "message": "ブレークポイントに達しました"
  },
  "panels/browser_debugger/DOMBreakpointsSidebarPane.ts | breakpointRemoved": {
    "message": "ブレークポイントを削除しました"
  },
  "panels/browser_debugger/DOMBreakpointsSidebarPane.ts | breakpointSet": {
    "message": "ブレークポイントを設定しました"
  },
  "panels/browser_debugger/DOMBreakpointsSidebarPane.ts | checked": {
    "message": "オン"
  },
  "panels/browser_debugger/DOMBreakpointsSidebarPane.ts | domBreakpointsList": {
    "message": "DOM ブレークポイント リスト"
  },
  "panels/browser_debugger/DOMBreakpointsSidebarPane.ts | noBreakpoints": {
    "message": "ブレークポイントがありません"
  },
  "panels/browser_debugger/DOMBreakpointsSidebarPane.ts | nodeRemoved": {
    "message": "ノードが削除されました"
  },
  "panels/browser_debugger/DOMBreakpointsSidebarPane.ts | removeAllDomBreakpoints": {
    "message": "DOM ブレークポイントをすべて削除"
  },
  "panels/browser_debugger/DOMBreakpointsSidebarPane.ts | removeBreakpoint": {
    "message": "ブレークポイントを削除"
  },
  "panels/browser_debugger/DOMBreakpointsSidebarPane.ts | revealDomNodeInElementsPanel": {
    "message": "要素パネルに DOM ノードを表示"
  },
  "panels/browser_debugger/DOMBreakpointsSidebarPane.ts | sBreakpointHit": {
    "message": "{PH1} ブレークポイントに達しました"
  },
  "panels/browser_debugger/DOMBreakpointsSidebarPane.ts | sS": {
    "message": "{PH1}: {PH2}"
  },
  "panels/browser_debugger/DOMBreakpointsSidebarPane.ts | sSS": {
    "message": "{PH1}: {PH2}、{PH3}"
  },
  "panels/browser_debugger/DOMBreakpointsSidebarPane.ts | subtreeModified": {
    "message": "サブツリーが変更されました"
  },
  "panels/browser_debugger/DOMBreakpointsSidebarPane.ts | unchecked": {
    "message": "オフ"
  },
  "panels/browser_debugger/XHRBreakpointsSidebarPane.ts | addBreakpoint": {
    "message": "ブレークポイントを追加"
  },
  "panels/browser_debugger/XHRBreakpointsSidebarPane.ts | addXhrfetchBreakpoint": {
    "message": "XHR / フェッチ ブレークポイントを追加"
  },
  "panels/browser_debugger/XHRBreakpointsSidebarPane.ts | anyXhrOrFetch": {
    "message": "任意の XHR またはフェッチ"
  },
  "panels/browser_debugger/XHRBreakpointsSidebarPane.ts | breakWhenUrlContains": {
    "message": "URL に次の文字が含まれている場合、中断します:"
  },
  "panels/browser_debugger/XHRBreakpointsSidebarPane.ts | breakpointHit": {
    "message": "ブレークポイントに達しました"
  },
  "panels/browser_debugger/XHRBreakpointsSidebarPane.ts | noBreakpoints": {
    "message": "ブレークポイントがありません"
  },
  "panels/browser_debugger/XHRBreakpointsSidebarPane.ts | removeAllBreakpoints": {
    "message": "ブレークポイントをすべて削除"
  },
  "panels/browser_debugger/XHRBreakpointsSidebarPane.ts | removeBreakpoint": {
    "message": "ブレークポイントを削除"
  },
  "panels/browser_debugger/XHRBreakpointsSidebarPane.ts | urlBreakpoint": {
    "message": "URL ブレークポイント"
  },
  "panels/browser_debugger/XHRBreakpointsSidebarPane.ts | urlContainsS": {
    "message": "URL に「{PH1}」が含まれています"
  },
  "panels/browser_debugger/XHRBreakpointsSidebarPane.ts | xhrfetchBreakpoints": {
    "message": "XHR / フェッチ ブレークポイント"
  },
  "panels/browser_debugger/browser_debugger-meta.ts | contentScripts": {
    "message": "コンテンツ スクリプト"
  },
  "panels/browser_debugger/browser_debugger-meta.ts | cspViolationBreakpoints": {
    "message": "CSP 違反ブレークポイント"
  },
  "panels/browser_debugger/browser_debugger-meta.ts | domBreakpoints": {
    "message": "DOM ブレークポイント"
  },
  "panels/browser_debugger/browser_debugger-meta.ts | eventListenerBreakpoints": {
    "message": "イベント リスナー ブレークポイント"
  },
  "panels/browser_debugger/browser_debugger-meta.ts | globalListeners": {
    "message": "グローバル リスナー"
  },
  "panels/browser_debugger/browser_debugger-meta.ts | overrides": {
    "message": "オーバーライド"
  },
  "panels/browser_debugger/browser_debugger-meta.ts | page": {
    "message": "ページ"
  },
  "panels/browser_debugger/browser_debugger-meta.ts | refreshGlobalListeners": {
    "message": "グローバル リスナーを更新"
  },
  "panels/browser_debugger/browser_debugger-meta.ts | showContentScripts": {
    "message": "コンテンツ スクリプトを表示"
  },
  "panels/browser_debugger/browser_debugger-meta.ts | showCspViolationBreakpoints": {
    "message": "CSP 違反ブレークポイントを表示"
  },
  "panels/browser_debugger/browser_debugger-meta.ts | showDomBreakpoints": {
    "message": "DOM ブレークポイントを表示"
  },
  "panels/browser_debugger/browser_debugger-meta.ts | showEventListenerBreakpoints": {
    "message": "イベント リスナー ブレークポイントを表示"
  },
  "panels/browser_debugger/browser_debugger-meta.ts | showGlobalListeners": {
    "message": "グローバル リスナーを表示"
  },
  "panels/browser_debugger/browser_debugger-meta.ts | showOverrides": {
    "message": "オーバーライドを表示"
  },
  "panels/browser_debugger/browser_debugger-meta.ts | showPage": {
    "message": "ページを表示"
  },
  "panels/browser_debugger/browser_debugger-meta.ts | showXhrfetchBreakpoints": {
    "message": "XHR / フェッチ ブレークポイントを表示"
  },
  "panels/browser_debugger/browser_debugger-meta.ts | xhrfetchBreakpoints": {
    "message": "XHR / フェッチ ブレークポイント"
  },
  "panels/changes/ChangesSidebar.ts | sFromSourceMap": {
    "message": "{PH1}（ソースマップから）"
  },
  "panels/changes/ChangesView.ts | binaryData": {
    "message": "バイナリデータ"
  },
  "panels/changes/ChangesView.ts | copy": {
    "message": "コピー"
  },
  "panels/changes/ChangesView.ts | noChanges": {
    "message": "変更はありません"
  },
  "panels/changes/ChangesView.ts | sDeletions": {
    "message": "{n,plural, =1{# 行削除（-）}other{# 行削除（-）}}"
  },
  "panels/changes/ChangesView.ts | sInsertions": {
    "message": "{n,plural, =1{# 件の挿入（+）}other{# 件の挿入（+）}}"
  },
  "panels/changes/changes-meta.ts | changes": {
    "message": "変更"
  },
  "panels/changes/changes-meta.ts | copyAllChangesFromCurrentFile": {
    "message": "現在のファイルから変更をすべてコピー"
  },
  "panels/changes/changes-meta.ts | revertAllChangesToCurrentFile": {
    "message": "すべての変更を現在のファイルに戻す"
  },
  "panels/changes/changes-meta.ts | showChanges": {
    "message": "変更を表示"
  },
  "panels/console/ConsoleContextSelector.ts | extension": {
    "message": "拡張機能"
  },
  "panels/console/ConsoleContextSelector.ts | javascriptContextNotSelected": {
    "message": "JavaScript コンテキスト: 選択されていません"
  },
  "panels/console/ConsoleContextSelector.ts | javascriptContextS": {
    "message": "JavaScript コンテキスト: {PH1}"
  },
  "panels/console/ConsolePinPane.ts | evaluateAllowingSideEffects": {
    "message": "評価（副反応の許容）"
  },
  "panels/console/ConsolePinPane.ts | expression": {
    "message": "式"
  },
  "panels/console/ConsolePinPane.ts | liveExpressionEditor": {
    "message": "ライブ式エディタ"
  },
  "panels/console/ConsolePinPane.ts | notAvailable": {
    "message": "利用できません"
  },
  "panels/console/ConsolePinPane.ts | removeAllExpressions": {
    "message": "すべての式を削除"
  },
  "panels/console/ConsolePinPane.ts | removeBlankExpression": {
    "message": "空の式を削除"
  },
  "panels/console/ConsolePinPane.ts | removeExpression": {
    "message": "式を削除"
  },
  "panels/console/ConsolePinPane.ts | removeExpressionS": {
    "message": "式を削除: {PH1}"
  },
  "panels/console/ConsolePrompt.ts | allowPasting": {
    "message": "貼り付けを許可"
  },
  "panels/console/ConsolePrompt.ts | consolePrompt": {
    "message": "コンソールのプロンプト"
  },
  "panels/console/ConsolePrompt.ts | selfXssWarning": {
    "message": "警告: 理解できないコードや自分で確認していないコードを DevTools コンソールに貼り付けないでください。攻撃者に個人情報を盗まれたり、パソコンを乗っ取られたりする恐れがあります。貼り付けを許可するには、下に「{PH1}」と入力してください。"
  },
  "panels/console/ConsoleSidebar.ts | dErrors": {
    "message": "{n,plural, =0{エラーなし}=1{# 件のエラー}other{# 件のエラー}}"
  },
  "panels/console/ConsoleSidebar.ts | dInfo": {
    "message": "{n,plural, =0{情報なし}=1{# 件の情報}other{# 件の情報}}"
  },
  "panels/console/ConsoleSidebar.ts | dMessages": {
    "message": "{n,plural, =0{メッセージなし}=1{# 件のメッセージ}other{# 件のメッセージ}}"
  },
  "panels/console/ConsoleSidebar.ts | dUserMessages": {
    "message": "{n,plural, =0{ユーザー メッセージなし}=1{# 件のユーザー メッセージ}other{# 件のユーザー メッセージ}}"
  },
  "panels/console/ConsoleSidebar.ts | dVerbose": {
    "message": "{n,plural, =0{詳細メッセージなし}=1{# 件の詳細メッセージ}other{# 件の詳細メッセージ}}"
  },
  "panels/console/ConsoleSidebar.ts | dWarnings": {
    "message": "{n,plural, =0{警告なし}=1{# 件の警告}other{# 件の警告}}"
  },
  "panels/console/ConsoleSidebar.ts | other": {
    "message": "<その他>"
  },
  "panels/console/ConsoleView.ts | allLevels": {
    "message": "すべてのレベル"
  },
  "panels/console/ConsoleView.ts | autocompleteFromHistory": {
    "message": "履歴からオートコンプリート"
  },
  "panels/console/ConsoleView.ts | consoleCleared": {
    "message": "コンソールが消去されました"
  },
  "panels/console/ConsoleView.ts | consoleSettings": {
    "message": "コンソールの設定"
  },
  "panels/console/ConsoleView.ts | consoleSidebarHidden": {
    "message": "コンソールのサイドバーが非表示になっています"
  },
  "panels/console/ConsoleView.ts | consoleSidebarShown": {
    "message": "コンソールのサイドバーが表示されています"
  },
  "panels/console/ConsoleView.ts | copyVisibleStyledSelection": {
    "message": "表示されているスタイル設定済みの選択項目をコピー"
  },
  "panels/console/ConsoleView.ts | customLevels": {
    "message": "カスタムレベル"
  },
  "panels/console/ConsoleView.ts | default": {
    "message": "デフォルト"
  },
  "panels/console/ConsoleView.ts | defaultLevels": {
    "message": "デフォルト レベル"
  },
  "panels/console/ConsoleView.ts | doNotClearLogOnPageReload": {
    "message": "ページの再読み込み / 移動時にログを消去しないてください"
  },
  "panels/console/ConsoleView.ts | eagerlyEvaluateTextInThePrompt": {
    "message": "プロンプト内のテキストを先行評価します"
  },
  "panels/console/ConsoleView.ts | egEventdCdnUrlacom": {
    "message": "例: /eventd/ -cdn url:a.com"
  },
  "panels/console/ConsoleView.ts | errors": {
    "message": "エラー"
  },
  "panels/console/ConsoleView.ts | filter": {
    "message": "フィルタ"
  },
  "panels/console/ConsoleView.ts | filteredMessagesInConsole": {
    "message": "コンソールのメッセージ数 {PH1} 件"
  },
  "panels/console/ConsoleView.ts | findStringInLogs": {
    "message": "ログで文字列を検索"
  },
  "panels/console/ConsoleView.ts | groupSimilarMessagesInConsole": {
    "message": "コンソールの類似するメッセージをまとめる"
  },
  "panels/console/ConsoleView.ts | hideAll": {
    "message": "すべて非表示"
  },
  "panels/console/ConsoleView.ts | hideConsoleSidebar": {
    "message": "コンソール サイドバーを非表示にします"
  },
  "panels/console/ConsoleView.ts | hideMessagesFromS": {
    "message": "{PH1} からのメッセージを表示しない"
  },
  "panels/console/ConsoleView.ts | hideNetwork": {
    "message": "ネットワークを非表示"
  },
  "panels/console/ConsoleView.ts | info": {
    "message": "情報"
  },
  "panels/console/ConsoleView.ts | issueToolbarClickToGoToTheIssuesTab": {
    "message": "クリックすると [問題] タブに移動します"
  },
  "panels/console/ConsoleView.ts | issueToolbarClickToView": {
    "message": "クリックすると {issueEnumeration}が表示されます"
  },
  "panels/console/ConsoleView.ts | issueToolbarTooltipGeneral": {
    "message": "一部の問題は、コンソール メッセージを生成しなくなりますが、[問題] タブに表示されます。"
  },
  "panels/console/ConsoleView.ts | issuesWithColon": {
    "message": "{n,plural, =0{問題なし}=1{# 件の問題:}other{# 件の問題:}}"
  },
  "panels/console/ConsoleView.ts | logLevelS": {
    "message": "ログレベル: {PH1}"
  },
  "panels/console/ConsoleView.ts | logLevels": {
    "message": "ログレベル"
  },
  "panels/console/ConsoleView.ts | logXMLHttpRequests": {
    "message": "XMLHttpRequests をログ"
  },
  "panels/console/ConsoleView.ts | onlyShowMessagesFromTheCurrentContext": {
    "message": "現在のコンテキストのメッセージのみを表示（top、iframe、worker、extension）"
  },
  "panels/console/ConsoleView.ts | overriddenByFilterSidebar": {
    "message": "フィルタ サイドバーでオーバーライド"
  },
  "panels/console/ConsoleView.ts | preserveLog": {
    "message": "ログを保持"
  },
  "panels/console/ConsoleView.ts | replayXhr": {
    "message": "XHR をリプレイ"
  },
  "panels/console/ConsoleView.ts | sHidden": {
    "message": "{n,plural, =1{# 件の非表示}other{# 件の非表示}}"
  },
  "panels/console/ConsoleView.ts | sOnly": {
    "message": "{PH1} のみ"
  },
  "panels/console/ConsoleView.ts | saveAs": {
    "message": "名前を付けて保存..."
  },
  "panels/console/ConsoleView.ts | searching": {
    "message": "検索しています…"
  },
  "panels/console/ConsoleView.ts | selectedContextOnly": {
    "message": "選択したコンテンツのみ"
  },
  "panels/console/ConsoleView.ts | showConsoleSidebar": {
    "message": "コンソール サイドバーを表示します"
  },
  "panels/console/ConsoleView.ts | showCorsErrorsInConsole": {
    "message": "コンソールに CORS エラーを表示する"
  },
  "panels/console/ConsoleView.ts | treatEvaluationAsUserActivation": {
    "message": "評価をユーザー アクティベーションとして扱う"
  },
  "panels/console/ConsoleView.ts | verbose": {
    "message": "詳細"
  },
  "panels/console/ConsoleView.ts | warnings": {
    "message": "警告"
  },
  "panels/console/ConsoleView.ts | writingFile": {
    "message": "ファイルを書き込んでいます…"
  },
  "panels/console/ConsoleViewMessage.ts | Mxx": {
    "message": " M<XX>"
  },
  "panels/console/ConsoleViewMessage.ts | assertionFailed": {
    "message": "アサーションが失敗しました: "
  },
  "panels/console/ConsoleViewMessage.ts | attribute": {
    "message": "<attribute>"
  },
  "panels/console/ConsoleViewMessage.ts | clearAllMessagesWithS": {
    "message": "{PH1} でメッセージをすべて消去"
  },
  "panels/console/ConsoleViewMessage.ts | cndBreakpoint": {
    "message": "条件付きブレークポイント"
  },
  "panels/console/ConsoleViewMessage.ts | console": {
    "message": "コンソール"
  },
  "panels/console/ConsoleViewMessage.ts | consoleWasCleared": {
    "message": "コンソールを消去しました"
  },
  "panels/console/ConsoleViewMessage.ts | consoleclearWasPreventedDueTo": {
    "message": "console.clear() は [ログを保持] によってブロックされました"
  },
  "panels/console/ConsoleViewMessage.ts | deprecationS": {
    "message": "[Deprecation] {PH1}"
  },
  "panels/console/ConsoleViewMessage.ts | error": {
    "message": "エラー"
  },
  "panels/console/ConsoleViewMessage.ts | errorS": {
    "message": "{n,plural, =1{エラーが # 回繰り返されました}other{エラーが # 回繰り返されました}}"
  },
  "panels/console/ConsoleViewMessage.ts | exception": {
    "message": "<例外>"
  },
  "panels/console/ConsoleViewMessage.ts | explainThisError": {
    "message": "このエラーの説明"
  },
  "panels/console/ConsoleViewMessage.ts | explainThisMessage": {
    "message": "このメッセージの説明"
  },
  "panels/console/ConsoleViewMessage.ts | explainThisWarning": {
    "message": "この警告の説明"
  },
  "panels/console/ConsoleViewMessage.ts | functionWasResolvedFromBound": {
    "message": "バインドされた関数から関数が解決されました。"
  },
  "panels/console/ConsoleViewMessage.ts | index": {
    "message": "（インデックス）"
  },
  "panels/console/ConsoleViewMessage.ts | interventionS": {
    "message": "[Intervention] {PH1}"
  },
  "panels/console/ConsoleViewMessage.ts | logpoint": {
    "message": "ログポイント"
  },
  "panels/console/ConsoleViewMessage.ts | repeatS": {
    "message": "{n,plural, =1{# 回繰り返されました}other{# 回繰り返されました}}"
  },
  "panels/console/ConsoleViewMessage.ts | someEvent": {
    "message": "<数件の> イベント"
  },
  "panels/console/ConsoleViewMessage.ts | stackMessageCollapsed": {
    "message": "スタック テーブルが閉じられています"
  },
  "panels/console/ConsoleViewMessage.ts | stackMessageExpanded": {
    "message": "スタック テーブルが展開されています"
  },
  "panels/console/ConsoleViewMessage.ts | thisValueWasEvaluatedUponFirst": {
    "message": "この値は最初の展開時に評価されました。その後変更されている可能性があります。"
  },
  "panels/console/ConsoleViewMessage.ts | thisValueWillNotBeCollectedUntil": {
    "message": "コンソールが消去されるまで、この値は収集されません。"
  },
  "panels/console/ConsoleViewMessage.ts | tookNms": {
    "message": "<N> ミリ秒かかりました"
  },
  "panels/console/ConsoleViewMessage.ts | url": {
    "message": "<URL>"
  },
  "panels/console/ConsoleViewMessage.ts | value": {
    "message": "値"
  },
  "panels/console/ConsoleViewMessage.ts | violationS": {
    "message": "[Violation] {PH1}"
  },
  "panels/console/ConsoleViewMessage.ts | warning": {
    "message": "警告"
  },
  "panels/console/ConsoleViewMessage.ts | warningS": {
    "message": "{n,plural, =1{警告が # 回繰り返されました}other{警告が # 回繰り返されました}}"
  },
  "panels/console/console-meta.ts | autocompleteFromHistory": {
    "message": "履歴からオートコンプリート"
  },
  "panels/console/console-meta.ts | autocompleteOnEnter": {
    "message": "Enter キーでオートコンプリートの候補を採用する"
  },
  "panels/console/console-meta.ts | clearConsole": {
    "message": "コンソールを消去"
  },
  "panels/console/console-meta.ts | clearConsoleHistory": {
    "message": "コンソール履歴を消去"
  },
  "panels/console/console-meta.ts | collapseConsoleTraceMessagesByDefault": {
    "message": "console.trace() メッセージを自動展開しない"
  },
  "panels/console/console-meta.ts | console": {
    "message": "コンソール"
  },
  "panels/console/console-meta.ts | createLiveExpression": {
    "message": "ライブ式を作成"
  },
  "panels/console/console-meta.ts | doNotAutocompleteFromHistory": {
    "message": "履歴に基づいてオートコンプリートしない"
  },
  "panels/console/console-meta.ts | doNotAutocompleteOnEnter": {
    "message": "Enter キーでオートコンプリートの候補を採用しない"
  },
  "panels/console/console-meta.ts | doNotEagerlyEvaluateConsole": {
    "message": "コンソールのプロンプト テキストを積極的に評価しない"
  },
  "panels/console/console-meta.ts | doNotGroupSimilarMessagesIn": {
    "message": "コンソールで類似したメッセージをグループ化しない"
  },
  "panels/console/console-meta.ts | doNotShowCorsErrorsIn": {
    "message": "コンソールに CORS エラーを表示しない"
  },
  "panels/console/console-meta.ts | doNotTreatEvaluationAsUser": {
    "message": "評価をユーザー アクティベーションとして扱わない"
  },
  "panels/console/console-meta.ts | eagerEvaluation": {
    "message": "先行評価"
  },
  "panels/console/console-meta.ts | eagerlyEvaluateConsolePromptText": {
    "message": "コンソールのプロンプト テキストを積極的に評価"
  },
  "panels/console/console-meta.ts | evaluateTriggersUserActivation": {
    "message": "コード評価をユーザー アクションとして扱わない"
  },
  "panels/console/console-meta.ts | expandConsoleTraceMessagesByDefault": {
    "message": "console.trace() メッセージを自動展開"
  },
  "panels/console/console-meta.ts | groupSimilarMessagesInConsole": {
    "message": "コンソールの類似するメッセージをまとめる"
  },
  "panels/console/console-meta.ts | hideNetworkMessages": {
    "message": "ネットワーク メッセージを非表示"
  },
  "panels/console/console-meta.ts | hideTimestamps": {
    "message": "タイムスタンプを非表示"
  },
  "panels/console/console-meta.ts | logXmlhttprequests": {
    "message": "XMLHttpRequests をログ"
  },
  "panels/console/console-meta.ts | onlyShowMessagesFromTheCurrent": {
    "message": "現在のコンテキストのメッセージのみを表示（top、iframe、worker、extension）"
  },
  "panels/console/console-meta.ts | selectedContextOnly": {
    "message": "選択したコンテンツのみ"
  },
  "panels/console/console-meta.ts | showConsole": {
    "message": "コンソールを表示"
  },
  "panels/console/console-meta.ts | showCorsErrorsInConsole": {
    "message": "コンソールに CORS エラーを表示する"
  },
  "panels/console/console-meta.ts | showMessagesFromAllContexts": {
    "message": "すべてのコンテキストからのメッセージを表示"
  },
  "panels/console/console-meta.ts | showNetworkMessages": {
    "message": "ネットワーク メッセージを表示"
  },
  "panels/console/console-meta.ts | showTimestamps": {
    "message": "タイムスタンプを表示"
  },
  "panels/console/console-meta.ts | toggleConsole": {
    "message": "コンソールを切り替える"
  },
  "panels/console/console-meta.ts | treatEvaluationAsUserActivation": {
    "message": "評価をユーザー アクティベーションとして扱う"
  },
  "panels/console_counters/WarningErrorCounter.ts | openConsoleToViewS": {
    "message": "コンソールを開いて {PH1} を表示"
  },
  "panels/console_counters/WarningErrorCounter.ts | openIssuesToView": {
    "message": "{n,plural, =1{[問題] を開いて # 件の問題を表示:}other{[問題] を開いて # 件の問題を表示:}}"
  },
  "panels/console_counters/WarningErrorCounter.ts | sErrors": {
    "message": "{n,plural, =1{# 件のエラー}other{# 件のエラー}}"
  },
  "panels/console_counters/WarningErrorCounter.ts | sWarnings": {
    "message": "{n,plural, =1{# 件の警告}other{# 件の警告}}"
  },
  "panels/coverage/CoverageListView.ts | codeCoverage": {
    "message": "コード カバレッジ"
  },
  "panels/coverage/CoverageListView.ts | css": {
    "message": "CSS"
  },
  "panels/coverage/CoverageListView.ts | jsCoverageWithPerBlock": {
    "message": "ブロック単位での JS カバレッジ: JavaScript のブロックが 1 つ実行されると、そのブロックはカバーされたものとしてマークされます。"
  },
  "panels/coverage/CoverageListView.ts | jsCoverageWithPerFunction": {
    "message": "関数単位での JS カバレッジ: 関数が 1 つ実行されると、全関数がカバーされたものとしてマークされます。"
  },
  "panels/coverage/CoverageListView.ts | jsPerBlock": {
    "message": "JS（ブロックあたり）"
  },
  "panels/coverage/CoverageListView.ts | jsPerFunction": {
    "message": "JS（関数ごと）"
  },
  "panels/coverage/CoverageListView.ts | sBytes": {
    "message": "{n,plural, =1{# バイト}other{# バイト}}"
  },
  "panels/coverage/CoverageListView.ts | sBytesS": {
    "message": "{n,plural, =1{# バイト、{percentage}}other{# バイト、{percentage}}}"
  },
  "panels/coverage/CoverageListView.ts | sBytesSBelongToBlocksOf": {
    "message": "{PH1} バイト（{PH2}）は、実行されていない JavaScript のブロックに属します。"
  },
  "panels/coverage/CoverageListView.ts | sBytesSBelongToBlocksOfJavascript": {
    "message": "{PH1} バイト（{PH2}）が、1 回以上実行された JavaScript のブロックに属します。"
  },
  "panels/coverage/CoverageListView.ts | sBytesSBelongToFunctionsThatHave": {
    "message": "{PH1} バイト（{PH2}）が、実行されていない関数に属します。"
  },
  "panels/coverage/CoverageListView.ts | sBytesSBelongToFunctionsThatHaveExecuted": {
    "message": "{PH1} バイト（{PH2}）は、1 回以上実行された機能に属します。"
  },
  "panels/coverage/CoverageListView.ts | sOfFileUnusedSOfFileUsed": {
    "message": "ファイルの {PH1}% が未使用、ファイルの {PH2}% が使用済み"
  },
  "panels/coverage/CoverageListView.ts | totalBytes": {
    "message": "合計バイト数"
  },
  "panels/coverage/CoverageListView.ts | type": {
    "message": "タイプ"
  },
  "panels/coverage/CoverageListView.ts | unusedBytes": {
    "message": "使用していないバイト"
  },
  "panels/coverage/CoverageListView.ts | url": {
    "message": "URL"
  },
  "panels/coverage/CoverageListView.ts | usageVisualization": {
    "message": "使用状況の可視化"
  },
  "panels/coverage/CoverageView.ts | activationNoCapture": {
    "message": "ページがバックグラウンドで事前レンダリングされていたため、カバレッジ情報を取得できませんでした。"
  },
  "panels/coverage/CoverageView.ts | all": {
    "message": "すべて"
  },
  "panels/coverage/CoverageView.ts | bfcacheNoCapture": {
    "message": "ページがバックフォワード キャッシュから配信されたため、カバレッジ情報を取得できませんでした。"
  },
  "panels/coverage/CoverageView.ts | chooseCoverageGranularityPer": {
    "message": "カバレッジの細かさの程度を選択する。関数ではオーバーヘッドが低くなり、ブロックではオーバーヘッドが高くなります。"
  },
  "panels/coverage/CoverageView.ts | clickTheRecordButtonSToStart": {
    "message": "録画ボタン {PH1} をクリックして、カバレッジのキャプチャを開始します。"
  },
  "panels/coverage/CoverageView.ts | clickTheReloadButtonSToReloadAnd": {
    "message": "再読み込みボタン {PH1} をクリックして再読み込みし、カバレッジのキャプチャを開始します。"
  },
  "panels/coverage/CoverageView.ts | contentScripts": {
    "message": "コンテンツ スクリプト"
  },
  "panels/coverage/CoverageView.ts | css": {
    "message": "CSS"
  },
  "panels/coverage/CoverageView.ts | filterCoverageByType": {
    "message": "カバレッジをタイプ別にフィルタリング"
  },
  "panels/coverage/CoverageView.ts | filteredSTotalS": {
    "message": "フィルタ適用後: {PH1}（合計: {PH2}）"
  },
  "panels/coverage/CoverageView.ts | includeExtensionContentScripts": {
    "message": "拡張機能のコンテンツ スクリプトを含める"
  },
  "panels/coverage/CoverageView.ts | javascript": {
    "message": "JavaScript"
  },
  "panels/coverage/CoverageView.ts | perBlock": {
    "message": "ブロックごと"
  },
  "panels/coverage/CoverageView.ts | perFunction": {
    "message": "関数ごと"
  },
  "panels/coverage/CoverageView.ts | reloadPrompt": {
    "message": "再読み込みボタン {PH1} をクリックすると、再読み込みを行ってカバレッジを取得できます。"
  },
  "panels/coverage/CoverageView.ts | sOfSSUsedSoFarSUnused": {
    "message": "これまでに {PH2} 中 {PH1}（{PH3}%）使用、{PH4} 未使用。"
  },
  "panels/coverage/CoverageView.ts | urlFilter": {
    "message": "URL フィルタ"
  },
  "panels/coverage/coverage-meta.ts | clearCoverage": {
    "message": "カバレッジを消去"
  },
  "panels/coverage/coverage-meta.ts | coverage": {
    "message": "カバレッジ"
  },
  "panels/coverage/coverage-meta.ts | exportCoverage": {
    "message": "カバレッジをエクスポート"
  },
  "panels/coverage/coverage-meta.ts | instrumentCoverage": {
    "message": "計測のカバレッジ"
  },
  "panels/coverage/coverage-meta.ts | showCoverage": {
    "message": "カバレッジを表示"
  },
  "panels/coverage/coverage-meta.ts | startInstrumentingCoverageAnd": {
    "message": "カバレッジの計測を開始してページを再読み込み"
  },
  "panels/coverage/coverage-meta.ts | stopInstrumentingCoverageAndShow": {
    "message": "カバレッジの計測を停止して結果を表示"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | aa": {
    "message": "AA"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | aaa": {
    "message": "AAA"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | apca": {
    "message": "APCA"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | attributeSelectors": {
    "message": "属性セレクタ"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | backgroundColorsS": {
    "message": "背景の色: {PH1}"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | borderColorsS": {
    "message": "枠線の色: {PH1}"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | classSelectors": {
    "message": "クラスセレクタ"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | colors": {
    "message": "色"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | contrastIssues": {
    "message": "コントラストの問題"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | contrastIssuesS": {
    "message": "コントラストの問題: {PH1}"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | contrastRatio": {
    "message": "コントラスト比"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | cssOverviewElements": {
    "message": "CSS の概要要素"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | declaration": {
    "message": "宣言"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | element": {
    "message": "要素"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | elements": {
    "message": "要素"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | externalStylesheets": {
    "message": "外部スタイルシート"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | fillColorsS": {
    "message": "塗りつぶしの色: {PH1}"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | fontInfo": {
    "message": "フォント情報"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | idSelectors": {
    "message": "ID セレクタ"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | inlineStyleElements": {
    "message": "インライン スタイル要素"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | mediaQueries": {
    "message": "メディアクエリ"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | nOccurrences": {
    "message": "{n,plural, =1{# 件の発生回数}other{# 件の発生回数}}"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | nonsimpleSelectors": {
    "message": "単純でないセレクタ"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | overviewSummary": {
    "message": "概要のまとめ"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | showElement": {
    "message": "要素を表示"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | source": {
    "message": "ソース"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | styleRules": {
    "message": "スタイルルール"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | textColorSOverSBackgroundResults": {
    "message": "{PH2} の背景に {PH1} の色のテキストを重ねると、{PH3} 要素のコントラストが低下します。"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | textColorsS": {
    "message": "テキスト色: {PH1}"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | thereAreNoFonts": {
    "message": "フォントがありません。"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | thereAreNoMediaQueries": {
    "message": "メディアクエリはありません。"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | thereAreNoUnusedDeclarations": {
    "message": "未使用の宣言はありません。"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | typeSelectors": {
    "message": "タイプセレクタ"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | universalSelectors": {
    "message": "ユニバーサル セレクタ"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | unusedDeclarations": {
    "message": "使用していない宣言"
  },
  "panels/css_overview/CSSOverviewProcessingView.ts | cancel": {
    "message": "キャンセル"
  },
  "panels/css_overview/CSSOverviewSidebarPanel.ts | clearOverview": {
    "message": "概要を消去"
  },
  "panels/css_overview/CSSOverviewSidebarPanel.ts | cssOverviewPanelSidebar": {
    "message": "CSS の概要パネルのサイドバー"
  },
  "panels/css_overview/CSSOverviewUnusedDeclarations.ts | bottomAppliedToAStatically": {
    "message": "静的に配置された要素に Bottom が適用されています"
  },
  "panels/css_overview/CSSOverviewUnusedDeclarations.ts | heightAppliedToAnInlineElement": {
    "message": "インライン要素に Height が適用されています"
  },
  "panels/css_overview/CSSOverviewUnusedDeclarations.ts | leftAppliedToAStatically": {
    "message": "静的に配置された要素に Left が適用されています"
  },
  "panels/css_overview/CSSOverviewUnusedDeclarations.ts | rightAppliedToAStatically": {
    "message": "静的に配置された要素に Right が適用されています"
  },
  "panels/css_overview/CSSOverviewUnusedDeclarations.ts | topAppliedToAStatically": {
    "message": "静的に配置された要素に Top が適用されています"
  },
  "panels/css_overview/CSSOverviewUnusedDeclarations.ts | verticalAlignmentAppliedTo": {
    "message": "inline でも table-cell でもない要素に垂直方向の配置が適用されました"
  },
  "panels/css_overview/CSSOverviewUnusedDeclarations.ts | widthAppliedToAnInlineElement": {
    "message": "インライン要素に Width が適用されています"
  },
  "panels/css_overview/components/CSSOverviewStartView.ts | captureOverview": {
    "message": "概要をキャプチャ"
  },
  "panels/css_overview/components/CSSOverviewStartView.ts | capturePageCSSOverview": {
    "message": "自分のページの CSS について概要を把握する"
  },
  "panels/css_overview/components/CSSOverviewStartView.ts | identifyCSSImprovements": {
    "message": "CSS の潜在的な改善点を特定する"
  },
  "panels/css_overview/components/CSSOverviewStartView.ts | identifyCSSImprovementsWithExampleIssues": {
    "message": "CSS の潜在的な改善点（低コントラストの問題、使用していない宣言、色やフォントのミスマッチなど）を特定する"
  },
  "panels/css_overview/components/CSSOverviewStartView.ts | locateAffectedElements": {
    "message": "影響を受ける要素を要素パネルで特定する"
  },
  "panels/css_overview/components/CSSOverviewStartView.ts | quickStartWithCSSOverview": {
    "message": "クイック スタート: 新しい「CSS の概要」パネルのスタートガイド"
  },
  "panels/css_overview/css_overview-meta.ts | cssOverview": {
    "message": "CSS の概要"
  },
  "panels/css_overview/css_overview-meta.ts | showCssOverview": {
    "message": "CSS の概要を表示"
  },
  "panels/developer_resources/DeveloperResourcesListView.ts | copyInitiatorUrl": {
    "message": "イニシエータ URL をコピー"
  },
  "panels/developer_resources/DeveloperResourcesListView.ts | copyUrl": {
    "message": "URL をコピー"
  },
  "panels/developer_resources/DeveloperResourcesListView.ts | developerResources": {
    "message": "デベロッパー リソース"
  },
  "panels/developer_resources/DeveloperResourcesListView.ts | error": {
    "message": "エラー"
  },
  "panels/developer_resources/DeveloperResourcesListView.ts | failure": {
    "message": "エラー"
  },
  "panels/developer_resources/DeveloperResourcesListView.ts | initiator": {
    "message": "イニシエータ"
  },
  "panels/developer_resources/DeveloperResourcesListView.ts | pending": {
    "message": "保留中"
  },
  "panels/developer_resources/DeveloperResourcesListView.ts | sBytes": {
    "message": "{n,plural, =1{# バイト}other{# バイト}}"
  },
  "panels/developer_resources/DeveloperResourcesListView.ts | status": {
    "message": "ステータス"
  },
  "panels/developer_resources/DeveloperResourcesListView.ts | success": {
    "message": "成功"
  },
  "panels/developer_resources/DeveloperResourcesListView.ts | totalBytes": {
    "message": "合計バイト数"
  },
  "panels/developer_resources/DeveloperResourcesListView.ts | url": {
    "message": "URL"
  },
  "panels/developer_resources/DeveloperResourcesView.ts | enableLoadingThroughTarget": {
    "message": "ウェブサイトを介して読み込む"
  },
  "panels/developer_resources/DeveloperResourcesView.ts | enterTextToSearchTheUrlAndError": {
    "message": "URL とエラー列を検索するテキストを入力"
  },
  "panels/developer_resources/DeveloperResourcesView.ts | loadHttpsDeveloperResources": {
    "message": "DevTools ではなく、検査するウェブサイトを介して HTTP(S) デベロッパー リソースを読み込みます"
  },
  "panels/developer_resources/DeveloperResourcesView.ts | resources": {
    "message": "{n,plural, =1{# 件のリソース}other{# 件のリソース}}"
  },
  "panels/developer_resources/DeveloperResourcesView.ts | resourcesCurrentlyLoading": {
    "message": "{PH1} 件のリソース、{PH2} 件を読み込み中"
  },
  "panels/developer_resources/developer_resources-meta.ts | developerResources": {
    "message": "デベロッパー リソース"
  },
  "panels/developer_resources/developer_resources-meta.ts | showDeveloperResources": {
    "message": "デベロッパー リソースを表示"
  },
  "panels/elements/CSSRuleValidator.ts | flexGridContainerPropertyRuleFix": {
    "message": "コンテナ要素で {PROPERTY_NAME} を設定するか、代わりに {ALTERNATIVE_PROPERTY_NAME} を使用してみてください。"
  },
  "panels/elements/CSSRuleValidator.ts | flexGridContainerPropertyRuleReason": {
    "message": "この要素は {CONTAINER_DISPLAY_NAME} アイテム（{CONTAINER_DISPLAY_NAME} コンテナの子など）ですが、{PROPERTY_NAME} はコンテナにのみ適用されます。"
  },
  "panels/elements/CSSRuleValidator.ts | fontVariationSettingsWarning": {
    "message": "設定「{PH1}」の値 {PH2} は、font-family「{PH5}」のサポート範囲 [{PH3}, {PH4}] 外です。"
  },
  "panels/elements/CSSRuleValidator.ts | ruleViolatedByParentElementRuleFix": {
    "message": "親の {EXISTING_PARENT_ELEMENT_RULE} プロパティを {TARGET_PARENT_ELEMENT_RULE} に設定してみてください。"
  },
  "panels/elements/CSSRuleValidator.ts | ruleViolatedByParentElementRuleReason": {
    "message": "親要素に {REASON_PROPERTY_DECLARATION_CODE} プロパティが使用されているため、{AFFECTED_PROPERTY_DECLARATION_CODE} は適用されません。"
  },
  "panels/elements/CSSRuleValidator.ts | ruleViolatedBySameElementRuleChangeFlexOrGrid": {
    "message": "この要素をコンテナにするには、{DISPLAY_GRID_RULE} または {DISPLAY_FLEX_RULE} を追加してみてください。"
  },
  "panels/elements/CSSRuleValidator.ts | ruleViolatedBySameElementRuleChangeSuggestion": {
    "message": "{EXISTING_PROPERTY_DECLARATION} プロパティを {TARGET_PROPERTY_DECLARATION} に設定してみてください。"
  },
  "panels/elements/CSSRuleValidator.ts | ruleViolatedBySameElementRuleFix": {
    "message": "{PROPERTY_NAME} を {PROPERTY_VALUE} 以外に設定してみてください。"
  },
  "panels/elements/CSSRuleValidator.ts | ruleViolatedBySameElementRuleReason": {
    "message": "{REASON_PROPERTY_DECLARATION_CODE} プロパティによって {AFFECTED_PROPERTY_DECLARATION_CODE} の適用がブロックされています。"
  },
  "panels/elements/ClassesPaneWidget.ts | addNewClass": {
    "message": "新しいクラスを追加"
  },
  "panels/elements/ClassesPaneWidget.ts | classSAdded": {
    "message": "クラス {PH1} を追加しました"
  },
  "panels/elements/ClassesPaneWidget.ts | classesSAdded": {
    "message": "クラス {PH1} を追加しました"
  },
  "panels/elements/ClassesPaneWidget.ts | elementClasses": {
    "message": "要素クラス"
  },
  "panels/elements/ColorSwatchPopoverIcon.ts | openCubicBezierEditor": {
    "message": "3 次ベジェ エディタを開く"
  },
  "panels/elements/ColorSwatchPopoverIcon.ts | openShadowEditor": {
    "message": "シャドウ エディタを開きます"
  },
  "panels/elements/ComputedStyleWidget.ts | filter": {
    "message": "フィルタ"
  },
  "panels/elements/ComputedStyleWidget.ts | filterComputedStyles": {
    "message": "計算済みスタイルをフィルタ"
  },
  "panels/elements/ComputedStyleWidget.ts | group": {
    "message": "分類する"
  },
  "panels/elements/ComputedStyleWidget.ts | navigateToSelectorSource": {
    "message": "セレクタソースに移動"
  },
  "panels/elements/ComputedStyleWidget.ts | navigateToStyle": {
    "message": "スタイルに移動"
  },
  "panels/elements/ComputedStyleWidget.ts | noMatchingProperty": {
    "message": "一致するプロパティはありません"
  },
  "panels/elements/ComputedStyleWidget.ts | showAll": {
    "message": "すべて表示"
  },
  "panels/elements/DOMLinkifier.ts | node": {
    "message": "<ノード>"
  },
  "panels/elements/ElementStatePaneWidget.ts | forceElementState": {
    "message": "要素の状態を強制"
  },
  "panels/elements/ElementStatePaneWidget.ts | toggleElementState": {
    "message": "要素の状態を切り替え"
  },
  "panels/elements/ElementsPanel.ts | computed": {
    "message": "計算済み"
  },
  "panels/elements/ElementsPanel.ts | computedStylesHidden": {
    "message": "計算済みスタイルのサイドバーが非表示になっています"
  },
  "panels/elements/ElementsPanel.ts | computedStylesShown": {
    "message": "計算済みスタイルのサイドバーが表示されています"
  },
  "panels/elements/ElementsPanel.ts | domTreeExplorer": {
    "message": "DOM ツリー エクスプローラ"
  },
  "panels/elements/ElementsPanel.ts | elementStateS": {
    "message": "要素の状態: {PH1}"
  },
  "panels/elements/ElementsPanel.ts | findByStringSelectorOrXpath": {
    "message": "文字列、セレクタ、または XPath で検索"
  },
  "panels/elements/ElementsPanel.ts | hideComputedStylesSidebar": {
    "message": "計算済みスタイルのサイドバーを非表示"
  },
  "panels/elements/ElementsPanel.ts | nodeCannotBeFoundInTheCurrent": {
    "message": "現在のページでノードが見つかりませんでした。"
  },
  "panels/elements/ElementsPanel.ts | revealInElementsPanel": {
    "message": "[要素] パネルに表示"
  },
  "panels/elements/ElementsPanel.ts | showComputedStylesSidebar": {
    "message": "計算済みスタイルのサイドバーを表示"
  },
  "panels/elements/ElementsPanel.ts | sidePanelContent": {
    "message": "サイドパネルのコンテンツ"
  },
  "panels/elements/ElementsPanel.ts | sidePanelToolbar": {
    "message": "サイドパネルのツールバー"
  },
  "panels/elements/ElementsPanel.ts | styles": {
    "message": "スタイル"
  },
  "panels/elements/ElementsPanel.ts | switchToAccessibilityTreeView": {
    "message": "ユーザー補助ツリービューに切り替え"
  },
  "panels/elements/ElementsPanel.ts | switchToDomTreeView": {
    "message": "DOM ツリービューに切り替え"
  },
  "panels/elements/ElementsPanel.ts | theDeferredDomNodeCouldNotBe": {
    "message": "遅延 DOM ノードを有効なノードに解決できませんでした。"
  },
  "panels/elements/ElementsPanel.ts | theRemoteObjectCouldNotBe": {
    "message": "リモート オブジェクトを有効なノードに解決できませんでした。"
  },
  "panels/elements/ElementsTreeElement.ts | addAttribute": {
    "message": "属性を追加"
  },
  "panels/elements/ElementsTreeElement.ts | captureNodeScreenshot": {
    "message": "ノードのスクリーンショットをキャプチャ"
  },
  "panels/elements/ElementsTreeElement.ts | children": {
    "message": "子:"
  },
  "panels/elements/ElementsTreeElement.ts | collapseChildren": {
    "message": "子を折りたたむ"
  },
  "panels/elements/ElementsTreeElement.ts | copy": {
    "message": "コピー"
  },
  "panels/elements/ElementsTreeElement.ts | copyElement": {
    "message": "要素をコピー"
  },
  "panels/elements/ElementsTreeElement.ts | copyFullXpath": {
    "message": "完全な XPath をコピー"
  },
  "panels/elements/ElementsTreeElement.ts | copyJsPath": {
    "message": "JS パスをコピー"
  },
  "panels/elements/ElementsTreeElement.ts | copyOuterhtml": {
    "message": "outerHTML をコピー"
  },
  "panels/elements/ElementsTreeElement.ts | copySelector": {
    "message": "selector をコピー"
  },
  "panels/elements/ElementsTreeElement.ts | copyStyles": {
    "message": "スタイルをコピー"
  },
  "panels/elements/ElementsTreeElement.ts | copyXpath": {
    "message": "XPath をコピー"
  },
  "panels/elements/ElementsTreeElement.ts | cut": {
    "message": "切り取り"
  },
  "panels/elements/ElementsTreeElement.ts | deleteElement": {
    "message": "要素を削除"
  },
  "panels/elements/ElementsTreeElement.ts | disableFlexMode": {
    "message": "フレックス モードを無効にする"
  },
  "panels/elements/ElementsTreeElement.ts | disableGridMode": {
    "message": "グリッドモードを無効にする"
  },
  "panels/elements/ElementsTreeElement.ts | disableScrollSnap": {
    "message": "スクロール スナップのオーバーレイを無効にする"
  },
  "panels/elements/ElementsTreeElement.ts | duplicateElement": {
    "message": "要素を複製"
  },
  "panels/elements/ElementsTreeElement.ts | editAsHtml": {
    "message": "HTML として編集"
  },
  "panels/elements/ElementsTreeElement.ts | editAttribute": {
    "message": "属性を編集"
  },
  "panels/elements/ElementsTreeElement.ts | editText": {
    "message": "テキストを編集"
  },
  "panels/elements/ElementsTreeElement.ts | enableFlexMode": {
    "message": "フレックス モードを有効にする"
  },
  "panels/elements/ElementsTreeElement.ts | enableGridMode": {
    "message": "グリッドモードを有効にする"
  },
  "panels/elements/ElementsTreeElement.ts | enableScrollSnap": {
    "message": "スクロール スナップのオーバーレイを有効にする"
  },
  "panels/elements/ElementsTreeElement.ts | expandRecursively": {
    "message": "再帰的に展開"
  },
  "panels/elements/ElementsTreeElement.ts | focus": {
    "message": "フォーカス"
  },
  "panels/elements/ElementsTreeElement.ts | forceState": {
    "message": "状態を強制"
  },
  "panels/elements/ElementsTreeElement.ts | hideElement": {
    "message": "要素を非表示"
  },
  "panels/elements/ElementsTreeElement.ts | openMediaPanel": {
    "message": "メディアパネルに移動"
  },
  "panels/elements/ElementsTreeElement.ts | paste": {
    "message": "貼り付け"
  },
  "panels/elements/ElementsTreeElement.ts | scrollIntoView": {
    "message": "表示される位置までスクロール"
  },
  "panels/elements/ElementsTreeElement.ts | showFrameDetails": {
    "message": "iframe の詳細を表示"
  },
  "panels/elements/ElementsTreeElement.ts | thisFrameWasIdentifiedAsAnAd": {
    "message": "このフレームは広告フレームと判断されました"
  },
  "panels/elements/ElementsTreeElement.ts | useSInTheConsoleToReferToThis": {
    "message": "この要素を参照するには、コンソールの {PH1} を使用してください。"
  },
  "panels/elements/ElementsTreeElement.ts | valueIsTooLargeToEdit": {
    "message": "<値が長すぎて編集できません>"
  },
  "panels/elements/ElementsTreeOutline.ts | adornerSettings": {
    "message": "バッジの設定…"
  },
  "panels/elements/ElementsTreeOutline.ts | pageDom": {
    "message": "ページ DOM"
  },
  "panels/elements/ElementsTreeOutline.ts | reveal": {
    "message": "表示"
  },
  "panels/elements/ElementsTreeOutline.ts | showAllNodesDMore": {
    "message": "ノードをすべて表示（他 {PH1} 件）"
  },
  "panels/elements/ElementsTreeOutline.ts | storeAsGlobalVariable": {
    "message": "グローバル変数として保存"
  },
  "panels/elements/EventListenersWidget.ts | all": {
    "message": "すべて"
  },
  "panels/elements/EventListenersWidget.ts | ancestors": {
    "message": "祖先"
  },
  "panels/elements/EventListenersWidget.ts | blocking": {
    "message": "ブロック"
  },
  "panels/elements/EventListenersWidget.ts | eventListenersCategory": {
    "message": "イベント リスナー カテゴリ"
  },
  "panels/elements/EventListenersWidget.ts | frameworkListeners": {
    "message": "Framework リスナー"
  },
  "panels/elements/EventListenersWidget.ts | passive": {
    "message": "パッシブ"
  },
  "panels/elements/EventListenersWidget.ts | resolveEventListenersBoundWith": {
    "message": "フレームワークと結び付けられているイベント リスナーを解決します"
  },
  "panels/elements/EventListenersWidget.ts | showListenersOnTheAncestors": {
    "message": "祖先のリスナーを表示します"
  },
  "panels/elements/LayersWidget.ts | cssLayersTitle": {
    "message": "CSS レイヤ"
  },
  "panels/elements/LayersWidget.ts | toggleCSSLayers": {
    "message": "CSS レイヤビューを切り替え"
  },
  "panels/elements/MarkerDecorator.ts | domBreakpoint": {
    "message": "DOM ブレークポイント"
  },
  "panels/elements/MarkerDecorator.ts | elementIsHidden": {
    "message": "要素: 非表示"
  },
  "panels/elements/NodeStackTraceWidget.ts | noStackTraceAvailable": {
    "message": "利用できるスタック トレースがありません"
  },
  "panels/elements/PlatformFontsWidget.ts | dGlyphs": {
    "message": "{n,plural, =1{（# 件のグリフ）}other{（# 件のグリフ）}}"
  },
  "panels/elements/PlatformFontsWidget.ts | familyName": {
    "message": "姓"
  },
  "panels/elements/PlatformFontsWidget.ts | fontOrigin": {
    "message": "フォントの提供元"
  },
  "panels/elements/PlatformFontsWidget.ts | localFile": {
    "message": "ローカル ファイル"
  },
  "panels/elements/PlatformFontsWidget.ts | networkResource": {
    "message": "ネットワーク リソース"
  },
  "panels/elements/PlatformFontsWidget.ts | postScriptName": {
    "message": "PostScript 名"
  },
  "panels/elements/PlatformFontsWidget.ts | renderedFonts": {
    "message": "レンダリング フォント"
  },
  "panels/elements/PropertiesWidget.ts | filter": {
    "message": "フィルタ"
  },
  "panels/elements/PropertiesWidget.ts | filterProperties": {
    "message": "フィルタ プロパティ"
  },
  "panels/elements/PropertiesWidget.ts | noMatchingProperty": {
    "message": "一致するプロパティはありません"
  },
  "panels/elements/PropertiesWidget.ts | showAll": {
    "message": "すべて表示"
  },
  "panels/elements/PropertiesWidget.ts | showAllTooltip": {
    "message": "チェックボックスをオフにすると、値が null および未定義でないプロパティのみが表示されます"
  },
  "panels/elements/StylePropertiesSection.ts | constructedStylesheet": {
    "message": "作成されたスタイルシート"
  },
  "panels/elements/StylePropertiesSection.ts | copyAllCSSChanges": {
    "message": "CSS の変更をすべてコピー"
  },
  "panels/elements/StylePropertiesSection.ts | copyAllDeclarations": {
    "message": "宣言をすべてコピー"
  },
  "panels/elements/StylePropertiesSection.ts | copyRule": {
    "message": "ルールをコピー"
  },
  "panels/elements/StylePropertiesSection.ts | copySelector": {
    "message": "selector をコピー"
  },
  "panels/elements/StylePropertiesSection.ts | cssSelector": {
    "message": "CSS セレクタ"
  },
  "panels/elements/StylePropertiesSection.ts | injectedStylesheet": {
    "message": "注入されたスタイルシート"
  },
  "panels/elements/StylePropertiesSection.ts | insertStyleRuleBelow": {
    "message": "以下にスタイルルールを挿入します"
  },
  "panels/elements/StylePropertiesSection.ts | sattributesStyle": {
    "message": "{PH1} [属性スタイル]"
  },
  "panels/elements/StylePropertiesSection.ts | showAllPropertiesSMore": {
    "message": "プロパティをすべて表示（他 {PH1} 件）"
  },
  "panels/elements/StylePropertiesSection.ts | styleAttribute": {
    "message": "style 属性"
  },
  "panels/elements/StylePropertiesSection.ts | userAgentStylesheet": {
    "message": "ユーザー エージェント スタイルシート"
  },
  "panels/elements/StylePropertiesSection.ts | viaInspector": {
    "message": "インスペクタ経由"
  },
  "panels/elements/StylePropertyTreeElement.ts | copyAllCSSChanges": {
    "message": "CSS の変更をすべてコピー"
  },
  "panels/elements/StylePropertyTreeElement.ts | copyAllCssDeclarationsAsJs": {
    "message": "すべての宣言を JS としてコピー"
  },
  "panels/elements/StylePropertyTreeElement.ts | copyAllDeclarations": {
    "message": "宣言をすべてコピー"
  },
  "panels/elements/StylePropertyTreeElement.ts | copyCssDeclarationAsJs": {
    "message": "宣言を JS としてコピー"
  },
  "panels/elements/StylePropertyTreeElement.ts | copyDeclaration": {
    "message": "宣言をコピー"
  },
  "panels/elements/StylePropertyTreeElement.ts | copyProperty": {
    "message": "プロパティをコピー"
  },
  "panels/elements/StylePropertyTreeElement.ts | copyRule": {
    "message": "ルールをコピー"
  },
  "panels/elements/StylePropertyTreeElement.ts | copyValue": {
    "message": "値をコピー"
  },
  "panels/elements/StylePropertyTreeElement.ts | flexboxEditorButton": {
    "message": "flexbox エディタを開く"
  },
  "panels/elements/StylePropertyTreeElement.ts | gridEditorButton": {
    "message": "grid エディタを開く"
  },
  "panels/elements/StylePropertyTreeElement.ts | openColorPickerS": {
    "message": "カラー選択ツールを開く（{PH1}）"
  },
  "panels/elements/StylePropertyTreeElement.ts | revealInSourcesPanel": {
    "message": "[ソース] パネルに表示"
  },
  "panels/elements/StylePropertyTreeElement.ts | shiftClickToChangeColorFormat": {
    "message": "Shift を押しながらクリックすると、色形式を変更できます。"
  },
  "panels/elements/StylePropertyTreeElement.ts | togglePropertyAndContinueEditing": {
    "message": "プロパティを切り替えて編集を続行"
  },
  "panels/elements/StylePropertyTreeElement.ts | viewComputedValue": {
    "message": "計算値を見る"
  },
  "panels/elements/StylesSidebarPane.ts | automaticDarkMode": {
    "message": "ダークモードを自動的に設定する"
  },
  "panels/elements/StylesSidebarPane.ts | clickToRevealLayer": {
    "message": "クリックするとレイヤツリーでレイヤを表示します"
  },
  "panels/elements/StylesSidebarPane.ts | copiedToClipboard": {
    "message": "クリップボードにコピーしました"
  },
  "panels/elements/StylesSidebarPane.ts | copyAllCSSChanges": {
    "message": "CSS の変更をコピーする"
  },
  "panels/elements/StylesSidebarPane.ts | cssPropertyName": {
    "message": "CSS プロパティ名: {PH1}"
  },
  "panels/elements/StylesSidebarPane.ts | cssPropertyValue": {
    "message": "CSS プロパティ値: {PH1}"
  },
  "panels/elements/StylesSidebarPane.ts | filter": {
    "message": "フィルタ"
  },
  "panels/elements/StylesSidebarPane.ts | filterStyles": {
    "message": "スタイルをフィルタ"
  },
  "panels/elements/StylesSidebarPane.ts | incrementdecrementWithMousewheelHundred": {
    "message": "マウスホイールまたは上 / 下矢印キーを使って増減を調整します。{PH1}: ±100、Shift: ±10、Alt: ±0.1"
  },
  "panels/elements/StylesSidebarPane.ts | incrementdecrementWithMousewheelOne": {
    "message": "マウスホイールまたは上 / 下矢印キーを使って増減を調整します。{PH1}: R ±1、Shift: G ±1、Alt: B ±1"
  },
  "panels/elements/StylesSidebarPane.ts | inheritedFromSPseudoOf": {
    "message": "次の疑似要素 ::{PH1} から継承 "
  },
  "panels/elements/StylesSidebarPane.ts | inheritedFroms": {
    "message": "継承元 "
  },
  "panels/elements/StylesSidebarPane.ts | invalidPropertyValue": {
    "message": "プロパティ値が無効"
  },
  "panels/elements/StylesSidebarPane.ts | invalidString": {
    "message": "{PH1}、プロパティ名: {PH2}、プロパティ値: {PH3}"
  },
  "panels/elements/StylesSidebarPane.ts | layer": {
    "message": "レイヤ"
  },
  "panels/elements/StylesSidebarPane.ts | noMatchingSelectorOrStyle": {
    "message": "一致するセレクタまたはスタイルなし"
  },
  "panels/elements/StylesSidebarPane.ts | pseudoSElement": {
    "message": "疑似 ::{PH1} 要素"
  },
  "panels/elements/StylesSidebarPane.ts | specificity": {
    "message": "特異性: {PH1}"
  },
  "panels/elements/StylesSidebarPane.ts | toggleRenderingEmulations": {
    "message": "一般的なレンダリング エミュレーションを切り替え"
  },
  "panels/elements/StylesSidebarPane.ts | unknownPropertyName": {
    "message": "不明なプロパティ名"
  },
  "panels/elements/StylesSidebarPane.ts | visibleSelectors": {
    "message": "{n,plural, =1{下記の # 件の表示セレクタ}other{下記の # 件の表示セレクタ}}"
  },
  "panels/elements/TopLayerContainer.ts | reveal": {
    "message": "表示"
  },
  "panels/elements/components/AccessibilityTreeNode.ts | ignored": {
    "message": "除外"
  },
  "panels/elements/components/AdornerSettingsPane.ts | closeButton": {
    "message": "閉じる"
  },
  "panels/elements/components/AdornerSettingsPane.ts | settingsTitle": {
    "message": "バッジを表示"
  },
  "panels/elements/components/CSSHintDetailsView.ts | learnMore": {
    "message": "詳細"
  },
  "panels/elements/components/CSSPropertyDocsView.ts | dontShow": {
    "message": "表示しない"
  },
  "panels/elements/components/CSSPropertyDocsView.ts | learnMore": {
    "message": "詳細"
  },
  "panels/elements/components/CSSVariableValueView.ts | invalidPropertyValue": {
    "message": "プロパティの値が無効です。{type} 型である必要があります"
  },
  "panels/elements/components/CSSVariableValueView.ts | registeredPropertyLinkTitle": {
    "message": "登録済みのプロパティを表示"
  },
  "panels/elements/components/CSSVariableValueView.ts | sIsNotDefined": {
    "message": "{PH1} が定義されていません"
  },
  "panels/elements/components/ElementsBreadcrumbs.ts | breadcrumbs": {
    "message": "DOM ツリーのパンくずリスト"
  },
  "panels/elements/components/ElementsBreadcrumbs.ts | scrollLeft": {
    "message": "左へスクロール"
  },
  "panels/elements/components/ElementsBreadcrumbs.ts | scrollRight": {
    "message": "右へスクロール"
  },
  "panels/elements/components/ElementsBreadcrumbsUtils.ts | text": {
    "message": "（テキスト）"
  },
  "panels/elements/components/LayoutPane.ts | chooseElementOverlayColor": {
    "message": "この要素のオーバーレイ カラーを選択してください"
  },
  "panels/elements/components/LayoutPane.ts | colorPickerOpened": {
    "message": "カラー選択ツールが開きました。"
  },
  "panels/elements/components/LayoutPane.ts | flexbox": {
    "message": "Flexbox"
  },
  "panels/elements/components/LayoutPane.ts | flexboxOverlays": {
    "message": "Flexbox のオーバーレイ"
  },
  "panels/elements/components/LayoutPane.ts | grid": {
    "message": "グリッド"
  },
  "panels/elements/components/LayoutPane.ts | gridOverlays": {
    "message": "グリッド オーバーレイ"
  },
  "panels/elements/components/LayoutPane.ts | noFlexboxLayoutsFoundOnThisPage": {
    "message": "このページに Flexbox レイアウトはありません"
  },
  "panels/elements/components/LayoutPane.ts | noGridLayoutsFoundOnThisPage": {
    "message": "このページにグリッド レイアウトはありません"
  },
  "panels/elements/components/LayoutPane.ts | overlayDisplaySettings": {
    "message": "オーバーレイ表示の設定"
  },
  "panels/elements/components/LayoutPane.ts | showElementInTheElementsPanel": {
    "message": "[要素] パネルに要素を表示"
  },
  "panels/elements/components/StylePropertyEditor.ts | deselectButton": {
    "message": "{propertyName}: {propertyValue}を削除"
  },
  "panels/elements/components/StylePropertyEditor.ts | selectButton": {
    "message": "{propertyName}: {propertyValue}を追加"
  },
  "panels/elements/elements-meta.ts | captureAreaScreenshot": {
    "message": "領域のスクリーンショットをキャプチャ"
  },
  "panels/elements/elements-meta.ts | copyStyles": {
    "message": "スタイルをコピー"
  },
  "panels/elements/elements-meta.ts | disableDomWordWrap": {
    "message": "DOM ワードラップを無効にする"
  },
  "panels/elements/elements-meta.ts | duplicateElement": {
    "message": "要素を複製"
  },
  "panels/elements/elements-meta.ts | editAsHtml": {
    "message": "HTML として編集"
  },
  "panels/elements/elements-meta.ts | elements": {
    "message": "要素"
  },
  "panels/elements/elements-meta.ts | enableDomWordWrap": {
    "message": "DOM ワードラップを有効にする"
  },
  "panels/elements/elements-meta.ts | eventListeners": {
    "message": "イベント リスナー"
  },
  "panels/elements/elements-meta.ts | hideElement": {
    "message": "要素を非表示"
  },
  "panels/elements/elements-meta.ts | hideHtmlComments": {
    "message": "HTML 件のコメントを非表示"
  },
  "panels/elements/elements-meta.ts | layout": {
    "message": "レイアウト"
  },
  "panels/elements/elements-meta.ts | newStyleRule": {
    "message": "新しいスタイルルール"
  },
  "panels/elements/elements-meta.ts | properties": {
    "message": "プロパティ"
  },
  "panels/elements/elements-meta.ts | redo": {
    "message": "やり直し"
  },
  "panels/elements/elements-meta.ts | refreshEventListeners": {
    "message": "イベント リスナーを更新"
  },
  "panels/elements/elements-meta.ts | revealDomNodeOnHover": {
    "message": "カーソルを合わせた DOM ノードを表示"
  },
  "panels/elements/elements-meta.ts | selectAnElementInThePageTo": {
    "message": "ページ内の要素を選択して検査"
  },
  "panels/elements/elements-meta.ts | showCSSDocumentationTooltip": {
    "message": "CSS ドキュメントのツールチップを表示"
  },
  "panels/elements/elements-meta.ts | showComputedStyles": {
    "message": "計算済みスタイルを表示"
  },
  "panels/elements/elements-meta.ts | showDetailedInspectTooltip": {
    "message": "詳細な検査ツールチップを表示"
  },
  "panels/elements/elements-meta.ts | showElements": {
    "message": "要素を表示"
  },
  "panels/elements/elements-meta.ts | showEventListeners": {
    "message": "イベント リスナーを表示"
  },
  "panels/elements/elements-meta.ts | showHtmlComments": {
    "message": "HTML 件のコメントを表示"
  },
  "panels/elements/elements-meta.ts | showLayout": {
    "message": "レイアウトを表示"
  },
  "panels/elements/elements-meta.ts | showProperties": {
    "message": "プロパティを表示"
  },
  "panels/elements/elements-meta.ts | showStackTrace": {
    "message": "スタック トレースを表示"
  },
  "panels/elements/elements-meta.ts | showStyles": {
    "message": "スタイルを表示"
  },
  "panels/elements/elements-meta.ts | showUserAgentShadowDOM": {
    "message": "ユーザー エージェント　シャドウ DOM を表示"
  },
  "panels/elements/elements-meta.ts | stackTrace": {
    "message": "スタック トレース"
  },
  "panels/elements/elements-meta.ts | toggleEyeDropper": {
    "message": "スポイトの切り替え"
  },
  "panels/elements/elements-meta.ts | undo": {
    "message": "元に戻す"
  },
  "panels/elements/elements-meta.ts | wordWrap": {
    "message": "ワードラップ"
  },
  "panels/emulation/DeviceModeToolbar.ts | addDevicePixelRatio": {
    "message": "デバイスのピクセル比を追加"
  },
  "panels/emulation/DeviceModeToolbar.ts | addDeviceType": {
    "message": "デバイスの種類を追加"
  },
  "panels/emulation/DeviceModeToolbar.ts | autoadjustZoom": {
    "message": "拡大率を自動調整する"
  },
  "panels/emulation/DeviceModeToolbar.ts | closeDevtools": {
    "message": "DevTools を閉じる"
  },
  "panels/emulation/DeviceModeToolbar.ts | defaultF": {
    "message": "デフォルト: {PH1}"
  },
  "panels/emulation/DeviceModeToolbar.ts | devicePixelRatio": {
    "message": "デバイスのピクセル比"
  },
  "panels/emulation/DeviceModeToolbar.ts | devicePosture": {
    "message": "デバイスの状態"
  },
  "panels/emulation/DeviceModeToolbar.ts | deviceType": {
    "message": "デバイスの種類"
  },
  "panels/emulation/DeviceModeToolbar.ts | dimensions": {
    "message": "サイズ"
  },
  "panels/emulation/DeviceModeToolbar.ts | edit": {
    "message": "編集…"
  },
  "panels/emulation/DeviceModeToolbar.ts | experimentalWebPlatformFeature": {
    "message": "「Experimental Web Platform Feature」フラグが有効です。クリックすると、無効になります。"
  },
  "panels/emulation/DeviceModeToolbar.ts | experimentalWebPlatformFeatureFlag": {
    "message": "「Experimental Web Platform Feature」フラグが無効です。クリックすると有効になります。"
  },
  "panels/emulation/DeviceModeToolbar.ts | fitToWindowF": {
    "message": "ウィンドウに合わせる（{PH1}%）"
  },
  "panels/emulation/DeviceModeToolbar.ts | heightLeaveEmptyForFull": {
    "message": "高さ（全体の場合は空のままにする）"
  },
  "panels/emulation/DeviceModeToolbar.ts | hideDeviceFrame": {
    "message": "デバイスのフレームを非表示"
  },
  "panels/emulation/DeviceModeToolbar.ts | hideMediaQueries": {
    "message": "メディアクエリを非表示"
  },
  "panels/emulation/DeviceModeToolbar.ts | hideRulers": {
    "message": "定規を非表示"
  },
  "panels/emulation/DeviceModeToolbar.ts | landscape": {
    "message": "横向き"
  },
  "panels/emulation/DeviceModeToolbar.ts | moreOptions": {
    "message": "その他のオプション"
  },
  "panels/emulation/DeviceModeToolbar.ts | none": {
    "message": "なし"
  },
  "panels/emulation/DeviceModeToolbar.ts | portrait": {
    "message": "縦向き"
  },
  "panels/emulation/DeviceModeToolbar.ts | removeDevicePixelRatio": {
    "message": "デバイスのピクセル比を削除"
  },
  "panels/emulation/DeviceModeToolbar.ts | removeDeviceType": {
    "message": "デバイスの種類を削除"
  },
  "panels/emulation/DeviceModeToolbar.ts | resetToDefaults": {
    "message": "デフォルトにリセット"
  },
  "panels/emulation/DeviceModeToolbar.ts | responsive": {
    "message": "レスポンシブ"
  },
  "panels/emulation/DeviceModeToolbar.ts | rotate": {
    "message": "回転"
  },
  "panels/emulation/DeviceModeToolbar.ts | screenOrientationOptions": {
    "message": "画面の向きのオプション"
  },
  "panels/emulation/DeviceModeToolbar.ts | showDeviceFrame": {
    "message": "デバイスのフレームを表示"
  },
  "panels/emulation/DeviceModeToolbar.ts | showMediaQueries": {
    "message": "メディアクエリを表示"
  },
  "panels/emulation/DeviceModeToolbar.ts | showRulers": {
    "message": "定規を表示"
  },
  "panels/emulation/DeviceModeToolbar.ts | toggleDualscreenMode": {
    "message": "デュアル スクリーン モードを切り替えます"
  },
  "panels/emulation/DeviceModeToolbar.ts | width": {
    "message": "幅"
  },
  "panels/emulation/DeviceModeToolbar.ts | zoom": {
    "message": "ズーム"
  },
  "panels/emulation/DeviceModeView.ts | doubleclickForFullHeight": {
    "message": "高さ全体のダブルクリック"
  },
  "panels/emulation/DeviceModeView.ts | laptop": {
    "message": "ノートパソコン"
  },
  "panels/emulation/DeviceModeView.ts | laptopL": {
    "message": "ノートパソコン（L）"
  },
  "panels/emulation/DeviceModeView.ts | mobileL": {
    "message": "モバイル（L）"
  },
  "panels/emulation/DeviceModeView.ts | mobileM": {
    "message": "モバイル（M）"
  },
  "panels/emulation/DeviceModeView.ts | mobileS": {
    "message": "モバイル（S）"
  },
  "panels/emulation/DeviceModeView.ts | tablet": {
    "message": "タブレット"
  },
  "panels/emulation/MediaQueryInspector.ts | revealInSourceCode": {
    "message": "ソースコードに表示"
  },
  "panels/emulation/emulation-meta.ts | captureFullSizeScreenshot": {
    "message": "フルサイズのスクリーンショットをキャプチャ"
  },
  "panels/emulation/emulation-meta.ts | captureNodeScreenshot": {
    "message": "ノードのスクリーンショットをキャプチャ"
  },
  "panels/emulation/emulation-meta.ts | captureScreenshot": {
    "message": "スクリーンショットをキャプチャ"
  },
  "panels/emulation/emulation-meta.ts | device": {
    "message": "デバイス"
  },
  "panels/emulation/emulation-meta.ts | hideDeviceFrame": {
    "message": "デバイスのフレームを非表示"
  },
  "panels/emulation/emulation-meta.ts | hideMediaQueries": {
    "message": "メディアクエリを非表示"
  },
  "panels/emulation/emulation-meta.ts | hideRulers": {
    "message": "Device Mode ツールバーで定規を非表示にする"
  },
  "panels/emulation/emulation-meta.ts | showDeviceFrame": {
    "message": "デバイスのフレームを表示"
  },
  "panels/emulation/emulation-meta.ts | showMediaQueries": {
    "message": "メディアクエリを表示"
  },
  "panels/emulation/emulation-meta.ts | showRulers": {
    "message": "Device Mode ツールバーで定規を表示する"
  },
  "panels/emulation/emulation-meta.ts | toggleDeviceToolbar": {
    "message": "デバイスのツールバーを切り替え"
  },
  "panels/event_listeners/EventListenersView.ts | deleteEventListener": {
    "message": "イベント リスナーを削除"
  },
  "panels/event_listeners/EventListenersView.ts | noEventListeners": {
    "message": "イベント リスナーなし"
  },
  "panels/event_listeners/EventListenersView.ts | passive": {
    "message": "パッシブ"
  },
  "panels/event_listeners/EventListenersView.ts | remove": {
    "message": "削除"
  },
  "panels/event_listeners/EventListenersView.ts | revealInElementsPanel": {
    "message": "[要素] パネルに表示"
  },
  "panels/event_listeners/EventListenersView.ts | togglePassive": {
    "message": "パッシブに切り替え"
  },
  "panels/event_listeners/EventListenersView.ts | toggleWhetherEventListenerIs": {
    "message": "イベントリスナーをパッシブにするかブロックにするかを切り替え"
  },
  "panels/explain/components/ConsoleInsight.ts | closeInsight": {
    "message": "インサイトを閉じる"
  },
  "panels/explain/components/ConsoleInsight.ts | consoleMessage": {
    "message": "コンソール メッセージ"
  },
  "panels/explain/components/ConsoleInsight.ts | error": {
    "message": "エラーが発生しました…"
  },
  "panels/explain/components/ConsoleInsight.ts | generating": {
    "message": "生成しています..."
  },
  "panels/explain/components/ConsoleInsight.ts | insight": {
    "message": "インサイト"
  },
  "panels/explain/components/ConsoleInsight.ts | networkRequest": {
    "message": "ネットワーク リクエスト"
  },
  "panels/explain/components/ConsoleInsight.ts | opensInNewTab": {
    "message": "（新しいタブで開きます）"
  },
  "panels/explain/components/ConsoleInsight.ts | relatedCode": {
    "message": "関連コード"
  },
  "panels/explain/components/ConsoleInsight.ts | stackTrace": {
    "message": "スタックトレース"
  },
  "panels/explain/components/ConsoleInsight.ts | submitFeedback": {
    "message": "フィードバックを送信"
  },
  "panels/explain/explain-meta.ts | explainThisError": {
    "message": "このエラーの説明"
  },
  "panels/explain/explain-meta.ts | explainThisMessage": {
    "message": "このメッセージの説明"
  },
  "panels/explain/explain-meta.ts | explainThisWarning": {
    "message": "この警告の説明"
  },
  "panels/issues/AffectedBlockedByResponseView.ts | blockedResource": {
    "message": "ブロックしたリソース"
  },
  "panels/issues/AffectedBlockedByResponseView.ts | nRequests": {
    "message": "{n,plural, =1{# 件のリクエスト}other{# 件のリクエスト}}"
  },
  "panels/issues/AffectedBlockedByResponseView.ts | parentFrame": {
    "message": "親フレーム"
  },
  "panels/issues/AffectedBlockedByResponseView.ts | requestC": {
    "message": "リクエスト"
  },
  "panels/issues/AffectedCookiesView.ts | domain": {
    "message": "ドメイン"
  },
  "panels/issues/AffectedCookiesView.ts | filterSetCookieTitle": {
    "message": "ネットワーク パネルにこの Set-Cookie ヘッダーを含むネットワーク リクエストを表示"
  },
  "panels/issues/AffectedCookiesView.ts | nCookies": {
    "message": "{n,plural, =1{# 件の Cookie}other{# 件の Cookie}}"
  },
  "panels/issues/AffectedCookiesView.ts | nRawCookieLines": {
    "message": "{n,plural, =1{1 件の Raw Set-Cookie　ヘッダー}other{# 件の Raw Set-Cookie　ヘッダー}}"
  },
  "panels/issues/AffectedCookiesView.ts | name": {
    "message": "名前"
  },
  "panels/issues/AffectedCookiesView.ts | path": {
    "message": "パス"
  },
  "panels/issues/AffectedDirectivesView.ts | blocked": {
    "message": "ブロック中"
  },
  "panels/issues/AffectedDirectivesView.ts | clickToRevealTheViolatingDomNode": {
    "message": "クリックすると、違反している DOM ノードが [要素] パネルに表示されます"
  },
  "panels/issues/AffectedDirectivesView.ts | directiveC": {
    "message": "ディレクティブ"
  },
  "panels/issues/AffectedDirectivesView.ts | element": {
    "message": "要素"
  },
  "panels/issues/AffectedDirectivesView.ts | nDirectives": {
    "message": "{n,plural, =1{# 件のディレクティブ}other{# 件のディレクティブ}}"
  },
  "panels/issues/AffectedDirectivesView.ts | reportonly": {
    "message": "報告のみ"
  },
  "panels/issues/AffectedDirectivesView.ts | resourceC": {
    "message": "リソース"
  },
  "panels/issues/AffectedDirectivesView.ts | sourceLocation": {
    "message": "ソースの場所"
  },
  "panels/issues/AffectedDirectivesView.ts | status": {
    "message": "ステータス"
  },
  "panels/issues/AffectedDocumentsInQuirksModeView.ts | documentInTheDOMTree": {
    "message": "DOM ツリー内のドキュメント"
  },
  "panels/issues/AffectedDocumentsInQuirksModeView.ts | mode": {
    "message": "モード"
  },
  "panels/issues/AffectedDocumentsInQuirksModeView.ts | nDocuments": {
    "message": "{n,plural, =1{ ドキュメント}other{ ドキュメント}}"
  },
  "panels/issues/AffectedDocumentsInQuirksModeView.ts | url": {
    "message": "URL"
  },
  "panels/issues/AffectedElementsView.ts | nElements": {
    "message": "{n,plural, =1{# 件の要素}other{# 件の要素}}"
  },
  "panels/issues/AffectedElementsWithLowContrastView.ts | contrastRatio": {
    "message": "コントラスト比"
  },
  "panels/issues/AffectedElementsWithLowContrastView.ts | element": {
    "message": "要素"
  },
  "panels/issues/AffectedElementsWithLowContrastView.ts | minimumAA": {
    "message": "最小 AA 比"
  },
  "panels/issues/AffectedElementsWithLowContrastView.ts | minimumAAA": {
    "message": "最小 AAA 比率"
  },
  "panels/issues/AffectedElementsWithLowContrastView.ts | textSize": {
    "message": "文字のサイズ"
  },
  "panels/issues/AffectedElementsWithLowContrastView.ts | textWeight": {
    "message": "テキストの太さ"
  },
  "panels/issues/AffectedHeavyAdView.ts | cpuPeakLimit": {
    "message": "CPU ピークリミット"
  },
  "panels/issues/AffectedHeavyAdView.ts | cpuTotalLimit": {
    "message": "CPU 合計の上限"
  },
  "panels/issues/AffectedHeavyAdView.ts | frameUrl": {
    "message": "フレーム URL"
  },
  "panels/issues/AffectedHeavyAdView.ts | limitExceeded": {
    "message": "上限を超過"
  },
  "panels/issues/AffectedHeavyAdView.ts | nResources": {
    "message": "{n,plural, =1{# 件のリソース}other{# 件のリソース}}"
  },
  "panels/issues/AffectedHeavyAdView.ts | networkLimit": {
    "message": "ネットワーク制限"
  },
  "panels/issues/AffectedHeavyAdView.ts | removed": {
    "message": "削除済み"
  },
  "panels/issues/AffectedHeavyAdView.ts | resolutionStatus": {
    "message": "解決ステータス"
  },
  "panels/issues/AffectedHeavyAdView.ts | warned": {
    "message": "警告"
  },
  "panels/issues/AffectedMetadataAllowedSitesView.ts | nAllowedSites": {
    "message": "{n,plural, =1{1 件のウェブサイトに Cookie へのアクセスを許可しています}other{# 件のウェブサイトに Cookie へのアクセスを許可しています}}"
  },
  "panels/issues/AffectedResourcesView.ts | clickToRevealTheFramesDomNodeIn": {
    "message": "クリックすると、フレームの DOM ノードが [要素] パネルに表示されます"
  },
  "panels/issues/AffectedResourcesView.ts | unavailable": {
    "message": "使用不可"
  },
  "panels/issues/AffectedResourcesView.ts | unknown": {
    "message": "不明"
  },
  "panels/issues/AffectedSharedArrayBufferIssueDetailsView.ts | aSharedarraybufferWas": {
    "message": "クロスオリジンで分離されていないコンテキスト内で SharedArrayBuffer がインスタンス化されました"
  },
  "panels/issues/AffectedSharedArrayBufferIssueDetailsView.ts | blocked": {
    "message": "ブロック中"
  },
  "panels/issues/AffectedSharedArrayBufferIssueDetailsView.ts | instantiation": {
    "message": "インスタンス化"
  },
  "panels/issues/AffectedSharedArrayBufferIssueDetailsView.ts | nViolations": {
    "message": "{n,plural, =1{# 件の違反}other{# 件の違反}}"
  },
  "panels/issues/AffectedSharedArrayBufferIssueDetailsView.ts | sharedarraybufferWasTransferedTo": {
    "message": "SharedArrayBuffer はクロスオリジンで分離されていないコンテキストに転送されました"
  },
  "panels/issues/AffectedSharedArrayBufferIssueDetailsView.ts | sourceLocation": {
    "message": "ソースの場所"
  },
  "panels/issues/AffectedSharedArrayBufferIssueDetailsView.ts | status": {
    "message": "ステータス"
  },
  "panels/issues/AffectedSharedArrayBufferIssueDetailsView.ts | transfer": {
    "message": "転送"
  },
  "panels/issues/AffectedSharedArrayBufferIssueDetailsView.ts | trigger": {
    "message": "トリガー"
  },
  "panels/issues/AffectedSharedArrayBufferIssueDetailsView.ts | warning": {
    "message": "警告"
  },
  "panels/issues/AffectedSourcesView.ts | nSources": {
    "message": "{n,plural, =1{# 件のソース}other{# 件のソース}}"
  },
  "panels/issues/AffectedTrackingSitesView.ts | nTrackingSites": {
    "message": "{n,plural, =1{1 件のトラッキング ウェブサイト}other{# 件のトラッキング ウェブサイト}}"
  },
  "panels/issues/AttributionReportingIssueDetailsView.ts | element": {
    "message": "要素"
  },
  "panels/issues/AttributionReportingIssueDetailsView.ts | invalidHeaderValue": {
    "message": "無効なヘッダー値"
  },
  "panels/issues/AttributionReportingIssueDetailsView.ts | nViolations": {
    "message": "{n,plural, =1{# 件の違反}other{# 件の違反}}"
  },
  "panels/issues/AttributionReportingIssueDetailsView.ts | request": {
    "message": "リクエスト"
  },
  "panels/issues/AttributionReportingIssueDetailsView.ts | untrustworthyOrigin": {
    "message": "信頼できないオリジン"
  },
  "panels/issues/CorsIssueDetailsView.ts | allowCredentialsValueFromHeader": {
    "message": "Access-Control-Allow-Credentials のヘッダー値"
  },
  "panels/issues/CorsIssueDetailsView.ts | allowedOrigin": {
    "message": "許可されたオリジン（ヘッダーに基づく）"
  },
  "panels/issues/CorsIssueDetailsView.ts | blocked": {
    "message": "ブロック中"
  },
  "panels/issues/CorsIssueDetailsView.ts | disallowedRequestHeader": {
    "message": "許可されなかったリクエスト ヘッダー"
  },
  "panels/issues/CorsIssueDetailsView.ts | disallowedRequestMethod": {
    "message": "許可されなかったリクエスト メソッド"
  },
  "panels/issues/CorsIssueDetailsView.ts | failedRequest": {
    "message": "リクエストに失敗しました"
  },
  "panels/issues/CorsIssueDetailsView.ts | header": {
    "message": "ヘッダー"
  },
  "panels/issues/CorsIssueDetailsView.ts | initiatorAddressSpace": {
    "message": "イニシエータ アドレス"
  },
  "panels/issues/CorsIssueDetailsView.ts | initiatorContext": {
    "message": "イニシエータ コンテキスト"
  },
  "panels/issues/CorsIssueDetailsView.ts | insecure": {
    "message": "安全ではない"
  },
  "panels/issues/CorsIssueDetailsView.ts | invalidValue": {
    "message": "無効な値（該当する場合）"
  },
  "panels/issues/CorsIssueDetailsView.ts | nRequests": {
    "message": "{n,plural, =1{# 件のリクエスト}other{# 件のリクエスト}}"
  },
  "panels/issues/CorsIssueDetailsView.ts | preflightDisallowedRedirect": {
    "message": "プリフライトに対するレスポンスがリダイレクトでした"
  },
  "panels/issues/CorsIssueDetailsView.ts | preflightInvalidStatus": {
    "message": "プリフライト リクエストの HTTP ステータスが成功を示していませんでした"
  },
  "panels/issues/CorsIssueDetailsView.ts | preflightRequest": {
    "message": "プリフライト リクエスト"
  },
  "panels/issues/CorsIssueDetailsView.ts | preflightRequestIfProblematic": {
    "message": "プリフライト リクエスト（問題がある場合）"
  },
  "panels/issues/CorsIssueDetailsView.ts | problem": {
    "message": "問題"
  },
  "panels/issues/CorsIssueDetailsView.ts | problemInvalidValue": {
    "message": "無効な値"
  },
  "panels/issues/CorsIssueDetailsView.ts | problemMissingHeader": {
    "message": "ヘッダーがない"
  },
  "panels/issues/CorsIssueDetailsView.ts | problemMultipleValues": {
    "message": "複数の値"
  },
  "panels/issues/CorsIssueDetailsView.ts | request": {
    "message": "リクエスト"
  },
  "panels/issues/CorsIssueDetailsView.ts | resourceAddressSpace": {
    "message": "リソース アドレス"
  },
  "panels/issues/CorsIssueDetailsView.ts | secure": {
    "message": "安全"
  },
  "panels/issues/CorsIssueDetailsView.ts | sourceLocation": {
    "message": "ソースの場所"
  },
  "panels/issues/CorsIssueDetailsView.ts | status": {
    "message": "ステータス"
  },
  "panels/issues/CorsIssueDetailsView.ts | unsupportedScheme": {
    "message": "サポートされていないスキーム"
  },
  "panels/issues/CorsIssueDetailsView.ts | warning": {
    "message": "警告"
  },
  "panels/issues/GenericIssueDetailsView.ts | frameId": {
    "message": "フレーム"
  },
  "panels/issues/GenericIssueDetailsView.ts | nResources": {
    "message": "{n,plural, =1{# 件のリソース}other{# 件のリソース}}"
  },
  "panels/issues/GenericIssueDetailsView.ts | violatingNode": {
    "message": "違反ノード"
  },
  "panels/issues/HiddenIssuesRow.ts | hiddenIssues": {
    "message": "非表示にした問題"
  },
  "panels/issues/HiddenIssuesRow.ts | unhideAll": {
    "message": "すべて再表示"
  },
  "panels/issues/IssueKindView.ts | hideAllCurrentBreakingChanges": {
    "message": "現在のすべての互換性を破る変更を非表示にする"
  },
  "panels/issues/IssueKindView.ts | hideAllCurrentImprovements": {
    "message": "現在のすべての改善を非表示にする"
  },
  "panels/issues/IssueKindView.ts | hideAllCurrentPageErrors": {
    "message": "現在のすべてのページエラーを非表示にする"
  },
  "panels/issues/IssueView.ts | affectedResources": {
    "message": "影響を受けるリソース"
  },
  "panels/issues/IssueView.ts | automaticallyUpgraded": {
    "message": "自動的にアップグレード"
  },
  "panels/issues/IssueView.ts | blocked": {
    "message": "ブロック中"
  },
  "panels/issues/IssueView.ts | hideIssuesLikeThis": {
    "message": "類似の問題を非表示"
  },
  "panels/issues/IssueView.ts | learnMoreS": {
    "message": "詳細: {PH1}"
  },
  "panels/issues/IssueView.ts | nRequests": {
    "message": "{n,plural, =1{# 件のリクエスト}other{# 件のリクエスト}}"
  },
  "panels/issues/IssueView.ts | nResources": {
    "message": "{n,plural, =1{# 件のリソース}other{# 件のリソース}}"
  },
  "panels/issues/IssueView.ts | name": {
    "message": "名前"
  },
  "panels/issues/IssueView.ts | restrictionStatus": {
    "message": "制限の状況"
  },
  "panels/issues/IssueView.ts | unhideIssuesLikeThis": {
    "message": "類似の問題を再表示"
  },
  "panels/issues/IssueView.ts | warned": {
    "message": "警告"
  },
  "panels/issues/IssuesPane.ts | attributionReporting": {
    "message": "Attribution Reporting API"
  },
  "panels/issues/IssuesPane.ts | contentSecurityPolicy": {
    "message": "コンテンツ セキュリティ ポリシー"
  },
  "panels/issues/IssuesPane.ts | cors": {
    "message": "クロスオリジン リソース シェアリング"
  },
  "panels/issues/IssuesPane.ts | crossOriginEmbedderPolicy": {
    "message": "クロスオリジンの埋め込みポリシー"
  },
  "panels/issues/IssuesPane.ts | generic": {
    "message": "一般的"
  },
  "panels/issues/IssuesPane.ts | groupByCategory": {
    "message": "カテゴリ別に分類"
  },
  "panels/issues/IssuesPane.ts | groupByKind": {
    "message": "種類別にまとめる"
  },
  "panels/issues/IssuesPane.ts | groupDisplayedIssuesUnder": {
    "message": "表示された問題を関連するカテゴリに分類"
  },
  "panels/issues/IssuesPane.ts | groupDisplayedIssuesUnderKind": {
    "message": "ページエラー、破壊的変更、改善の種類別に問題を表示する"
  },
  "panels/issues/IssuesPane.ts | heavyAds": {
    "message": "リソース消費が多い広告"
  },
  "panels/issues/IssuesPane.ts | includeCookieIssuesCausedBy": {
    "message": "サードパーティのサイトに起因する Cookie の問題を含める"
  },
  "panels/issues/IssuesPane.ts | includeThirdpartyCookieIssues": {
    "message": "サードパーティの Cookie の問題を含める"
  },
  "panels/issues/IssuesPane.ts | lowTextContrast": {
    "message": "テキストのコントラスト比: 低"
  },
  "panels/issues/IssuesPane.ts | mixedContent": {
    "message": "混合コンテンツ"
  },
  "panels/issues/IssuesPane.ts | noIssuesDetectedSoFar": {
    "message": "これまでに問題は検出されていません"
  },
  "panels/issues/IssuesPane.ts | onlyThirdpartyCookieIssues": {
    "message": "現時点では、サードパーティの Cookie の問題のみが検出されています"
  },
  "panels/issues/IssuesPane.ts | other": {
    "message": "その他"
  },
  "panels/issues/IssuesPane.ts | quirksMode": {
    "message": "後方互換モード"
  },
  "panels/issues/IssuesPane.ts | samesiteCookie": {
    "message": "SameSite Cookie"
  },
  "panels/issues/components/HideIssuesMenu.ts | tooltipTitle": {
    "message": "問題を非表示"
  },
  "panels/issues/issues-meta.ts | issues": {
    "message": "問題"
  },
  "panels/issues/issues-meta.ts | showIssues": {
    "message": "問題を表示"
  },
  "panels/js_profiler/js_profiler-meta.ts | performance": {
    "message": "パフォーマンス"
  },
  "panels/js_profiler/js_profiler-meta.ts | profiler": {
    "message": "プロファイラ"
  },
  "panels/js_profiler/js_profiler-meta.ts | record": {
    "message": "記録"
  },
  "panels/js_profiler/js_profiler-meta.ts | showPerformance": {
    "message": "パフォーマンスを表示"
  },
  "panels/js_profiler/js_profiler-meta.ts | showProfiler": {
    "message": "プロファイラを表示"
  },
  "panels/js_profiler/js_profiler-meta.ts | showRecentTimelineSessions": {
    "message": "最近のタイムライン セッションを表示"
  },
  "panels/js_profiler/js_profiler-meta.ts | startProfilingAndReloadPage": {
    "message": "プロファイリングを開始してページを再読み込み"
  },
  "panels/js_profiler/js_profiler-meta.ts | startStopRecording": {
    "message": "記録を開始 / 停止"
  },
  "panels/js_profiler/js_profiler-meta.ts | stop": {
    "message": "停止"
  },
  "panels/layer_viewer/LayerDetailsView.ts | compositingReasons": {
    "message": "合成理由"
  },
  "panels/layer_viewer/LayerDetailsView.ts | containingBlocRectangleDimensions": {
    "message": "コンテナ ブロック {PH1} × {PH2}（{PH3}、{PH4}）"
  },
  "panels/layer_viewer/LayerDetailsView.ts | mainThreadScrollingReason": {
    "message": "メインスレッドをスクロールする理由"
  },
  "panels/layer_viewer/LayerDetailsView.ts | memoryEstimate": {
    "message": "メモリ推定値"
  },
  "panels/layer_viewer/LayerDetailsView.ts | nearestLayerShiftingContaining": {
    "message": "レイヤ移動が含まれる最も近いブロック"
  },
  "panels/layer_viewer/LayerDetailsView.ts | nearestLayerShiftingStickyBox": {
    "message": "最も近いレイヤ移動固定ボックス"
  },
  "panels/layer_viewer/LayerDetailsView.ts | nonFastScrollable": {
    "message": "高速スクロール不可"
  },
  "panels/layer_viewer/LayerDetailsView.ts | paintCount": {
    "message": "ペイント数"
  },
  "panels/layer_viewer/LayerDetailsView.ts | paintProfiler": {
    "message": "ペイント プロファイラ"
  },
  "panels/layer_viewer/LayerDetailsView.ts | repaintsOnScroll": {
    "message": "スクロール時に再描画"
  },
  "panels/layer_viewer/LayerDetailsView.ts | scrollRectangleDimensions": {
    "message": "{PH1} {PH2} × {PH3}（{PH4}、{PH5}）"
  },
  "panels/layer_viewer/LayerDetailsView.ts | selectALayerToSeeItsDetails": {
    "message": "レイヤを選択して詳細を確認"
  },
  "panels/layer_viewer/LayerDetailsView.ts | size": {
    "message": "サイズ"
  },
  "panels/layer_viewer/LayerDetailsView.ts | slowScrollRegions": {
    "message": "低速スクロール領域"
  },
  "panels/layer_viewer/LayerDetailsView.ts | stickyAncenstorLayersS": {
    "message": "{PH1}: {PH2}（{PH3}）"
  },
  "panels/layer_viewer/LayerDetailsView.ts | stickyBoxRectangleDimensions": {
    "message": "固定ボックス {PH1} × {PH2}（{PH3}、{PH4}）"
  },
  "panels/layer_viewer/LayerDetailsView.ts | stickyPositionConstraint": {
    "message": "固定位置制約"
  },
  "panels/layer_viewer/LayerDetailsView.ts | touchEventHandler": {
    "message": "タッチ イベント ハンドラ"
  },
  "panels/layer_viewer/LayerDetailsView.ts | unnamed": {
    "message": "<名前なし>"
  },
  "panels/layer_viewer/LayerDetailsView.ts | updateRectangleDimensions": {
    "message": "{PH1} × {PH2}（{PH3}、{PH4}）"
  },
  "panels/layer_viewer/LayerDetailsView.ts | wheelEventHandler": {
    "message": "ホイール イベント ハンドラ"
  },
  "panels/layer_viewer/LayerTreeOutline.ts | layersTreePane": {
    "message": "レイヤツリー ペイン"
  },
  "panels/layer_viewer/LayerTreeOutline.ts | showPaintProfiler": {
    "message": "ペイント プロファイラを表示"
  },
  "panels/layer_viewer/LayerTreeOutline.ts | updateChildDimension": {
    "message": " （{PH1} × {PH2}）"
  },
  "panels/layer_viewer/LayerViewHost.ts | showInternalLayers": {
    "message": "内部レイヤを表示"
  },
  "panels/layer_viewer/Layers3DView.ts | cantDisplayLayers": {
    "message": "レイヤを表示できません。"
  },
  "panels/layer_viewer/Layers3DView.ts | checkSForPossibleReasons": {
    "message": "考えられる理由については {PH1} を確認してください。"
  },
  "panels/layer_viewer/Layers3DView.ts | dLayersView": {
    "message": "3D レイヤビュー"
  },
  "panels/layer_viewer/Layers3DView.ts | layerInformationIsNotYet": {
    "message": "レイヤ情報はまだ利用できません。"
  },
  "panels/layer_viewer/Layers3DView.ts | paints": {
    "message": "ペイント"
  },
  "panels/layer_viewer/Layers3DView.ts | resetView": {
    "message": "ビューをリセット"
  },
  "panels/layer_viewer/Layers3DView.ts | showPaintProfiler": {
    "message": "ペイント プロファイラを表示"
  },
  "panels/layer_viewer/Layers3DView.ts | slowScrollRects": {
    "message": "スクロール矩形を表示"
  },
  "panels/layer_viewer/Layers3DView.ts | webglSupportIsDisabledInYour": {
    "message": "お使いのブラウザで WebGL のサポートが無効になっています。"
  },
  "panels/layer_viewer/PaintProfilerView.ts | bitmap": {
    "message": "ビットマップ"
  },
  "panels/layer_viewer/PaintProfilerView.ts | commandLog": {
    "message": "コマンドログ"
  },
  "panels/layer_viewer/PaintProfilerView.ts | misc": {
    "message": "その他"
  },
  "panels/layer_viewer/PaintProfilerView.ts | profiling": {
    "message": "プロファイルを作成しています…"
  },
  "panels/layer_viewer/PaintProfilerView.ts | profilingResults": {
    "message": "プロファイリング結果"
  },
  "panels/layer_viewer/PaintProfilerView.ts | shapes": {
    "message": "図形"
  },
  "panels/layer_viewer/PaintProfilerView.ts | text": {
    "message": "テキスト"
  },
  "panels/layer_viewer/TransformController.ts | panModeX": {
    "message": "パンモード（X）"
  },
  "panels/layer_viewer/TransformController.ts | resetTransform": {
    "message": "変換をリセット（0）"
  },
  "panels/layer_viewer/TransformController.ts | rotateModeV": {
    "message": "回転モード（V）"
  },
  "panels/layer_viewer/layer_viewer-meta.ts | panOrRotateDown": {
    "message": "下にパンまたは回転"
  },
  "panels/layer_viewer/layer_viewer-meta.ts | panOrRotateLeft": {
    "message": "左にパンまたは回転"
  },
  "panels/layer_viewer/layer_viewer-meta.ts | panOrRotateRight": {
    "message": "右にパンまたは回転"
  },
  "panels/layer_viewer/layer_viewer-meta.ts | panOrRotateUp": {
    "message": "上にパンまたは回転"
  },
  "panels/layer_viewer/layer_viewer-meta.ts | resetView": {
    "message": "ビューをリセット"
  },
  "panels/layer_viewer/layer_viewer-meta.ts | switchToPanMode": {
    "message": "パンモードに切り替え"
  },
  "panels/layer_viewer/layer_viewer-meta.ts | switchToRotateMode": {
    "message": "回転モードに切り替え"
  },
  "panels/layer_viewer/layer_viewer-meta.ts | zoomIn": {
    "message": "拡大"
  },
  "panels/layer_viewer/layer_viewer-meta.ts | zoomOut": {
    "message": "縮小"
  },
  "panels/layers/LayersPanel.ts | details": {
    "message": "詳細"
  },
  "panels/layers/LayersPanel.ts | profiler": {
    "message": "プロファイラ"
  },
  "panels/layers/layers-meta.ts | layers": {
    "message": "レイヤ"
  },
  "panels/layers/layers-meta.ts | showLayers": {
    "message": "レイヤを表示する"
  },
  "panels/lighthouse/LighthouseController.ts | accessibility": {
    "message": "ユーザー補助"
  },
  "panels/lighthouse/LighthouseController.ts | applyMobileEmulation": {
    "message": "モバイル エミュレーションを適用"
  },
  "panels/lighthouse/LighthouseController.ts | applyMobileEmulationDuring": {
    "message": "監査中にモバイル エミュレーションを適用"
  },
  "panels/lighthouse/LighthouseController.ts | atLeastOneCategoryMustBeSelected": {
    "message": "1 つ以上のカテゴリを選択してください。"
  },
  "panels/lighthouse/LighthouseController.ts | bestPractices": {
    "message": "おすすめの方法"
  },
  "panels/lighthouse/LighthouseController.ts | canOnlyAuditHttphttpsPages": {
    "message": "HTTP または HTTPS のページのみを監査できます。別のページに移動します。"
  },
  "panels/lighthouse/LighthouseController.ts | clearStorage": {
    "message": "ストレージを消去"
  },
  "panels/lighthouse/LighthouseController.ts | desktop": {
    "message": "デスクトップ"
  },
  "panels/lighthouse/LighthouseController.ts | devtoolsThrottling": {
    "message": "DevTools スロットリング（上級者向け）"
  },
  "panels/lighthouse/LighthouseController.ts | doesThisPageFollowBestPractices": {
    "message": "このページは最新のウェブ開発のベスト プラクティスに従っているか"
  },
  "panels/lighthouse/LighthouseController.ts | doesThisPageMeetTheStandardOfA": {
    "message": "このページはプログレッシブ ウェブアプリの標準に合致しているか"
  },
  "panels/lighthouse/LighthouseController.ts | howLongDoesThisAppTakeToShow": {
    "message": "このアプリがコンテンツを表示して使用可能になるまでの時間"
  },
  "panels/lighthouse/LighthouseController.ts | indexeddb": {
    "message": "IndexedDB"
  },
  "panels/lighthouse/LighthouseController.ts | isThisPageOptimizedForAdSpeedAnd": {
    "message": "このページは広告のスピードと品質を考慮して最適化されているか"
  },
  "panels/lighthouse/LighthouseController.ts | isThisPageOptimizedForSearch": {
    "message": "このページは検索エンジンの結果ランキングに対し最適化されているか"
  },
  "panels/lighthouse/LighthouseController.ts | isThisPageUsableByPeopleWith": {
    "message": "このページは障がいを持つ人や身体の不自由な人が利用できるか"
  },
  "panels/lighthouse/LighthouseController.ts | javaScriptDisabled": {
    "message": "JavaScript が無効です。このページを監査するには、JavaScript を有効にする必要があります。コマンド メニューを開き、[JavaScript を有効にする] コマンドを実行して JavaScript を有効にします。"
  },
  "panels/lighthouse/LighthouseController.ts | lighthouseMode": {
    "message": "Lighthouse モード"
  },
  "panels/lighthouse/LighthouseController.ts | localStorage": {
    "message": "ローカル ストレージ"
  },
  "panels/lighthouse/LighthouseController.ts | mobile": {
    "message": "モバイル"
  },
  "panels/lighthouse/LighthouseController.ts | multipleTabsAreBeingControlledBy": {
    "message": "複数のタブが同じ service worker によって制御されています。このページを監査するには、オリジンが同じである他のタブを閉じてください。"
  },
  "panels/lighthouse/LighthouseController.ts | navigation": {
    "message": "ナビゲーション（デフォルト）"
  },
  "panels/lighthouse/LighthouseController.ts | navigationTooltip": {
    "message": "ナビゲーション モードでは、Lighthouse のオリジナルのレポートとまったく同じようにページの読み込みについて分析できます。"
  },
  "panels/lighthouse/LighthouseController.ts | performance": {
    "message": "パフォーマンス"
  },
  "panels/lighthouse/LighthouseController.ts | progressiveWebApp": {
    "message": "プログレッシブ ウェブアプリ"
  },
  "panels/lighthouse/LighthouseController.ts | publisherAds": {
    "message": "パブリッシャー広告"
  },
  "panels/lighthouse/LighthouseController.ts | resetStorageLocalstorage": {
    "message": "監査前にストレージ（cache、service workers など）をリセットします（パフォーマンスと PWA のテストにおすすめです）。"
  },
  "panels/lighthouse/LighthouseController.ts | runLighthouseInMode": {
    "message": "ナビゲーション モード、タイムスパン モード、スナップショット モードで Lighthouse を実行します"
  },
  "panels/lighthouse/LighthouseController.ts | seo": {
    "message": "SEO"
  },
  "panels/lighthouse/LighthouseController.ts | simulateASlowerPageLoadBasedOn": {
    "message": "スロットリングのシミュレーションでは、スロットリングされていない初期の読み込みからのデータに基づいて、低速のページ読み込みをシミュレートします。DevTools スロットリングではページの読み込みが実際に遅くなります。"
  },
  "panels/lighthouse/LighthouseController.ts | simulatedThrottling": {
    "message": "スロットリングのシミュレーション（デフォルト）"
  },
  "panels/lighthouse/LighthouseController.ts | snapshot": {
    "message": "スナップショット"
  },
  "panels/lighthouse/LighthouseController.ts | snapshotTooltip": {
    "message": "スナップショット モードでは、特定の状態（通常はユーザー操作後）のページを分析できます。"
  },
  "panels/lighthouse/LighthouseController.ts | thereMayBeStoredDataAffectingLoadingPlural": {
    "message": "次の場所に保存されているデータが読み込みパフォーマンスに影響を与えている可能性があります: {PH1}。これらのリソースがスコアに影響しないようにするためには、シークレット ウィンドウでこのページを監査してください。"
  },
  "panels/lighthouse/LighthouseController.ts | thereMayBeStoredDataAffectingSingular": {
    "message": "次の場所に保存されているデータが読み込みパフォーマンスに影響を与えている可能性があります: {PH1}。これらのリソースがスコアに影響しないようにするためには、シークレット ウィンドウでこのページを監査してください。"
  },
  "panels/lighthouse/LighthouseController.ts | throttlingMethod": {
    "message": "スロットリング方法"
  },
  "panels/lighthouse/LighthouseController.ts | timespan": {
    "message": "測定期間"
  },
  "panels/lighthouse/LighthouseController.ts | timespanTooltip": {
    "message": "タイムスパン モードでは、任意の期間（ユーザーの操作が見込まれる期間など）を分析できます。"
  },
  "panels/lighthouse/LighthouseController.ts | webSql": {
    "message": "ウェブ SQL"
  },
  "panels/lighthouse/LighthousePanel.ts | cancelling": {
    "message": "キャンセル中"
  },
  "panels/lighthouse/LighthousePanel.ts | clearAll": {
    "message": "すべてクリア"
  },
  "panels/lighthouse/LighthousePanel.ts | dropLighthouseJsonHere": {
    "message": "ここに Lighthouse JSON をドロップ"
  },
  "panels/lighthouse/LighthousePanel.ts | lighthouseSettings": {
    "message": "Lighthouse の設定"
  },
  "panels/lighthouse/LighthousePanel.ts | performAnAudit": {
    "message": "監査を実行します…"
  },
  "panels/lighthouse/LighthousePanel.ts | printing": {
    "message": "印刷"
  },
  "panels/lighthouse/LighthousePanel.ts | thePrintPopupWindowIsOpenPlease": {
    "message": "印刷ポップアップ ウィンドウが開きます。続行するにはウィンドウを閉じてください。"
  },
  "panels/lighthouse/LighthouseReportSelector.ts | newReport": {
    "message": "（新しいレポート）"
  },
  "panels/lighthouse/LighthouseReportSelector.ts | reports": {
    "message": "レポート"
  },
  "panels/lighthouse/LighthouseStartView.ts | analyzeNavigation": {
    "message": "ページ読み込みを分析"
  },
  "panels/lighthouse/LighthouseStartView.ts | analyzeSnapshot": {
    "message": "ページの状態を分析"
  },
  "panels/lighthouse/LighthouseStartView.ts | categories": {
    "message": "カテゴリ"
  },
  "panels/lighthouse/LighthouseStartView.ts | device": {
    "message": "デバイス"
  },
  "panels/lighthouse/LighthouseStartView.ts | generateLighthouseReport": {
    "message": "Lighthouse レポートの生成"
  },
  "panels/lighthouse/LighthouseStartView.ts | learnMore": {
    "message": "詳細"
  },
  "panels/lighthouse/LighthouseStartView.ts | mode": {
    "message": "モード"
  },
  "panels/lighthouse/LighthouseStartView.ts | plugins": {
    "message": "プラグイン"
  },
  "panels/lighthouse/LighthouseStartView.ts | startTimespan": {
    "message": "測定期間を開始"
  },
  "panels/lighthouse/LighthouseStatusView.ts | OfGlobalMobileUsersInWereOnGOrG": {
    "message": "2016 年には全世界のモバイル ユーザーの 75% が 2G または 3G を使用していました [出典: GSMA Mobile]"
  },
  "panels/lighthouse/LighthouseStatusView.ts | OfMobilePagesTakeNearlySeconds": {
    "message": "モバイルページの 70% は、スクロールせずに見える範囲のビジュアル コンテンツが画面に表示されるまでに 7 秒近くかかります。[出典: Think with Google]"
  },
  "panels/lighthouse/LighthouseStatusView.ts | SecondsIsTheAverageTimeAMobile": {
    "message": "3G 接続でモバイル ウェブページを読み込む所要時間は平均 19 秒 [出典: Google DoubleClick blog]"
  },
  "panels/lighthouse/LighthouseStatusView.ts | ahSorryWeRanIntoAnError": {
    "message": "申し訳ありません。エラーが発生しました。"
  },
  "panels/lighthouse/LighthouseStatusView.ts | almostThereLighthouseIsNow": {
    "message": "もう少しで完了です。Lighthouse がレポートを生成しています。"
  },
  "panels/lighthouse/LighthouseStatusView.ts | asPageLoadTimeIncreasesFromOne": {
    "message": "ページの読み込み時間が 1 秒から 7 秒に増えると、モバイルサイト訪問者の直帰率が 113% 向上する可能性があります。[ソース: Think with Google]"
  },
  "panels/lighthouse/LighthouseStatusView.ts | asTheNumberOfElementsOnAPage": {
    "message": "ページ上の要素数が 400 から 6,000 に増えると、コンバージョンの確率が 95% 低下します。[出展: Think with Google]"
  },
  "panels/lighthouse/LighthouseStatusView.ts | auditingS": {
    "message": "{PH1} の監査"
  },
  "panels/lighthouse/LighthouseStatusView.ts | auditingYourWebPage": {
    "message": "ウェブページを監査しています"
  },
  "panels/lighthouse/LighthouseStatusView.ts | byReducingTheResponseSizeOfJson": {
    "message": "コメント表示に必要な JSON のレスポンス サイズを減らすことで、Instagram のインプレッションが増加しました [出典: WPO Stats]"
  },
  "panels/lighthouse/LighthouseStatusView.ts | cancel": {
    "message": "キャンセル"
  },
  "panels/lighthouse/LighthouseStatusView.ts | cancelling": {
    "message": "キャンセルしています…"
  },
  "panels/lighthouse/LighthouseStatusView.ts | fastFactMessageWithPlaceholder": {
    "message": "💡 {PH1}"
  },
  "panels/lighthouse/LighthouseStatusView.ts | ifASiteTakesSecondToBecome": {
    "message": "サイトが操作可能になるまでの時間が 1 秒を超えると、ユーザーが注意力を保持できなくなり、そのページのタスクを完了する意欲が失われます [ソース: Google Developers Blog]"
  },
  "panels/lighthouse/LighthouseStatusView.ts | ifThisIssueIsReproduciblePlease": {
    "message": "この問題が再現する場合、Lighthouse GitHub リポジトリで報告してください。"
  },
  "panels/lighthouse/LighthouseStatusView.ts | lighthouseIsGatheringInformation": {
    "message": "Lighthouse がスコア計算のためにページに関する情報を収集しています。"
  },
  "panels/lighthouse/LighthouseStatusView.ts | lighthouseIsLoadingThePage": {
    "message": "Lighthouse がページを読み込んでいます。"
  },
  "panels/lighthouse/LighthouseStatusView.ts | lighthouseIsLoadingYourPage": {
    "message": "Lighthouse がページを読み込んでいます"
  },
  "panels/lighthouse/LighthouseStatusView.ts | lighthouseIsLoadingYourPageWith": {
    "message": "3G のモバイル デバイスにおけるパフォーマンス測定のために、Lighthouse がスロットリングによってページを読み込んでいます。"
  },
  "panels/lighthouse/LighthouseStatusView.ts | lighthouseIsLoadingYourPageWithMobile": {
    "message": "Lighthouse はモバイル エミュレーションによってページを読み込んでいます。"
  },
  "panels/lighthouse/LighthouseStatusView.ts | lighthouseIsLoadingYourPageWithThrottling": {
    "message": "3G の低速のデスクトップにおけるパフォーマンス測定のために、Lighthouse がスロットリングによってページを読み込んでいます。"
  },
  "panels/lighthouse/LighthouseStatusView.ts | lighthouseIsWarmingUp": {
    "message": "Lighthouse は準備中です…"
  },
  "panels/lighthouse/LighthouseStatusView.ts | lighthouseOnlySimulatesMobile": {
    "message": "Lighthouse はモバイル パフォーマンスのシミュレーションしか行いません。実際のデバイスのパフォーマンスを測定するには、WebPageTest.org をお試しください [出典: Lighthouse チーム]"
  },
  "panels/lighthouse/LighthouseStatusView.ts | loading": {
    "message": "読み込んでいます…"
  },
  "panels/lighthouse/LighthouseStatusView.ts | mbTakesAMinimumOfSecondsTo": {
    "message": "一般的な 3G 接続では 1 MB をダウンロードするのに 5 秒以上かかります [出典: WebPageTest および DevTools 3G 定義]"
  },
  "panels/lighthouse/LighthouseStatusView.ts | rebuildingPinterestPagesFor": {
    "message": "パフォーマンスを考慮して Pinterest ページを再ビルドしたことで、コンバージョン率が 15% 向上しました [出典: WPO Stats]"
  },
  "panels/lighthouse/LighthouseStatusView.ts | theAverageUserDeviceCostsLess": {
    "message": "平均的なユーザー デバイスの価格は 200 USD 未満です。[出典: International Data Corporation]"
  },
  "panels/lighthouse/LighthouseStatusView.ts | tryToNavigateToTheUrlInAFresh": {
    "message": "他のタブや拡張機能が開いていない状態で新しい Chrome プロファイルの URL に移動し、もう一度試してください。"
  },
  "panels/lighthouse/LighthouseStatusView.ts | walmartSawAIncreaseInRevenueFor": {
    "message": "Walmart では、ページの読み込み速度が 100 ms 改善されるたびに、収益が 1% ずつ向上していきました [ソース: WPO Stats]。"
  },
  "panels/lighthouse/LighthouseTimespanView.ts | cancel": {
    "message": "キャンセル"
  },
  "panels/lighthouse/LighthouseTimespanView.ts | endTimespan": {
    "message": "測定期間を終了"
  },
  "panels/lighthouse/LighthouseTimespanView.ts | timespanStarted": {
    "message": "測定期間を開始し、ページを監査しています"
  },
  "panels/lighthouse/LighthouseTimespanView.ts | timespanStarting": {
    "message": "測定期間を開始しています…"
  },
  "panels/lighthouse/lighthouse-meta.ts | showLighthouse": {
    "message": "Lighthouse を表示"
  },
  "panels/linear_memory_inspector/LinearMemoryInspectorController.ts | couldNotOpenLinearMemory": {
    "message": "リニアメモリ インスペクタを開けませんでした。バッファが見つかりませんでした。"
  },
  "panels/linear_memory_inspector/LinearMemoryInspectorController.ts | revealInMemoryInspectorPanel": {
    "message": "Memory Inspector パネルに表示"
  },
  "panels/linear_memory_inspector/LinearMemoryInspectorPane.ts | noOpenInspections": {
    "message": "継続中の検査はありません"
  },
  "panels/linear_memory_inspector/components/LinearMemoryHighlightChipList.ts | deleteHighlight": {
    "message": "このメモリをハイライト表示しない"
  },
  "panels/linear_memory_inspector/components/LinearMemoryHighlightChipList.ts | jumpToAddress": {
    "message": "このメモリに移動"
  },
  "panels/linear_memory_inspector/components/LinearMemoryInspector.ts | addressHasToBeANumberBetweenSAnd": {
    "message": "アドレスは {PH1}～{PH2} の数値で指定してください"
  },
  "panels/linear_memory_inspector/components/LinearMemoryNavigator.ts | enterAddress": {
    "message": "住所を入力"
  },
  "panels/linear_memory_inspector/components/LinearMemoryNavigator.ts | goBackInAddressHistory": {
    "message": "過去のアドレス履歴を表示"
  },
  "panels/linear_memory_inspector/components/LinearMemoryNavigator.ts | goForwardInAddressHistory": {
    "message": "アドレス履歴をスクロール"
  },
  "panels/linear_memory_inspector/components/LinearMemoryNavigator.ts | nextPage": {
    "message": "次のページ"
  },
  "panels/linear_memory_inspector/components/LinearMemoryNavigator.ts | previousPage": {
    "message": "前のページ"
  },
  "panels/linear_memory_inspector/components/LinearMemoryNavigator.ts | refresh": {
    "message": "更新"
  },
  "panels/linear_memory_inspector/components/LinearMemoryValueInterpreter.ts | changeEndianness": {
    "message": "Endianness を変更"
  },
  "panels/linear_memory_inspector/components/LinearMemoryValueInterpreter.ts | toggleValueTypeSettings": {
    "message": "値の型の設定の切り替え"
  },
  "panels/linear_memory_inspector/components/ValueInterpreterDisplay.ts | addressOutOfRange": {
    "message": "アドレスのメモリ不足範囲"
  },
  "panels/linear_memory_inspector/components/ValueInterpreterDisplay.ts | changeValueTypeMode": {
    "message": "モードを変更します"
  },
  "panels/linear_memory_inspector/components/ValueInterpreterDisplay.ts | jumpToPointer": {
    "message": "アドレスにジャンプ"
  },
  "panels/linear_memory_inspector/components/ValueInterpreterDisplay.ts | signedValue": {
    "message": "Signed 値"
  },
  "panels/linear_memory_inspector/components/ValueInterpreterDisplay.ts | unsignedValue": {
    "message": "Unsigned 値"
  },
  "panels/linear_memory_inspector/components/ValueInterpreterDisplayUtils.ts | notApplicable": {
    "message": "なし"
  },
  "panels/linear_memory_inspector/components/ValueInterpreterSettings.ts | otherGroup": {
    "message": "その他"
  },
  "panels/linear_memory_inspector/linear_memory_inspector-meta.ts | memoryInspector": {
    "message": "Memory Inspector"
  },
  "panels/linear_memory_inspector/linear_memory_inspector-meta.ts | showMemoryInspector": {
    "message": "Memory Inspector を表示"
  },
  "panels/media/EventDisplayTable.ts | eventDisplay": {
    "message": "イベントの表示"
  },
  "panels/media/EventDisplayTable.ts | eventName": {
    "message": "イベント名"
  },
  "panels/media/EventDisplayTable.ts | timestamp": {
    "message": "タイムスタンプ"
  },
  "panels/media/EventDisplayTable.ts | value": {
    "message": "値"
  },
  "panels/media/EventTimelineView.ts | bufferingStatus": {
    "message": "バッファリング ステータス"
  },
  "panels/media/EventTimelineView.ts | playbackStatus": {
    "message": "再生ステータス"
  },
  "panels/media/PlayerDetailView.ts | events": {
    "message": "イベント"
  },
  "panels/media/PlayerDetailView.ts | messages": {
    "message": "メッセージ"
  },
  "panels/media/PlayerDetailView.ts | playerEvents": {
    "message": "プレーヤー イベント"
  },
  "panels/media/PlayerDetailView.ts | playerMessages": {
    "message": "プレーヤー メッセージ"
  },
  "panels/media/PlayerDetailView.ts | playerProperties": {
    "message": "プレーヤー プロバティ"
  },
  "panels/media/PlayerDetailView.ts | playerTimeline": {
    "message": "プレーヤーのタイムライン"
  },
  "panels/media/PlayerDetailView.ts | properties": {
    "message": "プロパティ"
  },
  "panels/media/PlayerDetailView.ts | timeline": {
    "message": "スケジュール"
  },
  "panels/media/PlayerListView.ts | hideAllOthers": {
    "message": "他をすべて非表示"
  },
  "panels/media/PlayerListView.ts | hidePlayer": {
    "message": "プレーヤーを非表示"
  },
  "panels/media/PlayerListView.ts | players": {
    "message": "プレーヤー"
  },
  "panels/media/PlayerListView.ts | savePlayerInfo": {
    "message": "プレーヤー情報を保存"
  },
  "panels/media/PlayerMessagesView.ts | all": {
    "message": "すべて"
  },
  "panels/media/PlayerMessagesView.ts | custom": {
    "message": "カスタム"
  },
  "panels/media/PlayerMessagesView.ts | debug": {
    "message": "デバッグ"
  },
  "panels/media/PlayerMessagesView.ts | default": {
    "message": "デフォルト"
  },
  "panels/media/PlayerMessagesView.ts | error": {
    "message": "エラー"
  },
  "panels/media/PlayerMessagesView.ts | errorCauseLabel": {
    "message": "原因:"
  },
  "panels/media/PlayerMessagesView.ts | errorCodeLabel": {
    "message": "エラーコード:"
  },
  "panels/media/PlayerMessagesView.ts | errorDataLabel": {
    "message": "データ:"
  },
  "panels/media/PlayerMessagesView.ts | errorGroupLabel": {
    "message": "エラーグループ:"
  },
  "panels/media/PlayerMessagesView.ts | errorStackLabel": {
    "message": "スタックトレース:"
  },
  "panels/media/PlayerMessagesView.ts | filterLogMessages": {
    "message": "ログメッセージをフィルタ"
  },
  "panels/media/PlayerMessagesView.ts | info": {
    "message": "情報"
  },
  "panels/media/PlayerMessagesView.ts | logLevel": {
    "message": "ログレベル:"
  },
  "panels/media/PlayerMessagesView.ts | warning": {
    "message": "警告"
  },
  "panels/media/PlayerPropertiesView.ts | audio": {
    "message": "音声"
  },
  "panels/media/PlayerPropertiesView.ts | bitrate": {
    "message": "ビットレート"
  },
  "panels/media/PlayerPropertiesView.ts | decoder": {
    "message": "デコーダ"
  },
  "panels/media/PlayerPropertiesView.ts | decoderName": {
    "message": "デコーダ名"
  },
  "panels/media/PlayerPropertiesView.ts | decryptingDemuxer": {
    "message": "デマルチプレクサを復号しています"
  },
  "panels/media/PlayerPropertiesView.ts | duration": {
    "message": "所要時間"
  },
  "panels/media/PlayerPropertiesView.ts | encoderName": {
    "message": "エンコーダ名"
  },
  "panels/media/PlayerPropertiesView.ts | fileSize": {
    "message": "ファイルサイズ"
  },
  "panels/media/PlayerPropertiesView.ts | frameRate": {
    "message": "フレームレート"
  },
  "panels/media/PlayerPropertiesView.ts | hardwareDecoder": {
    "message": "ハードウェア デコーダ"
  },
  "panels/media/PlayerPropertiesView.ts | hardwareEncoder": {
    "message": "ハードウェア エンコーダ"
  },
  "panels/media/PlayerPropertiesView.ts | noDecoder": {
    "message": "デコーダがありません"
  },
  "panels/media/PlayerPropertiesView.ts | noEncoder": {
    "message": "エンコーダがありません"
  },
  "panels/media/PlayerPropertiesView.ts | noTextTracks": {
    "message": "テキスト トラックなし"
  },
  "panels/media/PlayerPropertiesView.ts | playbackFrameTitle": {
    "message": "再生フレームのタイトル"
  },
  "panels/media/PlayerPropertiesView.ts | playbackFrameUrl": {
    "message": "再生フレームの URL"
  },
  "panels/media/PlayerPropertiesView.ts | properties": {
    "message": "プロパティ"
  },
  "panels/media/PlayerPropertiesView.ts | rangeHeaderSupport": {
    "message": "Range ヘッダー サポート"
  },
  "panels/media/PlayerPropertiesView.ts | rendererName": {
    "message": "レンダラ名"
  },
  "panels/media/PlayerPropertiesView.ts | resolution": {
    "message": "解決策"
  },
  "panels/media/PlayerPropertiesView.ts | singleoriginPlayback": {
    "message": "シングルオリジン再生"
  },
  "panels/media/PlayerPropertiesView.ts | startTime": {
    "message": "開始時間"
  },
  "panels/media/PlayerPropertiesView.ts | streaming": {
    "message": "ストリーミング"
  },
  "panels/media/PlayerPropertiesView.ts | textTrack": {
    "message": "テキスト トラック"
  },
  "panels/media/PlayerPropertiesView.ts | track": {
    "message": "トラック"
  },
  "panels/media/PlayerPropertiesView.ts | video": {
    "message": "動画"
  },
  "panels/media/PlayerPropertiesView.ts | videoFreezingScore": {
    "message": "動画のフリーズ度スコア"
  },
  "panels/media/PlayerPropertiesView.ts | videoPlaybackRoughness": {
    "message": "動画再生の粗さ"
  },
  "panels/media/media-meta.ts | media": {
    "message": "メディア"
  },
  "panels/media/media-meta.ts | showMedia": {
    "message": "メディアを表示"
  },
  "panels/media/media-meta.ts | video": {
    "message": "動画"
  },
  "panels/mobile_throttling/MobileThrottlingSelector.ts | advanced": {
    "message": "詳細設定"
  },
  "panels/mobile_throttling/MobileThrottlingSelector.ts | disabled": {
    "message": "無効"
  },
  "panels/mobile_throttling/MobileThrottlingSelector.ts | presets": {
    "message": "プリセット"
  },
  "panels/mobile_throttling/NetworkPanelIndicator.ts | acceptedEncodingOverrideSet": {
    "message": "受け入れられた一連の Content-Encoding ヘッダーが DevTools で修正されました。[ネットワーク状態] パネルをご覧ください"
  },
  "panels/mobile_throttling/NetworkPanelIndicator.ts | browserCacheDisabled": {
    "message": "ブラウザ キャッシュが無効になっています"
  },
  "panels/mobile_throttling/NetworkPanelIndicator.ts | networkThrottlingIsEnabled": {
    "message": "ネットワーク スロットリングが有効です"
  },
  "panels/mobile_throttling/NetworkPanelIndicator.ts | requestsMayBeBlocked": {
    "message": "リクエストがブロックされる可能性があります。[ネットワーク リクエストのブロック] パネルをご覧ください"
  },
  "panels/mobile_throttling/NetworkPanelIndicator.ts | requestsMayBeOverridden": {
    "message": "リクエストはローカルでオーバーライドされる可能性があります。[ソース] パネルをご覧ください"
  },
  "panels/mobile_throttling/NetworkThrottlingSelector.ts | custom": {
    "message": "カスタム"
  },
  "panels/mobile_throttling/NetworkThrottlingSelector.ts | disabled": {
    "message": "無効"
  },
  "panels/mobile_throttling/NetworkThrottlingSelector.ts | presets": {
    "message": "プリセット"
  },
  "panels/mobile_throttling/ThrottlingManager.ts | add": {
    "message": "追加…"
  },
  "panels/mobile_throttling/ThrottlingManager.ts | addS": {
    "message": "{PH1} を追加"
  },
  "panels/mobile_throttling/ThrottlingManager.ts | cpuThrottling": {
    "message": "CPU スロットリング"
  },
  "panels/mobile_throttling/ThrottlingManager.ts | cpuThrottlingIsEnabled": {
    "message": "CPU スロットリングが有効です"
  },
  "panels/mobile_throttling/ThrottlingManager.ts | dSlowdown": {
    "message": "{PH1} × 減速"
  },
  "panels/mobile_throttling/ThrottlingManager.ts | excessConcurrency": {
    "message": "デフォルト値を超えるとシステムのパフォーマンスが低下する可能性があります。"
  },
  "panels/mobile_throttling/ThrottlingManager.ts | forceDisconnectedFromNetwork": {
    "message": "ネットワークから強制的に切断"
  },
  "panels/mobile_throttling/ThrottlingManager.ts | hardwareConcurrency": {
    "message": "ハードウェアの並行処理"
  },
  "panels/mobile_throttling/ThrottlingManager.ts | hardwareConcurrencyIsEnabled": {
    "message": "ハードウェアの並行処理のオーバーライドが有効です"
  },
  "panels/mobile_throttling/ThrottlingManager.ts | hardwareConcurrencySettingTooltip": {
    "message": "ページで navigator.hardwareConcurrency によって報告された値をオーバーライドする"
  },
  "panels/mobile_throttling/ThrottlingManager.ts | noThrottling": {
    "message": "スロットリングなし"
  },
  "panels/mobile_throttling/ThrottlingManager.ts | offline": {
    "message": "オフライン"
  },
  "panels/mobile_throttling/ThrottlingManager.ts | resetConcurrency": {
    "message": "デフォルト値にリセット"
  },
  "panels/mobile_throttling/ThrottlingManager.ts | sS": {
    "message": "{PH1}: {PH2}"
  },
  "panels/mobile_throttling/ThrottlingManager.ts | throttling": {
    "message": "スロットリング"
  },
  "panels/mobile_throttling/ThrottlingPresets.ts | checkNetworkAndPerformancePanels": {
    "message": "[ネットワーク] パネルと [パフォーマンス] パネルをチェック"
  },
  "panels/mobile_throttling/ThrottlingPresets.ts | custom": {
    "message": "カスタム"
  },
  "panels/mobile_throttling/ThrottlingPresets.ts | fastGXCpuSlowdown": {
    "message": "高速 3G（CPU 4 倍減速）"
  },
  "panels/mobile_throttling/ThrottlingPresets.ts | lowendMobile": {
    "message": "ローエンド モバイル"
  },
  "panels/mobile_throttling/ThrottlingPresets.ts | midtierMobile": {
    "message": "ミッドティア モバイル"
  },
  "panels/mobile_throttling/ThrottlingPresets.ts | noInternetConnectivity": {
    "message": "インターネットに接続されていません"
  },
  "panels/mobile_throttling/ThrottlingPresets.ts | noThrottling": {
    "message": "スロットリングなし"
  },
  "panels/mobile_throttling/ThrottlingPresets.ts | slowGXCpuSlowdown": {
    "message": "低速 3G（CPU 6 倍減速）"
  },
  "panels/mobile_throttling/ThrottlingSettingsTab.ts | addCustomProfile": {
    "message": "カスタム プロファイルを追加..."
  },
  "panels/mobile_throttling/ThrottlingSettingsTab.ts | dms": {
    "message": "{PH1} ms"
  },
  "panels/mobile_throttling/ThrottlingSettingsTab.ts | download": {
    "message": "ダウンロード"
  },
  "panels/mobile_throttling/ThrottlingSettingsTab.ts | dskbits": {
    "message": "{PH1} kbit/s"
  },
  "panels/mobile_throttling/ThrottlingSettingsTab.ts | fsmbits": {
    "message": "{PH1} Mbit/s"
  },
  "panels/mobile_throttling/ThrottlingSettingsTab.ts | latency": {
    "message": "レイテンシ"
  },
  "panels/mobile_throttling/ThrottlingSettingsTab.ts | latencyMustBeAnIntegerBetweenSms": {
    "message": "レイテンシは {PH1} ms 以上 {PH2} ms 以下の整数で指定してください"
  },
  "panels/mobile_throttling/ThrottlingSettingsTab.ts | networkThrottlingProfiles": {
    "message": "ネットワーク スロットリング プロファイル"
  },
  "panels/mobile_throttling/ThrottlingSettingsTab.ts | optional": {
    "message": "オプション"
  },
  "panels/mobile_throttling/ThrottlingSettingsTab.ts | profileName": {
    "message": "プロフィール名"
  },
  "panels/mobile_throttling/ThrottlingSettingsTab.ts | profileNameCharactersLengthMust": {
    "message": "プロファイル名は 1 文字以上 {PH1} 文字以下にする必要があります"
  },
  "panels/mobile_throttling/ThrottlingSettingsTab.ts | sMustBeANumberBetweenSkbsToSkbs": {
    "message": "{PH1} は {PH2} kbit/s 以上 {PH3} kbit/s 以下の数値で指定してください"
  },
  "panels/mobile_throttling/ThrottlingSettingsTab.ts | upload": {
    "message": "アップロード"
  },
  "panels/mobile_throttling/mobile_throttling-meta.ts | device": {
    "message": "デバイス"
  },
  "panels/mobile_throttling/mobile_throttling-meta.ts | enableFastGThrottling": {
    "message": "高速 3G スロットリングを有効にする"
  },
  "panels/mobile_throttling/mobile_throttling-meta.ts | enableSlowGThrottling": {
    "message": "低速 3G スロットリングを有効にする"
  },
  "panels/mobile_throttling/mobile_throttling-meta.ts | goOffline": {
    "message": "オフラインに切り替え"
  },
  "panels/mobile_throttling/mobile_throttling-meta.ts | goOnline": {
    "message": "オンラインにする"
  },
  "panels/mobile_throttling/mobile_throttling-meta.ts | showThrottling": {
    "message": "スロットリングを表示"
  },
  "panels/mobile_throttling/mobile_throttling-meta.ts | throttling": {
    "message": "スロットリング"
  },
  "panels/mobile_throttling/mobile_throttling-meta.ts | throttlingTag": {
    "message": "スロットリング"
  },
  "panels/network/BinaryResourceView.ts | binaryViewType": {
    "message": "バイナリ ビュー タイプ"
  },
  "panels/network/BinaryResourceView.ts | copiedAsBase": {
    "message": "Base64 としてコピー済み"
  },
  "panels/network/BinaryResourceView.ts | copiedAsHex": {
    "message": "Hex としてコピー済み"
  },
  "panels/network/BinaryResourceView.ts | copiedAsUtf": {
    "message": "UTF-8 としてコピー済み"
  },
  "panels/network/BinaryResourceView.ts | copyAsBase": {
    "message": "Base64 としてコピー"
  },
  "panels/network/BinaryResourceView.ts | copyAsHex": {
    "message": "Hex としてコピー"
  },
  "panels/network/BinaryResourceView.ts | copyAsUtf": {
    "message": "UTF-8 としてコピー"
  },
  "panels/network/BinaryResourceView.ts | copyToClipboard": {
    "message": "クリップボードにコピー"
  },
  "panels/network/BinaryResourceView.ts | hexViewer": {
    "message": "Hex ビューア"
  },
  "panels/network/BlockedURLsPane.ts | addNetworkRequestBlockingPattern": {
    "message": "ネットワーク リクエストのブロック パターンを追加"
  },
  "panels/network/BlockedURLsPane.ts | addPattern": {
    "message": "パターンを追加"
  },
  "panels/network/BlockedURLsPane.ts | dBlocked": {
    "message": "{PH1} をブロックしました"
  },
  "panels/network/BlockedURLsPane.ts | enableNetworkRequestBlocking": {
    "message": "ネットワーク リクエストのブロックを有効にする"
  },
  "panels/network/BlockedURLsPane.ts | itemDeleted": {
    "message": "アイテムを削除しました"
  },
  "panels/network/BlockedURLsPane.ts | networkRequestsAreNotBlockedS": {
    "message": "ネットワーク リクエストをブロックしない。{PH1}"
  },
  "panels/network/BlockedURLsPane.ts | patternAlreadyExists": {
    "message": "パターンがすでに存在します。"
  },
  "panels/network/BlockedURLsPane.ts | patternInputCannotBeEmpty": {
    "message": "パターン入力は空白にできません。"
  },
  "panels/network/BlockedURLsPane.ts | textPatternToBlockMatching": {
    "message": "一致したリクエストをブロックするテキスト パターン。ワイルドカードとして * を使用してください"
  },
  "panels/network/EventSourceMessagesView.ts | copyMessage": {
    "message": "メッセージをコピー"
  },
  "panels/network/EventSourceMessagesView.ts | data": {
    "message": "データ"
  },
  "panels/network/EventSourceMessagesView.ts | eventSource": {
    "message": "イベントソース"
  },
  "panels/network/EventSourceMessagesView.ts | id": {
    "message": "ID"
  },
  "panels/network/EventSourceMessagesView.ts | time": {
    "message": "時間"
  },
  "panels/network/EventSourceMessagesView.ts | type": {
    "message": "タイプ"
  },
  "panels/network/NetworkConfigView.ts | acceptedEncoding": {
    "message": "受け入れられた Content-Encoding"
  },
  "panels/network/NetworkConfigView.ts | caching": {
    "message": "キャッシュ"
  },
  "panels/network/NetworkConfigView.ts | clientHintsStatusText": {
    "message": "ユーザー エージェントが更新されました。"
  },
  "panels/network/NetworkConfigView.ts | custom": {
    "message": "カスタム..."
  },
  "panels/network/NetworkConfigView.ts | customUserAgentFieldIsRequired": {
    "message": "カスタム ユーザー エージェント フィールドは必須です"
  },
  "panels/network/NetworkConfigView.ts | disableCache": {
    "message": "キャッシュを無効化"
  },
  "panels/network/NetworkConfigView.ts | enterACustomUserAgent": {
    "message": "カスタム ユーザー エージェントを入力"
  },
  "panels/network/NetworkConfigView.ts | networkConditionsPanelShown": {
    "message": "ネットワーク状況が表示されています"
  },
  "panels/network/NetworkConfigView.ts | networkThrottling": {
    "message": "ネットワーク スロットリング"
  },
  "panels/network/NetworkConfigView.ts | selectAutomatically": {
    "message": "ブラウザのデフォルトを使用"
  },
  "panels/network/NetworkConfigView.ts | userAgent": {
    "message": "ユーザー エージェント"
  },
  "panels/network/NetworkDataGridNode.ts | alternativeJobWonRace": {
    "message": "Chrome は、HTTP の異なるバージョンを使用した接続の確立との競合に勝ったため、「Alt-Svc」ヘッダーによる HTTP/3 接続を使用しました。"
  },
  "panels/network/NetworkDataGridNode.ts | alternativeJobWonWithoutRace": {
    "message": "Chrome は、HTTP の異なるバージョンを使用した接続の確立で競合せずに、「Alt-Svc」ヘッダーによる HTTP/3 接続を使用しました。"
  },
  "panels/network/NetworkDataGridNode.ts | blockedTooltip": {
    "message": "このリクエストは、レスポンス ヘッダーの設定が誤っていたためブロックされました（クリックすると、ヘッダーが表示されます）"
  },
  "panels/network/NetworkDataGridNode.ts | blockeds": {
    "message": "（ブロック: {PH1}）"
  },
  "panels/network/NetworkDataGridNode.ts | broken": {
    "message": "Chrome は、接続が切断となっていたため、HTTP/3 接続の確立を試みませんでした。"
  },
  "panels/network/NetworkDataGridNode.ts | canceled": {
    "message": "（キャンセル済み）"
  },
  "panels/network/NetworkDataGridNode.ts | corsError": {
    "message": "CORS エラー"
  },
  "panels/network/NetworkDataGridNode.ts | crossoriginResourceSharingErrorS": {
    "message": "クロスオリジン リソース シェアリング エラー: {PH1}"
  },
  "panels/network/NetworkDataGridNode.ts | csp": {
    "message": "csp"
  },
  "panels/network/NetworkDataGridNode.ts | data": {
    "message": "（データ）"
  },
  "panels/network/NetworkDataGridNode.ts | devtools": {
    "message": "DevTools"
  },
  "panels/network/NetworkDataGridNode.ts | diskCache": {
    "message": "（ディスク キャッシュ）"
  },
  "panels/network/NetworkDataGridNode.ts | dnsAlpnH3JobWonRace": {
    "message": "Chrome は、DNS record が HTTP/3 のサポートを示したため HTTP/3 接続を使用しました。つまり、これが HTTP の異なるバージョンを使用した接続の確立との競合に勝ちました。"
  },
  "panels/network/NetworkDataGridNode.ts | dnsAlpnH3JobWonWithoutRace": {
    "message": "Chrome は、DNS record が HTTP/3 のサポートを示したため HTTP/3 接続を使用しました。HTTP の異なるバージョンを使用した接続の確立との競合はありませんでした。"
  },
  "panels/network/NetworkDataGridNode.ts | failed": {
    "message": "（失敗）"
  },
  "panels/network/NetworkDataGridNode.ts | finished": {
    "message": "終了"
  },
  "panels/network/NetworkDataGridNode.ts | initialPriorityToolTip": {
    "message": "{PH1}、初期優先度: {PH2}"
  },
  "panels/network/NetworkDataGridNode.ts | level": {
    "message": "レベル 1"
  },
  "panels/network/NetworkDataGridNode.ts | mainJobWonRace": {
    "message": "Chrome は、HTTP/3 接続の確立との競合に勝ったためこのプロトコルを使用しました。"
  },
  "panels/network/NetworkDataGridNode.ts | mappingMissing": {
    "message": "Chrome は、リクエスト時に使用できる代替プロトコル情報がなかったものの、レスポンスに「Alt-Svc」ヘッダーが存在していたため、HTTP の代替バージョンを使用しませんでした。"
  },
  "panels/network/NetworkDataGridNode.ts | matchedToServiceWorkerRouter": {
    "message": "ServiceWorker router#{PH1} に一致、リソースサイズ: {PH2}"
  },
  "panels/network/NetworkDataGridNode.ts | memoryCache": {
    "message": "（メモリ キャッシュ）"
  },
  "panels/network/NetworkDataGridNode.ts | origin": {
    "message": "オリジン"
  },
  "panels/network/NetworkDataGridNode.ts | other": {
    "message": "その他"
  },
  "panels/network/NetworkDataGridNode.ts | otherC": {
    "message": "その他"
  },
  "panels/network/NetworkDataGridNode.ts | parser": {
    "message": "パーサー"
  },
  "panels/network/NetworkDataGridNode.ts | pending": {
    "message": "保留中"
  },
  "panels/network/NetworkDataGridNode.ts | pendingq": {
    "message": "（保留中）"
  },
  "panels/network/NetworkDataGridNode.ts | prefetchCache": {
    "message": "（プリフェッチ キャッシュ）"
  },
  "panels/network/NetworkDataGridNode.ts | preflight": {
    "message": "プリフライト"
  },
  "panels/network/NetworkDataGridNode.ts | preload": {
    "message": "プリロード"
  },
  "panels/network/NetworkDataGridNode.ts | push": {
    "message": "プッシュ / "
  },
  "panels/network/NetworkDataGridNode.ts | redirect": {
    "message": "リダイレクト"
  },
  "panels/network/NetworkDataGridNode.ts | requestContentHeadersOverridden": {
    "message": "リクエストのコンテンツとヘッダーの両方がオーバーライドされます"
  },
  "panels/network/NetworkDataGridNode.ts | requestContentOverridden": {
    "message": "リクエストのコンテンツがオーバーライドされています"
  },
  "panels/network/NetworkDataGridNode.ts | requestHeadersOverridden": {
    "message": "リクエスト ヘッダーはオーバーライドされています"
  },
  "panels/network/NetworkDataGridNode.ts | sPreflight": {
    "message": "{PH1} + プリフライト"
  },
  "panels/network/NetworkDataGridNode.ts | script": {
    "message": "スクリプト"
  },
  "panels/network/NetworkDataGridNode.ts | selectPreflightRequest": {
    "message": "プリフライト リクエストを選択"
  },
  "panels/network/NetworkDataGridNode.ts | selectTheRequestThatTriggered": {
    "message": "このプリフライトをトリガーしたリクエストを選択"
  },
  "panels/network/NetworkDataGridNode.ts | servedFromDiskCacheResourceSizeS": {
    "message": "ディスク キャッシュから配信されました。リソースサイズ: {PH1}"
  },
  "panels/network/NetworkDataGridNode.ts | servedFromMemoryCacheResource": {
    "message": "メモリ キャッシュから配信、リソースサイズ: {PH1}"
  },
  "panels/network/NetworkDataGridNode.ts | servedFromPrefetchCacheResource": {
    "message": "プリフェッチ キャッシュから配信されました。リソースサイズ: {PH1}"
  },
  "panels/network/NetworkDataGridNode.ts | servedFromServiceWorkerResource": {
    "message": "ServiceWorker から配信、リソースサイズ: {PH1}"
  },
  "panels/network/NetworkDataGridNode.ts | servedFromSignedHttpExchange": {
    "message": "Signed HTTP Exchange から配信されました。リソースサイズ: {PH1}"
  },
  "panels/network/NetworkDataGridNode.ts | servedFromWebBundle": {
    "message": "ウェブバンドルから配信、リソースのサイズ: {PH1}"
  },
  "panels/network/NetworkDataGridNode.ts | serviceWorker": {
    "message": "（ServiceWorker）"
  },
  "panels/network/NetworkDataGridNode.ts | signedexchange": {
    "message": "Signed-exchange"
  },
  "panels/network/NetworkDataGridNode.ts | thirdPartyPhaseout": {
    "message": "サードパーティ Cookie の段階的廃止により、このリクエストの Cookie はブロックされています。詳しくは、[問題] タブをご覧ください。"
  },
  "panels/network/NetworkDataGridNode.ts | timeSubtitleTooltipText": {
    "message": "レイテンシ（レスポンス受信時間 - 開始時間）"
  },
  "panels/network/NetworkDataGridNode.ts | unknown": {
    "message": "（不明）"
  },
  "panels/network/NetworkDataGridNode.ts | unknownExplanation": {
    "message": "リクエスト中に発行元のページが読み込まれなかったため、リクエストのステータスを表示できません。chrome://net-export を使用してネットワーク ログを取得し、すべてのリクエストの詳細を確認できます。"
  },
  "panels/network/NetworkDataGridNode.ts | webBundle": {
    "message": "（ウェブバンドル）"
  },
  "panels/network/NetworkDataGridNode.ts | webBundleError": {
    "message": "ウェブバンドル エラー"
  },
  "panels/network/NetworkDataGridNode.ts | webBundleInnerRequest": {
    "message": "ウェブバンドルから配信"
  },
  "panels/network/NetworkItemView.ts | containsOverriddenHeaders": {
    "message": "このレスポンスには、DevTools によってオーバーライドされたヘッダーが含まれています。"
  },
  "panels/network/NetworkItemView.ts | cookies": {
    "message": "Cookie"
  },
  "panels/network/NetworkItemView.ts | eventstream": {
    "message": "EventStream"
  },
  "panels/network/NetworkItemView.ts | headers": {
    "message": "ヘッダー"
  },
  "panels/network/NetworkItemView.ts | initiator": {
    "message": "イニシエータ"
  },
  "panels/network/NetworkItemView.ts | messages": {
    "message": "メッセージ"
  },
  "panels/network/NetworkItemView.ts | payload": {
    "message": "ペイロード"
  },
  "panels/network/NetworkItemView.ts | preview": {
    "message": "プレビュー"
  },
  "panels/network/NetworkItemView.ts | rawResponseData": {
    "message": "未加工のレスポンス データ"
  },
  "panels/network/NetworkItemView.ts | requestAndResponseCookies": {
    "message": "リクエストとレスポンスの Cookie"
  },
  "panels/network/NetworkItemView.ts | requestAndResponseTimeline": {
    "message": "リクエスト レスポンス タイムライン"
  },
  "panels/network/NetworkItemView.ts | requestInitiatorCallStack": {
    "message": "イニシエータ コールスタックをリクエスト"
  },
  "panels/network/NetworkItemView.ts | response": {
    "message": "レスポンス"
  },
  "panels/network/NetworkItemView.ts | responseIsOverridden": {
    "message": "このレスポンスは DevTools によってオーバーライドされます"
  },
  "panels/network/NetworkItemView.ts | responsePreview": {
    "message": "レスポンスのプレビュー"
  },
  "panels/network/NetworkItemView.ts | signedexchangeError": {
    "message": "SignedExchange エラー"
  },
  "panels/network/NetworkItemView.ts | thirdPartyPhaseout": {
    "message": "サードパーティ Cookie の段階的廃止により、Cookie がブロックされています。"
  },
  "panels/network/NetworkItemView.ts | timing": {
    "message": "タイミング"
  },
  "panels/network/NetworkItemView.ts | trustTokenOperationDetails": {
    "message": "プライベート ステート トークンのオペレーションの詳細"
  },
  "panels/network/NetworkItemView.ts | trustTokens": {
    "message": "プライベート ステート トークン"
  },
  "panels/network/NetworkItemView.ts | websocketMessages": {
    "message": "WebSocket メッセージ"
  },
  "panels/network/NetworkLogView.ts | allStrings": {
    "message": "すべて"
  },
  "panels/network/NetworkLogView.ts | areYouSureYouWantToClearBrowser": {
    "message": "ブラウザのキャッシュを消去してもよろしいですか？"
  },
  "panels/network/NetworkLogView.ts | areYouSureYouWantToClearBrowserCookies": {
    "message": "ブラウザの Cookie を消去してもよろしいですか？"
  },
  "panels/network/NetworkLogView.ts | blockRequestDomain": {
    "message": "リクエスト ドメインをブロック"
  },
  "panels/network/NetworkLogView.ts | blockRequestUrl": {
    "message": "ブロック リクエストの URL"
  },
  "panels/network/NetworkLogView.ts | blockedRequests": {
    "message": "ブロックされたリクエスト"
  },
  "panels/network/NetworkLogView.ts | chromeExtensions": {
    "message": "拡張機能の URL を表示しない"
  },
  "panels/network/NetworkLogView.ts | clearBrowserCache": {
    "message": "ブラウザ キャッシュを消去"
  },
  "panels/network/NetworkLogView.ts | clearBrowserCookies": {
    "message": "ブラウザ Cookie を消去"
  },
  "panels/network/NetworkLogView.ts | copy": {
    "message": "コピー"
  },
  "panels/network/NetworkLogView.ts | copyAllAsCurl": {
    "message": "cURL としてすべてコピー"
  },
  "panels/network/NetworkLogView.ts | copyAllAsCurlBash": {
    "message": "cURL（bash）としてすべてコピー"
  },
  "panels/network/NetworkLogView.ts | copyAllAsCurlCmd": {
    "message": "cURL（cmd）としてすべてコピー"
  },
  "panels/network/NetworkLogView.ts | copyAllAsFetch": {
    "message": "fetch としてすべてコピー"
  },
  "panels/network/NetworkLogView.ts | copyAllAsHar": {
    "message": "HAR としてすべてコピー"
  },
  "panels/network/NetworkLogView.ts | copyAllAsNodejsFetch": {
    "message": "fetch（Node.js）としてすべてコピー"
  },
  "panels/network/NetworkLogView.ts | copyAllAsPowershell": {
    "message": "PowerShell としてすべてコピー"
  },
  "panels/network/NetworkLogView.ts | copyAllURLs": {
    "message": "すべての URL をコピー"
  },
  "panels/network/NetworkLogView.ts | copyAsCurl": {
    "message": "cURL としてコピー"
  },
  "panels/network/NetworkLogView.ts | copyAsCurlBash": {
    "message": "cURL（bash）としてコピー"
  },
  "panels/network/NetworkLogView.ts | copyAsCurlCmd": {
    "message": "cURL（cmd）としてコピー"
  },
  "panels/network/NetworkLogView.ts | copyAsFetch": {
    "message": "fetch としてコピー"
  },
  "panels/network/NetworkLogView.ts | copyAsNodejsFetch": {
    "message": "fetch（Node.js）としてコピー"
  },
  "panels/network/NetworkLogView.ts | copyAsPowershell": {
    "message": "PowerShell としてコピー"
  },
  "panels/network/NetworkLogView.ts | copyRequestHeaders": {
    "message": "リクエスト ヘッダーをコピー"
  },
  "panels/network/NetworkLogView.ts | copyResponse": {
    "message": "レスポンスをコピー"
  },
  "panels/network/NetworkLogView.ts | copyResponseHeaders": {
    "message": "レスポンス ヘッダーをコピー"
  },
  "panels/network/NetworkLogView.ts | copyStacktrace": {
    "message": "スタック トレースをコピー"
  },
  "panels/network/NetworkLogView.ts | copyURL": {
    "message": "URL をコピー"
  },
  "panels/network/NetworkLogView.ts | domcontentloadedS": {
    "message": "DOMContentLoaded: {PH1}"
  },
  "panels/network/NetworkLogView.ts | dropHarFilesHere": {
    "message": "HAR ファイルをこちらにドロップ"
  },
  "panels/network/NetworkLogView.ts | finishS": {
    "message": "終了: {PH1}"
  },
  "panels/network/NetworkLogView.ts | hasBlockedCookies": {
    "message": "ブロック中のレスポンス Cookie"
  },
  "panels/network/NetworkLogView.ts | hideChromeExtension": {
    "message": "「chrome-extension://」URL を非表示にする"
  },
  "panels/network/NetworkLogView.ts | hideDataUrls": {
    "message": "データの URL を非表示"
  },
  "panels/network/NetworkLogView.ts | hidesDataAndBlobUrls": {
    "message": "「data:」URL と「blob:」URL を非表示にする"
  },
  "panels/network/NetworkLogView.ts | invertFilter": {
    "message": "反転"
  },
  "panels/network/NetworkLogView.ts | invertsFilter": {
    "message": "検索フィルタを反転"
  },
  "panels/network/NetworkLogView.ts | learnMore": {
    "message": "詳細"
  },
  "panels/network/NetworkLogView.ts | loadS": {
    "message": "読み込み: {PH1}"
  },
  "panels/network/NetworkLogView.ts | moreFilters": {
    "message": "その他のフィルタ"
  },
  "panels/network/NetworkLogView.ts | networkDataAvailable": {
    "message": "ネットワーク データを利用できます"
  },
  "panels/network/NetworkLogView.ts | onlyShowBlockedRequests": {
    "message": "ブロック中のリクエストのみを表示する"
  },
  "panels/network/NetworkLogView.ts | onlyShowRequestsWithBlockedCookies": {
    "message": "ブロックされたレスポンス Cookie が含まれるリクエストのみを表示する"
  },
  "panels/network/NetworkLogView.ts | onlyShowThirdPartyRequests": {
    "message": "ページと異なるオリジンのリクエストのみを表示します"
  },
  "panels/network/NetworkLogView.ts | overTwoTypesSelected": {
    "message": "{PH1}、{PH2}..."
  },
  "panels/network/NetworkLogView.ts | overrideHeaders": {
    "message": "ヘッダーをオーバーライド"
  },
  "panels/network/NetworkLogView.ts | performARequestOrHitSToRecordThe": {
    "message": "リクエストを行うか、{PH1} を押して再読み込みを記録します。"
  },
  "panels/network/NetworkLogView.ts | recordToDisplayNetworkActivity": {
    "message": "ネットワーク アクティビティを表示するには、ネットワーク ログを記録（{PH1}）してください。"
  },
  "panels/network/NetworkLogView.ts | recordingNetworkActivity": {
    "message": "ネットワーク アクティビティを記録しています…"
  },
  "panels/network/NetworkLogView.ts | replayXhr": {
    "message": "XHR をリプレイ"
  },
  "panels/network/NetworkLogView.ts | requestTypes": {
    "message": "リクエストの種類"
  },
  "panels/network/NetworkLogView.ts | requestTypesToInclude": {
    "message": "含めるリクエストの種類"
  },
  "panels/network/NetworkLogView.ts | requestTypesTooltip": {
    "message": "リクエストを種類別にフィルタ"
  },
  "panels/network/NetworkLogView.ts | sBResourcesLoadedByThePage": {
    "message": "ページで {PH1} B のリソースが読み込まれました"
  },
  "panels/network/NetworkLogView.ts | sBSBResourcesLoadedByThePage": {
    "message": "ページで {PH1} B / {PH2} B のリソースが読み込まれました"
  },
  "panels/network/NetworkLogView.ts | sBSBTransferredOverNetwork": {
    "message": "{PH1} バイト / {PH2} バイトをネットワーク経由で転送"
  },
  "panels/network/NetworkLogView.ts | sBTransferredOverNetwork": {
    "message": "{PH1} B をネットワーク経由で転送"
  },
  "panels/network/NetworkLogView.ts | sRequests": {
    "message": "リクエスト {PH1} 件"
  },
  "panels/network/NetworkLogView.ts | sResources": {
    "message": "{PH1} 件のリソース"
  },
  "panels/network/NetworkLogView.ts | sSRequests": {
    "message": "{PH2} 件中 {PH1} 件のリクエスト"
  },
  "panels/network/NetworkLogView.ts | sSResources": {
    "message": "{PH1} / {PH2} リソース"
  },
  "panels/network/NetworkLogView.ts | sSTransferred": {
    "message": "{PH1} / {PH2} を転送しました"
  },
  "panels/network/NetworkLogView.ts | sTransferred": {
    "message": "{PH1} を転送しました"
  },
  "panels/network/NetworkLogView.ts | saveAllAsHarWithContent": {
    "message": "コンテンツと一緒に HAR としてすべて保存"
  },
  "panels/network/NetworkLogView.ts | showOnly": {
    "message": "{PH1} のみ表示"
  },
  "panels/network/NetworkLogView.ts | showOnlyHideRequests": {
    "message": "リクエストのみを表示または非表示にする"
  },
  "panels/network/NetworkLogView.ts | thirdParty": {
    "message": "サードパーティのリクエスト"
  },
  "panels/network/NetworkLogView.ts | twoTypesSelected": {
    "message": "{PH1}、{PH2}"
  },
  "panels/network/NetworkLogView.ts | unblockS": {
    "message": "{PH1} のブロックを解除"
  },
  "panels/network/NetworkLogViewColumns.ts | connectionId": {
    "message": "接続 ID"
  },
  "panels/network/NetworkLogViewColumns.ts | content": {
    "message": "コンテンツ"
  },
  "panels/network/NetworkLogViewColumns.ts | cookies": {
    "message": "Cookie"
  },
  "panels/network/NetworkLogViewColumns.ts | domain": {
    "message": "ドメイン"
  },
  "panels/network/NetworkLogViewColumns.ts | endTime": {
    "message": "終了時間"
  },
  "panels/network/NetworkLogViewColumns.ts | hasOverrides": {
    "message": "オーバーライドあり"
  },
  "panels/network/NetworkLogViewColumns.ts | initiator": {
    "message": "イニシエータ"
  },
  "panels/network/NetworkLogViewColumns.ts | initiatorAddressSpace": {
    "message": "イニシエータ アドレス空間"
  },
  "panels/network/NetworkLogViewColumns.ts | latency": {
    "message": "レイテンシ"
  },
  "panels/network/NetworkLogViewColumns.ts | manageHeaderColumns": {
    "message": "ヘッダー列を管理…"
  },
  "panels/network/NetworkLogViewColumns.ts | method": {
    "message": "方法"
  },
  "panels/network/NetworkLogViewColumns.ts | name": {
    "message": "名前"
  },
  "panels/network/NetworkLogViewColumns.ts | networkLog": {
    "message": "ネットワーク ログ"
  },
  "panels/network/NetworkLogViewColumns.ts | path": {
    "message": "パス"
  },
  "panels/network/NetworkLogViewColumns.ts | priority": {
    "message": "優先度"
  },
  "panels/network/NetworkLogViewColumns.ts | protocol": {
    "message": "プロトコル"
  },
  "panels/network/NetworkLogViewColumns.ts | remoteAddress": {
    "message": "リモート アドレス"
  },
  "panels/network/NetworkLogViewColumns.ts | remoteAddressSpace": {
    "message": "リモート アドレス空間"
  },
  "panels/network/NetworkLogViewColumns.ts | responseHeaders": {
    "message": "レスポンス ヘッダー"
  },
  "panels/network/NetworkLogViewColumns.ts | responseTime": {
    "message": "応答時間"
  },
  "panels/network/NetworkLogViewColumns.ts | scheme": {
    "message": "スキーム"
  },
  "panels/network/NetworkLogViewColumns.ts | setCookies": {
    "message": "Cookie を設定"
  },
  "panels/network/NetworkLogViewColumns.ts | size": {
    "message": "サイズ"
  },
  "panels/network/NetworkLogViewColumns.ts | startTime": {
    "message": "開始時間"
  },
  "panels/network/NetworkLogViewColumns.ts | status": {
    "message": "ステータス"
  },
  "panels/network/NetworkLogViewColumns.ts | text": {
    "message": "テキスト"
  },
  "panels/network/NetworkLogViewColumns.ts | time": {
    "message": "時間"
  },
  "panels/network/NetworkLogViewColumns.ts | totalDuration": {
    "message": "合計時間"
  },
  "panels/network/NetworkLogViewColumns.ts | type": {
    "message": "タイプ"
  },
  "panels/network/NetworkLogViewColumns.ts | url": {
    "message": "URL"
  },
  "panels/network/NetworkLogViewColumns.ts | waterfall": {
    "message": "ウォーターフォール"
  },
  "panels/network/NetworkManageCustomHeadersView.ts | addCustomHeader": {
    "message": "カスタム ヘッダーを追加…"
  },
  "panels/network/NetworkManageCustomHeadersView.ts | headerName": {
    "message": "ヘッダー名"
  },
  "panels/network/NetworkManageCustomHeadersView.ts | manageHeaderColumns": {
    "message": "ヘッダー列を管理"
  },
  "panels/network/NetworkManageCustomHeadersView.ts | noCustomHeaders": {
    "message": "カスタム ヘッダーがありません"
  },
  "panels/network/NetworkPanel.ts | captureScreenshots": {
    "message": "スクリーンショット"
  },
  "panels/network/NetworkPanel.ts | captureScreenshotsWhenLoadingA": {
    "message": "ページの読み込み中にスクリーンショットをキャプチャする"
  },
  "panels/network/NetworkPanel.ts | close": {
    "message": "閉じる"
  },
  "panels/network/NetworkPanel.ts | disableCache": {
    "message": "キャッシュを無効化"
  },
  "panels/network/NetworkPanel.ts | disableCacheWhileDevtoolsIsOpen": {
    "message": "（DevTools が開いている間に）キャッシュを無効にする"
  },
  "panels/network/NetworkPanel.ts | doNotClearLogOnPageReload": {
    "message": "ページの再読み込み / 移動時にログを消去しないてください"
  },
  "panels/network/NetworkPanel.ts | exportHar": {
    "message": "HAR をエクスポート..."
  },
  "panels/network/NetworkPanel.ts | fetchingFrames": {
    "message": "フレームを取得しています..."
  },
  "panels/network/NetworkPanel.ts | groupByFrame": {
    "message": "フレーム別にグループ化"
  },
  "panels/network/NetworkPanel.ts | groupRequestsByTopLevelRequest": {
    "message": "最上位のリクエスト フレームによるグループ リクエスト"
  },
  "panels/network/NetworkPanel.ts | hitSToReloadAndCaptureFilmstrip": {
    "message": "{PH1} を押してフィルムストリップを再読み込みし、キャプチャします。"
  },
  "panels/network/NetworkPanel.ts | importHarFile": {
    "message": "HAR ファイルをインポート..."
  },
  "panels/network/NetworkPanel.ts | moreNetworkConditions": {
    "message": "その他のネットワーク状態…"
  },
  "panels/network/NetworkPanel.ts | networkSettings": {
    "message": "ネットワーク設定"
  },
  "panels/network/NetworkPanel.ts | preserveLog": {
    "message": "ログを保持"
  },
  "panels/network/NetworkPanel.ts | recordingFrames": {
    "message": "フレームを記録しています..."
  },
  "panels/network/NetworkPanel.ts | revealInNetworkPanel": {
    "message": "ネットワーク パネルに表示"
  },
  "panels/network/NetworkPanel.ts | search": {
    "message": "検索"
  },
  "panels/network/NetworkPanel.ts | showMoreInformationInRequestRows": {
    "message": "リクエスト行に詳細情報を表示"
  },
  "panels/network/NetworkPanel.ts | showOverview": {
    "message": "概要"
  },
  "panels/network/NetworkPanel.ts | showOverviewOfNetworkRequests": {
    "message": "ネットワーク リクエストの概要を表示"
  },
  "panels/network/NetworkPanel.ts | throttling": {
    "message": "スロットリング"
  },
  "panels/network/NetworkPanel.ts | useLargeRequestRows": {
    "message": "大きなリクエスト行"
  },
  "panels/network/NetworkSearchScope.ts | url": {
    "message": "URL"
  },
  "panels/network/NetworkTimeCalculator.ts | sDownload": {
    "message": "{PH1} ダウンロード"
  },
  "panels/network/NetworkTimeCalculator.ts | sFromCache": {
    "message": "{PH1}（キャッシュから）"
  },
  "panels/network/NetworkTimeCalculator.ts | sFromServiceworker": {
    "message": "{PH1}（ServiceWorker から）"
  },
  "panels/network/NetworkTimeCalculator.ts | sLatency": {
    "message": "{PH1} レイテンシ"
  },
  "panels/network/NetworkTimeCalculator.ts | sLatencySDownloadSTotal": {
    "message": "{PH1} レイテンシ、{PH2} ダウンロード（合計 {PH3}）"
  },
  "panels/network/RequestCookiesView.ts | cookiesThatWereReceivedFromThe": {
    "message": "レスポンスの「set-cookie」ヘッダーでサーバーから受信した Cookie です"
  },
  "panels/network/RequestCookiesView.ts | cookiesThatWereReceivedFromTheServer": {
    "message": "レスポンスの「set-cookie」ヘッダーでサーバーから受信した不正な形式の Cookie です"
  },
  "panels/network/RequestCookiesView.ts | cookiesThatWereSentToTheServerIn": {
    "message": "リクエストの「cookie」ヘッダーのサーバーに送信された Cookie"
  },
  "panels/network/RequestCookiesView.ts | learnMore": {
    "message": "詳細"
  },
  "panels/network/RequestCookiesView.ts | malformedResponseCookies": {
    "message": "形式が正しくないレスポンス Cookie"
  },
  "panels/network/RequestCookiesView.ts | noRequestCookiesWereSent": {
    "message": "リクエスト Cookie が送信されませんでした。"
  },
  "panels/network/RequestCookiesView.ts | requestCookies": {
    "message": "リクエスト Cookie"
  },
  "panels/network/RequestCookiesView.ts | responseCookies": {
    "message": "レスポンス Cookie"
  },
  "panels/network/RequestCookiesView.ts | showFilteredOutRequestCookies": {
    "message": "除外したリクエスト Cookie を表示"
  },
  "panels/network/RequestCookiesView.ts | siteHasCookieInOtherPartition": {
    "message": "このサイトの別のパーティションで、このリクエストでは送信されなかった Cookie が使用されています。{PH1}"
  },
  "panels/network/RequestCookiesView.ts | thisRequestHasNoCookies": {
    "message": "このリクエストには Cookie がありりません。"
  },
  "panels/network/RequestInitiatorView.ts | requestCallStack": {
    "message": "コールスタックをリクエスト"
  },
  "panels/network/RequestInitiatorView.ts | requestInitiatorChain": {
    "message": "イニシエータ チェーンをリクエスト"
  },
  "panels/network/RequestInitiatorView.ts | thisRequestHasNoInitiatorData": {
    "message": "このリクエストにはイニシエータ データがありません。"
  },
  "panels/network/RequestPayloadView.ts | copyValue": {
    "message": "値をコピー"
  },
  "panels/network/RequestPayloadView.ts | empty": {
    "message": "（空）"
  },
  "panels/network/RequestPayloadView.ts | formData": {
    "message": "フォームデータ"
  },
  "panels/network/RequestPayloadView.ts | queryStringParameters": {
    "message": "クエリ文字列パラメータ"
  },
  "panels/network/RequestPayloadView.ts | requestPayload": {
    "message": "リクエストのペイロード"
  },
  "panels/network/RequestPayloadView.ts | showMore": {
    "message": "もっと見る"
  },
  "panels/network/RequestPayloadView.ts | unableToDecodeValue": {
    "message": "（値をデコードできません）"
  },
  "panels/network/RequestPayloadView.ts | viewDecoded": {
    "message": "デコード済みを表示"
  },
  "panels/network/RequestPayloadView.ts | viewDecodedL": {
    "message": "デコード済みを表示"
  },
  "panels/network/RequestPayloadView.ts | viewParsed": {
    "message": "解析を表示"
  },
  "panels/network/RequestPayloadView.ts | viewParsedL": {
    "message": "解析表示"
  },
  "panels/network/RequestPayloadView.ts | viewSource": {
    "message": "ソースを表示"
  },
  "panels/network/RequestPayloadView.ts | viewSourceL": {
    "message": "ソースを表示"
  },
  "panels/network/RequestPayloadView.ts | viewUrlEncoded": {
    "message": "エンコードされた URL を表示"
  },
  "panels/network/RequestPayloadView.ts | viewUrlEncodedL": {
    "message": "エンコードされた URL を表示"
  },
  "panels/network/RequestPreviewView.ts | failedToLoadResponseData": {
    "message": "レスポンス データの読み込みに失敗しました"
  },
  "panels/network/RequestPreviewView.ts | previewNotAvailable": {
    "message": "プレビューできません"
  },
  "panels/network/RequestResponseView.ts | failedToLoadResponseData": {
    "message": "レスポンス データの読み込みに失敗しました"
  },
  "panels/network/RequestResponseView.ts | thisRequestHasNoResponseData": {
    "message": "このリクエストにはレスポンス データがありません。"
  },
  "panels/network/RequestTimingView.ts | cacheStorageCacheNameS": {
    "message": "キャッシュ ストレージのキャッシュ名: {PH1}"
  },
  "panels/network/RequestTimingView.ts | cacheStorageCacheNameUnknown": {
    "message": "キャッシュ ストレージのキャッシュ名: 不明"
  },
  "panels/network/RequestTimingView.ts | cautionRequestIsNotFinishedYet": {
    "message": "注意: リクエストが完了していません"
  },
  "panels/network/RequestTimingView.ts | connectionStart": {
    "message": "接続開始"
  },
  "panels/network/RequestTimingView.ts | contentDownload": {
    "message": "コンテンツのダウンロード"
  },
  "panels/network/RequestTimingView.ts | dnsLookup": {
    "message": "DNS ルックアップ"
  },
  "panels/network/RequestTimingView.ts | duration": {
    "message": "所要時間"
  },
  "panels/network/RequestTimingView.ts | durationC": {
    "message": "時間"
  },
  "panels/network/RequestTimingView.ts | duringDevelopmentYouCanUseSToAdd": {
    "message": "開発時には、{PH1} でこのリクエストのサーバーサイドのタイミングに関する分析情報が得られます。"
  },
  "panels/network/RequestTimingView.ts | explanation": {
    "message": "説明"
  },
  "panels/network/RequestTimingView.ts | fallbackCode": {
    "message": "代替コード"
  },
  "panels/network/RequestTimingView.ts | fromHttpCache": {
    "message": "HTTP キャッシュから"
  },
  "panels/network/RequestTimingView.ts | initialConnection": {
    "message": "初期接続"
  },
  "panels/network/RequestTimingView.ts | label": {
    "message": "ラベル"
  },
  "panels/network/RequestTimingView.ts | networkFetch": {
    "message": "ネットワーク フェッチ"
  },
  "panels/network/RequestTimingView.ts | originalRequest": {
    "message": "元のリクエスト"
  },
  "panels/network/RequestTimingView.ts | proxyNegotiation": {
    "message": "プロキシ ネゴシエーション"
  },
  "panels/network/RequestTimingView.ts | queuedAtS": {
    "message": "{PH1} でキューに追加"
  },
  "panels/network/RequestTimingView.ts | queueing": {
    "message": "キュー"
  },
  "panels/network/RequestTimingView.ts | readingPush": {
    "message": "Push の読み上げ所要時間"
  },
  "panels/network/RequestTimingView.ts | receivingPush": {
    "message": "Push の受信所要時間"
  },
  "panels/network/RequestTimingView.ts | requestSent": {
    "message": "リクエストを送信しました"
  },
  "panels/network/RequestTimingView.ts | requestToServiceworker": {
    "message": "ServiceWorker へのリクエスト"
  },
  "panels/network/RequestTimingView.ts | requestresponse": {
    "message": "リクエスト / レスポンス"
  },
  "panels/network/RequestTimingView.ts | resourceScheduling": {
    "message": "リソースのスケジュール設定"
  },
  "panels/network/RequestTimingView.ts | respondwith": {
    "message": "respondWith"
  },
  "panels/network/RequestTimingView.ts | responseReceived": {
    "message": "レスポンスを受け取りました"
  },
  "panels/network/RequestTimingView.ts | retrievalTimeS": {
    "message": "取得時間: {PH1}"
  },
  "panels/network/RequestTimingView.ts | serverPush": {
    "message": "サーバー push"
  },
  "panels/network/RequestTimingView.ts | serverTiming": {
    "message": "サーバー タイミング"
  },
  "panels/network/RequestTimingView.ts | serviceworkerCacheStorage": {
    "message": "ServiceWorker キャッシュ ストレージ"
  },
  "panels/network/RequestTimingView.ts | sourceOfResponseS": {
    "message": "レスポンスのソース: {PH1}"
  },
  "panels/network/RequestTimingView.ts | ssl": {
    "message": "SSL"
  },
  "panels/network/RequestTimingView.ts | stalled": {
    "message": "停止しました"
  },
  "panels/network/RequestTimingView.ts | startedAtS": {
    "message": "開始: {PH1}"
  },
  "panels/network/RequestTimingView.ts | startup": {
    "message": "Startup"
  },
  "panels/network/RequestTimingView.ts | theServerTimingApi": {
    "message": "Server Timing API"
  },
  "panels/network/RequestTimingView.ts | time": {
    "message": "時間"
  },
  "panels/network/RequestTimingView.ts | total": {
    "message": "合計"
  },
  "panels/network/RequestTimingView.ts | unknown": {
    "message": "不明"
  },
  "panels/network/RequestTimingView.ts | waitingTtfb": {
    "message": "サーバーの応答を待機しています"
  },
  "panels/network/RequestTimingView.ts | waterfall": {
    "message": "ウォーターフォール"
  },
  "panels/network/ResourceWebSocketFrameView.ts | all": {
    "message": "すべて"
  },
  "panels/network/ResourceWebSocketFrameView.ts | binaryMessage": {
    "message": "バイナリ メッセージ"
  },
  "panels/network/ResourceWebSocketFrameView.ts | clearAll": {
    "message": "すべて消去"
  },
  "panels/network/ResourceWebSocketFrameView.ts | clearAllL": {
    "message": "すべてクリア"
  },
  "panels/network/ResourceWebSocketFrameView.ts | connectionCloseMessage": {
    "message": "接続終了メッセージ"
  },
  "panels/network/ResourceWebSocketFrameView.ts | continuationFrame": {
    "message": "継続フレーム"
  },
  "panels/network/ResourceWebSocketFrameView.ts | copyMessage": {
    "message": "メッセージをコピー"
  },
  "panels/network/ResourceWebSocketFrameView.ts | copyMessageD": {
    "message": "メッセージをコピー..."
  },
  "panels/network/ResourceWebSocketFrameView.ts | data": {
    "message": "データ"
  },
  "panels/network/ResourceWebSocketFrameView.ts | enterRegex": {
    "message": "正規表現を入力します。例: (web)?socket"
  },
  "panels/network/ResourceWebSocketFrameView.ts | filter": {
    "message": "フィルタ"
  },
  "panels/network/ResourceWebSocketFrameView.ts | length": {
    "message": "長さ"
  },
  "panels/network/ResourceWebSocketFrameView.ts | na": {
    "message": "なし"
  },
  "panels/network/ResourceWebSocketFrameView.ts | pingMessage": {
    "message": "Ping メッセージ"
  },
  "panels/network/ResourceWebSocketFrameView.ts | pongMessage": {
    "message": "Pong メッセージ"
  },
  "panels/network/ResourceWebSocketFrameView.ts | receive": {
    "message": "受信"
  },
  "panels/network/ResourceWebSocketFrameView.ts | sOpcodeS": {
    "message": "{PH1}（オペコード {PH2}）"
  },
  "panels/network/ResourceWebSocketFrameView.ts | sOpcodeSMask": {
    "message": "{PH1}（オペコード {PH2}、マスク）"
  },
  "panels/network/ResourceWebSocketFrameView.ts | selectMessageToBrowseItsContent": {
    "message": "メッセージを選択してコンテンツを表示"
  },
  "panels/network/ResourceWebSocketFrameView.ts | send": {
    "message": "送信"
  },
  "panels/network/ResourceWebSocketFrameView.ts | textMessage": {
    "message": "テキスト メッセージ"
  },
  "panels/network/ResourceWebSocketFrameView.ts | time": {
    "message": "時間"
  },
  "panels/network/ResourceWebSocketFrameView.ts | webSocketFrame": {
    "message": "WebSocket フレーム"
  },
  "panels/network/SignedExchangeInfoView.ts | certificate": {
    "message": "証明書"
  },
  "panels/network/SignedExchangeInfoView.ts | certificateSha": {
    "message": "証明書 SHA256"
  },
  "panels/network/SignedExchangeInfoView.ts | certificateUrl": {
    "message": "証明書 URL"
  },
  "panels/network/SignedExchangeInfoView.ts | date": {
    "message": "日付"
  },
  "panels/network/SignedExchangeInfoView.ts | errors": {
    "message": "エラー"
  },
  "panels/network/SignedExchangeInfoView.ts | expires": {
    "message": "有効期限"
  },
  "panels/network/SignedExchangeInfoView.ts | headerIntegrityHash": {
    "message": "ヘッダー整合性ハッシュ"
  },
  "panels/network/SignedExchangeInfoView.ts | integrity": {
    "message": "整合性"
  },
  "panels/network/SignedExchangeInfoView.ts | issuer": {
    "message": "発行元"
  },
  "panels/network/SignedExchangeInfoView.ts | label": {
    "message": "ラベル"
  },
  "panels/network/SignedExchangeInfoView.ts | learnmore": {
    "message": "詳細"
  },
  "panels/network/SignedExchangeInfoView.ts | requestUrl": {
    "message": "リクエスト URL"
  },
  "panels/network/SignedExchangeInfoView.ts | responseCode": {
    "message": "レスポンス コード"
  },
  "panels/network/SignedExchangeInfoView.ts | responseHeaders": {
    "message": "レスポンス ヘッダー"
  },
  "panels/network/SignedExchangeInfoView.ts | signature": {
    "message": "署名"
  },
  "panels/network/SignedExchangeInfoView.ts | signedHttpExchange": {
    "message": "Signed HTTP Exchange"
  },
  "panels/network/SignedExchangeInfoView.ts | subject": {
    "message": "サブジェクト"
  },
  "panels/network/SignedExchangeInfoView.ts | validFrom": {
    "message": "有効期限開始"
  },
  "panels/network/SignedExchangeInfoView.ts | validUntil": {
    "message": "有効期限"
  },
  "panels/network/SignedExchangeInfoView.ts | validityUrl": {
    "message": "有効期間 URL"
  },
  "panels/network/SignedExchangeInfoView.ts | viewCertificate": {
    "message": "証明書を表示"
  },
  "panels/network/components/HeaderSectionRow.ts | activeClientExperimentVariation": {
    "message": "有効なclient experiment variation IDs です。"
  },
  "panels/network/components/HeaderSectionRow.ts | activeClientExperimentVariationIds": {
    "message": "サーバーサイドの動作をトリガーするアクティブな client experiment variation IDs です。"
  },
  "panels/network/components/HeaderSectionRow.ts | decoded": {
    "message": "デコード済み:"
  },
  "panels/network/components/HeaderSectionRow.ts | editHeader": {
    "message": "ヘッダーをオーバーライド"
  },
  "panels/network/components/HeaderSectionRow.ts | headerNamesOnlyLetters": {
    "message": "ヘッダー名に使用できるのは英数字、ハイフン、アンダースコアのみです"
  },
  "panels/network/components/HeaderSectionRow.ts | learnMore": {
    "message": "詳細"
  },
  "panels/network/components/HeaderSectionRow.ts | learnMoreInTheIssuesTab": {
    "message": "詳しくは問題タブをご覧ください"
  },
  "panels/network/components/HeaderSectionRow.ts | reloadPrompt": {
    "message": "ページまたはリクエストを更新すると変更が反映されます"
  },
  "panels/network/components/HeaderSectionRow.ts | removeOverride": {
    "message": "このヘッダーのオーバーライドを削除"
  },
  "panels/network/components/RequestHeaderSection.ts | learnMore": {
    "message": "詳細"
  },
  "panels/network/components/RequestHeaderSection.ts | onlyProvisionalHeadersAre": {
    "message": "このリクエストはネットワーク経由で送信されておらず、提供元のリクエスト ヘッダーが保存されていないローカル キャッシュから提供されているため、暫定的なヘッダーしか使用できません。完全なリクエスト ヘッダーを表示するには、キャッシュを無効にしてください。"
  },
  "panels/network/components/RequestHeaderSection.ts | provisionalHeadersAreShown": {
    "message": "一時的なヘッダーが表示されています。"
  },
  "panels/network/components/RequestHeaderSection.ts | provisionalHeadersAreShownDisableCache": {
    "message": "一時的なヘッダーが表示されています。完全なヘッダーを表示するには、キャッシュを無効にしてください。"
  },
  "panels/network/components/RequestHeadersView.ts | fromDiskCache": {
    "message": "（ディスク キャッシュから）"
  },
  "panels/network/components/RequestHeadersView.ts | fromMemoryCache": {
    "message": "（メモリ キャッシュから）"
  },
  "panels/network/components/RequestHeadersView.ts | fromPrefetchCache": {
    "message": "（プリフェッチ キャッシュから）"
  },
  "panels/network/components/RequestHeadersView.ts | fromServiceWorker": {
    "message": "（service worker から）"
  },
  "panels/network/components/RequestHeadersView.ts | fromSignedexchange": {
    "message": "（signed-exchange から）"
  },
  "panels/network/components/RequestHeadersView.ts | fromWebBundle": {
    "message": "（ウェブバンドルから）"
  },
  "panels/network/components/RequestHeadersView.ts | general": {
    "message": "全般"
  },
  "panels/network/components/RequestHeadersView.ts | raw": {
    "message": "Raw"
  },
  "panels/network/components/RequestHeadersView.ts | referrerPolicy": {
    "message": "参照ポリシー"
  },
  "panels/network/components/RequestHeadersView.ts | remoteAddress": {
    "message": "リモート アドレス"
  },
  "panels/network/components/RequestHeadersView.ts | requestHeaders": {
    "message": "リクエスト ヘッダー"
  },
  "panels/network/components/RequestHeadersView.ts | requestMethod": {
    "message": "リクエスト メソッド"
  },
  "panels/network/components/RequestHeadersView.ts | requestUrl": {
    "message": "リクエスト URL"
  },
  "panels/network/components/RequestHeadersView.ts | responseHeaders": {
    "message": "レスポンス ヘッダー"
  },
  "panels/network/components/RequestHeadersView.ts | revealHeaderOverrides": {
    "message": "ヘッダーのオーバーライドの定義を表示"
  },
  "panels/network/components/RequestHeadersView.ts | showMore": {
    "message": "もっと見る"
  },
  "panels/network/components/RequestHeadersView.ts | statusCode": {
    "message": "ステータス コード"
  },
  "panels/network/components/RequestTrustTokensView.ts | aClientprovidedArgumentWas": {
    "message": "クライアントが提供した引数の形式が正しくないか、無効です。"
  },
  "panels/network/components/RequestTrustTokensView.ts | eitherNoInputsForThisOperation": {
    "message": "この操作に使用できる入力がないか、出力が操作の割り当て制限を超えています。"
  },
  "panels/network/components/RequestTrustTokensView.ts | failure": {
    "message": "エラー"
  },
  "panels/network/components/RequestTrustTokensView.ts | issuer": {
    "message": "発行元"
  },
  "panels/network/components/RequestTrustTokensView.ts | issuers": {
    "message": "発行元"
  },
  "panels/network/components/RequestTrustTokensView.ts | numberOfIssuedTokens": {
    "message": "発行済みトークン数"
  },
  "panels/network/components/RequestTrustTokensView.ts | parameters": {
    "message": "パラメータ"
  },
  "panels/network/components/RequestTrustTokensView.ts | refreshPolicy": {
    "message": "更新ポリシー"
  },
  "panels/network/components/RequestTrustTokensView.ts | result": {
    "message": "結果"
  },
  "panels/network/components/RequestTrustTokensView.ts | status": {
    "message": "ステータス"
  },
  "panels/network/components/RequestTrustTokensView.ts | success": {
    "message": "正常に完了"
  },
  "panels/network/components/RequestTrustTokensView.ts | theKeysForThisPSTIssuerAreUnavailable": {
    "message": "この PST 発行元の鍵は使用できません。発行元は Chrome の登録プロセスを通じて登録する必要がある場合があります。"
  },
  "panels/network/components/RequestTrustTokensView.ts | theOperationFailedForAnUnknown": {
    "message": "なんらかの理由で操作できませんでした。"
  },
  "panels/network/components/RequestTrustTokensView.ts | theOperationWasFulfilledLocally": {
    "message": "操作がローカルで実行され、リクエストは送信されませんでした。"
  },
  "panels/network/components/RequestTrustTokensView.ts | theOperationsResultWasServedFrom": {
    "message": "操作結果がキャッシュから配信されました。"
  },
  "panels/network/components/RequestTrustTokensView.ts | theServersResponseWasMalformedOr": {
    "message": "サーバー レスポンスの形式が正しくないか、無効です。"
  },
  "panels/network/components/RequestTrustTokensView.ts | topLevelOrigin": {
    "message": "最上位のオリジン"
  },
  "panels/network/components/RequestTrustTokensView.ts | type": {
    "message": "タイプ"
  },
  "panels/network/components/ResponseHeaderSection.ts | addHeader": {
    "message": "ヘッダーを追加"
  },
  "panels/network/components/ResponseHeaderSection.ts | chooseThisOptionIfTheResourceAnd": {
    "message": "リソースとドキュメントが同じサイトから配信されている場合は、このオプションを選択してください。"
  },
  "panels/network/components/ResponseHeaderSection.ts | onlyChooseThisOptionIfAn": {
    "message": "このオプションは、このリソースが含まれたウェブサイトにセキュリティ上のリスクがない場合のみ選択してください。"
  },
  "panels/network/components/ResponseHeaderSection.ts | thisDocumentWasBlockedFrom": {
    "message": "このドキュメントはクロスオリジン オープナー ポリシーを指定しているため、サンドボックス化された iframe で開かれたポップアップでの読み込みがブロックされました。"
  },
  "panels/network/components/ResponseHeaderSection.ts | toEmbedThisFrameInYourDocument": {
    "message": "このフレームをドキュメントに埋め込むには、次のレスポンス ヘッダーを指定することにより、レスポンスがクロスオリジン埋め込みポリシーを有効化する必要があります。"
  },
  "panels/network/components/ResponseHeaderSection.ts | toUseThisResourceFromADifferent": {
    "message": "このリソースを別のオリジンから使用するために、サーバーはレスポンス ヘッダーでクロスオリジン リソース ポリシーを指定する必要があります。"
  },
  "panels/network/components/ResponseHeaderSection.ts | toUseThisResourceFromADifferentOrigin": {
    "message": "このリソースを別のオリジンから使用するために、サーバーはクロスオリジン リソース ポリシー レスポンス ヘッダーを緩和できます。"
  },
  "panels/network/components/ResponseHeaderSection.ts | toUseThisResourceFromADifferentSite": {
    "message": "このリソースを別のサイトから使用するために、サーバーはクロスオリジン リソース ポリシー レスポンス ヘッダーを緩和できます。"
  },
  "panels/network/components/WebBundleInfoView.ts | bundledResource": {
    "message": "バンドルされたリソース"
  },
  "panels/network/network-meta.ts | addNetworkRequestBlockingPattern": {
    "message": "ネットワーク リクエストのブロック パターンを追加"
  },
  "panels/network/network-meta.ts | clear": {
    "message": "ネットワーク ログを消去"
  },
  "panels/network/network-meta.ts | colorCode": {
    "message": "カラーコード"
  },
  "panels/network/network-meta.ts | colorCodeByResourceType": {
    "message": "リソース タイプ別のカラーコード"
  },
  "panels/network/network-meta.ts | colorcodeResourceTypes": {
    "message": "カラーコードのリソースタイプ"
  },
  "panels/network/network-meta.ts | diskCache": {
    "message": "ディスク キャッシュ"
  },
  "panels/network/network-meta.ts | dontGroupNetworkLogItemsByFrame": {
    "message": "ネットワーク ログ項目をフレーム別にグループ化しない"
  },
  "panels/network/network-meta.ts | frame": {
    "message": "フレーム"
  },
  "panels/network/network-meta.ts | group": {
    "message": "グループ"
  },
  "panels/network/network-meta.ts | groupNetworkLogByFrame": {
    "message": "ネットワーク ログをフレーム別にグループ化"
  },
  "panels/network/network-meta.ts | groupNetworkLogItemsByFrame": {
    "message": "ネットワーク ログ項目をフレーム別にグループ化"
  },
  "panels/network/network-meta.ts | hideRequestDetails": {
    "message": "リクエスト詳細を非表示"
  },
  "panels/network/network-meta.ts | netWork": {
    "message": "ネットワーク"
  },
  "panels/network/network-meta.ts | network": {
    "message": "ネットワーク"
  },
  "panels/network/network-meta.ts | networkConditions": {
    "message": "ネットワーク状態"
  },
  "panels/network/network-meta.ts | networkRequestBlocking": {
    "message": "ネットワーク リクエストのブロック"
  },
  "panels/network/network-meta.ts | networkThrottling": {
    "message": "ネットワーク スロットリング"
  },
  "panels/network/network-meta.ts | recordNetworkLog": {
    "message": "ネットワーク ログを記録"
  },
  "panels/network/network-meta.ts | removeAllNetworkRequestBlockingPatterns": {
    "message": "ネットワーク リクエストのすべてのブロック パターンを削除する"
  },
  "panels/network/network-meta.ts | resourceType": {
    "message": "リソース タイプ"
  },
  "panels/network/network-meta.ts | search": {
    "message": "検索"
  },
  "panels/network/network-meta.ts | showNetwork": {
    "message": "ネットワークを表示"
  },
  "panels/network/network-meta.ts | showNetworkConditions": {
    "message": "ネットワーク状態を表示"
  },
  "panels/network/network-meta.ts | showNetworkRequestBlocking": {
    "message": "ネットワーク リクエストのブロックを表示"
  },
  "panels/network/network-meta.ts | showSearch": {
    "message": "検索を表示"
  },
  "panels/network/network-meta.ts | stopRecordingNetworkLog": {
    "message": "ネットワーク ログの記録を停止"
  },
  "panels/network/network-meta.ts | useDefaultColors": {
    "message": "デフォルト色を使用"
  },
  "panels/performance_monitor/PerformanceMonitor.ts | cpuUsage": {
    "message": "CPU 使用状況"
  },
  "panels/performance_monitor/PerformanceMonitor.ts | documentFrames": {
    "message": "ドキュメント フレーム"
  },
  "panels/performance_monitor/PerformanceMonitor.ts | documents": {
    "message": "ドキュメント"
  },
  "panels/performance_monitor/PerformanceMonitor.ts | domNodes": {
    "message": "DOM ノード"
  },
  "panels/performance_monitor/PerformanceMonitor.ts | graphsDisplayingARealtimeViewOf": {
    "message": "パフォーマンス指標をリアルタイムで表示するグラフ"
  },
  "panels/performance_monitor/PerformanceMonitor.ts | jsEventListeners": {
    "message": "JS イベント リスナー"
  },
  "panels/performance_monitor/PerformanceMonitor.ts | jsHeapSize": {
    "message": "JS ヒープサイズ"
  },
  "panels/performance_monitor/PerformanceMonitor.ts | layoutsSec": {
    "message": "レイアウト/秒"
  },
  "panels/performance_monitor/PerformanceMonitor.ts | paused": {
    "message": "一時停止中"
  },
  "panels/performance_monitor/PerformanceMonitor.ts | styleRecalcsSec": {
    "message": "スタイル再計算 / 秒"
  },
  "panels/performance_monitor/performance_monitor-meta.ts | activity": {
    "message": "アクティビティ"
  },
  "panels/performance_monitor/performance_monitor-meta.ts | metrics": {
    "message": "指標"
  },
  "panels/performance_monitor/performance_monitor-meta.ts | monitor": {
    "message": "モニター"
  },
  "panels/performance_monitor/performance_monitor-meta.ts | performance": {
    "message": "パフォーマンス"
  },
  "panels/performance_monitor/performance_monitor-meta.ts | performanceMonitor": {
    "message": "パフォーマンス モニター"
  },
  "panels/performance_monitor/performance_monitor-meta.ts | showPerformanceMonitor": {
    "message": "パフォーマンス モニターを表示"
  },
  "panels/performance_monitor/performance_monitor-meta.ts | systemMonitor": {
    "message": "システム モニター"
  },
  "panels/profiler/CPUProfileView.ts | aggregatedSelfTime": {
    "message": "集約されたセルフ時間"
  },
  "panels/profiler/CPUProfileView.ts | aggregatedTotalTime": {
    "message": "合計時間"
  },
  "panels/profiler/CPUProfileView.ts | cpuProfiles": {
    "message": "CPU プロファイル"
  },
  "panels/profiler/CPUProfileView.ts | cpuProfilesShow": {
    "message": "CPU プロファイルは、ページの JavaScript 関数で実行時間のかかる場所を示します。"
  },
  "panels/profiler/CPUProfileView.ts | fms": {
    "message": "{PH1} ミリ秒"
  },
  "panels/profiler/CPUProfileView.ts | formatPercent": {
    "message": "{PH1}%"
  },
  "panels/profiler/CPUProfileView.ts | name": {
    "message": "名前"
  },
  "panels/profiler/CPUProfileView.ts | notOptimized": {
    "message": "最適化されていません"
  },
  "panels/profiler/CPUProfileView.ts | recordJavascriptCpuProfile": {
    "message": "JavaScript CPU プロファイルを記録"
  },
  "panels/profiler/CPUProfileView.ts | recording": {
    "message": "記録しています…"
  },
  "panels/profiler/CPUProfileView.ts | selfTime": {
    "message": "セルフ時間"
  },
  "panels/profiler/CPUProfileView.ts | startCpuProfiling": {
    "message": "CPU プロファイリングを開始"
  },
  "panels/profiler/CPUProfileView.ts | stopCpuProfiling": {
    "message": "CPU プロファイリングを停止"
  },
  "panels/profiler/CPUProfileView.ts | totalTime": {
    "message": "合計時間"
  },
  "panels/profiler/CPUProfileView.ts | url": {
    "message": "URL"
  },
  "panels/profiler/HeapProfileView.ts | allocationSampling": {
    "message": "割り当てサンプリング"
  },
  "panels/profiler/HeapProfileView.ts | formatPercent": {
    "message": "{PH1}%"
  },
  "panels/profiler/HeapProfileView.ts | heapProfilerIsRecording": {
    "message": "ヒープ プロファイラが記録中"
  },
  "panels/profiler/HeapProfileView.ts | itProvidesGoodApproximation": {
    "message": "JavaScript 実行スタック別のおおまかな適切な割り当てが表示されます。"
  },
  "panels/profiler/HeapProfileView.ts | name": {
    "message": "名前"
  },
  "panels/profiler/HeapProfileView.ts | profileD": {
    "message": "プロフィール {PH1}"
  },
  "panels/profiler/HeapProfileView.ts | recordMemoryAllocations": {
    "message": "サンプリング法を使用してメモリ割り当てを記録します。"
  },
  "panels/profiler/HeapProfileView.ts | recording": {
    "message": "記録しています…"
  },
  "panels/profiler/HeapProfileView.ts | sBytes": {
    "message": "{PH1} バイト"
  },
  "panels/profiler/HeapProfileView.ts | samplingProfiles": {
    "message": "サンプリング プロファイル"
  },
  "panels/profiler/HeapProfileView.ts | selectedSizeS": {
    "message": "選択されたサイズ: {PH1}"
  },
  "panels/profiler/HeapProfileView.ts | selfSize": {
    "message": "セルフサイズ"
  },
  "panels/profiler/HeapProfileView.ts | selfSizeBytes": {
    "message": "セルフサイズ（バイト）"
  },
  "panels/profiler/HeapProfileView.ts | skb": {
    "message": "{PH1} kB"
  },
  "panels/profiler/HeapProfileView.ts | startHeapProfiling": {
    "message": "ヒープのプロファイリングを開始"
  },
  "panels/profiler/HeapProfileView.ts | stopHeapProfiling": {
    "message": "ヒープ プロファイリングを停止"
  },
  "panels/profiler/HeapProfileView.ts | stopping": {
    "message": "停止しています…"
  },
  "panels/profiler/HeapProfileView.ts | thisProfileTypeHasMinimal": {
    "message": "このタイプのプロファイルは、パフォーマンスのオーバーヘッドが最も低く、長時間実行オペレーションに使用できます。"
  },
  "panels/profiler/HeapProfileView.ts | totalSize": {
    "message": "合計サイズ"
  },
  "panels/profiler/HeapProfileView.ts | totalSizeBytes": {
    "message": "合計サイズ（バイト）"
  },
  "panels/profiler/HeapProfileView.ts | url": {
    "message": "URL"
  },
  "panels/profiler/HeapProfilerPanel.ts | revealInSummaryView": {
    "message": "サマリービューに表示"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | Deleted": {
    "message": "# 削除"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | Delta": {
    "message": "# デルタ"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | New": {
    "message": "増加数: #"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | allocSize": {
    "message": "割り当てサイズ"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | allocation": {
    "message": "割り当て"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | constructorString": {
    "message": "コンストラクター"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | count": {
    "message": "数"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | distance": {
    "message": "距離"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | distanceFromWindowObject": {
    "message": "ウィンドウ オブジェクトからの距離"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | freedSize": {
    "message": "フリーサイズ"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | function": {
    "message": "機能"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | heapSnapshotConstructors": {
    "message": "ヒープ スナップショット コンストラクタ"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | heapSnapshotDiff": {
    "message": "ヒープ スナップショットの差分"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | heapSnapshotRetainment": {
    "message": "ヒープ スナップショットの保持"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | liveCount": {
    "message": "ライブ数"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | liveSize": {
    "message": "ライブサイズ"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | object": {
    "message": "オブジェクト"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | retainedSize": {
    "message": "保持サイズ"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | shallowSize": {
    "message": "浅いサイズ"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | size": {
    "message": "サイズ"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | sizeDelta": {
    "message": "サイズの差分"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | sizeOfTheObjectItselfInBytes": {
    "message": "オブジェクト自体のバイトサイズ"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | sizeOfTheObjectPlusTheGraphIt": {
    "message": "オブジェクトとそれが保持するグラフのサイズ（バイト）"
  },
  "panels/profiler/HeapSnapshotGridNodes.ts | detachedFromDomTree": {
    "message": "DOM ツリーから分離"
  },
  "panels/profiler/HeapSnapshotGridNodes.ts | genericStringsTwoPlaceholders": {
    "message": "{PH1}、{PH2}"
  },
  "panels/profiler/HeapSnapshotGridNodes.ts | inElement": {
    "message": ":"
  },
  "panels/profiler/HeapSnapshotGridNodes.ts | internalArray": {
    "message": "（内部配列）[]"
  },
  "panels/profiler/HeapSnapshotGridNodes.ts | previewIsNotAvailable": {
    "message": "プレビューを利用できません"
  },
  "panels/profiler/HeapSnapshotGridNodes.ts | revealInSummaryView": {
    "message": "サマリービューに表示"
  },
  "panels/profiler/HeapSnapshotGridNodes.ts | revealObjectSWithIdSInSummary": {
    "message": "概要ビューで ID @{PH2} を持つオブジェクト「{PH1}」を表示"
  },
  "panels/profiler/HeapSnapshotGridNodes.ts | storeAsGlobalVariable": {
    "message": "グローバル変数として保存"
  },
  "panels/profiler/HeapSnapshotGridNodes.ts | summary": {
    "message": "概要"
  },
  "panels/profiler/HeapSnapshotGridNodes.ts | userObjectReachableFromWindow": {
    "message": "ウィンドウからユーザー オブジェクトにアクセス可能"
  },
  "panels/profiler/HeapSnapshotProxy.ts | anErrorOccurredWhenACallToMethod": {
    "message": "メソッド「{PH1}」の呼び出し中にエラーが発生しました"
  },
  "panels/profiler/HeapSnapshotView.ts | AllocationTimelinesShowInstrumented": {
    "message": "割り当てタイムラインには、計測された JavaScript メモリ割り当ての推移が表示されます。プロファイルを記録したら、プロファイル内に割り当てられ、記録終了時点でも有効だったオブジェクトを表示する時間間隔を選択します。このプロファイルを使用して、メモリリークを隔離します。"
  },
  "panels/profiler/HeapSnapshotView.ts | allObjects": {
    "message": "すべてのオブジェクト"
  },
  "panels/profiler/HeapSnapshotView.ts | allocation": {
    "message": "割り当て"
  },
  "panels/profiler/HeapSnapshotView.ts | allocationInstrumentationOn": {
    "message": "タイムラインの計測手法割り当て"
  },
  "panels/profiler/HeapSnapshotView.ts | allocationStack": {
    "message": "割り当てスタック"
  },
  "panels/profiler/HeapSnapshotView.ts | allocationTimelines": {
    "message": "割り当てタイムライン"
  },
  "panels/profiler/HeapSnapshotView.ts | baseSnapshot": {
    "message": "ベースのスナップショット"
  },
  "panels/profiler/HeapSnapshotView.ts | captureNumericValue": {
    "message": "キャプチャに数値を含める"
  },
  "panels/profiler/HeapSnapshotView.ts | classFilter": {
    "message": "クラスフィルタ"
  },
  "panels/profiler/HeapSnapshotView.ts | code": {
    "message": "コード"
  },
  "panels/profiler/HeapSnapshotView.ts | comparison": {
    "message": "比較"
  },
  "panels/profiler/HeapSnapshotView.ts | containment": {
    "message": "包含関係"
  },
  "panels/profiler/HeapSnapshotView.ts | exposeInternals": {
    "message": "内部データを表示する（実装に固有の追加情報を含む）"
  },
  "panels/profiler/HeapSnapshotView.ts | filter": {
    "message": "フィルタ"
  },
  "panels/profiler/HeapSnapshotView.ts | find": {
    "message": "検索"
  },
  "panels/profiler/HeapSnapshotView.ts | heapMemoryUsage": {
    "message": "ヒープメモリ使用量"
  },
  "panels/profiler/HeapSnapshotView.ts | heapSnapshot": {
    "message": "ヒープ スナップショット"
  },
  "panels/profiler/HeapSnapshotView.ts | heapSnapshotProfilesShowMemory": {
    "message": "ヒープ スナップショット プロファイルには、ページの JavaScript オブジェクトと関連する DOM ノードのメモリ分布が表示されます。"
  },
  "panels/profiler/HeapSnapshotView.ts | heapSnapshots": {
    "message": "ヒープ スナップショット"
  },
  "panels/profiler/HeapSnapshotView.ts | jsArrays": {
    "message": "JS 配列"
  },
  "panels/profiler/HeapSnapshotView.ts | liveObjects": {
    "message": "ライブ オブジェクト"
  },
  "panels/profiler/HeapSnapshotView.ts | loading": {
    "message": "読み込んでいます…"
  },
  "panels/profiler/HeapSnapshotView.ts | objectsAllocatedBeforeS": {
    "message": "{PH1} の前にオブジェクトを割り当て"
  },
  "panels/profiler/HeapSnapshotView.ts | objectsAllocatedBetweenSAndS": {
    "message": "{PH1} と {PH2} の間にオブジェクトを割り当て"
  },
  "panels/profiler/HeapSnapshotView.ts | percentagePlaceholder": {
    "message": "{PH1}%"
  },
  "panels/profiler/HeapSnapshotView.ts | perspective": {
    "message": "遠近法"
  },
  "panels/profiler/HeapSnapshotView.ts | recordAllocationStacksExtra": {
    "message": "割り当てのスタック トレースを記録（パフォーマンスのオーバーヘッドが増加）"
  },
  "panels/profiler/HeapSnapshotView.ts | recording": {
    "message": "記録しています…"
  },
  "panels/profiler/HeapSnapshotView.ts | retainers": {
    "message": "保持パス"
  },
  "panels/profiler/HeapSnapshotView.ts | savingD": {
    "message": "保存しています… {PH1}%"
  },
  "panels/profiler/HeapSnapshotView.ts | selectedSizeS": {
    "message": "選択されたサイズ: {PH1}"
  },
  "panels/profiler/HeapSnapshotView.ts | snapshotD": {
    "message": "スナップショット {PH1}"
  },
  "panels/profiler/HeapSnapshotView.ts | snapshotting": {
    "message": "スナップショットを取得しています…"
  },
  "panels/profiler/HeapSnapshotView.ts | stackWasNotRecordedForThisObject": {
    "message": "このプロファイルの記録が開始される前にスタックが割り当てられていたため、このオブジェクトのスタックは記録されませんでした。"
  },
  "panels/profiler/HeapSnapshotView.ts | startRecordingHeapProfile": {
    "message": "ヒープ プロファイルの記録を開始"
  },
  "panels/profiler/HeapSnapshotView.ts | statistics": {
    "message": "統計情報"
  },
  "panels/profiler/HeapSnapshotView.ts | stopRecordingHeapProfile": {
    "message": "ヒープ プロファイルの記録を停止"
  },
  "panels/profiler/HeapSnapshotView.ts | strings": {
    "message": "文字列"
  },
  "panels/profiler/HeapSnapshotView.ts | summary": {
    "message": "概要"
  },
  "panels/profiler/HeapSnapshotView.ts | systemObjects": {
    "message": "システム オブジェクト"
  },
  "panels/profiler/HeapSnapshotView.ts | takeHeapSnapshot": {
    "message": "ヒープ スナップショットを撮る"
  },
  "panels/profiler/HeapSnapshotView.ts | typedArrays": {
    "message": "型付き配列"
  },
  "panels/profiler/IsolateSelector.ts | changeRate": {
    "message": "{PH1}/秒"
  },
  "panels/profiler/IsolateSelector.ts | decreasingBySPerSecond": {
    "message": "{PH1}/秒減少"
  },
  "panels/profiler/IsolateSelector.ts | empty": {
    "message": "（空）"
  },
  "panels/profiler/IsolateSelector.ts | heapSizeChangeTrendOverTheLastS": {
    "message": "過去 {PH1} 分間のヒープサイズの変化傾向。"
  },
  "panels/profiler/IsolateSelector.ts | heapSizeInUseByLiveJsObjects": {
    "message": "現在の JS オブジェクトで使用されているヒープサイズです。"
  },
  "panels/profiler/IsolateSelector.ts | increasingBySPerSecond": {
    "message": "1 秒あたり {PH1} 増加"
  },
  "panels/profiler/IsolateSelector.ts | javascriptVmInstances": {
    "message": "JavaScript VM インスタンス"
  },
  "panels/profiler/IsolateSelector.ts | totalJsHeapSize": {
    "message": "合計 JS ヒープサイズ"
  },
  "panels/profiler/IsolateSelector.ts | totalPageJsHeapSizeAcrossAllVm": {
    "message": "すべての VM インスタンスでの合計ページ JS ヒープサイズ"
  },
  "panels/profiler/IsolateSelector.ts | totalPageJsHeapSizeChangeTrend": {
    "message": "過去 {PH1} 分間の合計ページ JS ヒープサイズの変化傾向。"
  },
  "panels/profiler/LiveHeapProfileView.ts | allocatedJsHeapSizeCurrentlyIn": {
    "message": "割り当てられた JS ヒープサイズが現在使用されています"
  },
  "panels/profiler/LiveHeapProfileView.ts | anonymousScriptS": {
    "message": "（匿名スクリプト {PH1}）"
  },
  "panels/profiler/LiveHeapProfileView.ts | heapProfile": {
    "message": "ヒープ プロファイル"
  },
  "panels/profiler/LiveHeapProfileView.ts | jsHeap": {
    "message": "JS ヒープ"
  },
  "panels/profiler/LiveHeapProfileView.ts | kb": {
    "message": "KB"
  },
  "panels/profiler/LiveHeapProfileView.ts | numberOfVmsSharingTheSameScript": {
    "message": "同じスクリプト ソースを共有する VM の数"
  },
  "panels/profiler/LiveHeapProfileView.ts | scriptUrl": {
    "message": "スクリプト URL"
  },
  "panels/profiler/LiveHeapProfileView.ts | urlOfTheScriptSource": {
    "message": "スクリプト ソースの URL"
  },
  "panels/profiler/LiveHeapProfileView.ts | vms": {
    "message": "VM"
  },
  "panels/profiler/ModuleUIStrings.ts | buildingAllocationStatistics": {
    "message": "割り当て統計情報を作成しています…"
  },
  "panels/profiler/ModuleUIStrings.ts | buildingDominatedNodes": {
    "message": "ドミネートされるノードをビルドしています…"
  },
  "panels/profiler/ModuleUIStrings.ts | buildingDominatorTree": {
    "message": "ドミネーターのツリーを作成しています..."
  },
  "panels/profiler/ModuleUIStrings.ts | buildingEdgeIndexes": {
    "message": "エッジ インデックスをビルドしています…"
  },
  "panels/profiler/ModuleUIStrings.ts | buildingLocations": {
    "message": "ロケーションをビルドしています…"
  },
  "panels/profiler/ModuleUIStrings.ts | buildingPostorderIndex": {
    "message": "ポストオーダー インデックスを作成しています…"
  },
  "panels/profiler/ModuleUIStrings.ts | buildingRetainers": {
    "message": "保持パスを作成しています…"
  },
  "panels/profiler/ModuleUIStrings.ts | calculatingDistances": {
    "message": "距離を計算しています…"
  },
  "panels/profiler/ModuleUIStrings.ts | calculatingNodeFlags": {
    "message": "ノードフラグを計算しています…"
  },
  "panels/profiler/ModuleUIStrings.ts | calculatingRetainedSizes": {
    "message": "保持されるサイズを計算しています…"
  },
  "panels/profiler/ModuleUIStrings.ts | calculatingSamples": {
    "message": "サンプルを計算しています…"
  },
  "panels/profiler/ModuleUIStrings.ts | calculatingStatistics": {
    "message": "統計情報を計算しています…"
  },
  "panels/profiler/ModuleUIStrings.ts | done": {
    "message": "完了"
  },
  "panels/profiler/ModuleUIStrings.ts | finishedProcessing": {
    "message": "処理が終了しました"
  },
  "panels/profiler/ModuleUIStrings.ts | loadingAllocationTracesD": {
    "message": "割り当てトレースを読み込んでいます… {PH1}%"
  },
  "panels/profiler/ModuleUIStrings.ts | loadingEdgesD": {
    "message": "エッジを読み込んでいます… {PH1}%"
  },
  "panels/profiler/ModuleUIStrings.ts | loadingLocations": {
    "message": "場所を読み込んでいます…"
  },
  "panels/profiler/ModuleUIStrings.ts | loadingNodesD": {
    "message": "ノードを読み込んでいます… {PH1}%"
  },
  "panels/profiler/ModuleUIStrings.ts | loadingSamples": {
    "message": "サンプルを読み込んでいます…"
  },
  "panels/profiler/ModuleUIStrings.ts | loadingSnapshotInfo": {
    "message": "スナップショット情報を読み込んでいます…"
  },
  "panels/profiler/ModuleUIStrings.ts | loadingStrings": {
    "message": "文字列を読み込んでいます…"
  },
  "panels/profiler/ModuleUIStrings.ts | parsingStrings": {
    "message": "文字列を解析しています…"
  },
  "panels/profiler/ModuleUIStrings.ts | processingSnapshot": {
    "message": "スナップショットを処理しています…"
  },
  "panels/profiler/ModuleUIStrings.ts | propagatingDomState": {
    "message": "DOM のステータスを伝達しています…"
  },
  "panels/profiler/ProfileDataGrid.ts | genericTextTwoPlaceholders": {
    "message": "{PH1}、{PH2}"
  },
  "panels/profiler/ProfileDataGrid.ts | notOptimizedS": {
    "message": "最適化されていません: {PH1}"
  },
  "panels/profiler/ProfileLauncherView.ts | load": {
    "message": "読み込み"
  },
  "panels/profiler/ProfileLauncherView.ts | selectJavascriptVmInstance": {
    "message": "JavaScript VM インスタンスを選択"
  },
  "panels/profiler/ProfileLauncherView.ts | selectProfilingType": {
    "message": "プロファイリング タイプを選択"
  },
  "panels/profiler/ProfileLauncherView.ts | start": {
    "message": "開始"
  },
  "panels/profiler/ProfileLauncherView.ts | stop": {
    "message": "停止"
  },
  "panels/profiler/ProfileLauncherView.ts | takeSnapshot": {
    "message": "スナップショットを取得"
  },
  "panels/profiler/ProfileSidebarTreeElement.ts | profileOptions": {
    "message": "プロフィールの設定"
  },
  "panels/profiler/ProfileView.ts | chart": {
    "message": "グラフ"
  },
  "panels/profiler/ProfileView.ts | excludeSelectedFunction": {
    "message": "選択した機能を除外"
  },
  "panels/profiler/ProfileView.ts | failedToReadFile": {
    "message": "ファイルを読み取れませんでした"
  },
  "panels/profiler/ProfileView.ts | fileSReadErrorS": {
    "message": "ファイル「{PH1}」読み取りエラー: {PH2}"
  },
  "panels/profiler/ProfileView.ts | findByCostMsNameOrFile": {
    "message": "コスト（50 ミリ秒超）、名前、またはファイルで検索"
  },
  "panels/profiler/ProfileView.ts | focusSelectedFunction": {
    "message": "選択した関数にフォーカス"
  },
  "panels/profiler/ProfileView.ts | function": {
    "message": "機能"
  },
  "panels/profiler/ProfileView.ts | heavyBottomUp": {
    "message": "太字（ボトムアップ）"
  },
  "panels/profiler/ProfileView.ts | loaded": {
    "message": "読み込みました"
  },
  "panels/profiler/ProfileView.ts | loading": {
    "message": "読み込んでいます…"
  },
  "panels/profiler/ProfileView.ts | loadingD": {
    "message": "読み込んでいます… {PH1}%"
  },
  "panels/profiler/ProfileView.ts | parsing": {
    "message": "解析しています…"
  },
  "panels/profiler/ProfileView.ts | profile": {
    "message": "プロファイル"
  },
  "panels/profiler/ProfileView.ts | profileD": {
    "message": "プロフィール {PH1}"
  },
  "panels/profiler/ProfileView.ts | profileViewMode": {
    "message": "プロファイル ビューモード"
  },
  "panels/profiler/ProfileView.ts | profiler": {
    "message": "プロファイラ"
  },
  "panels/profiler/ProfileView.ts | restoreAllFunctions": {
    "message": "すべての関数を復元"
  },
  "panels/profiler/ProfileView.ts | treeTopDown": {
    "message": "ツリー（トップダウン）"
  },
  "panels/profiler/ProfilesPanel.ts | cantLoadFileSupportedFile": {
    "message": "ファイルを読み込めません。サポートされているファイル拡張子は「{PH1}」です。"
  },
  "panels/profiler/ProfilesPanel.ts | cantLoadProfileWhileAnother": {
    "message": "別のプロファイルの記録中であるため、プロファイルを読み込めません。"
  },
  "panels/profiler/ProfilesPanel.ts | deprecationWarnMsg": {
    "message": "このパネルは、次のバージョンで非推奨となります。JavaScript CPU プロファイルを記録する際は、パフォーマンス パネルを使用してください。"
  },
  "panels/profiler/ProfilesPanel.ts | feedback": {
    "message": "フィードバック"
  },
  "panels/profiler/ProfilesPanel.ts | goToPerformancePanel": {
    "message": "パフォーマンス パネルに移動"
  },
  "panels/profiler/ProfilesPanel.ts | profileLoadingFailedS": {
    "message": "プロファイルを読み込めませんでした: {PH1}"
  },
  "panels/profiler/ProfilesPanel.ts | profiles": {
    "message": "プロファイル"
  },
  "panels/profiler/ProfilesPanel.ts | runD": {
    "message": "{PH1} を実行"
  },
  "panels/profiler/profiler-meta.ts | clearAllProfiles": {
    "message": "プロファイルをすべて消去"
  },
  "panels/profiler/profiler-meta.ts | deleteProfile": {
    "message": "プロフィールを削除"
  },
  "panels/profiler/profiler-meta.ts | liveHeapProfile": {
    "message": "ライブヒープ プロファイル"
  },
  "panels/profiler/profiler-meta.ts | loadProfile": {
    "message": "プロファイルを読み込みます…"
  },
  "panels/profiler/profiler-meta.ts | memory": {
    "message": "メモリ"
  },
  "panels/profiler/profiler-meta.ts | saveProfile": {
    "message": "プロファイルを保存します…"
  },
  "panels/profiler/profiler-meta.ts | showLiveHeapProfile": {
    "message": "ライブヒープ プロファイルを表示"
  },
  "panels/profiler/profiler-meta.ts | showMemory": {
    "message": "メモリを表示"
  },
  "panels/profiler/profiler-meta.ts | startRecordingHeapAllocations": {
    "message": "ヒープ割り当ての記録を開始"
  },
  "panels/profiler/profiler-meta.ts | startRecordingHeapAllocationsAndReload": {
    "message": "ヒープ割り当ての記録を開始し、ページを再読み込み"
  },
  "panels/profiler/profiler-meta.ts | startStopRecording": {
    "message": "記録を開始 / 停止"
  },
  "panels/profiler/profiler-meta.ts | stopRecordingHeapAllocations": {
    "message": "ヒープ割り当ての記録を停止"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | CDPCommandEditorHidden": {
    "message": "CDP コマンド エディタが非表示になっています"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | CDPCommandEditorShown": {
    "message": "CDP コマンド エディタが表示されています"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | clearAll": {
    "message": "すべてクリア"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | documentation": {
    "message": "ドキュメント"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | editAndResend": {
    "message": "編集して再送信"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | elapsedTime": {
    "message": "経過時間"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | filter": {
    "message": "フィルタ"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | hideCDPCommandEditor": {
    "message": "CDP コマンド エディタを非表示にする"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | method": {
    "message": "方法"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | noMessageSelected": {
    "message": "メッセージが選択されていません"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | record": {
    "message": "記録"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | request": {
    "message": "リクエスト"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | response": {
    "message": "レスポンス"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | sMs": {
    "message": "{PH1} ms"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | save": {
    "message": "保存"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | selectTarget": {
    "message": "ターゲットを選択"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | sendRawCDPCommand": {
    "message": "raw CDP コマンドを送信"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | sendRawCDPCommandExplanation": {
    "message": "形式: パラメータのないコマンドの場合は 'Domain.commandName'、パラメータを持つコマンドの JSON オブジェクトの場合は '{\"command\":\"Domain.commandName\", \"parameters\": {...}}' です。JSON オブジェクトの代替キーとして、'cmd' / 'method'、'args' / 'params' / 'arguments' もサポートされます。"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | session": {
    "message": "セッション"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | showCDPCommandEditor": {
    "message": "CDP コマンド エディタを表示する"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | target": {
    "message": "対象"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | timestamp": {
    "message": "タイムスタンプ"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | type": {
    "message": "タイプ"
  },
  "panels/protocol_monitor/components/JSONEditor.ts | addCustomProperty": {
    "message": "カスタム プロパティを追加"
  },
  "panels/protocol_monitor/components/JSONEditor.ts | addParameter": {
    "message": "パラメータを追加"
  },
  "panels/protocol_monitor/components/JSONEditor.ts | deleteParameter": {
    "message": "パラメータを削除"
  },
  "panels/protocol_monitor/components/JSONEditor.ts | resetDefaultValue": {
    "message": "デフォルト値にリセット"
  },
  "panels/protocol_monitor/components/Toolbar.ts | copyCommand": {
    "message": "コマンドをコピー"
  },
  "panels/protocol_monitor/components/Toolbar.ts | sendCommandCmdEnter": {
    "message": "コマンドを送信 - ⌘+Enter"
  },
  "panels/protocol_monitor/components/Toolbar.ts | sendCommandCtrlEnter": {
    "message": "コマンドを送信 - Ctrl+Enter"
  },
  "panels/protocol_monitor/protocol_monitor-meta.ts | protocolMonitor": {
    "message": "プロトコル モニター"
  },
  "panels/protocol_monitor/protocol_monitor-meta.ts | showProtocolMonitor": {
    "message": "プロトコル モニターを表示"
  },
  "panels/recorder/RecorderController.ts | continueReplay": {
    "message": "続行"
  },
  "panels/recorder/RecorderController.ts | copyShortcut": {
    "message": "記録または選択したステップをコピー"
  },
  "panels/recorder/RecorderController.ts | createRecording": {
    "message": "新しい記録を作成"
  },
  "panels/recorder/RecorderController.ts | deleteRecording": {
    "message": "記録を削除"
  },
  "panels/recorder/RecorderController.ts | export": {
    "message": "エクスポート"
  },
  "panels/recorder/RecorderController.ts | exportRecording": {
    "message": "エクスポート"
  },
  "panels/recorder/RecorderController.ts | exportViaExtensions": {
    "message": "拡張機能によるエクスポート"
  },
  "panels/recorder/RecorderController.ts | getExtensions": {
    "message": "拡張機能を取得…"
  },
  "panels/recorder/RecorderController.ts | importRecording": {
    "message": "記録をインポート"
  },
  "panels/recorder/RecorderController.ts | noRecordings": {
    "message": "記録なし"
  },
  "panels/recorder/RecorderController.ts | numberOfRecordings": {
    "message": "件の録音"
  },
  "panels/recorder/RecorderController.ts | replayRecording": {
    "message": "記録を再生"
  },
  "panels/recorder/RecorderController.ts | sendFeedback": {
    "message": "フィードバックを送信"
  },
  "panels/recorder/RecorderController.ts | startStopRecording": {
    "message": "記録を開始 / 停止"
  },
  "panels/recorder/RecorderController.ts | stepOverReplay": {
    "message": "1 つのステップを実行"
  },
  "panels/recorder/RecorderController.ts | toggleCode": {
    "message": "コードビューを切り替える"
  },
  "panels/recorder/components/CreateRecordingView.ts | cancelRecording": {
    "message": "記録をキャンセル"
  },
  "panels/recorder/components/CreateRecordingView.ts | createRecording": {
    "message": "新しい記録を作成"
  },
  "panels/recorder/components/CreateRecordingView.ts | includeNecessarySelectors": {
    "message": "オプションとして CSS、Pierce、XPath のいずれかを選択する必要があります。ARIA とテキスト セレクタが一意ではない場合があるため、確実に記録されるのはこれらのセレクタのみです。"
  },
  "panels/recorder/components/CreateRecordingView.ts | recordingName": {
    "message": "記録名"
  },
  "panels/recorder/components/CreateRecordingView.ts | recordingNameIsRequired": {
    "message": "記録名は必須です"
  },
  "panels/recorder/components/CreateRecordingView.ts | selectorAttribute": {
    "message": "セレクタの属性"
  },
  "panels/recorder/components/CreateRecordingView.ts | selectorTypeARIA": {
    "message": "ARIA"
  },
  "panels/recorder/components/CreateRecordingView.ts | selectorTypeCSS": {
    "message": "CSS"
  },
  "panels/recorder/components/CreateRecordingView.ts | selectorTypePierce": {
    "message": "Pierce"
  },
  "panels/recorder/components/CreateRecordingView.ts | selectorTypeText": {
    "message": "テキスト"
  },
  "panels/recorder/components/CreateRecordingView.ts | selectorTypeXPath": {
    "message": "XPath"
  },
  "panels/recorder/components/CreateRecordingView.ts | selectorTypes": {
    "message": "記録するセレクタの種類"
  },
  "panels/recorder/components/CreateRecordingView.ts | startRecording": {
    "message": "記録を開始"
  },
  "panels/recorder/components/ExtensionView.ts | closeView": {
    "message": "閉じる"
  },
  "panels/recorder/components/ExtensionView.ts | extension": {
    "message": "ブラウザの拡張機能によって提供されたコンテンツ"
  },
  "panels/recorder/components/RecordingListView.ts | createRecording": {
    "message": "新しい記録を作成"
  },
  "panels/recorder/components/RecordingListView.ts | deleteRecording": {
    "message": "記録を削除"
  },
  "panels/recorder/components/RecordingListView.ts | openRecording": {
    "message": "記録を開く"
  },
  "panels/recorder/components/RecordingListView.ts | playRecording": {
    "message": "記録を再生"
  },
  "panels/recorder/components/RecordingListView.ts | savedRecordings": {
    "message": "保存済みの記録"
  },
  "panels/recorder/components/RecordingView.ts | addAssertion": {
    "message": "アサーションを追加"
  },
  "panels/recorder/components/RecordingView.ts | cancelReplay": {
    "message": "リプレイをキャンセル"
  },
  "panels/recorder/components/RecordingView.ts | default": {
    "message": "デフォルト"
  },
  "panels/recorder/components/RecordingView.ts | desktop": {
    "message": "デスクトップ"
  },
  "panels/recorder/components/RecordingView.ts | download": {
    "message": "ダウンロード: {value}"
  },
  "panels/recorder/components/RecordingView.ts | editReplaySettings": {
    "message": "リプレイ設定を編集"
  },
  "panels/recorder/components/RecordingView.ts | editTitle": {
    "message": "タイトルを編集"
  },
  "panels/recorder/components/RecordingView.ts | endRecording": {
    "message": "記録を終了"
  },
  "panels/recorder/components/RecordingView.ts | environment": {
    "message": "環境"
  },
  "panels/recorder/components/RecordingView.ts | hideCode": {
    "message": "コードを非表示"
  },
  "panels/recorder/components/RecordingView.ts | latency": {
    "message": "レイテンシ: {value} ミリ秒"
  },
  "panels/recorder/components/RecordingView.ts | mobile": {
    "message": "モバイル"
  },
  "panels/recorder/components/RecordingView.ts | network": {
    "message": "ネットワーク"
  },
  "panels/recorder/components/RecordingView.ts | performancePanel": {
    "message": "[パフォーマンス] パネル"
  },
  "panels/recorder/components/RecordingView.ts | recording": {
    "message": "記録しています…"
  },
  "panels/recorder/components/RecordingView.ts | recordingIsBeingStopped": {
    "message": "記録を停止しています…"
  },
  "panels/recorder/components/RecordingView.ts | replaySettings": {
    "message": "リプレイの設定"
  },
  "panels/recorder/components/RecordingView.ts | requiredTitleError": {
    "message": "タイトルを入力してください"
  },
  "panels/recorder/components/RecordingView.ts | screenshotForSection": {
    "message": "このセクションのスクリーンショット"
  },
  "panels/recorder/components/RecordingView.ts | showCode": {
    "message": "コードを表示"
  },
  "panels/recorder/components/RecordingView.ts | timeout": {
    "message": "タイムアウト: {value} ミリ秒"
  },
  "panels/recorder/components/RecordingView.ts | timeoutExplanation": {
    "message": "タイムアウト設定（ミリ秒単位）は、記録を再生する際のすべてのアクションに適用されます。たとえば、CSS セレクタで識別された DOM 要素が指定したタイムアウト内にページに表示されない場合、再生はエラーとなり失敗します。"
  },
  "panels/recorder/components/RecordingView.ts | timeoutLabel": {
    "message": "タイムアウト"
  },
  "panels/recorder/components/RecordingView.ts | upload": {
    "message": "アップロード: {value}"
  },
  "panels/recorder/components/ReplayButton.ts | ReplayExtremelySlowButtonLabel": {
    "message": "極めて遅いリプレイ"
  },
  "panels/recorder/components/ReplayButton.ts | ReplayExtremelySlowItemLabel": {
    "message": "極めて遅い"
  },
  "panels/recorder/components/ReplayButton.ts | ReplayNormalButtonLabel": {
    "message": "リプレイ"
  },
  "panels/recorder/components/ReplayButton.ts | ReplayNormalItemLabel": {
    "message": "普通（デフォルト）"
  },
  "panels/recorder/components/ReplayButton.ts | ReplaySlowButtonLabel": {
    "message": "遅いリプレイ"
  },
  "panels/recorder/components/ReplayButton.ts | ReplaySlowItemLabel": {
    "message": "遅い"
  },
  "panels/recorder/components/ReplayButton.ts | ReplayVerySlowButtonLabel": {
    "message": "とても遅いリプレイ"
  },
  "panels/recorder/components/ReplayButton.ts | ReplayVerySlowItemLabel": {
    "message": "とても遅い"
  },
  "panels/recorder/components/ReplayButton.ts | extensionGroup": {
    "message": "拡張機能"
  },
  "panels/recorder/components/ReplayButton.ts | speedGroup": {
    "message": "速度"
  },
  "panels/recorder/components/StartView.ts | createRecording": {
    "message": "新しい記録を作成"
  },
  "panels/recorder/components/StartView.ts | header": {
    "message": "ユーザー ジャーニー全体のパフォーマンスの測定"
  },
  "panels/recorder/components/StartView.ts | quickStart": {
    "message": "クイック スタート: DevTools の新しい [レコーダー] パネルについて学ぶ"
  },
  "panels/recorder/components/StartView.ts | step1": {
    "message": "ウェブサイトやアプリでの一般的なユーザー ジャーニーを記録する"
  },
  "panels/recorder/components/StartView.ts | step2": {
    "message": "記録をリプレイして、フローが機能しているかどうかを確認する"
  },
  "panels/recorder/components/StartView.ts | step3": {
    "message": "詳細なパフォーマンス トレースを生成するか、テスト用の Puppeteer スクリプトをエクスポートする"
  },
  "panels/recorder/components/StepEditor.ts | addAttribute": {
    "message": "{attributeName} を追加"
  },
  "panels/recorder/components/StepEditor.ts | addFrameIndex": {
    "message": "フレームツリー内にフレーム インデックスを追加"
  },
  "panels/recorder/components/StepEditor.ts | addSelector": {
    "message": "セレクタを追加"
  },
  "panels/recorder/components/StepEditor.ts | addSelectorPart": {
    "message": "セレクタの一部を追加"
  },
  "panels/recorder/components/StepEditor.ts | deleteRow": {
    "message": "行を削除"
  },
  "panels/recorder/components/StepEditor.ts | notSaved": {
    "message": "保存できませんでした: {error}"
  },
  "panels/recorder/components/StepEditor.ts | removeFrameIndex": {
    "message": "フレーム インデックスを削除"
  },
  "panels/recorder/components/StepEditor.ts | removeSelector": {
    "message": "セレクタを削除"
  },
  "panels/recorder/components/StepEditor.ts | removeSelectorPart": {
    "message": "セレクタの一部を削除"
  },
  "panels/recorder/components/StepEditor.ts | selectorPicker": {
    "message": "ページ内の要素を選択してセレクタを更新"
  },
  "panels/recorder/components/StepEditor.ts | unknownActionType": {
    "message": "不明なアクション タイプです。"
  },
  "panels/recorder/components/StepView.ts | addBreakpoint": {
    "message": "ブレークポイントを追加"
  },
  "panels/recorder/components/StepView.ts | addStepAfter": {
    "message": "この後にステップを追加"
  },
  "panels/recorder/components/StepView.ts | addStepBefore": {
    "message": "この前にステップを追加"
  },
  "panels/recorder/components/StepView.ts | breakpoints": {
    "message": "ブレークポイント"
  },
  "panels/recorder/components/StepView.ts | changeStepTitle": {
    "message": "変更"
  },
  "panels/recorder/components/StepView.ts | clickStepTitle": {
    "message": "クリック"
  },
  "panels/recorder/components/StepView.ts | closeStepTitle": {
    "message": "閉じる"
  },
  "panels/recorder/components/StepView.ts | copyAs": {
    "message": "形式を指定してコピー"
  },
  "panels/recorder/components/StepView.ts | customStepTitle": {
    "message": "カスタム ステップ"
  },
  "panels/recorder/components/StepView.ts | doubleClickStepTitle": {
    "message": "ダブルクリック"
  },
  "panels/recorder/components/StepView.ts | elementRoleButton": {
    "message": "ボタン"
  },
  "panels/recorder/components/StepView.ts | elementRoleFallback": {
    "message": "要素"
  },
  "panels/recorder/components/StepView.ts | elementRoleInput": {
    "message": "入力"
  },
  "panels/recorder/components/StepView.ts | emulateNetworkConditionsStepTitle": {
    "message": "ネットワーク条件のエミュレーション"
  },
  "panels/recorder/components/StepView.ts | hoverStepTitle": {
    "message": "マウスオーバー"
  },
  "panels/recorder/components/StepView.ts | keyDownStepTitle": {
    "message": "キーダウン"
  },
  "panels/recorder/components/StepView.ts | keyUpStepTitle": {
    "message": "キーアップ"
  },
  "panels/recorder/components/StepView.ts | navigateStepTitle": {
    "message": "ナビゲーション"
  },
  "panels/recorder/components/StepView.ts | openStepActions": {
    "message": "ステップの操作を開く"
  },
  "panels/recorder/components/StepView.ts | removeBreakpoint": {
    "message": "ブレークポイントを削除"
  },
  "panels/recorder/components/StepView.ts | removeStep": {
    "message": "ステップを削除"
  },
  "panels/recorder/components/StepView.ts | scrollStepTitle": {
    "message": "スクロール"
  },
  "panels/recorder/components/StepView.ts | setViewportClickTitle": {
    "message": "ビューポートの設定"
  },
  "panels/recorder/components/StepView.ts | stepManagement": {
    "message": "ステップの管理"
  },
  "panels/recorder/components/StepView.ts | waitForElementStepTitle": {
    "message": "要素を待機"
  },
  "panels/recorder/components/StepView.ts | waitForExpressionStepTitle": {
    "message": "式の待機"
  },
  "panels/recorder/models/RecorderSettings.ts | defaultRecordingName": {
    "message": "記録（{DATE} {TIME}）"
  },
  "panels/recorder/recorder-meta.ts | createRecording": {
    "message": "新しい記録を作成"
  },
  "panels/recorder/recorder-meta.ts | recorder": {
    "message": "レコーダー"
  },
  "panels/recorder/recorder-meta.ts | replayRecording": {
    "message": "記録を再生"
  },
  "panels/recorder/recorder-meta.ts | showRecorder": {
    "message": "レコーダーの表示"
  },
  "panels/recorder/recorder-meta.ts | startStopRecording": {
    "message": "記録を開始 / 停止"
  },
  "panels/recorder/recorder-meta.ts | toggleCode": {
    "message": "コードビューを切り替える"
  },
  "panels/screencast/ScreencastApp.ts | toggleScreencast": {
    "message": "スクリーンキャストを切り替える"
  },
  "panels/screencast/ScreencastView.ts | addressBar": {
    "message": "アドレスバー"
  },
  "panels/screencast/ScreencastView.ts | back": {
    "message": "戻る"
  },
  "panels/screencast/ScreencastView.ts | forward": {
    "message": "転送"
  },
  "panels/screencast/ScreencastView.ts | mouseInput": {
    "message": "マウスを使用する"
  },
  "panels/screencast/ScreencastView.ts | profilingInProgress": {
    "message": "プロファイリングを実行中"
  },
  "panels/screencast/ScreencastView.ts | reload": {
    "message": "再読み込み"
  },
  "panels/screencast/ScreencastView.ts | screencastViewOfDebugTarget": {
    "message": "デバッグ ターゲットのスクリーンキャスト ビュー"
  },
  "panels/screencast/ScreencastView.ts | theTabIsInactive": {
    "message": "タブがアクティブではありません"
  },
  "panels/screencast/ScreencastView.ts | touchInput": {
    "message": "タッチ操作を使用する"
  },
  "panels/search/SearchResultsPane.ts | lineS": {
    "message": "第 {PH1} 行"
  },
  "panels/search/SearchResultsPane.ts | matchesCountS": {
    "message": "{PH1} 件と一致します"
  },
  "panels/search/SearchResultsPane.ts | showDMore": {
    "message": "さらに {PH1} 件を表示"
  },
  "panels/search/SearchView.ts | clear": {
    "message": "消去"
  },
  "panels/search/SearchView.ts | foundDMatchingLinesInDFiles": {
    "message": "{PH2} ファイルで一致する行が {PH1} つ見つかりました。"
  },
  "panels/search/SearchView.ts | foundDMatchingLinesInFile": {
    "message": "1 ファイル内で {PH1} 行が一致しました。"
  },
  "panels/search/SearchView.ts | foundMatchingLineInFile": {
    "message": "1 つのファイル内で 1 つの行が一致しました。"
  },
  "panels/search/SearchView.ts | indexing": {
    "message": "インデックスに登録しています…"
  },
  "panels/search/SearchView.ts | indexingInterrupted": {
    "message": "インデックス登録が中断されました。"
  },
  "panels/search/SearchView.ts | matchCase": {
    "message": "大文字と小文字を区別"
  },
  "panels/search/SearchView.ts | noMatchesFound": {
    "message": "一致するものが見つかりませんでした。"
  },
  "panels/search/SearchView.ts | refresh": {
    "message": "更新"
  },
  "panels/search/SearchView.ts | search": {
    "message": "検索"
  },
  "panels/search/SearchView.ts | searchFinished": {
    "message": "検索が終了しました。"
  },
  "panels/search/SearchView.ts | searchInterrupted": {
    "message": "検索が中断されました。"
  },
  "panels/search/SearchView.ts | searchQuery": {
    "message": "検索クエリ"
  },
  "panels/search/SearchView.ts | searching": {
    "message": "検索しています…"
  },
  "panels/search/SearchView.ts | useRegularExpression": {
    "message": "正規表現を使用"
  },
  "panels/security/SecurityModel.ts | cipherWithMAC": {
    "message": "{PH1}（{PH2}）"
  },
  "panels/security/SecurityModel.ts | keyExchangeWithGroup": {
    "message": "{PH1}（{PH2}）"
  },
  "panels/security/SecurityModel.ts | theSecurityOfThisPageIsUnknown": {
    "message": "このページのセキュリティは不明です。"
  },
  "panels/security/SecurityModel.ts | thisPageIsNotSecure": {
    "message": "このページは安全ではありません。"
  },
  "panels/security/SecurityModel.ts | thisPageIsNotSecureBrokenHttps": {
    "message": "このページは安全ではありません（破損した HTTPS）。"
  },
  "panels/security/SecurityModel.ts | thisPageIsSecureValidHttps": {
    "message": "このページは安全です（有効な HTTPS）"
  },
  "panels/security/SecurityPanel.ts | activeContentWithCertificate": {
    "message": "証明書エラーが含まれる有効なコンテンツ"
  },
  "panels/security/SecurityPanel.ts | activeMixedContent": {
    "message": "アクティブな混合コンテンツ"
  },
  "panels/security/SecurityPanel.ts | allResourcesOnThisPageAreServed": {
    "message": "このページのすべてのリソースは、保護された接続で配信されます。"
  },
  "panels/security/SecurityPanel.ts | allServedSecurely": {
    "message": "すべて安全に配信されました"
  },
  "panels/security/SecurityPanel.ts | blockedMixedContent": {
    "message": "混合コンテンツがブロックされました"
  },
  "panels/security/SecurityPanel.ts | certificate": {
    "message": "証明書"
  },
  "panels/security/SecurityPanel.ts | certificateExpiresSoon": {
    "message": "まもなく証明書の期限が切れます"
  },
  "panels/security/SecurityPanel.ts | certificateTransparency": {
    "message": "証明書の透明性"
  },
  "panels/security/SecurityPanel.ts | chromeHasDeterminedThatThisSiteS": {
    "message": "偽のサイトまたは不正なサイトの可能性があります。"
  },
  "panels/security/SecurityPanel.ts | cipher": {
    "message": "暗号化"
  },
  "panels/security/SecurityPanel.ts | connection": {
    "message": "接続"
  },
  "panels/security/SecurityPanel.ts | contentWithCertificateErrors": {
    "message": "証明書エラーが含まれるコンテンツ"
  },
  "panels/security/SecurityPanel.ts | enabled": {
    "message": "有効"
  },
  "panels/security/SecurityPanel.ts | encryptedClientHello": {
    "message": "暗号化された ClientHello"
  },
  "panels/security/SecurityPanel.ts | flaggedByGoogleSafeBrowsing": {
    "message": "Google セーフ ブラウジングによって報告されています"
  },
  "panels/security/SecurityPanel.ts | hashAlgorithm": {
    "message": "ハッシュ アルゴリズム"
  },
  "panels/security/SecurityPanel.ts | hideFullDetails": {
    "message": "詳細をすべて非表示"
  },
  "panels/security/SecurityPanel.ts | ifYouBelieveThisIsShownIn": {
    "message": "このメッセージが誤って表示されたと思われる場合は、https://g.co/chrome/lookalike-warnings にアクセスしてください。"
  },
  "panels/security/SecurityPanel.ts | ifYouBelieveThisIsShownInErrorSafety": {
    "message": "このメッセージが誤って表示されたと思われる場合は、https://g.co/chrome/lookalike-warnings にアクセスしてください。"
  },
  "panels/security/SecurityPanel.ts | info": {
    "message": "情報"
  },
  "panels/security/SecurityPanel.ts | insecureSha": {
    "message": "安全ではない（SHA-1）"
  },
  "panels/security/SecurityPanel.ts | issuedAt": {
    "message": "発行:"
  },
  "panels/security/SecurityPanel.ts | issuer": {
    "message": "発行元"
  },
  "panels/security/SecurityPanel.ts | keyExchange": {
    "message": "鍵交換"
  },
  "panels/security/SecurityPanel.ts | logId": {
    "message": "ログ ID"
  },
  "panels/security/SecurityPanel.ts | logName": {
    "message": "ログ名"
  },
  "panels/security/SecurityPanel.ts | mainOrigin": {
    "message": "主要な提供元"
  },
  "panels/security/SecurityPanel.ts | mainOriginNonsecure": {
    "message": "主なオリジン（安全ではない）"
  },
  "panels/security/SecurityPanel.ts | mainOriginSecure": {
    "message": "主要な提供元（安全）"
  },
  "panels/security/SecurityPanel.ts | missing": {
    "message": "該当なし"
  },
  "panels/security/SecurityPanel.ts | mixedContent": {
    "message": "混合コンテンツ"
  },
  "panels/security/SecurityPanel.ts | na": {
    "message": "（なし）"
  },
  "panels/security/SecurityPanel.ts | noSecurityDetailsAreAvailableFor": {
    "message": "この提供元についてセキュリティの詳細はありません。"
  },
  "panels/security/SecurityPanel.ts | noSecurityInformation": {
    "message": "セキュリティ情報がありません"
  },
  "panels/security/SecurityPanel.ts | nonsecureForm": {
    "message": "セキュアでないフォーム"
  },
  "panels/security/SecurityPanel.ts | nonsecureOrigins": {
    "message": "セキュアでないオリジン"
  },
  "panels/security/SecurityPanel.ts | notSecure": {
    "message": "保護されていません"
  },
  "panels/security/SecurityPanel.ts | notSecureBroken": {
    "message": "保護されていません（壊れている）"
  },
  "panels/security/SecurityPanel.ts | obsoleteConnectionSettings": {
    "message": "廃止された接続設定"
  },
  "panels/security/SecurityPanel.ts | openFullCertificateDetails": {
    "message": "完全な証明書の詳細を開く"
  },
  "panels/security/SecurityPanel.ts | origin": {
    "message": "オリジン"
  },
  "panels/security/SecurityPanel.ts | overview": {
    "message": "概要"
  },
  "panels/security/SecurityPanel.ts | possibleSpoofingUrl": {
    "message": "なりすましの可能性がある URL"
  },
  "panels/security/SecurityPanel.ts | protocol": {
    "message": "プロトコル"
  },
  "panels/security/SecurityPanel.ts | publickeypinningBypassed": {
    "message": "公開鍵固定がバイパスされました"
  },
  "panels/security/SecurityPanel.ts | publickeypinningWasBypassedByA": {
    "message": "ローカルルート証明書によって公開鍵のピニングがバイパスされました。"
  },
  "panels/security/SecurityPanel.ts | reloadThePageToRecordRequestsFor": {
    "message": "HTTP リソースのリクエストを記録するにはページを再読み込みしてください。"
  },
  "panels/security/SecurityPanel.ts | reloadToViewDetails": {
    "message": "再読み込みして詳細を表示"
  },
  "panels/security/SecurityPanel.ts | resources": {
    "message": "リソース"
  },
  "panels/security/SecurityPanel.ts | rsaKeyExchangeIsObsoleteEnableAn": {
    "message": "RSA 鍵交換は廃止されました。ECDHE ベースの暗号スイートを有効にしてください。"
  },
  "panels/security/SecurityPanel.ts | sIsObsoleteEnableAnAesgcmbased": {
    "message": "{PH1} は廃止されました。AES-GCM ベースの暗号スイートを有効にしてください。"
  },
  "panels/security/SecurityPanel.ts | sIsObsoleteEnableTlsOrLater": {
    "message": "{PH1} は廃止されました。TLS 1.2 以降を有効にしてください。"
  },
  "panels/security/SecurityPanel.ts | sct": {
    "message": "SCT"
  },
  "panels/security/SecurityPanel.ts | secure": {
    "message": "安全"
  },
  "panels/security/SecurityPanel.ts | secureConnectionSettings": {
    "message": "安全な接続設定"
  },
  "panels/security/SecurityPanel.ts | secureOrigins": {
    "message": "セキュアな提供元"
  },
  "panels/security/SecurityPanel.ts | securityOverview": {
    "message": "セキュリティの概要"
  },
  "panels/security/SecurityPanel.ts | serverSignature": {
    "message": "サーバーの署名"
  },
  "panels/security/SecurityPanel.ts | showFullDetails": {
    "message": "詳細を表示"
  },
  "panels/security/SecurityPanel.ts | showLess": {
    "message": "折りたたむ"
  },
  "panels/security/SecurityPanel.ts | showMoreSTotal": {
    "message": "さらに表示（合計 {PH1}）"
  },
  "panels/security/SecurityPanel.ts | signatureAlgorithm": {
    "message": "署名アルゴリズム"
  },
  "panels/security/SecurityPanel.ts | signatureData": {
    "message": "署名データ"
  },
  "panels/security/SecurityPanel.ts | source": {
    "message": "ソース"
  },
  "panels/security/SecurityPanel.ts | subject": {
    "message": "サブジェクト"
  },
  "panels/security/SecurityPanel.ts | subjectAlternativeNameMissing": {
    "message": "Subject Alternative Name がありません"
  },
  "panels/security/SecurityPanel.ts | theCertificateChainForThisSite": {
    "message": "このサイトの証明書チェーンには SHA-1 を使って署名された証明書が含まれています。"
  },
  "panels/security/SecurityPanel.ts | theCertificateForThisSiteDoesNot": {
    "message": "このサイトの証明書には、ドメイン名または IP アドレスを含む Subject Alternative Name 拡張機能が含まれていません。"
  },
  "panels/security/SecurityPanel.ts | theCertificateForThisSiteExpires": {
    "message": "このサイトの証明書の有効期限が残り 48 時間を切っています。更新が必要です。"
  },
  "panels/security/SecurityPanel.ts | theConnectionToThisSiteIs": {
    "message": "このサイトへの接続は、{PH1}、{PH2}、{PH3} を使用して暗号化および認証されています。"
  },
  "panels/security/SecurityPanel.ts | theConnectionToThisSiteIsUsingA": {
    "message": "このサイトへの接続は、{PH1} によって発行された、信頼できる有効なサーバー証明書を使用しています。"
  },
  "panels/security/SecurityPanel.ts | theSecurityDetailsAboveAreFrom": {
    "message": "上記のセキュリティ詳細は、最初に検査したレスポンスからのものです。"
  },
  "panels/security/SecurityPanel.ts | theServerSignatureUsesShaWhichIs": {
    "message": "廃止されている SHA-1 がサーバー署名に使用されています。代わりに SHA-2 署名アルゴリズムを有効にしてください。（これは証明書の署名とは異なりますのでご注意ください）"
  },
  "panels/security/SecurityPanel.ts | thisIsAnErrorPage": {
    "message": "エラーページです。"
  },
  "panels/security/SecurityPanel.ts | thisOriginIsANonhttpsSecure": {
    "message": "このオリジンは HTTPS 以外の安全なオリジンです。"
  },
  "panels/security/SecurityPanel.ts | thisPageHasANonhttpsSecureOrigin": {
    "message": "このページには、HTTPS 以外の安全な提供元があります。"
  },
  "panels/security/SecurityPanel.ts | thisPageIncludesAFormWithA": {
    "message": "このページには、安全でない「action」属性を使用するフォームがあります。"
  },
  "panels/security/SecurityPanel.ts | thisPageIncludesHttpResources": {
    "message": "このページには HTTP リソースが含まれています。"
  },
  "panels/security/SecurityPanel.ts | thisPageIncludesResourcesThat": {
    "message": "このページには証明書エラーで読み込まれたリソースが含まれています。"
  },
  "panels/security/SecurityPanel.ts | thisPageIsDangerousFlaggedBy": {
    "message": "このページは危険です（Google セーフ ブラウジングにより判定）。"
  },
  "panels/security/SecurityPanel.ts | thisPageIsInsecureUnencrypted": {
    "message": "このページは安全ではありません（HTTP が暗号化されていない）。"
  },
  "panels/security/SecurityPanel.ts | thisPageIsSuspicious": {
    "message": "不審なページです"
  },
  "panels/security/SecurityPanel.ts | thisPageIsSuspiciousFlaggedBy": {
    "message": "不審なページ（Chrome により判定）"
  },
  "panels/security/SecurityPanel.ts | thisRequestCompliesWithChromes": {
    "message": "このリクエストは Chrome の Certificate Transparency（証明書の透明性）ポリシーに準拠しています。"
  },
  "panels/security/SecurityPanel.ts | thisRequestDoesNotComplyWith": {
    "message": "このリクエストは Chrome の Certificate Transparency（証明書の透明性）ポリシーを遵守していません。"
  },
  "panels/security/SecurityPanel.ts | thisResponseWasLoadedFromCache": {
    "message": "このレスポンスはキャッシュから読み込まれました。一部のセキュリティの詳細が欠落している可能性があります。"
  },
  "panels/security/SecurityPanel.ts | thisSiteIsMissingAValidTrusted": {
    "message": "このサイトには、信頼できる有効な証明書がありません（{PH1}）。"
  },
  "panels/security/SecurityPanel.ts | thisSitesHostnameLooksSimilarToP": {
    "message": "このサイトのホスト名は {PH1} と似ているようです。不正なユーザーがドメイン名のごく一部を一目ではわからないように改変してサイトを偽装する場合があります。"
  },
  "panels/security/SecurityPanel.ts | toCheckThisPagesStatusVisit": {
    "message": "このページのステータスを確認するには g.co/safebrowsingstatus をご覧ください。"
  },
  "panels/security/SecurityPanel.ts | unknownCanceled": {
    "message": "不明 / キャンセル済み"
  },
  "panels/security/SecurityPanel.ts | unknownField": {
    "message": "不明"
  },
  "panels/security/SecurityPanel.ts | validAndTrusted": {
    "message": "有効で信頼できる"
  },
  "panels/security/SecurityPanel.ts | validFrom": {
    "message": "有効期限開始"
  },
  "panels/security/SecurityPanel.ts | validUntil": {
    "message": "有効期限"
  },
  "panels/security/SecurityPanel.ts | validationStatus": {
    "message": "検証ステータス"
  },
  "panels/security/SecurityPanel.ts | viewCertificate": {
    "message": "証明書を表示"
  },
  "panels/security/SecurityPanel.ts | viewDRequestsInNetworkPanel": {
    "message": "{n,plural, =1{# 件のリクエストを [ネットワーク] パネルに表示}other{# 件のリクエストを [ネットワーク] パネルに表示}}"
  },
  "panels/security/SecurityPanel.ts | viewRequestsInNetworkPanel": {
    "message": "リクエストをネットワーク パネルで表示"
  },
  "panels/security/SecurityPanel.ts | youHaveRecentlyAllowedContent": {
    "message": "最近このサイトで、証明書エラーのあるコンテンツ（スクリプトや iframe など）の読み込みを許可しました。"
  },
  "panels/security/SecurityPanel.ts | youHaveRecentlyAllowedNonsecure": {
    "message": "最近このサイトで、セキュアでないコンテンツ（スクリプトや iframe など）の実行を許可しました。"
  },
  "panels/security/SecurityPanel.ts | yourConnectionToThisOriginIsNot": {
    "message": "この提供元への接続は保護されていません。"
  },
  "panels/security/SecurityPanel.ts | yourPageRequestedNonsecure": {
    "message": "ページが、ブロックされたセキュアでないリソースをリクエストしました。"
  },
  "panels/security/security-meta.ts | security": {
    "message": "セキュリティ"
  },
  "panels/security/security-meta.ts | showSecurity": {
    "message": "セキュリティを表示"
  },
  "panels/sensors/LocationsSettingsTab.ts | addLocation": {
    "message": "場所を追加..."
  },
  "panels/sensors/LocationsSettingsTab.ts | customLocations": {
    "message": "カスタムの場所"
  },
  "panels/sensors/LocationsSettingsTab.ts | lat": {
    "message": "緯度"
  },
  "panels/sensors/LocationsSettingsTab.ts | latitude": {
    "message": "緯度"
  },
  "panels/sensors/LocationsSettingsTab.ts | latitudeMustBeANumber": {
    "message": "緯度は数字で入力してください"
  },
  "panels/sensors/LocationsSettingsTab.ts | latitudeMustBeGreaterThanOrEqual": {
    "message": "緯度は {PH1} 以上の値で入力してください"
  },
  "panels/sensors/LocationsSettingsTab.ts | latitudeMustBeLessThanOrEqualToS": {
    "message": "緯度は {PH1} 以下の値で入力してください"
  },
  "panels/sensors/LocationsSettingsTab.ts | locale": {
    "message": "言語 / 地域"
  },
  "panels/sensors/LocationsSettingsTab.ts | localeMustContainAlphabetic": {
    "message": "言語 / 地域は英文字で入力してください"
  },
  "panels/sensors/LocationsSettingsTab.ts | locationName": {
    "message": "場所の名前"
  },
  "panels/sensors/LocationsSettingsTab.ts | locationNameCannotBeEmpty": {
    "message": "場所の名前を入力してください"
  },
  "panels/sensors/LocationsSettingsTab.ts | locationNameMustBeLessThanS": {
    "message": "場所名は {PH1} 文字以上で入力してください"
  },
  "panels/sensors/LocationsSettingsTab.ts | long": {
    "message": "経度"
  },
  "panels/sensors/LocationsSettingsTab.ts | longitude": {
    "message": "経度"
  },
  "panels/sensors/LocationsSettingsTab.ts | longitudeMustBeANumber": {
    "message": "経度は数字で入力してください"
  },
  "panels/sensors/LocationsSettingsTab.ts | longitudeMustBeGreaterThanOr": {
    "message": "経度は {PH1} 以上の値で入力してください"
  },
  "panels/sensors/LocationsSettingsTab.ts | longitudeMustBeLessThanOrEqualTo": {
    "message": "経度は {PH1} 以下の値で入力してください"
  },
  "panels/sensors/LocationsSettingsTab.ts | timezoneId": {
    "message": "タイムゾーン ID"
  },
  "panels/sensors/LocationsSettingsTab.ts | timezoneIdMustContainAlphabetic": {
    "message": "タイムゾーン ID は英文字で入力してください"
  },
  "panels/sensors/SensorsView.ts | adjustWithMousewheelOrUpdownKeys": {
    "message": "マウスホイールまたは上 / 下矢印キーを使って調整します。{PH1}: ±10、Shift: ±1、Alt: ±0.01"
  },
  "panels/sensors/SensorsView.ts | alpha": {
    "message": "α（アルファ）"
  },
  "panels/sensors/SensorsView.ts | beta": {
    "message": "β（ベータ）"
  },
  "panels/sensors/SensorsView.ts | customOrientation": {
    "message": "カスタムの向き"
  },
  "panels/sensors/SensorsView.ts | deviceOrientationSetToAlphaSBeta": {
    "message": "デバイスの向きをアルファ: {PH1}、ベータ: {PH2}、ガンマ: {PH3} に設定しました"
  },
  "panels/sensors/SensorsView.ts | displayDown": {
    "message": "ディスプレイ下"
  },
  "panels/sensors/SensorsView.ts | displayUp": {
    "message": "ディスプレイ上"
  },
  "panels/sensors/SensorsView.ts | enableOrientationToRotate": {
    "message": "回転させる向きを有効にしてください"
  },
  "panels/sensors/SensorsView.ts | error": {
    "message": "エラー"
  },
  "panels/sensors/SensorsView.ts | forcesSelectedIdleStateEmulation": {
    "message": "選択されたアイドル状態のエミュレーションを強制します"
  },
  "panels/sensors/SensorsView.ts | forcesTouchInsteadOfClick": {
    "message": "クリックではなくタップを強制します"
  },
  "panels/sensors/SensorsView.ts | gamma": {
    "message": "γ（ガンマ）"
  },
  "panels/sensors/SensorsView.ts | landscapeLeft": {
    "message": "横向き（左）"
  },
  "panels/sensors/SensorsView.ts | landscapeRight": {
    "message": "横向き（右）"
  },
  "panels/sensors/SensorsView.ts | latitude": {
    "message": "緯度"
  },
  "panels/sensors/SensorsView.ts | locale": {
    "message": "言語 / 地域"
  },
  "panels/sensors/SensorsView.ts | location": {
    "message": "場所"
  },
  "panels/sensors/SensorsView.ts | locationUnavailable": {
    "message": "場所が不明"
  },
  "panels/sensors/SensorsView.ts | longitude": {
    "message": "経度"
  },
  "panels/sensors/SensorsView.ts | manage": {
    "message": "管理"
  },
  "panels/sensors/SensorsView.ts | manageTheListOfLocations": {
    "message": "場所のリストを管理"
  },
  "panels/sensors/SensorsView.ts | noOverride": {
    "message": "オーバーライドなし"
  },
  "panels/sensors/SensorsView.ts | off": {
    "message": "オフ"
  },
  "panels/sensors/SensorsView.ts | orientation": {
    "message": "向き"
  },
  "panels/sensors/SensorsView.ts | other": {
    "message": "その他…"
  },
  "panels/sensors/SensorsView.ts | overrides": {
    "message": "オーバーライド"
  },
  "panels/sensors/SensorsView.ts | portrait": {
    "message": "縦向き"
  },
  "panels/sensors/SensorsView.ts | portraitUpsideDown": {
    "message": "縦向き（上下逆）"
  },
  "panels/sensors/SensorsView.ts | presets": {
    "message": "プリセット"
  },
  "panels/sensors/SensorsView.ts | reset": {
    "message": "リセット"
  },
  "panels/sensors/SensorsView.ts | resetDeviceOrientation": {
    "message": "デバイスの向きをリセット"
  },
  "panels/sensors/SensorsView.ts | shiftdragHorizontallyToRotate": {
    "message": "Y 軸を中心に回転させるには、Shift キーを押しながら横方向にドラッグします"
  },
  "panels/sensors/SensorsView.ts | timezoneId": {
    "message": "タイムゾーン ID"
  },
  "panels/sensors/sensors-meta.ts | accelerometer": {
    "message": "加速度計"
  },
  "panels/sensors/sensors-meta.ts | deviceOrientation": {
    "message": "デバイスの向き"
  },
  "panels/sensors/sensors-meta.ts | devicebased": {
    "message": "デバイスベース"
  },
  "panels/sensors/sensors-meta.ts | emulateIdleDetectorState": {
    "message": "Idle Detector の状態をエミュレート"
  },
  "panels/sensors/sensors-meta.ts | forceEnabled": {
    "message": "強制有効"
  },
  "panels/sensors/sensors-meta.ts | geolocation": {
    "message": "位置情報"
  },
  "panels/sensors/sensors-meta.ts | locale": {
    "message": "言語 / 地域"
  },
  "panels/sensors/sensors-meta.ts | locales": {
    "message": "言語 / 地域"
  },
  "panels/sensors/sensors-meta.ts | locations": {
    "message": "場所"
  },
  "panels/sensors/sensors-meta.ts | noIdleEmulation": {
    "message": "アイドル状態のエミュレーションなし"
  },
  "panels/sensors/sensors-meta.ts | sensors": {
    "message": "センサー"
  },
  "panels/sensors/sensors-meta.ts | showLocations": {
    "message": "場所を表示"
  },
  "panels/sensors/sensors-meta.ts | showSensors": {
    "message": "センサーを表示"
  },
  "panels/sensors/sensors-meta.ts | timezones": {
    "message": "タイムゾーン"
  },
  "panels/sensors/sensors-meta.ts | touch": {
    "message": "タップ"
  },
  "panels/sensors/sensors-meta.ts | userActiveScreenLocked": {
    "message": "ユーザー アクティブ状態、画面ロック中"
  },
  "panels/sensors/sensors-meta.ts | userActiveScreenUnlocked": {
    "message": "ユーザー アクティブ状態、画面ロック解除"
  },
  "panels/sensors/sensors-meta.ts | userIdleScreenLocked": {
    "message": "ユーザー アイドル状態、画面ロック中"
  },
  "panels/sensors/sensors-meta.ts | userIdleScreenUnlocked": {
    "message": "ユーザー アイドル状態、画面ロック解除"
  },
  "panels/settings/FrameworkIgnoreListSettingsTab.ts | addFilenamePattern": {
    "message": "ファイル名パターンを追加"
  },
  "panels/settings/FrameworkIgnoreListSettingsTab.ts | addPattern": {
    "message": "パターンを追加..."
  },
  "panels/settings/FrameworkIgnoreListSettingsTab.ts | automaticallyIgnoreListKnownThirdPartyScripts": {
    "message": "ソースマップの既知のサードパーティ スクリプト"
  },
  "panels/settings/FrameworkIgnoreListSettingsTab.ts | customExclusionRules": {
    "message": "カスタムの除外ルール:"
  },
  "panels/settings/FrameworkIgnoreListSettingsTab.ts | debuggerWillSkipThroughThe": {
    "message": "デバッガは、スクリプトをスキップし、スクリプトがスローした例外で停止しません。"
  },
  "panels/settings/FrameworkIgnoreListSettingsTab.ts | enableIgnoreListing": {
    "message": "無視リストを有効にする"
  },
  "panels/settings/FrameworkIgnoreListSettingsTab.ts | enableIgnoreListingTooltip": {
    "message": "無視リストをすべて無効にするにはチェックボックスをオフにします"
  },
  "panels/settings/FrameworkIgnoreListSettingsTab.ts | frameworkIgnoreList": {
    "message": "フレームワーク無視リスト"
  },
  "panels/settings/FrameworkIgnoreListSettingsTab.ts | generalExclusionRules": {
    "message": "全般の除外ルール:"
  },
  "panels/settings/FrameworkIgnoreListSettingsTab.ts | ignoreListContentScripts": {
    "message": "拡張機能によって挿入されたコンテンツ スクリプト"
  },
  "panels/settings/FrameworkIgnoreListSettingsTab.ts | ignoreScriptsWhoseNamesMatchS": {
    "message": "名前が「{PH1}」と一致するスクリプトを無視"
  },
  "panels/settings/FrameworkIgnoreListSettingsTab.ts | learnMore": {
    "message": "詳細"
  },
  "panels/settings/FrameworkIgnoreListSettingsTab.ts | pattern": {
    "message": "パターンを追加"
  },
  "panels/settings/FrameworkIgnoreListSettingsTab.ts | patternAlreadyExists": {
    "message": "パターンがすでに存在しています"
  },
  "panels/settings/FrameworkIgnoreListSettingsTab.ts | patternCannotBeEmpty": {
    "message": "パターンは空白にできません"
  },
  "panels/settings/FrameworkIgnoreListSettingsTab.ts | patternMustBeAValidRegular": {
    "message": "パターンは有効な正規表現でなければなりません"
  },
  "panels/settings/KeybindsSettingsTab.ts | FullListOfDevtoolsKeyboard": {
    "message": "DevTools のキーボード ショートカットとジェスチャーの全リスト"
  },
  "panels/settings/KeybindsSettingsTab.ts | ResetShortcutsForAction": {
    "message": "アクションのショートカットをリセット"
  },
  "panels/settings/KeybindsSettingsTab.ts | RestoreDefaultShortcuts": {
    "message": "デフォルトのショートカットに戻す"
  },
  "panels/settings/KeybindsSettingsTab.ts | addAShortcut": {
    "message": "ショートカットを追加する"
  },
  "panels/settings/KeybindsSettingsTab.ts | confirmChanges": {
    "message": "変更を確認"
  },
  "panels/settings/KeybindsSettingsTab.ts | discardChanges": {
    "message": "変更を破棄"
  },
  "panels/settings/KeybindsSettingsTab.ts | editShortcut": {
    "message": "ショートカットを編集"
  },
  "panels/settings/KeybindsSettingsTab.ts | keyboardShortcutsList": {
    "message": "キーボード ショートカット リスト"
  },
  "panels/settings/KeybindsSettingsTab.ts | matchShortcutsFromPreset": {
    "message": "プリセットのショートカットを一致させる"
  },
  "panels/settings/KeybindsSettingsTab.ts | noShortcutForAction": {
    "message": "アクションのショートカットはありません"
  },
  "panels/settings/KeybindsSettingsTab.ts | removeShortcut": {
    "message": "ショートカットを削除"
  },
  "panels/settings/KeybindsSettingsTab.ts | shortcutModified": {
    "message": "変更済ショートカット"
  },
  "panels/settings/KeybindsSettingsTab.ts | shortcuts": {
    "message": "ショートカット"
  },
  "panels/settings/KeybindsSettingsTab.ts | shortcutsCannotContainOnly": {
    "message": "修飾キーだけでショートカットを指定することはできません。"
  },
  "panels/settings/KeybindsSettingsTab.ts | thisShortcutIsInUseByS": {
    "message": "このショートカットは {PH1} によって使用されています: {PH2}。"
  },
  "panels/settings/SettingsScreen.ts | experiments": {
    "message": "試験運用版"
  },
  "panels/settings/SettingsScreen.ts | filterExperimentsLabel": {
    "message": "フィルタ"
  },
  "panels/settings/SettingsScreen.ts | learnMore": {
    "message": "詳細"
  },
  "panels/settings/SettingsScreen.ts | noResults": {
    "message": "フィルタに一致するテストはありませんでした"
  },
  "panels/settings/SettingsScreen.ts | oneOrMoreSettingsHaveChanged": {
    "message": "1 つ以上の設定が変更されました。変更を有効にするには再読み込みが必要です。"
  },
  "panels/settings/SettingsScreen.ts | preferences": {
    "message": "設定"
  },
  "panels/settings/SettingsScreen.ts | restoreDefaultsAndReload": {
    "message": "デフォルトを復元して再読み込み"
  },
  "panels/settings/SettingsScreen.ts | sendFeedback": {
    "message": "フィードバックを送信"
  },
  "panels/settings/SettingsScreen.ts | settings": {
    "message": "設定"
  },
  "panels/settings/SettingsScreen.ts | shortcuts": {
    "message": "ショートカット"
  },
  "panels/settings/SettingsScreen.ts | theseExperimentsAreParticularly": {
    "message": "これらの試験運用版は非常に不安定です。自己責任で有効にしてください。"
  },
  "panels/settings/SettingsScreen.ts | theseExperimentsCouldBeUnstable": {
    "message": "これらの試験運用版は不安定で信頼性が低く、DevTools を再起動する必要が生じることがあります。"
  },
  "panels/settings/SettingsScreen.ts | warning": {
    "message": "警告:"
  },
  "panels/settings/components/SyncSection.ts | preferencesSyncDisabled": {
    "message": "この設定をオンにするには、まず Chrome で設定の同期を有効にする必要があります。"
  },
  "panels/settings/components/SyncSection.ts | settings": {
    "message": "設定に移動"
  },
  "panels/settings/components/SyncSection.ts | signedIn": {
    "message": "Chrome にログイン済みのアカウント:"
  },
  "panels/settings/components/SyncSection.ts | syncDisabled": {
    "message": "この設定をオンにするには、Chrome 同期を有効にする必要があります。"
  },
  "panels/settings/emulation/DevicesSettingsTab.ts | addCustomDevice": {
    "message": "カスタム デバイスを追加..."
  },
  "panels/settings/emulation/DevicesSettingsTab.ts | device": {
    "message": "デバイス"
  },
  "panels/settings/emulation/DevicesSettingsTab.ts | deviceAddedOrUpdated": {
    "message": "デバイス {PH1} を追加 / 更新しました。"
  },
  "panels/settings/emulation/DevicesSettingsTab.ts | deviceName": {
    "message": "デバイス名"
  },
  "panels/settings/emulation/DevicesSettingsTab.ts | deviceNameCannotBeEmpty": {
    "message": "デバイス名を入力してください。"
  },
  "panels/settings/emulation/DevicesSettingsTab.ts | deviceNameMustBeLessThanS": {
    "message": "デバイス名は {PH1} 文字以上で入力してください。"
  },
  "panels/settings/emulation/DevicesSettingsTab.ts | devicePixelRatio": {
    "message": "デバイスのピクセル比"
  },
  "panels/settings/emulation/DevicesSettingsTab.ts | emulatedDevices": {
    "message": "エミュレート対象のデバイス"
  },
  "panels/settings/emulation/DevicesSettingsTab.ts | height": {
    "message": "高さ"
  },
  "panels/settings/emulation/DevicesSettingsTab.ts | userAgentString": {
    "message": "ユーザー エージェント文字列"
  },
  "panels/settings/emulation/DevicesSettingsTab.ts | userAgentType": {
    "message": "ユーザー エージェント タイプ"
  },
  "panels/settings/emulation/DevicesSettingsTab.ts | width": {
    "message": "幅"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | addBrand": {
    "message": "ブランドを追加"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | addedBrand": {
    "message": "ブランド行を追加しました"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | architecture": {
    "message": "アーキテクチャ（Sec-CH-UA-Arch）"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | architecturePlaceholder": {
    "message": "アーキテクチャ（例: x86）"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | brandFullVersionListDelete": {
    "message": "フルバージョン リストからブランドを削除"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | brandName": {
    "message": "ブランド"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | brandNameAriaLabel": {
    "message": "ブランド {PH1}"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | brandProperties": {
    "message": "ユーザー エージェントのプロパティ"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | brandUserAgentDelete": {
    "message": "ユーザー エージェント セクションからブランドを削除"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | brandVersionAriaLabel": {
    "message": "バージョン {PH1}"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | brandVersionPlaceholder": {
    "message": "バージョン（例: 87.0.4280.88）"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | deletedBrand": {
    "message": "ブランド行を削除しました"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | deviceModel": {
    "message": "デバイスモデル（Sec-CH-UA-Model）"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | deviceProperties": {
    "message": "デバイスのプロパティ"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | fullBrowserVersion": {
    "message": "ブラウザのフルバージョン（Sec-CH-UA-Full-Browser-Version）"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | fullBrowserVersionPlaceholder": {
    "message": "ブラウザのフルバージョン（例: 87.0.4280.88）"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | fullVersionList": {
    "message": "フルバージョンのリスト（Sec-CH-UA-Full-Version-List）"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | learnMore": {
    "message": "詳細"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | mobileCheckboxLabel": {
    "message": "モバイル"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | notRepresentable": {
    "message": "構造化ヘッダー文字列として表現できません。"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | platformLabel": {
    "message": "プラットフォーム（Sec-CH-UA-Platform / Sec-CH-UA-Platform-Version）"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | platformPlaceholder": {
    "message": "プラットフォーム（例: Android）"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | platformProperties": {
    "message": "プラットフォームのプロパティ"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | platformVersion": {
    "message": "プラットフォームのバージョン"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | significantBrandVersionPlaceholder": {
    "message": "重要なバージョン（例: 87）"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | title": {
    "message": "ユーザー エージェント クライアントのヒント"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | update": {
    "message": "更新"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | userAgentClientHintsInfo": {
    "message": "ユーザー エージェント クライアント ヒントはユーザー エージェント文字列に代わるもので、プライバシーを重視した、より構造化された方法でブラウザとデバイスを識別します。"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | useragent": {
    "message": "ユーザー エージェント（Sec-CH-UA）"
  },
  "panels/settings/emulation/emulation-meta.ts | devices": {
    "message": "デバイス"
  },
  "panels/settings/emulation/emulation-meta.ts | showDevices": {
    "message": "デバイスを表示"
  },
  "panels/settings/settings-meta.ts | documentation": {
    "message": "ドキュメント"
  },
  "panels/settings/settings-meta.ts | experiments": {
    "message": "試験運用版"
  },
  "panels/settings/settings-meta.ts | ignoreList": {
    "message": "無視リスト"
  },
  "panels/settings/settings-meta.ts | preferences": {
    "message": "設定"
  },
  "panels/settings/settings-meta.ts | settings": {
    "message": "設定"
  },
  "panels/settings/settings-meta.ts | shortcuts": {
    "message": "ショートカット"
  },
  "panels/settings/settings-meta.ts | showExperiments": {
    "message": "テストを表示"
  },
  "panels/settings/settings-meta.ts | showIgnoreList": {
    "message": "無視リストを表示"
  },
  "panels/settings/settings-meta.ts | showPreferences": {
    "message": "設定を表示"
  },
  "panels/settings/settings-meta.ts | showShortcuts": {
    "message": "ショートカットを表示"
  },
  "panels/snippets/ScriptSnippetFileSystem.ts | linkedTo": {
    "message": "{PH1} にリンク"
  },
  "panels/snippets/ScriptSnippetFileSystem.ts | scriptSnippet": {
    "message": "スクリプト スニペット #{PH1}"
  },
  "panels/snippets/SnippetsQuickOpen.ts | noSnippetsFound": {
    "message": "スニペットが見つかりませんでした。"
  },
  "panels/snippets/SnippetsQuickOpen.ts | run": {
    "message": "実行"
  },
  "panels/snippets/SnippetsQuickOpen.ts | snippet": {
    "message": "スニペット"
  },
  "panels/sources/AddSourceMapURLDialog.ts | add": {
    "message": "追加"
  },
  "panels/sources/AddSourceMapURLDialog.ts | debugInfoUrl": {
    "message": "DWARF シンボルの URL: "
  },
  "panels/sources/AddSourceMapURLDialog.ts | sourceMapUrl": {
    "message": "ソースマップの URL: "
  },
  "panels/sources/BreakpointEditDialog.ts | breakpoint": {
    "message": "ブレークポイント"
  },
  "panels/sources/BreakpointEditDialog.ts | breakpointType": {
    "message": "ブレークポイントの種類"
  },
  "panels/sources/BreakpointEditDialog.ts | closeDialog": {
    "message": "編集ダイアログを閉じて変更を保存"
  },
  "panels/sources/BreakpointEditDialog.ts | conditionalBreakpoint": {
    "message": "条件付きブレークポイント"
  },
  "panels/sources/BreakpointEditDialog.ts | expressionToCheckBeforePausingEg": {
    "message": "一時停止前に確認する式（例: x > 5）"
  },
  "panels/sources/BreakpointEditDialog.ts | learnMoreOnBreakpointTypes": {
    "message": "詳細: ブレークポイントのタイプ"
  },
  "panels/sources/BreakpointEditDialog.ts | logAMessageToConsoleDoNotBreak": {
    "message": "コンソールにメッセージを記録（改行なし）"
  },
  "panels/sources/BreakpointEditDialog.ts | logMessageEgXIsX": {
    "message": "ログメッセージ（例: 'x is', x）"
  },
  "panels/sources/BreakpointEditDialog.ts | logpoint": {
    "message": "ログポイント"
  },
  "panels/sources/BreakpointEditDialog.ts | pauseOnlyWhenTheConditionIsTrue": {
    "message": "条件が true の場合のみ一時停止"
  },
  "panels/sources/CSSPlugin.ts | addSourceMap": {
    "message": "ソースマップを追加…"
  },
  "panels/sources/CSSPlugin.ts | openColorPicker": {
    "message": "カラー選択ツールを開く"
  },
  "panels/sources/CSSPlugin.ts | openCubicBezierEditor": {
    "message": "3 次ベジェ エディタを開きます。"
  },
  "panels/sources/CallStackSidebarPane.ts | callFrameWarnings": {
    "message": "いくつかの呼び出しフレームに警告があります"
  },
  "panels/sources/CallStackSidebarPane.ts | callStack": {
    "message": "コールスタック"
  },
  "panels/sources/CallStackSidebarPane.ts | copyStackTrace": {
    "message": "スタック トレースをコピー"
  },
  "panels/sources/CallStackSidebarPane.ts | debugFileNotFound": {
    "message": "デバッグ ファイル「{PH1}」を読み込めませんでした。"
  },
  "panels/sources/CallStackSidebarPane.ts | notPaused": {
    "message": "一時停止されていません"
  },
  "panels/sources/CallStackSidebarPane.ts | onIgnoreList": {
    "message": "無視リストが表示されています"
  },
  "panels/sources/CallStackSidebarPane.ts | restartFrame": {
    "message": "フレームを再起動"
  },
  "panels/sources/CallStackSidebarPane.ts | showIgnorelistedFrames": {
    "message": "無視リストのフレームを表示"
  },
  "panels/sources/CallStackSidebarPane.ts | showMore": {
    "message": "もっと見る"
  },
  "panels/sources/CategorizedBreakpointL10n.ts | animationFrameFired": {
    "message": "アニメーション フレームの呼び出し"
  },
  "panels/sources/CategorizedBreakpointL10n.ts | beforeBidderWorkletBiddingStart": {
    "message": "ビッダーの入札フェーズの開始"
  },
  "panels/sources/CategorizedBreakpointL10n.ts | beforeBidderWorkletReportingStart": {
    "message": "ビッダーのレポート フェーズの開始"
  },
  "panels/sources/CategorizedBreakpointL10n.ts | beforeSellerWorkletReportingStart": {
    "message": "販売者のレポート フェーズの開始"
  },
  "panels/sources/CategorizedBreakpointL10n.ts | beforeSellerWorkletScoringStart": {
    "message": "販売者のスコアフェーズの開始"
  },
  "panels/sources/CategorizedBreakpointL10n.ts | cancelAnimationFrame": {
    "message": "アニメーション フレームをキャンセル"
  },
  "panels/sources/CategorizedBreakpointL10n.ts | closeAudiocontext": {
    "message": "AudioContext を閉じる"
  },
  "panels/sources/CategorizedBreakpointL10n.ts | createAudiocontext": {
    "message": "AudioContext を作成"
  },
  "panels/sources/CategorizedBreakpointL10n.ts | createCanvasContext": {
    "message": "キャンバスのコンテキストを作成"
  },
  "panels/sources/CategorizedBreakpointL10n.ts | policyViolations": {
    "message": "ポリシー違反"
  },
  "panels/sources/CategorizedBreakpointL10n.ts | requestAnimationFrame": {
    "message": "アニメーション フレームをリクエスト"
  },
  "panels/sources/CategorizedBreakpointL10n.ts | resumeAudiocontext": {
    "message": "AudioContext を再開"
  },
  "panels/sources/CategorizedBreakpointL10n.ts | scriptBlockedByContentSecurity": {
    "message": "コンテンツ セキュリティ ポリシーによってブロックされたスクリプト"
  },
  "panels/sources/CategorizedBreakpointL10n.ts | scriptFirstStatement": {
    "message": "スクリプトの最初のステートメント"
  },
  "panels/sources/CategorizedBreakpointL10n.ts | setInnerhtml": {
    "message": "innerHTML を設定"
  },
  "panels/sources/CategorizedBreakpointL10n.ts | setTimeoutOrIntervalFired": {
    "message": "{PH1} 発生"
  },
  "panels/sources/CategorizedBreakpointL10n.ts | sinkViolations": {
    "message": "シンク違反"
  },
  "panels/sources/CategorizedBreakpointL10n.ts | suspendAudiocontext": {
    "message": "AudioContext を一時停止"
  },
  "panels/sources/CategorizedBreakpointL10n.ts | webglErrorFired": {
    "message": "WebGL エラー発生"
  },
  "panels/sources/CategorizedBreakpointL10n.ts | webglWarningFired": {
    "message": "WebGL 警告の呼び出し"
  },
  "panels/sources/CoveragePlugin.ts | clickToShowCoveragePanel": {
    "message": "クリックすると [カバレッジ] パネルが表示されます"
  },
  "panels/sources/CoveragePlugin.ts | coverageNa": {
    "message": "カバレッジ: N/A"
  },
  "panels/sources/CoveragePlugin.ts | coverageS": {
    "message": "カバレッジ: {PH1}"
  },
  "panels/sources/CoveragePlugin.ts | showDetails": {
    "message": "詳細を表示"
  },
  "panels/sources/DebuggerPausedMessage.ts | attributeModifications": {
    "message": "属性の変更"
  },
  "panels/sources/DebuggerPausedMessage.ts | childSAdded": {
    "message": "子{PH1}の追加"
  },
  "panels/sources/DebuggerPausedMessage.ts | debuggerPaused": {
    "message": "デバッガが一時停止しました"
  },
  "panels/sources/DebuggerPausedMessage.ts | descendantSAdded": {
    "message": "子孫 {PH1} の追加"
  },
  "panels/sources/DebuggerPausedMessage.ts | descendantSRemoved": {
    "message": "子孫の{PH1}が削除された"
  },
  "panels/sources/DebuggerPausedMessage.ts | nodeRemoval": {
    "message": "ノード削除"
  },
  "panels/sources/DebuggerPausedMessage.ts | pausedBeforePotentialOutofmemory": {
    "message": "メモリ不足クラッシュの発生前に一時停止しました"
  },
  "panels/sources/DebuggerPausedMessage.ts | pausedOnAssertion": {
    "message": "アサーションで一時停止しました"
  },
  "panels/sources/DebuggerPausedMessage.ts | pausedOnBreakpoint": {
    "message": "ブレークポイントで一時停止しました"
  },
  "panels/sources/DebuggerPausedMessage.ts | pausedOnCspViolation": {
    "message": "CSP 違反で一時停止しました"
  },
  "panels/sources/DebuggerPausedMessage.ts | pausedOnDebuggedFunction": {
    "message": "デバッグされた関数で一時停止しました"
  },
  "panels/sources/DebuggerPausedMessage.ts | pausedOnEventListener": {
    "message": "イベント リスナーで一時停止しました"
  },
  "panels/sources/DebuggerPausedMessage.ts | pausedOnException": {
    "message": "例外で一時停止しました"
  },
  "panels/sources/DebuggerPausedMessage.ts | pausedOnPromiseRejection": {
    "message": "promise の拒否で一時停止しました"
  },
  "panels/sources/DebuggerPausedMessage.ts | pausedOnS": {
    "message": "{PH1}で一時停止しました"
  },
  "panels/sources/DebuggerPausedMessage.ts | pausedOnXhrOrFetch": {
    "message": "XHR またはフェッチで一時停止しました"
  },
  "panels/sources/DebuggerPausedMessage.ts | scriptBlockedDueToContent": {
    "message": "コンテンツ セキュリティ ポリシーのディレクティブのためにブロックされたスクリプト: {PH1}"
  },
  "panels/sources/DebuggerPausedMessage.ts | subtreeModifications": {
    "message": "サブツリーの変更"
  },
  "panels/sources/DebuggerPausedMessage.ts | trustedTypePolicyViolation": {
    "message": "Trusted Type ポリシー違反"
  },
  "panels/sources/DebuggerPausedMessage.ts | trustedTypeSinkViolation": {
    "message": "Trusted Typeのシンク違反"
  },
  "panels/sources/DebuggerPausedMessage.ts | webglErrorFiredS": {
    "message": "WebGL エラーが発生しました（{PH1}）"
  },
  "panels/sources/DebuggerPlugin.ts | addBreakpoint": {
    "message": "ブレークポイントを追加"
  },
  "panels/sources/DebuggerPlugin.ts | addConditionalBreakpoint": {
    "message": "条件付きブレークポイントを追加…"
  },
  "panels/sources/DebuggerPlugin.ts | addLogpoint": {
    "message": "ログポイントを追加…"
  },
  "panels/sources/DebuggerPlugin.ts | addSourceMap": {
    "message": "ソースマップを追加…"
  },
  "panels/sources/DebuggerPlugin.ts | addWasmDebugInfo": {
    "message": "DWARF デバッグ情報を追加…"
  },
  "panels/sources/DebuggerPlugin.ts | associatedFilesAreAvailable": {
    "message": "関連付けられたファイルは、ファイルツリーまたは {PH1} を介して入手できます。"
  },
  "panels/sources/DebuggerPlugin.ts | associatedFilesShouldBeAdded": {
    "message": "関連付けられたファイルをファイルツリーに追加してください。これらの解決済みソース ファイルを通常の JavaScript ファイルとしてデバッグできます。"
  },
  "panels/sources/DebuggerPlugin.ts | configure": {
    "message": "設定"
  },
  "panels/sources/DebuggerPlugin.ts | debugFileNotFound": {
    "message": "デバッグ ファイル「{PH1}」を読み込めませんでした。"
  },
  "panels/sources/DebuggerPlugin.ts | debugInfoNotFound": {
    "message": "{PH1} のデバッグ情報を読み込めませんでした。"
  },
  "panels/sources/DebuggerPlugin.ts | debuggingPowerReduced": {
    "message": "DevTools で作成元のソースを表示することはできませんが、実装元のコードをデバッグすることはできます。"
  },
  "panels/sources/DebuggerPlugin.ts | disableBreakpoint": {
    "message": "{n,plural, =1{ブレークポイントを無効にする}other{行内のブレークポイントをすべて無効にする}}"
  },
  "panels/sources/DebuggerPlugin.ts | editBreakpoint": {
    "message": "ブレークポイントを編集…"
  },
  "panels/sources/DebuggerPlugin.ts | enableBreakpoint": {
    "message": "{n,plural, =1{ブレークポイントを有効にする}other{行内のブレークポイントをすべて有効にする}}"
  },
  "panels/sources/DebuggerPlugin.ts | errorLoading": {
    "message": "URL {PH1} の読み込み中にエラーが発生しました: {PH2}"
  },
  "panels/sources/DebuggerPlugin.ts | ignoreContentScripts": {
    "message": "拡張機能スクリプトを無視する"
  },
  "panels/sources/DebuggerPlugin.ts | ignoreScript": {
    "message": "このファイルを無視"
  },
  "panels/sources/DebuggerPlugin.ts | neverPauseHere": {
    "message": "ここで一時停止しない"
  },
  "panels/sources/DebuggerPlugin.ts | reloadForSourceMap": {
    "message": "もう一度有効にするには、ファイルが無視リストに含まれていないことを確認してから再読み込みしてください。"
  },
  "panels/sources/DebuggerPlugin.ts | removeBreakpoint": {
    "message": "{n,plural, =1{ブレークポイントを削除}other{行内のブレークポイントをすべて削除}}"
  },
  "panels/sources/DebuggerPlugin.ts | removeFromIgnoreList": {
    "message": "無視リストから削除"
  },
  "panels/sources/DebuggerPlugin.ts | sourceMapFailed": {
    "message": "ソースマップを読み込めませんでした。"
  },
  "panels/sources/DebuggerPlugin.ts | sourceMapLoaded": {
    "message": "ソースマップを読み込みました。"
  },
  "panels/sources/DebuggerPlugin.ts | sourceMapSkipped": {
    "message": "このファイルのソースマップはスキップされます。"
  },
  "panels/sources/DebuggerPlugin.ts | theDebuggerWillSkipStepping": {
    "message": "デバッガは、このスクリプトのステップ実行をスキップし、例外で停止しません。"
  },
  "panels/sources/DebuggerPlugin.ts | thisScriptIsOnTheDebuggersIgnore": {
    "message": "このスクリプトはデバッガの無視リストにあります"
  },
  "panels/sources/FilteredUISourceCodeListProvider.ts | noFilesFound": {
    "message": "ファイルが見つかりませんでした"
  },
  "panels/sources/FilteredUISourceCodeListProvider.ts | sIgnoreListed": {
    "message": "{PH1}（無視リストに登録済み）"
  },
  "panels/sources/GoToLineQuickOpen.ts | currentLineSTypeALineNumber": {
    "message": "現在の行: {PH1}。移動先の行番号を 1～{PH2} の数字で入力してください。"
  },
  "panels/sources/GoToLineQuickOpen.ts | currentPositionXsTypeAnOffset": {
    "message": "現在の位置: 0x{PH1}。移動先のオフセットを 0x{PH2}～0x{PH3} で入力してください。"
  },
  "panels/sources/GoToLineQuickOpen.ts | goToLineS": {
    "message": "行 {PH1} に移動"
  },
  "panels/sources/GoToLineQuickOpen.ts | goToLineSAndColumnS": {
    "message": "行 {PH1}、列 {PH2} に移動します。"
  },
  "panels/sources/GoToLineQuickOpen.ts | goToOffsetXs": {
    "message": "オフセット 0x{PH1} に移動します。"
  },
  "panels/sources/GoToLineQuickOpen.ts | noFileSelected": {
    "message": "ファイルが選択されていません。"
  },
  "panels/sources/GoToLineQuickOpen.ts | noResultsFound": {
    "message": "該当する結果が見つかりませんでした"
  },
  "panels/sources/GoToLineQuickOpen.ts | typeANumberToGoToThatLine": {
    "message": "行番号を入力すると、その行に移動します"
  },
  "panels/sources/InplaceFormatterEditorAction.ts | format": {
    "message": "形式です"
  },
  "panels/sources/InplaceFormatterEditorAction.ts | formatS": {
    "message": "{PH1} の形式を設定"
  },
  "panels/sources/NavigatorView.ts | actionCannotBeUndone": {
    "message": "この操作は元に戻せません。"
  },
  "panels/sources/NavigatorView.ts | areYouSureYouWantToDeleteFolder": {
    "message": "このフォルダとコンテンツを削除してもよろしいですか？"
  },
  "panels/sources/NavigatorView.ts | areYouSureYouWantToDeleteThis": {
    "message": "このファイルを削除してもよろしいですか？"
  },
  "panels/sources/NavigatorView.ts | areYouSureYouWantToExcludeThis": {
    "message": "このフォルダを除外してもよろしいですか？"
  },
  "panels/sources/NavigatorView.ts | areYouSureYouWantToRemoveThis": {
    "message": "「{PH1}」をワークスペースから削除しますか？"
  },
  "panels/sources/NavigatorView.ts | authored": {
    "message": "作成元"
  },
  "panels/sources/NavigatorView.ts | authoredTooltip": {
    "message": "元のソースを含む"
  },
  "panels/sources/NavigatorView.ts | delete": {
    "message": "削除"
  },
  "panels/sources/NavigatorView.ts | deployed": {
    "message": "実装元"
  },
  "panels/sources/NavigatorView.ts | deployedTooltip": {
    "message": "ブラウザが参照する最終的なソースを含む"
  },
  "panels/sources/NavigatorView.ts | excludeFolder": {
    "message": "ワークスペースから除外"
  },
  "panels/sources/NavigatorView.ts | makeACopy": {
    "message": "コピーを作成…"
  },
  "panels/sources/NavigatorView.ts | newFile": {
    "message": "新しいファイル"
  },
  "panels/sources/NavigatorView.ts | noDomain": {
    "message": "（ドメインなし）"
  },
  "panels/sources/NavigatorView.ts | openFolder": {
    "message": "フォルダを開く"
  },
  "panels/sources/NavigatorView.ts | remove": {
    "message": "削除"
  },
  "panels/sources/NavigatorView.ts | removeFolderFromWorkspace": {
    "message": "ワークスペースから削除"
  },
  "panels/sources/NavigatorView.ts | rename": {
    "message": "名前を変更…"
  },
  "panels/sources/NavigatorView.ts | sFromSourceMap": {
    "message": "{PH1}（ソースマップから）"
  },
  "panels/sources/NavigatorView.ts | sIgnoreListed": {
    "message": "{PH1}（無視リストに登録済み）"
  },
  "panels/sources/NavigatorView.ts | searchInAllFiles": {
    "message": "すべてのファイル内で検索"
  },
  "panels/sources/NavigatorView.ts | searchInFolder": {
    "message": "フォルダ内で検索"
  },
  "panels/sources/NavigatorView.ts | workspaceStopSyncing": {
    "message": "これにより、DevTools の変更がソースと同期されなくなります。"
  },
  "panels/sources/OutlineQuickOpen.ts | noFileSelected": {
    "message": "ファイルが選択されていません。"
  },
  "panels/sources/OutlineQuickOpen.ts | noResultsFound": {
    "message": "該当する結果が見つかりませんでした"
  },
  "panels/sources/OutlineQuickOpen.ts | openAJavascriptOrCssFileToSee": {
    "message": "記号を確認するには、JavaScript ファイルまたは CSS ファイルを開いてください"
  },
  "panels/sources/ProfilePlugin.ts | kb": {
    "message": "KB"
  },
  "panels/sources/ProfilePlugin.ts | mb": {
    "message": "MB"
  },
  "panels/sources/ProfilePlugin.ts | ms": {
    "message": "ms"
  },
  "panels/sources/ResourceOriginPlugin.ts | fromS": {
    "message": "（{PH1} から）"
  },
  "panels/sources/ResourceOriginPlugin.ts | sourceMappedFromS": {
    "message": "（{PH1} からマップされたソース）"
  },
  "panels/sources/ScopeChainSidebarPane.ts | closure": {
    "message": "クロージャ"
  },
  "panels/sources/ScopeChainSidebarPane.ts | closureS": {
    "message": "クロージャ（{PH1}）"
  },
  "panels/sources/ScopeChainSidebarPane.ts | exception": {
    "message": "例外"
  },
  "panels/sources/ScopeChainSidebarPane.ts | loading": {
    "message": "読み込んでいます..."
  },
  "panels/sources/ScopeChainSidebarPane.ts | noVariables": {
    "message": "変数なし"
  },
  "panels/sources/ScopeChainSidebarPane.ts | notPaused": {
    "message": "一時停止されていません"
  },
  "panels/sources/ScopeChainSidebarPane.ts | returnValue": {
    "message": "戻り値"
  },
  "panels/sources/SnippetsPlugin.ts | ctrlenter": {
    "message": "Ctrl+Enter"
  },
  "panels/sources/SnippetsPlugin.ts | enter": {
    "message": "⌘+Enter"
  },
  "panels/sources/SourcesNavigator.ts | clearConfiguration": {
    "message": "設定をクリアします"
  },
  "panels/sources/SourcesNavigator.ts | createNewSnippet": {
    "message": "新しいスニペットを作成"
  },
  "panels/sources/SourcesNavigator.ts | explainContentScripts": {
    "message": "拡張機能から配信されたコンテンツ スクリプトが表示されます"
  },
  "panels/sources/SourcesNavigator.ts | explainLocalOverrides": {
    "message": "ネットワーク リクエストとウェブ コンテンツをローカルでオーバーライドして、リモート リソースをモックします"
  },
  "panels/sources/SourcesNavigator.ts | explainSnippets": {
    "message": "頻繁に実行する JavaScript コードを保存して、いつでも再実行できるようにします"
  },
  "panels/sources/SourcesNavigator.ts | explainWorkspace": {
    "message": "開発しているソースに編集内容を直接同期するようワークスペースを設定します"
  },
  "panels/sources/SourcesNavigator.ts | learnMore": {
    "message": "詳細"
  },
  "panels/sources/SourcesNavigator.ts | newSnippet": {
    "message": "新しいスニペット"
  },
  "panels/sources/SourcesNavigator.ts | remove": {
    "message": "削除"
  },
  "panels/sources/SourcesNavigator.ts | rename": {
    "message": "名前を変更…"
  },
  "panels/sources/SourcesNavigator.ts | run": {
    "message": "実行"
  },
  "panels/sources/SourcesNavigator.ts | saveAs": {
    "message": "名前を付けて保存..."
  },
  "panels/sources/SourcesNavigator.ts | selectFolderForOverrides": {
    "message": "オーバーライド用のフォルダを選択"
  },
  "panels/sources/SourcesPanel.ts | continueToHere": {
    "message": "ここに移動"
  },
  "panels/sources/SourcesPanel.ts | copyS": {
    "message": "{PH1} をコピー"
  },
  "panels/sources/SourcesPanel.ts | copyStringAsJSLiteral": {
    "message": "JavaScript リテラルとして文字列をコピー"
  },
  "panels/sources/SourcesPanel.ts | copyStringAsJSONLiteral": {
    "message": "JSON リテラルとして文字列をコピー"
  },
  "panels/sources/SourcesPanel.ts | copyStringContents": {
    "message": "文字列をそのままコピー"
  },
  "panels/sources/SourcesPanel.ts | debuggerHidden": {
    "message": "デバッガのサイドバーが非表示になっています"
  },
  "panels/sources/SourcesPanel.ts | debuggerShown": {
    "message": "デバッガのサイドバーが表示されています"
  },
  "panels/sources/SourcesPanel.ts | dropWorkspaceFolderHere": {
    "message": "ここにワークスペース フォルダをドロップ"
  },
  "panels/sources/SourcesPanel.ts | groupByAuthored": {
    "message": "作成元 / 実装元ごとにグループ化"
  },
  "panels/sources/SourcesPanel.ts | groupByFolder": {
    "message": "フォルダ別に分類"
  },
  "panels/sources/SourcesPanel.ts | hideDebugger": {
    "message": "デバッガを非表示"
  },
  "panels/sources/SourcesPanel.ts | hideIgnoreListed": {
    "message": "無視リストのソースを非表示にする"
  },
  "panels/sources/SourcesPanel.ts | hideNavigator": {
    "message": "ナビゲータを非表示"
  },
  "panels/sources/SourcesPanel.ts | moreOptions": {
    "message": "その他のオプション"
  },
  "panels/sources/SourcesPanel.ts | navigatorHidden": {
    "message": "ナビゲーターのサイドバーが非表示になっています"
  },
  "panels/sources/SourcesPanel.ts | navigatorShown": {
    "message": "ナビゲーターのサイドバーが表示されています"
  },
  "panels/sources/SourcesPanel.ts | openInSourcesPanel": {
    "message": "[ソース] パネルで開く"
  },
  "panels/sources/SourcesPanel.ts | pauseOnCaughtExceptions": {
    "message": "キャッチされた例外で一時停止"
  },
  "panels/sources/SourcesPanel.ts | resumeWithAllPausesBlockedForMs": {
    "message": "すべての一時停止を 500 ミリ秒間ブロックした状態で再開します"
  },
  "panels/sources/SourcesPanel.ts | revealInSidebar": {
    "message": "ナビゲータのサイドバーに表示"
  },
  "panels/sources/SourcesPanel.ts | showDebugger": {
    "message": "デバッガを表示"
  },
  "panels/sources/SourcesPanel.ts | showFunctionDefinition": {
    "message": "関数の定義を表示"
  },
  "panels/sources/SourcesPanel.ts | showNavigator": {
    "message": "ナビゲータを表示"
  },
  "panels/sources/SourcesPanel.ts | storeAsGlobalVariable": {
    "message": "グローバル変数として保存"
  },
  "panels/sources/SourcesPanel.ts | terminateCurrentJavascriptCall": {
    "message": "現在の JavaScript 呼び出しを終了"
  },
  "panels/sources/SourcesView.ts | openFile": {
    "message": "ファイルを開く"
  },
  "panels/sources/SourcesView.ts | runCommand": {
    "message": "コマンドを実行"
  },
  "panels/sources/SourcesView.ts | selectFolder": {
    "message": "フォルダを選択する"
  },
  "panels/sources/SourcesView.ts | sourceViewActions": {
    "message": "ソースビューアクション"
  },
  "panels/sources/SourcesView.ts | workspaceDropInAFolderToSyncSources": {
    "message": "編集内容をワークスペースと同期するには、ここにソースを含むフォルダをドロップするか、次の操作を行います"
  },
  "panels/sources/TabbedEditorContainer.ts | areYouSureYouWantToCloseUnsaved": {
    "message": "保存されていないファイル（{PH1}）を閉じてもよろしいですか？"
  },
  "panels/sources/TabbedEditorContainer.ts | changesToThisFileWereNotSavedTo": {
    "message": "このファイルの変更はファイル システムに保存されませんでした。"
  },
  "panels/sources/TabbedEditorContainer.ts | unableToLoadThisContent": {
    "message": "このコンテンツを読み込めませんでした。"
  },
  "panels/sources/ThreadsSidebarPane.ts | paused": {
    "message": "一時停止"
  },
  "panels/sources/WatchExpressionsSidebarPane.ts | addPropertyPathToWatch": {
    "message": "プロパティパスを Watch に追加"
  },
  "panels/sources/WatchExpressionsSidebarPane.ts | addWatchExpression": {
    "message": "Watch 式を追加"
  },
  "panels/sources/WatchExpressionsSidebarPane.ts | copyValue": {
    "message": "値をコピー"
  },
  "panels/sources/WatchExpressionsSidebarPane.ts | deleteAllWatchExpressions": {
    "message": "Watch 式をすべて削除"
  },
  "panels/sources/WatchExpressionsSidebarPane.ts | deleteWatchExpression": {
    "message": "Watch 式を削除"
  },
  "panels/sources/WatchExpressionsSidebarPane.ts | noWatchExpressions": {
    "message": "Watch 式なし"
  },
  "panels/sources/WatchExpressionsSidebarPane.ts | notAvailable": {
    "message": "<利用不可>"
  },
  "panels/sources/WatchExpressionsSidebarPane.ts | refreshWatchExpressions": {
    "message": "Watch 式を更新します"
  },
  "panels/sources/components/BreakpointsView.ts | breakpointHit": {
    "message": "{PH1} ブレークポイントに達しました"
  },
  "panels/sources/components/BreakpointsView.ts | checked": {
    "message": "オン"
  },
  "panels/sources/components/BreakpointsView.ts | conditionCode": {
    "message": "条件: {PH1}"
  },
  "panels/sources/components/BreakpointsView.ts | disableAllBreakpointsInFile": {
    "message": "ファイル内のブレークポイントをすべて無効にする"
  },
  "panels/sources/components/BreakpointsView.ts | editCondition": {
    "message": "条件を編集"
  },
  "panels/sources/components/BreakpointsView.ts | editLogpoint": {
    "message": "ログポイントを編集"
  },
  "panels/sources/components/BreakpointsView.ts | enableAllBreakpointsInFile": {
    "message": "ファイル内のブレークポイントをすべて有効にする"
  },
  "panels/sources/components/BreakpointsView.ts | indeterminate": {
    "message": "混合"
  },
  "panels/sources/components/BreakpointsView.ts | logpointCode": {
    "message": "ログポイント: {PH1}"
  },
  "panels/sources/components/BreakpointsView.ts | pauseOnCaughtExceptions": {
    "message": "キャッチされた例外で一時停止"
  },
  "panels/sources/components/BreakpointsView.ts | pauseOnUncaughtExceptions": {
    "message": "捕捉されない例外で一時停止する"
  },
  "panels/sources/components/BreakpointsView.ts | removeAllBreakpoints": {
    "message": "ブレークポイントをすべて削除"
  },
  "panels/sources/components/BreakpointsView.ts | removeAllBreakpointsInFile": {
    "message": "ファイル内のブレークポイントをすべて削除"
  },
  "panels/sources/components/BreakpointsView.ts | removeBreakpoint": {
    "message": "ブレークポイントを削除"
  },
  "panels/sources/components/BreakpointsView.ts | removeOtherBreakpoints": {
    "message": "他のブレークポイントを削除"
  },
  "panels/sources/components/BreakpointsView.ts | revealLocation": {
    "message": "場所を表示"
  },
  "panels/sources/components/BreakpointsView.ts | unchecked": {
    "message": "オフ"
  },
  "panels/sources/components/HeadersView.ts | addHeader": {
    "message": "ヘッダーを追加"
  },
  "panels/sources/components/HeadersView.ts | addOverrideRule": {
    "message": "オーバーライド ルールを追加"
  },
  "panels/sources/components/HeadersView.ts | errorWhenParsing": {
    "message": "「{PH1}」の解析中にエラーが発生しました。"
  },
  "panels/sources/components/HeadersView.ts | learnMore": {
    "message": "詳細"
  },
  "panels/sources/components/HeadersView.ts | parsingErrorExplainer": {
    "message": "多くの場合、「{PH1}」の構文エラーが原因です。外部エディタでこのファイルを開いてエラーを修正するか、ファイルを削除してから作成しなおしてください。"
  },
  "panels/sources/components/HeadersView.ts | removeBlock": {
    "message": "この「ApplyTo」セクションを削除"
  },
  "panels/sources/components/HeadersView.ts | removeHeader": {
    "message": "このヘッダーを削除"
  },
  "panels/sources/sources-meta.ts | activateBreakpoints": {
    "message": "ブレークポイントを有効化"
  },
  "panels/sources/sources-meta.ts | addFolder": {
    "message": "フォルダの追加"
  },
  "panels/sources/sources-meta.ts | addFolderToWorkspace": {
    "message": "ワークスペースにフォルダを追加"
  },
  "panels/sources/sources-meta.ts | addSelectedTextToWatches": {
    "message": "選択されたテキストを Watch に追加"
  },
  "panels/sources/sources-meta.ts | all": {
    "message": "すべて"
  },
  "panels/sources/sources-meta.ts | allowScrollingPastEndOfFile": {
    "message": "ファイルの終わりを超えるスクロールを許可"
  },
  "panels/sources/sources-meta.ts | autocompletion": {
    "message": "オートコンプリート"
  },
  "panels/sources/sources-meta.ts | automaticallyRevealFilesIn": {
    "message": "サイドバーにファイルを自動的に表示"
  },
  "panels/sources/sources-meta.ts | bracketMatching": {
    "message": "かっこの一致"
  },
  "panels/sources/sources-meta.ts | breakpoints": {
    "message": "ブレークポイント"
  },
  "panels/sources/sources-meta.ts | closeAll": {
    "message": "すべて閉じる"
  },
  "panels/sources/sources-meta.ts | closeTheActiveTab": {
    "message": "有効なタブを閉じる"
  },
  "panels/sources/sources-meta.ts | codeFolding": {
    "message": "コードの折りたたみ"
  },
  "panels/sources/sources-meta.ts | createNewSnippet": {
    "message": "新しいスニペットを作成"
  },
  "panels/sources/sources-meta.ts | deactivateBreakpoints": {
    "message": "ブレークポイントを無効化"
  },
  "panels/sources/sources-meta.ts | decrementCssUnitBy": {
    "message": "CSS 単位を {PH1} 減らす"
  },
  "panels/sources/sources-meta.ts | detectIndentation": {
    "message": "インデントを検出"
  },
  "panels/sources/sources-meta.ts | disableAutoFocusOnDebuggerPaused": {
    "message": "ブレークポイントのトリガー時にソースパネルを表示しない"
  },
  "panels/sources/sources-meta.ts | disableAutocompletion": {
    "message": "オートコンプリートを無効にする"
  },
  "panels/sources/sources-meta.ts | disableBracketMatching": {
    "message": "かっこの一致を無効にする"
  },
  "panels/sources/sources-meta.ts | disableCodeFolding": {
    "message": "コードの折りたたみを無効にする"
  },
  "panels/sources/sources-meta.ts | disableCssSourceMaps": {
    "message": "CSS ソースマップを無効にする"
  },
  "panels/sources/sources-meta.ts | disableTabMovesFocus": {
    "message": "タブのフォーカス移動を無効にする"
  },
  "panels/sources/sources-meta.ts | disableWasmAutoStepping": {
    "message": "Wasm 自動ステッピングを無効にする"
  },
  "panels/sources/sources-meta.ts | disallowScrollingPastEndOfFile": {
    "message": "ファイルの終わりを超えるスクロールを許可しない"
  },
  "panels/sources/sources-meta.ts | displayVariableValuesInlineWhile": {
    "message": "デバッグ時に変数値をインライン表示"
  },
  "panels/sources/sources-meta.ts | doNotAutomaticallyRevealFilesIn": {
    "message": "サイドバーにファイルを自動的に表示しない"
  },
  "panels/sources/sources-meta.ts | doNotDetectIndentation": {
    "message": "インデントを検出しない"
  },
  "panels/sources/sources-meta.ts | doNotDisplayVariableValuesInline": {
    "message": "デバッグ時に変数値をインライン表示しない"
  },
  "panels/sources/sources-meta.ts | doNotSearchInAnonymousAndContent": {
    "message": "非同期のコンテンツ スクリプト内で検索しない"
  },
  "panels/sources/sources-meta.ts | doNotShowWhitespaceCharacters": {
    "message": "空白文字を表示しない"
  },
  "panels/sources/sources-meta.ts | enableAutoFocusOnDebuggerPaused": {
    "message": "ブレークポイントのトリガー時にソースパネルを表示する"
  },
  "panels/sources/sources-meta.ts | enableAutocompletion": {
    "message": "オートコンプリートを有効にする"
  },
  "panels/sources/sources-meta.ts | enableBracketMatching": {
    "message": "かっこの一致を有効にする"
  },
  "panels/sources/sources-meta.ts | enableCodeFolding": {
    "message": "コードの折りたたみを有効にする"
  },
  "panels/sources/sources-meta.ts | enableCssSourceMaps": {
    "message": "CSS ソースマップを有効にする"
  },
  "panels/sources/sources-meta.ts | enableTabMovesFocus": {
    "message": "タブのフォーカス移動を有効にする"
  },
  "panels/sources/sources-meta.ts | enableWasmAutoStepping": {
    "message": "Wasm 自動ステッピングを有効にする"
  },
  "panels/sources/sources-meta.ts | evaluateSelectedTextInConsole": {
    "message": "コンソール内の選択されたテキストを評価"
  },
  "panels/sources/sources-meta.ts | file": {
    "message": "ファイル"
  },
  "panels/sources/sources-meta.ts | goTo": {
    "message": "移動"
  },
  "panels/sources/sources-meta.ts | goToAFunctionDeclarationruleSet": {
    "message": "関数宣言 / ルールセットに移動"
  },
  "panels/sources/sources-meta.ts | goToLine": {
    "message": "行に移動"
  },
  "panels/sources/sources-meta.ts | incrementCssUnitBy": {
    "message": "CSS 単位を {PH1} 増やす"
  },
  "panels/sources/sources-meta.ts | jumpToNextEditingLocation": {
    "message": "次の編集場所に移動"
  },
  "panels/sources/sources-meta.ts | jumpToPreviousEditingLocation": {
    "message": "前の編集場所に移動"
  },
  "panels/sources/sources-meta.ts | line": {
    "message": "行"
  },
  "panels/sources/sources-meta.ts | nextCallFrame": {
    "message": "次の呼び出しフレーム"
  },
  "panels/sources/sources-meta.ts | nextEditorTab": {
    "message": "次のエディタ"
  },
  "panels/sources/sources-meta.ts | none": {
    "message": "なし"
  },
  "panels/sources/sources-meta.ts | open": {
    "message": "開く"
  },
  "panels/sources/sources-meta.ts | pauseScriptExecution": {
    "message": "スクリプトの実行を一時停止"
  },
  "panels/sources/sources-meta.ts | previousCallFrame": {
    "message": "前の呼び出しフレーム"
  },
  "panels/sources/sources-meta.ts | previousEditorTab": {
    "message": "前のエディタ"
  },
  "panels/sources/sources-meta.ts | quickSource": {
    "message": "クイックソース"
  },
  "panels/sources/sources-meta.ts | rename": {
    "message": "名前を変更"
  },
  "panels/sources/sources-meta.ts | resumeScriptExecution": {
    "message": "スクリプトの実行を再開"
  },
  "panels/sources/sources-meta.ts | revealActiveFileInSidebar": {
    "message": "ナビゲータのサイドバーにアクティブなファイルを表示"
  },
  "panels/sources/sources-meta.ts | runSnippet": {
    "message": "スニペットを実行"
  },
  "panels/sources/sources-meta.ts | save": {
    "message": "保存"
  },
  "panels/sources/sources-meta.ts | saveAll": {
    "message": "すべて保存"
  },
  "panels/sources/sources-meta.ts | scope": {
    "message": "範囲"
  },
  "panels/sources/sources-meta.ts | search": {
    "message": "検索"
  },
  "panels/sources/sources-meta.ts | searchInAnonymousAndContent": {
    "message": "非同期のコンテンツ スクリプト内で検索"
  },
  "panels/sources/sources-meta.ts | showAllWhitespaceCharacters": {
    "message": "空白文字をすべて表示"
  },
  "panels/sources/sources-meta.ts | showBreakpoints": {
    "message": "ブレークポイントを表示"
  },
  "panels/sources/sources-meta.ts | showQuickSource": {
    "message": "クイックソースを表示"
  },
  "panels/sources/sources-meta.ts | showScope": {
    "message": "スコープを表示"
  },
  "panels/sources/sources-meta.ts | showSearch": {
    "message": "検索を表示"
  },
  "panels/sources/sources-meta.ts | showSnippets": {
    "message": "スニペットを表示"
  },
  "panels/sources/sources-meta.ts | showSources": {
    "message": "ソースを表示"
  },
  "panels/sources/sources-meta.ts | showThreads": {
    "message": "スレッドを表示"
  },
  "panels/sources/sources-meta.ts | showTrailingWhitespaceCharacters": {
    "message": "末尾の空白文字を表示"
  },
  "panels/sources/sources-meta.ts | showWatch": {
    "message": "Watch を表示"
  },
  "panels/sources/sources-meta.ts | showWhitespaceCharacters": {
    "message": "空白文字を表示:"
  },
  "panels/sources/sources-meta.ts | showWorkspace": {
    "message": "ワークスペースを表示"
  },
  "panels/sources/sources-meta.ts | snippets": {
    "message": "スニペット"
  },
  "panels/sources/sources-meta.ts | sources": {
    "message": "ソース"
  },
  "panels/sources/sources-meta.ts | step": {
    "message": "ステップ"
  },
  "panels/sources/sources-meta.ts | stepIntoNextFunctionCall": {
    "message": "次の関数呼び出しにステップイン"
  },
  "panels/sources/sources-meta.ts | stepOutOfCurrentFunction": {
    "message": "現在の関数からステップアウト"
  },
  "panels/sources/sources-meta.ts | stepOverNextFunctionCall": {
    "message": "次の関数呼び出しにステップ オーバー"
  },
  "panels/sources/sources-meta.ts | switchFile": {
    "message": "ファイルを切り替え"
  },
  "panels/sources/sources-meta.ts | symbol": {
    "message": "記号"
  },
  "panels/sources/sources-meta.ts | threads": {
    "message": "スレッド"
  },
  "panels/sources/sources-meta.ts | toggleBreakpoint": {
    "message": "ブレークポイントを切り替え"
  },
  "panels/sources/sources-meta.ts | toggleBreakpointEnabled": {
    "message": "ブレークポイント切り替えの有効化"
  },
  "panels/sources/sources-meta.ts | toggleBreakpointInputWindow": {
    "message": "ブレークポイント入力ウィンドウを切り替え"
  },
  "panels/sources/sources-meta.ts | toggleDebuggerSidebar": {
    "message": "デバッガのサイドバーの切り替え"
  },
  "panels/sources/sources-meta.ts | toggleNavigatorSidebar": {
    "message": "ナビゲーターのサイドバーの切り替え"
  },
  "panels/sources/sources-meta.ts | trailing": {
    "message": "末尾"
  },
  "panels/sources/sources-meta.ts | wasmAutoStepping": {
    "message": "デバッグ情報を使用して Wasm をデバッグする場合、可能であれば Wasm バイトコードで一時停止しない"
  },
  "panels/sources/sources-meta.ts | watch": {
    "message": "監視"
  },
  "panels/sources/sources-meta.ts | workspace": {
    "message": "ワークスペース"
  },
  "panels/timeline/AnimationsTrackAppender.ts | animations": {
    "message": "アニメーション"
  },
  "panels/timeline/AppenderUtils.ts | sSelfS": {
    "message": "{PH1}（セルフ {PH2}）"
  },
  "panels/timeline/CountersGraph.ts | documents": {
    "message": "ドキュメント"
  },
  "panels/timeline/CountersGraph.ts | gpuMemory": {
    "message": "GPU メモリ"
  },
  "panels/timeline/CountersGraph.ts | jsHeap": {
    "message": "JS ヒープ"
  },
  "panels/timeline/CountersGraph.ts | listeners": {
    "message": "リスナー"
  },
  "panels/timeline/CountersGraph.ts | nodes": {
    "message": "ノード数"
  },
  "panels/timeline/CountersGraph.ts | ss": {
    "message": "[{PH1}～{PH2}]"
  },
  "panels/timeline/EventUICategory.ts | animation": {
    "message": "アニメーション"
  },
  "panels/timeline/EventUICategory.ts | animationFrameFired": {
    "message": "アニメーション フレームの呼び出し"
  },
  "panels/timeline/EventUICategory.ts | async": {
    "message": "非同期"
  },
  "panels/timeline/EventUICategory.ts | asyncTask": {
    "message": "非同期タスク"
  },
  "panels/timeline/EventUICategory.ts | cacheModule": {
    "message": "モジュール コードのキャッシュ"
  },
  "panels/timeline/EventUICategory.ts | cacheScript": {
    "message": "スクリプト コードのキャッシュ"
  },
  "panels/timeline/EventUICategory.ts | cachedWasmModule": {
    "message": "キャッシュに保存された Wasm モジュール"
  },
  "panels/timeline/EventUICategory.ts | cancelAnimationFrame": {
    "message": "アニメーション フレームをキャンセル"
  },
  "panels/timeline/EventUICategory.ts | cancelIdleCallback": {
    "message": "アイドル状態のコールバックのキャンセル"
  },
  "panels/timeline/EventUICategory.ts | commit": {
    "message": "コミット"
  },
  "panels/timeline/EventUICategory.ts | compileCode": {
    "message": "コードのコンパイル"
  },
  "panels/timeline/EventUICategory.ts | compileModule": {
    "message": "モジュールのコンパイル"
  },
  "panels/timeline/EventUICategory.ts | compileScript": {
    "message": "スクリプトのコンパイル"
  },
  "panels/timeline/EventUICategory.ts | compiledWasmModule": {
    "message": "コンパイル済みの Wasm モジュール"
  },
  "panels/timeline/EventUICategory.ts | compositeLayers": {
    "message": "レイヤの合成"
  },
  "panels/timeline/EventUICategory.ts | computeIntersections": {
    "message": "交差の計算"
  },
  "panels/timeline/EventUICategory.ts | consoleTime": {
    "message": "コンソール時間"
  },
  "panels/timeline/EventUICategory.ts | cppGc": {
    "message": "CPP GC"
  },
  "panels/timeline/EventUICategory.ts | createWebsocket": {
    "message": "WebSocket の作成"
  },
  "panels/timeline/EventUICategory.ts | decrypt": {
    "message": "復号"
  },
  "panels/timeline/EventUICategory.ts | decryptReply": {
    "message": "返信の復号"
  },
  "panels/timeline/EventUICategory.ts | deserializeCodeCache": {
    "message": "コード キャッシュの逆シリアル化"
  },
  "panels/timeline/EventUICategory.ts | destroyWebsocket": {
    "message": "WebSocket の破棄"
  },
  "panels/timeline/EventUICategory.ts | digest": {
    "message": "ダイジェスト"
  },
  "panels/timeline/EventUICategory.ts | digestReply": {
    "message": "ダイジェストの返信"
  },
  "panels/timeline/EventUICategory.ts | domGc": {
    "message": "DOM GC"
  },
  "panels/timeline/EventUICategory.ts | domcontentloadedEvent": {
    "message": "DOMContentLoaded イベント"
  },
  "panels/timeline/EventUICategory.ts | drawFrame": {
    "message": "フレームを描画"
  },
  "panels/timeline/EventUICategory.ts | embedderCallback": {
    "message": "埋め込みコールバック"
  },
  "panels/timeline/EventUICategory.ts | encrypt": {
    "message": "暗号化"
  },
  "panels/timeline/EventUICategory.ts | encryptReply": {
    "message": "返信の暗号化"
  },
  "panels/timeline/EventUICategory.ts | evaluateModule": {
    "message": "モジュールの評価"
  },
  "panels/timeline/EventUICategory.ts | evaluateScript": {
    "message": "スクリプトの評価"
  },
  "panels/timeline/EventUICategory.ts | event": {
    "message": "イベント"
  },
  "panels/timeline/EventUICategory.ts | eventTiming": {
    "message": "イベントのタイミング"
  },
  "panels/timeline/EventUICategory.ts | experience": {
    "message": "エクスペリエンス"
  },
  "panels/timeline/EventUICategory.ts | finishLoading": {
    "message": "読み込みの終了"
  },
  "panels/timeline/EventUICategory.ts | fireIdleCallback": {
    "message": "アイドル状態のコールバックの呼び出し"
  },
  "panels/timeline/EventUICategory.ts | firstContentfulPaint": {
    "message": "First Contentful Paint"
  },
  "panels/timeline/EventUICategory.ts | firstPaint": {
    "message": "First Paint"
  },
  "panels/timeline/EventUICategory.ts | frameStart": {
    "message": "フレーム開始"
  },
  "panels/timeline/EventUICategory.ts | frameStartMainThread": {
    "message": "フレーム開始（メインスレッド）"
  },
  "panels/timeline/EventUICategory.ts | frameStartedLoading": {
    "message": "フレームの読み込み開始"
  },
  "panels/timeline/EventUICategory.ts | functionCall": {
    "message": "関数呼び出し"
  },
  "panels/timeline/EventUICategory.ts | gcEvent": {
    "message": "GC イベント"
  },
  "panels/timeline/EventUICategory.ts | gpu": {
    "message": "GPU"
  },
  "panels/timeline/EventUICategory.ts | hitTest": {
    "message": "ヒットテスト"
  },
  "panels/timeline/EventUICategory.ts | idle": {
    "message": "アイドル状態"
  },
  "panels/timeline/EventUICategory.ts | imageDecode": {
    "message": "画像のデコード"
  },
  "panels/timeline/EventUICategory.ts | imageResize": {
    "message": "画像のサイズ変更"
  },
  "panels/timeline/EventUICategory.ts | installTimer": {
    "message": "タイマーのインストール"
  },
  "panels/timeline/EventUICategory.ts | invalidateLayout": {
    "message": "レイアウトの無効化"
  },
  "panels/timeline/EventUICategory.ts | jsFrame": {
    "message": "JS フレーム"
  },
  "panels/timeline/EventUICategory.ts | largestContentfulPaint": {
    "message": "Largest Contentful Paint"
  },
  "panels/timeline/EventUICategory.ts | layerize": {
    "message": "レイヤ化"
  },
  "panels/timeline/EventUICategory.ts | layout": {
    "message": "レイアウト"
  },
  "panels/timeline/EventUICategory.ts | layoutShift": {
    "message": "レイアウト シフト"
  },
  "panels/timeline/EventUICategory.ts | loading": {
    "message": "読み込んでいます"
  },
  "panels/timeline/EventUICategory.ts | majorGc": {
    "message": "メジャー GC"
  },
  "panels/timeline/EventUICategory.ts | minorGc": {
    "message": "マイナー GC"
  },
  "panels/timeline/EventUICategory.ts | onloadEvent": {
    "message": "onload イベント"
  },
  "panels/timeline/EventUICategory.ts | optimizeCode": {
    "message": "コードの最適化"
  },
  "panels/timeline/EventUICategory.ts | other": {
    "message": "その他"
  },
  "panels/timeline/EventUICategory.ts | paint": {
    "message": "ペイント"
  },
  "panels/timeline/EventUICategory.ts | paintImage": {
    "message": "画像のペイント"
  },
  "panels/timeline/EventUICategory.ts | paintSetup": {
    "message": "ペイントのセットアップ"
  },
  "panels/timeline/EventUICategory.ts | painting": {
    "message": "ペイント"
  },
  "panels/timeline/EventUICategory.ts | parseAndCompile": {
    "message": "解析とコンパイル"
  },
  "panels/timeline/EventUICategory.ts | parseHtml": {
    "message": "HTML の解析"
  },
  "panels/timeline/EventUICategory.ts | parseStylesheet": {
    "message": "スタイルシートの解析"
  },
  "panels/timeline/EventUICategory.ts | prePaint": {
    "message": "プリペイント"
  },
  "panels/timeline/EventUICategory.ts | profilingOverhead": {
    "message": "プロファイリングのオーバーヘッド"
  },
  "panels/timeline/EventUICategory.ts | rasterizePaint": {
    "message": "ペイントのラスター化"
  },
  "panels/timeline/EventUICategory.ts | recalculateStyle": {
    "message": "スタイルの再計算"
  },
  "panels/timeline/EventUICategory.ts | receiveData": {
    "message": "データの受信"
  },
  "panels/timeline/EventUICategory.ts | receiveResponse": {
    "message": "レスポンスの受信"
  },
  "panels/timeline/EventUICategory.ts | receiveWebsocketHandshake": {
    "message": "WebSocket handshake の受信"
  },
  "panels/timeline/EventUICategory.ts | removeTimer": {
    "message": "タイマーの削除"
  },
  "panels/timeline/EventUICategory.ts | rendering": {
    "message": "レンダリング"
  },
  "panels/timeline/EventUICategory.ts | requestAnimationFrame": {
    "message": "アニメーション フレームをリクエスト"
  },
  "panels/timeline/EventUICategory.ts | requestIdleCallback": {
    "message": "アイドル状態のコールバックのリクエスト"
  },
  "panels/timeline/EventUICategory.ts | requestMainThreadFrame": {
    "message": "メインスレッド フレームのリクエスト"
  },
  "panels/timeline/EventUICategory.ts | runMicrotasks": {
    "message": "Microtasks の実行"
  },
  "panels/timeline/EventUICategory.ts | scheduleStyleRecalculation": {
    "message": "スタイル再計算のスケジュール"
  },
  "panels/timeline/EventUICategory.ts | scripting": {
    "message": "スクリプト"
  },
  "panels/timeline/EventUICategory.ts | scroll": {
    "message": "スクロール"
  },
  "panels/timeline/EventUICategory.ts | sendRequest": {
    "message": "リクエストの送信"
  },
  "panels/timeline/EventUICategory.ts | sendWebsocketHandshake": {
    "message": "WebSocket handshake の送信"
  },
  "panels/timeline/EventUICategory.ts | sign": {
    "message": "署名"
  },
  "panels/timeline/EventUICategory.ts | signReply": {
    "message": "返信に署名"
  },
  "panels/timeline/EventUICategory.ts | streamingCompileTask": {
    "message": "ストリーミング コンパイル タスク"
  },
  "panels/timeline/EventUICategory.ts | streamingWasmResponse": {
    "message": "Wasm レスポンスのストリーミング"
  },
  "panels/timeline/EventUICategory.ts | system": {
    "message": "システム"
  },
  "panels/timeline/EventUICategory.ts | task": {
    "message": "タスク"
  },
  "panels/timeline/EventUICategory.ts | timerFired": {
    "message": "タイマーの呼び出し"
  },
  "panels/timeline/EventUICategory.ts | timestamp": {
    "message": "タイムスタンプ"
  },
  "panels/timeline/EventUICategory.ts | updateLayer": {
    "message": "レイヤの更新"
  },
  "panels/timeline/EventUICategory.ts | updateLayerTree": {
    "message": "レイヤツリーの更新"
  },
  "panels/timeline/EventUICategory.ts | userTiming": {
    "message": "カスタム速度"
  },
  "panels/timeline/EventUICategory.ts | verify": {
    "message": "確認"
  },
  "panels/timeline/EventUICategory.ts | verifyReply": {
    "message": "返信の確認"
  },
  "panels/timeline/EventUICategory.ts | waitingForNetwork": {
    "message": "ネットワーク接続を待機しています"
  },
  "panels/timeline/EventUICategory.ts | wasmModuleCacheHit": {
    "message": "Wasm モジュールのキャッシュ ヒット"
  },
  "panels/timeline/EventUICategory.ts | wasmModuleCacheInvalid": {
    "message": "Wasm モジュールのキャッシュ無効"
  },
  "panels/timeline/EventUICategory.ts | willSendRequest": {
    "message": "リクエストを送信予定"
  },
  "panels/timeline/EventUICategory.ts | xhrLoad": {
    "message": "XHR の読み込み"
  },
  "panels/timeline/EventUICategory.ts | xhrReadyStateChange": {
    "message": "XHR 準備完了状態の変更"
  },
  "panels/timeline/EventsTimelineTreeView.ts | Dms": {
    "message": "{PH1} ミリ秒"
  },
  "panels/timeline/EventsTimelineTreeView.ts | all": {
    "message": "すべて"
  },
  "panels/timeline/EventsTimelineTreeView.ts | durationFilter": {
    "message": "期間フィルタ"
  },
  "panels/timeline/EventsTimelineTreeView.ts | filterEventLog": {
    "message": "イベントログをフィルタ"
  },
  "panels/timeline/EventsTimelineTreeView.ts | startTime": {
    "message": "開始時間"
  },
  "panels/timeline/GPUTrackAppender.ts | gpu": {
    "message": "GPU"
  },
  "panels/timeline/InteractionsTrackAppender.ts | interactions": {
    "message": "操作"
  },
  "panels/timeline/IsolateSelector.ts | empty": {
    "message": "（空）"
  },
  "panels/timeline/IsolateSelector.ts | selectJavascriptVmInstance": {
    "message": "JavaScript VM インスタンスを選択"
  },
  "panels/timeline/LayoutShiftsTrackAppender.ts | layoutShifts": {
    "message": "レイアウト シフト"
  },
  "panels/timeline/NetworkTrackAppender.ts | network": {
    "message": "ネットワーク"
  },
  "panels/timeline/ThreadAppender.ts | anonymous": {
    "message": "（匿名）"
  },
  "panels/timeline/ThreadAppender.ts | bidderWorklet": {
    "message": "ビッダー ワークレット"
  },
  "panels/timeline/ThreadAppender.ts | bidderWorkletS": {
    "message": "ビッダー ワークレット - {PH1}"
  },
  "panels/timeline/ThreadAppender.ts | dedicatedWorker": {
    "message": "専用の Worker"
  },
  "panels/timeline/ThreadAppender.ts | eventDispatchS": {
    "message": "イベント: {PH1}"
  },
  "panels/timeline/ThreadAppender.ts | frameS": {
    "message": "フレーム - {PH1}"
  },
  "panels/timeline/ThreadAppender.ts | main": {
    "message": "メイン"
  },
  "panels/timeline/ThreadAppender.ts | mainS": {
    "message": "メイン - {PH1}"
  },
  "panels/timeline/ThreadAppender.ts | onIgnoreList": {
    "message": "無視リスト上"
  },
  "panels/timeline/ThreadAppender.ts | raster": {
    "message": "ラスター"
  },
  "panels/timeline/ThreadAppender.ts | rasterizerThreadS": {
    "message": "ラスタライザ スレッド {PH1}"
  },
  "panels/timeline/ThreadAppender.ts | sellerWorklet": {
    "message": "販売者ワークレット"
  },
  "panels/timeline/ThreadAppender.ts | sellerWorkletS": {
    "message": "販売者ワークレット - {PH1}"
  },
  "panels/timeline/ThreadAppender.ts | threadPool": {
    "message": "スレッドプール"
  },
  "panels/timeline/ThreadAppender.ts | threadPoolThreadS": {
    "message": "スレッドプール ワーカー {PH1}"
  },
  "panels/timeline/ThreadAppender.ts | threadS": {
    "message": "スレッド {PH1}"
  },
  "panels/timeline/ThreadAppender.ts | unknownWorklet": {
    "message": "オークション ワークレット"
  },
  "panels/timeline/ThreadAppender.ts | unknownWorkletS": {
    "message": "オークション ワークレット - {PH1}"
  },
  "panels/timeline/ThreadAppender.ts | workerS": {
    "message": "Worker — {PH1}"
  },
  "panels/timeline/ThreadAppender.ts | workerSS": {
    "message": "Worker: {PH1} — {PH2}"
  },
  "panels/timeline/ThreadAppender.ts | workletService": {
    "message": "オークション ワークレット サービス"
  },
  "panels/timeline/ThreadAppender.ts | workletServiceS": {
    "message": "オークション ワークレット サービス - {PH1}"
  },
  "panels/timeline/TimelineController.ts | tracingNotSupported": {
    "message": "このターゲット タイプでは、パフォーマンス トレースの記録はサポートされていません"
  },
  "panels/timeline/TimelineDetailsView.ts | bottomup": {
    "message": "ボトムアップ"
  },
  "panels/timeline/TimelineDetailsView.ts | callTree": {
    "message": "呼び出しツリー"
  },
  "panels/timeline/TimelineDetailsView.ts | eventLog": {
    "message": "イベントログ"
  },
  "panels/timeline/TimelineDetailsView.ts | layers": {
    "message": "レイヤ"
  },
  "panels/timeline/TimelineDetailsView.ts | paintProfiler": {
    "message": "ペイント プロファイラ"
  },
  "panels/timeline/TimelineDetailsView.ts | rangeSS": {
    "message": "範囲: {PH1}～{PH2}"
  },
  "panels/timeline/TimelineDetailsView.ts | summary": {
    "message": "概要"
  },
  "panels/timeline/TimelineEventOverview.ts | cpu": {
    "message": "CPU"
  },
  "panels/timeline/TimelineEventOverview.ts | heap": {
    "message": "ヒープ"
  },
  "panels/timeline/TimelineEventOverview.ts | net": {
    "message": "NET"
  },
  "panels/timeline/TimelineEventOverview.ts | sSDash": {
    "message": "{PH1}～{PH2}"
  },
  "panels/timeline/TimelineFlameChartDataProvider.ts | droppedFrame": {
    "message": "フレーム落ち"
  },
  "panels/timeline/TimelineFlameChartDataProvider.ts | frame": {
    "message": "フレーム"
  },
  "panels/timeline/TimelineFlameChartDataProvider.ts | frameS": {
    "message": "フレーム - {PH1}"
  },
  "panels/timeline/TimelineFlameChartDataProvider.ts | frames": {
    "message": "フレーム"
  },
  "panels/timeline/TimelineFlameChartDataProvider.ts | idleFrame": {
    "message": "アイドル状態のフレーム"
  },
  "panels/timeline/TimelineFlameChartDataProvider.ts | main": {
    "message": "メイン"
  },
  "panels/timeline/TimelineFlameChartDataProvider.ts | mainS": {
    "message": "メイン - {PH1}"
  },
  "panels/timeline/TimelineFlameChartDataProvider.ts | onIgnoreList": {
    "message": "無視リスト上"
  },
  "panels/timeline/TimelineFlameChartDataProvider.ts | partiallyPresentedFrame": {
    "message": "部分的に表示されたフレーム"
  },
  "panels/timeline/TimelineFlameChartDataProvider.ts | raster": {
    "message": "ラスター"
  },
  "panels/timeline/TimelineFlameChartDataProvider.ts | rasterizerThreadS": {
    "message": "ラスタライザ スレッド {PH1}"
  },
  "panels/timeline/TimelineFlameChartDataProvider.ts | sSelfS": {
    "message": "{PH1}（セルフ {PH2}）"
  },
  "panels/timeline/TimelineFlameChartDataProvider.ts | subframe": {
    "message": "サブフレーム"
  },
  "panels/timeline/TimelineFlameChartDataProvider.ts | thread": {
    "message": "スレッド"
  },
  "panels/timeline/TimelineFlameChartView.ts | sAtS": {
    "message": "{PH1}（{PH2}）"
  },
  "panels/timeline/TimelineHistoryManager.ts | currentSessionSS": {
    "message": "現在のセッション: {PH1}。{PH2}"
  },
  "panels/timeline/TimelineHistoryManager.ts | moments": {
    "message": "モーメント"
  },
  "panels/timeline/TimelineHistoryManager.ts | noRecordings": {
    "message": "（記録なし）"
  },
  "panels/timeline/TimelineHistoryManager.ts | sAgo": {
    "message": "（{PH1}前）"
  },
  "panels/timeline/TimelineHistoryManager.ts | sD": {
    "message": "{PH1} #{PH2}"
  },
  "panels/timeline/TimelineHistoryManager.ts | sH": {
    "message": "{PH1}時間"
  },
  "panels/timeline/TimelineHistoryManager.ts | sM": {
    "message": "{PH1}分"
  },
  "panels/timeline/TimelineHistoryManager.ts | selectTimelineSession": {
    "message": "タイムライン セッションを選択"
  },
  "panels/timeline/TimelineLoader.ts | legacyTimelineFormatIsNot": {
    "message": "以前のタイムライン形式はサポートされていません。"
  },
  "panels/timeline/TimelineLoader.ts | malformedCpuProfileFormat": {
    "message": "CPU プロファイルの形式が正しくない"
  },
  "panels/timeline/TimelineLoader.ts | malformedTimelineDataS": {
    "message": "タイムライン データの形式が正しくありません: {PH1}"
  },
  "panels/timeline/TimelineLoader.ts | malformedTimelineDataUnknownJson": {
    "message": "タイムライン データの形式が正しくありません: 不明な JSON 形式です"
  },
  "panels/timeline/TimelineLoader.ts | malformedTimelineInputWrongJson": {
    "message": "タイムライン入力の形式が正しくありません: JSON のかっこの組み合わせが間違っています"
  },
  "panels/timeline/TimelinePanel.ts | CpuThrottlingIsEnabled": {
    "message": "- CPU スロットリングが有効です"
  },
  "panels/timeline/TimelinePanel.ts | HardwareConcurrencyIsEnabled": {
    "message": "- ハードウェアの並行処理のオーバーライドが有効です"
  },
  "panels/timeline/TimelinePanel.ts | JavascriptSamplingIsDisabled": {
    "message": "- JavaScript のサンプリングが無効です"
  },
  "panels/timeline/TimelinePanel.ts | NetworkThrottlingIsEnabled": {
    "message": "- ネットワーク スロットリングが有効です"
  },
  "panels/timeline/TimelinePanel.ts | SignificantOverheadDueToPaint": {
    "message": "- 描画パフォーマンスの計測による重大なオーバーヘッド"
  },
  "panels/timeline/TimelinePanel.ts | afterRecordingSelectAnAreaOf": {
    "message": "記録後、ドラッグして概要内で関心のある範囲を選択します。選択したら、マウスホイールまたは {PH1} キーでタイムラインのズーム、パンを行います。{PH2}"
  },
  "panels/timeline/TimelinePanel.ts | bufferUsage": {
    "message": "バッファ使用量"
  },
  "panels/timeline/TimelinePanel.ts | captureScreenshots": {
    "message": "スクリーンショットをキャプチャする"
  },
  "panels/timeline/TimelinePanel.ts | captureSettings": {
    "message": "キャプチャの設定"
  },
  "panels/timeline/TimelinePanel.ts | capturesAdvancedPaint": {
    "message": "高度な描画パフォーマンス計測により、重大なパフォーマンスオーバーヘッドが生じます"
  },
  "panels/timeline/TimelinePanel.ts | clear": {
    "message": "消去"
  },
  "panels/timeline/TimelinePanel.ts | clickTheRecordButtonSOrHitSTo": {
    "message": "新しい記録を開始するには、記録ボタン {PH1} をクリックするか、{PH2} を押します。"
  },
  "panels/timeline/TimelinePanel.ts | clickTheReloadButtonSOrHitSTo": {
    "message": "ページ読み込みを記録するには、再読み込みボタン {PH1} をクリックするか、{PH2} を押してください。"
  },
  "panels/timeline/TimelinePanel.ts | close": {
    "message": "閉じる"
  },
  "panels/timeline/TimelinePanel.ts | cpu": {
    "message": "CPU:"
  },
  "panels/timeline/TimelinePanel.ts | description": {
    "message": "説明"
  },
  "panels/timeline/TimelinePanel.ts | disableJavascriptSamples": {
    "message": "JavaScript のサンプルを無効にする"
  },
  "panels/timeline/TimelinePanel.ts | disablesJavascriptSampling": {
    "message": "JavaScript のサンプリングを無効にし、モバイル デバイスに対する実行時のオーバーヘッドを削減します"
  },
  "panels/timeline/TimelinePanel.ts | downloadAfterError": {
    "message": "未加工のトレース イベントをダウンロード"
  },
  "panels/timeline/TimelinePanel.ts | dropTimelineFileOrUrlHere": {
    "message": "タイムラインのファイルまたは URL をここにドロップ"
  },
  "panels/timeline/TimelinePanel.ts | enableAdvancedPaint": {
    "message": "高度な描画パフォーマンスの計測（低速）を有効にする"
  },
  "panels/timeline/TimelinePanel.ts | failedToSaveTimelineSS": {
    "message": "タイムフレームの保存に失敗しました（{PH1}（{PH2}））"
  },
  "panels/timeline/TimelinePanel.ts | initializingProfiler": {
    "message": "プロファイラを初期化しています…"
  },
  "panels/timeline/TimelinePanel.ts | learnmore": {
    "message": "詳細"
  },
  "panels/timeline/TimelinePanel.ts | loadProfile": {
    "message": "プロファイルを読み込みます…"
  },
  "panels/timeline/TimelinePanel.ts | loadingProfile": {
    "message": "プロファイルを読み込んでいます…"
  },
  "panels/timeline/TimelinePanel.ts | memory": {
    "message": "メモリ"
  },
  "panels/timeline/TimelinePanel.ts | network": {
    "message": "ネットワーク:"
  },
  "panels/timeline/TimelinePanel.ts | networkConditions": {
    "message": "ネットワーク状態"
  },
  "panels/timeline/TimelinePanel.ts | processingProfile": {
    "message": "プロファイルを処理しています…"
  },
  "panels/timeline/TimelinePanel.ts | profiling": {
    "message": "プロファイルを作成しています…"
  },
  "panels/timeline/TimelinePanel.ts | received": {
    "message": "受信済み"
  },
  "panels/timeline/TimelinePanel.ts | recordingFailed": {
    "message": "記録エラー"
  },
  "panels/timeline/TimelinePanel.ts | saveProfile": {
    "message": "プロファイルを保存します…"
  },
  "panels/timeline/TimelinePanel.ts | screenshots": {
    "message": "スクリーンショット"
  },
  "panels/timeline/TimelinePanel.ts | showMemoryTimeline": {
    "message": "メモリ タイムラインを表示"
  },
  "panels/timeline/TimelinePanel.ts | ssec": {
    "message": "{PH1}秒"
  },
  "panels/timeline/TimelinePanel.ts | status": {
    "message": "ステータス"
  },
  "panels/timeline/TimelinePanel.ts | stop": {
    "message": "停止"
  },
  "panels/timeline/TimelinePanel.ts | stoppingTimeline": {
    "message": "タイムラインを停止しています…"
  },
  "panels/timeline/TimelinePanel.ts | time": {
    "message": "時間"
  },
  "panels/timeline/TimelinePanel.ts | wasd": {
    "message": "WASD"
  },
  "panels/timeline/TimelineTreeView.ts | activity": {
    "message": "アクティビティ"
  },
  "panels/timeline/TimelineTreeView.ts | chromeExtensionsOverhead": {
    "message": "[Chrome 拡張機能のオーバーヘッド]"
  },
  "panels/timeline/TimelineTreeView.ts | filter": {
    "message": "フィルタ"
  },
  "panels/timeline/TimelineTreeView.ts | filterBottomup": {
    "message": "フィルタ（ボトムアップ）"
  },
  "panels/timeline/TimelineTreeView.ts | filterCallTree": {
    "message": "呼び出しツリーをフィルタ"
  },
  "panels/timeline/TimelineTreeView.ts | fms": {
    "message": "{PH1} ミリ秒"
  },
  "panels/timeline/TimelineTreeView.ts | groupBy": {
    "message": "分類:"
  },
  "panels/timeline/TimelineTreeView.ts | groupByActivity": {
    "message": "アクティビティ別に分類"
  },
  "panels/timeline/TimelineTreeView.ts | groupByCategory": {
    "message": "カテゴリ別に分類"
  },
  "panels/timeline/TimelineTreeView.ts | groupByDomain": {
    "message": "ドメイン別に分類"
  },
  "panels/timeline/TimelineTreeView.ts | groupByFrame": {
    "message": "フレーム別に分類"
  },
  "panels/timeline/TimelineTreeView.ts | groupBySubdomain": {
    "message": "サブドメイン別に分類"
  },
  "panels/timeline/TimelineTreeView.ts | groupByUrl": {
    "message": "URL 別に分類"
  },
  "panels/timeline/TimelineTreeView.ts | heaviestStack": {
    "message": "最も時間がかかったスタック"
  },
  "panels/timeline/TimelineTreeView.ts | heaviestStackHidden": {
    "message": "最も時間がかかったスタックのサイドバーが非表示になっています"
  },
  "panels/timeline/TimelineTreeView.ts | heaviestStackShown": {
    "message": "最も時間がかかったスタックのサイドバーが表示されています"
  },
  "panels/timeline/TimelineTreeView.ts | hideHeaviestStack": {
    "message": "最も時間がかかったスタックを非表示にします"
  },
  "panels/timeline/TimelineTreeView.ts | matchCase": {
    "message": "大文字と小文字を区別"
  },
  "panels/timeline/TimelineTreeView.ts | matchWholeWord": {
    "message": "完全一致"
  },
  "panels/timeline/TimelineTreeView.ts | noGrouping": {
    "message": "分類なし"
  },
  "panels/timeline/TimelineTreeView.ts | notOptimizedS": {
    "message": "最適化されていません: {PH1}"
  },
  "panels/timeline/TimelineTreeView.ts | page": {
    "message": "ページ"
  },
  "panels/timeline/TimelineTreeView.ts | percentPlaceholder": {
    "message": "{PH1}%"
  },
  "panels/timeline/TimelineTreeView.ts | performance": {
    "message": "パフォーマンス"
  },
  "panels/timeline/TimelineTreeView.ts | selectItemForDetails": {
    "message": "アイテムを選択すると詳細が表示されます。"
  },
  "panels/timeline/TimelineTreeView.ts | selfTime": {
    "message": "セルフ時間"
  },
  "panels/timeline/TimelineTreeView.ts | showHeaviestStack": {
    "message": "最も時間がかかったスタックを表示します"
  },
  "panels/timeline/TimelineTreeView.ts | timelineStack": {
    "message": "タイムライン スタック"
  },
  "panels/timeline/TimelineTreeView.ts | totalTime": {
    "message": "合計時間"
  },
  "panels/timeline/TimelineTreeView.ts | unattributed": {
    "message": "[出典不明]"
  },
  "panels/timeline/TimelineTreeView.ts | useRegularExpression": {
    "message": "正規表現を使用"
  },
  "panels/timeline/TimelineTreeView.ts | vRuntime": {
    "message": "[V8 ランタイム]"
  },
  "panels/timeline/TimelineUIUtils.ts | FromCache": {
    "message": " （キャッシュから）"
  },
  "panels/timeline/TimelineUIUtils.ts | FromMemoryCache": {
    "message": " （メモリ キャッシュから）"
  },
  "panels/timeline/TimelineUIUtils.ts | FromPush": {
    "message": " （プッシュから）"
  },
  "panels/timeline/TimelineUIUtils.ts | FromServiceWorker": {
    "message": " （service workerから）"
  },
  "panels/timeline/TimelineUIUtils.ts | SSSResourceLoading": {
    "message": " （{PH1} {PH2} + {PH3} リソース読み込み）"
  },
  "panels/timeline/TimelineUIUtils.ts | UnknownNode": {
    "message": "[ 不明なノード ]"
  },
  "panels/timeline/TimelineUIUtils.ts | aggregatedTime": {
    "message": "合計時間"
  },
  "panels/timeline/TimelineUIUtils.ts | allottedTime": {
    "message": "割り当てられた時間"
  },
  "panels/timeline/TimelineUIUtils.ts | animation": {
    "message": "アニメーション"
  },
  "panels/timeline/TimelineUIUtils.ts | animationFrameFired": {
    "message": "アニメーション フレームの呼び出し"
  },
  "panels/timeline/TimelineUIUtils.ts | animationFrameRequested": {
    "message": "アニメーション フレームのリクエスト"
  },
  "panels/timeline/TimelineUIUtils.ts | async": {
    "message": "非同期"
  },
  "panels/timeline/TimelineUIUtils.ts | asyncTask": {
    "message": "非同期タスク"
  },
  "panels/timeline/TimelineUIUtils.ts | cacheModule": {
    "message": "モジュール コードのキャッシュ"
  },
  "panels/timeline/TimelineUIUtils.ts | cacheScript": {
    "message": "スクリプト コードのキャッシュ"
  },
  "panels/timeline/TimelineUIUtils.ts | cachedWasmModule": {
    "message": "キャッシュに保存された Wasm モジュール"
  },
  "panels/timeline/TimelineUIUtils.ts | callStacks": {
    "message": "コールスタック"
  },
  "panels/timeline/TimelineUIUtils.ts | callbackFunction": {
    "message": "コールバック関数"
  },
  "panels/timeline/TimelineUIUtils.ts | callbackId": {
    "message": "コールバック ID"
  },
  "panels/timeline/TimelineUIUtils.ts | cancelAnimationFrame": {
    "message": "アニメーション フレームをキャンセル"
  },
  "panels/timeline/TimelineUIUtils.ts | cancelIdleCallback": {
    "message": "アイドル状態のコールバックのキャンセル"
  },
  "panels/timeline/TimelineUIUtils.ts | collected": {
    "message": "収集済み"
  },
  "panels/timeline/TimelineUIUtils.ts | commit": {
    "message": "コミット"
  },
  "panels/timeline/TimelineUIUtils.ts | compilationCacheKind": {
    "message": "コンパイル キャッシュの種類"
  },
  "panels/timeline/TimelineUIUtils.ts | compilationCacheSize": {
    "message": "コンパイル キャッシュ サイズ"
  },
  "panels/timeline/TimelineUIUtils.ts | compilationCacheStatus": {
    "message": "コンパイル キャッシュのステータス"
  },
  "panels/timeline/TimelineUIUtils.ts | compile": {
    "message": "コンパイル"
  },
  "panels/timeline/TimelineUIUtils.ts | compileCode": {
    "message": "コードのコンパイル"
  },
  "panels/timeline/TimelineUIUtils.ts | compileModule": {
    "message": "モジュールのコンパイル"
  },
  "panels/timeline/TimelineUIUtils.ts | compileScript": {
    "message": "スクリプトのコンパイル"
  },
  "panels/timeline/TimelineUIUtils.ts | compiledWasmModule": {
    "message": "コンパイル済みの Wasm モジュール"
  },
  "panels/timeline/TimelineUIUtils.ts | compositeLayers": {
    "message": "レイヤの合成"
  },
  "panels/timeline/TimelineUIUtils.ts | computeIntersections": {
    "message": "交差の計算"
  },
  "panels/timeline/TimelineUIUtils.ts | consoleTime": {
    "message": "コンソール時間"
  },
  "panels/timeline/TimelineUIUtils.ts | consumedCacheSize": {
    "message": "消費キャッシュ サイズ"
  },
  "panels/timeline/TimelineUIUtils.ts | createWebsocket": {
    "message": "WebSocket の作成"
  },
  "panels/timeline/TimelineUIUtils.ts | cumulativeLayoutShifts": {
    "message": "Cumulative Layout Shift"
  },
  "panels/timeline/TimelineUIUtils.ts | cumulativeScore": {
    "message": "累積スコア"
  },
  "panels/timeline/TimelineUIUtils.ts | currentClusterId": {
    "message": "現在のクラスタ ID"
  },
  "panels/timeline/TimelineUIUtils.ts | currentClusterScore": {
    "message": "現在のクラスタスコア"
  },
  "panels/timeline/TimelineUIUtils.ts | decodedBody": {
    "message": "デコード済みの本文"
  },
  "panels/timeline/TimelineUIUtils.ts | decrypt": {
    "message": "復号"
  },
  "panels/timeline/TimelineUIUtils.ts | decryptReply": {
    "message": "返信の復号"
  },
  "panels/timeline/TimelineUIUtils.ts | deserializeCodeCache": {
    "message": "コード キャッシュの逆シリアル化"
  },
  "panels/timeline/TimelineUIUtils.ts | destroyWebsocket": {
    "message": "WebSocket の破棄"
  },
  "panels/timeline/TimelineUIUtils.ts | details": {
    "message": "詳細"
  },
  "panels/timeline/TimelineUIUtils.ts | digest": {
    "message": "ダイジェスト"
  },
  "panels/timeline/TimelineUIUtils.ts | digestReply": {
    "message": "ダイジェストの返信"
  },
  "panels/timeline/TimelineUIUtils.ts | dimensions": {
    "message": "サイズ"
  },
  "panels/timeline/TimelineUIUtils.ts | domGc": {
    "message": "DOM GC"
  },
  "panels/timeline/TimelineUIUtils.ts | domcontentloadedEvent": {
    "message": "DOMContentLoaded イベント"
  },
  "panels/timeline/TimelineUIUtils.ts | drawFrame": {
    "message": "フレームを描画"
  },
  "panels/timeline/TimelineUIUtils.ts | duration": {
    "message": "所要時間"
  },
  "panels/timeline/TimelineUIUtils.ts | eagerCompile": {
    "message": "すべての関数を先行コンパイルしています"
  },
  "panels/timeline/TimelineUIUtils.ts | elementsAffected": {
    "message": "影響を受ける要素"
  },
  "panels/timeline/TimelineUIUtils.ts | embedderCallback": {
    "message": "埋め込みコールバック"
  },
  "panels/timeline/TimelineUIUtils.ts | emptyPlaceholder": {
    "message": "{PH1}"
  },
  "panels/timeline/TimelineUIUtils.ts | encodedData": {
    "message": "エンコードされたデータ"
  },
  "panels/timeline/TimelineUIUtils.ts | encrypt": {
    "message": "暗号化"
  },
  "panels/timeline/TimelineUIUtils.ts | encryptReply": {
    "message": "返信の暗号化"
  },
  "panels/timeline/TimelineUIUtils.ts | evaluateModule": {
    "message": "モジュールの評価"
  },
  "panels/timeline/TimelineUIUtils.ts | evaluateScript": {
    "message": "スクリプトの評価"
  },
  "panels/timeline/TimelineUIUtils.ts | event": {
    "message": "イベント"
  },
  "panels/timeline/TimelineUIUtils.ts | eventTiming": {
    "message": "イベントのタイミング"
  },
  "panels/timeline/TimelineUIUtils.ts | evolvedClsLink": {
    "message": "更新"
  },
  "panels/timeline/TimelineUIUtils.ts | experience": {
    "message": "エクスペリエンス"
  },
  "panels/timeline/TimelineUIUtils.ts | failedToLoadScriptFromCache": {
    "message": "キャッシュからのスクリプト読み込み失敗"
  },
  "panels/timeline/TimelineUIUtils.ts | finishLoading": {
    "message": "読み込みの終了"
  },
  "panels/timeline/TimelineUIUtils.ts | fireIdleCallback": {
    "message": "アイドル状態のコールバックの呼び出し"
  },
  "panels/timeline/TimelineUIUtils.ts | firstContentfulPaint": {
    "message": "First Contentful Paint"
  },
  "panels/timeline/TimelineUIUtils.ts | firstInvalidated": {
    "message": "最初の無効化"
  },
  "panels/timeline/TimelineUIUtils.ts | firstLayoutInvalidation": {
    "message": "最初のレイアウトの無効化"
  },
  "panels/timeline/TimelineUIUtils.ts | firstPaint": {
    "message": "First Paint"
  },
  "panels/timeline/TimelineUIUtils.ts | frame": {
    "message": "フレーム"
  },
  "panels/timeline/TimelineUIUtils.ts | frameStart": {
    "message": "フレーム開始"
  },
  "panels/timeline/TimelineUIUtils.ts | frameStartMainThread": {
    "message": "フレーム開始（メインスレッド）"
  },
  "panels/timeline/TimelineUIUtils.ts | frameStartedLoading": {
    "message": "フレームの読み込み開始"
  },
  "panels/timeline/TimelineUIUtils.ts | function": {
    "message": "機能"
  },
  "panels/timeline/TimelineUIUtils.ts | functionCall": {
    "message": "関数呼び出し"
  },
  "panels/timeline/TimelineUIUtils.ts | gcEvent": {
    "message": "GC イベント"
  },
  "panels/timeline/TimelineUIUtils.ts | gpu": {
    "message": "GPU"
  },
  "panels/timeline/TimelineUIUtils.ts | hadRecentInput": {
    "message": "最近入力あり"
  },
  "panels/timeline/TimelineUIUtils.ts | hitTest": {
    "message": "ヒットテスト"
  },
  "panels/timeline/TimelineUIUtils.ts | idle": {
    "message": "アイドル状態"
  },
  "panels/timeline/TimelineUIUtils.ts | idleCallbackRequested": {
    "message": "アイドル状態のコールバックのリクエスト"
  },
  "panels/timeline/TimelineUIUtils.ts | imageDecode": {
    "message": "画像のデコード"
  },
  "panels/timeline/TimelineUIUtils.ts | imageResize": {
    "message": "画像のサイズ変更"
  },
  "panels/timeline/TimelineUIUtils.ts | imageUrl": {
    "message": "画像の URL"
  },
  "panels/timeline/TimelineUIUtils.ts | initialPriority": {
    "message": "初期優先度"
  },
  "panels/timeline/TimelineUIUtils.ts | initiator": {
    "message": "イニシエータ"
  },
  "panels/timeline/TimelineUIUtils.ts | inputDelay": {
    "message": "入力遅延"
  },
  "panels/timeline/TimelineUIUtils.ts | installTimer": {
    "message": "タイマーのインストール"
  },
  "panels/timeline/TimelineUIUtils.ts | interactionID": {
    "message": "ID"
  },
  "panels/timeline/TimelineUIUtils.ts | invalidateLayout": {
    "message": "レイアウトの無効化"
  },
  "panels/timeline/TimelineUIUtils.ts | invalidationWithCallFrame": {
    "message": "{PH1}（{PH2}）"
  },
  "panels/timeline/TimelineUIUtils.ts | invalidations": {
    "message": "無効化"
  },
  "panels/timeline/TimelineUIUtils.ts | invokedByTimeout": {
    "message": "タイムアウトで呼び出し"
  },
  "panels/timeline/TimelineUIUtils.ts | jsFrame": {
    "message": "JS フレーム"
  },
  "panels/timeline/TimelineUIUtils.ts | jsIdleFrame": {
    "message": "JS アイドル フレーム"
  },
  "panels/timeline/TimelineUIUtils.ts | jsRoot": {
    "message": "JS ルート"
  },
  "panels/timeline/TimelineUIUtils.ts | jsSystemFrame": {
    "message": "JS システム フレーム"
  },
  "panels/timeline/TimelineUIUtils.ts | largestContentfulPaint": {
    "message": "Largest Contentful Paint"
  },
  "panels/timeline/TimelineUIUtils.ts | layerRoot": {
    "message": "レイヤルート"
  },
  "panels/timeline/TimelineUIUtils.ts | layerize": {
    "message": "レイヤ化"
  },
  "panels/timeline/TimelineUIUtils.ts | layout": {
    "message": "レイアウト"
  },
  "panels/timeline/TimelineUIUtils.ts | layoutForced": {
    "message": "レイアウトの強制"
  },
  "panels/timeline/TimelineUIUtils.ts | layoutRoot": {
    "message": "レイアウト ルート"
  },
  "panels/timeline/TimelineUIUtils.ts | layoutShift": {
    "message": "レイアウト シフト"
  },
  "panels/timeline/TimelineUIUtils.ts | learnMore": {
    "message": "詳細"
  },
  "panels/timeline/TimelineUIUtils.ts | loadFromCache": {
    "message": "キャッシュから読み込み"
  },
  "panels/timeline/TimelineUIUtils.ts | loading": {
    "message": "読み込んでいます"
  },
  "panels/timeline/TimelineUIUtils.ts | location": {
    "message": "場所"
  },
  "panels/timeline/TimelineUIUtils.ts | majorGc": {
    "message": "メジャー GC"
  },
  "panels/timeline/TimelineUIUtils.ts | message": {
    "message": "メッセージ"
  },
  "panels/timeline/TimelineUIUtils.ts | mimeType": {
    "message": "MIME タイプ"
  },
  "panels/timeline/TimelineUIUtils.ts | minorGc": {
    "message": "マイナー GC"
  },
  "panels/timeline/TimelineUIUtils.ts | module": {
    "message": "モジュール"
  },
  "panels/timeline/TimelineUIUtils.ts | movedFrom": {
    "message": "移動元"
  },
  "panels/timeline/TimelineUIUtils.ts | movedTo": {
    "message": "移動先"
  },
  "panels/timeline/TimelineUIUtils.ts | networkRequest": {
    "message": "ネットワーク リクエスト"
  },
  "panels/timeline/TimelineUIUtils.ts | networkTransfer": {
    "message": "ネットワーク転送"
  },
  "panels/timeline/TimelineUIUtils.ts | no": {
    "message": "なし"
  },
  "panels/timeline/TimelineUIUtils.ts | nodesThatNeedLayout": {
    "message": "レイアウトが必要なノード"
  },
  "panels/timeline/TimelineUIUtils.ts | onloadEvent": {
    "message": "onload イベント"
  },
  "panels/timeline/TimelineUIUtils.ts | optimizeCode": {
    "message": "コードの最適化"
  },
  "panels/timeline/TimelineUIUtils.ts | other": {
    "message": "その他"
  },
  "panels/timeline/TimelineUIUtils.ts | ownerElement": {
    "message": "所有者要素"
  },
  "panels/timeline/TimelineUIUtils.ts | paint": {
    "message": "ペイント"
  },
  "panels/timeline/TimelineUIUtils.ts | paintImage": {
    "message": "画像のペイント"
  },
  "panels/timeline/TimelineUIUtils.ts | paintProfiler": {
    "message": "ペイント プロファイラ"
  },
  "panels/timeline/TimelineUIUtils.ts | paintSetup": {
    "message": "ペイントのセットアップ"
  },
  "panels/timeline/TimelineUIUtils.ts | painting": {
    "message": "ペイント"
  },
  "panels/timeline/TimelineUIUtils.ts | parse": {
    "message": "解析"
  },
  "panels/timeline/TimelineUIUtils.ts | parseAndCompile": {
    "message": "解析とコンパイル"
  },
  "panels/timeline/TimelineUIUtils.ts | parseHtml": {
    "message": "HTML の解析"
  },
  "panels/timeline/TimelineUIUtils.ts | parseStylesheet": {
    "message": "スタイルシートの解析"
  },
  "panels/timeline/TimelineUIUtils.ts | pendingFor": {
    "message": "保留"
  },
  "panels/timeline/TimelineUIUtils.ts | prePaint": {
    "message": "プリペイント"
  },
  "panels/timeline/TimelineUIUtils.ts | presentationDelay": {
    "message": "表示の遅延"
  },
  "panels/timeline/TimelineUIUtils.ts | preview": {
    "message": "プレビュー"
  },
  "panels/timeline/TimelineUIUtils.ts | priority": {
    "message": "優先度"
  },
  "panels/timeline/TimelineUIUtils.ts | processingTime": {
    "message": "処理時間"
  },
  "panels/timeline/TimelineUIUtils.ts | producedCacheSize": {
    "message": "生成されたキャッシュ サイズ"
  },
  "panels/timeline/TimelineUIUtils.ts | profilingOverhead": {
    "message": "プロファイリングのオーバーヘッド"
  },
  "panels/timeline/TimelineUIUtils.ts | range": {
    "message": "範囲"
  },
  "panels/timeline/TimelineUIUtils.ts | rasterizePaint": {
    "message": "ペイントのラスター化"
  },
  "panels/timeline/TimelineUIUtils.ts | recalculateStyle": {
    "message": "スタイルの再計算"
  },
  "panels/timeline/TimelineUIUtils.ts | recalculationForced": {
    "message": "再計算の強制"
  },
  "panels/timeline/TimelineUIUtils.ts | receiveData": {
    "message": "データの受信"
  },
  "panels/timeline/TimelineUIUtils.ts | receiveResponse": {
    "message": "レスポンスの受信"
  },
  "panels/timeline/TimelineUIUtils.ts | receiveWebsocketHandshake": {
    "message": "WebSocket handshake の受信"
  },
  "panels/timeline/TimelineUIUtils.ts | relatedNode": {
    "message": "関連ノード"
  },
  "panels/timeline/TimelineUIUtils.ts | removeTimer": {
    "message": "タイマーの削除"
  },
  "panels/timeline/TimelineUIUtils.ts | rendering": {
    "message": "レンダリング"
  },
  "panels/timeline/TimelineUIUtils.ts | repeats": {
    "message": "繰り返し"
  },
  "panels/timeline/TimelineUIUtils.ts | requestAnimationFrame": {
    "message": "アニメーション フレームをリクエスト"
  },
  "panels/timeline/TimelineUIUtils.ts | requestIdleCallback": {
    "message": "アイドル状態のコールバックのリクエスト"
  },
  "panels/timeline/TimelineUIUtils.ts | requestMainThreadFrame": {
    "message": "メインスレッド フレームのリクエスト"
  },
  "panels/timeline/TimelineUIUtils.ts | requestMethod": {
    "message": "リクエスト メソッド"
  },
  "panels/timeline/TimelineUIUtils.ts | reveal": {
    "message": "表示"
  },
  "panels/timeline/TimelineUIUtils.ts | runMicrotasks": {
    "message": "Microtasks の実行"
  },
  "panels/timeline/TimelineUIUtils.ts | sAtS": {
    "message": "{PH1}（{PH2}）"
  },
  "panels/timeline/TimelineUIUtils.ts | sAtSParentheses": {
    "message": "{PH1}（{PH2}）"
  },
  "panels/timeline/TimelineUIUtils.ts | sCLSInformation": {
    "message": "{PH1} はユーザー エクスペリエンスの低下につながります。この指標は最近{PH2}されました。"
  },
  "panels/timeline/TimelineUIUtils.ts | sChildren": {
    "message": "{PH1}（子）"
  },
  "panels/timeline/TimelineUIUtils.ts | sCollected": {
    "message": "{PH1} 収集済み"
  },
  "panels/timeline/TimelineUIUtils.ts | sOfS": {
    "message": "{PH1}/{PH2}"
  },
  "panels/timeline/TimelineUIUtils.ts | sS": {
    "message": "{PH1}: {PH2}"
  },
  "panels/timeline/TimelineUIUtils.ts | sSCurlyBrackets": {
    "message": "（{PH1}、{PH2}）"
  },
  "panels/timeline/TimelineUIUtils.ts | sSDimensions": {
    "message": "{PH1} × {PH2}"
  },
  "panels/timeline/TimelineUIUtils.ts | sSSquareBrackets": {
    "message": "{PH1} [{PH2}…]"
  },
  "panels/timeline/TimelineUIUtils.ts | sSelf": {
    "message": "{PH1}（セルフ）"
  },
  "panels/timeline/TimelineUIUtils.ts | sSs": {
    "message": "{PH1} [{PH2}…{PH3}]"
  },
  "panels/timeline/TimelineUIUtils.ts | scheduleStyleRecalculation": {
    "message": "スタイル再計算のスケジュール"
  },
  "panels/timeline/TimelineUIUtils.ts | score": {
    "message": "スコア"
  },
  "panels/timeline/TimelineUIUtils.ts | script": {
    "message": "スクリプト"
  },
  "panels/timeline/TimelineUIUtils.ts | scriptLoadedFromCache": {
    "message": "キャッシュから読み込まれたスクリプト"
  },
  "panels/timeline/TimelineUIUtils.ts | scriptNotEligible": {
    "message": "対象外のスクリプト"
  },
  "panels/timeline/TimelineUIUtils.ts | scripting": {
    "message": "スクリプト"
  },
  "panels/timeline/TimelineUIUtils.ts | scroll": {
    "message": "スクロール"
  },
  "panels/timeline/TimelineUIUtils.ts | selfTime": {
    "message": "セルフ時間"
  },
  "panels/timeline/TimelineUIUtils.ts | sendRequest": {
    "message": "リクエストの送信"
  },
  "panels/timeline/TimelineUIUtils.ts | sendWebsocketHandshake": {
    "message": "WebSocket handshake の送信"
  },
  "panels/timeline/TimelineUIUtils.ts | sign": {
    "message": "署名"
  },
  "panels/timeline/TimelineUIUtils.ts | signReply": {
    "message": "返信に署名"
  },
  "panels/timeline/TimelineUIUtils.ts | size": {
    "message": "サイズ"
  },
  "panels/timeline/TimelineUIUtils.ts | stackTrace": {
    "message": "スタック トレース"
  },
  "panels/timeline/TimelineUIUtils.ts | state": {
    "message": "状態"
  },
  "panels/timeline/TimelineUIUtils.ts | streamed": {
    "message": "ストリーミング"
  },
  "panels/timeline/TimelineUIUtils.ts | streamingCompileTask": {
    "message": "ストリーミング コンパイル タスク"
  },
  "panels/timeline/TimelineUIUtils.ts | streamingWasmResponse": {
    "message": "Wasm レスポンスのストリーミング"
  },
  "panels/timeline/TimelineUIUtils.ts | stylesheetUrl": {
    "message": "スタイルシートの URL"
  },
  "panels/timeline/TimelineUIUtils.ts | system": {
    "message": "システム"
  },
  "panels/timeline/TimelineUIUtils.ts | task": {
    "message": "タスク"
  },
  "panels/timeline/TimelineUIUtils.ts | timeSpentInRendering": {
    "message": "レンダリングの所要時間"
  },
  "panels/timeline/TimelineUIUtils.ts | timeout": {
    "message": "タイムアウト"
  },
  "panels/timeline/TimelineUIUtils.ts | timerFired": {
    "message": "タイマーの呼び出し"
  },
  "panels/timeline/TimelineUIUtils.ts | timerId": {
    "message": "タイマー ID"
  },
  "panels/timeline/TimelineUIUtils.ts | timerInstalled": {
    "message": "タイマーのインストール"
  },
  "panels/timeline/TimelineUIUtils.ts | timestamp": {
    "message": "タイムスタンプ"
  },
  "panels/timeline/TimelineUIUtils.ts | totalTime": {
    "message": "合計時間"
  },
  "panels/timeline/TimelineUIUtils.ts | type": {
    "message": "タイプ"
  },
  "panels/timeline/TimelineUIUtils.ts | updateLayer": {
    "message": "レイヤの更新"
  },
  "panels/timeline/TimelineUIUtils.ts | updateLayerTree": {
    "message": "レイヤツリーの更新"
  },
  "panels/timeline/TimelineUIUtils.ts | url": {
    "message": "URL"
  },
  "panels/timeline/TimelineUIUtils.ts | userTiming": {
    "message": "カスタム速度"
  },
  "panels/timeline/TimelineUIUtils.ts | verify": {
    "message": "確認"
  },
  "panels/timeline/TimelineUIUtils.ts | verifyReply": {
    "message": "返信の確認"
  },
  "panels/timeline/TimelineUIUtils.ts | waitingForNetwork": {
    "message": "ネットワーク接続を待機しています"
  },
  "panels/timeline/TimelineUIUtils.ts | warning": {
    "message": "警告"
  },
  "panels/timeline/TimelineUIUtils.ts | wasmModuleCacheHit": {
    "message": "Wasm モジュールのキャッシュ ヒット"
  },
  "panels/timeline/TimelineUIUtils.ts | wasmModuleCacheInvalid": {
    "message": "Wasm モジュールのキャッシュ無効"
  },
  "panels/timeline/TimelineUIUtils.ts | willSendRequest": {
    "message": "リクエストを送信予定"
  },
  "panels/timeline/TimelineUIUtils.ts | xhrLoad": {
    "message": "XHR の読み込み"
  },
  "panels/timeline/TimelineUIUtils.ts | xhrReadyStateChange": {
    "message": "XHR 準備完了状態の変更"
  },
  "panels/timeline/TimelineUIUtils.ts | yes": {
    "message": "はい"
  },
  "panels/timeline/TimingsTrackAppender.ts | timings": {
    "message": "タイミング"
  },
  "panels/timeline/UIDevtoolsUtils.ts | drawFrame": {
    "message": "フレームを描画"
  },
  "panels/timeline/UIDevtoolsUtils.ts | drawing": {
    "message": "描画"
  },
  "panels/timeline/UIDevtoolsUtils.ts | frameStart": {
    "message": "フレーム開始"
  },
  "panels/timeline/UIDevtoolsUtils.ts | idle": {
    "message": "アイドル状態"
  },
  "panels/timeline/UIDevtoolsUtils.ts | layout": {
    "message": "レイアウト"
  },
  "panels/timeline/UIDevtoolsUtils.ts | painting": {
    "message": "ペイント"
  },
  "panels/timeline/UIDevtoolsUtils.ts | rasterizing": {
    "message": "ラスター化"
  },
  "panels/timeline/UIDevtoolsUtils.ts | system": {
    "message": "システム"
  },
  "panels/timeline/components/DetailsView.ts | forcedReflow": {
    "message": "強制リフロー"
  },
  "panels/timeline/components/DetailsView.ts | idleCallbackExecutionExtended": {
    "message": "デッドラインを {PH1} 超えたアイドル状態のコールバックの実行"
  },
  "panels/timeline/components/DetailsView.ts | longInteractionINP": {
    "message": "長いインタラクション"
  },
  "panels/timeline/components/DetailsView.ts | longTask": {
    "message": "長時間のタスク"
  },
  "panels/timeline/components/DetailsView.ts | sIsALikelyPerformanceBottleneck": {
    "message": "{PH1}がパフォーマンスのボトルネックである可能性があります。"
  },
  "panels/timeline/components/DetailsView.ts | sIsLikelyPoorPageResponsiveness": {
    "message": "{PH1} は、ページの応答性が低いことを示します。"
  },
  "panels/timeline/components/DetailsView.ts | sTookS": {
    "message": "{PH1}​ の所要時間は {PH2}でした。"
  },
  "panels/timeline/components/DetailsView.ts | websocketProtocol": {
    "message": "WebSocket プロトコル"
  },
  "panels/timeline/components/InteractionBreakdown.ts | inputDelay": {
    "message": "入力遅延"
  },
  "panels/timeline/components/InteractionBreakdown.ts | presentationDelay": {
    "message": "表示の遅延"
  },
  "panels/timeline/components/InteractionBreakdown.ts | processingTime": {
    "message": "処理時間"
  },
  "panels/timeline/timeline-meta.ts | hideChromeFrameInLayersView": {
    "message": "[レイヤ] ビューで chrome フレームを非表示"
  },
  "panels/timeline/timeline-meta.ts | javascriptProfiler": {
    "message": "JavaScript プロファイラ"
  },
  "panels/timeline/timeline-meta.ts | loadProfile": {
    "message": "プロファイルを読み込みます…"
  },
  "panels/timeline/timeline-meta.ts | nextFrame": {
    "message": "次のフレーム"
  },
  "panels/timeline/timeline-meta.ts | nextRecording": {
    "message": "次の記録"
  },
  "panels/timeline/timeline-meta.ts | performance": {
    "message": "パフォーマンス"
  },
  "panels/timeline/timeline-meta.ts | previousFrame": {
    "message": "前のフレーム"
  },
  "panels/timeline/timeline-meta.ts | previousRecording": {
    "message": "前の記録"
  },
  "panels/timeline/timeline-meta.ts | record": {
    "message": "記録"
  },
  "panels/timeline/timeline-meta.ts | saveProfile": {
    "message": "プロファイルを保存します…"
  },
  "panels/timeline/timeline-meta.ts | showJavascriptProfiler": {
    "message": "JavaScript プロファイラを表示"
  },
  "panels/timeline/timeline-meta.ts | showPerformance": {
    "message": "パフォーマンスを表示"
  },
  "panels/timeline/timeline-meta.ts | showRecentTimelineSessions": {
    "message": "最近のタイムライン セッションを表示"
  },
  "panels/timeline/timeline-meta.ts | startProfilingAndReloadPage": {
    "message": "プロファイリングを開始してページを再読み込み"
  },
  "panels/timeline/timeline-meta.ts | startStopRecording": {
    "message": "記録を開始 / 停止"
  },
  "panels/timeline/timeline-meta.ts | stop": {
    "message": "停止"
  },
  "panels/web_audio/AudioContextContentBuilder.ts | callbackBufferSize": {
    "message": "コールバック バッファサイズ"
  },
  "panels/web_audio/AudioContextContentBuilder.ts | callbackInterval": {
    "message": "コールバック間隔"
  },
  "panels/web_audio/AudioContextContentBuilder.ts | currentTime": {
    "message": "現在の時刻"
  },
  "panels/web_audio/AudioContextContentBuilder.ts | maxOutputChannels": {
    "message": "最大出力チャンネル"
  },
  "panels/web_audio/AudioContextContentBuilder.ts | renderCapacity": {
    "message": "レンダリング容量"
  },
  "panels/web_audio/AudioContextContentBuilder.ts | sampleRate": {
    "message": "サンプルレート"
  },
  "panels/web_audio/AudioContextContentBuilder.ts | state": {
    "message": "状態"
  },
  "panels/web_audio/AudioContextSelector.ts | audioContextS": {
    "message": "オーディオ コンテキスト: {PH1}"
  },
  "panels/web_audio/AudioContextSelector.ts | noRecordings": {
    "message": "（記録なし）"
  },
  "panels/web_audio/WebAudioView.ts | openAPageThatUsesWebAudioApiTo": {
    "message": "Web Audio API を使用してモニタリングを開始するページを開きます。"
  },
  "panels/web_audio/web_audio-meta.ts | audio": {
    "message": "音声"
  },
  "panels/web_audio/web_audio-meta.ts | showWebaudio": {
    "message": "WebAudio を表示"
  },
  "panels/web_audio/web_audio-meta.ts | webaudio": {
    "message": "WebAudio"
  },
  "panels/webauthn/WebauthnPane.ts | actions": {
    "message": "アクション"
  },
  "panels/webauthn/WebauthnPane.ts | active": {
    "message": "有効"
  },
  "panels/webauthn/WebauthnPane.ts | add": {
    "message": "追加"
  },
  "panels/webauthn/WebauthnPane.ts | addAuthenticator": {
    "message": "認証器を追加"
  },
  "panels/webauthn/WebauthnPane.ts | authenticatorS": {
    "message": "認証器 {PH1}"
  },
  "panels/webauthn/WebauthnPane.ts | credentials": {
    "message": "認証情報"
  },
  "panels/webauthn/WebauthnPane.ts | editName": {
    "message": "名前を編集"
  },
  "panels/webauthn/WebauthnPane.ts | enableVirtualAuthenticator": {
    "message": "仮想認証器環境を有効にする"
  },
  "panels/webauthn/WebauthnPane.ts | enterNewName": {
    "message": "新しい名前を入力"
  },
  "panels/webauthn/WebauthnPane.ts | export": {
    "message": "エクスポート"
  },
  "panels/webauthn/WebauthnPane.ts | id": {
    "message": "ID"
  },
  "panels/webauthn/WebauthnPane.ts | isResident": {
    "message": "常駐"
  },
  "panels/webauthn/WebauthnPane.ts | learnMore": {
    "message": "詳細"
  },
  "panels/webauthn/WebauthnPane.ts | newAuthenticator": {
    "message": "新しい認証器"
  },
  "panels/webauthn/WebauthnPane.ts | no": {
    "message": "なし"
  },
  "panels/webauthn/WebauthnPane.ts | noCredentialsTryCallingSFromYour": {
    "message": "認証情報がありません。ご自身のウェブサイトから {PH1} を呼び出してみてください。"
  },
  "panels/webauthn/WebauthnPane.ts | privateKeypem": {
    "message": "Private key.pem"
  },
  "panels/webauthn/WebauthnPane.ts | protocol": {
    "message": "プロトコル"
  },
  "panels/webauthn/WebauthnPane.ts | remove": {
    "message": "削除"
  },
  "panels/webauthn/WebauthnPane.ts | rpId": {
    "message": "RP ID"
  },
  "panels/webauthn/WebauthnPane.ts | saveName": {
    "message": "名前を保存"
  },
  "panels/webauthn/WebauthnPane.ts | setSAsTheActiveAuthenticator": {
    "message": "{PH1} を有効な認証器として設定"
  },
  "panels/webauthn/WebauthnPane.ts | signCount": {
    "message": "署名数"
  },
  "panels/webauthn/WebauthnPane.ts | supportsLargeBlob": {
    "message": "大きな blob をサポートする"
  },
  "panels/webauthn/WebauthnPane.ts | supportsResidentKeys": {
    "message": "常駐キーをサポート"
  },
  "panels/webauthn/WebauthnPane.ts | supportsUserVerification": {
    "message": "ユーザー確認をサポート"
  },
  "panels/webauthn/WebauthnPane.ts | transport": {
    "message": "転送"
  },
  "panels/webauthn/WebauthnPane.ts | useWebauthnForPhishingresistant": {
    "message": "フィッシング耐性のある認証に WebAuthn を使用"
  },
  "panels/webauthn/WebauthnPane.ts | userHandle": {
    "message": "ユーザー ハンドル"
  },
  "panels/webauthn/WebauthnPane.ts | uuid": {
    "message": "UUID"
  },
  "panels/webauthn/WebauthnPane.ts | yes": {
    "message": "はい"
  },
  "panels/webauthn/webauthn-meta.ts | showWebauthn": {
    "message": "WebAuthn を表示"
  },
  "panels/webauthn/webauthn-meta.ts | webauthn": {
    "message": "WebAuthn"
  },
  "ui/components/data_grid/DataGrid.ts | enterToSort": {
    "message": "列の並べ替えのステータス: {PH1}。並べ替えフィルタを適用するには Enter キーを押してください"
  },
  "ui/components/data_grid/DataGrid.ts | headerOptions": {
    "message": "ヘッダー オプション"
  },
  "ui/components/data_grid/DataGrid.ts | resetColumns": {
    "message": "列をリセット"
  },
  "ui/components/data_grid/DataGrid.ts | sortAsc": {
    "message": "昇順"
  },
  "ui/components/data_grid/DataGrid.ts | sortBy": {
    "message": "並べ替え:"
  },
  "ui/components/data_grid/DataGrid.ts | sortDesc": {
    "message": "降順"
  },
  "ui/components/data_grid/DataGrid.ts | sortNone": {
    "message": "なし"
  },
  "ui/components/data_grid/DataGridController.ts | sortInAscendingOrder": {
    "message": "{PH1} を昇順で並べ替えました"
  },
  "ui/components/data_grid/DataGridController.ts | sortInDescendingOrder": {
    "message": "{PH1} を降順で並べ替えました"
  },
  "ui/components/data_grid/DataGridController.ts | sortingCanceled": {
    "message": "{PH1} の並べ替えをキャンセルしました"
  },
  "ui/components/dialogs/IconDialog.ts | close": {
    "message": "閉じる"
  },
  "ui/components/dialogs/ShortcutDialog.ts | close": {
    "message": "閉じる"
  },
  "ui/components/dialogs/ShortcutDialog.ts | dialogTitle": {
    "message": "キーボード ショートカット"
  },
  "ui/components/dialogs/ShortcutDialog.ts | showShortcutTitle": {
    "message": "ショートカットを表示"
  },
  "ui/components/diff_view/DiffView.ts | SkippingDMatchingLines": {
    "message": "（… {PH1} 件の一致行をスキップ …）"
  },
  "ui/components/diff_view/DiffView.ts | additions": {
    "message": "追加:"
  },
  "ui/components/diff_view/DiffView.ts | changesDiffViewer": {
    "message": "変更差分ビューア"
  },
  "ui/components/diff_view/DiffView.ts | deletions": {
    "message": "削除:"
  },
  "ui/components/issue_counter/IssueCounter.ts | breakingChanges": {
    "message": "{issueCount,plural, =1{# 件の互換性を破る変更}other{# 件の互換性を破る変更}}"
  },
  "ui/components/issue_counter/IssueCounter.ts | pageErrors": {
    "message": "{issueCount,plural, =1{# 件のページエラー}other{# 件のページエラー}}"
  },
  "ui/components/issue_counter/IssueCounter.ts | possibleImprovements": {
    "message": "{issueCount,plural, =1{# 件の改善の可能性あり}other{# 件の改善の可能性あり}}"
  },
  "ui/components/issue_counter/IssueLinkIcon.ts | clickToShowIssue": {
    "message": "問題をクリックして問題タブで表示します"
  },
  "ui/components/issue_counter/IssueLinkIcon.ts | clickToShowIssueWithTitle": {
    "message": "問題タブをクリックして開き、問題「{title}」を表示します"
  },
  "ui/components/issue_counter/IssueLinkIcon.ts | issueUnavailable": {
    "message": "現在、問題を表示できません"
  },
  "ui/components/markdown_view/CodeBlock.ts | copied": {
    "message": "クリップボードにコピーしました"
  },
  "ui/components/markdown_view/CodeBlock.ts | copy": {
    "message": "コードをコピー"
  },
  "ui/components/panel_feedback/FeedbackButton.ts | feedback": {
    "message": "フィードバック"
  },
  "ui/components/panel_feedback/PanelFeedback.ts | previewFeature": {
    "message": "プレビュー機能"
  },
  "ui/components/panel_feedback/PanelFeedback.ts | previewText": {
    "message": "現在、この機能に全力で取り組んでおり、皆様からのご意見をお待ちしております。"
  },
  "ui/components/panel_feedback/PanelFeedback.ts | previewTextFeedbackLink": {
    "message": "ご感想をお聞かせください。"
  },
  "ui/components/panel_feedback/PanelFeedback.ts | videoAndDocumentation": {
    "message": "動画とドキュメント"
  },
  "ui/components/panel_feedback/PreviewToggle.ts | learnMoreLink": {
    "message": "詳細"
  },
  "ui/components/panel_feedback/PreviewToggle.ts | previewTextFeedbackLink": {
    "message": "ご感想をお聞かせください。"
  },
  "ui/components/panel_feedback/PreviewToggle.ts | shortFeedbackLink": {
    "message": "フィードバックを送信"
  },
  "ui/components/request_link_icon/RequestLinkIcon.ts | clickToShowRequestInTheNetwork": {
    "message": "ネットワーク パネルをクリックして開き、URL「{url}」のリクエストを表示します"
  },
  "ui/components/request_link_icon/RequestLinkIcon.ts | requestUnavailableInTheNetwork": {
    "message": "ネットワーク パネルでリクエストを利用できません。検査ページの再読み込みをお試しください"
  },
  "ui/components/request_link_icon/RequestLinkIcon.ts | shortenedURL": {
    "message": "短縮 URL"
  },
  "ui/components/survey_link/SurveyLink.ts | anErrorOccurredWithTheSurvey": {
    "message": "アンケートでエラーが発生しました"
  },
  "ui/components/survey_link/SurveyLink.ts | openingSurvey": {
    "message": "アンケートを開いています…"
  },
  "ui/components/survey_link/SurveyLink.ts | thankYouForYourFeedback": {
    "message": "ご意見をお寄せいただき、ありがとうございました"
  },
  "ui/components/text_editor/config.ts | codeEditor": {
    "message": "コードエディタ"
  },
  "ui/components/text_editor/config.ts | sSuggestionSOfS": {
    "message": "{PH1}、候補 {PH2}/{PH3}"
  },
  "ui/legacy/ActionRegistration.ts | background_services": {
    "message": "バックグラウンド サービス"
  },
  "ui/legacy/ActionRegistration.ts | changes": {
    "message": "変更"
  },
  "ui/legacy/ActionRegistration.ts | console": {
    "message": "コンソール"
  },
  "ui/legacy/ActionRegistration.ts | debugger": {
    "message": "デバッガ"
  },
  "ui/legacy/ActionRegistration.ts | drawer": {
    "message": "ドロワー"
  },
  "ui/legacy/ActionRegistration.ts | elements": {
    "message": "要素"
  },
  "ui/legacy/ActionRegistration.ts | global": {
    "message": "グローバル"
  },
  "ui/legacy/ActionRegistration.ts | help": {
    "message": "ヘルプ"
  },
  "ui/legacy/ActionRegistration.ts | javascript_profiler": {
    "message": "JavaScript プロファイラ"
  },
  "ui/legacy/ActionRegistration.ts | layers": {
    "message": "レイヤ"
  },
  "ui/legacy/ActionRegistration.ts | memory": {
    "message": "メモリ"
  },
  "ui/legacy/ActionRegistration.ts | mobile": {
    "message": "モバイル"
  },
  "ui/legacy/ActionRegistration.ts | navigation": {
    "message": "ナビゲーション"
  },
  "ui/legacy/ActionRegistration.ts | network": {
    "message": "ネットワーク"
  },
  "ui/legacy/ActionRegistration.ts | performance": {
    "message": "パフォーマンス"
  },
  "ui/legacy/ActionRegistration.ts | recorder": {
    "message": "レコーダー"
  },
  "ui/legacy/ActionRegistration.ts | rendering": {
    "message": "レンダリング"
  },
  "ui/legacy/ActionRegistration.ts | resources": {
    "message": "リソース"
  },
  "ui/legacy/ActionRegistration.ts | screenshot": {
    "message": "スクリーンショット"
  },
  "ui/legacy/ActionRegistration.ts | settings": {
    "message": "設定"
  },
  "ui/legacy/ActionRegistration.ts | sources": {
    "message": "ソース"
  },
  "ui/legacy/DockController.ts | close": {
    "message": "閉じる"
  },
  "ui/legacy/DockController.ts | devToolsDockedTo": {
    "message": "DevTools を {PH1} に固定しました"
  },
  "ui/legacy/DockController.ts | devtoolsUndocked": {
    "message": "DevTools の固定を解除しました"
  },
  "ui/legacy/DockController.ts | dockToBottom": {
    "message": "下部に固定"
  },
  "ui/legacy/DockController.ts | dockToLeft": {
    "message": "左に固定"
  },
  "ui/legacy/DockController.ts | dockToRight": {
    "message": "右に固定"
  },
  "ui/legacy/DockController.ts | undockIntoSeparateWindow": {
    "message": "固定を解除して別ウィンドウに表示"
  },
  "ui/legacy/EmptyWidget.ts | learnMore": {
    "message": "詳細"
  },
  "ui/legacy/FilterBar.ts | allStrings": {
    "message": "すべて"
  },
  "ui/legacy/FilterBar.ts | clearFilter": {
    "message": "入力内容を削除"
  },
  "ui/legacy/FilterBar.ts | egSmalldUrlacomb": {
    "message": "例: /small[d]+/ url:a.com/b"
  },
  "ui/legacy/FilterBar.ts | filter": {
    "message": "フィルタ"
  },
  "ui/legacy/FilterBar.ts | sclickToSelectMultipleTypes": {
    "message": "{PH1} を押しながらクリックして、複数のタイプを選択します"
  },
  "ui/legacy/Infobar.ts | close": {
    "message": "閉じる"
  },
  "ui/legacy/Infobar.ts | dontShowAgain": {
    "message": "次回から表示しない"
  },
  "ui/legacy/Infobar.ts | showMore": {
    "message": "さらに表示"
  },
  "ui/legacy/InspectorView.ts | closeDrawer": {
    "message": "ドロワーを閉じる"
  },
  "ui/legacy/InspectorView.ts | devToolsLanguageMissmatch": {
    "message": "{PH1}で DevTools をご利用いただけるようになりました。"
  },
  "ui/legacy/InspectorView.ts | drawer": {
    "message": "ツールドロワー"
  },
  "ui/legacy/InspectorView.ts | drawerHidden": {
    "message": "ドロワーが非表示になっています"
  },
  "ui/legacy/InspectorView.ts | drawerShown": {
    "message": "ドロワーが表示されています"
  },
  "ui/legacy/InspectorView.ts | mainToolbar": {
    "message": "メインのツールバー"
  },
  "ui/legacy/InspectorView.ts | moreTools": {
    "message": "その他のツール"
  },
  "ui/legacy/InspectorView.ts | moveToBottom": {
    "message": "一番下に移動"
  },
  "ui/legacy/InspectorView.ts | moveToTop": {
    "message": "一番上に移動"
  },
  "ui/legacy/InspectorView.ts | panels": {
    "message": "パネル"
  },
  "ui/legacy/InspectorView.ts | reloadDevtools": {
    "message": "DevTools を再読み込み"
  },
  "ui/legacy/InspectorView.ts | selectFolder": {
    "message": "フォルダを選択"
  },
  "ui/legacy/InspectorView.ts | selectOverrideFolder": {
    "message": "オーバーライド ファイルを保存するフォルダを選択してください。"
  },
  "ui/legacy/InspectorView.ts | setToBrowserLanguage": {
    "message": "Chrome の言語に常に合わせる"
  },
  "ui/legacy/InspectorView.ts | setToSpecificLanguage": {
    "message": "DevTools を{PH1}に切り替える"
  },
  "ui/legacy/ListWidget.ts | addString": {
    "message": "追加"
  },
  "ui/legacy/ListWidget.ts | cancelString": {
    "message": "キャンセル"
  },
  "ui/legacy/ListWidget.ts | changesSaved": {
    "message": "アイテムの変更を保存しました"
  },
  "ui/legacy/ListWidget.ts | editString": {
    "message": "編集"
  },
  "ui/legacy/ListWidget.ts | removeString": {
    "message": "削除"
  },
  "ui/legacy/ListWidget.ts | removedItem": {
    "message": "アイテムを削除しました"
  },
  "ui/legacy/ListWidget.ts | saveString": {
    "message": "保存"
  },
  "ui/legacy/RemoteDebuggingTerminatedScreen.ts | debuggingConnectionWasClosed": {
    "message": "デバッグ接続を終了しました。理由: "
  },
  "ui/legacy/RemoteDebuggingTerminatedScreen.ts | reconnectDevtools": {
    "message": "DevTools を再接続"
  },
  "ui/legacy/RemoteDebuggingTerminatedScreen.ts | reconnectWhenReadyByReopening": {
    "message": "DevTools を再び開いて準備ができたら再接続する"
  },
  "ui/legacy/SearchableView.ts | cancel": {
    "message": "キャンセル"
  },
  "ui/legacy/SearchableView.ts | dMatches": {
    "message": "{PH1} 件の一致"
  },
  "ui/legacy/SearchableView.ts | dOfD": {
    "message": "{PH1}/{PH2}"
  },
  "ui/legacy/SearchableView.ts | findString": {
    "message": "検索"
  },
  "ui/legacy/SearchableView.ts | matchCase": {
    "message": "大文字と小文字を区別"
  },
  "ui/legacy/SearchableView.ts | matchString": {
    "message": "1 件の一致"
  },
  "ui/legacy/SearchableView.ts | replace": {
    "message": "置換"
  },
  "ui/legacy/SearchableView.ts | replaceAll": {
    "message": "すべて置換"
  },
  "ui/legacy/SearchableView.ts | searchNext": {
    "message": "次を検索"
  },
  "ui/legacy/SearchableView.ts | searchPrevious": {
    "message": "前を検索"
  },
  "ui/legacy/SearchableView.ts | useRegularExpression": {
    "message": "正規表現を使用"
  },
  "ui/legacy/SettingsUI.ts | oneOrMoreSettingsHaveChanged": {
    "message": "1 つ以上の設定が変更されました。変更を有効にするには再読み込みが必要です。"
  },
  "ui/legacy/SettingsUI.ts | srequiresReload": {
    "message": "* 再読み込みが必要"
  },
  "ui/legacy/SoftContextMenu.ts | checked": {
    "message": "オン"
  },
  "ui/legacy/SoftContextMenu.ts | sS": {
    "message": "{PH1}、{PH2}"
  },
  "ui/legacy/SoftContextMenu.ts | sSS": {
    "message": "{PH1}、{PH2}、{PH3}"
  },
  "ui/legacy/SoftContextMenu.ts | unchecked": {
    "message": "オフ"
  },
  "ui/legacy/SoftDropDown.ts | noItemSelected": {
    "message": "（アイテムが選択されていません）"
  },
  "ui/legacy/SuggestBox.ts | sSuggestionSOfS": {
    "message": "{PH1}、候補 {PH2}/{PH3}"
  },
  "ui/legacy/SuggestBox.ts | sSuggestionSSelected": {
    "message": "{PH1}、候補を選択しました"
  },
  "ui/legacy/TabbedPane.ts | close": {
    "message": "閉じる"
  },
  "ui/legacy/TabbedPane.ts | closeAll": {
    "message": "すべて閉じる"
  },
  "ui/legacy/TabbedPane.ts | closeOthers": {
    "message": "他を閉じる"
  },
  "ui/legacy/TabbedPane.ts | closeS": {
    "message": "{PH1} を閉じる"
  },
  "ui/legacy/TabbedPane.ts | closeTabsToTheRight": {
    "message": "右側のタブを閉じる"
  },
  "ui/legacy/TabbedPane.ts | moreTabs": {
    "message": "その他のタブ"
  },
  "ui/legacy/TabbedPane.ts | previewFeature": {
    "message": "プレビュー機能"
  },
  "ui/legacy/TargetCrashedScreen.ts | devtoolsWasDisconnectedFromThe": {
    "message": "DevTools とこのページの接続が切断されました。"
  },
  "ui/legacy/TargetCrashedScreen.ts | oncePageIsReloadedDevtoolsWill": {
    "message": "ページの再読み込み後、DevTools は自動的に再接続します。"
  },
  "ui/legacy/Toolbar.ts | clearInput": {
    "message": "入力内容を削除"
  },
  "ui/legacy/Toolbar.ts | notPressed": {
    "message": "オフです"
  },
  "ui/legacy/Toolbar.ts | pressed": {
    "message": "オンです"
  },
  "ui/legacy/UIUtils.ts | anonymous": {
    "message": "（匿名）"
  },
  "ui/legacy/UIUtils.ts | anotherProfilerIsAlreadyActive": {
    "message": "別のプロファイラがすでに有効です"
  },
  "ui/legacy/UIUtils.ts | asyncCall": {
    "message": "非同期呼び出し"
  },
  "ui/legacy/UIUtils.ts | cancel": {
    "message": "キャンセル"
  },
  "ui/legacy/UIUtils.ts | close": {
    "message": "閉じる"
  },
  "ui/legacy/UIUtils.ts | copyFileName": {
    "message": "ファイル名をコピー"
  },
  "ui/legacy/UIUtils.ts | copyLinkAddress": {
    "message": "リンクのアドレスをコピー"
  },
  "ui/legacy/UIUtils.ts | ok": {
    "message": "OK"
  },
  "ui/legacy/UIUtils.ts | openInNewTab": {
    "message": "新しいタブで開く"
  },
  "ui/legacy/UIUtils.ts | promiseRejectedAsync": {
    "message": "promise のリジェクト（非同期）"
  },
  "ui/legacy/UIUtils.ts | promiseResolvedAsync": {
    "message": "promise の解決（非同期）"
  },
  "ui/legacy/UIUtils.ts | sAsync": {
    "message": "{PH1}（非同期）"
  },
  "ui/legacy/ViewManager.ts | sPanel": {
    "message": "[{PH1}] パネル"
  },
  "ui/legacy/ViewRegistration.ts | drawer": {
    "message": "ドロワー"
  },
  "ui/legacy/ViewRegistration.ts | drawer_sidebar": {
    "message": "ドロワー サイドバー"
  },
  "ui/legacy/ViewRegistration.ts | elements": {
    "message": "要素"
  },
  "ui/legacy/ViewRegistration.ts | network": {
    "message": "ネットワーク"
  },
  "ui/legacy/ViewRegistration.ts | panel": {
    "message": "パネル"
  },
  "ui/legacy/ViewRegistration.ts | settings": {
    "message": "設定"
  },
  "ui/legacy/ViewRegistration.ts | sources": {
    "message": "ソース"
  },
  "ui/legacy/components/color_picker/ContrastDetails.ts | aa": {
    "message": "AA"
  },
  "ui/legacy/components/color_picker/ContrastDetails.ts | aaa": {
    "message": "AAA"
  },
  "ui/legacy/components/color_picker/ContrastDetails.ts | apca": {
    "message": "APCA"
  },
  "ui/legacy/components/color_picker/ContrastDetails.ts | contrastRatio": {
    "message": "コントラスト比"
  },
  "ui/legacy/components/color_picker/ContrastDetails.ts | noContrastInformationAvailable": {
    "message": "利用可能なコントラスト情報なし"
  },
  "ui/legacy/components/color_picker/ContrastDetails.ts | pickBackgroundColor": {
    "message": "背景色を選択"
  },
  "ui/legacy/components/color_picker/ContrastDetails.ts | placeholderWithColon": {
    "message": ": {PH1}"
  },
  "ui/legacy/components/color_picker/ContrastDetails.ts | showLess": {
    "message": "折りたたむ"
  },
  "ui/legacy/components/color_picker/ContrastDetails.ts | showMore": {
    "message": "もっと見る"
  },
  "ui/legacy/components/color_picker/ContrastDetails.ts | toggleBackgroundColorPicker": {
    "message": "背景色選択ツールを切り替え"
  },
  "ui/legacy/components/color_picker/ContrastDetails.ts | useSuggestedColorStoFixLow": {
    "message": "色候補 {PH1} を使用して低コントラストを修正"
  },
  "ui/legacy/components/color_picker/FormatPickerContextMenu.ts | colorClippedTooltipText": {
    "message": "フォーマットの色域に合わせて、この色はクリップされました。実際の結果は {PH1} でした"
  },
  "ui/legacy/components/color_picker/Spectrum.ts | addToPalette": {
    "message": "パレットに追加"
  },
  "ui/legacy/components/color_picker/Spectrum.ts | changeAlpha": {
    "message": "アルファを変更"
  },
  "ui/legacy/components/color_picker/Spectrum.ts | changeColorFormat": {
    "message": "色形式を変更"
  },
  "ui/legacy/components/color_picker/Spectrum.ts | changeHue": {
    "message": "色相を変更"
  },
  "ui/legacy/components/color_picker/Spectrum.ts | clearPalette": {
    "message": "パレットを消去"
  },
  "ui/legacy/components/color_picker/Spectrum.ts | colorPalettes": {
    "message": "カラーパレット"
  },
  "ui/legacy/components/color_picker/Spectrum.ts | colorS": {
    "message": "色「{PH1}」"
  },
  "ui/legacy/components/color_picker/Spectrum.ts | copyColorToClipboard": {
    "message": "色をクリップボードにコピー"
  },
  "ui/legacy/components/color_picker/Spectrum.ts | hex": {
    "message": "16 進数"
  },
  "ui/legacy/components/color_picker/Spectrum.ts | longclickOrLongpressSpaceToShow": {
    "message": "スペースを長押しして {PH1} の代替シェードを表示"
  },
  "ui/legacy/components/color_picker/Spectrum.ts | pressArrowKeysMessage": {
    "message": "色見本の位置を移動するには矢印キーを押します（必要に応じて修飾キーも使用します）。Shift キーを押しながら矢印キーを押すと位置が大きく移動します。Ctrl キーを使うと移動が小さくなり、Alt キーを使うとさらに小さくなります。"
  },
  "ui/legacy/components/color_picker/Spectrum.ts | previewPalettes": {
    "message": "パレットをプレビュー"
  },
  "ui/legacy/components/color_picker/Spectrum.ts | removeAllToTheRight": {
    "message": "右側をすべて削除"
  },
  "ui/legacy/components/color_picker/Spectrum.ts | removeColor": {
    "message": "色をクリア"
  },
  "ui/legacy/components/color_picker/Spectrum.ts | returnToColorPicker": {
    "message": "カラー選択ツールに戻る"
  },
  "ui/legacy/components/color_picker/Spectrum.ts | sInS": {
    "message": "{PH1}（{PH2}）"
  },
  "ui/legacy/components/color_picker/Spectrum.ts | toggleColorPicker": {
    "message": "スポイト [{PH1}]"
  },
  "ui/legacy/components/cookie_table/CookiesTable.ts | cookies": {
    "message": "Cookie"
  },
  "ui/legacy/components/cookie_table/CookiesTable.ts | editableCookies": {
    "message": "編集可能な Cookie"
  },
  "ui/legacy/components/cookie_table/CookiesTable.ts | na": {
    "message": "なし"
  },
  "ui/legacy/components/cookie_table/CookiesTable.ts | name": {
    "message": "名前"
  },
  "ui/legacy/components/cookie_table/CookiesTable.ts | opaquePartitionKey": {
    "message": "（不透明）"
  },
  "ui/legacy/components/cookie_table/CookiesTable.ts | session": {
    "message": "セッション"
  },
  "ui/legacy/components/cookie_table/CookiesTable.ts | showIssueAssociatedWithThis": {
    "message": "この Cookie に関連付けられている問題を表示"
  },
  "ui/legacy/components/cookie_table/CookiesTable.ts | showRequestsWithThisCookie": {
    "message": "この Cookie を使用したリクエストを表示"
  },
  "ui/legacy/components/cookie_table/CookiesTable.ts | size": {
    "message": "サイズ"
  },
  "ui/legacy/components/cookie_table/CookiesTable.ts | sourcePortTooltip": {
    "message": "Cookie が設定されたソースポート（範囲 1～65535）を表示します。ポートが不明の名前は、-1 が表示されます。"
  },
  "ui/legacy/components/cookie_table/CookiesTable.ts | sourceSchemeTooltip": {
    "message": "Cookie が設定されたソーススキーム（Secure、NonSecure）を表示します。スキームが不明な場合は、Unset が表示されます。"
  },
  "ui/legacy/components/cookie_table/CookiesTable.ts | timeAfter": {
    "message": "{date}　後"
  },
  "ui/legacy/components/cookie_table/CookiesTable.ts | timeAfterTooltip": {
    "message": "有効期限のタイムスタンプは {seconds} で、{date} 後の日に該当します"
  },
  "ui/legacy/components/cookie_table/CookiesTable.ts | value": {
    "message": "値"
  },
  "ui/legacy/components/data_grid/DataGrid.ts | addNew": {
    "message": "新たに追加"
  },
  "ui/legacy/components/data_grid/DataGrid.ts | checked": {
    "message": "オン"
  },
  "ui/legacy/components/data_grid/DataGrid.ts | collapsed": {
    "message": "閉じています"
  },
  "ui/legacy/components/data_grid/DataGrid.ts | delete": {
    "message": "削除"
  },
  "ui/legacy/components/data_grid/DataGrid.ts | editS": {
    "message": "「{PH1}」を編集"
  },
  "ui/legacy/components/data_grid/DataGrid.ts | emptyRowCreated": {
    "message": "表に空白の行が作成されました。ダブルクリックするかコンテキスト メニューを使用して編集できます。"
  },
  "ui/legacy/components/data_grid/DataGrid.ts | expanded": {
    "message": "展開されています"
  },
  "ui/legacy/components/data_grid/DataGrid.ts | headerOptions": {
    "message": "ヘッダー オプション"
  },
  "ui/legacy/components/data_grid/DataGrid.ts | levelS": {
    "message": "レベル {PH1}"
  },
  "ui/legacy/components/data_grid/DataGrid.ts | refresh": {
    "message": "更新"
  },
  "ui/legacy/components/data_grid/DataGrid.ts | resetColumns": {
    "message": "列をリセット"
  },
  "ui/legacy/components/data_grid/DataGrid.ts | rowsS": {
    "message": "行: {PH1}"
  },
  "ui/legacy/components/data_grid/DataGrid.ts | sRowS": {
    "message": "{PH1} 行 {PH2}"
  },
  "ui/legacy/components/data_grid/DataGrid.ts | sSUseTheUpAndDownArrowKeysTo": {
    "message": "{PH1} {PH2}。テーブルの行を移動および操作するには上下の矢印キーを使用します。セル単位で確認するにはブラウズモードを使用します。"
  },
  "ui/legacy/components/data_grid/DataGrid.ts | sortByString": {
    "message": "並べ替え:"
  },
  "ui/legacy/components/data_grid/ShowMoreDataGridNode.ts | showAllD": {
    "message": "{PH1} 件をすべて表示"
  },
  "ui/legacy/components/data_grid/ShowMoreDataGridNode.ts | showDAfter": {
    "message": "後で {PH1} を表示"
  },
  "ui/legacy/components/data_grid/ShowMoreDataGridNode.ts | showDBefore": {
    "message": "以前の {PH1} 件を表示"
  },
  "ui/legacy/components/inline_editor/CSSShadowEditor.ts | blur": {
    "message": "ぼかし"
  },
  "ui/legacy/components/inline_editor/CSSShadowEditor.ts | spread": {
    "message": "拡散"
  },
  "ui/legacy/components/inline_editor/CSSShadowEditor.ts | type": {
    "message": "タイプ"
  },
  "ui/legacy/components/inline_editor/CSSShadowEditor.ts | xOffset": {
    "message": "X オフセット"
  },
  "ui/legacy/components/inline_editor/CSSShadowEditor.ts | yOffset": {
    "message": "Y オフセット"
  },
  "ui/legacy/components/inline_editor/ColorSwatch.ts | shiftclickToChangeColorFormat": {
    "message": "Shift を押しながらクリックすると、カラー形式を変更できます"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | PleaseEnterAValidValueForSText": {
    "message": "* {PH1} テキスト入力について有効な値を入力してください"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | cssProperties": {
    "message": "CSS プロパティ"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | deleteS": {
    "message": "{PH1} を削除"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | fallbackS": {
    "message": "代替 {PH1}"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | fontFamily": {
    "message": "フォント ファミリー"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | fontSelectorDeletedAtIndexS": {
    "message": "次のインデックスでフォント セレクタが削除されました: {PH1}"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | fontSize": {
    "message": "フォントサイズ"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | fontWeight": {
    "message": "フォントの太さ"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | lineHeight": {
    "message": "行の高さ"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | sKeyValueSelector": {
    "message": "{PH1} Key-Value セレクタ"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | sSliderInput": {
    "message": "{PH1} スライダー入力"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | sTextInput": {
    "message": "{PH1} テキスト入力"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | sToggleInputType": {
    "message": "{PH1} 入力タイプの切り替え"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | sUnitInput": {
    "message": "{PH1} ユニット入力"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | selectorInputMode": {
    "message": "セレクタ入力モード"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | sliderInputMode": {
    "message": "スライダー入力モード"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | spacing": {
    "message": "間隔"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | thereIsNoValueToDeleteAtIndexS": {
    "message": "インデックス {PH1} で削除できる値がありません"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | thisPropertyIsSetToContainUnits": {
    "message": "このプロパティはユニットを含むように設定されていますが、対応する unitsArray が定義されていません: {PH1}"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | units": {
    "message": "単位"
  },
  "ui/legacy/components/inline_editor/LinkSwatch.ts | sIsNotDefined": {
    "message": "{PH1} が定義されていません"
  },
  "ui/legacy/components/object_ui/CustomPreviewComponent.ts | showAsJavascriptObject": {
    "message": "JavaScript オブジェクトとして表示"
  },
  "ui/legacy/components/object_ui/ObjectPropertiesSection.ts | collapseChildren": {
    "message": "子を折りたたむ"
  },
  "ui/legacy/components/object_ui/ObjectPropertiesSection.ts | copy": {
    "message": "コピー"
  },
  "ui/legacy/components/object_ui/ObjectPropertiesSection.ts | copyPropertyPath": {
    "message": "プロパティパスをコピー"
  },
  "ui/legacy/components/object_ui/ObjectPropertiesSection.ts | copyValue": {
    "message": "値をコピー"
  },
  "ui/legacy/components/object_ui/ObjectPropertiesSection.ts | dots": {
    "message": "(...)"
  },
  "ui/legacy/components/object_ui/ObjectPropertiesSection.ts | exceptionS": {
    "message": "[例外: {PH1}]"
  },
  "ui/legacy/components/object_ui/ObjectPropertiesSection.ts | expandRecursively": {
    "message": "再帰的に展開"
  },
  "ui/legacy/components/object_ui/ObjectPropertiesSection.ts | invokePropertyGetter": {
    "message": "プロパティ ゲッターを起動"
  },
  "ui/legacy/components/object_ui/ObjectPropertiesSection.ts | longTextWasTruncatedS": {
    "message": "長いテキストが省略されました（{PH1}）"
  },
  "ui/legacy/components/object_ui/ObjectPropertiesSection.ts | noProperties": {
    "message": "プロパティなし"
  },
  "ui/legacy/components/object_ui/ObjectPropertiesSection.ts | revealInMemoryInpector": {
    "message": "Memory Inspector パネルに表示"
  },
  "ui/legacy/components/object_ui/ObjectPropertiesSection.ts | showAllD": {
    "message": "{PH1} 件をすべて表示"
  },
  "ui/legacy/components/object_ui/ObjectPropertiesSection.ts | showMoreS": {
    "message": "もっと見る（{PH1}）"
  },
  "ui/legacy/components/object_ui/ObjectPropertiesSection.ts | stringIsTooLargeToEdit": {
    "message": "<文字列が長すぎて編集できません>"
  },
  "ui/legacy/components/object_ui/ObjectPropertiesSection.ts | unknown": {
    "message": "不明"
  },
  "ui/legacy/components/object_ui/ObjectPropertiesSection.ts | valueNotAccessibleToTheDebugger": {
    "message": "デバッガから値にアクセスできません"
  },
  "ui/legacy/components/object_ui/ObjectPropertiesSection.ts | valueUnavailable": {
    "message": "<値がありません>"
  },
  "ui/legacy/components/object_ui/RemoteObjectPreviewFormatter.ts | empty": {
    "message": "なし"
  },
  "ui/legacy/components/object_ui/RemoteObjectPreviewFormatter.ts | emptyD": {
    "message": "空 × {PH1}"
  },
  "ui/legacy/components/object_ui/RemoteObjectPreviewFormatter.ts | thePropertyIsComputedWithAGetter": {
    "message": "プロパティはゲッターで計算されます"
  },
  "ui/legacy/components/perf_ui/FilmStripView.ts | doubleclickToZoomImageClickTo": {
    "message": "ダブルクリックで画像を拡大できます。クリックすると前回のリクエストが表示されます。"
  },
  "ui/legacy/components/perf_ui/FilmStripView.ts | nextFrame": {
    "message": "次のフレーム"
  },
  "ui/legacy/components/perf_ui/FilmStripView.ts | previousFrame": {
    "message": "前のフレーム"
  },
  "ui/legacy/components/perf_ui/FilmStripView.ts | screenshot": {
    "message": "スクリーンショット"
  },
  "ui/legacy/components/perf_ui/FilmStripView.ts | screenshotForSSelectToView": {
    "message": "{PH1} のスクリーンショット - 前のリクエストを表示するには選択します。"
  },
  "ui/legacy/components/perf_ui/FlameChart.ts | flameChart": {
    "message": "フレーム チャート"
  },
  "ui/legacy/components/perf_ui/FlameChart.ts | hideChildren": {
    "message": "子を非表示"
  },
  "ui/legacy/components/perf_ui/FlameChart.ts | hideFunction": {
    "message": "関数を非表示"
  },
  "ui/legacy/components/perf_ui/FlameChart.ts | hideRepeatingChildren": {
    "message": "繰り返しの子を非表示"
  },
  "ui/legacy/components/perf_ui/FlameChart.ts | resetTrace": {
    "message": "トレースをリセット"
  },
  "ui/legacy/components/perf_ui/FlameChart.ts | sCollapsed": {
    "message": "{PH1} が折りたたまれています"
  },
  "ui/legacy/components/perf_ui/FlameChart.ts | sExpanded": {
    "message": "{PH1} が展開表示されています"
  },
  "ui/legacy/components/perf_ui/FlameChart.ts | sHovered": {
    "message": "カーソルを合わせた回数: {PH1}"
  },
  "ui/legacy/components/perf_ui/FlameChart.ts | sSelected": {
    "message": "{PH1} を選択中"
  },
  "ui/legacy/components/perf_ui/NetworkPriorities.ts | high": {
    "message": "高"
  },
  "ui/legacy/components/perf_ui/NetworkPriorities.ts | highest": {
    "message": "最高"
  },
  "ui/legacy/components/perf_ui/NetworkPriorities.ts | low": {
    "message": "低"
  },
  "ui/legacy/components/perf_ui/NetworkPriorities.ts | lowest": {
    "message": "最低"
  },
  "ui/legacy/components/perf_ui/NetworkPriorities.ts | medium": {
    "message": "中"
  },
  "ui/legacy/components/perf_ui/OverviewGrid.ts | leftResizer": {
    "message": "左リサイザ"
  },
  "ui/legacy/components/perf_ui/OverviewGrid.ts | overviewGridWindow": {
    "message": "概要グリッド ウィンドウ"
  },
  "ui/legacy/components/perf_ui/OverviewGrid.ts | rightResizer": {
    "message": "右サイズ変更"
  },
  "ui/legacy/components/perf_ui/PieChart.ts | total": {
    "message": "合計"
  },
  "ui/legacy/components/perf_ui/perf_ui-meta.ts | collectGarbage": {
    "message": "ガベージ コレクション"
  },
  "ui/legacy/components/perf_ui/perf_ui-meta.ts | flamechartMouseWheelAction": {
    "message": "Flamechart のマウスホイール操作:"
  },
  "ui/legacy/components/perf_ui/perf_ui-meta.ts | hideLiveMemoryAllocation": {
    "message": "ライブメモリ割り当てアノテーションを非表示"
  },
  "ui/legacy/components/perf_ui/perf_ui-meta.ts | liveMemoryAllocationAnnotations": {
    "message": "ライブメモリ割り当てアノテーション"
  },
  "ui/legacy/components/perf_ui/perf_ui-meta.ts | scroll": {
    "message": "スクロール"
  },
  "ui/legacy/components/perf_ui/perf_ui-meta.ts | showLiveMemoryAllocation": {
    "message": "ライブメモリ割り当てアノテーションを表示"
  },
  "ui/legacy/components/perf_ui/perf_ui-meta.ts | zoom": {
    "message": "ズーム"
  },
  "ui/legacy/components/quick_open/CommandMenu.ts | command": {
    "message": "コマンド"
  },
  "ui/legacy/components/quick_open/CommandMenu.ts | deprecated": {
    "message": "— サポート終了"
  },
  "ui/legacy/components/quick_open/CommandMenu.ts | noCommandsFound": {
    "message": "コマンドが見つかりません"
  },
  "ui/legacy/components/quick_open/CommandMenu.ts | oneOrMoreSettingsHaveChanged": {
    "message": "1 つ以上の設定が変更されました。変更を有効にするには再読み込みが必要です。"
  },
  "ui/legacy/components/quick_open/CommandMenu.ts | run": {
    "message": "実行"
  },
  "ui/legacy/components/quick_open/FilteredListWidget.ts | noResultsFound": {
    "message": "該当する結果が見つかりませんでした"
  },
  "ui/legacy/components/quick_open/FilteredListWidget.ts | quickOpen": {
    "message": "クイック オープン"
  },
  "ui/legacy/components/quick_open/FilteredListWidget.ts | quickOpenPrompt": {
    "message": "クイック オープン メッセージ"
  },
  "ui/legacy/components/quick_open/FilteredListWidget.ts | sItemSOfS": {
    "message": "{PH1}、アイテム {PH2}/{PH3}"
  },
  "ui/legacy/components/quick_open/QuickOpen.ts | typeToSeeAvailableCommands": {
    "message": "使用可能なコマンドを表示するには、「?」を入力してください"
  },
  "ui/legacy/components/quick_open/quick_open-meta.ts | openFile": {
    "message": "ファイルを開く"
  },
  "ui/legacy/components/quick_open/quick_open-meta.ts | runCommand": {
    "message": "コマンドを実行"
  },
  "ui/legacy/components/source_frame/FontView.ts | font": {
    "message": "フォント"
  },
  "ui/legacy/components/source_frame/FontView.ts | previewOfFontFromS": {
    "message": "{PH1} のフォントのプレビュー"
  },
  "ui/legacy/components/source_frame/ImageView.ts | copyImageAsDataUri": {
    "message": "データ URI として画像をコピー"
  },
  "ui/legacy/components/source_frame/ImageView.ts | copyImageUrl": {
    "message": "画像 URL をコピー"
  },
  "ui/legacy/components/source_frame/ImageView.ts | dD": {
    "message": "{PH1} × {PH2}"
  },
  "ui/legacy/components/source_frame/ImageView.ts | download": {
    "message": "ダウンロード"
  },
  "ui/legacy/components/source_frame/ImageView.ts | dropImageFileHere": {
    "message": "画像ファイルをこちらにドロップ"
  },
  "ui/legacy/components/source_frame/ImageView.ts | image": {
    "message": "画像"
  },
  "ui/legacy/components/source_frame/ImageView.ts | imageFromS": {
    "message": "{PH1} からの画像"
  },
  "ui/legacy/components/source_frame/ImageView.ts | openImageInNewTab": {
    "message": "新しいタブで画像を開く"
  },
  "ui/legacy/components/source_frame/ImageView.ts | saveImageAs": {
    "message": "名前を付けて画像を保存..."
  },
  "ui/legacy/components/source_frame/JSONView.ts | find": {
    "message": "検索"
  },
  "ui/legacy/components/source_frame/PreviewFactory.ts | nothingToPreview": {
    "message": "プレビューするものはありません"
  },
  "ui/legacy/components/source_frame/ResourceSourceFrame.ts | find": {
    "message": "検索"
  },
  "ui/legacy/components/source_frame/SourceFrame.ts | allow": {
    "message": "許可"
  },
  "ui/legacy/components/source_frame/SourceFrame.ts | allowPasting": {
    "message": "貼り付けを許可"
  },
  "ui/legacy/components/source_frame/SourceFrame.ts | bytecodePositionXs": {
    "message": "バイトコード位置 0x{PH1}"
  },
  "ui/legacy/components/source_frame/SourceFrame.ts | cancel": {
    "message": "キャンセル"
  },
  "ui/legacy/components/source_frame/SourceFrame.ts | dCharactersSelected": {
    "message": "{PH1} 文字が選択されています"
  },
  "ui/legacy/components/source_frame/SourceFrame.ts | dLinesDCharactersSelected": {
    "message": "{PH1} 行、{PH2} 文字が選択されています"
  },
  "ui/legacy/components/source_frame/SourceFrame.ts | dSelectionRegions": {
    "message": "{PH1} 選択領域"
  },
  "ui/legacy/components/source_frame/SourceFrame.ts | doNotPaste": {
    "message": "理解できないコードや自分で確認していないコードを DevTools に貼り付けないでください。攻撃者に個人情報を盗まれたり、パソコンを乗っ取られたりする恐れがあります。貼り付けを許可するには、下に「{PH1}」と入力してください。"
  },
  "ui/legacy/components/source_frame/SourceFrame.ts | doYouTrustThisCode": {
    "message": "このコードを信頼しますか？"
  },
  "ui/legacy/components/source_frame/SourceFrame.ts | lineSColumnS": {
    "message": "第 {PH1} 行、第 {PH2} 列"
  },
  "ui/legacy/components/source_frame/SourceFrame.ts | loading": {
    "message": "読み込んでいます…"
  },
  "ui/legacy/components/source_frame/SourceFrame.ts | prettyPrint": {
    "message": "Pretty print"
  },
  "ui/legacy/components/source_frame/SourceFrame.ts | source": {
    "message": "ソース"
  },
  "ui/legacy/components/source_frame/SourceFrame.ts | typeAllowPasting": {
    "message": "「{PH1}」と入力してください"
  },
  "ui/legacy/components/source_frame/XMLView.ts | find": {
    "message": "検索"
  },
  "ui/legacy/components/source_frame/source_frame-meta.ts | Spaces": {
    "message": "2 個のスペース"
  },
  "ui/legacy/components/source_frame/source_frame-meta.ts | defaultIndentation": {
    "message": "デフォルトのインデント:"
  },
  "ui/legacy/components/source_frame/source_frame-meta.ts | eSpaces": {
    "message": "8 個のスペース"
  },
  "ui/legacy/components/source_frame/source_frame-meta.ts | fSpaces": {
    "message": "4 個のスペース"
  },
  "ui/legacy/components/source_frame/source_frame-meta.ts | setIndentationToESpaces": {
    "message": "インデントをスペース 8 つに設定"
  },
  "ui/legacy/components/source_frame/source_frame-meta.ts | setIndentationToFSpaces": {
    "message": "インデントをスペース 4 つに設定"
  },
  "ui/legacy/components/source_frame/source_frame-meta.ts | setIndentationToSpaces": {
    "message": "インデントをスペース 2 つに設定"
  },
  "ui/legacy/components/source_frame/source_frame-meta.ts | setIndentationToTabCharacter": {
    "message": "インデントをタブ文字に設定"
  },
  "ui/legacy/components/source_frame/source_frame-meta.ts | tabCharacter": {
    "message": "タブ文字"
  },
  "ui/legacy/components/utils/ImagePreview.ts | currentSource": {
    "message": "現在のソース:"
  },
  "ui/legacy/components/utils/ImagePreview.ts | fileSize": {
    "message": "ファイルサイズ:"
  },
  "ui/legacy/components/utils/ImagePreview.ts | imageFromS": {
    "message": "{PH1} からの画像"
  },
  "ui/legacy/components/utils/ImagePreview.ts | intrinsicAspectRatio": {
    "message": "組み込みアスペクト比:"
  },
  "ui/legacy/components/utils/ImagePreview.ts | intrinsicSize": {
    "message": "組み込みサイズ:"
  },
  "ui/legacy/components/utils/ImagePreview.ts | renderedAspectRatio": {
    "message": "レンダリング アスペクト比:"
  },
  "ui/legacy/components/utils/ImagePreview.ts | renderedSize": {
    "message": "レンダリング サイズ:"
  },
  "ui/legacy/components/utils/ImagePreview.ts | unknownSource": {
    "message": "不明なソース"
  },
  "ui/legacy/components/utils/JSPresentationUtils.ts | addToIgnore": {
    "message": "無視リストにスクリプトを追加"
  },
  "ui/legacy/components/utils/JSPresentationUtils.ts | removeFromIgnore": {
    "message": "無視リストから削除"
  },
  "ui/legacy/components/utils/JSPresentationUtils.ts | showLess": {
    "message": "一部表示"
  },
  "ui/legacy/components/utils/JSPresentationUtils.ts | showSMoreFrames": {
    "message": "{n,plural, =1{他 # 件のフレームを表示}other{他 # 件のフレームを表示}}"
  },
  "ui/legacy/components/utils/JSPresentationUtils.ts | unknownSource": {
    "message": "不明"
  },
  "ui/legacy/components/utils/Linkifier.ts | auto": {
    "message": "自動"
  },
  "ui/legacy/components/utils/Linkifier.ts | linkHandling": {
    "message": "リンク処理:"
  },
  "ui/legacy/components/utils/Linkifier.ts | openUsingS": {
    "message": "{PH1} を使用して開く"
  },
  "ui/legacy/components/utils/Linkifier.ts | reveal": {
    "message": "表示"
  },
  "ui/legacy/components/utils/Linkifier.ts | revealInS": {
    "message": "{PH1} に表示"
  },
  "ui/legacy/components/utils/Linkifier.ts | unknown": {
    "message": "（不明）"
  },
  "ui/legacy/components/utils/TargetDetachedDialog.ts | websocketDisconnected": {
    "message": "WebSocket との接続が切断されました"
  }
}
