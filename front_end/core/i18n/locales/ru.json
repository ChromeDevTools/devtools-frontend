{
  "core/common/ResourceType.ts | cspviolationreport": {
    "message": "CSPViolationReport"
  },
  "core/common/ResourceType.ts | css": {
    "message": "CSS"
  },
  "core/common/ResourceType.ts | doc": {
    "message": "Документ"
  },
  "core/common/ResourceType.ts | document": {
    "message": "Документ"
  },
  "core/common/ResourceType.ts | eventsource": {
    "message": "EventSource"
  },
  "core/common/ResourceType.ts | fetch": {
    "message": "Fetch"
  },
  "core/common/ResourceType.ts | fetchAndXHR": {
    "message": "Fetch и XHR"
  },
  "core/common/ResourceType.ts | font": {
    "message": "Шрифт"
  },
  "core/common/ResourceType.ts | image": {
    "message": "Изображение"
  },
  "core/common/ResourceType.ts | img": {
    "message": "Изображение"
  },
  "core/common/ResourceType.ts | javascript": {
    "message": "JavaScript"
  },
  "core/common/ResourceType.ts | js": {
    "message": "JS"
  },
  "core/common/ResourceType.ts | manifest": {
    "message": "Манифест"
  },
  "core/common/ResourceType.ts | media": {
    "message": "Носитель"
  },
  "core/common/ResourceType.ts | other": {
    "message": "Другое"
  },
  "core/common/ResourceType.ts | ping": {
    "message": "Запрос ping"
  },
  "core/common/ResourceType.ts | preflight": {
    "message": "Предварительный процесс"
  },
  "core/common/ResourceType.ts | script": {
    "message": "Скрипт"
  },
  "core/common/ResourceType.ts | signedexchange": {
    "message": "SignedExchange"
  },
  "core/common/ResourceType.ts | stylesheet": {
    "message": "Таблица стилей"
  },
  "core/common/ResourceType.ts | texttrack": {
    "message": "TextTrack"
  },
  "core/common/ResourceType.ts | wasm": {
    "message": "Wasm"
  },
  "core/common/ResourceType.ts | webassembly": {
    "message": "WebAssembly"
  },
  "core/common/ResourceType.ts | webbundle": {
    "message": "WebBundle"
  },
  "core/common/ResourceType.ts | websocket": {
    "message": "WebSocket"
  },
  "core/common/ResourceType.ts | webtransport": {
    "message": "WebTransport"
  },
  "core/common/ResourceType.ts | ws": {
    "message": "WS"
  },
  "core/common/Revealer.ts | applicationPanel": {
    "message": "Панель приложения"
  },
  "core/common/Revealer.ts | changesDrawer": {
    "message": "Панель изменений"
  },
  "core/common/Revealer.ts | elementsPanel": {
    "message": "Панель \"Элементы\""
  },
  "core/common/Revealer.ts | issuesView": {
    "message": "Вид \"Проблемы\""
  },
  "core/common/Revealer.ts | memoryInspectorPanel": {
    "message": "Панель \"Инспектор памяти\""
  },
  "core/common/Revealer.ts | networkPanel": {
    "message": "Панель \"Сеть\""
  },
  "core/common/Revealer.ts | sourcesPanel": {
    "message": "Панель \"Источники\""
  },
  "core/common/Revealer.ts | stylesSidebar": {
    "message": "боковая панель \"Стили\""
  },
  "core/common/SettingRegistration.ts | adorner": {
    "message": "Декоративный элемент"
  },
  "core/common/SettingRegistration.ts | appearance": {
    "message": "Вид"
  },
  "core/common/SettingRegistration.ts | console": {
    "message": "Консоль"
  },
  "core/common/SettingRegistration.ts | debugger": {
    "message": "Отладчик"
  },
  "core/common/SettingRegistration.ts | elements": {
    "message": "Элементы"
  },
  "core/common/SettingRegistration.ts | extension": {
    "message": "Расширение"
  },
  "core/common/SettingRegistration.ts | global": {
    "message": "Общие"
  },
  "core/common/SettingRegistration.ts | grid": {
    "message": "Сетка"
  },
  "core/common/SettingRegistration.ts | memory": {
    "message": "Память"
  },
  "core/common/SettingRegistration.ts | mobile": {
    "message": "Мобильная версия"
  },
  "core/common/SettingRegistration.ts | network": {
    "message": "Сеть"
  },
  "core/common/SettingRegistration.ts | performance": {
    "message": "Производительность"
  },
  "core/common/SettingRegistration.ts | persistence": {
    "message": "Сохранение"
  },
  "core/common/SettingRegistration.ts | rendering": {
    "message": "Отрисовка"
  },
  "core/common/SettingRegistration.ts | sources": {
    "message": "Источники"
  },
  "core/common/SettingRegistration.ts | sync": {
    "message": "Синхронизация"
  },
  "core/host/InspectorFrontendHost.ts | devtoolsS": {
    "message": "Инструменты разработчика – {PH1}"
  },
  "core/host/ResourceLoader.ts | cacheError": {
    "message": "Ошибка кеширования"
  },
  "core/host/ResourceLoader.ts | certificateError": {
    "message": "Ошибка сертификата"
  },
  "core/host/ResourceLoader.ts | certificateManagerError": {
    "message": "Ошибка менеджера сертификатов"
  },
  "core/host/ResourceLoader.ts | connectionError": {
    "message": "Ошибка подключения"
  },
  "core/host/ResourceLoader.ts | decodingDataUrlFailed": {
    "message": "Ошибка расшифровки URL данных"
  },
  "core/host/ResourceLoader.ts | dnsResolverError": {
    "message": "Ошибка DNS-резолвера"
  },
  "core/host/ResourceLoader.ts | ftpError": {
    "message": "Ошибка FTP"
  },
  "core/host/ResourceLoader.ts | httpError": {
    "message": "Ошибка HTTP"
  },
  "core/host/ResourceLoader.ts | httpErrorStatusCodeSS": {
    "message": "Ошибка HTTP. Код статуса {PH1}, {PH2}."
  },
  "core/host/ResourceLoader.ts | invalidUrl": {
    "message": "Недопустимый URL."
  },
  "core/host/ResourceLoader.ts | signedExchangeError": {
    "message": "Ошибка SignedExchange"
  },
  "core/host/ResourceLoader.ts | systemError": {
    "message": "Системная ошибка"
  },
  "core/host/ResourceLoader.ts | unknownError": {
    "message": "Неизвестная ошибка"
  },
  "core/i18n/time-utilities.ts | fdays": {
    "message": "{PH1} дн."
  },
  "core/i18n/time-utilities.ts | fhrs": {
    "message": "{PH1} ч."
  },
  "core/i18n/time-utilities.ts | fmin": {
    "message": "{PH1} мин."
  },
  "core/i18n/time-utilities.ts | fmms": {
    "message": "{PH1} мкс"
  },
  "core/i18n/time-utilities.ts | fms": {
    "message": "{PH1} мс"
  },
  "core/i18n/time-utilities.ts | fs": {
    "message": "{PH1} сек."
  },
  "core/sdk/CPUProfilerModel.ts | profileD": {
    "message": "Профиль {PH1}"
  },
  "core/sdk/CSSStyleSheetHeader.ts | couldNotFindTheOriginalStyle": {
    "message": "Не удалось найти исходную таблицу стилей."
  },
  "core/sdk/CSSStyleSheetHeader.ts | thereWasAnErrorRetrievingThe": {
    "message": "Ошибка при загрузке стилей исходника."
  },
  "core/sdk/ChildTargetManager.ts | main": {
    "message": "Основная"
  },
  "core/sdk/CompilerSourceMappingContentProvider.ts | couldNotLoadContentForSS": {
    "message": "Не удалось загрузить контент для {PH1} ({PH2})."
  },
  "core/sdk/ConsoleModel.ts | bfcacheNavigation": {
    "message": "Страница {PH1} была восстановлена из возвратного кеша (подробнее: https://web.dev/bfcache/)"
  },
  "core/sdk/ConsoleModel.ts | failedToSaveToTempVariable": {
    "message": "Не удалось сохранить во временную переменную."
  },
  "core/sdk/ConsoleModel.ts | navigatedToS": {
    "message": "Переход к {PH1}."
  },
  "core/sdk/ConsoleModel.ts | profileSFinished": {
    "message": "Профиль \"{PH1}\" завершен."
  },
  "core/sdk/ConsoleModel.ts | profileSStarted": {
    "message": "Профиль \"{PH1}\" запущен."
  },
  "core/sdk/DebuggerModel.ts | block": {
    "message": "Блок"
  },
  "core/sdk/DebuggerModel.ts | catchBlock": {
    "message": "Блок Catch"
  },
  "core/sdk/DebuggerModel.ts | closure": {
    "message": "Замыкание"
  },
  "core/sdk/DebuggerModel.ts | expression": {
    "message": "Выражение"
  },
  "core/sdk/DebuggerModel.ts | global": {
    "message": "Глобальные"
  },
  "core/sdk/DebuggerModel.ts | local": {
    "message": "Местные переменные"
  },
  "core/sdk/DebuggerModel.ts | module": {
    "message": "Модуль"
  },
  "core/sdk/DebuggerModel.ts | script": {
    "message": "Скрипт"
  },
  "core/sdk/DebuggerModel.ts | withBlock": {
    "message": "Блок With"
  },
  "core/sdk/NetworkManager.ts | fastG": {
    "message": "3G (высокая скорость)"
  },
  "core/sdk/NetworkManager.ts | noContentForPreflight": {
    "message": "Для запроса предварительного процесса нет доступного контента."
  },
  "core/sdk/NetworkManager.ts | noContentForRedirect": {
    "message": "Доступного контента нет, так как этот запрос был перенаправлен."
  },
  "core/sdk/NetworkManager.ts | noContentForWebSocket": {
    "message": "Контент для WebSocket пока не поддерживается."
  },
  "core/sdk/NetworkManager.ts | noThrottling": {
    "message": "Без ограничения"
  },
  "core/sdk/NetworkManager.ts | offline": {
    "message": "Офлайн"
  },
  "core/sdk/NetworkManager.ts | requestWasBlockedByDevtoolsS": {
    "message": "Запрос заблокирован инструментами разработчика: {PH1}"
  },
  "core/sdk/NetworkManager.ts | sFailedLoadingSS": {
    "message": "Не удалось загрузить {PH1}: {PH2} ({PH3})."
  },
  "core/sdk/NetworkManager.ts | sFinishedLoadingSS": {
    "message": "Загрузка {PH1} завершена: {PH2} ({PH3})."
  },
  "core/sdk/NetworkManager.ts | slowG": {
    "message": "3G (низкая скорость)"
  },
  "core/sdk/NetworkRequest.ts | anUnknownErrorWasEncounteredWhenTrying": {
    "message": "При сохранении файла cookie произошла неизвестная ошибка"
  },
  "core/sdk/NetworkRequest.ts | binary": {
    "message": "(двоичный)"
  },
  "core/sdk/NetworkRequest.ts | blockedReasonInvalidDomain": {
    "message": "Попытка настроить файл cookie через заголовок Set-Cookie заблокирована, потому что атрибут Domain недействителен по отношению к текущему URL хоста"
  },
  "core/sdk/NetworkRequest.ts | blockedReasonInvalidPrefix": {
    "message": "Попытка настроить файл cookie через заголовок Set-Cookie заблокирована, потому что заголовок содержал префикс __Secure- или __Host- и нарушил дополнительные правила, применяемые к файлам cookie с такими префиксами, как указано на странице https://tools.ietf.org/html/draft-west-cookie-prefixes-05"
  },
  "core/sdk/NetworkRequest.ts | blockedReasonOverwriteSecure": {
    "message": "Попытка настроить файл cookie через заголовок Set-Cookie заблокирована, потому что заголовок не был отправлен через защищенное подключение и мог перезаписать файл cookie с атрибутом Secure"
  },
  "core/sdk/NetworkRequest.ts | blockedReasonSameSiteNoneInsecure": {
    "message": "Попытка настроить файл cookie через заголовок Set-Cookie заблокирована, потому что в нем содержался атрибут SameSite=None, но не было атрибута Secure, который необходим для использования SameSite=None"
  },
  "core/sdk/NetworkRequest.ts | blockedReasonSameSiteStrictLax": {
    "message": "Попытка настроить файл cookie через заголовок Set-Cookie заблокирована, потому что он содержал атрибут {PH1}, но поступил из межсайтового ответа, который не был ответом навигации верхнего уровня"
  },
  "core/sdk/NetworkRequest.ts | blockedReasonSameSiteUnspecifiedTreatedAsLax": {
    "message": "Заголовок Set-Cookie не указал атрибут SameSite, получил по умолчанию атрибут SameSite=Lax, и был заблокирован, потому что поступил из межсайтового ответа, который не был ответом навигации верхнего уровня. Чтобы включить межсайтовое использование, заголовок Set-Cookie должен был указать атрибут SameSite=None."
  },
  "core/sdk/NetworkRequest.ts | blockedReasonSecureOnly": {
    "message": "Попытка настроить файл cookie через заголовок Set-Cookie заблокирована, потому что атрибут Secure не был получен через безопасное подключение"
  },
  "core/sdk/NetworkRequest.ts | domainMismatch": {
    "message": "Файл cookie заблокирован, потому что ни домен запрошенного URL, ни субдомен значения атрибута Domain не совпадают с доменом файла cookie"
  },
  "core/sdk/NetworkRequest.ts | nameValuePairExceedsMaxSize": {
    "message": "Файл cookie заблокирован, потому что он слишком большой. Общая длина названия и значения не должна превышать 4096 символов."
  },
  "core/sdk/NetworkRequest.ts | notOnPath": {
    "message": "Файл cookie заблокирован, потому что его путь не в полной мере соответствует пути запроса URL или его супердиректории."
  },
  "core/sdk/NetworkRequest.ts | samePartyFromCrossPartyContext": {
    "message": "Файл cookie заблокирован, потому что имел атрибут SameParty при запросе из другого домена. Запрос считается полученным из другого домена, потому что домен URL ресурса и домены обрамляющих фреймов или документов ресурса не являются владельцами или участниками одного основного набора."
  },
  "core/sdk/NetworkRequest.ts | sameSiteLax": {
    "message": "Файл cookie заблокирован, потому что имел атрибут SameSite=Lax, а запрос пришел с другого сайта и не был инициирован навигацией верхнего уровня"
  },
  "core/sdk/NetworkRequest.ts | sameSiteNoneInsecure": {
    "message": "Файл cookie заблокирован, потому что имел атрибут SameSite=None при отсутствии обязательного атрибута Secure. Кроме того, файлы cookie без ограничений SameSite должны передаваться через безопасное соединение."
  },
  "core/sdk/NetworkRequest.ts | sameSiteStrict": {
    "message": "Файл cookie заблокирован, потому что он содержал атрибут SameSite=Strict, а запрос был сделан с другого сайта. К таким запросам относятся запросы навигации верхнего уровня, инициированные другими сайтами."
  },
  "core/sdk/NetworkRequest.ts | sameSiteUnspecifiedTreatedAsLax": {
    "message": "Файл cookie не указал атрибут SameSite при сохранении, получил по умолчанию атрибут SameSite=Lax и был заблокирован, потому что запрос был сделан с другого сайта и не был инициирован навигацией верхнего уровня. Чтобы включить межсайтовое использование, файл cookie должен был указать атрибут SameSite=None."
  },
  "core/sdk/NetworkRequest.ts | schemefulSameSiteLax": {
    "message": "Файл cookie заблокирован, потому что имел атрибут SameSite=Lax, но запрос был межсайтовым и не был инициирован навигацией верхнего уровня. Этот запрос считается межсайтовым, потому что схема URL отличается от схемы URL текущего сайта."
  },
  "core/sdk/NetworkRequest.ts | schemefulSameSiteStrict": {
    "message": "Файл cookie заблокирован, потому что имел атрибут SameSite=Strict, но запрос был межсайтовым. К таким запросам относятся запросы навигации верхнего уровня, инициированные другими сайтами. Этот запрос считается межсайтовым, потому что схема URL отличается от схемы URL текущего сайта."
  },
  "core/sdk/NetworkRequest.ts | schemefulSameSiteUnspecifiedTreatedAsLax": {
    "message": "Файл cookie не указал атрибут SameSite при сохранении, получил по умолчанию атрибут SameSite=Lax\" и был заблокирован, потому что запрос был межсайтовым и не был инициирован навигацией верхнего уровня. Этот запрос считается межсайтовым, потому что схема URL отличается от схемы URL текущего сайта."
  },
  "core/sdk/NetworkRequest.ts | secureOnly": {
    "message": "Файл cookie заблокирован, потому что он содержал атрибут Secure, а подключение было незащищенным"
  },
  "core/sdk/NetworkRequest.ts | setcookieHeaderIsIgnoredIn": {
    "message": "Заголовок Set-Cookie проигнорирован в ответе от URL: {PH1}. Общая длина названия и значения не должна превышать 4096 символов."
  },
  "core/sdk/NetworkRequest.ts | theSchemeOfThisConnectionIsNot": {
    "message": "Схеме этого подключения запрещено сохранять файлы cookie"
  },
  "core/sdk/NetworkRequest.ts | thirdPartyPhaseout": {
    "message": "Файл cookie заблокирован из-за постепенного отключения сторонних файлов cookie. Подробная информация доступна на панели \"Проблемы\"."
  },
  "core/sdk/NetworkRequest.ts | thisSetcookieDidntSpecifyASamesite": {
    "message": "Заголовок Set-Cookie не указал атрибут SameSite, получил по умолчанию атрибут SameSite=Lax\" и был заблокирован, потому что поступил из межсайтового ответа, который не был ответом навигации верхнего уровня. Этот ответ считается межсайтовым, так как схема URL отличается от схемы URL текущего сайта."
  },
  "core/sdk/NetworkRequest.ts | thisSetcookieHadADisallowedCharacter": {
    "message": "В заголовке Set-Cookie содержался недопустимый символ (запрещенный символ ASCII или символ табуляции в середине названия или значения файла cookie или атрибута)."
  },
  "core/sdk/NetworkRequest.ts | thisSetcookieHadInvalidSyntax": {
    "message": "Недействительный синтаксис заголовка Set-Cookie"
  },
  "core/sdk/NetworkRequest.ts | thisSetcookieWasBlockedBecauseItHadTheSameparty": {
    "message": "Попытка настроить файл cookie через заголовок Set-Cookie заблокирована, потому что обнаружен атрибут SameParty при запросе из другого домена. Запрос считается полученным из другого домена, так как домен URL ресурса и домены заключающих фреймов или документов ресурса не являются владельцами или участниками основного набора."
  },
  "core/sdk/NetworkRequest.ts | thisSetcookieWasBlockedBecauseItHadTheSamepartyAttribute": {
    "message": "Попытка настроить файл cookie через заголовок Set-Cookie заблокирована, потому что обнаружен атрибут SameParty при наличии других конфликтующих атрибутов. В Chrome файлы cookie с атрибутом SameParty также должны иметь атрибут Secure и не быть ограниченными атрибутом SameSite=Strict."
  },
  "core/sdk/NetworkRequest.ts | thisSetcookieWasBlockedBecauseItHadTheSamesiteStrictLax": {
    "message": "Попытка настроить файл cookie через заголовок Set-Cookie заблокирована, потому что заголовок содержал атрибут {PH1}, но поступил из межсайтового ответа, который не был ответом навигации верхнего уровня. Этот ответ считается межсайтовым, так как схема URL отличается от схемы URL текущего сайта."
  },
  "core/sdk/NetworkRequest.ts | thisSetcookieWasBlockedBecauseTheNameValuePairExceedsMaxSize": {
    "message": "Попытка настроить файл cookie через заголовок Set-Cookie заблокирована, потому что файл слишком большой. Общая длина названия и значения не должна превышать 4096 символов."
  },
  "core/sdk/NetworkRequest.ts | thisSetcookieWasBlockedDueThirdPartyPhaseout": {
    "message": "Настройка файла cookie заблокирована из-за постепенного отключения сторонних файлов cookie. Подробная информация доступна на панели \"Проблемы\"."
  },
  "core/sdk/NetworkRequest.ts | thisSetcookieWasBlockedDueToUser": {
    "message": "Попытка настроить файл cookie через заголовок Set-Cookie заблокирована в соответствии с пользовательскими настройками"
  },
  "core/sdk/NetworkRequest.ts | unknownError": {
    "message": "При отправке файла cookie произошла неизвестная ошибка"
  },
  "core/sdk/NetworkRequest.ts | userPreferences": {
    "message": "Файл cookie заблокирован в соответствии с пользовательскими настройками"
  },
  "core/sdk/OverlayModel.ts | pausedInDebugger": {
    "message": "Приостановлено в отладчике."
  },
  "core/sdk/PageResourceLoader.ts | loadCanceledDueToReloadOf": {
    "message": "Загрузка отменена из-за перезапуска проверенной страницы."
  },
  "core/sdk/Script.ts | scriptRemovedOrDeleted": {
    "message": "Скрипт удален."
  },
  "core/sdk/Script.ts | unableToFetchScriptSource": {
    "message": "Не удалось извлечь источник скрипта."
  },
  "core/sdk/ServerTiming.ts | deprecatedSyntaxFoundPleaseUse": {
    "message": "Обнаружен устаревший синтаксис. Используйте <name>;dur=<duration>;desc=<description>."
  },
  "core/sdk/ServerTiming.ts | duplicateParameterSIgnored": {
    "message": "Повторяющийся параметр {PH1} проигнорирован."
  },
  "core/sdk/ServerTiming.ts | extraneousTrailingCharacters": {
    "message": "Лишние завершающие символы."
  },
  "core/sdk/ServerTiming.ts | noValueFoundForParameterS": {
    "message": "Значение для параметра {PH1} не найдено."
  },
  "core/sdk/ServerTiming.ts | unableToParseSValueS": {
    "message": "Не удается выполнить синтаксический анализ {PH1} значения {PH2}."
  },
  "core/sdk/ServerTiming.ts | unrecognizedParameterS": {
    "message": "Нераспознанный параметр {PH1}."
  },
  "core/sdk/ServiceWorkerCacheModel.ts | serviceworkercacheagentError": {
    "message": "Ошибка ServiceWorkerCacheAgent при удалении записи кеша {PH1} в кеше: {PH2}."
  },
  "core/sdk/ServiceWorkerManager.ts | activated": {
    "message": "включен"
  },
  "core/sdk/ServiceWorkerManager.ts | activating": {
    "message": "активация"
  },
  "core/sdk/ServiceWorkerManager.ts | installed": {
    "message": "установлено"
  },
  "core/sdk/ServiceWorkerManager.ts | installing": {
    "message": "установка"
  },
  "core/sdk/ServiceWorkerManager.ts | new": {
    "message": "новый"
  },
  "core/sdk/ServiceWorkerManager.ts | redundant": {
    "message": "избыточный"
  },
  "core/sdk/ServiceWorkerManager.ts | running": {
    "message": "выполняется"
  },
  "core/sdk/ServiceWorkerManager.ts | sSS": {
    "message": "{PH1} {PH2} ({PH3})"
  },
  "core/sdk/ServiceWorkerManager.ts | starting": {
    "message": "запуск"
  },
  "core/sdk/ServiceWorkerManager.ts | stopped": {
    "message": "остановлено"
  },
  "core/sdk/ServiceWorkerManager.ts | stopping": {
    "message": "завершение"
  },
  "core/sdk/sdk-meta.ts | achromatopsia": {
    "message": "Ахроматопсия (без цвета)"
  },
  "core/sdk/sdk-meta.ts | blurredVision": {
    "message": "Нечеткое зрение"
  },
  "core/sdk/sdk-meta.ts | captureAsyncStackTraces": {
    "message": "Записать асинхронные трассировки стека"
  },
  "core/sdk/sdk-meta.ts | deuteranopia": {
    "message": "Дейтеранопия (без зеленого)"
  },
  "core/sdk/sdk-meta.ts | disableAsyncStackTraces": {
    "message": "Отключить асинхронную трассировку стека"
  },
  "core/sdk/sdk-meta.ts | disableAvifFormat": {
    "message": "Отключить формат AVIF"
  },
  "core/sdk/sdk-meta.ts | disableCache": {
    "message": "Отключить кеш (пока открыты инструменты разработчика)"
  },
  "core/sdk/sdk-meta.ts | disableJavascript": {
    "message": "Отключить JavaScript"
  },
  "core/sdk/sdk-meta.ts | disableLocalFonts": {
    "message": "Не использовать шрифты на устройстве"
  },
  "core/sdk/sdk-meta.ts | disableNetworkRequestBlocking": {
    "message": "Отключить блокировку сетевых запросов"
  },
  "core/sdk/sdk-meta.ts | disableWebpFormat": {
    "message": "Отключить формат WebP"
  },
  "core/sdk/sdk-meta.ts | doNotCaptureAsyncStackTraces": {
    "message": "Не записывать асинхронную трассировку стека"
  },
  "core/sdk/sdk-meta.ts | doNotEmulateAFocusedPage": {
    "message": "Не эмулировать страницу в фокусе"
  },
  "core/sdk/sdk-meta.ts | doNotEmulateAnyVisionDeficiency": {
    "message": "Не эмулировать дефекты зрения"
  },
  "core/sdk/sdk-meta.ts | doNotEmulateCss": {
    "message": "Не эмулировать функцию CSS {PH1}"
  },
  "core/sdk/sdk-meta.ts | doNotEmulateCssMediaType": {
    "message": "Не эмулировать тип носителя CSS"
  },
  "core/sdk/sdk-meta.ts | doNotExtendGridLines": {
    "message": "Не продлевать линии сетки"
  },
  "core/sdk/sdk-meta.ts | doNotHighlightAdFrames": {
    "message": "Не выделять фреймы объявлений"
  },
  "core/sdk/sdk-meta.ts | doNotPauseOnExceptions": {
    "message": "Не останавливаться при исключениях"
  },
  "core/sdk/sdk-meta.ts | doNotPreserveLogUponNavigation": {
    "message": "Не сохранять журнал при переходе между страницами"
  },
  "core/sdk/sdk-meta.ts | doNotShowGridNamedAreas": {
    "message": "Не показывать названные области сетки"
  },
  "core/sdk/sdk-meta.ts | doNotShowGridTrackSizes": {
    "message": "Не показывать размеры дорожек сетки"
  },
  "core/sdk/sdk-meta.ts | doNotShowRulersOnHover": {
    "message": "Не показывать линейки при наведении указателя мыши"
  },
  "core/sdk/sdk-meta.ts | emulateAFocusedPage": {
    "message": "Эмулировать страницу в фокусе"
  },
  "core/sdk/sdk-meta.ts | emulateAchromatopsia": {
    "message": "Эмуляция ахроматопсии (без цвета)"
  },
  "core/sdk/sdk-meta.ts | emulateAutoDarkMode": {
    "message": "Эмулировать автоматическую тёмную тему"
  },
  "core/sdk/sdk-meta.ts | emulateBlurredVision": {
    "message": "Эмулировать нечеткое зрение"
  },
  "core/sdk/sdk-meta.ts | emulateCss": {
    "message": "Эмулировать функцию CSS {PH1}"
  },
  "core/sdk/sdk-meta.ts | emulateCssMediaFeature": {
    "message": "Эмулировать медиафункцию CSS {PH1}"
  },
  "core/sdk/sdk-meta.ts | emulateCssMediaType": {
    "message": "Эмулировать тип носителя CSS"
  },
  "core/sdk/sdk-meta.ts | emulateCssPrintMediaType": {
    "message": "Эмулировать тип носителя CSS \"печать\""
  },
  "core/sdk/sdk-meta.ts | emulateCssScreenMediaType": {
    "message": "Эмулировать тип носителя CSS \"экран\""
  },
  "core/sdk/sdk-meta.ts | emulateDeuteranopia": {
    "message": "Эмуляция дейтеранопии (без зеленого)"
  },
  "core/sdk/sdk-meta.ts | emulateProtanopia": {
    "message": "Эмуляция протанопии (без красного)"
  },
  "core/sdk/sdk-meta.ts | emulateReducedContrast": {
    "message": "Эмуляция пониженной контрастности"
  },
  "core/sdk/sdk-meta.ts | emulateTritanopia": {
    "message": "Эмуляция тританопии (без синего)"
  },
  "core/sdk/sdk-meta.ts | emulateVisionDeficiencies": {
    "message": "Эмулировать дефекты зрения"
  },
  "core/sdk/sdk-meta.ts | enableAvifFormat": {
    "message": "Включить формат AVIF"
  },
  "core/sdk/sdk-meta.ts | enableCache": {
    "message": "Включить кеширование"
  },
  "core/sdk/sdk-meta.ts | enableJavascript": {
    "message": "Включить JavaScript"
  },
  "core/sdk/sdk-meta.ts | enableLocalFonts": {
    "message": "Включить шрифты на устройстве"
  },
  "core/sdk/sdk-meta.ts | enableNetworkRequestBlocking": {
    "message": "Включить блокировку сетевых запросов"
  },
  "core/sdk/sdk-meta.ts | enableRemoteFileLoading": {
    "message": "Разрешить DevTools загружать ресурсы, например карты исходного кода, из удаленных (не локальных) источников. По умолчанию этот параметр отключен из соображений безопасности."
  },
  "core/sdk/sdk-meta.ts | enableWebpFormat": {
    "message": "Включить формат WebP"
  },
  "core/sdk/sdk-meta.ts | extendGridLines": {
    "message": "Продлить линии сетки"
  },
  "core/sdk/sdk-meta.ts | hideCoreWebVitalsOverlay": {
    "message": "Скрыть оверлей основных интернет-показателей"
  },
  "core/sdk/sdk-meta.ts | hideFramesPerSecondFpsMeter": {
    "message": "Скрыть счетчик кадров в секунду (кадр/с)"
  },
  "core/sdk/sdk-meta.ts | hideLayerBorders": {
    "message": "Скрыть границы слоя"
  },
  "core/sdk/sdk-meta.ts | hideLayoutShiftRegions": {
    "message": "Скрыть области смещения макета"
  },
  "core/sdk/sdk-meta.ts | hideLineLabels": {
    "message": "Скрыть ярлыки линий"
  },
  "core/sdk/sdk-meta.ts | hidePaintFlashingRectangles": {
    "message": "Скрыть прямоугольники индикатора замены отображения"
  },
  "core/sdk/sdk-meta.ts | hideScrollPerformanceBottlenecks": {
    "message": "Скрыть узкие места производительности прокрутки"
  },
  "core/sdk/sdk-meta.ts | highlightAdFrames": {
    "message": "Выделять фреймы объявлений"
  },
  "core/sdk/sdk-meta.ts | noEmulation": {
    "message": "Без эмуляции"
  },
  "core/sdk/sdk-meta.ts | pauseOnExceptions": {
    "message": "Приостановка на исключениях"
  },
  "core/sdk/sdk-meta.ts | preserveLogUponNavigation": {
    "message": "Сохранять журнал при переходе между страницами"
  },
  "core/sdk/sdk-meta.ts | print": {
    "message": "печать"
  },
  "core/sdk/sdk-meta.ts | protanopia": {
    "message": "Протанопия (без красного)"
  },
  "core/sdk/sdk-meta.ts | query": {
    "message": "запрос"
  },
  "core/sdk/sdk-meta.ts | reducedContrast": {
    "message": "Пониженная контрастность"
  },
  "core/sdk/sdk-meta.ts | screen": {
    "message": "экран"
  },
  "core/sdk/sdk-meta.ts | showAreaNames": {
    "message": "Показать названия областей"
  },
  "core/sdk/sdk-meta.ts | showCoreWebVitalsOverlay": {
    "message": "Показать оверлей основных интернет-показателей"
  },
  "core/sdk/sdk-meta.ts | showFramesPerSecondFpsMeter": {
    "message": "Показать счетчик кадров в секунду (кадр/с)"
  },
  "core/sdk/sdk-meta.ts | showGridNamedAreas": {
    "message": "Показать названные области сетки"
  },
  "core/sdk/sdk-meta.ts | showGridTrackSizes": {
    "message": "Показать размеры дорожек сетки"
  },
  "core/sdk/sdk-meta.ts | showLayerBorders": {
    "message": "Показать границы слоя"
  },
  "core/sdk/sdk-meta.ts | showLayoutShiftRegions": {
    "message": "Показать области смещения макета"
  },
  "core/sdk/sdk-meta.ts | showLineLabels": {
    "message": "Показать ярлыки линий"
  },
  "core/sdk/sdk-meta.ts | showLineNames": {
    "message": "Показывать названия строк"
  },
  "core/sdk/sdk-meta.ts | showLineNumbers": {
    "message": "Показывать номера строк"
  },
  "core/sdk/sdk-meta.ts | showPaintFlashingRectangles": {
    "message": "Показывать прямоугольники индикатора замены отображения"
  },
  "core/sdk/sdk-meta.ts | showRulersOnHover": {
    "message": "Показывать линейки при наведении указателя мыши"
  },
  "core/sdk/sdk-meta.ts | showScrollPerformanceBottlenecks": {
    "message": "Показать узкие места производительности прокрутки"
  },
  "core/sdk/sdk-meta.ts | showTrackSizes": {
    "message": "Показать размеры дорожек"
  },
  "core/sdk/sdk-meta.ts | tritanopia": {
    "message": "Тританопия (без синего)"
  },
  "entrypoints/inspector_main/InspectorMain.ts | javascriptIsDisabled": {
    "message": "JavaScript отключен."
  },
  "entrypoints/inspector_main/InspectorMain.ts | main": {
    "message": "Основная"
  },
  "entrypoints/inspector_main/InspectorMain.ts | openDedicatedTools": {
    "message": "Откройте специальные инструменты разработчика для Node.js"
  },
  "entrypoints/inspector_main/InspectorMain.ts | tab": {
    "message": "Вкладка"
  },
  "entrypoints/inspector_main/OutermostTargetSelector.ts | targetNotSelected": {
    "message": "Страница: не выбрано"
  },
  "entrypoints/inspector_main/OutermostTargetSelector.ts | targetS": {
    "message": "Страница: {PH1}"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | coreWebVitals": {
    "message": "Основные интернет-показатели"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | disableAvifImageFormat": {
    "message": "Отключить графический формат AVIF"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | disableLocalFonts": {
    "message": "Не использовать шрифты на устройстве"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | disableWebpImageFormat": {
    "message": "Отключить графический формат WebP"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | disablesLocalSourcesInFontface": {
    "message": "Отключает источники (local()) в правилах @font-face. Требуется перезагрузка страницы."
  },
  "entrypoints/inspector_main/RenderingOptions.ts | emulateAFocusedPage": {
    "message": "Эмулировать страницу в фокусе"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | emulateAutoDarkMode": {
    "message": "Автоматически включать тёмную тему"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | emulatesAFocusedPage": {
    "message": "Эмулирует страницу в фокусе."
  },
  "entrypoints/inspector_main/RenderingOptions.ts | emulatesAutoDarkMode": {
    "message": "Автоматически включает тёмную тему и меняет prefers-color-scheme на dark."
  },
  "entrypoints/inspector_main/RenderingOptions.ts | forcesCssColorgamutMediaFeature": {
    "message": "Запускает медиафункцию CSS color-gamut."
  },
  "entrypoints/inspector_main/RenderingOptions.ts | forcesCssForcedColors": {
    "message": "Запускает медиафункцию CSS с принудительными цветами"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | forcesCssPreferscolorschemeMedia": {
    "message": "Запускает медиафункцию CSS prefers-color-scheme."
  },
  "entrypoints/inspector_main/RenderingOptions.ts | forcesCssPreferscontrastMedia": {
    "message": "Запускает медиафункцию CSS prefers-contrast."
  },
  "entrypoints/inspector_main/RenderingOptions.ts | forcesCssPrefersreduceddataMedia": {
    "message": "Запускает медиафункцию CSS prefers-reduced-data."
  },
  "entrypoints/inspector_main/RenderingOptions.ts | forcesCssPrefersreducedmotion": {
    "message": "Запускает медиафункцию CSS prefers-reduced-motion."
  },
  "entrypoints/inspector_main/RenderingOptions.ts | forcesCssPrefersreducedtransparencyMedia": {
    "message": "Запускает медиафункцию CSS prefers-reduced-transparency"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | forcesMediaTypeForTestingPrint": {
    "message": "Запускает тестирование печатного и экранного стилей."
  },
  "entrypoints/inspector_main/RenderingOptions.ts | forcesVisionDeficiencyEmulation": {
    "message": "Запускает эмуляцию дефекта зрения."
  },
  "entrypoints/inspector_main/RenderingOptions.ts | frameRenderingStats": {
    "message": "Статистика отрисовки фрейма"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | highlightAdFrames": {
    "message": "Выделять фреймы объявлений"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | highlightsAreasOfThePageBlueThat": {
    "message": "Смещенные области страницы отмечаются голубым цветом. Не рекомендуется людям со светочувствительной эпилепсией."
  },
  "entrypoints/inspector_main/RenderingOptions.ts | highlightsAreasOfThePageGreen": {
    "message": "Области страницы, требующие нового отображения, выделяются зеленым. Не рекомендуется людям со светочувствительной эпилепсией."
  },
  "entrypoints/inspector_main/RenderingOptions.ts | highlightsElementsTealThatCan": {
    "message": "Элементы, которые могут замедлять прокручивание, включая обработчики событий прикосновения и колеса мыши, а также другие ситуации прокручивания в основном потоке, выделяются бирюзовым."
  },
  "entrypoints/inspector_main/RenderingOptions.ts | highlightsFramesRedDetectedToBe": {
    "message": "Обнаруженные фреймы объявлений выделяются красным."
  },
  "entrypoints/inspector_main/RenderingOptions.ts | layerBorders": {
    "message": "Границы слоя"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | layoutShiftRegions": {
    "message": "Области смещения макета"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | paintFlashing": {
    "message": "Индикатор замены отображения"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | plotsFrameThroughputDropped": {
    "message": "Строит графики производительности при передаче фреймов, распределения пропущенных фреймов и памяти графического процессора."
  },
  "entrypoints/inspector_main/RenderingOptions.ts | requiresAPageReloadToApplyAnd": {
    "message": "Требуется перезагрузка страницы. При этом отключается кеширование для запросов изображения."
  },
  "entrypoints/inspector_main/RenderingOptions.ts | scrollingPerformanceIssues": {
    "message": "Проблемы производительности при прокрутке"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | showsAnOverlayWithCoreWebVitals": {
    "message": "Открывает оверлей с основными интернет-показателями."
  },
  "entrypoints/inspector_main/RenderingOptions.ts | showsLayerBordersOrangeoliveAnd": {
    "message": "Границы слоя выделяются оранжевым или оливковым, а его плитки – сине-зеленым."
  },
  "entrypoints/inspector_main/inspector_main-meta.ts | autoOpenDevTools": {
    "message": "Автоматически открывать инструменты разработчика для всплывающих окон"
  },
  "entrypoints/inspector_main/inspector_main-meta.ts | blockAds": {
    "message": "Блокировать все объявления на этом сайте"
  },
  "entrypoints/inspector_main/inspector_main-meta.ts | colorVisionDeficiency": {
    "message": "недостаток цветового зрения"
  },
  "entrypoints/inspector_main/inspector_main-meta.ts | cssMediaFeature": {
    "message": "Медиафункция CSS"
  },
  "entrypoints/inspector_main/inspector_main-meta.ts | cssMediaType": {
    "message": "Тип носителя CSS"
  },
  "entrypoints/inspector_main/inspector_main-meta.ts | disablePaused": {
    "message": "Отключить оверлей приостановки"
  },
  "entrypoints/inspector_main/inspector_main-meta.ts | doNotAutoOpen": {
    "message": "Не открывать инструменты разработчика автоматически для всплывающих окон"
  },
  "entrypoints/inspector_main/inspector_main-meta.ts | forceAdBlocking": {
    "message": "Блокировать объявления на этом сайте"
  },
  "entrypoints/inspector_main/inspector_main-meta.ts | fps": {
    "message": "кадр/с"
  },
  "entrypoints/inspector_main/inspector_main-meta.ts | hardReloadPage": {
    "message": "Жесткая перезагрузка страницы"
  },
  "entrypoints/inspector_main/inspector_main-meta.ts | layout": {
    "message": "макет"
  },
  "entrypoints/inspector_main/inspector_main-meta.ts | paint": {
    "message": "отрисовка"
  },
  "entrypoints/inspector_main/inspector_main-meta.ts | reloadPage": {
    "message": "Обновить страницу"
  },
  "entrypoints/inspector_main/inspector_main-meta.ts | rendering": {
    "message": "Отрисовка"
  },
  "entrypoints/inspector_main/inspector_main-meta.ts | showAds": {
    "message": "Показать рекламу на этом сайте (если разрешено)"
  },
  "entrypoints/inspector_main/inspector_main-meta.ts | showRendering": {
    "message": "Показать \"Отрисовка\""
  },
  "entrypoints/inspector_main/inspector_main-meta.ts | toggleCssPrefersColorSchemeMedia": {
    "message": "Включить или отключить медиафункцию CSS prefers-color-scheme"
  },
  "entrypoints/inspector_main/inspector_main-meta.ts | visionDeficiency": {
    "message": "дефекты зрения"
  },
  "entrypoints/js_app/js_app.ts | main": {
    "message": "Основная"
  },
  "entrypoints/main/MainImpl.ts | customizeAndControlDevtools": {
    "message": "Настройка инструментов разработчика и управление ими"
  },
  "entrypoints/main/MainImpl.ts | dockSide": {
    "message": "Закрепить сбоку"
  },
  "entrypoints/main/MainImpl.ts | dockSideNaviation": {
    "message": "Для навигации по меню используйте стрелки влево и вправо"
  },
  "entrypoints/main/MainImpl.ts | dockToBottom": {
    "message": "Прикрепить внизу"
  },
  "entrypoints/main/MainImpl.ts | dockToLeft": {
    "message": "Прикрепить слева"
  },
  "entrypoints/main/MainImpl.ts | dockToRight": {
    "message": "Прикрепить справа"
  },
  "entrypoints/main/MainImpl.ts | focusDebuggee": {
    "message": "Перейти на страницу"
  },
  "entrypoints/main/MainImpl.ts | help": {
    "message": "Справка"
  },
  "entrypoints/main/MainImpl.ts | hideConsoleDrawer": {
    "message": "Скрыть выдвигающуюся панель консоли"
  },
  "entrypoints/main/MainImpl.ts | moreTools": {
    "message": "Другие инструменты"
  },
  "entrypoints/main/MainImpl.ts | placementOfDevtoolsRelativeToThe": {
    "message": "Размещение инструментов разработчика относительно страницы. Чтобы восстановить последнее положение, нажмите {PH1}."
  },
  "entrypoints/main/MainImpl.ts | showConsoleDrawer": {
    "message": "Показать выдвигающуюся панель консоли"
  },
  "entrypoints/main/MainImpl.ts | undockIntoSeparateWindow": {
    "message": "Перенести в отдельное окно"
  },
  "entrypoints/main/main-meta.ts | auto": {
    "message": "авто"
  },
  "entrypoints/main/main-meta.ts | bottom": {
    "message": "Вниз"
  },
  "entrypoints/main/main-meta.ts | browserLanguage": {
    "message": "Язык интерфейса браузера"
  },
  "entrypoints/main/main-meta.ts | cancelSearch": {
    "message": "Отменить поиск"
  },
  "entrypoints/main/main-meta.ts | darkCapital": {
    "message": "Тёмная"
  },
  "entrypoints/main/main-meta.ts | darkLower": {
    "message": "тёмная"
  },
  "entrypoints/main/main-meta.ts | devtoolsDefault": {
    "message": "Инструменты разработчика (по умолчанию)"
  },
  "entrypoints/main/main-meta.ts | dockToBottom": {
    "message": "Прикрепить внизу"
  },
  "entrypoints/main/main-meta.ts | dockToLeft": {
    "message": "Прикрепить слева"
  },
  "entrypoints/main/main-meta.ts | dockToRight": {
    "message": "Прикрепить справа"
  },
  "entrypoints/main/main-meta.ts | enableCtrlShortcutToSwitchPanels": {
    "message": "Использовать сочетание клавиш Ctrl + 1–9 для переключения панелей"
  },
  "entrypoints/main/main-meta.ts | enableShortcutToSwitchPanels": {
    "message": "Использовать сочетание клавиш ⌘ + 1–9 для переключения панелей"
  },
  "entrypoints/main/main-meta.ts | enableSync": {
    "message": "Включить синхронизацию настроек"
  },
  "entrypoints/main/main-meta.ts | findNextResult": {
    "message": "Найти следующий результат"
  },
  "entrypoints/main/main-meta.ts | findPreviousResult": {
    "message": "Найти предыдущий результат"
  },
  "entrypoints/main/main-meta.ts | focusDebuggee": {
    "message": "Перейти на страницу"
  },
  "entrypoints/main/main-meta.ts | horizontal": {
    "message": "горизонтально"
  },
  "entrypoints/main/main-meta.ts | language": {
    "message": "Язык:"
  },
  "entrypoints/main/main-meta.ts | left": {
    "message": "Слева"
  },
  "entrypoints/main/main-meta.ts | lightCapital": {
    "message": "Светлая"
  },
  "entrypoints/main/main-meta.ts | lightLower": {
    "message": "Светлая"
  },
  "entrypoints/main/main-meta.ts | nextPanel": {
    "message": "Следующая панель"
  },
  "entrypoints/main/main-meta.ts | panelLayout": {
    "message": "Макет панели:"
  },
  "entrypoints/main/main-meta.ts | previousPanel": {
    "message": "Предыдущая панель"
  },
  "entrypoints/main/main-meta.ts | reloadDevtools": {
    "message": "Перезагрузить инструменты разработчика"
  },
  "entrypoints/main/main-meta.ts | resetZoomLevel": {
    "message": "Установить исходный масштаб"
  },
  "entrypoints/main/main-meta.ts | restoreLastDockPosition": {
    "message": "Восстановить последнюю позицию закрепления"
  },
  "entrypoints/main/main-meta.ts | right": {
    "message": "По правому краю"
  },
  "entrypoints/main/main-meta.ts | searchAsYouTypeCommand": {
    "message": "Включить поиск при вводе запроса"
  },
  "entrypoints/main/main-meta.ts | searchAsYouTypeSetting": {
    "message": "Поиск при вводе запроса"
  },
  "entrypoints/main/main-meta.ts | searchInPanel": {
    "message": "Поиск на панели"
  },
  "entrypoints/main/main-meta.ts | searchOnEnterCommand": {
    "message": "Отключить поиск при вводе запроса (для поиска нужно нажать Ввод)"
  },
  "entrypoints/main/main-meta.ts | switchToDarkTheme": {
    "message": "Включить тёмную тему"
  },
  "entrypoints/main/main-meta.ts | switchToLightTheme": {
    "message": "Переключиться на светлую тему"
  },
  "entrypoints/main/main-meta.ts | switchToSystemPreferredColor": {
    "message": "Переключить на установленную в системе цветовую тему"
  },
  "entrypoints/main/main-meta.ts | systemPreference": {
    "message": "Системные настройки"
  },
  "entrypoints/main/main-meta.ts | theme": {
    "message": "Тема:"
  },
  "entrypoints/main/main-meta.ts | toggleDrawer": {
    "message": "Показать или скрыть выдвигающуюся панель"
  },
  "entrypoints/main/main-meta.ts | undockIntoSeparateWindow": {
    "message": "Перенести в отдельное окно"
  },
  "entrypoints/main/main-meta.ts | undocked": {
    "message": "Открепить"
  },
  "entrypoints/main/main-meta.ts | useAutomaticPanelLayout": {
    "message": "Использовать автоматический макет панели"
  },
  "entrypoints/main/main-meta.ts | useHorizontalPanelLayout": {
    "message": "Использовать горизонтальный макет панели"
  },
  "entrypoints/main/main-meta.ts | useVerticalPanelLayout": {
    "message": "Использовать вертикальный макет панели"
  },
  "entrypoints/main/main-meta.ts | vertical": {
    "message": "вертикально"
  },
  "entrypoints/main/main-meta.ts | zoomIn": {
    "message": "Увеличить"
  },
  "entrypoints/main/main-meta.ts | zoomOut": {
    "message": "Уменьшить масштаб"
  },
  "entrypoints/node_app/NodeConnectionsPanel.ts | addConnection": {
    "message": "Добавить подключение"
  },
  "entrypoints/node_app/NodeConnectionsPanel.ts | networkAddressEgLocalhost": {
    "message": "Сетевой адрес (например, localhost:9229)"
  },
  "entrypoints/node_app/NodeConnectionsPanel.ts | noConnectionsSpecified": {
    "message": "Связи не указаны"
  },
  "entrypoints/node_app/NodeConnectionsPanel.ts | nodejsDebuggingGuide": {
    "message": "Руководство по отладке Node.js"
  },
  "entrypoints/node_app/NodeConnectionsPanel.ts | specifyNetworkEndpointAnd": {
    "message": "Укажите конечную точку сети, и инструменты разработчика подключатся к ней автоматически. Чтобы узнать больше, прочитайте это: {PH1}."
  },
  "entrypoints/node_app/NodeMain.ts | main": {
    "message": "Основная"
  },
  "entrypoints/node_app/NodeMain.ts | nodejsS": {
    "message": "Node.js: {PH1}"
  },
  "entrypoints/node_app/node_app.ts | connection": {
    "message": "Подключение"
  },
  "entrypoints/node_app/node_app.ts | networkTitle": {
    "message": "Узел"
  },
  "entrypoints/node_app/node_app.ts | node": {
    "message": "узел"
  },
  "entrypoints/node_app/node_app.ts | showConnection": {
    "message": "Показать \"Соединение\""
  },
  "entrypoints/node_app/node_app.ts | showNode": {
    "message": "Показать инструмент \"Узел\""
  },
  "entrypoints/worker_app/WorkerMain.ts | main": {
    "message": "Основная"
  },
  "generated/Deprecation.ts | AuthorizationCoveredByWildcard": {
    "message": "Авторизация не будет выполняться, если в заголовке CORS Access-Control-Allow-Headers вместо необходимых данных указан подстановочный знак (*)."
  },
  "generated/Deprecation.ts | CSSSelectorInternalMediaControlsOverlayCastButton": {
    "message": "Чтобы отключить интеграцию Google Cast по умолчанию, вместо селектора -internal-media-controls-overlay-cast-button используйте атрибут disableRemotePlayback."
  },
  "generated/Deprecation.ts | CSSValueAppearanceNonStandard": {
    "message": "Значения CSS inner-spin-button, media-slider, media-sliderthumb, media-volume-slider, media-volume-sliderthumb, push-button, searchfield-cancel-button, slider-horizontal, sliderthumb-horizontal, sliderthumb-vertical, square-button не стандартизированы и будут удалены."
  },
  "generated/Deprecation.ts | CSSValueAppearanceSliderVertical": {
    "message": "Значение CSS slider-vertical не стандартизировано и будет удалено."
  },
  "generated/Deprecation.ts | CanRequestURLHTTPContainingNewline": {
    "message": "Запросы ресурсов, в URL которых содержатся и удаленные пробельные символы (\\(n|r|t)), и знаки \"меньше\" (<), блокируются. Чтобы загружать такие ресурсы, удалите символы новой строки и используйте коды для знаков \"меньше\" в таких местах URL, где, например, указываются значения атрибутов элементов."
  },
  "generated/Deprecation.ts | ChromeLoadTimesConnectionInfo": {
    "message": "Метод chrome.loadTimes() больше не поддерживается. Вместо него используйте стандартный API Navigation Timing 2."
  },
  "generated/Deprecation.ts | ChromeLoadTimesFirstPaintAfterLoadTime": {
    "message": "API chrome.loadTimes() больше не поддерживается. Вместо него используйте стандартный API Paint Timing."
  },
  "generated/Deprecation.ts | ChromeLoadTimesWasAlternateProtocolAvailable": {
    "message": "Метод chrome.loadTimes() больше не поддерживается. Вместо него используйте стандартный API nextHopProtocol в Navigation Timing 2."
  },
  "generated/Deprecation.ts | CookieWithTruncatingChar": {
    "message": "Файлы cookie с символом \\(0|r|n) не обрезаются, а отклоняются."
  },
  "generated/Deprecation.ts | CrossOriginAccessBasedOnDocumentDomain": {
    "message": "Уменьшать требования правила ограничения источника за счет изменения document.domain не рекомендуется. По умолчанию эта возможность будет отключена. Это предупреждение о прекращении поддержки относится к доступу из другого источника, который включен с помощью document.domain."
  },
  "generated/Deprecation.ts | CrossOriginWindowAlert": {
    "message": "Вызов функции window.alert из окон iframe в других источниках не поддерживается. В дальнейшем эта возможность будет удалена."
  },
  "generated/Deprecation.ts | CrossOriginWindowConfirm": {
    "message": "Вызов функции window.confirm из окон iframe в других источниках не поддерживается. В дальнейшем эта возможность будет удалена."
  },
  "generated/Deprecation.ts | DOMMutationEvents": {
    "message": "События изменения DOM, в том числе DOMSubtreeModified, DOMNodeInserted, DOMNodeRemoved, DOMNodeRemovedFromDocument, DOMNodeInsertedIntoDocument и DOMCharacterDataModified, больше не поддерживаются (https://w3c.github.io/uievents/#legacy-event-types) и будут удалены. Используйте вместо них MutationObserver."
  },
  "generated/Deprecation.ts | DataUrlInSvgUse": {
    "message": "URL из SVGUseElement больше не поддерживаются и в дальнейшем будут удалены."
  },
  "generated/Deprecation.ts | DocumentDomainSettingWithoutOriginAgentClusterHeader": {
    "message": "Уменьшать требования правила ограничения источника за счет изменения document.domain не рекомендуется. По умолчанию эта возможность будет отключена. Теперь, чтобы использовать эту функцию, нужно отказаться от применения кластеров агента с ключом источника, отправив заголовок Origin-Agent-Cluster: ?0 в ответе HTTP для документа и фреймов. Подробнее: https://developer.chrome.com/blog/immutable-document-domain/."
  },
  "generated/Deprecation.ts | GeolocationInsecureOrigin": {
    "message": "Методы getCurrentPosition() и watchPosition() больше не работают с небезопасными источниками. Чтобы использовать их, задайте для приложения безопасный источник, например HTTPS. Подробнее: https://goo.gle/chrome-insecure-origins."
  },
  "generated/Deprecation.ts | GeolocationInsecureOriginDeprecatedNotRemoved": {
    "message": "Методы getCurrentPosition() и watchPosition() в небезопасных источниках больше не поддерживаются. Чтобы использовать их, задайте для приложения безопасный источник, например HTTPS. Подробнее: https://goo.gle/chrome-insecure-origins."
  },
  "generated/Deprecation.ts | GetUserMediaInsecureOrigin": {
    "message": "Метод getUserMedia() больше не работает с небезопасными источниками. Чтобы использовать его, задайте для приложения безопасный источник, например HTTPS. Подробнее: https://goo.gle/chrome-insecure-origins."
  },
  "generated/Deprecation.ts | HostCandidateAttributeGetter": {
    "message": "RTCPeerConnectionIceErrorEvent.hostCandidate больше не поддерживается. Используйте RTCPeerConnectionIceErrorEvent.address или RTCPeerConnectionIceErrorEvent.port."
  },
  "generated/Deprecation.ts | IdentityInCanMakePaymentEvent": {
    "message": "Страна продавца и случайные данные из события service workercanmakepayment устарели и будут удалены: topOrigin, paymentRequestOrigin, methodData, modifiers."
  },
  "generated/Deprecation.ts | InsecurePrivateNetworkSubresourceRequest": {
    "message": "Сайт запросил подресурс из сети, доступ к которому можно получить только благодаря расширенным сетевым разрешениям пользователей. Такие запросы делают внутренние устройства и серверы доступными через интернет, что повышает риск подделки межсайтовых запросов (CSRF) и утечки информации. Чтобы предотвратить такие ситуации, в Chrome прекращается поддержка запросов к внутренним подресурсам, которые инициируются в небезопасных контекстах. В будущем такие запросы будут блокироваться."
  },
  "generated/Deprecation.ts | InterestGroupDailyUpdateUrl": {
    "message": "Поле dailyUpdateUrl в структуре InterestGroups, переданное в joinAdInterestGroup(), было переименовано в updateUrl, чтобы лучше отражать его поведение."
  },
  "generated/Deprecation.ts | LocalCSSFileExtensionRejected": {
    "message": "Загрузить CSS с помощью URL в формате file: можно, только если у имени файла расширение .css."
  },
  "generated/Deprecation.ts | MediaSourceAbortRemove": {
    "message": "Использовать метод SourceBuffer.abort() для отмены асинхронного удаления диапазона, выполняемого в remove(), не рекомендуется из-за изменений в стандарте. В будущем поддержка этого метода будет прекращена. Руководствуйтесь событием updateend. Метод abort() предназначен только для отмены асинхронного добавления медиаданных или сброса состояния синтаксического анализатора."
  },
  "generated/Deprecation.ts | MediaSourceDurationTruncatingBuffered": {
    "message": "Устанавливать для MediaSource.duration значение меньше максимальной временной метки в воспроизводимых медиаданных для любых закодированных фреймов в буфере не рекомендуется из-за изменений стандарта. В будущем поддержка неявного удаления обрезанных медиаданных в буфере будет прекращена. Вместо этого придется явно выполнять метод remove(newDuration, oldDuration) для всех объектов sourceBuffers, для которых newDuration < oldDuration."
  },
  "generated/Deprecation.ts | NoSysexWebMIDIWithoutPermission": {
    "message": "Web MIDI запрашивает разрешение на использование, даже если в объекте MIDIOptions не указан параметр sysex."
  },
  "generated/Deprecation.ts | NotificationInsecureOrigin": {
    "message": "Использовать Notification API из небезопасных источников больше нельзя. Укажите для своего приложения безопасный источник, например HTTPS. Подробнее: https://goo.gle/chrome-insecure-origins."
  },
  "generated/Deprecation.ts | NotificationPermissionRequestedIframe": {
    "message": "Из окон iframe в других источниках больше нельзя запрашивать разрешение на использование Notification API. Запросите разрешение у фрейма верхнего уровня или откройте новое окно."
  },
  "generated/Deprecation.ts | ObsoleteCreateImageBitmapImageOrientationNone": {
    "message": "Для метода createImageBitmap параметр {imageOrientation: 'none'} больше не поддерживается. Используйте этот метод с параметром {imageOrientation: 'from-image'}."
  },
  "generated/Deprecation.ts | ObsoleteWebRtcCipherSuite": {
    "message": "Ваш партнер обменивается данными с использованием устаревшей версии (D)TLS. Сообщите ему о необходимости это исправить."
  },
  "generated/Deprecation.ts | OverflowVisibleOnReplacedElement": {
    "message": "Если назначить свойство overflow: visible для элементов img, video или canvas, их визуальный контент может выйти за пределы границ. Подробности: https://github.com/WICG/shared-element-transitions/blob/main/debugging_overflow_on_images.md."
  },
  "generated/Deprecation.ts | PaymentInstruments": {
    "message": "paymentManager.instruments больше не поддерживается. Используйте актуальный API для обработки платежей."
  },
  "generated/Deprecation.ts | PaymentRequestCSPViolation": {
    "message": "Вызов PaymentRequest API нарушает директиву Content-Security-Policy (CSP) connect-src. Этот метод обхода директивы устарел. Добавьте идентификатор способа оплаты из PaymentRequest API в вашу директиву CSP connect-src, в поле supportedMethods."
  },
  "generated/Deprecation.ts | PersistentQuotaType": {
    "message": "StorageType.persistent больше не поддерживается. Используйте стандартный метод navigator.storage."
  },
  "generated/Deprecation.ts | PictureSourceSrc": {
    "message": "Элемент <source src> с родительским объектом <picture> недействителен, поэтому игнорируется. Используйте <source srcset>."
  },
  "generated/Deprecation.ts | PrefixedCancelAnimationFrame": {
    "message": "Метод webkitCancelAnimationFrame связан с определенным поставщиком. Используйте стандартный метод cancelAnimationFrame вместо него."
  },
  "generated/Deprecation.ts | PrefixedRequestAnimationFrame": {
    "message": "Метод webkitRequestAnimationFrame связан с определенным поставщиком. Используйте стандартный метод requestAnimationFrame вместо него."
  },
  "generated/Deprecation.ts | PrefixedVideoDisplayingFullscreen": {
    "message": "Метод HTMLVideoElement.webkitDisplayingFullscreen больше не поддерживается. Используйте Document.fullscreenElement вместо него."
  },
  "generated/Deprecation.ts | PrefixedVideoEnterFullScreen": {
    "message": "Метод HTMLVideoElement.webkitEnterFullScreen() больше не поддерживается. Используйте Element.requestFullscreen() вместо него."
  },
  "generated/Deprecation.ts | PrefixedVideoEnterFullscreen": {
    "message": "Метод HTMLVideoElement.webkitEnterFullscreen() больше не поддерживается. Используйте Element.requestFullscreen() вместо него."
  },
  "generated/Deprecation.ts | PrefixedVideoExitFullScreen": {
    "message": "Метод HTMLVideoElement.webkitExitFullScreen() больше не поддерживается. Используйте Document.exitFullscreen() вместо него."
  },
  "generated/Deprecation.ts | PrefixedVideoExitFullscreen": {
    "message": "Метод HTMLVideoElement.webkitExitFullscreen() больше не поддерживается. Используйте Document.exitFullscreen() вместо него."
  },
  "generated/Deprecation.ts | PrefixedVideoSupportsFullscreen": {
    "message": "Метод HTMLVideoElement.webkitSupportsFullscreen больше не поддерживается. Используйте Document.fullscreenEnabled вместо него."
  },
  "generated/Deprecation.ts | PrivacySandboxExtensionsAPI": {
    "message": "Мы прекращаем поддержку chrome.privacy.websites.privacySandboxEnabled API. Он будет работать в рамках обратной совместимости до выпуска M113. Вместо этого API используйте chrome.privacy.websites.topicsEnabled, chrome.privacy.websites.fledgeEnabled и chrome.privacy.websites.adMeasurementEnabled. Подробнее: https://developer.chrome.com/docs/extensions/reference/privacy/#property-websites-privacySandboxEnabled."
  },
  "generated/Deprecation.ts | RTCConstraintEnableDtlsSrtpFalse": {
    "message": "Ограничение DtlsSrtpKeyAgreement удалено. Вы указали для него значение false, которое интерпретируется как попытка использовать неподдерживаемый метод SDES key negotiation. Эта возможность удалена. Вместо нее используйте сервис, поддерживающий DTLS key negotiation."
  },
  "generated/Deprecation.ts | RTCConstraintEnableDtlsSrtpTrue": {
    "message": "Ограничение DtlsSrtpKeyAgreement удалено. Вы указали для него значение true, которое ни на что не влияет, поэтому его можно удалить."
  },
  "generated/Deprecation.ts | RTCPeerConnectionGetStatsLegacyNonCompliant": {
    "message": "Callback-функция getStats() больше не поддерживается и будет удалена. Используйте соответствующую спецификации функцию getStats() вместо нее."
  },
  "generated/Deprecation.ts | RangeExpand": {
    "message": "Метод Range.expand() больше не поддерживается. Используйте Selection.modify() вместо него."
  },
  "generated/Deprecation.ts | RequestedSubresourceWithEmbeddedCredentials": {
    "message": "Запросы подресурсов, в URL которых содержатся встроенные учетные данные (например, https://user:pass@host/), блокируются."
  },
  "generated/Deprecation.ts | RtcpMuxPolicyNegotiate": {
    "message": "Параметр rtcpMuxPolicy больше не поддерживается и будет удален."
  },
  "generated/Deprecation.ts | SharedArrayBufferConstructedWithoutIsolation": {
    "message": "Для SharedArrayBuffer требуется изоляция от междоменных источников. Подробнее: https://developer.chrome.com/blog/enabling-shared-array-buffer/."
  },
  "generated/Deprecation.ts | TextToSpeech_DisallowedByAutoplay": {
    "message": "Вызов метода speechSynthesis.speak() без активации пользователем не поддерживается. В дальнейшем эта возможность будет удалена."
  },
  "generated/Deprecation.ts | UnloadHandler": {
    "message": "Прослушиватели событий выгрузки устарели и будут удалены."
  },
  "generated/Deprecation.ts | V8SharedArrayBufferConstructedInExtensionWithoutIsolation": {
    "message": "Теперь, чтобы использовать объект SharedArrayBuffer, в расширениях необходимо включить изоляцию от междоменных источников. Подробнее: https://developer.chrome.com/docs/extensions/mv3/cross-origin-isolation/."
  },
  "generated/Deprecation.ts | WebSQL": {
    "message": "Web SQL больше не поддерживается. Используйте SQLite WebAssembly или индексированную базу данных."
  },
  "generated/Deprecation.ts | WindowPlacementPermissionDescriptorUsed": {
    "message": "Дескриптор разрешения window-placement больше не поддерживается. Вместо него используйте window-management. Подробнее: https://bit.ly/window-placement-rename."
  },
  "generated/Deprecation.ts | WindowPlacementPermissionPolicyParsed": {
    "message": "Правило window-placement больше не поддерживается. Вместо него используйте window-management. Подробнее: https://bit.ly/window-placement-rename."
  },
  "generated/Deprecation.ts | XHRJSONEncodingDetection": {
    "message": "В объекте JSON ответа XMLHttpRequest не поддерживает UTF-16."
  },
  "generated/Deprecation.ts | XMLHttpRequestSynchronousInNonWorkerOutsideBeforeUnload": {
    "message": "Синхронные вызовы метода XMLHttpRequest в основном потоке больше не поддерживаются, так как они отрицательно влияют на удобство работы пользователей. Подробнее: https://xhr.spec.whatwg.org/."
  },
  "generated/Deprecation.ts | XRSupportsSession": {
    "message": "Метод supportsSession() больше не поддерживается. Вместо него используйте метод isSessionSupported() и получайте результат в виде логического значения."
  },
  "models/bindings/ContentProviderBasedProject.ts | unknownErrorLoadingFile": {
    "message": "Неизвестная ошибка при загрузке файла."
  },
  "models/bindings/DebuggerLanguagePlugins.ts | debugSymbolsIncomplete": {
    "message": "Сведения для отладки функции {PH1} неполные."
  },
  "models/bindings/DebuggerLanguagePlugins.ts | errorInDebuggerLanguagePlugin": {
    "message": "Ошибка языкового плагина отладчика: {PH1}."
  },
  "models/bindings/DebuggerLanguagePlugins.ts | failedToLoadDebugSymbolsFor": {
    "message": "[{PH1}] Не удалось загрузить отладочные символы для {PH2} ({PH3})."
  },
  "models/bindings/DebuggerLanguagePlugins.ts | failedToLoadDebugSymbolsForFunction": {
    "message": "Сведения для отладки функции {PH1} отсутствуют."
  },
  "models/bindings/DebuggerLanguagePlugins.ts | loadedDebugSymbolsForButDidnt": {
    "message": "[{PH1}] Загружены отладочные символы для {PH2}, исходные файлы не найдены."
  },
  "models/bindings/DebuggerLanguagePlugins.ts | loadedDebugSymbolsForFound": {
    "message": "[{PH1}] Загружены отладочные символы для {PH2}, найдены исходные файлы: {PH3}."
  },
  "models/bindings/DebuggerLanguagePlugins.ts | loadingDebugSymbolsFor": {
    "message": "[{PH1}] Загрузка отладочных символов для {PH2}…"
  },
  "models/bindings/DebuggerLanguagePlugins.ts | loadingDebugSymbolsForVia": {
    "message": "[{PH1}] Загрузка отладочных символов для {PH2} (через {PH3})…"
  },
  "models/bindings/IgnoreListManager.ts | addAllContentScriptsToIgnoreList": {
    "message": "Добавить все скрипты для расширений в список игнорируемых"
  },
  "models/bindings/IgnoreListManager.ts | addAllThirdPartyScriptsToIgnoreList": {
    "message": "Добавить все сторонние скрипты в список игнорируемых"
  },
  "models/bindings/IgnoreListManager.ts | addDirectoryToIgnoreList": {
    "message": "Добавить каталог в список игнорируемых"
  },
  "models/bindings/IgnoreListManager.ts | addScriptToIgnoreList": {
    "message": "Добавить скрипт в список игнорируемых"
  },
  "models/bindings/IgnoreListManager.ts | removeFromIgnoreList": {
    "message": "Удалить из списка игнорируемых"
  },
  "models/bindings/ResourceScriptMapping.ts | liveEditCompileFailed": {
    "message": "Не удалось скомпилировать LiveEdit: {PH1}."
  },
  "models/bindings/ResourceScriptMapping.ts | liveEditFailed": {
    "message": "{PH1}. Сбой функции LiveEdit."
  },
  "models/emulation/DeviceModeModel.ts | devicePixelRatioMustBeANumberOr": {
    "message": "Соотношение логических и физических пикселей устройства должно быть выражено числом или не задано."
  },
  "models/emulation/DeviceModeModel.ts | devicePixelRatioMustBeGreater": {
    "message": "Соотношение логических и физических пикселей устройства должно быть больше или равно {PH1}."
  },
  "models/emulation/DeviceModeModel.ts | devicePixelRatioMustBeLessThanOr": {
    "message": "Соотношение логических и физических пикселей устройства должно быть меньше или равно {PH1}."
  },
  "models/emulation/DeviceModeModel.ts | heightCannotBeEmpty": {
    "message": "Необходимо указать высоту."
  },
  "models/emulation/DeviceModeModel.ts | heightMustBeANumber": {
    "message": "Высота должна быть выражена числом."
  },
  "models/emulation/DeviceModeModel.ts | heightMustBeGreaterThanOrEqualTo": {
    "message": "Высота должна быть больше или равна {PH1}."
  },
  "models/emulation/DeviceModeModel.ts | heightMustBeLessThanOrEqualToS": {
    "message": "Высота должна быть меньше или равна {PH1}."
  },
  "models/emulation/DeviceModeModel.ts | widthCannotBeEmpty": {
    "message": "Необходимо указать ширину."
  },
  "models/emulation/DeviceModeModel.ts | widthMustBeANumber": {
    "message": "Ширина должна быть выражена числом."
  },
  "models/emulation/DeviceModeModel.ts | widthMustBeGreaterThanOrEqualToS": {
    "message": "Ширина должна быть больше или равна {PH1}."
  },
  "models/emulation/DeviceModeModel.ts | widthMustBeLessThanOrEqualToS": {
    "message": "Ширина должна быть меньше или равна {PH1}."
  },
  "models/emulation/EmulatedDevices.ts | laptopWithHiDPIScreen": {
    "message": "Ноутбук с экраном HiDPI"
  },
  "models/emulation/EmulatedDevices.ts | laptopWithMDPIScreen": {
    "message": "Ноутбук с экраном MDPI"
  },
  "models/emulation/EmulatedDevices.ts | laptopWithTouch": {
    "message": "Ноутбук с сенсорным экраном"
  },
  "models/har/Writer.ts | collectingContent": {
    "message": "Сбор контента…"
  },
  "models/har/Writer.ts | writingFile": {
    "message": "Запись в файл…"
  },
  "models/issues_manager/BounceTrackingIssue.ts | bounceTrackingMitigations": {
    "message": "Предотвращение отслеживания с переадресацией"
  },
  "models/issues_manager/ClientHintIssue.ts | clientHintsInfrastructure": {
    "message": "Инфраструктура клиентских подсказок"
  },
  "models/issues_manager/ContentSecurityPolicyIssue.ts | contentSecurityPolicyEval": {
    "message": "Content Security Policy – оценка"
  },
  "models/issues_manager/ContentSecurityPolicyIssue.ts | contentSecurityPolicyInlineCode": {
    "message": "Content Security Policy – встроенный код"
  },
  "models/issues_manager/ContentSecurityPolicyIssue.ts | contentSecurityPolicySource": {
    "message": "Content Security Policy – белые списки источников"
  },
  "models/issues_manager/ContentSecurityPolicyIssue.ts | trustedTypesFixViolations": {
    "message": "Trusted Types – исправление нарушений"
  },
  "models/issues_manager/ContentSecurityPolicyIssue.ts | trustedTypesPolicyViolation": {
    "message": "Trusted Types – нарушение правил"
  },
  "models/issues_manager/CookieDeprecationMetadataIssue.ts | thirdPartyPhaseoutExplained": {
    "message": "Подготовка к отказу от сторонних файлов cookie"
  },
  "models/issues_manager/CookieIssue.ts | aSecure": {
    "message": "безопасно"
  },
  "models/issues_manager/CookieIssue.ts | anInsecure": {
    "message": "небезопасно"
  },
  "models/issues_manager/CookieIssue.ts | fileCrosSiteRedirectBug": {
    "message": "Сообщить об ошибке"
  },
  "models/issues_manager/CookieIssue.ts | firstPartySetsExplained": {
    "message": "First-Party Sets и атрибут SameParty"
  },
  "models/issues_manager/CookieIssue.ts | howSchemefulSamesiteWorks": {
    "message": "Как работает функция переопределения сайтов"
  },
  "models/issues_manager/CookieIssue.ts | samesiteCookiesExplained": {
    "message": "О файлах cookie SameSite"
  },
  "models/issues_manager/CookieIssue.ts | thirdPartyPhaseoutExplained": {
    "message": "Подготовка к отказу от сторонних файлов cookie"
  },
  "models/issues_manager/CorsIssue.ts | CORS": {
    "message": "Совместное использование ресурсов между разными источниками (CORS)"
  },
  "models/issues_manager/CorsIssue.ts | corsPrivateNetworkAccess": {
    "message": "Private Network Access"
  },
  "models/issues_manager/CrossOriginEmbedderPolicyIssue.ts | coopAndCoep": {
    "message": "COOP и COEP"
  },
  "models/issues_manager/CrossOriginEmbedderPolicyIssue.ts | samesiteAndSameorigin": {
    "message": "SameSite и SameOrigin"
  },
  "models/issues_manager/DeprecationIssue.ts | feature": {
    "message": "Дополнительную информацию можно найти на странице состояния функции."
  },
  "models/issues_manager/DeprecationIssue.ts | milestone": {
    "message": "Это изменение вступит в силу в версии {milestone}."
  },
  "models/issues_manager/DeprecationIssue.ts | title": {
    "message": "Используется устаревшая функция"
  },
  "models/issues_manager/FederatedAuthRequestIssue.ts | fedCm": {
    "message": "Federated Credential Management API"
  },
  "models/issues_manager/FederatedAuthUserInfoRequestIssue.ts | fedCmUserInfo": {
    "message": "Federated Credential Management User Info API"
  },
  "models/issues_manager/GenericIssue.ts | autocompleteAttributePageTitle": {
    "message": "HTML-атрибут: автозаполнение"
  },
  "models/issues_manager/GenericIssue.ts | corbExplainerPageTitle": {
    "message": "Описание CORB"
  },
  "models/issues_manager/GenericIssue.ts | crossOriginPortalPostMessage": {
    "message": "Порталы – каналы связи с одним источником"
  },
  "models/issues_manager/GenericIssue.ts | howDoesAutofillWorkPageTitle": {
    "message": "Как работает автозаполнение?"
  },
  "models/issues_manager/GenericIssue.ts | inputFormElementPageTitle": {
    "message": "Элементы ввода формы"
  },
  "models/issues_manager/GenericIssue.ts | labelFormlementsPageTitle": {
    "message": "Элементы Label"
  },
  "models/issues_manager/HeavyAdIssue.ts | handlingHeavyAdInterventions": {
    "message": "Как справиться с воздействием тяжелых объявлений"
  },
  "models/issues_manager/Issue.ts | breakingChangeIssue": {
    "message": "Проблема критического изменения: страница может перестать работать в следующей версии Chrome."
  },
  "models/issues_manager/Issue.ts | breakingChanges": {
    "message": "Критические изменения"
  },
  "models/issues_manager/Issue.ts | improvementIssue": {
    "message": "Проблема с улучшением: страницу можно улучшить."
  },
  "models/issues_manager/Issue.ts | improvements": {
    "message": "Улучшения"
  },
  "models/issues_manager/Issue.ts | pageErrorIssue": {
    "message": "Ошибка страницы. Некорректная работа."
  },
  "models/issues_manager/Issue.ts | pageErrors": {
    "message": "Ошибки страницы"
  },
  "models/issues_manager/LowTextContrastIssue.ts | colorAndContrastAccessibility": {
    "message": "Специальные возможности цвета и контраста"
  },
  "models/issues_manager/MixedContentIssue.ts | preventingMixedContent": {
    "message": "Предотвращать смешанный контент"
  },
  "models/issues_manager/QuirksModeIssue.ts | documentCompatibilityMode": {
    "message": "Режим совместимости с документом"
  },
  "models/issues_manager/SharedArrayBufferIssue.ts | enablingSharedArrayBuffer": {
    "message": "Включение объекта SharedArrayBuffer"
  },
  "models/logs/NetworkLog.ts | anonymous": {
    "message": "<анонимный>"
  },
  "models/logs/logs-meta.ts | clear": {
    "message": "очистить"
  },
  "models/logs/logs-meta.ts | doNotPreserveLogOnPageReload": {
    "message": "Не сохранять журнал при перезагрузке страницы и переходе между страницами"
  },
  "models/logs/logs-meta.ts | preserve": {
    "message": "сохранить"
  },
  "models/logs/logs-meta.ts | preserveLog": {
    "message": "Сохранять журнал"
  },
  "models/logs/logs-meta.ts | preserveLogOnPageReload": {
    "message": "Сохранять журнал при перезагрузке страницы и переходе между страницами"
  },
  "models/logs/logs-meta.ts | recordNetworkLog": {
    "message": "Запись сетевого журнала"
  },
  "models/logs/logs-meta.ts | reset": {
    "message": "сбросить"
  },
  "models/persistence/EditFileSystemView.ts | add": {
    "message": "Добавить"
  },
  "models/persistence/EditFileSystemView.ts | enterAPath": {
    "message": "Укажите путь."
  },
  "models/persistence/EditFileSystemView.ts | enterAUniquePath": {
    "message": "Введите уникальный путь."
  },
  "models/persistence/EditFileSystemView.ts | excludedFolders": {
    "message": "Исключенные папки"
  },
  "models/persistence/EditFileSystemView.ts | folderPath": {
    "message": "Путь к папке"
  },
  "models/persistence/EditFileSystemView.ts | none": {
    "message": "Нет"
  },
  "models/persistence/EditFileSystemView.ts | sViaDevtools": {
    "message": "{PH1} (через инструменты разработчика)"
  },
  "models/persistence/IsolatedFileSystem.ts | blobCouldNotBeLoaded": {
    "message": "Не удалось загрузить BLOB-объект."
  },
  "models/persistence/IsolatedFileSystem.ts | cantReadFileSS": {
    "message": "Не удается прочитать файл {PH1}: {PH2}."
  },
  "models/persistence/IsolatedFileSystem.ts | fileSystemErrorS": {
    "message": "Ошибка файловой системы: {PH1}."
  },
  "models/persistence/IsolatedFileSystem.ts | linkedToS": {
    "message": "Связано с {PH1}"
  },
  "models/persistence/IsolatedFileSystem.ts | unknownErrorReadingFileS": {
    "message": "Неизвестная ошибка при чтении файла: {PH1}."
  },
  "models/persistence/IsolatedFileSystemManager.ts | unableToAddFilesystemS": {
    "message": "Не удается добавить файловую систему: {PH1}."
  },
  "models/persistence/PersistenceActions.ts | openInContainingFolder": {
    "message": "Открыть папку с файлом"
  },
  "models/persistence/PersistenceActions.ts | overrideContent": {
    "message": "Переопределить контент"
  },
  "models/persistence/PersistenceActions.ts | overrideSourceMappedFileExplanation": {
    "message": "Файл {PH1} включен в карту исходного кода и не может быть перезаписан."
  },
  "models/persistence/PersistenceActions.ts | overrideSourceMappedFileWarning": {
    "message": "Переопределить правила скрипта {PH1}?"
  },
  "models/persistence/PersistenceActions.ts | saveAs": {
    "message": "Сохранить как…"
  },
  "models/persistence/PersistenceActions.ts | saveImage": {
    "message": "Сохранить изображение"
  },
  "models/persistence/PersistenceActions.ts | showOverrides": {
    "message": "Показать все переопределения"
  },
  "models/persistence/PersistenceUtils.ts | linkedToS": {
    "message": "Связано с {PH1}"
  },
  "models/persistence/PersistenceUtils.ts | linkedToSourceMapS": {
    "message": "Связано с картой исходного кода: {PH1}."
  },
  "models/persistence/PlatformFileSystem.ts | unableToReadFilesWithThis": {
    "message": "PlatformFileSystem не может читать файлы."
  },
  "models/persistence/WorkspaceSettingsTab.ts | addFolder": {
    "message": "Добавить папку…"
  },
  "models/persistence/WorkspaceSettingsTab.ts | folderExcludePattern": {
    "message": "Шаблон исключения папки"
  },
  "models/persistence/WorkspaceSettingsTab.ts | mappingsAreInferredAutomatically": {
    "message": "Сопоставления определяются автоматически"
  },
  "models/persistence/WorkspaceSettingsTab.ts | remove": {
    "message": "Удалить"
  },
  "models/persistence/WorkspaceSettingsTab.ts | workspace": {
    "message": "Рабочая область"
  },
  "models/persistence/persistence-meta.ts | disableOverrideNetworkRequests": {
    "message": "Отключить сетевые запросы на переопределение"
  },
  "models/persistence/persistence-meta.ts | enableLocalOverrides": {
    "message": "Разрешить локальное переопределение"
  },
  "models/persistence/persistence-meta.ts | enableOverrideNetworkRequests": {
    "message": "Включить переопределение сетевых запросов"
  },
  "models/persistence/persistence-meta.ts | interception": {
    "message": "перехват"
  },
  "models/persistence/persistence-meta.ts | network": {
    "message": "сеть"
  },
  "models/persistence/persistence-meta.ts | override": {
    "message": "переопределить"
  },
  "models/persistence/persistence-meta.ts | request": {
    "message": "запрос"
  },
  "models/persistence/persistence-meta.ts | rewrite": {
    "message": "перезаписать"
  },
  "models/persistence/persistence-meta.ts | showWorkspace": {
    "message": "Показать настройки рабочей области"
  },
  "models/persistence/persistence-meta.ts | workspace": {
    "message": "Рабочая область"
  },
  "models/timeline_model/TimelineJSProfile.ts | threadS": {
    "message": "Поток {PH1}"
  },
  "models/timeline_model/TimelineModel.ts | dedicatedWorker": {
    "message": "Выделенное: Worker"
  },
  "models/timeline_model/TimelineModel.ts | threadS": {
    "message": "Поток {PH1}"
  },
  "models/timeline_model/TimelineModel.ts | workerS": {
    "message": "Worker – {PH1}"
  },
  "models/timeline_model/TimelineModel.ts | workerSS": {
    "message": "Worker: {PH1} – {PH2}"
  },
  "models/workspace/UISourceCode.ts | index": {
    "message": "(индекс)"
  },
  "models/workspace/UISourceCode.ts | thisFileWasChangedExternally": {
    "message": "Этот файл был изменен извне. Хотите обновить его?"
  },
  "panels/accessibility/ARIAAttributesView.ts | ariaAttributes": {
    "message": "Атрибуты ARIA"
  },
  "panels/accessibility/ARIAAttributesView.ts | noAriaAttributes": {
    "message": "Атрибутов ARIA нет"
  },
  "panels/accessibility/AXBreadcrumbsPane.ts | accessibilityTree": {
    "message": "Дерево доступности"
  },
  "panels/accessibility/AXBreadcrumbsPane.ts | fullTreeExperimentDescription": {
    "message": "Дерево доступности перемещено в правый верхний угол дерева DOM."
  },
  "panels/accessibility/AXBreadcrumbsPane.ts | fullTreeExperimentName": {
    "message": "Дерево доступности на всю страницу"
  },
  "panels/accessibility/AXBreadcrumbsPane.ts | ignored": {
    "message": "Игнорируется"
  },
  "panels/accessibility/AXBreadcrumbsPane.ts | reloadRequired": {
    "message": "Чтобы изменение вступило в силу, требуется перезагрузка."
  },
  "panels/accessibility/AXBreadcrumbsPane.ts | scrollIntoView": {
    "message": "Прокрутить в видимую область"
  },
  "panels/accessibility/AccessibilityNodeView.ts | accessibilityNodeNotExposed": {
    "message": "Узел специальных возможностей не отображается"
  },
  "panels/accessibility/AccessibilityNodeView.ts | ancestorChildrenAreAll": {
    "message": "Все дочерние элементы предка описательные:"
  },
  "panels/accessibility/AccessibilityNodeView.ts | computedProperties": {
    "message": "Вычисленные свойства"
  },
  "panels/accessibility/AccessibilityNodeView.ts | elementHasEmptyAltText": {
    "message": "У элемента нет альтернативного текста."
  },
  "panels/accessibility/AccessibilityNodeView.ts | elementHasPlaceholder": {
    "message": "Элемент содержит {PH1}."
  },
  "panels/accessibility/AccessibilityNodeView.ts | elementIsHiddenBy": {
    "message": "Элемент скрыт активным модальным диалоговым окном:"
  },
  "panels/accessibility/AccessibilityNodeView.ts | elementIsHiddenByChildTree": {
    "message": "Элемент скрыт дочерним деревом:"
  },
  "panels/accessibility/AccessibilityNodeView.ts | elementIsInAnInertSubTree": {
    "message": "Элемент является частью поддерева (inert) из"
  },
  "panels/accessibility/AccessibilityNodeView.ts | elementIsInert": {
    "message": "Элемент: inert."
  },
  "panels/accessibility/AccessibilityNodeView.ts | elementIsNotRendered": {
    "message": "Элемент не отображается."
  },
  "panels/accessibility/AccessibilityNodeView.ts | elementIsNotVisible": {
    "message": "Элемент не отображается."
  },
  "panels/accessibility/AccessibilityNodeView.ts | elementIsPlaceholder": {
    "message": "Элемент: {PH1}."
  },
  "panels/accessibility/AccessibilityNodeView.ts | elementIsPresentational": {
    "message": "Элемент используется для описания."
  },
  "panels/accessibility/AccessibilityNodeView.ts | elementNotInteresting": {
    "message": "Элемент не используется для специальных возможностей."
  },
  "panels/accessibility/AccessibilityNodeView.ts | elementsInheritsPresentational": {
    "message": "Элемент получает атрибут role со значением presentation от "
  },
  "panels/accessibility/AccessibilityNodeView.ts | invalidSource": {
    "message": "Недопустимый источник"
  },
  "panels/accessibility/AccessibilityNodeView.ts | labelFor": {
    "message": "Ярлык для"
  },
  "panels/accessibility/AccessibilityNodeView.ts | noAccessibilityNode": {
    "message": "Нет узла специальных возможностей"
  },
  "panels/accessibility/AccessibilityNodeView.ts | noNodeWithThisId": {
    "message": "Не найдено узлов с таким идентификатором."
  },
  "panels/accessibility/AccessibilityNodeView.ts | noTextContent": {
    "message": "Нет текстового контента."
  },
  "panels/accessibility/AccessibilityNodeView.ts | notSpecified": {
    "message": "Не указано"
  },
  "panels/accessibility/AccessibilityNodeView.ts | partOfLabelElement": {
    "message": "Часть элемента ярлыка:"
  },
  "panels/accessibility/AccessibilityNodeView.ts | placeholderIsPlaceholderOnAncestor": {
    "message": "Атрибут {PH1} имеет значение {PH2} для предшествующего элемента:"
  },
  "panels/accessibility/AccessibilityStrings.ts | aHumanreadableVersionOfTheValue": {
    "message": "Человекочитаемая версия значения виджета диапазона (где необходимо)"
  },
  "panels/accessibility/AccessibilityStrings.ts | activeDescendant": {
    "message": "Динамический дочерний элемент"
  },
  "panels/accessibility/AccessibilityStrings.ts | atomicLiveRegions": {
    "message": "Атомарные (динамические области)"
  },
  "panels/accessibility/AccessibilityStrings.ts | busyLiveRegions": {
    "message": "Busy (динамические области)"
  },
  "panels/accessibility/AccessibilityStrings.ts | canSetValue": {
    "message": "Может задавать значение"
  },
  "panels/accessibility/AccessibilityStrings.ts | checked": {
    "message": "Выбрано"
  },
  "panels/accessibility/AccessibilityStrings.ts | contents": {
    "message": "Содержание"
  },
  "panels/accessibility/AccessibilityStrings.ts | controls": {
    "message": "Элементы управления"
  },
  "panels/accessibility/AccessibilityStrings.ts | describedBy": {
    "message": "Автор описания"
  },
  "panels/accessibility/AccessibilityStrings.ts | description": {
    "message": "Описание"
  },
  "panels/accessibility/AccessibilityStrings.ts | disabled": {
    "message": "Отключено"
  },
  "panels/accessibility/AccessibilityStrings.ts | editable": {
    "message": "Доступно для редактирования"
  },
  "panels/accessibility/AccessibilityStrings.ts | elementOrElementsWhichFormThe": {
    "message": "Один или несколько элементов, которые формируют описание для этого элемента"
  },
  "panels/accessibility/AccessibilityStrings.ts | elementOrElementsWhichMayFormThe": {
    "message": "Один или несколько элементов, которые могут формировать название для этого элемента"
  },
  "panels/accessibility/AccessibilityStrings.ts | elementOrElementsWhichShouldBe": {
    "message": "Один или несколько элементов, которые должны считаться дочерними для этого элемента, но не должны быть дочерними в DOM"
  },
  "panels/accessibility/AccessibilityStrings.ts | elementOrElementsWhoseContentOr": {
    "message": "Элементы, контент или присутствие которых контролируется этим виджетом"
  },
  "panels/accessibility/AccessibilityStrings.ts | elementToWhichTheUserMayChooseTo": {
    "message": "Элемент, к которому пользователь может перейти после этого элемента вместо следующего в порядке DOM"
  },
  "panels/accessibility/AccessibilityStrings.ts | expanded": {
    "message": "Развернуто"
  },
  "panels/accessibility/AccessibilityStrings.ts | focusable": {
    "message": "Фокусируемый"
  },
  "panels/accessibility/AccessibilityStrings.ts | focused": {
    "message": "Выбрано"
  },
  "panels/accessibility/AccessibilityStrings.ts | forARangeWidgetTheMaximumAllowed": {
    "message": "Максимально допустимое значение, если используется виджет диапазона"
  },
  "panels/accessibility/AccessibilityStrings.ts | forARangeWidgetTheMinimumAllowed": {
    "message": "Минимальное допустимое значение, если используется виджет диапазона"
  },
  "panels/accessibility/AccessibilityStrings.ts | fromAttribute": {
    "message": "Из атрибута"
  },
  "panels/accessibility/AccessibilityStrings.ts | fromCaption": {
    "message": "Источник: caption"
  },
  "panels/accessibility/AccessibilityStrings.ts | fromDescription": {
    "message": "Источник: description"
  },
  "panels/accessibility/AccessibilityStrings.ts | fromLabel": {
    "message": "Источник: label"
  },
  "panels/accessibility/AccessibilityStrings.ts | fromLabelFor": {
    "message": "Из атрибута label (for=)"
  },
  "panels/accessibility/AccessibilityStrings.ts | fromLabelWrapped": {
    "message": "Источник: label (перенесено)"
  },
  "panels/accessibility/AccessibilityStrings.ts | fromLegend": {
    "message": "Источник: legend"
  },
  "panels/accessibility/AccessibilityStrings.ts | fromNativeHtml": {
    "message": "Из нативного HTML"
  },
  "panels/accessibility/AccessibilityStrings.ts | fromPlaceholderAttribute": {
    "message": "Из атрибута тега"
  },
  "panels/accessibility/AccessibilityStrings.ts | fromRubyAnnotation": {
    "message": "Из аннотации ruby"
  },
  "panels/accessibility/AccessibilityStrings.ts | fromStyle": {
    "message": "Из стиля"
  },
  "panels/accessibility/AccessibilityStrings.ts | fromTitle": {
    "message": "Из названия"
  },
  "panels/accessibility/AccessibilityStrings.ts | hasAutocomplete": {
    "message": "Используется автозаполнение"
  },
  "panels/accessibility/AccessibilityStrings.ts | hasPopup": {
    "message": "Есть всплывающее окно"
  },
  "panels/accessibility/AccessibilityStrings.ts | help": {
    "message": "Справка"
  },
  "panels/accessibility/AccessibilityStrings.ts | ifAndHowThisElementCanBeEdited": {
    "message": "Можно ли отредактировать этот элемент и как это сделать"
  },
  "panels/accessibility/AccessibilityStrings.ts | ifThisElementMayReceiveLive": {
    "message": "Если этот элемент может получать обновления в режиме реального времени, то либо вся динамическая область должна быть представлена пользователю в процессе изменения, либо только измененные узлы"
  },
  "panels/accessibility/AccessibilityStrings.ts | ifThisElementMayReceiveLiveUpdates": {
    "message": "Обновления элемента, полученные в режиме реального времени, которые запускают уведомление"
  },
  "panels/accessibility/AccessibilityStrings.ts | ifThisElementMayReceiveLiveUpdatesThe": {
    "message": "Корневой элемент интерактивной области, которая содержит элемент, получающий обновления в режиме реального времени"
  },
  "panels/accessibility/AccessibilityStrings.ts | ifTrueThisElementCanReceiveFocus": {
    "message": "Если задано значение True, этот элемент может получать фокус."
  },
  "panels/accessibility/AccessibilityStrings.ts | ifTrueThisElementCurrentlyCannot": {
    "message": "Если задано значение true, с этим элементом нельзя взаимодействовать."
  },
  "panels/accessibility/AccessibilityStrings.ts | ifTrueThisElementCurrentlyHas": {
    "message": "Если задано значение true, этот элемент сейчас выделен"
  },
  "panels/accessibility/AccessibilityStrings.ts | ifTrueThisElementMayBeInteracted": {
    "message": "Если задано значение true, с этим элементом можно взаимодействовать, но его значение нельзя изменить"
  },
  "panels/accessibility/AccessibilityStrings.ts | ifTrueThisElementsUserentered": {
    "message": "Если True, значение этого элемента, введенное пользователем, не соответствует требованию проверки"
  },
  "panels/accessibility/AccessibilityStrings.ts | implicit": {
    "message": "Неявный"
  },
  "panels/accessibility/AccessibilityStrings.ts | implicitValue": {
    "message": "Неявное значение"
  },
  "panels/accessibility/AccessibilityStrings.ts | indicatesThePurposeOfThisElement": {
    "message": "Определяет назначение этого элемента, например идиому пользовательского интерфейса для виджета, или структурную роль в документе"
  },
  "panels/accessibility/AccessibilityStrings.ts | invalidUserEntry": {
    "message": "Недопустимая пользовательская запись"
  },
  "panels/accessibility/AccessibilityStrings.ts | labeledBy": {
    "message": "С ярлыком:"
  },
  "panels/accessibility/AccessibilityStrings.ts | level": {
    "message": "Уровень"
  },
  "panels/accessibility/AccessibilityStrings.ts | liveRegion": {
    "message": "Динамическая область"
  },
  "panels/accessibility/AccessibilityStrings.ts | liveRegionRoot": {
    "message": "Корневой уровень динамической области"
  },
  "panels/accessibility/AccessibilityStrings.ts | maximumValue": {
    "message": "Максимальное значение"
  },
  "panels/accessibility/AccessibilityStrings.ts | minimumValue": {
    "message": "Минимальное значение"
  },
  "panels/accessibility/AccessibilityStrings.ts | multiline": {
    "message": "Несколько строк"
  },
  "panels/accessibility/AccessibilityStrings.ts | multiselectable": {
    "message": "Множественный выбор"
  },
  "panels/accessibility/AccessibilityStrings.ts | orientation": {
    "message": "Ориентация"
  },
  "panels/accessibility/AccessibilityStrings.ts | pressed": {
    "message": "Включен"
  },
  "panels/accessibility/AccessibilityStrings.ts | readonlyString": {
    "message": "Только чтение"
  },
  "panels/accessibility/AccessibilityStrings.ts | relatedElement": {
    "message": "Связанный элемент"
  },
  "panels/accessibility/AccessibilityStrings.ts | relevantLiveRegions": {
    "message": "Релевантно (интерактивные области)"
  },
  "panels/accessibility/AccessibilityStrings.ts | requiredString": {
    "message": "Обязательно"
  },
  "panels/accessibility/AccessibilityStrings.ts | role": {
    "message": "Роль"
  },
  "panels/accessibility/AccessibilityStrings.ts | selectedString": {
    "message": "Выбрано"
  },
  "panels/accessibility/AccessibilityStrings.ts | theAccessibleDescriptionForThis": {
    "message": "Доступное описание этого элемента"
  },
  "panels/accessibility/AccessibilityStrings.ts | theComputedHelpTextForThis": {
    "message": "Сгенерированный компьютером текст справки для этого элемента"
  },
  "panels/accessibility/AccessibilityStrings.ts | theComputedNameOfThisElement": {
    "message": "Вычисленное название этого элемента"
  },
  "panels/accessibility/AccessibilityStrings.ts | theDescendantOfThisElementWhich": {
    "message": "Активный дочерний элемент – элемент, на который нужно перенести фокусировку"
  },
  "panels/accessibility/AccessibilityStrings.ts | theHierarchicalLevelOfThis": {
    "message": "Иерархический уровень элемента"
  },
  "panels/accessibility/AccessibilityStrings.ts | theValueOfThisElementThisMayBe": {
    "message": "Значение этого элемента. В зависимости от элемента может быть представлено пользователем или разработчиком."
  },
  "panels/accessibility/AccessibilityStrings.ts | value": {
    "message": "Значение"
  },
  "panels/accessibility/AccessibilityStrings.ts | valueDescription": {
    "message": "Описание значения"
  },
  "panels/accessibility/AccessibilityStrings.ts | valueFromAttribute": {
    "message": "Значение из атрибута"
  },
  "panels/accessibility/AccessibilityStrings.ts | valueFromDescriptionElement": {
    "message": "Значение из элемента description"
  },
  "panels/accessibility/AccessibilityStrings.ts | valueFromElementContents": {
    "message": "Значение из содержимого элемента"
  },
  "panels/accessibility/AccessibilityStrings.ts | valueFromFigcaptionElement": {
    "message": "Значение из элемента figcaption"
  },
  "panels/accessibility/AccessibilityStrings.ts | valueFromLabelElement": {
    "message": "Значение из элемента label"
  },
  "panels/accessibility/AccessibilityStrings.ts | valueFromLabelElementWithFor": {
    "message": "Значение элемента label с атрибутом for="
  },
  "panels/accessibility/AccessibilityStrings.ts | valueFromLabelElementWrapped": {
    "message": "Значение из внешнего элемента label"
  },
  "panels/accessibility/AccessibilityStrings.ts | valueFromLegendElement": {
    "message": "Значение из элемента legend"
  },
  "panels/accessibility/AccessibilityStrings.ts | valueFromNativeHtmlRuby": {
    "message": "Значение из аннотации ruby в обычном HTML"
  },
  "panels/accessibility/AccessibilityStrings.ts | valueFromNativeHtmlUnknownSource": {
    "message": "Значение из нативного файла HTML (неизвестный источник)"
  },
  "panels/accessibility/AccessibilityStrings.ts | valueFromPlaceholderAttribute": {
    "message": "Значение из атрибута-плейсхолдера"
  },
  "panels/accessibility/AccessibilityStrings.ts | valueFromRelatedElement": {
    "message": "Значение из связанного элемента"
  },
  "panels/accessibility/AccessibilityStrings.ts | valueFromStyle": {
    "message": "Значение из стиля"
  },
  "panels/accessibility/AccessibilityStrings.ts | valueFromTableCaption": {
    "message": "Источник значения: table caption"
  },
  "panels/accessibility/AccessibilityStrings.ts | valueFromTitleAttribute": {
    "message": "Значение из атрибута названия"
  },
  "panels/accessibility/AccessibilityStrings.ts | whetherAUserMaySelectMoreThanOne": {
    "message": "Может ли пользователь выбрать больше одного варианта в этом виджете?"
  },
  "panels/accessibility/AccessibilityStrings.ts | whetherAndWhatPriorityOfLive": {
    "message": "Ожидаемый приоритет обновлений элемента в режиме реального времени"
  },
  "panels/accessibility/AccessibilityStrings.ts | whetherAndWhatTypeOfAutocomplete": {
    "message": "Предлагает ли этот элемент подсказки автозаполнения и какого типа"
  },
  "panels/accessibility/AccessibilityStrings.ts | whetherTheOptionRepresentedBy": {
    "message": "Выбран ли в настоящий момент параметр, представленный этим элементом"
  },
  "panels/accessibility/AccessibilityStrings.ts | whetherTheValueOfThisElementCan": {
    "message": "Можно ли установить значение этого элемента"
  },
  "panels/accessibility/AccessibilityStrings.ts | whetherThisCheckboxRadioButtonOr": {
    "message": "Состояние этого флажка, переключателя или элемента дерева: установлен, снят или частично установлен (например, имеет дочерние элементы, которые установлены или сняты)"
  },
  "panels/accessibility/AccessibilityStrings.ts | whetherThisElementHasCausedSome": {
    "message": "Вызывает ли элемент появление какого-либо всплывающего окна (например, меню)"
  },
  "panels/accessibility/AccessibilityStrings.ts | whetherThisElementIsARequired": {
    "message": "Является ли этот элемент полем, обязательным для заполнения"
  },
  "panels/accessibility/AccessibilityStrings.ts | whetherThisElementOrAnother": {
    "message": "Указывает, является ли развернутым этот элемент или другой элемент группировки, которым он управляет"
  },
  "panels/accessibility/AccessibilityStrings.ts | whetherThisElementOrItsSubtree": {
    "message": "Обновляется ли этот элемент или его поддерево в настоящее время, а следовательно, возможно ли несогласованное состояние"
  },
  "panels/accessibility/AccessibilityStrings.ts | whetherThisLinearElements": {
    "message": "Является ли эта линейная ориентация элемента горизонтальной или вертикальной"
  },
  "panels/accessibility/AccessibilityStrings.ts | whetherThisTextBoxMayHaveMore": {
    "message": "Может ли это текстовое поле содержать больше одной строки?"
  },
  "panels/accessibility/AccessibilityStrings.ts | whetherThisToggleButtonIs": {
    "message": "Указывает, включен ли переключатель"
  },
  "panels/accessibility/SourceOrderView.ts | noSourceOrderInformation": {
    "message": "Информация об источниках недоступна."
  },
  "panels/accessibility/SourceOrderView.ts | showSourceOrder": {
    "message": "Показать порядок источника"
  },
  "panels/accessibility/SourceOrderView.ts | sourceOrderViewer": {
    "message": "Просмотр порядка источников"
  },
  "panels/accessibility/SourceOrderView.ts | thereMayBeADelayInDisplaying": {
    "message": "Порядок источников для элементов с большим количеством дочерних элементов может отображаться с задержкой."
  },
  "panels/accessibility/accessibility-meta.ts | accessibility": {
    "message": "Специальные возможности"
  },
  "panels/accessibility/accessibility-meta.ts | shoAccessibility": {
    "message": "Показать \"Специальные возможности\""
  },
  "panels/animation/AnimationTimeline.ts | animationPreviewS": {
    "message": "Предпросмотр анимации {PH1}"
  },
  "panels/animation/AnimationTimeline.ts | animationPreviews": {
    "message": "Предварительный просмотр анимаций"
  },
  "panels/animation/AnimationTimeline.ts | clearAll": {
    "message": "Очистить все"
  },
  "panels/animation/AnimationTimeline.ts | pause": {
    "message": "Приостановить"
  },
  "panels/animation/AnimationTimeline.ts | pauseAll": {
    "message": "Приостановить все"
  },
  "panels/animation/AnimationTimeline.ts | pauseTimeline": {
    "message": "Приостановить временную шкалу"
  },
  "panels/animation/AnimationTimeline.ts | playTimeline": {
    "message": "Воспроизвести временную шкалу"
  },
  "panels/animation/AnimationTimeline.ts | playbackRatePlaceholder": {
    "message": "{PH1} %"
  },
  "panels/animation/AnimationTimeline.ts | playbackRates": {
    "message": "Скорость воспроизведения"
  },
  "panels/animation/AnimationTimeline.ts | replayTimeline": {
    "message": "Хронология повторного проигрывания"
  },
  "panels/animation/AnimationTimeline.ts | resumeAll": {
    "message": "Возобновить все"
  },
  "panels/animation/AnimationTimeline.ts | selectAnEffectAboveToInspectAnd": {
    "message": "Выберите эффект выше, чтобы посмотреть его и изменить."
  },
  "panels/animation/AnimationTimeline.ts | setSpeedToS": {
    "message": "Установить скорость {PH1}"
  },
  "panels/animation/AnimationTimeline.ts | waitingForAnimations": {
    "message": "Ожидание анимаций…"
  },
  "panels/animation/AnimationUI.ts | animationEndpointSlider": {
    "message": "Ползунок перехода в начало или конец анимации"
  },
  "panels/animation/AnimationUI.ts | animationKeyframeSlider": {
    "message": "Ползунок анимации по ключевым кадрам"
  },
  "panels/animation/AnimationUI.ts | sSlider": {
    "message": "Ползунок {PH1}"
  },
  "panels/animation/animation-meta.ts | animations": {
    "message": "Анимации"
  },
  "panels/animation/animation-meta.ts | showAnimations": {
    "message": "Показать \"Анимации\""
  },
  "panels/application/AppManifestView.ts | aUrlInTheManifestContainsA": {
    "message": "URL в манифесте содержит имя пользователя, пароль или порт."
  },
  "panels/application/AppManifestView.ts | actualHeightSpxOfSSDoesNotMatch": {
    "message": "{PH2} ({PH3}): фактическая высота ({PH1} пкс) не совпадает с указанной ({PH4} пкс)."
  },
  "panels/application/AppManifestView.ts | actualSizeSspxOfSSDoesNotMatch": {
    "message": "Фактический размер ({PH1} × {PH2} пкс) объекта \"{PH3}\" {PH4} не соответствует указанному размеру ({PH5} × {PH6} пкс)."
  },
  "panels/application/AppManifestView.ts | actualWidthSpxOfSSDoesNotMatch": {
    "message": "{PH2} ({PH3}): фактическая ширина ({PH1} пкс) не соответствует указанной ширине ({PH4} пкс)."
  },
  "panels/application/AppManifestView.ts | appIdExplainer": {
    "message": "С помощью идентификатора браузер определяет, должен ли манифест обновлять существующее приложение или он относится к новому веб-приложению, которое можно установить."
  },
  "panels/application/AppManifestView.ts | appIdNote": {
    "message": "{PH1} В манифесте не указано поле {PH2}. Вместо него используется {PH3}. Чтобы указать идентификатор приложения, задайте для поля {PH4} значение \"{PH5}\" {PH6}."
  },
  "panels/application/AppManifestView.ts | avoidPurposeAnyAndMaskable": {
    "message": "Не рекомендуется объявлять значок, у которого для атрибута purpose задано значение any maskable. Скорее всего, это изображение будет некорректно показываться на некоторых платформах из-за слишком больших или маленьких полей."
  },
  "panels/application/AppManifestView.ts | backgroundColor": {
    "message": "Цвет фона"
  },
  "panels/application/AppManifestView.ts | computedAppId": {
    "message": "Вычисленный идентификатор приложения"
  },
  "panels/application/AppManifestView.ts | copiedToClipboard": {
    "message": "Скопировано в буфер обмена: {PH1}"
  },
  "panels/application/AppManifestView.ts | copyToClipboard": {
    "message": "Скопировать предложенный идентификатор в буфер обмена"
  },
  "panels/application/AppManifestView.ts | couldNotCheckServiceWorker": {
    "message": "Для проверки файла service worker в манифесте должно быть поле start_url."
  },
  "panels/application/AppManifestView.ts | couldNotDownloadARequiredIcon": {
    "message": "Не удалось скачать нужный значок из файла манифеста."
  },
  "panels/application/AppManifestView.ts | customizePwaTitleBar": {
    "message": "Настроить оверлей элементов управления окнами для строки заголовка PWA"
  },
  "panels/application/AppManifestView.ts | darkBackgroundColor": {
    "message": "Темный цвет фона"
  },
  "panels/application/AppManifestView.ts | darkThemeColor": {
    "message": "Цвет тёмной темы"
  },
  "panels/application/AppManifestView.ts | description": {
    "message": "Описание"
  },
  "panels/application/AppManifestView.ts | descriptionMayBeTruncated": {
    "message": "Описание может быть обрезано."
  },
  "panels/application/AppManifestView.ts | display": {
    "message": "Экран"
  },
  "panels/application/AppManifestView.ts | documentationOnMaskableIcons": {
    "message": "документация о маскируемых значках"
  },
  "panels/application/AppManifestView.ts | downloadedIconWasEmptyOr": {
    "message": "Скачанный значок пуст или поврежден."
  },
  "panels/application/AppManifestView.ts | errorsAndWarnings": {
    "message": "Ошибки и предупреждения"
  },
  "panels/application/AppManifestView.ts | formFactor": {
    "message": "Тип устройства"
  },
  "panels/application/AppManifestView.ts | icon": {
    "message": "Значок"
  },
  "panels/application/AppManifestView.ts | icons": {
    "message": "Значки"
  },
  "panels/application/AppManifestView.ts | identity": {
    "message": "Идентификационные данные"
  },
  "panels/application/AppManifestView.ts | imageFromS": {
    "message": "Изображение с сайта {PH1}"
  },
  "panels/application/AppManifestView.ts | installability": {
    "message": "Возможность установки"
  },
  "panels/application/AppManifestView.ts | label": {
    "message": "Элемент label"
  },
  "panels/application/AppManifestView.ts | learnMore": {
    "message": "Подробнее"
  },
  "panels/application/AppManifestView.ts | manifestContainsDisplayoverride": {
    "message": "Манифест содержит поле display_override, а первым поддерживаемым режимом отображения должен быть standalone, fullscreen или minimal-ui."
  },
  "panels/application/AppManifestView.ts | manifestCouldNotBeFetchedIsEmpty": {
    "message": "Файл манифеста нельзя загрузить или обработать, либо он пуст."
  },
  "panels/application/AppManifestView.ts | manifestDisplayPropertyMustBeOne": {
    "message": "У свойства display манифеста должно быть значение standalone, fullscreen или minimal-ui."
  },
  "panels/application/AppManifestView.ts | manifestDoesNotContainANameOr": {
    "message": "Манифест не содержит поле \"name\" или \"short_name\"."
  },
  "panels/application/AppManifestView.ts | manifestDoesNotContainASuitable": {
    "message": "В файле манифеста нет допустимого значка. Добавьте значок в формате PNG, SVG или WebP с разрешением не менее {PH1} пкс и укажите атрибут sizes. Если есть атрибут purpose, у него должно быть значение any."
  },
  "panels/application/AppManifestView.ts | manifestSpecifies": {
    "message": "Значение атрибута prefer_related_applications в файле манифеста: true."
  },
  "panels/application/AppManifestView.ts | manifestStartUrlIsNotValid": {
    "message": "Недействительный элемент start_url в файле манифеста."
  },
  "panels/application/AppManifestView.ts | name": {
    "message": "Название"
  },
  "panels/application/AppManifestView.ts | needHelpReadOurS": {
    "message": "Нужна помощь? Ознакомьтесь с материалами на странице {PH1}."
  },
  "panels/application/AppManifestView.ts | newNoteUrl": {
    "message": "URL новой заметки"
  },
  "panels/application/AppManifestView.ts | noPlayStoreIdProvided": {
    "message": "Не указан идентификатор Google Play."
  },
  "panels/application/AppManifestView.ts | noScreenshotsForRicherPWAInstallOnDesktop": {
    "message": "Расширенный интерфейс установки PWA будет недоступен на компьютерах. Добавьте хотя бы один скриншот, у которого параметр form_factor имеет значение wide."
  },
  "panels/application/AppManifestView.ts | noScreenshotsForRicherPWAInstallOnMobile": {
    "message": "Расширенный интерфейс установки PWA будет недоступен на мобильных устройствах. Добавьте хотя бы один скриншот, у которого параметр form_factor не настроен или имеет любое значение, кроме wide."
  },
  "panels/application/AppManifestView.ts | noSuppliedIconIsAtLeastSpxSquare": {
    "message": "В файле манифеста нет значка в формате PNG, SVG или WebP с разрешением не менее {PH1} пкс. При этом атрибут purpose должен быть не задан или иметь значение any."
  },
  "panels/application/AppManifestView.ts | note": {
    "message": "Примечание."
  },
  "panels/application/AppManifestView.ts | orientation": {
    "message": "Ориентация"
  },
  "panels/application/AppManifestView.ts | pageDoesNotWorkOffline": {
    "message": "Эта страница не поддерживается в офлайн-режиме."
  },
  "panels/application/AppManifestView.ts | pageDoesNotWorkOfflineThePage": {
    "message": "Эта страница не работает в офлайн-режиме. Начиная с версии Chrome 93, условия установки изменятся, и этот сайт уже нельзя будет установить. Узнать больше можно на странице {PH1}."
  },
  "panels/application/AppManifestView.ts | pageHasNoManifestLinkUrl": {
    "message": "Страница не содержит URL манифеста <link>."
  },
  "panels/application/AppManifestView.ts | pageIsLoadedInAnIncognitoWindow": {
    "message": "Эта страница открыта в режиме инкогнито."
  },
  "panels/application/AppManifestView.ts | pageIsNotLoadedInTheMainFrame": {
    "message": "Страница не загружается в основном фрейме."
  },
  "panels/application/AppManifestView.ts | pageIsNotServedFromASecureOrigin": {
    "message": "Страница загружена из незащищенного источника."
  },
  "panels/application/AppManifestView.ts | platform": {
    "message": "Платформа"
  },
  "panels/application/AppManifestView.ts | preferrelatedapplicationsIsOnly": {
    "message": "Атрибут prefer_related_applications поддерживается только в бета-версии и стабильной версии Chrome на устройствах Android."
  },
  "panels/application/AppManifestView.ts | presentation": {
    "message": "Презентация"
  },
  "panels/application/AppManifestView.ts | protocolHandlers": {
    "message": "Обработчики протоколов"
  },
  "panels/application/AppManifestView.ts | sSDoesNotSpecifyItsSizeInThe": {
    "message": "{PH1} ({PH2}): в файле манифеста не указан размер."
  },
  "panels/application/AppManifestView.ts | sSFailedToLoad": {
    "message": "Не удалось загрузить {PH1} ({PH2})."
  },
  "panels/application/AppManifestView.ts | sSHeightDoesNotComplyWithRatioRequirement": {
    "message": "{PH1} {PH2}: высота не должна превышать ширину более чем в 2,3 раза."
  },
  "panels/application/AppManifestView.ts | sSShouldHaveSquareIcon": {
    "message": "Большинство операционных систем требуют квадратных значков, поэтому необходимо включить в массив хотя бы один."
  },
  "panels/application/AppManifestView.ts | sSShouldSpecifyItsSizeAs": {
    "message": "{PH1} ({PH2}). Размер должен быть указан в следующем формате: [width]x[height]."
  },
  "panels/application/AppManifestView.ts | sSSizeShouldBeAtLeast320": {
    "message": "Размер объекта \"{PH1}\" {PH2} должен быть не менее 320 × 320."
  },
  "panels/application/AppManifestView.ts | sSSizeShouldBeAtMost3840": {
    "message": "{PH1} ({PH2}): размер должен быть не больше 3840 × 3840 пкс."
  },
  "panels/application/AppManifestView.ts | sSWidthDoesNotComplyWithRatioRequirement": {
    "message": "{PH1} {PH2}: ширина не должна превышать высоту более чем в 2,3 раза."
  },
  "panels/application/AppManifestView.ts | sSrcIsNotSet": {
    "message": "{PH1}: атрибут src не задан."
  },
  "panels/application/AppManifestView.ts | sUrlSFailedToParse": {
    "message": "Не удалось выполнить синтаксический анализ URL объекта \"{PH1}\" ({PH2})."
  },
  "panels/application/AppManifestView.ts | screenshot": {
    "message": "Скриншоты"
  },
  "panels/application/AppManifestView.ts | screenshotPixelSize": {
    "message": "Первоначальный размер скриншота {url} должен быть указан в пикселях ([width]x[height]), а не с помощью значения any."
  },
  "panels/application/AppManifestView.ts | screenshotS": {
    "message": "Скриншот #{PH1}"
  },
  "panels/application/AppManifestView.ts | screenshotsMustHaveSameAspectRatio": {
    "message": "У всех скриншотов с одинаковым значением параметра form_factor соотношение сторон должно быть таким же, как у первого скриншота с таким значением параметра form_factor. Некоторые скриншоты будут игнорироваться."
  },
  "panels/application/AppManifestView.ts | selectWindowControlsOverlayEmulationOs": {
    "message": "Эмулировать оверлей элементов управления окнами"
  },
  "panels/application/AppManifestView.ts | shortName": {
    "message": "Краткое название"
  },
  "panels/application/AppManifestView.ts | shortcutS": {
    "message": "Ярлык {PH1}"
  },
  "panels/application/AppManifestView.ts | shortcutSShouldIncludeAXPixel": {
    "message": "Ярлык {PH1} должен включать значок с разрешением 96 × 96 пикселей."
  },
  "panels/application/AppManifestView.ts | shortcutsMayBeNotAvailable": {
    "message": "Максимальное число сочетаний клавиш зависит от платформы. Некоторые из них могут быть недоступны."
  },
  "panels/application/AppManifestView.ts | showOnlyTheMinimumSafeAreaFor": {
    "message": "Показывает только минимальную безопасную зону для маскируемых значков."
  },
  "panels/application/AppManifestView.ts | startUrl": {
    "message": "URL запуска"
  },
  "panels/application/AppManifestView.ts | theAppIsAlreadyInstalled": {
    "message": "Приложение уже установлено."
  },
  "panels/application/AppManifestView.ts | thePlayStoreAppUrlAndPlayStoreId": {
    "message": "URL приложения и его идентификатор в Google Play не соответствуют друг другу."
  },
  "panels/application/AppManifestView.ts | theSpecifiedApplicationPlatform": {
    "message": "Указанная платформа приложения не поддерживается на устройствах Android."
  },
  "panels/application/AppManifestView.ts | themeColor": {
    "message": "Цвет темы"
  },
  "panels/application/AppManifestView.ts | tooManyScreenshotsForDesktop": {
    "message": "На рабочем столе может быть не более восьми скриншотов. Не вошедшие в это число скриншоты не показываются."
  },
  "panels/application/AppManifestView.ts | tooManyScreenshotsForMobile": {
    "message": "На экране мобильного телефона может быть не более пяти скриншотов. Не вошедшие в это число скриншоты не показываются."
  },
  "panels/application/AppManifestView.ts | url": {
    "message": "URL"
  },
  "panels/application/AppManifestView.ts | wcoFound": {
    "message": "Chrome удалось обнаружить значение {PH1} для поля {PH2} в {PH3}."
  },
  "panels/application/AppManifestView.ts | wcoNeedHelpReadMore": {
    "message": "Нужна помощь? Прочитайте эту статью: {PH1}."
  },
  "panels/application/AppManifestView.ts | wcoNotFound": {
    "message": "Найдите {PH1} в манифесте, чтобы использовать Window Controls Overlay API и настроить строку заголовка приложения."
  },
  "panels/application/AppManifestView.ts | windowControlsOverlay": {
    "message": "Оверлей элементов управления окнами"
  },
  "panels/application/ApplicationPanelSidebar.ts | appManifest": {
    "message": "Манифест приложения"
  },
  "panels/application/ApplicationPanelSidebar.ts | application": {
    "message": "Приложение"
  },
  "panels/application/ApplicationPanelSidebar.ts | applicationSidebarPanel": {
    "message": "Боковая панель приложения"
  },
  "panels/application/ApplicationPanelSidebar.ts | backgroundServices": {
    "message": "Фоновые службы"
  },
  "panels/application/ApplicationPanelSidebar.ts | beforeInvokeAlert": {
    "message": "{PH1}: вызовите, чтобы прокрутить до этого раздела манифеста"
  },
  "panels/application/ApplicationPanelSidebar.ts | clear": {
    "message": "Сбросить"
  },
  "panels/application/ApplicationPanelSidebar.ts | cookies": {
    "message": "Файлы cookie"
  },
  "panels/application/ApplicationPanelSidebar.ts | cookiesUsedByFramesFromS": {
    "message": "Файлы cookie, используемые фреймами сайта {PH1}"
  },
  "panels/application/ApplicationPanelSidebar.ts | documentNotAvailable": {
    "message": "Документ недоступен"
  },
  "panels/application/ApplicationPanelSidebar.ts | frames": {
    "message": "Фреймы"
  },
  "panels/application/ApplicationPanelSidebar.ts | indexeddb": {
    "message": "IndexedDB"
  },
  "panels/application/ApplicationPanelSidebar.ts | keyPathS": {
    "message": "Путь к ключу: {PH1}"
  },
  "panels/application/ApplicationPanelSidebar.ts | localFiles": {
    "message": "Локальные файлы"
  },
  "panels/application/ApplicationPanelSidebar.ts | localStorage": {
    "message": "Локальное хранилище"
  },
  "panels/application/ApplicationPanelSidebar.ts | manifest": {
    "message": "Манифест"
  },
  "panels/application/ApplicationPanelSidebar.ts | noManifestDetected": {
    "message": "Манифест не обнаружен"
  },
  "panels/application/ApplicationPanelSidebar.ts | onInvokeAlert": {
    "message": "Прокручено до подраздела {PH1}"
  },
  "panels/application/ApplicationPanelSidebar.ts | onInvokeManifestAlert": {
    "message": "Файл манифеста: вызовите, чтобы прокрутить в начало манифеста"
  },
  "panels/application/ApplicationPanelSidebar.ts | openedWindows": {
    "message": "Открытые окна"
  },
  "panels/application/ApplicationPanelSidebar.ts | refreshIndexeddb": {
    "message": "Обновить IndexedDB"
  },
  "panels/application/ApplicationPanelSidebar.ts | sessionStorage": {
    "message": "Хранение сеансов"
  },
  "panels/application/ApplicationPanelSidebar.ts | storage": {
    "message": "Хранилище"
  },
  "panels/application/ApplicationPanelSidebar.ts | theContentOfThisDocumentHasBeen": {
    "message": "Контент этого документа создан динамически с помощью document.write()."
  },
  "panels/application/ApplicationPanelSidebar.ts | thirdPartyPhaseout": {
    "message": "Файлы cookie с сайта {PH1} могли быть заблокированы из-за постепенного отключения сторонних файлов cookie"
  },
  "panels/application/ApplicationPanelSidebar.ts | versionS": {
    "message": "Версия: {PH1}"
  },
  "panels/application/ApplicationPanelSidebar.ts | versionSEmpty": {
    "message": "Версия: {PH1} (пусто)"
  },
  "panels/application/ApplicationPanelSidebar.ts | webSql": {
    "message": "Web SQL"
  },
  "panels/application/ApplicationPanelSidebar.ts | webWorkers": {
    "message": "Объекты Web Worker"
  },
  "panels/application/ApplicationPanelSidebar.ts | windowWithoutTitle": {
    "message": "Окно без названия"
  },
  "panels/application/ApplicationPanelSidebar.ts | worker": {
    "message": "обработчик"
  },
  "panels/application/BackForwardCacheTreeElement.ts | backForwardCache": {
    "message": "Возвратный кеш"
  },
  "panels/application/BackgroundServiceView.ts | backgroundFetch": {
    "message": "Фоновое извлечение"
  },
  "panels/application/BackgroundServiceView.ts | backgroundServices": {
    "message": "Фоновые службы"
  },
  "panels/application/BackgroundServiceView.ts | backgroundSync": {
    "message": "Фоновая синхронизация"
  },
  "panels/application/BackgroundServiceView.ts | clear": {
    "message": "Сбросить"
  },
  "panels/application/BackgroundServiceView.ts | clickTheRecordButtonSOrHitSTo": {
    "message": "Чтобы начать запись, нажмите кнопку \"{PH1}\" или {PH2}."
  },
  "panels/application/BackgroundServiceView.ts | devtoolsWillRecordAllSActivity": {
    "message": "Все объекты activity {PH1} за последние 3 дня записываются, даже если инструменты разработчика закрыты."
  },
  "panels/application/BackgroundServiceView.ts | empty": {
    "message": "не используется"
  },
  "panels/application/BackgroundServiceView.ts | event": {
    "message": "Событие"
  },
  "panels/application/BackgroundServiceView.ts | instanceId": {
    "message": "Идентификатор экземпляра"
  },
  "panels/application/BackgroundServiceView.ts | learnMore": {
    "message": "Подробнее…"
  },
  "panels/application/BackgroundServiceView.ts | noMetadataForThisEvent": {
    "message": "Для этого события нет метаданных."
  },
  "panels/application/BackgroundServiceView.ts | notifications": {
    "message": "Уведомления"
  },
  "panels/application/BackgroundServiceView.ts | origin": {
    "message": "Источник"
  },
  "panels/application/BackgroundServiceView.ts | paymentHandler": {
    "message": "Обработчик платежей"
  },
  "panels/application/BackgroundServiceView.ts | periodicBackgroundSync": {
    "message": "Периодическая фоновая синхронизация"
  },
  "panels/application/BackgroundServiceView.ts | pushMessaging": {
    "message": "Push-рассылка"
  },
  "panels/application/BackgroundServiceView.ts | recordingSActivity": {
    "message": "Запись действий {PH1}…"
  },
  "panels/application/BackgroundServiceView.ts | saveEvents": {
    "message": "Сохранить события"
  },
  "panels/application/BackgroundServiceView.ts | selectAnEntryToViewMetadata": {
    "message": "Чтобы посмотреть метаданные, выберите запись"
  },
  "panels/application/BackgroundServiceView.ts | showEventsForOtherStorageKeys": {
    "message": "Показывать события из других сегментов хранилища"
  },
  "panels/application/BackgroundServiceView.ts | showEventsFromOtherDomains": {
    "message": "Показать события из других доменов"
  },
  "panels/application/BackgroundServiceView.ts | startRecordingEvents": {
    "message": "Начать запись событий"
  },
  "panels/application/BackgroundServiceView.ts | stopRecordingEvents": {
    "message": "Остановить запись событий"
  },
  "panels/application/BackgroundServiceView.ts | storageKey": {
    "message": "Ключ в хранилище"
  },
  "panels/application/BackgroundServiceView.ts | swScope": {
    "message": "Область действия Service Worker"
  },
  "panels/application/BackgroundServiceView.ts | timestamp": {
    "message": "Временная метка"
  },
  "panels/application/BounceTrackingMitigationsTreeElement.ts | bounceTrackingMitigations": {
    "message": "Предотвращение отслеживания с переадресацией"
  },
  "panels/application/CookieItemsView.ts | clearAllCookies": {
    "message": "Удалить все файлы cookie"
  },
  "panels/application/CookieItemsView.ts | clearFilteredCookies": {
    "message": "Очистить отфильтрованные файлы cookie"
  },
  "panels/application/CookieItemsView.ts | cookies": {
    "message": "Файлы cookie"
  },
  "panels/application/CookieItemsView.ts | numberOfCookiesShownInTableS": {
    "message": "Файлы cookie в таблице: {PH1}"
  },
  "panels/application/CookieItemsView.ts | onlyShowCookiesWhichHaveAn": {
    "message": "Показывать только файлы cookie, связанные с проблемой"
  },
  "panels/application/CookieItemsView.ts | onlyShowCookiesWithAnIssue": {
    "message": "Показать только файлы cookie, с которыми возникли проблемы"
  },
  "panels/application/CookieItemsView.ts | selectACookieToPreviewItsValue": {
    "message": "Выберите файл cookie, чтобы посмотреть его значение."
  },
  "panels/application/CookieItemsView.ts | showUrlDecoded": {
    "message": "Показать декодированные параметры URL"
  },
  "panels/application/DOMStorageItemsView.ts | domStorage": {
    "message": "Хранилище DOM"
  },
  "panels/application/DOMStorageItemsView.ts | domStorageItemDeleted": {
    "message": "Элемент хранилища был удален."
  },
  "panels/application/DOMStorageItemsView.ts | domStorageItems": {
    "message": "Элементы хранилища DOM"
  },
  "panels/application/DOMStorageItemsView.ts | domStorageItemsCleared": {
    "message": "Данные таблицы \"Элементы хранилища DOM\" удалены"
  },
  "panels/application/DOMStorageItemsView.ts | domStorageNumberEntries": {
    "message": "Записей в таблице: {PH1}"
  },
  "panels/application/DOMStorageItemsView.ts | key": {
    "message": "Ключ"
  },
  "panels/application/DOMStorageItemsView.ts | selectAValueToPreview": {
    "message": "Выберите значение для просмотра"
  },
  "panels/application/DOMStorageItemsView.ts | value": {
    "message": "Значение"
  },
  "panels/application/DatabaseModel.ts | anUnexpectedErrorSOccurred": {
    "message": "Произошла ошибка {PH1}."
  },
  "panels/application/DatabaseModel.ts | databaseNoLongerHasExpected": {
    "message": "Версия базы данных не соответствует ожидаемой."
  },
  "panels/application/DatabaseQueryView.ts | databaseQuery": {
    "message": "Запрос базы данных"
  },
  "panels/application/DatabaseQueryView.ts | queryS": {
    "message": "Запрос: {PH1}"
  },
  "panels/application/DatabaseTableView.ts | anErrorOccurredTryingToreadTheS": {
    "message": "Произошла ошибка при чтении таблицы \"{PH1}\"."
  },
  "panels/application/DatabaseTableView.ts | database": {
    "message": "База данных"
  },
  "panels/application/DatabaseTableView.ts | refresh": {
    "message": "Обновить"
  },
  "panels/application/DatabaseTableView.ts | theStableIsEmpty": {
    "message": "Таблица \"{PH1}\" пуста."
  },
  "panels/application/DatabaseTableView.ts | visibleColumns": {
    "message": "Доступные столбцы"
  },
  "panels/application/IndexedDBViews.ts | clearObjectStore": {
    "message": "Очистить хранилище объектов"
  },
  "panels/application/IndexedDBViews.ts | collapse": {
    "message": "Свернуть"
  },
  "panels/application/IndexedDBViews.ts | dataMayBeStale": {
    "message": "Данные могут быть неактивны"
  },
  "panels/application/IndexedDBViews.ts | deleteDatabase": {
    "message": "Удалить базу данных"
  },
  "panels/application/IndexedDBViews.ts | deleteSelected": {
    "message": "Удалить выбранное"
  },
  "panels/application/IndexedDBViews.ts | expandRecursively": {
    "message": "Рекурсивное расширение"
  },
  "panels/application/IndexedDBViews.ts | idb": {
    "message": "Индексированная база данных"
  },
  "panels/application/IndexedDBViews.ts | indexedDb": {
    "message": "Индексированная база данных"
  },
  "panels/application/IndexedDBViews.ts | keyGeneratorValueS": {
    "message": "Значение генератора ключей: {PH1}"
  },
  "panels/application/IndexedDBViews.ts | keyPath": {
    "message": "Путь к ключу: "
  },
  "panels/application/IndexedDBViews.ts | keyString": {
    "message": "Ключ"
  },
  "panels/application/IndexedDBViews.ts | objectStores": {
    "message": "Хранилища объектов"
  },
  "panels/application/IndexedDBViews.ts | pleaseConfirmDeleteOfSDatabase": {
    "message": "Подтвердите удаление базы данных \"{PH1}\"."
  },
  "panels/application/IndexedDBViews.ts | primaryKey": {
    "message": "Первичный ключ"
  },
  "panels/application/IndexedDBViews.ts | refresh": {
    "message": "Обновить"
  },
  "panels/application/IndexedDBViews.ts | refreshDatabase": {
    "message": "Обновить базу данных"
  },
  "panels/application/IndexedDBViews.ts | showNextPage": {
    "message": "Показать следующую страницу"
  },
  "panels/application/IndexedDBViews.ts | showPreviousPage": {
    "message": "Показать предыдущую страницу"
  },
  "panels/application/IndexedDBViews.ts | someEntriesMayHaveBeenModified": {
    "message": "Возможно, некоторые записи были изменены"
  },
  "panels/application/IndexedDBViews.ts | startFromKey": {
    "message": "Запуск от клавиши"
  },
  "panels/application/IndexedDBViews.ts | totalEntriesS": {
    "message": "Всего позиций: {PH1}"
  },
  "panels/application/IndexedDBViews.ts | valueString": {
    "message": "Значение"
  },
  "panels/application/IndexedDBViews.ts | version": {
    "message": "Версия"
  },
  "panels/application/InterestGroupStorageView.ts | clickToDisplayBody": {
    "message": "Нажмите на событие группы по интересам, чтобы показать текущее состояние группы"
  },
  "panels/application/InterestGroupStorageView.ts | noDataAvailable": {
    "message": "Для выбранной группы по интересам нет доступных сведений. Возможно, браузер не состоит в этой группе."
  },
  "panels/application/InterestGroupTreeElement.ts | interestGroups": {
    "message": "Группы по интересам"
  },
  "panels/application/OpenedWindowDetailsView.ts | accessToOpener": {
    "message": "Доступ к открывающей странице"
  },
  "panels/application/OpenedWindowDetailsView.ts | clickToRevealInElementsPanel": {
    "message": "Нажмите, чтобы открыть на панели \"Элементы\""
  },
  "panels/application/OpenedWindowDetailsView.ts | closed": {
    "message": "закрыто"
  },
  "panels/application/OpenedWindowDetailsView.ts | crossoriginEmbedderPolicy": {
    "message": "Правила междоменного встраивания"
  },
  "panels/application/OpenedWindowDetailsView.ts | document": {
    "message": "Документ"
  },
  "panels/application/OpenedWindowDetailsView.ts | no": {
    "message": "Нет"
  },
  "panels/application/OpenedWindowDetailsView.ts | openerFrame": {
    "message": "Opener Frame"
  },
  "panels/application/OpenedWindowDetailsView.ts | reportingTo": {
    "message": "отправляет отчеты"
  },
  "panels/application/OpenedWindowDetailsView.ts | security": {
    "message": "Безопасность"
  },
  "panels/application/OpenedWindowDetailsView.ts | securityIsolation": {
    "message": "Безопасность и изоляция"
  },
  "panels/application/OpenedWindowDetailsView.ts | showsWhetherTheOpenedWindowIs": {
    "message": "Показывает, может ли у открытого окна быть доступ к открывающей странице, и наоборот."
  },
  "panels/application/OpenedWindowDetailsView.ts | type": {
    "message": "Тип"
  },
  "panels/application/OpenedWindowDetailsView.ts | unknown": {
    "message": "Неизвестно"
  },
  "panels/application/OpenedWindowDetailsView.ts | url": {
    "message": "URL"
  },
  "panels/application/OpenedWindowDetailsView.ts | webWorker": {
    "message": "Web Worker"
  },
  "panels/application/OpenedWindowDetailsView.ts | windowWithoutTitle": {
    "message": "Окно без названия"
  },
  "panels/application/OpenedWindowDetailsView.ts | worker": {
    "message": "обработчик"
  },
  "panels/application/OpenedWindowDetailsView.ts | yes": {
    "message": "Да"
  },
  "panels/application/PreloadingTreeElement.ts | rules": {
    "message": "Правила"
  },
  "panels/application/PreloadingTreeElement.ts | speculations": {
    "message": "Спекулятивные процессы"
  },
  "panels/application/PreloadingTreeElement.ts | speculativeLoads": {
    "message": "Спекулятивные загрузки"
  },
  "panels/application/ReportingApiReportsView.ts | clickToDisplayBody": {
    "message": "Чтобы посмотреть отчет, нажмите на него."
  },
  "panels/application/ReportingApiTreeElement.ts | reportingApi": {
    "message": "Reporting API"
  },
  "panels/application/ResourcesPanel.ts | webSqlDeprecation": {
    "message": "Web SQL больше не поддерживается. Вы можете подать заявку, чтобы продолжить использовать эту технологию, пока не выйдет Chrome 123."
  },
  "panels/application/ServiceWorkerCacheTreeElement.ts | cacheStorage": {
    "message": "Хранилище кеша"
  },
  "panels/application/ServiceWorkerCacheTreeElement.ts | delete": {
    "message": "Удалить"
  },
  "panels/application/ServiceWorkerCacheTreeElement.ts | refreshCaches": {
    "message": "Обновить кеш"
  },
  "panels/application/ServiceWorkerCacheViews.ts | cache": {
    "message": "Кеш"
  },
  "panels/application/ServiceWorkerCacheViews.ts | deleteSelected": {
    "message": "Удалить выделенное"
  },
  "panels/application/ServiceWorkerCacheViews.ts | filterByPath": {
    "message": "Фильтр по пути"
  },
  "panels/application/ServiceWorkerCacheViews.ts | headers": {
    "message": "Заголовки"
  },
  "panels/application/ServiceWorkerCacheViews.ts | matchingEntriesS": {
    "message": "Совпадающих записей: {PH1}"
  },
  "panels/application/ServiceWorkerCacheViews.ts | name": {
    "message": "Название"
  },
  "panels/application/ServiceWorkerCacheViews.ts | preview": {
    "message": "Предварительный просмотр"
  },
  "panels/application/ServiceWorkerCacheViews.ts | refresh": {
    "message": "Обновить"
  },
  "panels/application/ServiceWorkerCacheViews.ts | selectACacheEntryAboveToPreview": {
    "message": "Чтобы открыть предпросмотр, выберите параметр cache выше."
  },
  "panels/application/ServiceWorkerCacheViews.ts | serviceWorkerCache": {
    "message": "Кеш Service Worker"
  },
  "panels/application/ServiceWorkerCacheViews.ts | timeCached": {
    "message": "Время кеширования"
  },
  "panels/application/ServiceWorkerCacheViews.ts | totalEntriesS": {
    "message": "Всего позиций: {PH1}"
  },
  "panels/application/ServiceWorkerCacheViews.ts | varyHeaderWarning": {
    "message": "⚠️ Значение ignoreVary становится равно true, когда совпадает с этой записью"
  },
  "panels/application/ServiceWorkerUpdateCycleView.ts | endTimeS": {
    "message": "Время окончания: {PH1}"
  },
  "panels/application/ServiceWorkerUpdateCycleView.ts | startTimeS": {
    "message": "Время начала: {PH1}"
  },
  "panels/application/ServiceWorkerUpdateCycleView.ts | timeline": {
    "message": "Хронология"
  },
  "panels/application/ServiceWorkerUpdateCycleView.ts | updateActivity": {
    "message": "Обновить объект activity"
  },
  "panels/application/ServiceWorkerUpdateCycleView.ts | version": {
    "message": "Версия"
  },
  "panels/application/ServiceWorkersView.ts | bypassForNetwork": {
    "message": "Обходной путь для сети"
  },
  "panels/application/ServiceWorkersView.ts | bypassTheServiceWorkerAndLoad": {
    "message": "Пропуск файла service worker и загрузка ресурсов из сети"
  },
  "panels/application/ServiceWorkersView.ts | clients": {
    "message": "Клиенты"
  },
  "panels/application/ServiceWorkersView.ts | focus": {
    "message": "фокус"
  },
  "panels/application/ServiceWorkersView.ts | inspect": {
    "message": "проверить"
  },
  "panels/application/ServiceWorkersView.ts | networkRequests": {
    "message": "Сетевые запросы"
  },
  "panels/application/ServiceWorkersView.ts | onPageReloadForceTheService": {
    "message": "На странице перезагрузки инициируйте обновление service worker и активируйте его"
  },
  "panels/application/ServiceWorkersView.ts | periodicSync": {
    "message": "Периодическая синхронизация"
  },
  "panels/application/ServiceWorkersView.ts | periodicSyncTag": {
    "message": "Тег периодической синхронизации"
  },
  "panels/application/ServiceWorkersView.ts | pushData": {
    "message": "Поместить данные"
  },
  "panels/application/ServiceWorkersView.ts | pushString": {
    "message": "Транслировать"
  },
  "panels/application/ServiceWorkersView.ts | receivedS": {
    "message": "Получено {PH1}"
  },
  "panels/application/ServiceWorkersView.ts | routers": {
    "message": "Маршрутизаторы"
  },
  "panels/application/ServiceWorkersView.ts | sActivatedAndIsS": {
    "message": "Активировано и {PH2}: #{PH1}"
  },
  "panels/application/ServiceWorkersView.ts | sDeleted": {
    "message": "Удалено: {PH1}"
  },
  "panels/application/ServiceWorkersView.ts | sIsRedundant": {
    "message": "#{PH1} – избыточный"
  },
  "panels/application/ServiceWorkersView.ts | sRegistrationErrors": {
    "message": "Ошибок регистрации: {PH1}"
  },
  "panels/application/ServiceWorkersView.ts | sTryingToInstall": {
    "message": "#{PH1} пытается установить"
  },
  "panels/application/ServiceWorkersView.ts | sWaitingToActivate": {
    "message": "Ожидает активации: #{PH1}"
  },
  "panels/application/ServiceWorkersView.ts | seeAllRegistrations": {
    "message": "Посмотреть все регистрации"
  },
  "panels/application/ServiceWorkersView.ts | serviceWorkerForS": {
    "message": "Service worker для {PH1}"
  },
  "panels/application/ServiceWorkersView.ts | serviceWorkersFromOtherOrigins": {
    "message": "Файлы service worker из других источников"
  },
  "panels/application/ServiceWorkersView.ts | source": {
    "message": "Источник"
  },
  "panels/application/ServiceWorkersView.ts | startString": {
    "message": "начать"
  },
  "panels/application/ServiceWorkersView.ts | status": {
    "message": "Статус"
  },
  "panels/application/ServiceWorkersView.ts | stopString": {
    "message": "остановить"
  },
  "panels/application/ServiceWorkersView.ts | syncString": {
    "message": "Синхронизация"
  },
  "panels/application/ServiceWorkersView.ts | syncTag": {
    "message": "Тег для синхронизации"
  },
  "panels/application/ServiceWorkersView.ts | testPushMessageFromDevtools": {
    "message": "Тестирует push-сообщения из инструментов разработчика."
  },
  "panels/application/ServiceWorkersView.ts | unregister": {
    "message": "Отменить регистрацию"
  },
  "panels/application/ServiceWorkersView.ts | unregisterServiceWorker": {
    "message": "Незарегистрированный файл service worker"
  },
  "panels/application/ServiceWorkersView.ts | update": {
    "message": "Обновить"
  },
  "panels/application/ServiceWorkersView.ts | updateCycle": {
    "message": "Цикл обновления"
  },
  "panels/application/ServiceWorkersView.ts | updateOnReload": {
    "message": "Обновить при перезагрузке"
  },
  "panels/application/ServiceWorkersView.ts | workerS": {
    "message": "Service Worker: {PH1}"
  },
  "panels/application/SharedStorageEventsView.ts | clickToDisplayBody": {
    "message": "Чтобы посмотреть параметры события, нажмите на любое событие общего хранилища."
  },
  "panels/application/SharedStorageItemsView.ts | key": {
    "message": "Ключ"
  },
  "panels/application/SharedStorageItemsView.ts | selectAValueToPreview": {
    "message": "Выберите значение для просмотра"
  },
  "panels/application/SharedStorageItemsView.ts | sharedStorage": {
    "message": "Общее хранилище"
  },
  "panels/application/SharedStorageItemsView.ts | sharedStorageFilteredItemsCleared": {
    "message": "Отфильтрованные элементы общего хранилища удалены"
  },
  "panels/application/SharedStorageItemsView.ts | sharedStorageItemDeleted": {
    "message": "Элемент хранилища был удален."
  },
  "panels/application/SharedStorageItemsView.ts | sharedStorageItemEditCanceled": {
    "message": "Изменение элемента хранилища было отменено."
  },
  "panels/application/SharedStorageItemsView.ts | sharedStorageItemEdited": {
    "message": "Элемент хранилища был изменен."
  },
  "panels/application/SharedStorageItemsView.ts | sharedStorageItems": {
    "message": "Элементы общего хранилища"
  },
  "panels/application/SharedStorageItemsView.ts | sharedStorageItemsCleared": {
    "message": "Все элементы общего хранилища удалены"
  },
  "panels/application/SharedStorageItemsView.ts | sharedStorageNumberEntries": {
    "message": "Записей в таблице: {PH1}"
  },
  "panels/application/SharedStorageItemsView.ts | value": {
    "message": "Значение"
  },
  "panels/application/SharedStorageListTreeElement.ts | sharedStorage": {
    "message": "Общее хранилище"
  },
  "panels/application/StorageBucketsTreeElement.ts | storageBuckets": {
    "message": "Сегменты хранилища"
  },
  "panels/application/StorageItemsView.ts | clearAll": {
    "message": "Очистить все"
  },
  "panels/application/StorageItemsView.ts | deleteSelected": {
    "message": "Удалить выделенное"
  },
  "panels/application/StorageItemsView.ts | filter": {
    "message": "Фильтр"
  },
  "panels/application/StorageItemsView.ts | refresh": {
    "message": "Обновить"
  },
  "panels/application/StorageItemsView.ts | refreshedStatus": {
    "message": "Таблица обновлена"
  },
  "panels/application/StorageView.ts | SiteDataCleared": {
    "message": "Данные сайта удалены"
  },
  "panels/application/StorageView.ts | application": {
    "message": "Приложение"
  },
  "panels/application/StorageView.ts | cacheStorage": {
    "message": "Хранилище кеша"
  },
  "panels/application/StorageView.ts | clearSiteData": {
    "message": "Удалить данные сайта"
  },
  "panels/application/StorageView.ts | clearing": {
    "message": "Очистка…"
  },
  "panels/application/StorageView.ts | cookies": {
    "message": "Файлы cookie"
  },
  "panels/application/StorageView.ts | fileSystem": {
    "message": "Файловая система"
  },
  "panels/application/StorageView.ts | includingThirdPartyCookies": {
    "message": "включая сторонние файлы cookie"
  },
  "panels/application/StorageView.ts | indexDB": {
    "message": "IndexedDB"
  },
  "panels/application/StorageView.ts | internalError": {
    "message": "Внутренняя ошибка."
  },
  "panels/application/StorageView.ts | learnMore": {
    "message": "Подробнее"
  },
  "panels/application/StorageView.ts | localAndSessionStorage": {
    "message": "Локальное хранилище и хранилище сеанса"
  },
  "panels/application/StorageView.ts | mb": {
    "message": "МБ"
  },
  "panels/application/StorageView.ts | numberMustBeNonNegative": {
    "message": "Укажите неотрицательное число."
  },
  "panels/application/StorageView.ts | numberMustBeSmaller": {
    "message": "Число должно быть меньше {PH1}."
  },
  "panels/application/StorageView.ts | other": {
    "message": "Другое"
  },
  "panels/application/StorageView.ts | pleaseEnterANumber": {
    "message": "Введите число."
  },
  "panels/application/StorageView.ts | sFailedToLoad": {
    "message": "{PH1} (не удалось загрузить)"
  },
  "panels/application/StorageView.ts | serviceWorkers": {
    "message": "Скрипты Service Worker"
  },
  "panels/application/StorageView.ts | simulateCustomStorage": {
    "message": "Имитировать настраиваемое место в хранилище"
  },
  "panels/application/StorageView.ts | storageQuotaIsLimitedIn": {
    "message": "В режим инкогнито место в хранилище ограничено"
  },
  "panels/application/StorageView.ts | storageQuotaUsed": {
    "message": "Использовано {PH1} из {PH2} в хранилище"
  },
  "panels/application/StorageView.ts | storageQuotaUsedWithBytes": {
    "message": "Использовано {PH1} из {PH2} Б, доступных в хранилище"
  },
  "panels/application/StorageView.ts | storageTitle": {
    "message": "Хранилище"
  },
  "panels/application/StorageView.ts | storageUsage": {
    "message": "Использование хранилища"
  },
  "panels/application/StorageView.ts | storageWithCustomMarker": {
    "message": "{PH1} (собств.)"
  },
  "panels/application/StorageView.ts | unregisterServiceWorker": {
    "message": "Отменить регистрацию файлов service worker"
  },
  "panels/application/StorageView.ts | usage": {
    "message": "Использование"
  },
  "panels/application/StorageView.ts | webSql": {
    "message": "Web SQL"
  },
  "panels/application/TrustTokensTreeElement.ts | trustTokens": {
    "message": "Личные токены состояния"
  },
  "panels/application/application-meta.ts | application": {
    "message": "Приложение"
  },
  "panels/application/application-meta.ts | clearSiteData": {
    "message": "Удалить данные сайта"
  },
  "panels/application/application-meta.ts | clearSiteDataIncludingThirdparty": {
    "message": "Удалить данные сайта (в том числе сторонние файлы cookie)"
  },
  "panels/application/application-meta.ts | pwa": {
    "message": "PWA"
  },
  "panels/application/application-meta.ts | showApplication": {
    "message": "Показать \"Приложение\""
  },
  "panels/application/application-meta.ts | startRecordingEvents": {
    "message": "Начать запись событий"
  },
  "panels/application/application-meta.ts | stopRecordingEvents": {
    "message": "Остановить запись событий"
  },
  "panels/application/components/BackForwardCacheStrings.ts | CookieFlushed": {
    "message": "Нет данных"
  },
  "panels/application/components/BackForwardCacheStrings.ts | HTTPAuthRequired": {
    "message": "Нет данных"
  },
  "panels/application/components/BackForwardCacheStrings.ts | HTTPMethodNotGET": {
    "message": "В возвратный кеш можно добавить только страницы, загруженные с помощью GET-запроса."
  },
  "panels/application/components/BackForwardCacheStrings.ts | HTTPStatusNotOK": {
    "message": "Можно кешировать только страницы с кодом статуса 2XX."
  },
  "panels/application/components/BackForwardCacheStrings.ts | JavaScriptExecution": {
    "message": "Chrome обнаружил попытку выполнить код JavaScript в кеше."
  },
  "panels/application/components/BackForwardCacheStrings.ts | LiveMediaStreamTrack": {
    "message": "Нет данных"
  },
  "panels/application/components/BackForwardCacheStrings.ts | SmartCard": {
    "message": "Нет данных"
  },
  "panels/application/components/BackForwardCacheStrings.ts | UnloadHandler": {
    "message": "Нет данных"
  },
  "panels/application/components/BackForwardCacheStrings.ts | appBanner": {
    "message": "Страницы, которые запросили AppBanner, в настоящее время нельзя добавить в возвратный кеш."
  },
  "panels/application/components/BackForwardCacheStrings.ts | backForwardCacheDisabled": {
    "message": "Возвратный кеш отключен в разделе экспериментальных параметров Chrome. Введите chrome://flags/#back-forward-cache в адресной строке, чтобы включить кеш на этом устройстве."
  },
  "panels/application/components/BackForwardCacheStrings.ts | backForwardCacheDisabledByCommandLine": {
    "message": "Возвратный кеш отключен с помощью командной строки."
  },
  "panels/application/components/BackForwardCacheStrings.ts | backForwardCacheDisabledByLowMemory": {
    "message": "Возвратный кеш отключен, так как недостаточно памяти."
  },
  "panels/application/components/BackForwardCacheStrings.ts | backForwardCacheDisabledForDelegate": {
    "message": "Возвратный кеш не поддерживается представителем."
  },
  "panels/application/components/BackForwardCacheStrings.ts | backForwardCacheDisabledForPrerender": {
    "message": "Возвратный кеш отключен для системы предварительного отображения."
  },
  "panels/application/components/BackForwardCacheStrings.ts | broadcastChannel": {
    "message": "Страницу нельзя кешировать, так как у нее есть экземпляр BroadcastChannel с зарегистрированными прослушивателями."
  },
  "panels/application/components/BackForwardCacheStrings.ts | cacheControlNoStore": {
    "message": "Страницы с заголовком cache-control:no-store нельзя добавить в возвратный кеш."
  },
  "panels/application/components/BackForwardCacheStrings.ts | cacheFlushed": {
    "message": "Кэш был намеренно очищен."
  },
  "panels/application/components/BackForwardCacheStrings.ts | cacheLimit": {
    "message": "Страница удалена из кеша, чтобы освободить место для другой страницы."
  },
  "panels/application/components/BackForwardCacheStrings.ts | containsPlugins": {
    "message": "Страницы с плагинами в настоящее время нельзя добавить в возвратный кеш."
  },
  "panels/application/components/BackForwardCacheStrings.ts | contentFileChooser": {
    "message": "Страницы, которые используют FileChooser API, нельзя добавить в возвратный кеш."
  },
  "panels/application/components/BackForwardCacheStrings.ts | contentFileSystemAccess": {
    "message": "Страницы, которые используют File System Access API, в настоящее время нельзя добавить в возвратный кеш."
  },
  "panels/application/components/BackForwardCacheStrings.ts | contentMediaDevicesDispatcherHost": {
    "message": "Страницы, которые используют диспетчер медиаустройств, нельзя добавить в возвратный кеш."
  },
  "panels/application/components/BackForwardCacheStrings.ts | contentMediaPlay": {
    "message": "Медиапроигрыватель воспроизводил контент во время перехода на другую страницу."
  },
  "panels/application/components/BackForwardCacheStrings.ts | contentMediaSession": {
    "message": "Страницы, которые используют MediaSession API и установили состояние воспроизведения, нельзя добавить в возвратный кеш."
  },
  "panels/application/components/BackForwardCacheStrings.ts | contentMediaSessionService": {
    "message": "Страницы, которые используют MediaSession API и для которых настроены обработчики действий, нельзя добавить в возвратный кеш."
  },
  "panels/application/components/BackForwardCacheStrings.ts | contentScreenReader": {
    "message": "Возвратный кеш отключен, так как работает программа чтения с экрана."
  },
  "panels/application/components/BackForwardCacheStrings.ts | contentSecurityHandler": {
    "message": "Страницы, которые используют SecurityHandler, нельзя добавить в возвратный кеш."
  },
  "panels/application/components/BackForwardCacheStrings.ts | contentSerial": {
    "message": "Страницы, которые используют Serial API, нельзя добавить в возвратный кеш."
  },
  "panels/application/components/BackForwardCacheStrings.ts | contentWebAuthenticationAPI": {
    "message": "Страницы, которые используют WebAuthetication API, нельзя добавить в возвратный кеш."
  },
  "panels/application/components/BackForwardCacheStrings.ts | contentWebBluetooth": {
    "message": "Страницы, которые используют WebBluetooth API, нельзя добавить в возвратный кеш."
  },
  "panels/application/components/BackForwardCacheStrings.ts | contentWebUSB": {
    "message": "Страницы, которые используют WebUSB API, нельзя добавить в возвратный кеш."
  },
  "panels/application/components/BackForwardCacheStrings.ts | cookieDisabled": {
    "message": "Возвратный кеш отключен, так как на странице, использующей Cache-Control: no-store, отключены файлы cookie."
  },
  "panels/application/components/BackForwardCacheStrings.ts | dedicatedWorkerOrWorklet": {
    "message": "Страницы, которые используют Dedicated Worker или Worklet, в настоящее время нельзя добавить в возвратный кеш."
  },
  "panels/application/components/BackForwardCacheStrings.ts | documentLoaded": {
    "message": "Переход со страницы выполнен до завершения загрузки документа."
  },
  "panels/application/components/BackForwardCacheStrings.ts | embedderAppBannerManager": {
    "message": "При переходе на другую страницу был показан баннер приложения."
  },
  "panels/application/components/BackForwardCacheStrings.ts | embedderChromePasswordManagerClientBindCredentialManager": {
    "message": "При переходе на другую страницу работал Менеджер паролей Chrome."
  },
  "panels/application/components/BackForwardCacheStrings.ts | embedderDomDistillerSelfDeletingRequestDelegate": {
    "message": "При переходе на другую страницу выполнялся процесс DOM Distiller."
  },
  "panels/application/components/BackForwardCacheStrings.ts | embedderDomDistillerViewerSource": {
    "message": "При переходе на другую страницу работало средство просмотра DOM Distiller."
  },
  "panels/application/components/BackForwardCacheStrings.ts | embedderExtensionMessaging": {
    "message": "Возвратный кеш отключен, так как расширения используют API для обмена сообщениями."
  },
  "panels/application/components/BackForwardCacheStrings.ts | embedderExtensionMessagingForOpenPort": {
    "message": "Расширения должны закрывать долговременные подключения перед записью возвратного кеша."
  },
  "panels/application/components/BackForwardCacheStrings.ts | embedderExtensionSentMessageToCachedFrame": {
    "message": "Расширения с долговременными подключениями попытались отправлять сообщения в фреймы в возвратном кеше."
  },
  "panels/application/components/BackForwardCacheStrings.ts | embedderExtensions": {
    "message": "Возвратный кеш отключен из-за работы расширений."
  },
  "panels/application/components/BackForwardCacheStrings.ts | embedderModalDialog": {
    "message": "При переходе на другую страницу было показано модальное диалоговое окно (например, связанное с повторной отправкой формы или паролем в протоколе HTTP)."
  },
  "panels/application/components/BackForwardCacheStrings.ts | embedderOfflinePage": {
    "message": "При переходе на другую страницу была показана ее офлайн-версия."
  },
  "panels/application/components/BackForwardCacheStrings.ts | embedderOomInterventionTabHelper": {
    "message": "При переходе на другую страницу была показана строка с сообщением о нехватке памяти."
  },
  "panels/application/components/BackForwardCacheStrings.ts | embedderPermissionRequestManager": {
    "message": "При переходе на другую страницу обнаружены запросы разрешений."
  },
  "panels/application/components/BackForwardCacheStrings.ts | embedderPopupBlockerTabHelper": {
    "message": "При переходе на другую страницу работал блокировщик всплывающих окон."
  },
  "panels/application/components/BackForwardCacheStrings.ts | embedderSafeBrowsingThreatDetails": {
    "message": "При переходе на другую страницу были показаны данные Безопасного просмотра."
  },
  "panels/application/components/BackForwardCacheStrings.ts | embedderSafeBrowsingTriggeredPopupBlocker": {
    "message": "Сервис \"Безопасный просмотр\" заблокировал всплывающее окно, так как страница содержит недопустимый контент."
  },
  "panels/application/components/BackForwardCacheStrings.ts | enteredBackForwardCacheBeforeServiceWorkerHostAdded": {
    "message": "Скрипт Service Worker был активирован, когда страница находилась в возвратном кеше."
  },
  "panels/application/components/BackForwardCacheStrings.ts | errorDocument": {
    "message": "Возвратный кеш отключен из-за ошибки документа."
  },
  "panels/application/components/BackForwardCacheStrings.ts | fencedFramesEmbedder": {
    "message": "Страницы, на которых используется элемент FencedFrames, нельзя сохранить в возвратный кеш."
  },
  "panels/application/components/BackForwardCacheStrings.ts | foregroundCacheLimit": {
    "message": "Страница удалена из кеша, чтобы освободить место для другой страницы."
  },
  "panels/application/components/BackForwardCacheStrings.ts | grantedMediaStreamAccess": {
    "message": "Страницы, которые предоставили доступ к трансляции мультимедиа, в настоящее время нельзя добавить в возвратный кеш."
  },
  "panels/application/components/BackForwardCacheStrings.ts | haveInnerContents": {
    "message": "Страницы, которые используют порталы, в настоящее время нельзя добавить в возвратный кеш."
  },
  "panels/application/components/BackForwardCacheStrings.ts | idleManager": {
    "message": "Страницы, которые используют IdleManager, в настоящее время нельзя добавить в возвратный кеш."
  },
  "panels/application/components/BackForwardCacheStrings.ts | indexedDBConnection": {
    "message": "Страницы с открытым подключением IndexedDB в настоящее время нельзя добавить в возвратный кеш."
  },
  "panels/application/components/BackForwardCacheStrings.ts | indexedDBEvent": {
    "message": "Возвратный кеш отключен из-за события IndexedDB."
  },
  "panels/application/components/BackForwardCacheStrings.ts | ineligibleAPI": {
    "message": "Использовались недопустимые API."
  },
  "panels/application/components/BackForwardCacheStrings.ts | injectedJavascript": {
    "message": "Страницы, в которые с помощью расширений внедрен JavaScript, в настоящее время нельзя добавить в возвратный кеш."
  },
  "panels/application/components/BackForwardCacheStrings.ts | injectedStyleSheet": {
    "message": "Страницы, в которые с помощью расширений внедрена StyleSheet, в настоящее время нельзя добавить в возвратный кеш."
  },
  "panels/application/components/BackForwardCacheStrings.ts | internalError": {
    "message": "Внутренняя ошибка."
  },
  "panels/application/components/BackForwardCacheStrings.ts | jsNetworkRequestReceivedCacheControlNoStoreResource": {
    "message": "Возвратный кеш отключен, так как в ответ на сетевой запрос JavaScript был получен ресурс с заголовком Cache-Control: no-store."
  },
  "panels/application/components/BackForwardCacheStrings.ts | keepaliveRequest": {
    "message": "Возвратный кеш отключен из-за запроса keepalive."
  },
  "panels/application/components/BackForwardCacheStrings.ts | keyboardLock": {
    "message": "Страницы, которые используют блокировку клавиатуры, в настоящее время нельзя добавить в возвратный кеш."
  },
  "panels/application/components/BackForwardCacheStrings.ts | loading": {
    "message": "Переход со страницы выполнен до завершения ее загрузки."
  },
  "panels/application/components/BackForwardCacheStrings.ts | mainResourceHasCacheControlNoCache": {
    "message": "Страницы, в основном ресурсе которых есть заголовок cache-control:no-cache, нельзя добавить в возвратный кеш."
  },
  "panels/application/components/BackForwardCacheStrings.ts | mainResourceHasCacheControlNoStore": {
    "message": "Страницы, в основном ресурсе которых есть заголовок cache-control:no-store, нельзя добавить в возвратный кеш."
  },
  "panels/application/components/BackForwardCacheStrings.ts | navigationCancelledWhileRestoring": {
    "message": "Страницу не удалось восстановить из возвратного кеша до отмены перехода."
  },
  "panels/application/components/BackForwardCacheStrings.ts | networkExceedsBufferLimit": {
    "message": "Страница удалена из кеша, так как через активное сетевое подключение было получено слишком много данных. Chrome ограничивает объем данных, передаваемых на кешируемую страницу."
  },
  "panels/application/components/BackForwardCacheStrings.ts | networkRequestDatapipeDrainedAsBytesConsumer": {
    "message": "Страницы, которые используют событие inflight fetch() или интерфейс XHR, в настоящее время нельзя добавить в возвратный кеш."
  },
  "panels/application/components/BackForwardCacheStrings.ts | networkRequestRedirected": {
    "message": "Страница удалена из возвратного кеша, так как активный сетевой запрос был выполнен с переадресацией."
  },
  "panels/application/components/BackForwardCacheStrings.ts | networkRequestTimeout": {
    "message": "Страница удалена из кеша, так как подключение к сети было открыто слишком долго. Chrome ограничивает время получения данных кешируемой страницей."
  },
  "panels/application/components/BackForwardCacheStrings.ts | noResponseHead": {
    "message": "Страницы без действительного заголовка ответа нельзя добавить в возвратный кеш."
  },
  "panels/application/components/BackForwardCacheStrings.ts | notMainFrame": {
    "message": "Переход выполнен в фрейме, отличном от основного."
  },
  "panels/application/components/BackForwardCacheStrings.ts | outstandingIndexedDBTransaction": {
    "message": "Страницу, на которой выполняются транзакции индексированной базы данных, в настоящее время нельзя добавить в возвратный кеш."
  },
  "panels/application/components/BackForwardCacheStrings.ts | outstandingNetworkRequestDirectSocket": {
    "message": "Страницы с активным сетевым запросом в настоящее время нельзя добавить в возвратный кеш."
  },
  "panels/application/components/BackForwardCacheStrings.ts | outstandingNetworkRequestFetch": {
    "message": "Страницы с активным сетевым запросом на извлечение в настоящее время нельзя добавить в возвратный кеш."
  },
  "panels/application/components/BackForwardCacheStrings.ts | outstandingNetworkRequestOthers": {
    "message": "Страницы с активным сетевым запросом в настоящее время нельзя добавить в возвратный кеш."
  },
  "panels/application/components/BackForwardCacheStrings.ts | outstandingNetworkRequestXHR": {
    "message": "Страницы с активным сетевым запросом XHR в настоящее время нельзя добавить в возвратный кеш."
  },
  "panels/application/components/BackForwardCacheStrings.ts | paymentManager": {
    "message": "Страницы, которые используют PaymentManager, в настоящее время нельзя добавить в возвратный кеш."
  },
  "panels/application/components/BackForwardCacheStrings.ts | pictureInPicture": {
    "message": "Страницы, которые используют картинку в картинке, в настоящее время нельзя добавить в возвратный кеш."
  },
  "panels/application/components/BackForwardCacheStrings.ts | portal": {
    "message": "Страницы, которые используют порталы, в настоящее время нельзя добавить в возвратный кеш."
  },
  "panels/application/components/BackForwardCacheStrings.ts | printing": {
    "message": "Страницы, где показан интерфейс печати, в настоящее время нельзя добавить в возвратный кеш."
  },
  "panels/application/components/BackForwardCacheStrings.ts | relatedActiveContentsExist": {
    "message": "Страница открыта с помощью window.open(), и на нее ссылается другая вкладка, или страница открыта в другом окне."
  },
  "panels/application/components/BackForwardCacheStrings.ts | rendererProcessCrashed": {
    "message": "Процесс отрисовки страницы завершился ошибкой в возвратном кеше."
  },
  "panels/application/components/BackForwardCacheStrings.ts | rendererProcessKilled": {
    "message": "Процесс отрисовки для страницы в возвратном кеше остановлен."
  },
  "panels/application/components/BackForwardCacheStrings.ts | requestedAudioCapturePermission": {
    "message": "Страницы, которые запросили разрешения на запись аудио, в настоящее время нельзя добавить в возвратный кеш."
  },
  "panels/application/components/BackForwardCacheStrings.ts | requestedBackForwardCacheBlockedSensors": {
    "message": "Страницы, запросившие разрешения на доступ к датчикам, в настоящее время нельзя добавить в возвратный кеш."
  },
  "panels/application/components/BackForwardCacheStrings.ts | requestedBackgroundWorkPermission": {
    "message": "Страницы, которые запросили разрешения на фоновую синхронизацию или извлечение, в настоящее время нельзя добавить в возвратный кеш."
  },
  "panels/application/components/BackForwardCacheStrings.ts | requestedMIDIPermission": {
    "message": "Страницы, запросившие разрешения на доступ к MIDI-устройствам, в настоящее время нельзя добавить в возвратный кеш."
  },
  "panels/application/components/BackForwardCacheStrings.ts | requestedNotificationsPermission": {
    "message": "Страницы, запросившие разрешения на доступ к уведомлениям, в настоящее время нельзя добавить в возвратный кеш."
  },
  "panels/application/components/BackForwardCacheStrings.ts | requestedStorageAccessGrant": {
    "message": "Страницы, запросившие доступ к хранилищу, в настоящее время нельзя добавить в возвратный кеш."
  },
  "panels/application/components/BackForwardCacheStrings.ts | requestedVideoCapturePermission": {
    "message": "Страницы, которые запросили разрешения на запись видео, в настоящее время нельзя добавить в возвратный кеш."
  },
  "panels/application/components/BackForwardCacheStrings.ts | schemeNotHTTPOrHTTPS": {
    "message": "Можно кешировать только страницы со схемой URL HTTP или HTTPS."
  },
  "panels/application/components/BackForwardCacheStrings.ts | serviceWorkerClaim": {
    "message": "Страница была запрошена скриптом Service Worker, когда находилась в возвратном кеше."
  },
  "panels/application/components/BackForwardCacheStrings.ts | serviceWorkerPostMessage": {
    "message": "Скрипт Service Worker пытался отправить свойство MessageEvent на страницу в возвратном кеше."
  },
  "panels/application/components/BackForwardCacheStrings.ts | serviceWorkerUnregistration": {
    "message": "Регистрация Service Worker была отменена, когда страница находилась в возвратном кеше."
  },
  "panels/application/components/BackForwardCacheStrings.ts | serviceWorkerVersionActivation": {
    "message": "Страница удалена из возвратного кеша из-за активации Service Worker."
  },
  "panels/application/components/BackForwardCacheStrings.ts | sessionRestored": {
    "message": "Браузер Chrome перезапущен. Все записи возвратного кеша удалены."
  },
  "panels/application/components/BackForwardCacheStrings.ts | sharedWorker": {
    "message": "Страницы, которые используют SharedWorker, в настоящее время нельзя добавить в возвратный кеш."
  },
  "panels/application/components/BackForwardCacheStrings.ts | speechRecognizer": {
    "message": "Страницы, которые используют SpeechRecognizer, в настоящее время нельзя добавить в возвратный кеш."
  },
  "panels/application/components/BackForwardCacheStrings.ts | speechSynthesis": {
    "message": "Страницы, которые используют SpeechSynthesis, в настоящее время нельзя добавить в возвратный кеш."
  },
  "panels/application/components/BackForwardCacheStrings.ts | subframeIsNavigating": {
    "message": "Окно iframe на странице запустило переход, который не завершился."
  },
  "panels/application/components/BackForwardCacheStrings.ts | subresourceHasCacheControlNoCache": {
    "message": "Страницы, в подресурсе которых есть заголовок cache-control:no-cache, нельзя добавить в возвратный кеш."
  },
  "panels/application/components/BackForwardCacheStrings.ts | subresourceHasCacheControlNoStore": {
    "message": "Страницы, в подресурсе которых есть заголовок cache-control:no-store, нельзя добавить в возвратный кеш."
  },
  "panels/application/components/BackForwardCacheStrings.ts | timeout": {
    "message": "Время нахождения страницы в возвратном кеше истекло, так как превысило максимально допустимое."
  },
  "panels/application/components/BackForwardCacheStrings.ts | timeoutPuttingInCache": {
    "message": "Время добавления страницы в возвратный кеш истекло (возможно, обработчики событий pagehide выполняются слишком долго)."
  },
  "panels/application/components/BackForwardCacheStrings.ts | unloadHandlerExistsInMainFrame": {
    "message": "В основном фрейме страницы есть обработчик выгрузки."
  },
  "panels/application/components/BackForwardCacheStrings.ts | unloadHandlerExistsInSubFrame": {
    "message": "В субфрейме страницы есть обработчик выгрузки."
  },
  "panels/application/components/BackForwardCacheStrings.ts | userAgentOverrideDiffers": {
    "message": "Браузер изменил заголовок переопределения агента пользователя."
  },
  "panels/application/components/BackForwardCacheStrings.ts | wasGrantedMediaAccess": {
    "message": "Страницы, которые предоставили право на запись видео или аудио, в настоящее время нельзя добавить в возвратный кеш."
  },
  "panels/application/components/BackForwardCacheStrings.ts | webDatabase": {
    "message": "Страницы, которые используют WebDatabase, в настоящее время нельзя добавить в возвратный кеш."
  },
  "panels/application/components/BackForwardCacheStrings.ts | webHID": {
    "message": "Страницы, которые используют WebHID, в настоящее время нельзя добавить в возвратный кеш."
  },
  "panels/application/components/BackForwardCacheStrings.ts | webLocks": {
    "message": "Страницы, которые используют WebLocks, в настоящее время нельзя добавить в возвратный кеш."
  },
  "panels/application/components/BackForwardCacheStrings.ts | webNfc": {
    "message": "Страницы, которые используют WebNFC, в настоящее время нельзя добавить в возвратный кеш."
  },
  "panels/application/components/BackForwardCacheStrings.ts | webOTPService": {
    "message": "Страницы, которые используют WebOTPService, в настоящее время нельзя добавить в возвратный кеш."
  },
  "panels/application/components/BackForwardCacheStrings.ts | webRTC": {
    "message": "Страницы, которые используют WebRTC, нельзя добавить в возвратный кеш."
  },
  "panels/application/components/BackForwardCacheStrings.ts | webRTCSticky": {
    "message": "Возвратный кеш отключен, потому что используется WebRTC."
  },
  "panels/application/components/BackForwardCacheStrings.ts | webShare": {
    "message": "Страницы, которые используют WebShare, в настоящее время нельзя добавить в возвратный кеш."
  },
  "panels/application/components/BackForwardCacheStrings.ts | webSocket": {
    "message": "Страницы, которые используют интерфейс WebSocket, нельзя добавить в возвратный кеш."
  },
  "panels/application/components/BackForwardCacheStrings.ts | webSocketSticky": {
    "message": "Возвратный кеш отключен, потому что используется WebSocket."
  },
  "panels/application/components/BackForwardCacheStrings.ts | webTransport": {
    "message": "Страницы, которые используют WebTransport, нельзя добавить в возвратный кеш."
  },
  "panels/application/components/BackForwardCacheStrings.ts | webTransportSticky": {
    "message": "Возвратный кеш отключен, потому что используется WebTransport."
  },
  "panels/application/components/BackForwardCacheStrings.ts | webXR": {
    "message": "Страницы, которые используют WebXR, в настоящее время нельзя добавить в возвратный кеш."
  },
  "panels/application/components/BackForwardCacheView.ts | backForwardCacheTitle": {
    "message": "Возвратный кеш"
  },
  "panels/application/components/BackForwardCacheView.ts | blankURLTitle": {
    "message": "Без URL [{PH1}]"
  },
  "panels/application/components/BackForwardCacheView.ts | blockingExtensionId": {
    "message": "Идентификатор расширения: "
  },
  "panels/application/components/BackForwardCacheView.ts | circumstantial": {
    "message": "Не нужно принимать меры"
  },
  "panels/application/components/BackForwardCacheView.ts | circumstantialExplanation": {
    "message": "Причины, которые мешают кешированию, неустранимы, то есть они вне сферы прямого контроля страницы."
  },
  "panels/application/components/BackForwardCacheView.ts | filesPerIssue": {
    "message": "{n,plural, =1{# файл}one{# файл}few{# файла}many{# файлов}other{# файла}}"
  },
  "panels/application/components/BackForwardCacheView.ts | framesPerIssue": {
    "message": "{n,plural, =1{# фрейм}one{# фрейм}few{# фрейма}many{# фреймов}other{# фрейма}}"
  },
  "panels/application/components/BackForwardCacheView.ts | framesTitle": {
    "message": "Фреймы"
  },
  "panels/application/components/BackForwardCacheView.ts | issuesInMultipleFrames": {
    "message": "{n,plural, =1{В нескольких фреймах ({m}) найдена # проблема.}one{В нескольких фреймах ({m}) найдена # проблема.}few{В нескольких фреймах ({m}) найдено # проблемы.}many{В нескольких фреймах ({m}) найдено # проблем.}other{В нескольких фреймах ({m}) найдено # проблемы.}}"
  },
  "panels/application/components/BackForwardCacheView.ts | issuesInSingleFrame": {
    "message": "{n,plural, =1{В одном фрейме найдена # проблема.}one{В одном фрейме найдена # проблема.}few{В одном фрейме найдено # проблемы.}many{В одном фрейме найдено # проблем.}other{В одном фрейме найдено # проблемы.}}"
  },
  "panels/application/components/BackForwardCacheView.ts | learnMore": {
    "message": "Подробнее о возможности использовать возвратный кеш…"
  },
  "panels/application/components/BackForwardCacheView.ts | mainFrame": {
    "message": "Основной фрейм"
  },
  "panels/application/components/BackForwardCacheView.ts | neverUseUnload": {
    "message": "Подробнее о том, почему нельзя пользоваться обработчиком выгрузки…"
  },
  "panels/application/components/BackForwardCacheView.ts | normalNavigation": {
    "message": "Возвратный кеш не использовался. Вы можете запустить его с помощью кнопок \"Назад\" и \"Вперед\" в Chrome или нажать ниже кнопку проверки для автоматической навигации."
  },
  "panels/application/components/BackForwardCacheView.ts | pageSupportNeeded": {
    "message": "Нужно принимать меры"
  },
  "panels/application/components/BackForwardCacheView.ts | pageSupportNeededExplanation": {
    "message": "Вы можете устранить эти причины, чтобы добавить страницу в возвратный кеш."
  },
  "panels/application/components/BackForwardCacheView.ts | restoredFromBFCache": {
    "message": "Передано из возвратного кеша"
  },
  "panels/application/components/BackForwardCacheView.ts | runTest": {
    "message": "Проверить возвратный кеш"
  },
  "panels/application/components/BackForwardCacheView.ts | runningTest": {
    "message": "Выполняется проверка"
  },
  "panels/application/components/BackForwardCacheView.ts | supportPending": {
    "message": "Планируется поддержка в будущих версиях"
  },
  "panels/application/components/BackForwardCacheView.ts | supportPendingExplanation": {
    "message": "Это временные причины, поэтому в будущих версиях Chrome они не будут препятствовать добавлению страниц в возвратный кеш."
  },
  "panels/application/components/BackForwardCacheView.ts | unavailable": {
    "message": "недоступно"
  },
  "panels/application/components/BackForwardCacheView.ts | unknown": {
    "message": "Статус неизвестен"
  },
  "panels/application/components/BackForwardCacheView.ts | url": {
    "message": "URL:"
  },
  "panels/application/components/BounceTrackingMitigationsView.ts | bounceTrackingMitigationsTitle": {
    "message": "Предотвращение отслеживания с переадресацией"
  },
  "panels/application/components/BounceTrackingMitigationsView.ts | checkingPotentialTrackers": {
    "message": "Проверяем, не используют ли сайты отслеживание с переадресацией…"
  },
  "panels/application/components/BounceTrackingMitigationsView.ts | featureDisabled": {
    "message": "Предотвращение отслеживания с переадресацией отключено. Чтобы включить ее, установите для экспериментального параметра \"{PH1}\" значение \"Включено с удалением\"."
  },
  "panels/application/components/BounceTrackingMitigationsView.ts | featureFlag": {
    "message": "Экспериментальный параметр \"Предотвращение отслеживания с переадресацией\""
  },
  "panels/application/components/BounceTrackingMitigationsView.ts | forceRun": {
    "message": "Выполнять принудительно"
  },
  "panels/application/components/BounceTrackingMitigationsView.ts | learnMore": {
    "message": "Подробнее о предотвращении отслеживания с переадресацией…"
  },
  "panels/application/components/BounceTrackingMitigationsView.ts | noPotentialBounceTrackersIdentified": {
    "message": "Состояние сайтов, которые могут использовать отслеживание с переадресацией, не сброшено. Возможно, такие сайты не были обнаружены или сторонние файлы cookie не заблокированы."
  },
  "panels/application/components/BounceTrackingMitigationsView.ts | runningMitigations": {
    "message": "Выполняется"
  },
  "panels/application/components/BounceTrackingMitigationsView.ts | stateDeletedFor": {
    "message": "Состояние удалено для следующих сайтов:"
  },
  "panels/application/components/EndpointsGrid.ts | noEndpointsToDisplay": {
    "message": "Нет конечных точек."
  },
  "panels/application/components/FrameDetailsView.ts | aFrameAncestorIsAnInsecure": {
    "message": "Родительский фрейм небезопасен"
  },
  "panels/application/components/FrameDetailsView.ts | adStatus": {
    "message": "Статус объявления"
  },
  "panels/application/components/FrameDetailsView.ts | additionalInformation": {
    "message": "Дополнительная информация"
  },
  "panels/application/components/FrameDetailsView.ts | apiAvailability": {
    "message": "Доступность API"
  },
  "panels/application/components/FrameDetailsView.ts | availabilityOfCertainApisDepends": {
    "message": "Доступность определенных API зависит от документа, который был изолирован от разных источников."
  },
  "panels/application/components/FrameDetailsView.ts | available": {
    "message": "доступно"
  },
  "panels/application/components/FrameDetailsView.ts | availableNotTransferable": {
    "message": "доступно, не может быть передано"
  },
  "panels/application/components/FrameDetailsView.ts | availableTransferable": {
    "message": "доступно, готово для переноса"
  },
  "panels/application/components/FrameDetailsView.ts | child": {
    "message": "дочерний элемент"
  },
  "panels/application/components/FrameDetailsView.ts | childDescription": {
    "message": "Это дочерний фрейм одного из рекламных объявлений."
  },
  "panels/application/components/FrameDetailsView.ts | clickToRevealInElementsPanel": {
    "message": "Нажмите, чтобы открыть на панели \"Элементы\""
  },
  "panels/application/components/FrameDetailsView.ts | clickToRevealInNetworkPanel": {
    "message": "Нажмите, чтобы открыть на панели \"Сеть\""
  },
  "panels/application/components/FrameDetailsView.ts | clickToRevealInNetworkPanelMight": {
    "message": "Нажмите, чтобы показать на панели \"Сеть\" (может потребоваться перезагрузка страницы)"
  },
  "panels/application/components/FrameDetailsView.ts | clickToRevealInSourcesPanel": {
    "message": "Нажмите, чтобы открыть панель \"Источники\""
  },
  "panels/application/components/FrameDetailsView.ts | contentSecurityPolicy": {
    "message": "Content Security Policy (CSP)"
  },
  "panels/application/components/FrameDetailsView.ts | createdByAdScriptExplanation": {
    "message": "При создании этого фрейма в (async) stack находился скрипт объявления. Чтобы узнать больше, изучите stack trace при создании фрейма."
  },
  "panels/application/components/FrameDetailsView.ts | creationStackTrace": {
    "message": "Stack Trace при создании фрейма"
  },
  "panels/application/components/FrameDetailsView.ts | creationStackTraceExplanation": {
    "message": "Фрейм создан с помощью программных средств. stack trace показывает, где это произошло."
  },
  "panels/application/components/FrameDetailsView.ts | creatorAdScript": {
    "message": "Скрипт объявления для авторов"
  },
  "panels/application/components/FrameDetailsView.ts | crossoriginIsolated": {
    "message": "Изолирован от разных источников"
  },
  "panels/application/components/FrameDetailsView.ts | document": {
    "message": "Документ"
  },
  "panels/application/components/FrameDetailsView.ts | frameId": {
    "message": "Идентификатор фрейма"
  },
  "panels/application/components/FrameDetailsView.ts | learnMore": {
    "message": "Подробнее…"
  },
  "panels/application/components/FrameDetailsView.ts | localhostIsAlwaysASecureContext": {
    "message": "Сервер Localhost всегда безопасен."
  },
  "panels/application/components/FrameDetailsView.ts | matchedBlockingRuleExplanation": {
    "message": "Считается, что это фрейм объявлений, так как его текущий (или предыдущий) основной документ – ресурс объявлений."
  },
  "panels/application/components/FrameDetailsView.ts | measureMemory": {
    "message": "Измерение памяти"
  },
  "panels/application/components/FrameDetailsView.ts | no": {
    "message": "Нет"
  },
  "panels/application/components/FrameDetailsView.ts | none": {
    "message": "Нет"
  },
  "panels/application/components/FrameDetailsView.ts | origin": {
    "message": "Источник"
  },
  "panels/application/components/FrameDetailsView.ts | originTrialsExplanation": {
    "message": "Эксперименты с источником дают доступ к новой или экспериментальной функции."
  },
  "panels/application/components/FrameDetailsView.ts | ownerElement": {
    "message": "Элемент owner"
  },
  "panels/application/components/FrameDetailsView.ts | parentIsAdExplanation": {
    "message": "Считается, что это фрейм объявлений, так как его родительский фрейм относится к такому типу."
  },
  "panels/application/components/FrameDetailsView.ts | reportingTo": {
    "message": "отправляет отчеты"
  },
  "panels/application/components/FrameDetailsView.ts | requiresCrossoriginIsolated": {
    "message": "требуется контекст, изолированный от других источников"
  },
  "panels/application/components/FrameDetailsView.ts | root": {
    "message": "корневой уровень"
  },
  "panels/application/components/FrameDetailsView.ts | rootDescription": {
    "message": "Это корневой фрейм одного из рекламных объявлений."
  },
  "panels/application/components/FrameDetailsView.ts | secureContext": {
    "message": "Безопасный контекст"
  },
  "panels/application/components/FrameDetailsView.ts | securityIsolation": {
    "message": "Безопасность и изоляция"
  },
  "panels/application/components/FrameDetailsView.ts | sharedarraybufferConstructorIs": {
    "message": "Конструктор SharedArrayBuffer доступен, и объекты SABs могут быть переданы через postMessage"
  },
  "panels/application/components/FrameDetailsView.ts | sharedarraybufferConstructorIsAvailable": {
    "message": "Конструктор SharedArrayBuffer доступен, но объекты SABs нельзя передать через postMessage"
  },
  "panels/application/components/FrameDetailsView.ts | theFramesSchemeIsInsecure": {
    "message": "Схема фрейма небезопасна"
  },
  "panels/application/components/FrameDetailsView.ts | thePerformanceAPI": {
    "message": "Есть доступ к performance.measureUserAgentSpecificMemory() API"
  },
  "panels/application/components/FrameDetailsView.ts | thePerformancemeasureuseragentspecificmemory": {
    "message": "Нет доступа к API performance.measureUserAgentSpecificMemory()"
  },
  "panels/application/components/FrameDetailsView.ts | thisAdditionalDebugging": {
    "message": "Это дополнительная информация (сведения об отладке) показаны, потому что запущен эксперимент Protocol Monitor."
  },
  "panels/application/components/FrameDetailsView.ts | transferRequiresCrossoriginIsolatedPermission": {
    "message": "Для переноса SharedArrayBuffer требуется настроить разрешение:"
  },
  "panels/application/components/FrameDetailsView.ts | unavailable": {
    "message": "недоступен"
  },
  "panels/application/components/FrameDetailsView.ts | unreachableUrl": {
    "message": "Недоступный URL"
  },
  "panels/application/components/FrameDetailsView.ts | url": {
    "message": "URL"
  },
  "panels/application/components/FrameDetailsView.ts | willRequireCrossoriginIsolated": {
    "message": "⚠️ в будущем потребуется контекст, изолированный от междоменных источников"
  },
  "panels/application/components/FrameDetailsView.ts | yes": {
    "message": "Да"
  },
  "panels/application/components/InterestGroupAccessGrid.ts | allInterestGroupStorageEvents": {
    "message": "Все события хранения данных для группы по интересам"
  },
  "panels/application/components/InterestGroupAccessGrid.ts | eventTime": {
    "message": "Время события"
  },
  "panels/application/components/InterestGroupAccessGrid.ts | eventType": {
    "message": "Тип доступа"
  },
  "panels/application/components/InterestGroupAccessGrid.ts | groupName": {
    "message": "Название"
  },
  "panels/application/components/InterestGroupAccessGrid.ts | groupOwner": {
    "message": "Владелец"
  },
  "panels/application/components/InterestGroupAccessGrid.ts | noEvents": {
    "message": "Нет записанных событий для групп по интересам."
  },
  "panels/application/components/OriginTrialTreeView.ts | expiryTime": {
    "message": "Срок действия"
  },
  "panels/application/components/OriginTrialTreeView.ts | isThirdParty": {
    "message": "Третьей стороны"
  },
  "panels/application/components/OriginTrialTreeView.ts | matchSubDomains": {
    "message": "Применение к субдоменам"
  },
  "panels/application/components/OriginTrialTreeView.ts | noTrialTokens": {
    "message": "Нет токенов для эксперимента с источником."
  },
  "panels/application/components/OriginTrialTreeView.ts | origin": {
    "message": "Источник"
  },
  "panels/application/components/OriginTrialTreeView.ts | rawTokenText": {
    "message": "Необработанный токен"
  },
  "panels/application/components/OriginTrialTreeView.ts | status": {
    "message": "Статус токена"
  },
  "panels/application/components/OriginTrialTreeView.ts | token": {
    "message": "Токен"
  },
  "panels/application/components/OriginTrialTreeView.ts | tokens": {
    "message": "Токены: {PH1}"
  },
  "panels/application/components/OriginTrialTreeView.ts | trialName": {
    "message": "Название пробной версии"
  },
  "panels/application/components/OriginTrialTreeView.ts | usageRestriction": {
    "message": "Ограничение на использование"
  },
  "panels/application/components/PermissionsPolicySection.ts | allowedFeatures": {
    "message": "Доступные функции"
  },
  "panels/application/components/PermissionsPolicySection.ts | clickToShowHeader": {
    "message": "Нажмите, чтобы показать запрос, в HTTP-заголовке Permissions-Policy которого отключается эта функция"
  },
  "panels/application/components/PermissionsPolicySection.ts | clickToShowIframe": {
    "message": "Нажмите, чтобы показать на панели \"Элементы\" самое верхнее окно iframe, где запрещена эта функция"
  },
  "panels/application/components/PermissionsPolicySection.ts | disabledByFencedFrame": {
    "message": "отключена внутри fencedframe"
  },
  "panels/application/components/PermissionsPolicySection.ts | disabledByHeader": {
    "message": "отключена в заголовке Permissions-Policy"
  },
  "panels/application/components/PermissionsPolicySection.ts | disabledByIframe": {
    "message": "отсутствует в атрибуте allow окна iframe"
  },
  "panels/application/components/PermissionsPolicySection.ts | disabledFeatures": {
    "message": "Отключенные функции"
  },
  "panels/application/components/PermissionsPolicySection.ts | hideDetails": {
    "message": "Скрыть подробности"
  },
  "panels/application/components/PermissionsPolicySection.ts | showDetails": {
    "message": "Показать сведения"
  },
  "panels/application/components/ProtocolHandlersView.ts | dropdownLabel": {
    "message": "Выберите обработчик протоколов"
  },
  "panels/application/components/ProtocolHandlersView.ts | manifest": {
    "message": "файл манифеста"
  },
  "panels/application/components/ProtocolHandlersView.ts | needHelpReadOur": {
    "message": "Нужна помощь? Прочитайте эту статью: {PH1}."
  },
  "panels/application/components/ProtocolHandlersView.ts | protocolDetected": {
    "message": "Найдена действительная регистрация обработчика протокола в файле {PH1}. Когда приложение будет установлено, протестируйте зарегистрированные протоколы."
  },
  "panels/application/components/ProtocolHandlersView.ts | protocolHandlerRegistrations": {
    "message": "Регистрация обработчика протокола URL для PWA"
  },
  "panels/application/components/ProtocolHandlersView.ts | protocolNotDetected": {
    "message": "Определите обработчики протоколов в файле {PH1}, чтобы зарегистрировать приложение в качестве обработчика пользовательских протоколов, когда оно установлено."
  },
  "panels/application/components/ProtocolHandlersView.ts | testProtocol": {
    "message": "Тестировать протокол"
  },
  "panels/application/components/ProtocolHandlersView.ts | textboxLabel": {
    "message": "Укажите параметр запроса или конечную точку для обработчика протоколов"
  },
  "panels/application/components/ProtocolHandlersView.ts | textboxPlaceholder": {
    "message": "Укажите URL"
  },
  "panels/application/components/ReportsGrid.ts | destination": {
    "message": "Целевая конечная точка"
  },
  "panels/application/components/ReportsGrid.ts | generatedAt": {
    "message": "Время создания"
  },
  "panels/application/components/ReportsGrid.ts | noReportsToDisplay": {
    "message": "Нет отчетов."
  },
  "panels/application/components/ReportsGrid.ts | status": {
    "message": "Статус"
  },
  "panels/application/components/SharedStorageAccessGrid.ts | allSharedStorageEvents": {
    "message": "Все события общего хранилища для этой страницы"
  },
  "panels/application/components/SharedStorageAccessGrid.ts | eventParams": {
    "message": "Необязательные параметры события"
  },
  "panels/application/components/SharedStorageAccessGrid.ts | eventTime": {
    "message": "Время события"
  },
  "panels/application/components/SharedStorageAccessGrid.ts | eventType": {
    "message": "Тип доступа"
  },
  "panels/application/components/SharedStorageAccessGrid.ts | mainFrameId": {
    "message": "Идентификатор главного фрейма"
  },
  "panels/application/components/SharedStorageAccessGrid.ts | noEvents": {
    "message": "Нет записанных событий общего хранилища."
  },
  "panels/application/components/SharedStorageAccessGrid.ts | ownerOrigin": {
    "message": "Источник-владелец"
  },
  "panels/application/components/SharedStorageAccessGrid.ts | sharedStorage": {
    "message": "Общее хранилище"
  },
  "panels/application/components/SharedStorageMetadataView.ts | budgetExplanation": {
    "message": "Допустимая утечка данных в течение 24 часов для этого источника в битах энтропии"
  },
  "panels/application/components/SharedStorageMetadataView.ts | creation": {
    "message": "Время создания"
  },
  "panels/application/components/SharedStorageMetadataView.ts | entropyBudget": {
    "message": "Бюджет энтропии в Fenced Frames"
  },
  "panels/application/components/SharedStorageMetadataView.ts | notYetCreated": {
    "message": "Ещё не создано"
  },
  "panels/application/components/SharedStorageMetadataView.ts | numEntries": {
    "message": "Количество записей"
  },
  "panels/application/components/SharedStorageMetadataView.ts | resetBudget": {
    "message": "Сбросить бюджет"
  },
  "panels/application/components/SharedStorageMetadataView.ts | sharedStorage": {
    "message": "Общее хранилище"
  },
  "panels/application/components/StackTrace.ts | cannotRenderStackTrace": {
    "message": "Не удается показать трассировку стека."
  },
  "panels/application/components/StackTrace.ts | creationStackTrace": {
    "message": "Stack Trace при создании фрейма"
  },
  "panels/application/components/StackTrace.ts | showLess": {
    "message": "Свернуть"
  },
  "panels/application/components/StackTrace.ts | showSMoreFrames": {
    "message": "{n,plural, =1{Показать ещё # фрейм}one{Показать ещё # фрейм}few{Показать ещё # фрейма}many{Показать ещё # фреймов}other{Показать ещё # фрейма}}"
  },
  "panels/application/components/StorageMetadataView.ts | bucketName": {
    "message": "Название сегмента"
  },
  "panels/application/components/StorageMetadataView.ts | confirmBucketDeletion": {
    "message": "Удалить сегмент \"{PH1}\"?"
  },
  "panels/application/components/StorageMetadataView.ts | defaultBucket": {
    "message": "Сегмент по умолчанию"
  },
  "panels/application/components/StorageMetadataView.ts | deleteBucket": {
    "message": "Удалить сегмент"
  },
  "panels/application/components/StorageMetadataView.ts | durability": {
    "message": "Устойчивость"
  },
  "panels/application/components/StorageMetadataView.ts | expiration": {
    "message": "Срок действия"
  },
  "panels/application/components/StorageMetadataView.ts | isOpaque": {
    "message": "Неопределенное"
  },
  "panels/application/components/StorageMetadataView.ts | isThirdParty": {
    "message": "Стороннее"
  },
  "panels/application/components/StorageMetadataView.ts | loading": {
    "message": "Загрузка…"
  },
  "panels/application/components/StorageMetadataView.ts | no": {
    "message": "Нет"
  },
  "panels/application/components/StorageMetadataView.ts | none": {
    "message": "Нет"
  },
  "panels/application/components/StorageMetadataView.ts | opaque": {
    "message": "(не определен)"
  },
  "panels/application/components/StorageMetadataView.ts | origin": {
    "message": "Источник"
  },
  "panels/application/components/StorageMetadataView.ts | persistent": {
    "message": "Постоянное"
  },
  "panels/application/components/StorageMetadataView.ts | quota": {
    "message": "Квота"
  },
  "panels/application/components/StorageMetadataView.ts | topLevelSite": {
    "message": "Сайт верхнего уровня"
  },
  "panels/application/components/StorageMetadataView.ts | yes": {
    "message": "Да"
  },
  "panels/application/components/StorageMetadataView.ts | yesBecauseAncestorChainHasCrossSite": {
    "message": "Да, потому что в цепочке предков есть сторонний источник"
  },
  "panels/application/components/StorageMetadataView.ts | yesBecauseKeyIsOpaque": {
    "message": "Да, потому что ключ хранилища не определен"
  },
  "panels/application/components/StorageMetadataView.ts | yesBecauseOriginNotInTopLevelSite": {
    "message": "Да, потому что источник не находится на сайте верхнего уровня"
  },
  "panels/application/components/StorageMetadataView.ts | yesBecauseTopLevelIsOpaque": {
    "message": "Да, потому что сайт верхнего уровня не определен"
  },
  "panels/application/components/TrustTokensView.ts | allStoredTrustTokensAvailableIn": {
    "message": "Все хранимые личные токены состояния доступны в этом экземпляре браузера"
  },
  "panels/application/components/TrustTokensView.ts | deleteTrustTokens": {
    "message": "Удалить все хранимые личные токены состояния, выпущенные {PH1}"
  },
  "panels/application/components/TrustTokensView.ts | issuer": {
    "message": "Издатель"
  },
  "panels/application/components/TrustTokensView.ts | noTrustTokensStored": {
    "message": "Нет сохраненных личных токенов состояния."
  },
  "panels/application/components/TrustTokensView.ts | storedTokenCount": {
    "message": "Число сохраненных токенов"
  },
  "panels/application/components/TrustTokensView.ts | trustTokens": {
    "message": "Личные токены состояния"
  },
  "panels/application/preloading/PreloadingView.ts | filterAllPreloads": {
    "message": "Все спекулятивные загрузки"
  },
  "panels/application/preloading/PreloadingView.ts | filterFilterByRuleSet": {
    "message": "Фильтр по набору правил"
  },
  "panels/application/preloading/PreloadingView.ts | statusFailure": {
    "message": "Ошибка"
  },
  "panels/application/preloading/PreloadingView.ts | statusNotTriggered": {
    "message": "Не запущена"
  },
  "panels/application/preloading/PreloadingView.ts | statusPending": {
    "message": "Ожидание"
  },
  "panels/application/preloading/PreloadingView.ts | statusReady": {
    "message": "Готово"
  },
  "panels/application/preloading/PreloadingView.ts | statusRunning": {
    "message": "Выполняется"
  },
  "panels/application/preloading/PreloadingView.ts | statusSuccess": {
    "message": "Готово"
  },
  "panels/application/preloading/PreloadingView.ts | validityInvalid": {
    "message": "Недействительный"
  },
  "panels/application/preloading/PreloadingView.ts | validitySomeRulesInvalid": {
    "message": "Есть недействительные правила"
  },
  "panels/application/preloading/PreloadingView.ts | validityValid": {
    "message": "Действительное"
  },
  "panels/application/preloading/components/MismatchedPreloadingGrid.ts | action": {
    "message": "Действие"
  },
  "panels/application/preloading/components/MismatchedPreloadingGrid.ts | status": {
    "message": "Статус"
  },
  "panels/application/preloading/components/MismatchedPreloadingGrid.ts | statusFailure": {
    "message": "Ошибка"
  },
  "panels/application/preloading/components/MismatchedPreloadingGrid.ts | statusNotTriggered": {
    "message": "Не запущена"
  },
  "panels/application/preloading/components/MismatchedPreloadingGrid.ts | statusPending": {
    "message": "Ожидание"
  },
  "panels/application/preloading/components/MismatchedPreloadingGrid.ts | statusReady": {
    "message": "Готово"
  },
  "panels/application/preloading/components/MismatchedPreloadingGrid.ts | statusRunning": {
    "message": "Выполняется"
  },
  "panels/application/preloading/components/MismatchedPreloadingGrid.ts | statusSuccess": {
    "message": "Готово"
  },
  "panels/application/preloading/components/MismatchedPreloadingGrid.ts | url": {
    "message": "URL"
  },
  "panels/application/preloading/components/PreloadingDetailsReportView.ts | buttonClickToInspect": {
    "message": "Нажмите, чтобы посмотреть предварительно отрисованную страницу"
  },
  "panels/application/preloading/components/PreloadingDetailsReportView.ts | buttonClickToRevealRuleSet": {
    "message": "Нажмите, чтобы посмотреть набор правил"
  },
  "panels/application/preloading/components/PreloadingDetailsReportView.ts | buttonInspect": {
    "message": "Посмотреть"
  },
  "panels/application/preloading/components/PreloadingDetailsReportView.ts | detailedStatusFailure": {
    "message": "Не удалось выполнить спекулятивную загрузку."
  },
  "panels/application/preloading/components/PreloadingDetailsReportView.ts | detailedStatusNotTriggered": {
    "message": "Спекулятивная загрузка ещё не запускалась."
  },
  "panels/application/preloading/components/PreloadingDetailsReportView.ts | detailedStatusPending": {
    "message": "Спекулятивная загрузка возможна и ожидается."
  },
  "panels/application/preloading/components/PreloadingDetailsReportView.ts | detailedStatusReady": {
    "message": "Спекулятивная загрузка окончена. Результат готов к использованию."
  },
  "panels/application/preloading/components/PreloadingDetailsReportView.ts | detailedStatusRunning": {
    "message": "Спекулятивная загрузка выполняется."
  },
  "panels/application/preloading/components/PreloadingDetailsReportView.ts | detailedStatusSuccess": {
    "message": "Спекулятивная загрузка окончена и использована для перехода."
  },
  "panels/application/preloading/components/PreloadingDetailsReportView.ts | detailsAction": {
    "message": "Действие"
  },
  "panels/application/preloading/components/PreloadingDetailsReportView.ts | detailsDetailedInformation": {
    "message": "Подробная информация"
  },
  "panels/application/preloading/components/PreloadingDetailsReportView.ts | detailsFailureReason": {
    "message": "Причина ошибки"
  },
  "panels/application/preloading/components/PreloadingDetailsReportView.ts | detailsRuleSet": {
    "message": "Набор правил"
  },
  "panels/application/preloading/components/PreloadingDetailsReportView.ts | detailsStatus": {
    "message": "Статус"
  },
  "panels/application/preloading/components/PreloadingDetailsReportView.ts | selectAnElementForMoreDetails": {
    "message": "Выберите элемент, чтобы посмотреть дополнительные сведения о нем"
  },
  "panels/application/preloading/components/PreloadingDisabledInfobar.ts | descriptionDisabledByBatterySaver": {
    "message": "Спекулятивная загрузка отключена, так как в операционной системе включен режим энергосбережения."
  },
  "panels/application/preloading/components/PreloadingDisabledInfobar.ts | descriptionDisabledByDataSaver": {
    "message": "Спекулятивная загрузка отключена, так как в операционной системе включен режим экономии трафика."
  },
  "panels/application/preloading/components/PreloadingDisabledInfobar.ts | descriptionDisabledByHoldbackPrefetchSpeculationRules": {
    "message": "Предзагрузка включена принудительно, поскольку открыты инструменты разработчика. После их закрытия она будет отключена, так как этот сеанс браузера входит в группу, на основании данных о которой сравнивается производительность."
  },
  "panels/application/preloading/components/PreloadingDisabledInfobar.ts | descriptionDisabledByHoldbackPrerenderSpeculationRules": {
    "message": "Предварительная отрисовка включена принудительно, поскольку открыты инструменты разработчика. После их закрытия она будет отключена, так как этот сеанс в браузере входит в группу, на основании данных о которой сравнивается производительность."
  },
  "panels/application/preloading/components/PreloadingDisabledInfobar.ts | descriptionDisabledByPreference": {
    "message": "Спекулятивная загрузка отключена пользователем или расширением. Вы можете изменить {PH1}. Чтобы отключить расширение, которое блокирует спекулятивную загрузку, откройте {PH2}."
  },
  "panels/application/preloading/components/PreloadingDisabledInfobar.ts | extensionsSettings": {
    "message": "Настройки расширений"
  },
  "panels/application/preloading/components/PreloadingDisabledInfobar.ts | footerLearnMore": {
    "message": "Подробнее"
  },
  "panels/application/preloading/components/PreloadingDisabledInfobar.ts | headerDisabledByBatterySaver": {
    "message": "Экономия энергии"
  },
  "panels/application/preloading/components/PreloadingDisabledInfobar.ts | headerDisabledByDataSaver": {
    "message": "Экономия трафика"
  },
  "panels/application/preloading/components/PreloadingDisabledInfobar.ts | headerDisabledByHoldbackPrefetchSpeculationRules": {
    "message": "Предзагрузка была отключена, но теперь активирована принудительно"
  },
  "panels/application/preloading/components/PreloadingDisabledInfobar.ts | headerDisabledByHoldbackPrerenderSpeculationRules": {
    "message": "Предварительная отрисовка была отключена, но теперь активирована принудительно"
  },
  "panels/application/preloading/components/PreloadingDisabledInfobar.ts | headerDisabledByPreference": {
    "message": "Расширения и настройки пользователя"
  },
  "panels/application/preloading/components/PreloadingDisabledInfobar.ts | infobarPreloadingIsDisabled": {
    "message": "Спекулятивная загрузка отключена."
  },
  "panels/application/preloading/components/PreloadingDisabledInfobar.ts | infobarPreloadingIsForceEnabled": {
    "message": "Спекулятивная загрузка включена принудительно."
  },
  "panels/application/preloading/components/PreloadingDisabledInfobar.ts | preloadingPagesSettings": {
    "message": "Настройки предзагрузки страниц"
  },
  "panels/application/preloading/components/PreloadingDisabledInfobar.ts | titleReasonsPreventingPreloading": {
    "message": "Почему спекулятивная загрузка не начинается"
  },
  "panels/application/preloading/components/PreloadingGrid.ts | action": {
    "message": "Действие"
  },
  "panels/application/preloading/components/PreloadingGrid.ts | ruleSet": {
    "message": "Набор правил"
  },
  "panels/application/preloading/components/PreloadingGrid.ts | status": {
    "message": "Статус"
  },
  "panels/application/preloading/components/PreloadingMismatchedHeadersGrid.ts | activationNavigationValue": {
    "message": "Значение при активации"
  },
  "panels/application/preloading/components/PreloadingMismatchedHeadersGrid.ts | headerName": {
    "message": "Название заголовка"
  },
  "panels/application/preloading/components/PreloadingMismatchedHeadersGrid.ts | initialNavigationValue": {
    "message": "Значение в исходной навигации"
  },
  "panels/application/preloading/components/PreloadingMismatchedHeadersGrid.ts | missing": {
    "message": "(отсутствует)"
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchEvictedAfterCandidateRemoved": {
    "message": "Предзагрузка не выполнена, поскольку на исходной странице нет правила, запускающего ее для этого URL."
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchEvictedForNewerPrefetch": {
    "message": "Предзагрузка не выполнена, так как на исходной странице выполняется слишком много предзагрузок, а эта была одной из самых давних."
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchFailedIneligibleRedirect": {
    "message": "Предзагрузка переадресована на URL, для которого эта операция не допускается."
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchFailedInvalidRedirect": {
    "message": "Возникла проблема с переадресацией предзагрузки на другой URL."
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchFailedMIMENotSupported": {
    "message": "Не удалось выполнить предзагрузку, так как заголовок Content-Type полученного ответа не поддерживается."
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchFailedNetError": {
    "message": "Предзагрузку не удалось выполнить из-за ошибки сети."
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchFailedNon2XX": {
    "message": "Не удалось выполнить предзагрузку из-за кода статуса HTTP-ответа, который не относится к категории 2xx."
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchFailedPerPageLimitExceeded": {
    "message": "Предзагрузка не выполнена, так как на исходной странице уже выполняется слишком много предзагрузок."
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchIneligibleRetryAfter": {
    "message": "При прошлой попытке предзагрузки источник вернул ошибку HTTP 503. Время, указанное в заголовке Retry-After этого ответа, ещё не истекло."
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchIsPrivacyDecoy": {
    "message": "Предзагрузка ресурсов по этому URL не допускается, так как для источника есть зарегистрированный скрипт service worker или файлы cookie с другого сайта. Запрос предзагрузки был отправлен, но не использовался, чтобы скрыть тот факт, что пользователь ранее взаимодействовал с источником."
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchIsStale": {
    "message": "Полученные данные удалены, так как после предзагрузки прошло слишком много времени."
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchNotEligibleBatterySaverEnabled": {
    "message": "Предзагрузка не выполнена, так как включен режим энергосбережения."
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchNotEligibleBrowserContextOffTheRecord": {
    "message": "Предзагрузка не выполнена, так как браузер открыт в режиме инкогнито или гостевом режиме."
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchNotEligibleDataSaverEnabled": {
    "message": "Предзагрузка не выполнена, так как в операционной системе включен режим экономии трафика."
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchNotEligibleExistingProxy": {
    "message": "Предзагрузка ресурсов по этому URL не допускается, так как в сетевом контексте по умолчанию для него настроено использование прокси-сервера."
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchNotEligibleHostIsNonUnique": {
    "message": "Предзагрузка ресурсов по этому URL не допускается, так как его хост не уникален, например не является общедоступным маршрутизируемым IP-адресом или его имя не управляется через реестр, однако предзагрузку требовалось выполнить через прокси-сервер."
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchNotEligibleNonDefaultStoragePartition": {
    "message": "Предзагрузка ресурсов по этому URL не допускается, так как он ссылается на раздел хранилища, не заданный по умолчанию."
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchNotEligiblePreloadingDisabled": {
    "message": "Упреждающий запрос не был выполнен, так как спекулятивная загрузка отключена."
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchNotEligibleSameSiteCrossOriginPrefetchRequiredProxy": {
    "message": "Предзагрузка ресурсов по этому URL не допускается, так как в сетевом контексте по умолчанию невозможно настроить использование прокси-сервера предзагрузки для междоменных запросов предзагрузки к этому же сайту."
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchNotEligibleSchemeIsNotHttps": {
    "message": "Предзагрузка ресурсов по этому URL не допускается, так как его схема отличается от HTTPS."
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchNotEligibleUserHasCookies": {
    "message": "Предзагрузка ресурсов по этому URL не допускается, так как он относится к другому сайту и у пользователя есть файлы cookie для этого источника."
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchNotEligibleUserHasServiceWorker": {
    "message": "Предзагрузка ресурсов по этому URL не допускается, так как для источника есть зарегистрированный скрипт service worker, который сейчас не поддерживается."
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchNotUsedCookiesChanged": {
    "message": "Во время предзагрузки с другого сайта для него были добавлены файлы cookie. В результате полученные данные оказались устаревшими и не использовались."
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchNotUsedProbeFailed": {
    "message": "Предзагрузка заблокирована интернет-провайдером или администратором сети."
  },
  "panels/application/preloading/components/PreloadingString.ts | PrefetchProxyNotAvailable": {
    "message": "При попытке настроить подключение к прокси-серверу предзагрузки произошла ошибка сети."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusActivatedDuringMainFrameNavigation": {
    "message": "Предварительно отрисованная страница выведена во время перехода в основном фрейме исходной страницы."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusActivatedWithAuxiliaryBrowsingContexts": {
    "message": "Предварительная отрисовка не использована, так как во время вывода страницы были и другие окна с активной ссылкой на начальную страницу, что в настоящее время не поддерживается."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusActivationFramePolicyNotCompatible": {
    "message": "Предварительная отрисовка не использована, так как экспериментальные параметры изолированной среды или правила для разрешений на исходной странице и на странице для предварительной отрисовки оказались несовместимы."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusActivationNavigationParameterMismatch": {
    "message": "Предварительная отрисовка не использована, так как при получении исходного запроса на переход с предварительной отрисовкой и во время вывода страницы были рассчитаны разные параметры перехода (например, HTTP-заголовки)."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusActivationUrlHasEffectiveUrl": {
    "message": "Предварительная отрисовка не использована, так как во время вывода страницы конечный URL отличался от обычного URL (например, вел на страницу с новой вкладкой или к размещенным приложениям)."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusAudioOutputDeviceRequested": {
    "message": "На предварительно отрисованной странице запрошен вывод аудио, но эта функция сейчас не поддерживается."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusBatterySaverEnabled": {
    "message": "Предварительная отрисовка не выполнена, так как пользователь включил в браузере режим энергосбережения."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusBlockedByClient": {
    "message": "Загрузка некоторых ресурсов заблокирована."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusClientCertRequested": {
    "message": "Для перехода с предварительной отрисовкой требовался сертификат HTTP-клиента."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusCrossSiteNavigationInInitialNavigation": {
    "message": "Не удалось выполнить переход с предварительной отрисовкой, так как он вел по межсайтовому URL."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusCrossSiteNavigationInMainFrameNavigation": {
    "message": "С предварительно отрисованной страницы выполнен переход по межсайтовому URL."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusCrossSiteRedirectInInitialNavigation": {
    "message": "Не удалось выполнить переход с предварительной отрисовкой, так как с предварительно отрисованной страницы была выполнена переадресация по межсайтовому URL."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusCrossSiteRedirectInMainFrameNavigation": {
    "message": "С предварительно отрисованной страницы был выполнен переход по URL, перенаправляющему по межсайтовому URL."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusDataSaverEnabled": {
    "message": "Предварительная отрисовка не выполнена, так как пользователь включил в браузере режим экономии трафика."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusDownload": {
    "message": "На предварительно отрисованной странице предпринята попытка скачивания, но эта функция сейчас не поддерживается."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusHasEffectiveUrl": {
    "message": "Невозможно выполнить предварительную отрисовку исходной страницы, так как конечный URL отличается от ее обычного URL (например, ведет на страницу с новой вкладкой или к размещенным приложениям)."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusInvalidSchemeNavigation": {
    "message": "Предварительная отрисовка страницы по этому URL не допускается, так как его схема отличается от схемы HTTP или HTTPS."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusInvalidSchemeRedirect": {
    "message": "Не удалось выполнить переход с предварительной отрисовкой, так как была выполнена переадресация по URL, схема которого отличается от схемы HTTP или HTTPS."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusLoginAuthRequested": {
    "message": "Для перехода с предварительной отрисовкой требовалась HTTP-аутентификация, которая сейчас не поддерживается."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusLowEndDevice": {
    "message": "Предварительная отрисовка не выполнена, так как на устройстве недостаточно общего объема системной памяти."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusMainFrameNavigation": {
    "message": "После предварительной отрисовки на странице был выполнен переход по другому URL, который сейчас не поддерживается."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusMaxNumOfRunningEagerPrerendersExceeded": {
    "message": "Предварительная отрисовка со значением eager в параметре eagerness не выполнена, так как на исходной странице уже запущено слишком много таких процессов. Чтобы продолжить, удалите другие правила спекуляции с этим значением."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusMaxNumOfRunningEmbedderPrerendersExceeded": {
    "message": "Начатая браузером предварительная отрисовка не выполнена, так как на исходной странице уже запущено слишком много таких процессов."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusMaxNumOfRunningNonEagerPrerendersExceeded": {
    "message": "Предыдущая предварительная отрисовка (имеющая значение moderate или conservative в параметре eagerness и запускаемая наведением указателя или нажатием на ссылку) была автоматически отменена, так как начал выполняться другой такой процесс. Предварительная отрисовка запустится заново при взаимодействии со ссылкой."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusMemoryLimitExceeded": {
    "message": "Предварительная отрисовка не выполнена, так как в браузере превышено ограничение на использование памяти для предварительной отрисовки."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusMemoryPressureAfterTriggered": {
    "message": "Данные предварительно отрисованной страницы были выгружены, так как для работы браузера не хватало памяти."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusMemoryPressureOnTrigger": {
    "message": "Предварительная отрисовка не выполнена, так как для работы браузера не хватало памяти."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusMixedContent": {
    "message": "Предварительно отрисованная страница содержала смешанный контент."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusMojoBinderPolicy": {
    "message": "На предварительно отрисованной странице использованы запрещенные API JavaScript, которые сейчас не поддерживаются. Внутренний интерфейс Mojo: {PH1}."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusNavigationBadHttpStatus": {
    "message": "Не удалось выполнить переход с предварительной отрисовкой из-за кода статуса HTTP-ответа, который не относится к категории 2xx."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusNavigationRequestBlockedByCsp": {
    "message": "Переход с предварительной отрисовкой заблокирован в соответствии с директивой Content Security Policy."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusNavigationRequestNetworkError": {
    "message": "При переходе с предварительной отрисовкой произошла ошибка сети."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusPreloadingDisabled": {
    "message": "Предварительная отрисовка не выполнена, так как пользователь отключил предзагрузку в настройках браузера."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusPrerenderingDisabledByDevTools": {
    "message": "Предварительная отрисовка не выполнена, так как была отключена в инструментах разработчика."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusPrerenderingUrlHasEffectiveUrl": {
    "message": "Не удалось выполнить переход с предварительной отрисовкой, так как конечный URL отличается от обычного URL страницы (например, ведет на страницу с новой вкладкой или к размещенным приложениям)."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusPrimaryMainFrameRendererProcessCrashed": {
    "message": "Произошел сбой исходной страницы."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusPrimaryMainFrameRendererProcessKilled": {
    "message": "Исходная страница закрыта."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusRedirectedPrerenderingUrlHasEffectiveUrl": {
    "message": "Не удалось выполнить переход с предварительной отрисовкой, так как была выполнена переадресация на конечный URL, который отличается от обычного URL страницы (например, ведет на страницу с новой вкладкой или к размещенным приложениям)."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusRendererProcessCrashed": {
    "message": "Произошел сбой предварительно отрисованной страницы."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusRendererProcessKilled": {
    "message": "Предварительно отрисованная страница закрыта."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusSameSiteCrossOriginNavigationNotOptInInInitialNavigation": {
    "message": "Не удалось выполнить переход с предварительной отрисовкой, так как была выполнена переадресация по междоменному URL этого же сайта, но в ответе целевой страницы не было корректного заголовка Supports-Loading-Mode."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusSameSiteCrossOriginNavigationNotOptInInMainFrameNavigation": {
    "message": "С предварительно отрисованной страницы был выполнен переход по междоменному URL этого же сайта, но в ответе целевой страницы не было корректного заголовка Supports-Loading-Mode."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusSameSiteCrossOriginRedirectNotOptInInInitialNavigation": {
    "message": "Не удалось выполнить переход с предварительной отрисовкой, так как с предварительно отрисованной страницы была выполнена переадресация по междоменному URL этого же сайта, но в ответе целевой страницы не было корректного заголовка Supports-Loading-Mode."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusSameSiteCrossOriginRedirectNotOptInInMainFrameNavigation": {
    "message": "С предварительно отрисованной страницы был выполнен переход по URL, перенаправляющему по междоменному URL этого же сайта, но в ответе целевой страницы не было корректного заголовка Supports-Loading-Mode."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusSpeculationRuleRemoved": {
    "message": "Данные предварительно отрисованной страницы были выгружены, так как на исходной странице удалено соответствующее правило предварительной отрисовки из блока <script type=\"speculationrules\">."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusSslCertificateError": {
    "message": "Не удалось выполнить переход с предварительной отрисовкой из-за недопустимого SSL-сертификата."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusTimeoutBackgrounded": {
    "message": "Исходная страница долго находится в фоновом режиме, поэтому предварительно отрисованная страница удалена."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusTriggerBackgrounded": {
    "message": "Исходная страница переведена в фоновый режим, поэтому предварительно отрисованная страница удалена."
  },
  "panels/application/preloading/components/PreloadingString.ts | prerenderFinalStatusUaChangeRequiresReload": {
    "message": "При переходе с предварительной отрисовкой произошла смена агента пользователя."
  },
  "panels/application/preloading/components/PreloadingString.ts | statusFailure": {
    "message": "Ошибка"
  },
  "panels/application/preloading/components/PreloadingString.ts | statusNotTriggered": {
    "message": "Не запущена"
  },
  "panels/application/preloading/components/PreloadingString.ts | statusPending": {
    "message": "Ожидание"
  },
  "panels/application/preloading/components/PreloadingString.ts | statusReady": {
    "message": "Готово"
  },
  "panels/application/preloading/components/PreloadingString.ts | statusRunning": {
    "message": "Выполняется"
  },
  "panels/application/preloading/components/PreloadingString.ts | statusSuccess": {
    "message": "Готово"
  },
  "panels/application/preloading/components/RuleSetGrid.ts | buttonClickToRevealInElementsPanel": {
    "message": "Нажмите, чтобы открыть на панели \"Элементы\""
  },
  "panels/application/preloading/components/RuleSetGrid.ts | buttonClickToRevealInNetworkPanel": {
    "message": "Нажмите, чтобы открыть на панели \"Сеть\""
  },
  "panels/application/preloading/components/RuleSetGrid.ts | buttonRevealPreloadsAssociatedWithRuleSet": {
    "message": "Показать спекулятивные загрузки, связанные с этим набором правил"
  },
  "panels/application/preloading/components/RuleSetGrid.ts | errors": {
    "message": "{errorCount,plural, =1{# ошибка}one{# ошибка}few{# ошибки}many{# ошибок}other{# ошибки}}"
  },
  "panels/application/preloading/components/RuleSetGrid.ts | ruleSet": {
    "message": "Набор правил"
  },
  "panels/application/preloading/components/RuleSetGrid.ts | status": {
    "message": "Статус"
  },
  "panels/application/preloading/components/UsedPreloadingView.ts | badgeFailure": {
    "message": "Сбой"
  },
  "panels/application/preloading/components/UsedPreloadingView.ts | badgeFailureWithCount": {
    "message": "{n,plural, =1{# сбой}one{# сбой}few{# сбоя}many{# сбоев}other{# сбоя}}"
  },
  "panels/application/preloading/components/UsedPreloadingView.ts | badgeInProgressWithCount": {
    "message": "{n,plural, =1{Выполняется: #}one{Выполняется: #}few{Выполняется: #}many{Выполняется: #}other{Выполняется: #}}"
  },
  "panels/application/preloading/components/UsedPreloadingView.ts | badgeNoSpeculativeLoads": {
    "message": "Упреждающая загрузка не используется"
  },
  "panels/application/preloading/components/UsedPreloadingView.ts | badgeNotTriggeredWithCount": {
    "message": "{n,plural, =1{Не запущено: #}one{Не запущено: #}few{Не запущено: #}many{Не запущено: #}other{Не запущено: #}}"
  },
  "panels/application/preloading/components/UsedPreloadingView.ts | badgeSuccess": {
    "message": "Завершено"
  },
  "panels/application/preloading/components/UsedPreloadingView.ts | badgeSuccessWithCount": {
    "message": "{n,plural, =1{Завершено: #}one{Завершено: #}few{Завершено: #}many{Завершено: #}other{Завершено: #}}"
  },
  "panels/application/preloading/components/UsedPreloadingView.ts | currentURL": {
    "message": "URL текущей страницы"
  },
  "panels/application/preloading/components/UsedPreloadingView.ts | detailsFailureReason": {
    "message": "Причина ошибки"
  },
  "panels/application/preloading/components/UsedPreloadingView.ts | downgradedPrefetchUsed": {
    "message": "Исходная страница попыталась предварительно отрисовать страницу с этим URL, но процесс завершился сбоем. Однако полученное тело ответа все же использовалось в качестве предзагрузки."
  },
  "panels/application/preloading/components/UsedPreloadingView.ts | learnMore": {
    "message": "Подробнее о спекулятивной загрузке: developer.chrome.com"
  },
  "panels/application/preloading/components/UsedPreloadingView.ts | mismatchedHeadersDetail": {
    "message": "Заголовки HTTP-запросов не совпадают"
  },
  "panels/application/preloading/components/UsedPreloadingView.ts | noPreloads": {
    "message": "Исходная страница не пыталась выполнить спекулятивную загрузку страницы с этим URL."
  },
  "panels/application/preloading/components/UsedPreloadingView.ts | prefetchFailed": {
    "message": "Исходная страница попыталась предзагрузить страницу по этому URL, однако процесс завершился ошибкой. Вместо этого был выполнен полный переход."
  },
  "panels/application/preloading/components/UsedPreloadingView.ts | prefetchUsed": {
    "message": "Предзагрузка страницы завершена."
  },
  "panels/application/preloading/components/UsedPreloadingView.ts | preloadedURLs": {
    "message": "URL, которые спекулятивно загружает исходная страница"
  },
  "panels/application/preloading/components/UsedPreloadingView.ts | prerenderFailed": {
    "message": "Исходная страница попыталась предварительно отрисовать страницу по этому URL, однако процесс завершился ошибкой. Вместо этого был выполнен полный переход."
  },
  "panels/application/preloading/components/UsedPreloadingView.ts | prerenderUsed": {
    "message": "Предварительная отрисовка страницы завершена."
  },
  "panels/application/preloading/components/UsedPreloadingView.ts | speculationsInitiatedByThisPage": {
    "message": "Упреждающие загрузки, вызванные этой страницей"
  },
  "panels/application/preloading/components/UsedPreloadingView.ts | speculativeLoadingStatusForThisPage": {
    "message": "Статус упреждающей загрузки для этой страницы"
  },
  "panels/application/preloading/components/UsedPreloadingView.ts | viewAllRules": {
    "message": "Все правила упреждающей загрузки"
  },
  "panels/application/preloading/components/UsedPreloadingView.ts | viewAllSpeculations": {
    "message": "Все упреждающие загрузки"
  },
  "panels/autofill/AutofillView.ts | addressPreview": {
    "message": "Предварительный просмотр адреса"
  },
  "panels/autofill/AutofillView.ts | attr": {
    "message": "атриб."
  },
  "panels/autofill/AutofillView.ts | autoShow": {
    "message": "Открывать панель при автозаполнении"
  },
  "panels/autofill/AutofillView.ts | autocompleteAttribute": {
    "message": "Атрибут автозаполнения"
  },
  "panels/autofill/AutofillView.ts | formField": {
    "message": "Поле формы"
  },
  "panels/autofill/AutofillView.ts | formInspector": {
    "message": "Инспектор форм"
  },
  "panels/autofill/AutofillView.ts | heur": {
    "message": "эврист."
  },
  "panels/autofill/AutofillView.ts | inferredByHeuristics": {
    "message": "Определяется на основе эвристических алгоритмов"
  },
  "panels/autofill/AutofillView.ts | noDataAvailable": {
    "message": "Событие автозаполнения не обнаружено"
  },
  "panels/autofill/AutofillView.ts | predictedAutofillValue": {
    "message": "Прогнозируемое значение автозаполнения"
  },
  "panels/autofill/AutofillView.ts | value": {
    "message": "Значение"
  },
  "panels/autofill/autofill-meta.ts | autofill": {
    "message": "Автозаполнение"
  },
  "panels/autofill/autofill-meta.ts | showAutofill": {
    "message": "Показать панель \"Автозаполнение\""
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | animation": {
    "message": "Анимация"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | auctionWorklet": {
    "message": "Аукцион объявлений Worklet"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | breakpointHit": {
    "message": "достигнута точка останова"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | canvas": {
    "message": "Canvas"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | clipboard": {
    "message": "Буфер обмена"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | control": {
    "message": "Элемент управления"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | device": {
    "message": "Устройство"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | domMutation": {
    "message": "Мутации DOM"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | dragDrop": {
    "message": "Перетаскивание"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | geolocation": {
    "message": "Геопозиционирование"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | keyboard": {
    "message": "Клавиатура"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | load": {
    "message": "Загрузить"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | media": {
    "message": "Носитель"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | mouse": {
    "message": "Мышь"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | notification": {
    "message": "Уведомление"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | parse": {
    "message": "Синтаксический анализ"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | pictureinpicture": {
    "message": "Картинка в картинке"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | pointer": {
    "message": "Указатель"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | script": {
    "message": "Скрипт"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | sharedStorageWorklet": {
    "message": "Shared Storage Worklet"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | timer": {
    "message": "Таймер"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | touch": {
    "message": "Касание"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | trustedTypeViolations": {
    "message": "Нарушения Trusted Type"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | webaudio": {
    "message": "WebAudio"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | window": {
    "message": "Окно"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | worker": {
    "message": "Worker"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | xhr": {
    "message": "XHR"
  },
  "panels/browser_debugger/DOMBreakpointsSidebarPane.ts | attributeModified": {
    "message": "Атрибут изменен"
  },
  "panels/browser_debugger/DOMBreakpointsSidebarPane.ts | breakOn": {
    "message": "Останов на"
  },
  "panels/browser_debugger/DOMBreakpointsSidebarPane.ts | breakpointHit": {
    "message": "достигнута точка останова"
  },
  "panels/browser_debugger/DOMBreakpointsSidebarPane.ts | breakpointRemoved": {
    "message": "Точка останова удалена"
  },
  "panels/browser_debugger/DOMBreakpointsSidebarPane.ts | breakpointSet": {
    "message": "Точка останова задана"
  },
  "panels/browser_debugger/DOMBreakpointsSidebarPane.ts | checked": {
    "message": "отмечено"
  },
  "panels/browser_debugger/DOMBreakpointsSidebarPane.ts | domBreakpointsList": {
    "message": "Список точек останова DOM"
  },
  "panels/browser_debugger/DOMBreakpointsSidebarPane.ts | noBreakpoints": {
    "message": "Отсутствуют точки останова."
  },
  "panels/browser_debugger/DOMBreakpointsSidebarPane.ts | nodeRemoved": {
    "message": "Узел удален"
  },
  "panels/browser_debugger/DOMBreakpointsSidebarPane.ts | removeAllDomBreakpoints": {
    "message": "Удалить все точки останова DOM"
  },
  "panels/browser_debugger/DOMBreakpointsSidebarPane.ts | removeBreakpoint": {
    "message": "Удалить точку останова"
  },
  "panels/browser_debugger/DOMBreakpointsSidebarPane.ts | revealDomNodeInElementsPanel": {
    "message": "Показать узел DOM на панели \"Элементы\""
  },
  "panels/browser_debugger/DOMBreakpointsSidebarPane.ts | sBreakpointHit": {
    "message": "Достигнута точка останова {PH1}"
  },
  "panels/browser_debugger/DOMBreakpointsSidebarPane.ts | sS": {
    "message": "{PH1}: {PH2}"
  },
  "panels/browser_debugger/DOMBreakpointsSidebarPane.ts | sSS": {
    "message": "{PH1}: {PH2}, {PH3}"
  },
  "panels/browser_debugger/DOMBreakpointsSidebarPane.ts | subtreeModified": {
    "message": "Поддерево изменено"
  },
  "panels/browser_debugger/DOMBreakpointsSidebarPane.ts | unchecked": {
    "message": "флажок не установлен"
  },
  "panels/browser_debugger/XHRBreakpointsSidebarPane.ts | addBreakpoint": {
    "message": "Добавить точку останова"
  },
  "panels/browser_debugger/XHRBreakpointsSidebarPane.ts | addXhrfetchBreakpoint": {
    "message": "Добавить точку останова XHR/fetch"
  },
  "panels/browser_debugger/XHRBreakpointsSidebarPane.ts | anyXhrOrFetch": {
    "message": "Любой XHR или fetch"
  },
  "panels/browser_debugger/XHRBreakpointsSidebarPane.ts | breakWhenUrlContains": {
    "message": "Прервать, если URL содержит:"
  },
  "panels/browser_debugger/XHRBreakpointsSidebarPane.ts | breakpointHit": {
    "message": "достигнута точка останова"
  },
  "panels/browser_debugger/XHRBreakpointsSidebarPane.ts | noBreakpoints": {
    "message": "Отсутствуют точки останова."
  },
  "panels/browser_debugger/XHRBreakpointsSidebarPane.ts | removeAllBreakpoints": {
    "message": "Удалить все точки останова"
  },
  "panels/browser_debugger/XHRBreakpointsSidebarPane.ts | removeBreakpoint": {
    "message": "Удалить точку останова"
  },
  "panels/browser_debugger/XHRBreakpointsSidebarPane.ts | urlBreakpoint": {
    "message": "Конечная точка URL"
  },
  "panels/browser_debugger/XHRBreakpointsSidebarPane.ts | urlContainsS": {
    "message": "URL содержит \"{PH1}\""
  },
  "panels/browser_debugger/XHRBreakpointsSidebarPane.ts | xhrfetchBreakpoints": {
    "message": "Точки останова для XHR/fetch"
  },
  "panels/browser_debugger/browser_debugger-meta.ts | contentScripts": {
    "message": "Скрипты содержимого"
  },
  "panels/browser_debugger/browser_debugger-meta.ts | cspViolationBreakpoints": {
    "message": "Точки останова при нарушении CSP"
  },
  "panels/browser_debugger/browser_debugger-meta.ts | domBreakpoints": {
    "message": "Точки останова DOM"
  },
  "panels/browser_debugger/browser_debugger-meta.ts | eventListenerBreakpoints": {
    "message": "Точки останова прослушивателя событий"
  },
  "panels/browser_debugger/browser_debugger-meta.ts | globalListeners": {
    "message": "Глобальные прослушиватели"
  },
  "panels/browser_debugger/browser_debugger-meta.ts | overrides": {
    "message": "Переопределения"
  },
  "panels/browser_debugger/browser_debugger-meta.ts | page": {
    "message": "Страница"
  },
  "panels/browser_debugger/browser_debugger-meta.ts | refreshGlobalListeners": {
    "message": "Обновить глобальные прослушиватели"
  },
  "panels/browser_debugger/browser_debugger-meta.ts | showContentScripts": {
    "message": "Показать \"Скрипты содержания\""
  },
  "panels/browser_debugger/browser_debugger-meta.ts | showCspViolationBreakpoints": {
    "message": "Показать точки останова при нарушении CSP"
  },
  "panels/browser_debugger/browser_debugger-meta.ts | showDomBreakpoints": {
    "message": "Показать точки останова DOM"
  },
  "panels/browser_debugger/browser_debugger-meta.ts | showEventListenerBreakpoints": {
    "message": "Показать \"Конечные точки прослушивателя событий\""
  },
  "panels/browser_debugger/browser_debugger-meta.ts | showGlobalListeners": {
    "message": "Показать \"Глобальные прослушиватели\""
  },
  "panels/browser_debugger/browser_debugger-meta.ts | showOverrides": {
    "message": "Показать \"Переопределения\""
  },
  "panels/browser_debugger/browser_debugger-meta.ts | showPage": {
    "message": "Показать страницу"
  },
  "panels/browser_debugger/browser_debugger-meta.ts | showXhrfetchBreakpoints": {
    "message": "Показать точки останова XHR/fetch"
  },
  "panels/browser_debugger/browser_debugger-meta.ts | xhrfetchBreakpoints": {
    "message": "Точки останова для XHR/fetch"
  },
  "panels/changes/ChangesSidebar.ts | sFromSourceMap": {
    "message": "{PH1} (из карты исходного кода)"
  },
  "panels/changes/ChangesView.ts | binaryData": {
    "message": "Двоичные данные"
  },
  "panels/changes/ChangesView.ts | copy": {
    "message": "Копировать"
  },
  "panels/changes/ChangesView.ts | noChanges": {
    "message": "Изменений нет"
  },
  "panels/changes/ChangesView.ts | sDeletions": {
    "message": "{n,plural, =1{# удаление (-)}one{# удаление (-)}few{# удаления (-)}many{# удалений (-)}other{# удаления (-)}}"
  },
  "panels/changes/ChangesView.ts | sInsertions": {
    "message": "{n,plural, =1{# вставка (+)}one{# вставка (+)}few{# вставки (+)}many{# вставок (+)}other{# вставки (+)}}"
  },
  "panels/changes/changes-meta.ts | changes": {
    "message": "Изменения"
  },
  "panels/changes/changes-meta.ts | copyAllChangesFromCurrentFile": {
    "message": "Копировать все изменения из текущего файла"
  },
  "panels/changes/changes-meta.ts | revertAllChangesToCurrentFile": {
    "message": "Отменить все изменения в текущем файле"
  },
  "panels/changes/changes-meta.ts | showChanges": {
    "message": "Показать \"Изменения\""
  },
  "panels/console/ConsoleContextSelector.ts | extension": {
    "message": "Расширение"
  },
  "panels/console/ConsoleContextSelector.ts | javascriptContextNotSelected": {
    "message": "Контекст JavaScript: не выбрано"
  },
  "panels/console/ConsoleContextSelector.ts | javascriptContextS": {
    "message": "Контекст JavaScript: {PH1}"
  },
  "panels/console/ConsolePinPane.ts | evaluateAllowingSideEffects": {
    "message": "Оценить, разрешены побочные эффекты"
  },
  "panels/console/ConsolePinPane.ts | expression": {
    "message": "Выражение"
  },
  "panels/console/ConsolePinPane.ts | liveExpressionEditor": {
    "message": "Редактор меняющегося выражения"
  },
  "panels/console/ConsolePinPane.ts | notAvailable": {
    "message": "недоступно"
  },
  "panels/console/ConsolePinPane.ts | removeAllExpressions": {
    "message": "Удалить все выражения"
  },
  "panels/console/ConsolePinPane.ts | removeBlankExpression": {
    "message": "Удалить пустое выражение"
  },
  "panels/console/ConsolePinPane.ts | removeExpression": {
    "message": "Удалить выражение"
  },
  "panels/console/ConsolePinPane.ts | removeExpressionS": {
    "message": "Удалить выражение: {PH1}"
  },
  "panels/console/ConsolePrompt.ts | allowPasting": {
    "message": "разрешить вставку"
  },
  "panels/console/ConsolePrompt.ts | consolePrompt": {
    "message": "Командная строка консоли"
  },
  "panels/console/ConsolePrompt.ts | selfXssWarning": {
    "message": "Внимание! Не вставляйте в консоль инструментов разработчика код, который вы не понимаете или не проверяли. Так злоумышленники могут украсть у вас данные или получить контроль над вашим компьютером. Чтобы разрешить вставку, введите ''{PH1}'' ниже."
  },
  "panels/console/ConsoleSidebar.ts | dErrors": {
    "message": "{n,plural, =0{Нет ошибок}=1{# ошибка}one{# ошибка}few{# ошибки}many{# ошибок}other{# ошибки}}"
  },
  "panels/console/ConsoleSidebar.ts | dInfo": {
    "message": "{n,plural, =0{Нет инфо}=1{# инфо}one{# инфо}few{# инфо}many{# инфо}other{# инфо}}"
  },
  "panels/console/ConsoleSidebar.ts | dMessages": {
    "message": "{n,plural, =0{Нет сообщений}=1{# сообщение}one{# сообщение}few{# сообщения}many{# сообщений}other{# сообщения}}"
  },
  "panels/console/ConsoleSidebar.ts | dUserMessages": {
    "message": "{n,plural, =0{Нет сообщений пользователей}=1{# сообщение пользователя}one{# сообщение пользователей}few{# сообщения пользователей}many{# сообщений пользователей}other{# сообщения пользователей}}"
  },
  "panels/console/ConsoleSidebar.ts | dVerbose": {
    "message": "{n,plural, =0{Нет детализации}=1{# детализация}one{# детализация}few{# детализации}many{# детализаций}other{# детализации}}"
  },
  "panels/console/ConsoleSidebar.ts | dWarnings": {
    "message": "{n,plural, =0{Нет предупреждений}=1{# предупреждение}one{# предупреждение}few{# предупреждения}many{# предупреждений}other{# предупреждения}}"
  },
  "panels/console/ConsoleSidebar.ts | other": {
    "message": "<other>"
  },
  "panels/console/ConsoleView.ts | allLevels": {
    "message": "Все уровни"
  },
  "panels/console/ConsoleView.ts | autocompleteFromHistory": {
    "message": "Автозаполнение из истории"
  },
  "panels/console/ConsoleView.ts | consoleCleared": {
    "message": "Консоль очищена"
  },
  "panels/console/ConsoleView.ts | consoleSettings": {
    "message": "Настройки консоли"
  },
  "panels/console/ConsoleView.ts | consoleSidebarHidden": {
    "message": "Боковая панель консоли скрыта"
  },
  "panels/console/ConsoleView.ts | consoleSidebarShown": {
    "message": "Боковая панель консоли показана"
  },
  "panels/console/ConsoleView.ts | copyVisibleStyledSelection": {
    "message": "Копировать видимое выделение со стилем"
  },
  "panels/console/ConsoleView.ts | customLevels": {
    "message": "Специальные уровни"
  },
  "panels/console/ConsoleView.ts | default": {
    "message": "По умолчанию"
  },
  "panels/console/ConsoleView.ts | defaultLevels": {
    "message": "Уровни по умолчанию"
  },
  "panels/console/ConsoleView.ts | doNotClearLogOnPageReload": {
    "message": "Не очищать журнал при перезагрузке страницы и переходе между страницами"
  },
  "panels/console/ConsoleView.ts | eagerlyEvaluateTextInThePrompt": {
    "message": "Энергичное вычисление операторов в тексте запроса"
  },
  "panels/console/ConsoleView.ts | egEventdCdnUrlacom": {
    "message": "Например: /eventd/ -cdn url:a.com"
  },
  "panels/console/ConsoleView.ts | errors": {
    "message": "Ошибки"
  },
  "panels/console/ConsoleView.ts | filter": {
    "message": "Фильтр"
  },
  "panels/console/ConsoleView.ts | filteredMessagesInConsole": {
    "message": "Сообщений в консоли: {PH1}"
  },
  "panels/console/ConsoleView.ts | findStringInLogs": {
    "message": "Найти строку в журналах"
  },
  "panels/console/ConsoleView.ts | groupSimilarMessagesInConsole": {
    "message": "Группировать в консоли похожие сообщения"
  },
  "panels/console/ConsoleView.ts | hideAll": {
    "message": "Скрыть все"
  },
  "panels/console/ConsoleView.ts | hideConsoleSidebar": {
    "message": "Скрыть боковую панель консоли"
  },
  "panels/console/ConsoleView.ts | hideMessagesFromS": {
    "message": "Скрыть сообщения от {PH1}"
  },
  "panels/console/ConsoleView.ts | hideNetwork": {
    "message": "Скрыть сеть"
  },
  "panels/console/ConsoleView.ts | info": {
    "message": "Информация"
  },
  "panels/console/ConsoleView.ts | issueToolbarClickToGoToTheIssuesTab": {
    "message": "Нажмите, чтобы перейти на вкладку \"Проблемы\""
  },
  "panels/console/ConsoleView.ts | issueToolbarClickToView": {
    "message": "Посмотреть {issueEnumeration}"
  },
  "panels/console/ConsoleView.ts | issueToolbarTooltipGeneral": {
    "message": "Некоторые проблемы теперь отображаются только на вкладке \"Проблемы\". Сообщения о них больше не появляются в консоли."
  },
  "panels/console/ConsoleView.ts | issuesWithColon": {
    "message": "{n,plural, =0{Нет проблем}=1{# проблема:}one{# проблема:}few{# проблемы:}many{# проблем:}other{# проблемы:}}"
  },
  "panels/console/ConsoleView.ts | logLevelS": {
    "message": "Уровень ведения журнала: {PH1}"
  },
  "panels/console/ConsoleView.ts | logLevels": {
    "message": "Уровни"
  },
  "panels/console/ConsoleView.ts | logXMLHttpRequests": {
    "message": "Регистрировать запросы XMLHttpRequests"
  },
  "panels/console/ConsoleView.ts | onlyShowMessagesFromTheCurrentContext": {
    "message": "Показывать только сообщения из текущего контекста (top, iframe, worker, расширение)"
  },
  "panels/console/ConsoleView.ts | overriddenByFilterSidebar": {
    "message": "Переопределено боковой панелью фильтров"
  },
  "panels/console/ConsoleView.ts | preserveLog": {
    "message": "Сохранять журнал"
  },
  "panels/console/ConsoleView.ts | replayXhr": {
    "message": "Повторить запрос XHR"
  },
  "panels/console/ConsoleView.ts | sHidden": {
    "message": "{n,plural, =1{# скрыто}one{# скрыто}few{# скрыто}many{# скрыто}other{# скрыто}}"
  },
  "panels/console/ConsoleView.ts | sOnly": {
    "message": "Только {PH1}"
  },
  "panels/console/ConsoleView.ts | saveAs": {
    "message": "Сохранить как…"
  },
  "panels/console/ConsoleView.ts | searching": {
    "message": "Поиск…"
  },
  "panels/console/ConsoleView.ts | selectedContextOnly": {
    "message": "Только выбранный контекст"
  },
  "panels/console/ConsoleView.ts | showConsoleSidebar": {
    "message": "Показать боковую панель консоли"
  },
  "panels/console/ConsoleView.ts | showCorsErrorsInConsole": {
    "message": "Показывать ошибки CORS в консоли"
  },
  "panels/console/ConsoleView.ts | treatEvaluationAsUserActivation": {
    "message": "Рассматривать вычисление как активацию пользователя"
  },
  "panels/console/ConsoleView.ts | verbose": {
    "message": "Детализация"
  },
  "panels/console/ConsoleView.ts | warnings": {
    "message": "Предупреждения"
  },
  "panels/console/ConsoleView.ts | writingFile": {
    "message": "Запись в файл…"
  },
  "panels/console/ConsoleViewMessage.ts | Mxx": {
    "message": " M<XX>"
  },
  "panels/console/ConsoleViewMessage.ts | assertionFailed": {
    "message": "Ошибка подтверждения: "
  },
  "panels/console/ConsoleViewMessage.ts | attribute": {
    "message": "<атрибут>"
  },
  "panels/console/ConsoleViewMessage.ts | clearAllMessagesWithS": {
    "message": "Удалить все сообщения, используя {PH1}"
  },
  "panels/console/ConsoleViewMessage.ts | cndBreakpoint": {
    "message": "Условная точка останова"
  },
  "panels/console/ConsoleViewMessage.ts | console": {
    "message": "Консоль"
  },
  "panels/console/ConsoleViewMessage.ts | consoleWasCleared": {
    "message": "Консоль очищена."
  },
  "panels/console/ConsoleViewMessage.ts | consoleclearWasPreventedDueTo": {
    "message": "Команда console.clear() остановлена из-за параметра \"Сохранять журнал\"."
  },
  "panels/console/ConsoleViewMessage.ts | deprecationS": {
    "message": "[Deprecation] {PH1}"
  },
  "panels/console/ConsoleViewMessage.ts | error": {
    "message": "Ошибка"
  },
  "panels/console/ConsoleViewMessage.ts | errorS": {
    "message": "{n,plural, =1{Ошибка, # повтор}one{Ошибка, # повтор}few{Ошибка, # повтора}many{Ошибка, # повторов}other{Ошибка, # повтора}}"
  },
  "panels/console/ConsoleViewMessage.ts | exception": {
    "message": "<exception>"
  },
  "panels/console/ConsoleViewMessage.ts | explainThisError": {
    "message": "Объяснить эту ошибку"
  },
  "panels/console/ConsoleViewMessage.ts | explainThisMessage": {
    "message": "Объяснить это сообщение"
  },
  "panels/console/ConsoleViewMessage.ts | explainThisWarning": {
    "message": "Объяснить это предупреждение"
  },
  "panels/console/ConsoleViewMessage.ts | functionWasResolvedFromBound": {
    "message": "Функция была распознана из привязанной функции"
  },
  "panels/console/ConsoleViewMessage.ts | index": {
    "message": "(индекс)"
  },
  "panels/console/ConsoleViewMessage.ts | interventionS": {
    "message": "[Intervention] {PH1}"
  },
  "panels/console/ConsoleViewMessage.ts | logpoint": {
    "message": "Точка записи"
  },
  "panels/console/ConsoleViewMessage.ts | repeatS": {
    "message": "{n,plural, =1{# повтор}one{# повтор}few{# повтора}many{# повторов}other{# повтора}}"
  },
  "panels/console/ConsoleViewMessage.ts | someEvent": {
    "message": "событие <some>"
  },
  "panels/console/ConsoleViewMessage.ts | stackMessageCollapsed": {
    "message": "Таблица стека свернута."
  },
  "panels/console/ConsoleViewMessage.ts | stackMessageExpanded": {
    "message": "Таблица стека развернута."
  },
  "panels/console/ConsoleViewMessage.ts | thisValueWasEvaluatedUponFirst": {
    "message": "Значение было вычислено при первом развертывании. С тех пор оно могло поменяться."
  },
  "panels/console/ConsoleViewMessage.ts | thisValueWillNotBeCollectedUntil": {
    "message": "Это значение будет получено только после очистки консоли"
  },
  "panels/console/ConsoleViewMessage.ts | tookNms": {
    "message": "заняло <N> мс"
  },
  "panels/console/ConsoleViewMessage.ts | url": {
    "message": "<URL>"
  },
  "panels/console/ConsoleViewMessage.ts | value": {
    "message": "Значение"
  },
  "panels/console/ConsoleViewMessage.ts | violationS": {
    "message": "[Violation] {PH1}"
  },
  "panels/console/ConsoleViewMessage.ts | warning": {
    "message": "Предупреждение"
  },
  "panels/console/ConsoleViewMessage.ts | warningS": {
    "message": "{n,plural, =1{Предупреждение, # повтор}one{Предупреждение, # повтор}few{Предупреждение, # повтора}many{Предупреждение, # повторов}other{Предупреждение, # повтора}}"
  },
  "panels/console/console-meta.ts | autocompleteFromHistory": {
    "message": "Автозаполнение из истории"
  },
  "panels/console/console-meta.ts | autocompleteOnEnter": {
    "message": "Принимать подсказки автозаполнения при нажатии Ввод"
  },
  "panels/console/console-meta.ts | clearConsole": {
    "message": "Очистить консоль"
  },
  "panels/console/console-meta.ts | clearConsoleHistory": {
    "message": "Удалить историю консоли"
  },
  "panels/console/console-meta.ts | collapseConsoleTraceMessagesByDefault": {
    "message": "Не разворачивать сообщения console.trace() по умолчанию"
  },
  "panels/console/console-meta.ts | console": {
    "message": "Консоль"
  },
  "panels/console/console-meta.ts | createLiveExpression": {
    "message": "Создать меняющееся выражение"
  },
  "panels/console/console-meta.ts | doNotAutocompleteFromHistory": {
    "message": "Не разрешать автозаполнение из истории"
  },
  "panels/console/console-meta.ts | doNotAutocompleteOnEnter": {
    "message": "Не принимать подсказки автозаполнения при нажатии Ввод"
  },
  "panels/console/console-meta.ts | doNotEagerlyEvaluateConsole": {
    "message": "Выключить энергичное вычисление текста готовности консоли"
  },
  "panels/console/console-meta.ts | doNotGroupSimilarMessagesIn": {
    "message": "Не группировать схожие сообщения в консоли"
  },
  "panels/console/console-meta.ts | doNotShowCorsErrorsIn": {
    "message": "Не показывать ошибки CORS в консоли"
  },
  "panels/console/console-meta.ts | doNotTreatEvaluationAsUser": {
    "message": "Не рассматривать вычисление как активацию пользователя"
  },
  "panels/console/console-meta.ts | eagerEvaluation": {
    "message": "Энергичное вычисление"
  },
  "panels/console/console-meta.ts | eagerlyEvaluateConsolePromptText": {
    "message": "Включить энергичное вычисление текста готовности консоли"
  },
  "panels/console/console-meta.ts | evaluateTriggersUserActivation": {
    "message": "Рассматривать оценку кода как пользовательское действие"
  },
  "panels/console/console-meta.ts | expandConsoleTraceMessagesByDefault": {
    "message": "Автоматически разворачивать сообщения console.trace()"
  },
  "panels/console/console-meta.ts | groupSimilarMessagesInConsole": {
    "message": "Группировать в консоли похожие сообщения"
  },
  "panels/console/console-meta.ts | hideNetworkMessages": {
    "message": "Скрыть сообщения сети"
  },
  "panels/console/console-meta.ts | hideTimestamps": {
    "message": "Скрыть временные метки"
  },
  "panels/console/console-meta.ts | logXmlhttprequests": {
    "message": "Регистрировать запросы XMLHttpRequests"
  },
  "panels/console/console-meta.ts | onlyShowMessagesFromTheCurrent": {
    "message": "Показывать только сообщения из текущего контекста (top, iframe, worker, расширение)"
  },
  "panels/console/console-meta.ts | selectedContextOnly": {
    "message": "Только выбранный контекст"
  },
  "panels/console/console-meta.ts | showConsole": {
    "message": "Показать консоль"
  },
  "panels/console/console-meta.ts | showCorsErrorsInConsole": {
    "message": "Показывать ошибки CORS в консоли"
  },
  "panels/console/console-meta.ts | showMessagesFromAllContexts": {
    "message": "Показывать сообщения из всех контекстов"
  },
  "panels/console/console-meta.ts | showNetworkMessages": {
    "message": "Показать сетевые сообщения"
  },
  "panels/console/console-meta.ts | showTimestamps": {
    "message": "Показать временные метки"
  },
  "panels/console/console-meta.ts | toggleConsole": {
    "message": "Показать или скрыть консоль"
  },
  "panels/console/console-meta.ts | treatEvaluationAsUserActivation": {
    "message": "Рассматривать вычисление как активацию пользователя"
  },
  "panels/console_counters/WarningErrorCounter.ts | openConsoleToViewS": {
    "message": "Открыть консоль, чтобы посмотреть {PH1}"
  },
  "panels/console_counters/WarningErrorCounter.ts | openIssuesToView": {
    "message": "{n,plural, =1{Открыть панель \"Проблемы\", чтобы посмотреть # проблему:}one{Открыть панель \"Проблемы\", чтобы посмотреть # проблему:}few{Открыть панель \"Проблемы\", чтобы посмотреть # проблемы:}many{Открыть панель \"Проблемы\", чтобы посмотреть # проблем:}other{Открыть панель \"Проблемы\", чтобы посмотреть # проблемы:}}"
  },
  "panels/console_counters/WarningErrorCounter.ts | sErrors": {
    "message": "{n,plural, =1{# ошибка}one{# ошибка}few{# ошибки}many{# ошибок}other{# ошибки}}"
  },
  "panels/console_counters/WarningErrorCounter.ts | sWarnings": {
    "message": "{n,plural, =1{# предупреждение}one{# предупреждение}few{# предупреждения}many{# предупреждений}other{# предупреждения}}"
  },
  "panels/coverage/CoverageListView.ts | codeCoverage": {
    "message": "Покрытие кода"
  },
  "panels/coverage/CoverageListView.ts | css": {
    "message": "CSS"
  },
  "panels/coverage/CoverageListView.ts | jsCoverageWithPerBlock": {
    "message": "Детализация покрытия JavaScript на уровне блока. Как только блок кода выполнен, он считается охваченным."
  },
  "panels/coverage/CoverageListView.ts | jsCoverageWithPerFunction": {
    "message": "Покрытие JavaScript с детализацией на уровне функции (когда функция выполнена, она считается охваченной)"
  },
  "panels/coverage/CoverageListView.ts | jsPerBlock": {
    "message": "JS (на каждый блок)"
  },
  "panels/coverage/CoverageListView.ts | jsPerFunction": {
    "message": "JavaScript (по функциям)"
  },
  "panels/coverage/CoverageListView.ts | sBytes": {
    "message": "{n,plural, =1{# байт}one{# байт}few{# байта}many{# байт}other{# байта}}"
  },
  "panels/coverage/CoverageListView.ts | sBytesS": {
    "message": "{n,plural, =1{# байт, {percentage}}one{# байт, {percentage}}few{# байта, {percentage}}many{# байт, {percentage}}other{# байта, {percentage}}}"
  },
  "panels/coverage/CoverageListView.ts | sBytesSBelongToBlocksOf": {
    "message": "{PH1} Б ({PH2}) – размер блоков кода JavaScript, которые (ещё) не выполнялись"
  },
  "panels/coverage/CoverageListView.ts | sBytesSBelongToBlocksOfJavascript": {
    "message": "{PH1} Б ({PH2}) – размер блоков кода JavaScript, которые выполнялись хотя бы один раз."
  },
  "panels/coverage/CoverageListView.ts | sBytesSBelongToFunctionsThatHave": {
    "message": "{PH1} Б ({PH2}) – код функций, которые (ещё) не выполнялись"
  },
  "panels/coverage/CoverageListView.ts | sBytesSBelongToFunctionsThatHaveExecuted": {
    "message": "{PH1} Б ({PH2}) – код функций, которые выполнялись хотя бы один раз."
  },
  "panels/coverage/CoverageListView.ts | sOfFileUnusedSOfFileUsed": {
    "message": "Не использовано: {PH1} % файла, использовано: {PH2} % файла"
  },
  "panels/coverage/CoverageListView.ts | totalBytes": {
    "message": "Всего байтов"
  },
  "panels/coverage/CoverageListView.ts | type": {
    "message": "Тип"
  },
  "panels/coverage/CoverageListView.ts | unusedBytes": {
    "message": "Неиспользуемые байты"
  },
  "panels/coverage/CoverageListView.ts | url": {
    "message": "URL"
  },
  "panels/coverage/CoverageListView.ts | usageVisualization": {
    "message": "Визуализация использования"
  },
  "panels/coverage/CoverageView.ts | activationNoCapture": {
    "message": "Не удалось получить информацию об используемом коде, так как страница была предварительно отрисована в фоновом режиме."
  },
  "panels/coverage/CoverageView.ts | all": {
    "message": "Все"
  },
  "panels/coverage/CoverageView.ts | bfcacheNoCapture": {
    "message": "Не удалось получить информацию об используемом коде, так как страница была получена из возвратного кеша."
  },
  "panels/coverage/CoverageView.ts | chooseCoverageGranularityPer": {
    "message": "Выберите гранулярность покрытия: вариант \"по функциям\" имеет низкое ресурсопотребление, \"по блокам\" – значительное ресурсопотребление"
  },
  "panels/coverage/CoverageView.ts | clickTheRecordButtonSToStart": {
    "message": "Чтобы записать покрытие, нажмите кнопку записи {PH1}."
  },
  "panels/coverage/CoverageView.ts | clickTheReloadButtonSToReloadAnd": {
    "message": "Нажмите на значок {PH1}, чтобы перезагрузить страницу и начать запись области захвата."
  },
  "panels/coverage/CoverageView.ts | contentScripts": {
    "message": "Скрипты содержимого"
  },
  "panels/coverage/CoverageView.ts | css": {
    "message": "CSS"
  },
  "panels/coverage/CoverageView.ts | filterCoverageByType": {
    "message": "Фильтровать покрытие по типу"
  },
  "panels/coverage/CoverageView.ts | filteredSTotalS": {
    "message": "Отфильтровано: {PH1}  Всего: {PH2}"
  },
  "panels/coverage/CoverageView.ts | includeExtensionContentScripts": {
    "message": "Включить скрипты контента в расширении"
  },
  "panels/coverage/CoverageView.ts | javascript": {
    "message": "JavaScript"
  },
  "panels/coverage/CoverageView.ts | perBlock": {
    "message": "По блокам"
  },
  "panels/coverage/CoverageView.ts | perFunction": {
    "message": "По функциям"
  },
  "panels/coverage/CoverageView.ts | reloadPrompt": {
    "message": "Чтобы обновить страницу и получить информацию об используемом коде, нажмите кнопку перезагрузки {PH1}."
  },
  "panels/coverage/CoverageView.ts | sOfSSUsedSoFarSUnused": {
    "message": "Использовано: {PH1} из {PH2} ({PH3} %), не использовано: {PH4}."
  },
  "panels/coverage/CoverageView.ts | urlFilter": {
    "message": "Фильтр URL"
  },
  "panels/coverage/coverage-meta.ts | clearCoverage": {
    "message": "Удалить данные"
  },
  "panels/coverage/coverage-meta.ts | coverage": {
    "message": "Сфера действия"
  },
  "panels/coverage/coverage-meta.ts | exportCoverage": {
    "message": "Экспортировать данные"
  },
  "panels/coverage/coverage-meta.ts | instrumentCoverage": {
    "message": "Область действия инструмента"
  },
  "panels/coverage/coverage-meta.ts | showCoverage": {
    "message": "Показать \"Область действия\""
  },
  "panels/coverage/coverage-meta.ts | startInstrumentingCoverageAnd": {
    "message": "Начать оценку охвата инструментирования и перезагрузить страницу"
  },
  "panels/coverage/coverage-meta.ts | stopInstrumentingCoverageAndShow": {
    "message": "Остановить измерение производительности и показать результаты"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | aa": {
    "message": "AA"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | aaa": {
    "message": "AAA"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | apca": {
    "message": "APCA"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | attributeSelectors": {
    "message": "Селекторы атрибутов"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | backgroundColorsS": {
    "message": "Цвета фона: {PH1}"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | borderColorsS": {
    "message": "Цвета границы: {PH1}"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | classSelectors": {
    "message": "Селекторы класса"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | colors": {
    "message": "Цвета"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | contrastIssues": {
    "message": "Проблемы контраста"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | contrastIssuesS": {
    "message": "Проблемы настроек контраста: {PH1}"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | contrastRatio": {
    "message": "Коэффициент контрастности"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | cssOverviewElements": {
    "message": "Элементы обзора CSS"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | declaration": {
    "message": "Объявление"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | element": {
    "message": "Элемент"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | elements": {
    "message": "Элементы"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | externalStylesheets": {
    "message": "Внешняя таблица стилей"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | fillColorsS": {
    "message": "Цвета заливки: {PH1}"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | fontInfo": {
    "message": "Информация о шрифте"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | idSelectors": {
    "message": "Селекторы идентификатора"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | inlineStyleElements": {
    "message": "Встроенные элементы стилей"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | mediaQueries": {
    "message": "Запросы медиа"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | nOccurrences": {
    "message": "{n,plural, =1{# вхождение}one{# вхождение}few{# вхождения}many{# вхождений}other{# вхождения}}"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | nonsimpleSelectors": {
    "message": "Непростые селекторы"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | overviewSummary": {
    "message": "Сводные данные обзора"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | showElement": {
    "message": "Показать элемент"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | source": {
    "message": "Источник"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | styleRules": {
    "message": "Правила стилей"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | textColorSOverSBackgroundResults": {
    "message": "Цвет текста {PH1} на фоне {PH2} приводит к низкой контрастности для нескольких элементов ({PH3})"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | textColorsS": {
    "message": "Цвет текста: {PH1}"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | thereAreNoFonts": {
    "message": "Шрифтов нет."
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | thereAreNoMediaQueries": {
    "message": "Нет запросов медиа."
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | thereAreNoUnusedDeclarations": {
    "message": "Нет неиспользованных объявлений."
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | typeSelectors": {
    "message": "Селекторы типа"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | universalSelectors": {
    "message": "Универсальные селекторы"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | unusedDeclarations": {
    "message": "Неиспользуемые объявления"
  },
  "panels/css_overview/CSSOverviewProcessingView.ts | cancel": {
    "message": "Отмена"
  },
  "panels/css_overview/CSSOverviewSidebarPanel.ts | clearOverview": {
    "message": "Удалить обзор"
  },
  "panels/css_overview/CSSOverviewSidebarPanel.ts | cssOverviewPanelSidebar": {
    "message": "Боковая панель \"Обзор CSS\""
  },
  "panels/css_overview/CSSOverviewUnusedDeclarations.ts | bottomAppliedToAStatically": {
    "message": "Свойство Bottom применено к статически размещенному элементу."
  },
  "panels/css_overview/CSSOverviewUnusedDeclarations.ts | heightAppliedToAnInlineElement": {
    "message": "Атрибут \"Height\" применен к встроенному элементу"
  },
  "panels/css_overview/CSSOverviewUnusedDeclarations.ts | leftAppliedToAStatically": {
    "message": "Свойство Left применено к статически размещенному элементу."
  },
  "panels/css_overview/CSSOverviewUnusedDeclarations.ts | rightAppliedToAStatically": {
    "message": "Свойство Right применено к статически размещенному элементу."
  },
  "panels/css_overview/CSSOverviewUnusedDeclarations.ts | topAppliedToAStatically": {
    "message": "Свойство Top применено к статически размещенному элементу."
  },
  "panels/css_overview/CSSOverviewUnusedDeclarations.ts | verticalAlignmentAppliedTo": {
    "message": "Вертикальное выравнивание применено к элементу, который не отвечает ни одному из этих условий: inline, table-cell."
  },
  "panels/css_overview/CSSOverviewUnusedDeclarations.ts | widthAppliedToAnInlineElement": {
    "message": "Атрибут Width применен к встроенному элементу"
  },
  "panels/css_overview/components/CSSOverviewStartView.ts | captureOverview": {
    "message": "Обзор съемки"
  },
  "panels/css_overview/components/CSSOverviewStartView.ts | capturePageCSSOverview": {
    "message": "Получение общих сведений о таблицах CSS страницы."
  },
  "panels/css_overview/components/CSSOverviewStartView.ts | identifyCSSImprovements": {
    "message": "Определение возможностей для улучшения CSS"
  },
  "panels/css_overview/components/CSSOverviewStartView.ts | identifyCSSImprovementsWithExampleIssues": {
    "message": "Определение возможностей улучшения CSS (например, проблем с контрастностью, неиспользуемых объявлений, несоответствий цветов или шрифтов)."
  },
  "panels/css_overview/components/CSSOverviewStartView.ts | locateAffectedElements": {
    "message": "Поиск затрагиваемых объектов на панели элементов."
  },
  "panels/css_overview/components/CSSOverviewStartView.ts | quickStartWithCSSOverview": {
    "message": "Краткое руководство: начните пользоваться новой панелью \"Обзор CSS\""
  },
  "panels/css_overview/css_overview-meta.ts | cssOverview": {
    "message": "Обзор CSS"
  },
  "panels/css_overview/css_overview-meta.ts | showCssOverview": {
    "message": "Обзор CSS"
  },
  "panels/developer_resources/DeveloperResourcesListView.ts | copyInitiatorUrl": {
    "message": "Копировать инициатор URL-запросов"
  },
  "panels/developer_resources/DeveloperResourcesListView.ts | copyUrl": {
    "message": "Скопировать URL"
  },
  "panels/developer_resources/DeveloperResourcesListView.ts | developerResources": {
    "message": "Ресурсы для разработчиков"
  },
  "panels/developer_resources/DeveloperResourcesListView.ts | error": {
    "message": "Ошибка"
  },
  "panels/developer_resources/DeveloperResourcesListView.ts | failure": {
    "message": "ошибка"
  },
  "panels/developer_resources/DeveloperResourcesListView.ts | initiator": {
    "message": "Инициатор"
  },
  "panels/developer_resources/DeveloperResourcesListView.ts | pending": {
    "message": "ожидание"
  },
  "panels/developer_resources/DeveloperResourcesListView.ts | sBytes": {
    "message": "{n,plural, =1{# байт}one{# байт}few{# байта}many{# байт}other{# байта}}"
  },
  "panels/developer_resources/DeveloperResourcesListView.ts | status": {
    "message": "Статус"
  },
  "panels/developer_resources/DeveloperResourcesListView.ts | success": {
    "message": "готово"
  },
  "panels/developer_resources/DeveloperResourcesListView.ts | totalBytes": {
    "message": "Всего байтов"
  },
  "panels/developer_resources/DeveloperResourcesListView.ts | url": {
    "message": "URL"
  },
  "panels/developer_resources/DeveloperResourcesView.ts | enableLoadingThroughTarget": {
    "message": "Загружать через сайт"
  },
  "panels/developer_resources/DeveloperResourcesView.ts | enterTextToSearchTheUrlAndError": {
    "message": "Введите текст, чтобы искать по столбцам \"URL\" и \"Ошибка\""
  },
  "panels/developer_resources/DeveloperResourcesView.ts | loadHttpsDeveloperResources": {
    "message": "Загружать ресурсы HTTP(S) для разработчиков через просматриваемый сайт, а не через инструменты разработчика"
  },
  "panels/developer_resources/DeveloperResourcesView.ts | resources": {
    "message": "{n,plural, =1{# ресурс}one{# ресурс}few{# ресурса}many{# ресурсов}other{# ресурса}}"
  },
  "panels/developer_resources/DeveloperResourcesView.ts | resourcesCurrentlyLoading": {
    "message": "Ресурсов: {PH1}, загружается: {PH2}"
  },
  "panels/developer_resources/developer_resources-meta.ts | developerResources": {
    "message": "Ресурсы для разработчиков"
  },
  "panels/developer_resources/developer_resources-meta.ts | showDeveloperResources": {
    "message": "Показать панель \"Ресурсы для разработчиков\""
  },
  "panels/elements/CSSRuleValidator.ts | flexGridContainerPropertyRuleFix": {
    "message": "Попробуйте установить свойство {PROPERTY_NAME} для элемента-контейнера или используйте {ALTERNATIVE_PROPERTY_NAME}."
  },
  "panels/elements/CSSRuleValidator.ts | flexGridContainerPropertyRuleReason": {
    "message": "Это элемент {CONTAINER_DISPLAY_NAME}, то есть дочерний элемент контейнера {CONTAINER_DISPLAY_NAME}, однако свойство {PROPERTY_NAME} применяется только к контейнерам."
  },
  "panels/elements/CSSRuleValidator.ts | fontVariationSettingsWarning": {
    "message": "Значение настройки {PH1} {PH2} превышает допустимый диапазон [{PH3}–{PH4}] для семейства шрифтов {PH5}."
  },
  "panels/elements/CSSRuleValidator.ts | ruleViolatedByParentElementRuleFix": {
    "message": "Попробуйте изменить свойство родительского элемента с {EXISTING_PARENT_ELEMENT_RULE} на {TARGET_PARENT_ELEMENT_RULE}."
  },
  "panels/elements/CSSRuleValidator.ts | ruleViolatedByParentElementRuleReason": {
    "message": "Свойство {REASON_PROPERTY_DECLARATION_CODE} родительского элемента препятствует работе свойства {AFFECTED_PROPERTY_DECLARATION_CODE}."
  },
  "panels/elements/CSSRuleValidator.ts | ruleViolatedBySameElementRuleChangeFlexOrGrid": {
    "message": "Чтобы преобразовать этот элемент в контейнер, попробуйте добавить {DISPLAY_GRID_RULE} или {DISPLAY_FLEX_RULE}."
  },
  "panels/elements/CSSRuleValidator.ts | ruleViolatedBySameElementRuleChangeSuggestion": {
    "message": "Попробуйте изменить свойство {EXISTING_PROPERTY_DECLARATION} на {TARGET_PROPERTY_DECLARATION}."
  },
  "panels/elements/CSSRuleValidator.ts | ruleViolatedBySameElementRuleFix": {
    "message": "Попробуйте установить для свойства {PROPERTY_NAME} значение, отличное от {PROPERTY_VALUE}."
  },
  "panels/elements/CSSRuleValidator.ts | ruleViolatedBySameElementRuleReason": {
    "message": "Свойство {REASON_PROPERTY_DECLARATION_CODE} препятствует работе свойства {AFFECTED_PROPERTY_DECLARATION_CODE}."
  },
  "panels/elements/ClassesPaneWidget.ts | addNewClass": {
    "message": "Добавить класс"
  },
  "panels/elements/ClassesPaneWidget.ts | classSAdded": {
    "message": "Добавлен класс {PH1}"
  },
  "panels/elements/ClassesPaneWidget.ts | classesSAdded": {
    "message": "Добавлены классы {PH1}"
  },
  "panels/elements/ClassesPaneWidget.ts | elementClasses": {
    "message": "Классы элемента"
  },
  "panels/elements/ColorSwatchPopoverIcon.ts | openCubicBezierEditor": {
    "message": "Открыть редактор кривой Безье"
  },
  "panels/elements/ColorSwatchPopoverIcon.ts | openShadowEditor": {
    "message": "Открыть редактор теней"
  },
  "panels/elements/ComputedStyleWidget.ts | filter": {
    "message": "Фильтровать"
  },
  "panels/elements/ComputedStyleWidget.ts | filterComputedStyles": {
    "message": "Фильтровать вычисленные стили"
  },
  "panels/elements/ComputedStyleWidget.ts | group": {
    "message": "Группа"
  },
  "panels/elements/ComputedStyleWidget.ts | navigateToSelectorSource": {
    "message": "Перейти к исходному коду селектора"
  },
  "panels/elements/ComputedStyleWidget.ts | navigateToStyle": {
    "message": "Перейти к стилю"
  },
  "panels/elements/ComputedStyleWidget.ts | noMatchingProperty": {
    "message": "Совпадающие свойства не найдены."
  },
  "panels/elements/ComputedStyleWidget.ts | showAll": {
    "message": "Показать все"
  },
  "panels/elements/DOMLinkifier.ts | node": {
    "message": "<узел>"
  },
  "panels/elements/ElementStatePaneWidget.ts | forceElementState": {
    "message": "Установить состояние элемента"
  },
  "panels/elements/ElementStatePaneWidget.ts | toggleElementState": {
    "message": "Показать или скрыть состояние элемента"
  },
  "panels/elements/ElementsPanel.ts | computed": {
    "message": "Вычисленные"
  },
  "panels/elements/ElementsPanel.ts | computedStylesHidden": {
    "message": "Боковая панель вычисленных стилей скрыта"
  },
  "panels/elements/ElementsPanel.ts | computedStylesShown": {
    "message": "Боковая панель вычисленных стилей показана"
  },
  "panels/elements/ElementsPanel.ts | domTreeExplorer": {
    "message": "Обозреватель дерева DOM"
  },
  "panels/elements/ElementsPanel.ts | elementStateS": {
    "message": "Состояние элемента: {PH1}"
  },
  "panels/elements/ElementsPanel.ts | findByStringSelectorOrXpath": {
    "message": "Найти по строке, селектору или XPath"
  },
  "panels/elements/ElementsPanel.ts | hideComputedStylesSidebar": {
    "message": "Скрыть боковую панель вычисленных стилей"
  },
  "panels/elements/ElementsPanel.ts | nodeCannotBeFoundInTheCurrent": {
    "message": "Узел не найден на текущей странице."
  },
  "panels/elements/ElementsPanel.ts | revealInElementsPanel": {
    "message": "Открыть на панели \"Элементы\""
  },
  "panels/elements/ElementsPanel.ts | showComputedStylesSidebar": {
    "message": "Показать боковую панель вычисленных стилей"
  },
  "panels/elements/ElementsPanel.ts | sidePanelContent": {
    "message": "Содержимое боковой панели"
  },
  "panels/elements/ElementsPanel.ts | sidePanelToolbar": {
    "message": "Боковая панель инструментов"
  },
  "panels/elements/ElementsPanel.ts | styles": {
    "message": "Стили"
  },
  "panels/elements/ElementsPanel.ts | switchToAccessibilityTreeView": {
    "message": "Переключиться на дерево доступности"
  },
  "panels/elements/ElementsPanel.ts | switchToDomTreeView": {
    "message": "Переключиться на дерево DOM"
  },
  "panels/elements/ElementsPanel.ts | theDeferredDomNodeCouldNotBe": {
    "message": "Отложенный DOM-узел не удалось распознать в допустимом узле."
  },
  "panels/elements/ElementsPanel.ts | theRemoteObjectCouldNotBe": {
    "message": "Не удалось преобразовать удаленный объект в допустимый узел."
  },
  "panels/elements/ElementsTreeElement.ts | addAttribute": {
    "message": "Добавить атрибут"
  },
  "panels/elements/ElementsTreeElement.ts | captureNodeScreenshot": {
    "message": "Сделать скриншот узла"
  },
  "panels/elements/ElementsTreeElement.ts | children": {
    "message": "Дочерние:"
  },
  "panels/elements/ElementsTreeElement.ts | collapseChildren": {
    "message": "Свернуть дочерние элементы"
  },
  "panels/elements/ElementsTreeElement.ts | copy": {
    "message": "Копировать"
  },
  "panels/elements/ElementsTreeElement.ts | copyElement": {
    "message": "Копировать элемент"
  },
  "panels/elements/ElementsTreeElement.ts | copyFullXpath": {
    "message": "Копировать полную строку XPath"
  },
  "panels/elements/ElementsTreeElement.ts | copyJsPath": {
    "message": "Копировать путь JavaScript"
  },
  "panels/elements/ElementsTreeElement.ts | copyOuterhtml": {
    "message": "Копировать outerHTML"
  },
  "panels/elements/ElementsTreeElement.ts | copySelector": {
    "message": "Копировать selector"
  },
  "panels/elements/ElementsTreeElement.ts | copyStyles": {
    "message": "Копировать стили"
  },
  "panels/elements/ElementsTreeElement.ts | copyXpath": {
    "message": "Копировать XPath"
  },
  "panels/elements/ElementsTreeElement.ts | cut": {
    "message": "Вырезать"
  },
  "panels/elements/ElementsTreeElement.ts | deleteElement": {
    "message": "Удалить элемент"
  },
  "panels/elements/ElementsTreeElement.ts | disableFlexMode": {
    "message": "Отключить flex-режим"
  },
  "panels/elements/ElementsTreeElement.ts | disableGridMode": {
    "message": "Отключить режим сетки"
  },
  "panels/elements/ElementsTreeElement.ts | disableScrollSnap": {
    "message": "Отключить оверлей с прокруткой и привязкой"
  },
  "panels/elements/ElementsTreeElement.ts | duplicateElement": {
    "message": "Повторяющийся элемент"
  },
  "panels/elements/ElementsTreeElement.ts | editAsHtml": {
    "message": "Редактировать как HTML"
  },
  "panels/elements/ElementsTreeElement.ts | editAttribute": {
    "message": "Редактировать атрибут"
  },
  "panels/elements/ElementsTreeElement.ts | editText": {
    "message": "Редактировать текст"
  },
  "panels/elements/ElementsTreeElement.ts | enableFlexMode": {
    "message": "Включить flex-режим"
  },
  "panels/elements/ElementsTreeElement.ts | enableGridMode": {
    "message": "Включить режим сетки"
  },
  "panels/elements/ElementsTreeElement.ts | enableScrollSnap": {
    "message": "Включить оверлей с прокруткой и привязкой"
  },
  "panels/elements/ElementsTreeElement.ts | expandRecursively": {
    "message": "Рекурсивное расширение"
  },
  "panels/elements/ElementsTreeElement.ts | focus": {
    "message": "Перейти"
  },
  "panels/elements/ElementsTreeElement.ts | forceState": {
    "message": "Установить состояние"
  },
  "panels/elements/ElementsTreeElement.ts | hideElement": {
    "message": "Скрыть элемент"
  },
  "panels/elements/ElementsTreeElement.ts | openMediaPanel": {
    "message": "Перейти к Media Panel"
  },
  "panels/elements/ElementsTreeElement.ts | paste": {
    "message": "Вставить"
  },
  "panels/elements/ElementsTreeElement.ts | scrollIntoView": {
    "message": "Прокрутить в видимую область"
  },
  "panels/elements/ElementsTreeElement.ts | showFrameDetails": {
    "message": "Показать сведения: iframe"
  },
  "panels/elements/ElementsTreeElement.ts | thisFrameWasIdentifiedAsAnAd": {
    "message": "Этот фрейм определен как фрейм объявлений"
  },
  "panels/elements/ElementsTreeElement.ts | useSInTheConsoleToReferToThis": {
    "message": "Используйте параметр {PH1} в консоли, чтобы обратиться к этому элементу"
  },
  "panels/elements/ElementsTreeElement.ts | valueIsTooLargeToEdit": {
    "message": "<слишком большое значение для редактирования>"
  },
  "panels/elements/ElementsTreeOutline.ts | adornerSettings": {
    "message": "Настройки пометок"
  },
  "panels/elements/ElementsTreeOutline.ts | pageDom": {
    "message": "DOM страницы"
  },
  "panels/elements/ElementsTreeOutline.ts | reveal": {
    "message": "показать"
  },
  "panels/elements/ElementsTreeOutline.ts | showAllNodesDMore": {
    "message": "Показать все узлы (ещё {PH1})"
  },
  "panels/elements/ElementsTreeOutline.ts | storeAsGlobalVariable": {
    "message": "Сохранить как глобальную переменную"
  },
  "panels/elements/EventListenersWidget.ts | all": {
    "message": "Все"
  },
  "panels/elements/EventListenersWidget.ts | ancestors": {
    "message": "Предки"
  },
  "panels/elements/EventListenersWidget.ts | blocking": {
    "message": "Блокировка"
  },
  "panels/elements/EventListenersWidget.ts | eventListenersCategory": {
    "message": "Категория прослушивателей событий"
  },
  "panels/elements/EventListenersWidget.ts | frameworkListeners": {
    "message": "Прослушиватели Framework"
  },
  "panels/elements/EventListenersWidget.ts | passive": {
    "message": "Пассивен"
  },
  "panels/elements/EventListenersWidget.ts | resolveEventListenersBoundWith": {
    "message": "Распознавать прослушиватели событий, связанные с фреймворком"
  },
  "panels/elements/EventListenersWidget.ts | showListenersOnTheAncestors": {
    "message": "Показать прослушиватели предков"
  },
  "panels/elements/LayersWidget.ts | cssLayersTitle": {
    "message": "Слои CSS"
  },
  "panels/elements/LayersWidget.ts | toggleCSSLayers": {
    "message": "Показать/скрыть слои CSS"
  },
  "panels/elements/MarkerDecorator.ts | domBreakpoint": {
    "message": "Точка останова DOM"
  },
  "panels/elements/MarkerDecorator.ts | elementIsHidden": {
    "message": "Элемент скрыт"
  },
  "panels/elements/NodeStackTraceWidget.ts | noStackTraceAvailable": {
    "message": "Нет доступных трассировок стека."
  },
  "panels/elements/PlatformFontsWidget.ts | dGlyphs": {
    "message": "{n,plural, =1{(# глиф)}one{(# глиф)}few{(# глифа)}many{(# глифов)}other{(# глифа)}}"
  },
  "panels/elements/PlatformFontsWidget.ts | familyName": {
    "message": "Название семейства"
  },
  "panels/elements/PlatformFontsWidget.ts | fontOrigin": {
    "message": "Источник шрифта"
  },
  "panels/elements/PlatformFontsWidget.ts | localFile": {
    "message": "Локальный файл"
  },
  "panels/elements/PlatformFontsWidget.ts | networkResource": {
    "message": "Сетевой ресурс"
  },
  "panels/elements/PlatformFontsWidget.ts | postScriptName": {
    "message": "Название PostScript"
  },
  "panels/elements/PlatformFontsWidget.ts | renderedFonts": {
    "message": "Отображаемые шрифты"
  },
  "panels/elements/PropertiesWidget.ts | filter": {
    "message": "Фильтр"
  },
  "panels/elements/PropertiesWidget.ts | filterProperties": {
    "message": "Фильтр свойств"
  },
  "panels/elements/PropertiesWidget.ts | noMatchingProperty": {
    "message": "Совпадающие свойства не найдены."
  },
  "panels/elements/PropertiesWidget.ts | showAll": {
    "message": "Показать все"
  },
  "panels/elements/PropertiesWidget.ts | showAllTooltip": {
    "message": "Если этот флажок снят, свойства с пустыми или неопределенными значениями показаны не будут"
  },
  "panels/elements/StylePropertiesSection.ts | constructedStylesheet": {
    "message": "сконструированная таблица стилей"
  },
  "panels/elements/StylePropertiesSection.ts | copyAllCSSChanges": {
    "message": "Копировать все изменения кода CSS"
  },
  "panels/elements/StylePropertiesSection.ts | copyAllDeclarations": {
    "message": "Копировать все объявления"
  },
  "panels/elements/StylePropertiesSection.ts | copyRule": {
    "message": "Копировать правило"
  },
  "panels/elements/StylePropertiesSection.ts | copySelector": {
    "message": "Копировать selector"
  },
  "panels/elements/StylePropertiesSection.ts | cssSelector": {
    "message": "Селектор CSS"
  },
  "panels/elements/StylePropertiesSection.ts | injectedStylesheet": {
    "message": "внедренная таблица стилей"
  },
  "panels/elements/StylePropertiesSection.ts | insertStyleRuleBelow": {
    "message": "Вставить правило стиля ниже"
  },
  "panels/elements/StylePropertiesSection.ts | sattributesStyle": {
    "message": "{PH1}[Стиль атрибутов]"
  },
  "panels/elements/StylePropertiesSection.ts | showAllPropertiesSMore": {
    "message": "Показать все свойства (ещё {PH1})"
  },
  "panels/elements/StylePropertiesSection.ts | styleAttribute": {
    "message": "Атрибут style"
  },
  "panels/elements/StylePropertiesSection.ts | userAgentStylesheet": {
    "message": "таблица стилей агента пользователя"
  },
  "panels/elements/StylePropertiesSection.ts | viaInspector": {
    "message": "через инспектор"
  },
  "panels/elements/StylePropertyTreeElement.ts | copyAllCSSChanges": {
    "message": "Копировать все изменения кода CSS"
  },
  "panels/elements/StylePropertyTreeElement.ts | copyAllCssDeclarationsAsJs": {
    "message": "Копировать все объявления как JS"
  },
  "panels/elements/StylePropertyTreeElement.ts | copyAllDeclarations": {
    "message": "Копировать все объявления"
  },
  "panels/elements/StylePropertyTreeElement.ts | copyCssDeclarationAsJs": {
    "message": "Копировать объявление как JS"
  },
  "panels/elements/StylePropertyTreeElement.ts | copyDeclaration": {
    "message": "Копировать объявление"
  },
  "panels/elements/StylePropertyTreeElement.ts | copyProperty": {
    "message": "Копировать свойство"
  },
  "panels/elements/StylePropertyTreeElement.ts | copyRule": {
    "message": "Копировать правило"
  },
  "panels/elements/StylePropertyTreeElement.ts | copyValue": {
    "message": "Копировать значение"
  },
  "panels/elements/StylePropertyTreeElement.ts | flexboxEditorButton": {
    "message": "Открыть редактор flexbox"
  },
  "panels/elements/StylePropertyTreeElement.ts | gridEditorButton": {
    "message": "Открыть редактор grid"
  },
  "panels/elements/StylePropertyTreeElement.ts | openColorPickerS": {
    "message": "Открыть палитру. {PH1}"
  },
  "panels/elements/StylePropertyTreeElement.ts | revealInSourcesPanel": {
    "message": "Открыть на панели \"Источники\""
  },
  "panels/elements/StylePropertyTreeElement.ts | shiftClickToChangeColorFormat": {
    "message": "Чтобы изменить формат цвета, щелкните мышью при нажатой клавише Shift."
  },
  "panels/elements/StylePropertyTreeElement.ts | togglePropertyAndContinueEditing": {
    "message": "Переключить свойство и продолжить редактировать"
  },
  "panels/elements/StylePropertyTreeElement.ts | viewComputedValue": {
    "message": "Показать вычисленное значение"
  },
  "panels/elements/StylesSidebarPane.ts | automaticDarkMode": {
    "message": "Автоматическая тёмная тема"
  },
  "panels/elements/StylesSidebarPane.ts | clickToRevealLayer": {
    "message": "Показать слой в дереве слоев"
  },
  "panels/elements/StylesSidebarPane.ts | copiedToClipboard": {
    "message": "Скопировано в буфер обмена"
  },
  "panels/elements/StylesSidebarPane.ts | copyAllCSSChanges": {
    "message": "Копировать изменения кода CSS"
  },
  "panels/elements/StylesSidebarPane.ts | cssPropertyName": {
    "message": "Название свойства CSS: {PH1}"
  },
  "panels/elements/StylesSidebarPane.ts | cssPropertyValue": {
    "message": "Значение свойства CSS: {PH1}"
  },
  "panels/elements/StylesSidebarPane.ts | filter": {
    "message": "Фильтр"
  },
  "panels/elements/StylesSidebarPane.ts | filterStyles": {
    "message": "Фильтр стилей"
  },
  "panels/elements/StylesSidebarPane.ts | incrementdecrementWithMousewheelHundred": {
    "message": "Увеличение и уменьшение с помощью колеса мыши или клавиш \"Вверх\" и \"Вниз\". {PH1} – ±100, Shift – ±10, Alt – ±0,1."
  },
  "panels/elements/StylesSidebarPane.ts | incrementdecrementWithMousewheelOne": {
    "message": "Увеличение и уменьшение с помощью колеса мыши или клавиш \"Вверх\" и \"Вниз\". {PH1} – R ± 1, Shift – G ± 1, Alt – B ± 1."
  },
  "panels/elements/StylesSidebarPane.ts | inheritedFromSPseudoOf": {
    "message": "Унаследовано от псевдоэлемента ::{PH1} "
  },
  "panels/elements/StylesSidebarPane.ts | inheritedFroms": {
    "message": "Унаследовано от "
  },
  "panels/elements/StylesSidebarPane.ts | invalidPropertyValue": {
    "message": "Недопустимое значение свойства"
  },
  "panels/elements/StylesSidebarPane.ts | invalidString": {
    "message": "{PH1} (имя свойства: {PH2}, значение свойства: {PH3})"
  },
  "panels/elements/StylesSidebarPane.ts | layer": {
    "message": "Слой"
  },
  "panels/elements/StylesSidebarPane.ts | noMatchingSelectorOrStyle": {
    "message": "Нет подходящего селектора или стиля."
  },
  "panels/elements/StylesSidebarPane.ts | pseudoSElement": {
    "message": "Псевдоэлемент ::{PH1}"
  },
  "panels/elements/StylesSidebarPane.ts | specificity": {
    "message": "Специфичность: {PH1}"
  },
  "panels/elements/StylesSidebarPane.ts | toggleRenderingEmulations": {
    "message": "Включить или отключить распространенные эмуляции отрисовки"
  },
  "panels/elements/StylesSidebarPane.ts | unknownPropertyName": {
    "message": "Неизвестное имя свойства"
  },
  "panels/elements/StylesSidebarPane.ts | visibleSelectors": {
    "message": "{n,plural, =1{Ниже показан # видимый селектор}one{Ниже показан # видимый селектор}few{Ниже показано # видимых селектора}many{Ниже показано # видимых селекторов}other{Ниже показано # видимого селектора}}"
  },
  "panels/elements/TopLayerContainer.ts | reveal": {
    "message": "показать"
  },
  "panels/elements/components/AccessibilityTreeNode.ts | ignored": {
    "message": "Игнорируется"
  },
  "panels/elements/components/AdornerSettingsPane.ts | closeButton": {
    "message": "Закрыть"
  },
  "panels/elements/components/AdornerSettingsPane.ts | settingsTitle": {
    "message": "Показать пометки"
  },
  "panels/elements/components/CSSHintDetailsView.ts | learnMore": {
    "message": "Подробнее"
  },
  "panels/elements/components/CSSPropertyDocsView.ts | dontShow": {
    "message": "Не показывать"
  },
  "panels/elements/components/CSSPropertyDocsView.ts | learnMore": {
    "message": "Подробнее"
  },
  "panels/elements/components/CSSVariableValueView.ts | invalidPropertyValue": {
    "message": "Недопустимое значение свойства. Нужный тип: {type}."
  },
  "panels/elements/components/CSSVariableValueView.ts | registeredPropertyLinkTitle": {
    "message": "Посмотреть зарегистрированное свойство"
  },
  "panels/elements/components/CSSVariableValueView.ts | sIsNotDefined": {
    "message": "Свойство {PH1} не определено"
  },
  "panels/elements/components/ElementsBreadcrumbs.ts | breadcrumbs": {
    "message": "Строки навигации дерева DOM"
  },
  "panels/elements/components/ElementsBreadcrumbs.ts | scrollLeft": {
    "message": "Влево"
  },
  "panels/elements/components/ElementsBreadcrumbs.ts | scrollRight": {
    "message": "Вправо"
  },
  "panels/elements/components/ElementsBreadcrumbsUtils.ts | text": {
    "message": "(текст)"
  },
  "panels/elements/components/LayoutPane.ts | chooseElementOverlayColor": {
    "message": "Выберите цвет оверлея для этого элемента"
  },
  "panels/elements/components/LayoutPane.ts | colorPickerOpened": {
    "message": "Палитра открыта."
  },
  "panels/elements/components/LayoutPane.ts | flexbox": {
    "message": "Flexbox"
  },
  "panels/elements/components/LayoutPane.ts | flexboxOverlays": {
    "message": "Оверлеи Flexbox"
  },
  "panels/elements/components/LayoutPane.ts | grid": {
    "message": "Сетка"
  },
  "panels/elements/components/LayoutPane.ts | gridOverlays": {
    "message": "Оверлеи сеток"
  },
  "panels/elements/components/LayoutPane.ts | noFlexboxLayoutsFoundOnThisPage": {
    "message": "Макеты Flexbox на странице не найдены."
  },
  "panels/elements/components/LayoutPane.ts | noGridLayoutsFoundOnThisPage": {
    "message": "Макеты сетки на странице не найдены."
  },
  "panels/elements/components/LayoutPane.ts | overlayDisplaySettings": {
    "message": "Настройки отображения оверлеев"
  },
  "panels/elements/components/LayoutPane.ts | showElementInTheElementsPanel": {
    "message": "Показать элемент на панели \"Элементы\""
  },
  "panels/elements/components/StylePropertyEditor.ts | deselectButton": {
    "message": "Удалить {propertyName}: {propertyValue}"
  },
  "panels/elements/components/StylePropertyEditor.ts | selectButton": {
    "message": "Добавить {propertyName}: {propertyValue}"
  },
  "panels/elements/elements-meta.ts | captureAreaScreenshot": {
    "message": "Сделать скриншот области"
  },
  "panels/elements/elements-meta.ts | copyStyles": {
    "message": "Копировать стили"
  },
  "panels/elements/elements-meta.ts | disableDomWordWrap": {
    "message": "Отключить перенос по словам DOM"
  },
  "panels/elements/elements-meta.ts | duplicateElement": {
    "message": "Повторяющийся элемент"
  },
  "panels/elements/elements-meta.ts | editAsHtml": {
    "message": "Редактировать как HTML"
  },
  "panels/elements/elements-meta.ts | elements": {
    "message": "Элементы"
  },
  "panels/elements/elements-meta.ts | enableDomWordWrap": {
    "message": "Включить перенос по словам DOM"
  },
  "panels/elements/elements-meta.ts | eventListeners": {
    "message": "Прослушиватели событий"
  },
  "panels/elements/elements-meta.ts | hideElement": {
    "message": "Скрыть элемент"
  },
  "panels/elements/elements-meta.ts | hideHtmlComments": {
    "message": "Скрыть комментарии HTML"
  },
  "panels/elements/elements-meta.ts | layout": {
    "message": "Макет"
  },
  "panels/elements/elements-meta.ts | newStyleRule": {
    "message": "Новое правило стиля"
  },
  "panels/elements/elements-meta.ts | properties": {
    "message": "Свойства"
  },
  "panels/elements/elements-meta.ts | redo": {
    "message": "Повторить"
  },
  "panels/elements/elements-meta.ts | refreshEventListeners": {
    "message": "Обновить прослушиватели событий"
  },
  "panels/elements/elements-meta.ts | revealDomNodeOnHover": {
    "message": "Открыть узел DOM, когда курсор наведен"
  },
  "panels/elements/elements-meta.ts | selectAnElementInThePageTo": {
    "message": "Выбирать элемент на странице для проверки"
  },
  "panels/elements/elements-meta.ts | showCSSDocumentationTooltip": {
    "message": "Показывать подсказки из документации CSS"
  },
  "panels/elements/elements-meta.ts | showComputedStyles": {
    "message": "Показать панель вычисленных стилей"
  },
  "panels/elements/elements-meta.ts | showDetailedInspectTooltip": {
    "message": "Показывать подробности проверки"
  },
  "panels/elements/elements-meta.ts | showElements": {
    "message": "Показать \"Элементы\""
  },
  "panels/elements/elements-meta.ts | showEventListeners": {
    "message": "Показать \"Прослушиватели событий\""
  },
  "panels/elements/elements-meta.ts | showHtmlComments": {
    "message": "Показать комментарии HTML"
  },
  "panels/elements/elements-meta.ts | showLayout": {
    "message": "Показать \"Макет\""
  },
  "panels/elements/elements-meta.ts | showProperties": {
    "message": "Показать \"Свойства\""
  },
  "panels/elements/elements-meta.ts | showStackTrace": {
    "message": "Показать трассировку стека"
  },
  "panels/elements/elements-meta.ts | showStyles": {
    "message": "Показать панель \"Стили\""
  },
  "panels/elements/elements-meta.ts | showUserAgentShadowDOM": {
    "message": "Показать теневую DOM агента пользователя"
  },
  "panels/elements/elements-meta.ts | stackTrace": {
    "message": "Трассировка стека"
  },
  "panels/elements/elements-meta.ts | toggleEyeDropper": {
    "message": "Показать пипетку"
  },
  "panels/elements/elements-meta.ts | undo": {
    "message": "Отменить"
  },
  "panels/elements/elements-meta.ts | wordWrap": {
    "message": "Переносить по словам"
  },
  "panels/emulation/DeviceModeToolbar.ts | addDevicePixelRatio": {
    "message": "Добавить соотношение логических и физических пикселей устройства"
  },
  "panels/emulation/DeviceModeToolbar.ts | addDeviceType": {
    "message": "Добавить тип устройства"
  },
  "panels/emulation/DeviceModeToolbar.ts | autoadjustZoom": {
    "message": "Автоматически корректировать масштаб"
  },
  "panels/emulation/DeviceModeToolbar.ts | closeDevtools": {
    "message": "Закрыть инструмент разработчика"
  },
  "panels/emulation/DeviceModeToolbar.ts | defaultF": {
    "message": "По умолчанию: {PH1}"
  },
  "panels/emulation/DeviceModeToolbar.ts | devicePixelRatio": {
    "message": "Соотношение логических и физических пикселей устройства"
  },
  "panels/emulation/DeviceModeToolbar.ts | devicePosture": {
    "message": "Положение устройства"
  },
  "panels/emulation/DeviceModeToolbar.ts | deviceType": {
    "message": "Тип устройства"
  },
  "panels/emulation/DeviceModeToolbar.ts | dimensions": {
    "message": "Размеры"
  },
  "panels/emulation/DeviceModeToolbar.ts | edit": {
    "message": "Редактировать…"
  },
  "panels/emulation/DeviceModeToolbar.ts | experimentalWebPlatformFeature": {
    "message": "Экспериментальный параметр \"Experimental Web Platform Feature\" включен. Нажмите, чтобы отключить."
  },
  "panels/emulation/DeviceModeToolbar.ts | experimentalWebPlatformFeatureFlag": {
    "message": "Экспериментальный параметр \"Experimental Web Platform Feature\" отключен. Нажмите, чтобы включить."
  },
  "panels/emulation/DeviceModeToolbar.ts | fitToWindowF": {
    "message": "По размеру окна ({PH1} %)"
  },
  "panels/emulation/DeviceModeToolbar.ts | heightLeaveEmptyForFull": {
    "message": "Высота (не заполнять, если на весь экран)"
  },
  "panels/emulation/DeviceModeToolbar.ts | hideDeviceFrame": {
    "message": "Скрыть рамку устройства"
  },
  "panels/emulation/DeviceModeToolbar.ts | hideMediaQueries": {
    "message": "Скрыть запросы медиа"
  },
  "panels/emulation/DeviceModeToolbar.ts | hideRulers": {
    "message": "Скрыть линейки"
  },
  "panels/emulation/DeviceModeToolbar.ts | landscape": {
    "message": "Горизонтально"
  },
  "panels/emulation/DeviceModeToolbar.ts | moreOptions": {
    "message": "Больше вариантов"
  },
  "panels/emulation/DeviceModeToolbar.ts | none": {
    "message": "Нет"
  },
  "panels/emulation/DeviceModeToolbar.ts | portrait": {
    "message": "Вертикальное расположение"
  },
  "panels/emulation/DeviceModeToolbar.ts | removeDevicePixelRatio": {
    "message": "Удалить соотношение логических и физических пикселей устройства"
  },
  "panels/emulation/DeviceModeToolbar.ts | removeDeviceType": {
    "message": "Удалить тип устройства"
  },
  "panels/emulation/DeviceModeToolbar.ts | resetToDefaults": {
    "message": "Сбросить настройки"
  },
  "panels/emulation/DeviceModeToolbar.ts | responsive": {
    "message": "Отзывчивое устройство"
  },
  "panels/emulation/DeviceModeToolbar.ts | rotate": {
    "message": "Повернуть"
  },
  "panels/emulation/DeviceModeToolbar.ts | screenOrientationOptions": {
    "message": "Варианты ориентации экрана"
  },
  "panels/emulation/DeviceModeToolbar.ts | showDeviceFrame": {
    "message": "Показать рамку устройства"
  },
  "panels/emulation/DeviceModeToolbar.ts | showMediaQueries": {
    "message": "Показать запросы медиа"
  },
  "panels/emulation/DeviceModeToolbar.ts | showRulers": {
    "message": "Показать линейки"
  },
  "panels/emulation/DeviceModeToolbar.ts | toggleDualscreenMode": {
    "message": "Включить или выключить режим двойного экрана"
  },
  "panels/emulation/DeviceModeToolbar.ts | width": {
    "message": "Ширина"
  },
  "panels/emulation/DeviceModeToolbar.ts | zoom": {
    "message": "Масштаб"
  },
  "panels/emulation/DeviceModeView.ts | doubleclickForFullHeight": {
    "message": "Двойной клик для разворота на весь экран"
  },
  "panels/emulation/DeviceModeView.ts | laptop": {
    "message": "Ноутбук"
  },
  "panels/emulation/DeviceModeView.ts | laptopL": {
    "message": "Ноутбук L"
  },
  "panels/emulation/DeviceModeView.ts | mobileL": {
    "message": "Большое мобильное устройство"
  },
  "panels/emulation/DeviceModeView.ts | mobileM": {
    "message": "Среднее мобильное устройство"
  },
  "panels/emulation/DeviceModeView.ts | mobileS": {
    "message": "Небольшое мобильное устройство"
  },
  "panels/emulation/DeviceModeView.ts | tablet": {
    "message": "Планшет"
  },
  "panels/emulation/MediaQueryInspector.ts | revealInSourceCode": {
    "message": "Показать в исходном коде"
  },
  "panels/emulation/emulation-meta.ts | captureFullSizeScreenshot": {
    "message": "Сделать полноразмерный скриншот"
  },
  "panels/emulation/emulation-meta.ts | captureNodeScreenshot": {
    "message": "Сделать скриншот узла"
  },
  "panels/emulation/emulation-meta.ts | captureScreenshot": {
    "message": "Сделать скриншот"
  },
  "panels/emulation/emulation-meta.ts | device": {
    "message": "устройство"
  },
  "panels/emulation/emulation-meta.ts | hideDeviceFrame": {
    "message": "Показать рамку устройства"
  },
  "panels/emulation/emulation-meta.ts | hideMediaQueries": {
    "message": "Скрыть запросы медиа"
  },
  "panels/emulation/emulation-meta.ts | hideRulers": {
    "message": "Скрыть линейки на панели инструментов \"Режим устройства\""
  },
  "panels/emulation/emulation-meta.ts | showDeviceFrame": {
    "message": "Показать рамку устройства"
  },
  "panels/emulation/emulation-meta.ts | showMediaQueries": {
    "message": "Показать запросы медиа"
  },
  "panels/emulation/emulation-meta.ts | showRulers": {
    "message": "Показать линейки на панели инструментов \"Режим устройства\""
  },
  "panels/emulation/emulation-meta.ts | toggleDeviceToolbar": {
    "message": "Показать или скрыть панель инструментов устройства"
  },
  "panels/event_listeners/EventListenersView.ts | deleteEventListener": {
    "message": "Удалить прослушиватель событий"
  },
  "panels/event_listeners/EventListenersView.ts | noEventListeners": {
    "message": "Нет прослушивателей событий"
  },
  "panels/event_listeners/EventListenersView.ts | passive": {
    "message": "Пассивен"
  },
  "panels/event_listeners/EventListenersView.ts | remove": {
    "message": "Удалить"
  },
  "panels/event_listeners/EventListenersView.ts | revealInElementsPanel": {
    "message": "Открыть на панели \"Элементы\""
  },
  "panels/event_listeners/EventListenersView.ts | togglePassive": {
    "message": "Перевести в пассивное состояние"
  },
  "panels/event_listeners/EventListenersView.ts | toggleWhetherEventListenerIs": {
    "message": "Показать или скрыть, является ли прослушиватель событий пассивным или блокирующим"
  },
  "panels/explain/components/ConsoleInsight.ts | closeInsight": {
    "message": "Закрыть подсказку"
  },
  "panels/explain/components/ConsoleInsight.ts | consoleMessage": {
    "message": "Сообщение из консоли"
  },
  "panels/explain/components/ConsoleInsight.ts | error": {
    "message": "Что-то пошло не так"
  },
  "panels/explain/components/ConsoleInsight.ts | generating": {
    "message": "Создание…"
  },
  "panels/explain/components/ConsoleInsight.ts | insight": {
    "message": "Подсказка"
  },
  "panels/explain/components/ConsoleInsight.ts | networkRequest": {
    "message": "Сетевой запрос"
  },
  "panels/explain/components/ConsoleInsight.ts | opensInNewTab": {
    "message": "(ссылка откроется в новой вкладке)"
  },
  "panels/explain/components/ConsoleInsight.ts | relatedCode": {
    "message": "Связанный код"
  },
  "panels/explain/components/ConsoleInsight.ts | stackTrace": {
    "message": "Трассировка стека"
  },
  "panels/explain/components/ConsoleInsight.ts | submitFeedback": {
    "message": "Отправить отзыв"
  },
  "panels/explain/explain-meta.ts | explainThisError": {
    "message": "Объяснить эту ошибку"
  },
  "panels/explain/explain-meta.ts | explainThisMessage": {
    "message": "Объяснить это сообщение"
  },
  "panels/explain/explain-meta.ts | explainThisWarning": {
    "message": "Объяснить это предупреждение"
  },
  "panels/issues/AffectedBlockedByResponseView.ts | blockedResource": {
    "message": "Заблокированный ресурс"
  },
  "panels/issues/AffectedBlockedByResponseView.ts | nRequests": {
    "message": "{n,plural, =1{# запрос}one{# запрос}few{# запроса}many{# запросов}other{# запроса}}"
  },
  "panels/issues/AffectedBlockedByResponseView.ts | parentFrame": {
    "message": "Родительский фрейм"
  },
  "panels/issues/AffectedBlockedByResponseView.ts | requestC": {
    "message": "Запрос"
  },
  "panels/issues/AffectedCookiesView.ts | domain": {
    "message": "Домен"
  },
  "panels/issues/AffectedCookiesView.ts | filterSetCookieTitle": {
    "message": "Показать сетевые запросы с этим заголовком Set-Cookie на панели \"Сеть\""
  },
  "panels/issues/AffectedCookiesView.ts | nCookies": {
    "message": "{n,plural, =1{# файл cookie}one{# файл cookie}few{# файла cookie}many{# файлов cookie}other{# файла cookie}}"
  },
  "panels/issues/AffectedCookiesView.ts | nRawCookieLines": {
    "message": "{n,plural, =1{1 необработанный заголовок Set-Cookie}one{# необработанный заголовок Set-Cookie}few{# необработанных заголовка Set-Cookie}many{# необработанных заголовков Set-Cookie}other{# необработанного заголовка Set-Cookie}}"
  },
  "panels/issues/AffectedCookiesView.ts | name": {
    "message": "Название"
  },
  "panels/issues/AffectedCookiesView.ts | path": {
    "message": "Путь"
  },
  "panels/issues/AffectedDirectivesView.ts | blocked": {
    "message": "заблокировано"
  },
  "panels/issues/AffectedDirectivesView.ts | clickToRevealTheViolatingDomNode": {
    "message": "Нажмите, чтобы увидеть на панели \"Элементы\" узел DOM, нарушающий правила"
  },
  "panels/issues/AffectedDirectivesView.ts | directiveC": {
    "message": "Директива"
  },
  "panels/issues/AffectedDirectivesView.ts | element": {
    "message": "Элемент"
  },
  "panels/issues/AffectedDirectivesView.ts | nDirectives": {
    "message": "{n,plural, =1{# директива}one{# директива}few{# директивы}many{# директив}other{# директивы}}"
  },
  "panels/issues/AffectedDirectivesView.ts | reportonly": {
    "message": "только отчет"
  },
  "panels/issues/AffectedDirectivesView.ts | resourceC": {
    "message": "Ресурс"
  },
  "panels/issues/AffectedDirectivesView.ts | sourceLocation": {
    "message": "Местоположение исходного файла"
  },
  "panels/issues/AffectedDirectivesView.ts | status": {
    "message": "Статус"
  },
  "panels/issues/AffectedDocumentsInQuirksModeView.ts | documentInTheDOMTree": {
    "message": "Документ в дереве DOM"
  },
  "panels/issues/AffectedDocumentsInQuirksModeView.ts | mode": {
    "message": "Режим"
  },
  "panels/issues/AffectedDocumentsInQuirksModeView.ts | nDocuments": {
    "message": "{n,plural, =1{документ}one{ документ}few{ документа}many{ документов}other{ документа}}"
  },
  "panels/issues/AffectedDocumentsInQuirksModeView.ts | url": {
    "message": "URL"
  },
  "panels/issues/AffectedElementsView.ts | nElements": {
    "message": "{n,plural, =1{# элемент}one{# элемент}few{# элемента}many{# элементов}other{# элемента}}"
  },
  "panels/issues/AffectedElementsWithLowContrastView.ts | contrastRatio": {
    "message": "Коэффициент контрастности"
  },
  "panels/issues/AffectedElementsWithLowContrastView.ts | element": {
    "message": "Элемент"
  },
  "panels/issues/AffectedElementsWithLowContrastView.ts | minimumAA": {
    "message": "Минимальный коэффициент AA"
  },
  "panels/issues/AffectedElementsWithLowContrastView.ts | minimumAAA": {
    "message": "Минимальный коэффициент AAA"
  },
  "panels/issues/AffectedElementsWithLowContrastView.ts | textSize": {
    "message": "Размер текста"
  },
  "panels/issues/AffectedElementsWithLowContrastView.ts | textWeight": {
    "message": "Насыщенность текста"
  },
  "panels/issues/AffectedHeavyAdView.ts | cpuPeakLimit": {
    "message": "Ограничение пиковой нагрузки на ЦП"
  },
  "panels/issues/AffectedHeavyAdView.ts | cpuTotalLimit": {
    "message": "Общий предел процессора"
  },
  "panels/issues/AffectedHeavyAdView.ts | frameUrl": {
    "message": "URL фрейма"
  },
  "panels/issues/AffectedHeavyAdView.ts | limitExceeded": {
    "message": "Превышено ограничение"
  },
  "panels/issues/AffectedHeavyAdView.ts | nResources": {
    "message": "{n,plural, =1{# ресурс}one{# ресурс}few{# ресурса}many{# ресурсов}other{# ресурса}}"
  },
  "panels/issues/AffectedHeavyAdView.ts | networkLimit": {
    "message": "Лимит сети"
  },
  "panels/issues/AffectedHeavyAdView.ts | removed": {
    "message": "Удалено"
  },
  "panels/issues/AffectedHeavyAdView.ts | resolutionStatus": {
    "message": "Статус разрешения"
  },
  "panels/issues/AffectedHeavyAdView.ts | warned": {
    "message": "Получено предупреждение."
  },
  "panels/issues/AffectedMetadataAllowedSitesView.ts | nAllowedSites": {
    "message": "{n,plural, =1{1 сайту разрешен доступ к файлам cookie}one{# сайту разрешен доступ к файлам cookie}few{# сайтам разрешен доступ к файлам cookie}many{# сайтам разрешен доступ к файлам cookie}other{# сайта разрешен доступ к файлам cookie}}"
  },
  "panels/issues/AffectedResourcesView.ts | clickToRevealTheFramesDomNodeIn": {
    "message": "Нажмите, чтобы открыть DOM-узел фрейма на панели \"Элементы\""
  },
  "panels/issues/AffectedResourcesView.ts | unavailable": {
    "message": "недоступно"
  },
  "panels/issues/AffectedResourcesView.ts | unknown": {
    "message": "неизвестно"
  },
  "panels/issues/AffectedSharedArrayBufferIssueDetailsView.ts | aSharedarraybufferWas": {
    "message": "Экземпляр объекта SharedArrayBuffer создан в контексте, не изолированном от междоменных источников"
  },
  "panels/issues/AffectedSharedArrayBufferIssueDetailsView.ts | blocked": {
    "message": "заблокировано"
  },
  "panels/issues/AffectedSharedArrayBufferIssueDetailsView.ts | instantiation": {
    "message": "Создание экземпляра"
  },
  "panels/issues/AffectedSharedArrayBufferIssueDetailsView.ts | nViolations": {
    "message": "{n,plural, =1{# нарушение}one{# нарушение}few{# нарушения}many{# нарушений}other{# нарушения}}"
  },
  "panels/issues/AffectedSharedArrayBufferIssueDetailsView.ts | sharedarraybufferWasTransferedTo": {
    "message": "Объект SharedArrayBuffer перенесен в контекст, не изолированный от междоменных источников"
  },
  "panels/issues/AffectedSharedArrayBufferIssueDetailsView.ts | sourceLocation": {
    "message": "Местоположение исходного файла"
  },
  "panels/issues/AffectedSharedArrayBufferIssueDetailsView.ts | status": {
    "message": "Статус"
  },
  "panels/issues/AffectedSharedArrayBufferIssueDetailsView.ts | transfer": {
    "message": "Перенос"
  },
  "panels/issues/AffectedSharedArrayBufferIssueDetailsView.ts | trigger": {
    "message": "Триггер"
  },
  "panels/issues/AffectedSharedArrayBufferIssueDetailsView.ts | warning": {
    "message": "предупреждение"
  },
  "panels/issues/AffectedSourcesView.ts | nSources": {
    "message": "{n,plural, =1{# источник}one{# источник}few{# источника}many{# источников}other{# источника}}"
  },
  "panels/issues/AffectedTrackingSitesView.ts | nTrackingSites": {
    "message": "{n,plural, =1{1 сайт, который может отслеживать действия}one{# сайт, который может отслеживать действия}few{# сайта, которые могут отслеживать действия}many{# сайтов, которые могут отслеживать действия}other{# сайта, которые могут отслеживать действия}}"
  },
  "panels/issues/AttributionReportingIssueDetailsView.ts | element": {
    "message": "Элемент"
  },
  "panels/issues/AttributionReportingIssueDetailsView.ts | invalidHeaderValue": {
    "message": "Недопустимое значение заголовка"
  },
  "panels/issues/AttributionReportingIssueDetailsView.ts | nViolations": {
    "message": "{n,plural, =1{# нарушение}one{# нарушение}few{# нарушения}many{# нарушений}other{# нарушения}}"
  },
  "panels/issues/AttributionReportingIssueDetailsView.ts | request": {
    "message": "Запрос"
  },
  "panels/issues/AttributionReportingIssueDetailsView.ts | untrustworthyOrigin": {
    "message": "Ненадежный источник"
  },
  "panels/issues/CorsIssueDetailsView.ts | allowCredentialsValueFromHeader": {
    "message": "Значение заголовка Access-Control-Allow-Credentials"
  },
  "panels/issues/CorsIssueDetailsView.ts | allowedOrigin": {
    "message": "Разрешенный источник (указанный в заголовке)"
  },
  "panels/issues/CorsIssueDetailsView.ts | blocked": {
    "message": "заблокировано"
  },
  "panels/issues/CorsIssueDetailsView.ts | disallowedRequestHeader": {
    "message": "Недопустимый заголовок запроса"
  },
  "panels/issues/CorsIssueDetailsView.ts | disallowedRequestMethod": {
    "message": "Запрещенный метод запроса"
  },
  "panels/issues/CorsIssueDetailsView.ts | failedRequest": {
    "message": "Не удалось выполнить запрос."
  },
  "panels/issues/CorsIssueDetailsView.ts | header": {
    "message": "Заголовок"
  },
  "panels/issues/CorsIssueDetailsView.ts | initiatorAddressSpace": {
    "message": "Адрес инициатора"
  },
  "panels/issues/CorsIssueDetailsView.ts | initiatorContext": {
    "message": "Контекст инициатора"
  },
  "panels/issues/CorsIssueDetailsView.ts | insecure": {
    "message": "небезопасно"
  },
  "panels/issues/CorsIssueDetailsView.ts | invalidValue": {
    "message": "Недействительное значение (если доступно)"
  },
  "panels/issues/CorsIssueDetailsView.ts | nRequests": {
    "message": "{n,plural, =1{# запрос}one{# запрос}few{# запроса}many{# запросов}other{# запроса}}"
  },
  "panels/issues/CorsIssueDetailsView.ts | preflightDisallowedRedirect": {
    "message": "Ответом на предварительный процесс была переадресация"
  },
  "panels/issues/CorsIssueDetailsView.ts | preflightInvalidStatus": {
    "message": "HTTP-статус указывает на ошибку при запросе предварительного процесса"
  },
  "panels/issues/CorsIssueDetailsView.ts | preflightRequest": {
    "message": "Запрос предварительного процесса"
  },
  "panels/issues/CorsIssueDetailsView.ts | preflightRequestIfProblematic": {
    "message": "Запрос предварительного процесса (при наличии проблемы)"
  },
  "panels/issues/CorsIssueDetailsView.ts | problem": {
    "message": "Проблема"
  },
  "panels/issues/CorsIssueDetailsView.ts | problemInvalidValue": {
    "message": "Недействительное значение"
  },
  "panels/issues/CorsIssueDetailsView.ts | problemMissingHeader": {
    "message": "Отсутствует заголовок"
  },
  "panels/issues/CorsIssueDetailsView.ts | problemMultipleValues": {
    "message": "Несколько значений"
  },
  "panels/issues/CorsIssueDetailsView.ts | request": {
    "message": "Запрос"
  },
  "panels/issues/CorsIssueDetailsView.ts | resourceAddressSpace": {
    "message": "Адрес ресурса"
  },
  "panels/issues/CorsIssueDetailsView.ts | secure": {
    "message": "безопасно"
  },
  "panels/issues/CorsIssueDetailsView.ts | sourceLocation": {
    "message": "Местоположение исходного файла"
  },
  "panels/issues/CorsIssueDetailsView.ts | status": {
    "message": "Статус"
  },
  "panels/issues/CorsIssueDetailsView.ts | unsupportedScheme": {
    "message": "Неподдерживаемая схема"
  },
  "panels/issues/CorsIssueDetailsView.ts | warning": {
    "message": "предупреждение"
  },
  "panels/issues/GenericIssueDetailsView.ts | frameId": {
    "message": "Фрейм"
  },
  "panels/issues/GenericIssueDetailsView.ts | nResources": {
    "message": "{n,plural, =1{# ресурс}one{# ресурс}few{# ресурса}many{# ресурсов}other{# ресурса}}"
  },
  "panels/issues/GenericIssueDetailsView.ts | violatingNode": {
    "message": "Нарушающий узел"
  },
  "panels/issues/HiddenIssuesRow.ts | hiddenIssues": {
    "message": "Скрытые проблемы"
  },
  "panels/issues/HiddenIssuesRow.ts | unhideAll": {
    "message": "Показать все"
  },
  "panels/issues/IssueKindView.ts | hideAllCurrentBreakingChanges": {
    "message": "Скрыть все текущие критические изменения"
  },
  "panels/issues/IssueKindView.ts | hideAllCurrentImprovements": {
    "message": "Скрыть все текущие улучшения"
  },
  "panels/issues/IssueKindView.ts | hideAllCurrentPageErrors": {
    "message": "Скрыть все текущие ошибки страницы"
  },
  "panels/issues/IssueView.ts | affectedResources": {
    "message": "Измененные ресурсы"
  },
  "panels/issues/IssueView.ts | automaticallyUpgraded": {
    "message": "автоматически обновлено"
  },
  "panels/issues/IssueView.ts | blocked": {
    "message": "заблокировано"
  },
  "panels/issues/IssueView.ts | hideIssuesLikeThis": {
    "message": "Скрыть такие проблемы"
  },
  "panels/issues/IssueView.ts | learnMoreS": {
    "message": "Подробнее: {PH1}"
  },
  "panels/issues/IssueView.ts | nRequests": {
    "message": "{n,plural, =1{# запрос}one{# запрос}few{# запроса}many{# запросов}other{# запроса}}"
  },
  "panels/issues/IssueView.ts | nResources": {
    "message": "{n,plural, =1{# ресурс}one{# ресурс}few{# ресурса}many{# ресурсов}other{# ресурса}}"
  },
  "panels/issues/IssueView.ts | name": {
    "message": "Название"
  },
  "panels/issues/IssueView.ts | restrictionStatus": {
    "message": "Статус ограничения"
  },
  "panels/issues/IssueView.ts | unhideIssuesLikeThis": {
    "message": "Показать такие проблемы"
  },
  "panels/issues/IssueView.ts | warned": {
    "message": "Получено предупреждение."
  },
  "panels/issues/IssuesPane.ts | attributionReporting": {
    "message": "Отчеты по атрибуции API"
  },
  "panels/issues/IssuesPane.ts | contentSecurityPolicy": {
    "message": "Content Security Policy"
  },
  "panels/issues/IssuesPane.ts | cors": {
    "message": "Совместное использование ресурсов между разными источниками"
  },
  "panels/issues/IssuesPane.ts | crossOriginEmbedderPolicy": {
    "message": "Правила междоменного встраивания"
  },
  "panels/issues/IssuesPane.ts | generic": {
    "message": "Другое"
  },
  "panels/issues/IssuesPane.ts | groupByCategory": {
    "message": "Группировать по категории"
  },
  "panels/issues/IssuesPane.ts | groupByKind": {
    "message": "Группировать по типу"
  },
  "panels/issues/IssuesPane.ts | groupDisplayedIssuesUnder": {
    "message": "Группировать проблемы по категориям"
  },
  "panels/issues/IssuesPane.ts | groupDisplayedIssuesUnderKind": {
    "message": "Группировать ошибки по типу: ошибки страницы, критические изменения и улучшения"
  },
  "panels/issues/IssuesPane.ts | heavyAds": {
    "message": "Тяжелая реклама"
  },
  "panels/issues/IssuesPane.ts | includeCookieIssuesCausedBy": {
    "message": "Добавить проблемы с файлами cookie, вызванные сторонними сайтами"
  },
  "panels/issues/IssuesPane.ts | includeThirdpartyCookieIssues": {
    "message": "Добавить проблемы, вызванные сторонними файлами cookie"
  },
  "panels/issues/IssuesPane.ts | lowTextContrast": {
    "message": "Низкая контрастность текста"
  },
  "panels/issues/IssuesPane.ts | mixedContent": {
    "message": "Смешанный контент"
  },
  "panels/issues/IssuesPane.ts | noIssuesDetectedSoFar": {
    "message": "Проблем не обнаружено"
  },
  "panels/issues/IssuesPane.ts | onlyThirdpartyCookieIssues": {
    "message": "Найдены проблемы только со сторонними файлами cookie"
  },
  "panels/issues/IssuesPane.ts | other": {
    "message": "Другое"
  },
  "panels/issues/IssuesPane.ts | quirksMode": {
    "message": "Режим совместимости"
  },
  "panels/issues/IssuesPane.ts | samesiteCookie": {
    "message": "Атрибут SameSite для файлов cookie"
  },
  "panels/issues/components/HideIssuesMenu.ts | tooltipTitle": {
    "message": "Скрыть проблемы"
  },
  "panels/issues/issues-meta.ts | issues": {
    "message": "Проблемы"
  },
  "panels/issues/issues-meta.ts | showIssues": {
    "message": "Показать проблемы"
  },
  "panels/js_profiler/js_profiler-meta.ts | performance": {
    "message": "Производительность"
  },
  "panels/js_profiler/js_profiler-meta.ts | profiler": {
    "message": "Профилировщик"
  },
  "panels/js_profiler/js_profiler-meta.ts | record": {
    "message": "Запись"
  },
  "panels/js_profiler/js_profiler-meta.ts | showPerformance": {
    "message": "Показать панель \"Производительность\""
  },
  "panels/js_profiler/js_profiler-meta.ts | showProfiler": {
    "message": "Открыть профилировщик"
  },
  "panels/js_profiler/js_profiler-meta.ts | showRecentTimelineSessions": {
    "message": "Показать недавние сеансы хронологии"
  },
  "panels/js_profiler/js_profiler-meta.ts | startProfilingAndReloadPage": {
    "message": "Начать профилирование и обновить страницу"
  },
  "panels/js_profiler/js_profiler-meta.ts | startStopRecording": {
    "message": "Начать/остановить запись"
  },
  "panels/js_profiler/js_profiler-meta.ts | stop": {
    "message": "Остановить"
  },
  "panels/layer_viewer/LayerDetailsView.ts | compositingReasons": {
    "message": "Причины компоновки"
  },
  "panels/layer_viewer/LayerDetailsView.ts | containingBlocRectangleDimensions": {
    "message": "Содержащий блок {PH1} × {PH2} (в {PH3}, {PH4})"
  },
  "panels/layer_viewer/LayerDetailsView.ts | mainThreadScrollingReason": {
    "message": "Причина прокрутки основного потока"
  },
  "panels/layer_viewer/LayerDetailsView.ts | memoryEstimate": {
    "message": "Ожидаемый объем памяти"
  },
  "panels/layer_viewer/LayerDetailsView.ts | nearestLayerShiftingContaining": {
    "message": "Ближайший содержащий блок с перемещением слоев"
  },
  "panels/layer_viewer/LayerDetailsView.ts | nearestLayerShiftingStickyBox": {
    "message": "Закрепленное поле смещения ближайшего слоя"
  },
  "panels/layer_viewer/LayerDetailsView.ts | nonFastScrollable": {
    "message": "Без быстрой прокрутки"
  },
  "panels/layer_viewer/LayerDetailsView.ts | paintCount": {
    "message": "Счетчик операций paint"
  },
  "panels/layer_viewer/LayerDetailsView.ts | paintProfiler": {
    "message": "Профилировщик отображения"
  },
  "panels/layer_viewer/LayerDetailsView.ts | repaintsOnScroll": {
    "message": "Окрашивает при прокрутке"
  },
  "panels/layer_viewer/LayerDetailsView.ts | scrollRectangleDimensions": {
    "message": "{PH1} {PH2} × {PH3} (в {PH4}, {PH5})"
  },
  "panels/layer_viewer/LayerDetailsView.ts | selectALayerToSeeItsDetails": {
    "message": "Чтобы посмотреть сведения о слое, выберите его."
  },
  "panels/layer_viewer/LayerDetailsView.ts | size": {
    "message": "Размер"
  },
  "panels/layer_viewer/LayerDetailsView.ts | slowScrollRegions": {
    "message": "Области плавной прокрутки"
  },
  "panels/layer_viewer/LayerDetailsView.ts | stickyAncenstorLayersS": {
    "message": "{PH1}: {PH2} ({PH3})"
  },
  "panels/layer_viewer/LayerDetailsView.ts | stickyBoxRectangleDimensions": {
    "message": "Закрепленное окно {PH1} × {PH2} (в {PH3}, {PH4})"
  },
  "panels/layer_viewer/LayerDetailsView.ts | stickyPositionConstraint": {
    "message": "Ограничение закрепленной позиции"
  },
  "panels/layer_viewer/LayerDetailsView.ts | touchEventHandler": {
    "message": "Обработчик событий касания"
  },
  "panels/layer_viewer/LayerDetailsView.ts | unnamed": {
    "message": "<без имени>"
  },
  "panels/layer_viewer/LayerDetailsView.ts | updateRectangleDimensions": {
    "message": "{PH1} × {PH2} (в {PH4}, {PH3})"
  },
  "panels/layer_viewer/LayerDetailsView.ts | wheelEventHandler": {
    "message": "Обработчик событий колесика мыши"
  },
  "panels/layer_viewer/LayerTreeOutline.ts | layersTreePane": {
    "message": "Панель \"Дерево слоев\""
  },
  "panels/layer_viewer/LayerTreeOutline.ts | showPaintProfiler": {
    "message": "Показать профилировщик отрисовки"
  },
  "panels/layer_viewer/LayerTreeOutline.ts | updateChildDimension": {
    "message": " ({PH1} × {PH2})"
  },
  "panels/layer_viewer/LayerViewHost.ts | showInternalLayers": {
    "message": "Показать внутренние слои"
  },
  "panels/layer_viewer/Layers3DView.ts | cantDisplayLayers": {
    "message": "Невозможно показать слои,"
  },
  "panels/layer_viewer/Layers3DView.ts | checkSForPossibleReasons": {
    "message": "Проверить {PH1} на наличие причин."
  },
  "panels/layer_viewer/Layers3DView.ts | dLayersView": {
    "message": "Вид трехмерных слоев"
  },
  "panels/layer_viewer/Layers3DView.ts | layerInformationIsNotYet": {
    "message": "Информация о слоях пока недоступна."
  },
  "panels/layer_viewer/Layers3DView.ts | paints": {
    "message": "Окрашивает"
  },
  "panels/layer_viewer/Layers3DView.ts | resetView": {
    "message": "Сбросить просмотр"
  },
  "panels/layer_viewer/Layers3DView.ts | showPaintProfiler": {
    "message": "Показать профилировщик отрисовки"
  },
  "panels/layer_viewer/Layers3DView.ts | slowScrollRects": {
    "message": "Прямоугольная область медленной прокрутки"
  },
  "panels/layer_viewer/Layers3DView.ts | webglSupportIsDisabledInYour": {
    "message": "В вашем браузере отключена поддержка WebGL."
  },
  "panels/layer_viewer/PaintProfilerView.ts | bitmap": {
    "message": "Битовая карта"
  },
  "panels/layer_viewer/PaintProfilerView.ts | commandLog": {
    "message": "Журнал команд"
  },
  "panels/layer_viewer/PaintProfilerView.ts | misc": {
    "message": "Разное"
  },
  "panels/layer_viewer/PaintProfilerView.ts | profiling": {
    "message": "Профилирование…"
  },
  "panels/layer_viewer/PaintProfilerView.ts | profilingResults": {
    "message": "Результаты профилирования"
  },
  "panels/layer_viewer/PaintProfilerView.ts | shapes": {
    "message": "Фигуры"
  },
  "panels/layer_viewer/PaintProfilerView.ts | text": {
    "message": "Текст"
  },
  "panels/layer_viewer/TransformController.ts | panModeX": {
    "message": "Режим панорамы (X)"
  },
  "panels/layer_viewer/TransformController.ts | resetTransform": {
    "message": "Сбросить преобразование (0)"
  },
  "panels/layer_viewer/TransformController.ts | rotateModeV": {
    "message": "Режим поворота (V)"
  },
  "panels/layer_viewer/layer_viewer-meta.ts | panOrRotateDown": {
    "message": "Панорамирование или поворот вниз"
  },
  "panels/layer_viewer/layer_viewer-meta.ts | panOrRotateLeft": {
    "message": "Панорамирование или поворот влево"
  },
  "panels/layer_viewer/layer_viewer-meta.ts | panOrRotateRight": {
    "message": "Панорамирование или поворот вправо"
  },
  "panels/layer_viewer/layer_viewer-meta.ts | panOrRotateUp": {
    "message": "Панорамирование или поворот вверх"
  },
  "panels/layer_viewer/layer_viewer-meta.ts | resetView": {
    "message": "Сброс вида"
  },
  "panels/layer_viewer/layer_viewer-meta.ts | switchToPanMode": {
    "message": "Включить режим панорамирования"
  },
  "panels/layer_viewer/layer_viewer-meta.ts | switchToRotateMode": {
    "message": "Перейти в режим поворота"
  },
  "panels/layer_viewer/layer_viewer-meta.ts | zoomIn": {
    "message": "Увеличить"
  },
  "panels/layer_viewer/layer_viewer-meta.ts | zoomOut": {
    "message": "Уменьшить масштаб"
  },
  "panels/layers/LayersPanel.ts | details": {
    "message": "Сведения"
  },
  "panels/layers/LayersPanel.ts | profiler": {
    "message": "Профилировщик"
  },
  "panels/layers/layers-meta.ts | layers": {
    "message": "Слои"
  },
  "panels/layers/layers-meta.ts | showLayers": {
    "message": "Показать слои"
  },
  "panels/lighthouse/LighthouseController.ts | accessibility": {
    "message": "Специальные возможности"
  },
  "panels/lighthouse/LighthouseController.ts | applyMobileEmulation": {
    "message": "Включить эмуляцию мобильных устройств"
  },
  "panels/lighthouse/LighthouseController.ts | applyMobileEmulationDuring": {
    "message": "Применять эмуляцию мобильных устройств во время аудита"
  },
  "panels/lighthouse/LighthouseController.ts | atLeastOneCategoryMustBeSelected": {
    "message": "Должна быть выбрана хотя бы одна категория."
  },
  "panels/lighthouse/LighthouseController.ts | bestPractices": {
    "message": "Рекомендации"
  },
  "panels/lighthouse/LighthouseController.ts | canOnlyAuditHttphttpsPages": {
    "message": "Возможен только аудит страниц HTTP и HTTPS. Откройте другую страницу."
  },
  "panels/lighthouse/LighthouseController.ts | clearStorage": {
    "message": "Очистить хранилище"
  },
  "panels/lighthouse/LighthouseController.ts | desktop": {
    "message": "Версия для компьютера"
  },
  "panels/lighthouse/LighthouseController.ts | devtoolsThrottling": {
    "message": "Ограничение инструментов разработчика (для опытных пользователей)"
  },
  "panels/lighthouse/LighthouseController.ts | doesThisPageFollowBestPractices": {
    "message": "Эта страница следует рекомендациям современной веб-разработки?"
  },
  "panels/lighthouse/LighthouseController.ts | doesThisPageMeetTheStandardOfA": {
    "message": "Соответствует ли страница нормам современных веб-приложений?"
  },
  "panels/lighthouse/LighthouseController.ts | howLongDoesThisAppTakeToShow": {
    "message": "Сколько времени занимает в этом приложении отображение контента и подготовка его к использованию"
  },
  "panels/lighthouse/LighthouseController.ts | indexeddb": {
    "message": "IndexedDB"
  },
  "panels/lighthouse/LighthouseController.ts | isThisPageOptimizedForAdSpeedAnd": {
    "message": "Оптимизирована ли эта страница под скорость и качество рекламы?"
  },
  "panels/lighthouse/LighthouseController.ts | isThisPageOptimizedForSearch": {
    "message": "Эта страница оптимизирована для индексации поисковыми системами?"
  },
  "panels/lighthouse/LighthouseController.ts | isThisPageUsableByPeopleWith": {
    "message": "Может ли эта страница использоваться людьми с ограниченными возможностями?"
  },
  "panels/lighthouse/LighthouseController.ts | javaScriptDisabled": {
    "message": "JavaScript отключен. Чтобы проверить страницу, включите JavaScript. Для этого откройте меню управления и выполните команду \"Включить JavaScript\"."
  },
  "panels/lighthouse/LighthouseController.ts | lighthouseMode": {
    "message": "Режим Lighthouse"
  },
  "panels/lighthouse/LighthouseController.ts | localStorage": {
    "message": "Локальное хранилище"
  },
  "panels/lighthouse/LighthouseController.ts | mobile": {
    "message": "Мобильная версия"
  },
  "panels/lighthouse/LighthouseController.ts | multipleTabsAreBeingControlledBy": {
    "message": "service worker контролирует несколько вкладок. Закройте другие вкладки того же источника для проведения аудита."
  },
  "panels/lighthouse/LighthouseController.ts | navigation": {
    "message": "Навигация (по умолчанию)"
  },
  "panels/lighthouse/LighthouseController.ts | navigationTooltip": {
    "message": "В режиме анализа навигации изучается загрузка страницы, в точности как в исходных отчетах Lighthouse"
  },
  "panels/lighthouse/LighthouseController.ts | performance": {
    "message": "Производительность"
  },
  "panels/lighthouse/LighthouseController.ts | progressiveWebApp": {
    "message": "Современное веб-приложение"
  },
  "panels/lighthouse/LighthouseController.ts | publisherAds": {
    "message": "Объявления издателя"
  },
  "panels/lighthouse/LighthouseController.ts | resetStorageLocalstorage": {
    "message": "Очистить хранилище (cache, service workers и др.) перед аудитом. Это помогает при тестировании PWA и производительности."
  },
  "panels/lighthouse/LighthouseController.ts | runLighthouseInMode": {
    "message": "Запустить Lighthouse в режиме анализа навигации, состояния страницы или временного диапазона"
  },
  "panels/lighthouse/LighthouseController.ts | seo": {
    "message": "Поисковая оптимизация"
  },
  "panels/lighthouse/LighthouseController.ts | simulateASlowerPageLoadBasedOn": {
    "message": "Симуляция ограничения имитирует более медленную загрузку страницы на основе данных исходной загрузки без ограничений пропускной способности сети. Ограничение инструментов разработчика замедляет загрузку страницы."
  },
  "panels/lighthouse/LighthouseController.ts | simulatedThrottling": {
    "message": "Симуляция ограничения (по умолчанию)"
  },
  "panels/lighthouse/LighthouseController.ts | snapshot": {
    "message": "Сводка"
  },
  "panels/lighthouse/LighthouseController.ts | snapshotTooltip": {
    "message": "В режиме анализа состояния изучается состояние страницы в определенный момент времени (обычно после взаимодействия с пользователем)"
  },
  "panels/lighthouse/LighthouseController.ts | thereMayBeStoredDataAffectingLoadingPlural": {
    "message": "На скорость загрузки могут влиять данные из этих хранилищ: {PH1}. Попробуйте открыть страницу в режиме инкогнито."
  },
  "panels/lighthouse/LighthouseController.ts | thereMayBeStoredDataAffectingSingular": {
    "message": "На скорость загрузки могут влиять данные из этого хранилища: {PH1}. Попробуйте открыть страницу в режиме инкогнито."
  },
  "panels/lighthouse/LighthouseController.ts | throttlingMethod": {
    "message": "Метод ограничения"
  },
  "panels/lighthouse/LighthouseController.ts | timespan": {
    "message": "Анализ временного диапазона"
  },
  "panels/lighthouse/LighthouseController.ts | timespanTooltip": {
    "message": "В режиме анализа временного диапазона изучаются данные за произвольный период, чаще всего о взаимодействии пользователя со страницей"
  },
  "panels/lighthouse/LighthouseController.ts | webSql": {
    "message": "Web SQL"
  },
  "panels/lighthouse/LighthousePanel.ts | cancelling": {
    "message": "Отмена…"
  },
  "panels/lighthouse/LighthousePanel.ts | clearAll": {
    "message": "Очистить все"
  },
  "panels/lighthouse/LighthousePanel.ts | dropLighthouseJsonHere": {
    "message": "Перетащите JSON Lighthouse сюда"
  },
  "panels/lighthouse/LighthousePanel.ts | lighthouseSettings": {
    "message": "Настройки: Lighthouse"
  },
  "panels/lighthouse/LighthousePanel.ts | performAnAudit": {
    "message": "Выполнить аудит…"
  },
  "panels/lighthouse/LighthousePanel.ts | printing": {
    "message": "Печать"
  },
  "panels/lighthouse/LighthousePanel.ts | thePrintPopupWindowIsOpenPlease": {
    "message": "Открыто всплывающее окно печати. Чтобы продолжить, закройте его."
  },
  "panels/lighthouse/LighthouseReportSelector.ts | newReport": {
    "message": "(новый отчет)"
  },
  "panels/lighthouse/LighthouseReportSelector.ts | reports": {
    "message": "Отчеты"
  },
  "panels/lighthouse/LighthouseStartView.ts | analyzeNavigation": {
    "message": "Анализ загрузки страницы"
  },
  "panels/lighthouse/LighthouseStartView.ts | analyzeSnapshot": {
    "message": "Анализировать состояние страницы"
  },
  "panels/lighthouse/LighthouseStartView.ts | categories": {
    "message": "Категории"
  },
  "panels/lighthouse/LighthouseStartView.ts | device": {
    "message": "Устройство"
  },
  "panels/lighthouse/LighthouseStartView.ts | generateLighthouseReport": {
    "message": "Создание отчета Lighthouse"
  },
  "panels/lighthouse/LighthouseStartView.ts | learnMore": {
    "message": "Подробнее…"
  },
  "panels/lighthouse/LighthouseStartView.ts | mode": {
    "message": "Режим"
  },
  "panels/lighthouse/LighthouseStartView.ts | plugins": {
    "message": "Плагины"
  },
  "panels/lighthouse/LighthouseStartView.ts | startTimespan": {
    "message": "Запустить анализ временного диапазона"
  },
  "panels/lighthouse/LighthouseStatusView.ts | OfGlobalMobileUsersInWereOnGOrG": {
    "message": "75 % всех обладателей мобильных устройств пользовались сетями 2G и 3G в 2016 году (источник: GSMA Mobile)."
  },
  "panels/lighthouse/LighthouseStatusView.ts | OfMobilePagesTakeNearlySeconds": {
    "message": "Для 70 % мобильных страниц требуется почти семь секунд, чтобы показать визуальный контент на видимой части экрана (источник: Think with Google)."
  },
  "panels/lighthouse/LighthouseStatusView.ts | SecondsIsTheAverageTimeAMobile": {
    "message": "Мобильная версия веб-страницы в среднем загружается за 19 секунд при подключении через сеть 3G (источник: Google DoubleClick blog)."
  },
  "panels/lighthouse/LighthouseStatusView.ts | ahSorryWeRanIntoAnError": {
    "message": "К сожалению, произошла ошибка."
  },
  "panels/lighthouse/LighthouseStatusView.ts | almostThereLighthouseIsNow": {
    "message": "Почти готово! Lighthouse готовит отчет."
  },
  "panels/lighthouse/LighthouseStatusView.ts | asPageLoadTimeIncreasesFromOne": {
    "message": "Увеличение времени загрузки страницы с одной до семи секунд повышает вероятность потери посетителя мобильного сайта на 113 % [источник: Think with Google]."
  },
  "panels/lighthouse/LighthouseStatusView.ts | asTheNumberOfElementsOnAPage": {
    "message": "Если количество элементов на странице увеличивается с 400 до 6000, вероятность конверсии уменьшается на 95 % (источник: Think with Google)."
  },
  "panels/lighthouse/LighthouseStatusView.ts | auditingS": {
    "message": "Аудит {PH1}"
  },
  "panels/lighthouse/LighthouseStatusView.ts | auditingYourWebPage": {
    "message": "Проверка веб-страницы"
  },
  "panels/lighthouse/LighthouseStatusView.ts | byReducingTheResponseSizeOfJson": {
    "message": "Уменьшив размер данных в ответе JSON для отображения комментариев, Instagram увеличил количество показов (источник: WPO Stats)."
  },
  "panels/lighthouse/LighthouseStatusView.ts | cancel": {
    "message": "Отмена"
  },
  "panels/lighthouse/LighthouseStatusView.ts | cancelling": {
    "message": "Отмена…"
  },
  "panels/lighthouse/LighthouseStatusView.ts | fastFactMessageWithPlaceholder": {
    "message": "💡 {PH1}"
  },
  "panels/lighthouse/LighthouseStatusView.ts | ifASiteTakesSecondToBecome": {
    "message": "Если сайт загружается более одной секунды, пользователи начинают отвлекаться и по-другому воспринимать процесс выполнения задачи на странице [источник: Google Developers Blog]."
  },
  "panels/lighthouse/LighthouseStatusView.ts | ifThisIssueIsReproduciblePlease": {
    "message": "Если эта проблема воспроизводится, сообщите об этом в репозиторий GitHub инструмента Lighthouse."
  },
  "panels/lighthouse/LighthouseStatusView.ts | lighthouseIsGatheringInformation": {
    "message": "Lighthouse собирает информацию о странице, чтобы подсчитать результат."
  },
  "panels/lighthouse/LighthouseStatusView.ts | lighthouseIsLoadingThePage": {
    "message": "Сервис Lighthouse загружает страницу."
  },
  "panels/lighthouse/LighthouseStatusView.ts | lighthouseIsLoadingYourPage": {
    "message": "Lighthouse загружает страницу."
  },
  "panels/lighthouse/LighthouseStatusView.ts | lighthouseIsLoadingYourPageWith": {
    "message": "Lighthouse загружает страницу с ограничением, чтобы измерить производительность на мобильном устройстве с 3G-сетью."
  },
  "panels/lighthouse/LighthouseStatusView.ts | lighthouseIsLoadingYourPageWithMobile": {
    "message": "Lighthouse загружает вашу страницу с эмуляцией мобильных устройств."
  },
  "panels/lighthouse/LighthouseStatusView.ts | lighthouseIsLoadingYourPageWithThrottling": {
    "message": "Lighthouse загружает вашу страницу с ограничением, чтобы измерить производительность на медленном компьютере, подключенном к 3G-сети."
  },
  "panels/lighthouse/LighthouseStatusView.ts | lighthouseIsWarmingUp": {
    "message": "Подготовка Lighthouse…"
  },
  "panels/lighthouse/LighthouseStatusView.ts | lighthouseOnlySimulatesMobile": {
    "message": "Инструмент Lighthouse только имитирует работу мобильных устройств. Чтобы измерить эффективность на настоящем устройстве, используйте WebPageTest.org (источник: команда Lighthouse)."
  },
  "panels/lighthouse/LighthouseStatusView.ts | loading": {
    "message": "Загрузка…"
  },
  "panels/lighthouse/LighthouseStatusView.ts | mbTakesAMinimumOfSecondsTo": {
    "message": "Скачивание 1 МБ данных по обычной сети 3G занимает как минимум 5 секунд (источник: WebPageTest и определение 3G в DevTools)."
  },
  "panels/lighthouse/LighthouseStatusView.ts | rebuildingPinterestPagesFor": {
    "message": "Переделка страниц Pinterest для повышения производительности позволила увеличить коэффициент конверсии на 15 % (источник: WPO Stats)."
  },
  "panels/lighthouse/LighthouseStatusView.ts | theAverageUserDeviceCostsLess": {
    "message": "Средняя стоимость устройства пользователя составляет менее 200 долл. США [источник: International Data Corporation]."
  },
  "panels/lighthouse/LighthouseStatusView.ts | tryToNavigateToTheUrlInAFresh": {
    "message": "Перейдите к URL в обновленном профиле Chrome, не открывая другие вкладки или расширения, а затем попробуйте ещё раз."
  },
  "panels/lighthouse/LighthouseStatusView.ts | walmartSawAIncreaseInRevenueFor": {
    "message": "При повышении скорости загрузки страниц на каждые 100 мс доход Walmart увеличивался на 1 % [источник: WPO Stats]."
  },
  "panels/lighthouse/LighthouseTimespanView.ts | cancel": {
    "message": "Отмена"
  },
  "panels/lighthouse/LighthouseTimespanView.ts | endTimespan": {
    "message": "Остановить анализ временного диапазона"
  },
  "panels/lighthouse/LighthouseTimespanView.ts | timespanStarted": {
    "message": "Анализ временного диапазона запущен, начните взаимодействовать со страницей"
  },
  "panels/lighthouse/LighthouseTimespanView.ts | timespanStarting": {
    "message": "Запуск анализа временного диапазона…"
  },
  "panels/lighthouse/lighthouse-meta.ts | showLighthouse": {
    "message": "Показать Lighthouse"
  },
  "panels/linear_memory_inspector/LinearMemoryInspectorController.ts | couldNotOpenLinearMemory": {
    "message": "Не удалось открыть инспектор линейной памяти. Буфер не найден."
  },
  "panels/linear_memory_inspector/LinearMemoryInspectorController.ts | revealInMemoryInspectorPanel": {
    "message": "Открыть на панели \"Инспектор памяти\""
  },
  "panels/linear_memory_inspector/LinearMemoryInspectorPane.ts | noOpenInspections": {
    "message": "Нет открытых проверок"
  },
  "panels/linear_memory_inspector/components/LinearMemoryHighlightChipList.ts | deleteHighlight": {
    "message": "Прекратить выделение места в памяти, где хранится эта переменная"
  },
  "panels/linear_memory_inspector/components/LinearMemoryHighlightChipList.ts | jumpToAddress": {
    "message": "Перейти к месту в памяти, где хранится эта переменная"
  },
  "panels/linear_memory_inspector/components/LinearMemoryInspector.ts | addressHasToBeANumberBetweenSAnd": {
    "message": "Адрес должен быть числом от {PH1} до {PH2}"
  },
  "panels/linear_memory_inspector/components/LinearMemoryNavigator.ts | enterAddress": {
    "message": "Укажите адрес"
  },
  "panels/linear_memory_inspector/components/LinearMemoryNavigator.ts | goBackInAddressHistory": {
    "message": "К предыдущим адресам"
  },
  "panels/linear_memory_inspector/components/LinearMemoryNavigator.ts | goForwardInAddressHistory": {
    "message": "К следующим адресам"
  },
  "panels/linear_memory_inspector/components/LinearMemoryNavigator.ts | nextPage": {
    "message": "Следующая страница"
  },
  "panels/linear_memory_inspector/components/LinearMemoryNavigator.ts | previousPage": {
    "message": "Предыдущая страница"
  },
  "panels/linear_memory_inspector/components/LinearMemoryNavigator.ts | refresh": {
    "message": "Обновить"
  },
  "panels/linear_memory_inspector/components/LinearMemoryValueInterpreter.ts | changeEndianness": {
    "message": "Изменить значение \"Endianness\""
  },
  "panels/linear_memory_inspector/components/LinearMemoryValueInterpreter.ts | toggleValueTypeSettings": {
    "message": "Показать или скрыть настройки тип значения"
  },
  "panels/linear_memory_inspector/components/ValueInterpreterDisplay.ts | addressOutOfRange": {
    "message": "Адрес находится вне диапазона памяти"
  },
  "panels/linear_memory_inspector/components/ValueInterpreterDisplay.ts | changeValueTypeMode": {
    "message": "Сменить режим"
  },
  "panels/linear_memory_inspector/components/ValueInterpreterDisplay.ts | jumpToPointer": {
    "message": "Перейти к адресу"
  },
  "panels/linear_memory_inspector/components/ValueInterpreterDisplay.ts | signedValue": {
    "message": "Signed значение"
  },
  "panels/linear_memory_inspector/components/ValueInterpreterDisplay.ts | unsignedValue": {
    "message": "Unsigned значение"
  },
  "panels/linear_memory_inspector/components/ValueInterpreterDisplayUtils.ts | notApplicable": {
    "message": "Н/Д"
  },
  "panels/linear_memory_inspector/components/ValueInterpreterSettings.ts | otherGroup": {
    "message": "Другие"
  },
  "panels/linear_memory_inspector/linear_memory_inspector-meta.ts | memoryInspector": {
    "message": "Инспектор памяти"
  },
  "panels/linear_memory_inspector/linear_memory_inspector-meta.ts | showMemoryInspector": {
    "message": "Показать инспектор памяти"
  },
  "panels/media/EventDisplayTable.ts | eventDisplay": {
    "message": "Показ событий"
  },
  "panels/media/EventDisplayTable.ts | eventName": {
    "message": "Название события"
  },
  "panels/media/EventDisplayTable.ts | timestamp": {
    "message": "Временная метка"
  },
  "panels/media/EventDisplayTable.ts | value": {
    "message": "Значение"
  },
  "panels/media/EventTimelineView.ts | bufferingStatus": {
    "message": "Статус буферизации"
  },
  "panels/media/EventTimelineView.ts | playbackStatus": {
    "message": "Статус воспроизведения"
  },
  "panels/media/PlayerDetailView.ts | events": {
    "message": "Посмотреть события"
  },
  "panels/media/PlayerDetailView.ts | messages": {
    "message": "Сообщения"
  },
  "panels/media/PlayerDetailView.ts | playerEvents": {
    "message": "События игрока"
  },
  "panels/media/PlayerDetailView.ts | playerMessages": {
    "message": "Сообщения проигрывателя"
  },
  "panels/media/PlayerDetailView.ts | playerProperties": {
    "message": "Свойства проигрывателя"
  },
  "panels/media/PlayerDetailView.ts | playerTimeline": {
    "message": "Хронология игрока"
  },
  "panels/media/PlayerDetailView.ts | properties": {
    "message": "Свойства"
  },
  "panels/media/PlayerDetailView.ts | timeline": {
    "message": "Хронология"
  },
  "panels/media/PlayerListView.ts | hideAllOthers": {
    "message": "Скрыть другие элементы"
  },
  "panels/media/PlayerListView.ts | hidePlayer": {
    "message": "Скрыть проигрыватель"
  },
  "panels/media/PlayerListView.ts | players": {
    "message": "Игроки"
  },
  "panels/media/PlayerListView.ts | savePlayerInfo": {
    "message": "Сохранить информацию об игроке"
  },
  "panels/media/PlayerMessagesView.ts | all": {
    "message": "Все"
  },
  "panels/media/PlayerMessagesView.ts | custom": {
    "message": "Свои настройки"
  },
  "panels/media/PlayerMessagesView.ts | debug": {
    "message": "Отладка"
  },
  "panels/media/PlayerMessagesView.ts | default": {
    "message": "По умолчанию"
  },
  "panels/media/PlayerMessagesView.ts | error": {
    "message": "Ошибка"
  },
  "panels/media/PlayerMessagesView.ts | errorCauseLabel": {
    "message": "Причина:"
  },
  "panels/media/PlayerMessagesView.ts | errorCodeLabel": {
    "message": "Код ошибки:"
  },
  "panels/media/PlayerMessagesView.ts | errorDataLabel": {
    "message": "Данные:"
  },
  "panels/media/PlayerMessagesView.ts | errorGroupLabel": {
    "message": "Группа ошибок:"
  },
  "panels/media/PlayerMessagesView.ts | errorStackLabel": {
    "message": "Трассировка стека:"
  },
  "panels/media/PlayerMessagesView.ts | filterLogMessages": {
    "message": "Фильтровать сообщения журнала"
  },
  "panels/media/PlayerMessagesView.ts | info": {
    "message": "Информация"
  },
  "panels/media/PlayerMessagesView.ts | logLevel": {
    "message": "Уровень:"
  },
  "panels/media/PlayerMessagesView.ts | warning": {
    "message": "Предупреждение"
  },
  "panels/media/PlayerPropertiesView.ts | audio": {
    "message": "Аудио"
  },
  "panels/media/PlayerPropertiesView.ts | bitrate": {
    "message": "Битрейт"
  },
  "panels/media/PlayerPropertiesView.ts | decoder": {
    "message": "Декодер"
  },
  "panels/media/PlayerPropertiesView.ts | decoderName": {
    "message": "Название декодера"
  },
  "panels/media/PlayerPropertiesView.ts | decryptingDemuxer": {
    "message": "Расшифровка демультиплексора"
  },
  "panels/media/PlayerPropertiesView.ts | duration": {
    "message": "Продолжительность"
  },
  "panels/media/PlayerPropertiesView.ts | encoderName": {
    "message": "Название видеокодера"
  },
  "panels/media/PlayerPropertiesView.ts | fileSize": {
    "message": "Размер файла"
  },
  "panels/media/PlayerPropertiesView.ts | frameRate": {
    "message": "Частота кадров"
  },
  "panels/media/PlayerPropertiesView.ts | hardwareDecoder": {
    "message": "Аппаратный декодер"
  },
  "panels/media/PlayerPropertiesView.ts | hardwareEncoder": {
    "message": "Аппаратный видеокодер"
  },
  "panels/media/PlayerPropertiesView.ts | noDecoder": {
    "message": "Нет декодера."
  },
  "panels/media/PlayerPropertiesView.ts | noEncoder": {
    "message": "Нет видеокодера"
  },
  "panels/media/PlayerPropertiesView.ts | noTextTracks": {
    "message": "Нет текстовых дорожек"
  },
  "panels/media/PlayerPropertiesView.ts | playbackFrameTitle": {
    "message": "Название фрейма воспроизведения"
  },
  "panels/media/PlayerPropertiesView.ts | playbackFrameUrl": {
    "message": "URL фрейма воспроизведения"
  },
  "panels/media/PlayerPropertiesView.ts | properties": {
    "message": "Свойства"
  },
  "panels/media/PlayerPropertiesView.ts | rangeHeaderSupport": {
    "message": "Поддержка заголовков Range"
  },
  "panels/media/PlayerPropertiesView.ts | rendererName": {
    "message": "Название средства отрисовки"
  },
  "panels/media/PlayerPropertiesView.ts | resolution": {
    "message": "Разрешение"
  },
  "panels/media/PlayerPropertiesView.ts | singleoriginPlayback": {
    "message": "Воспроизведение из одного источника"
  },
  "panels/media/PlayerPropertiesView.ts | startTime": {
    "message": "Время начала"
  },
  "panels/media/PlayerPropertiesView.ts | streaming": {
    "message": "Потоковая передача"
  },
  "panels/media/PlayerPropertiesView.ts | textTrack": {
    "message": "Текстовая дорожка"
  },
  "panels/media/PlayerPropertiesView.ts | track": {
    "message": "Дорожка"
  },
  "panels/media/PlayerPropertiesView.ts | video": {
    "message": "Видео"
  },
  "panels/media/PlayerPropertiesView.ts | videoFreezingScore": {
    "message": "Оценка зависания видео"
  },
  "panels/media/PlayerPropertiesView.ts | videoPlaybackRoughness": {
    "message": "Погрешность воспроизведения видео"
  },
  "panels/media/media-meta.ts | media": {
    "message": "Носитель"
  },
  "panels/media/media-meta.ts | showMedia": {
    "message": "Показать медиаконтент"
  },
  "panels/media/media-meta.ts | video": {
    "message": "видео"
  },
  "panels/mobile_throttling/MobileThrottlingSelector.ts | advanced": {
    "message": "Дополнительно"
  },
  "panels/mobile_throttling/MobileThrottlingSelector.ts | disabled": {
    "message": "Отключено"
  },
  "panels/mobile_throttling/MobileThrottlingSelector.ts | presets": {
    "message": "Шаблоны"
  },
  "panels/mobile_throttling/NetworkPanelIndicator.ts | acceptedEncodingOverrideSet": {
    "message": "Набор разрешенных заголовков Content-Encoding изменен в инструментах разработчика. Узнать больше можно на панели \"Условия работы сети\"."
  },
  "panels/mobile_throttling/NetworkPanelIndicator.ts | browserCacheDisabled": {
    "message": "Кеш в браузере отключен"
  },
  "panels/mobile_throttling/NetworkPanelIndicator.ts | networkThrottlingIsEnabled": {
    "message": "Включено ограничение пропускной способности сети"
  },
  "panels/mobile_throttling/NetworkPanelIndicator.ts | requestsMayBeBlocked": {
    "message": "Запросы могут быть заблокированы. Подробная информация доступна на панели \"Блокировка сетевых запросов\"."
  },
  "panels/mobile_throttling/NetworkPanelIndicator.ts | requestsMayBeOverridden": {
    "message": "Запросы можно локально переопределять. Подробная информация доступна на панели \"Источники\"."
  },
  "panels/mobile_throttling/NetworkThrottlingSelector.ts | custom": {
    "message": "Свои настройки"
  },
  "panels/mobile_throttling/NetworkThrottlingSelector.ts | disabled": {
    "message": "Отключено"
  },
  "panels/mobile_throttling/NetworkThrottlingSelector.ts | presets": {
    "message": "Шаблоны"
  },
  "panels/mobile_throttling/ThrottlingManager.ts | add": {
    "message": "Добавить…"
  },
  "panels/mobile_throttling/ThrottlingManager.ts | addS": {
    "message": "Добавить {PH1}"
  },
  "panels/mobile_throttling/ThrottlingManager.ts | cpuThrottling": {
    "message": "Ограничение производительности ЦП"
  },
  "panels/mobile_throttling/ThrottlingManager.ts | cpuThrottlingIsEnabled": {
    "message": "Ограничение процессора включено"
  },
  "panels/mobile_throttling/ThrottlingManager.ts | dSlowdown": {
    "message": "Замедление {PH1}×"
  },
  "panels/mobile_throttling/ThrottlingManager.ts | excessConcurrency": {
    "message": "Превышение значения по умолчанию может снизить производительность системы"
  },
  "panels/mobile_throttling/ThrottlingManager.ts | forceDisconnectedFromNetwork": {
    "message": "Принудительно отключено от сети"
  },
  "panels/mobile_throttling/ThrottlingManager.ts | hardwareConcurrency": {
    "message": "Аппаратный параллелизм"
  },
  "panels/mobile_throttling/ThrottlingManager.ts | hardwareConcurrencyIsEnabled": {
    "message": "Включено переопределение аппаратного параллелизма"
  },
  "panels/mobile_throttling/ThrottlingManager.ts | hardwareConcurrencySettingTooltip": {
    "message": "Переопределить значение, указанное параметром navigator.hardwareConcurrency на этой странице"
  },
  "panels/mobile_throttling/ThrottlingManager.ts | noThrottling": {
    "message": "Без ограничения"
  },
  "panels/mobile_throttling/ThrottlingManager.ts | offline": {
    "message": "Офлайн"
  },
  "panels/mobile_throttling/ThrottlingManager.ts | resetConcurrency": {
    "message": "Сброс к значению по умолчанию"
  },
  "panels/mobile_throttling/ThrottlingManager.ts | sS": {
    "message": "{PH1}: {PH2}"
  },
  "panels/mobile_throttling/ThrottlingManager.ts | throttling": {
    "message": "Ограничение"
  },
  "panels/mobile_throttling/ThrottlingPresets.ts | checkNetworkAndPerformancePanels": {
    "message": "Отметить панели \"Сеть\" и \"Производительность\""
  },
  "panels/mobile_throttling/ThrottlingPresets.ts | custom": {
    "message": "Свои настройки"
  },
  "panels/mobile_throttling/ThrottlingPresets.ts | fastGXCpuSlowdown": {
    "message": "Быстрая 3G-сеть и 4-кратное замедление процессора"
  },
  "panels/mobile_throttling/ThrottlingPresets.ts | lowendMobile": {
    "message": "Низкопроизводительный мобильный телефон"
  },
  "panels/mobile_throttling/ThrottlingPresets.ts | midtierMobile": {
    "message": "Мобильное устройство среднего сегмента"
  },
  "panels/mobile_throttling/ThrottlingPresets.ts | noInternetConnectivity": {
    "message": "Нет подключения к Сети"
  },
  "panels/mobile_throttling/ThrottlingPresets.ts | noThrottling": {
    "message": "Без ограничения"
  },
  "panels/mobile_throttling/ThrottlingPresets.ts | slowGXCpuSlowdown": {
    "message": "Медленная 3G-сеть и 6-кратное замедление процессора"
  },
  "panels/mobile_throttling/ThrottlingSettingsTab.ts | addCustomProfile": {
    "message": "Добавить специальный профиль…"
  },
  "panels/mobile_throttling/ThrottlingSettingsTab.ts | dms": {
    "message": "{PH1} ms"
  },
  "panels/mobile_throttling/ThrottlingSettingsTab.ts | download": {
    "message": "Скачать"
  },
  "panels/mobile_throttling/ThrottlingSettingsTab.ts | dskbits": {
    "message": "{PH1} kbit/s"
  },
  "panels/mobile_throttling/ThrottlingSettingsTab.ts | fsmbits": {
    "message": "{PH1} Mbit/s"
  },
  "panels/mobile_throttling/ThrottlingSettingsTab.ts | latency": {
    "message": "Задержка"
  },
  "panels/mobile_throttling/ThrottlingSettingsTab.ts | latencyMustBeAnIntegerBetweenSms": {
    "message": "Значение задержки должно быть целым числом от {PH1} ms до {PH2} ms включительно."
  },
  "panels/mobile_throttling/ThrottlingSettingsTab.ts | networkThrottlingProfiles": {
    "message": "Профили ограничения пропускной способности сети"
  },
  "panels/mobile_throttling/ThrottlingSettingsTab.ts | optional": {
    "message": "необязательно"
  },
  "panels/mobile_throttling/ThrottlingSettingsTab.ts | profileName": {
    "message": "Название профиля"
  },
  "panels/mobile_throttling/ThrottlingSettingsTab.ts | profileNameCharactersLengthMust": {
    "message": "Допустимое число символов в имени профиля: 1–{PH1}."
  },
  "panels/mobile_throttling/ThrottlingSettingsTab.ts | sMustBeANumberBetweenSkbsToSkbs": {
    "message": "Значение \"{PH1}\" должно находиться в диапазоне от {PH2} kbit/s до {PH3} kbit/s включительно."
  },
  "panels/mobile_throttling/ThrottlingSettingsTab.ts | upload": {
    "message": "Загрузить"
  },
  "panels/mobile_throttling/mobile_throttling-meta.ts | device": {
    "message": "устройство"
  },
  "panels/mobile_throttling/mobile_throttling-meta.ts | enableFastGThrottling": {
    "message": "Ограничить быструю сеть 3G"
  },
  "panels/mobile_throttling/mobile_throttling-meta.ts | enableSlowGThrottling": {
    "message": "Ограничить медленную сеть 3G"
  },
  "panels/mobile_throttling/mobile_throttling-meta.ts | goOffline": {
    "message": "Перейти в автономный режим"
  },
  "panels/mobile_throttling/mobile_throttling-meta.ts | goOnline": {
    "message": "Интернет-режим"
  },
  "panels/mobile_throttling/mobile_throttling-meta.ts | showThrottling": {
    "message": "Показать \"Ограничение\""
  },
  "panels/mobile_throttling/mobile_throttling-meta.ts | throttling": {
    "message": "Ограничение"
  },
  "panels/mobile_throttling/mobile_throttling-meta.ts | throttlingTag": {
    "message": "ограничение пропускной способности"
  },
  "panels/network/BinaryResourceView.ts | binaryViewType": {
    "message": "Двоичный тип просмотра"
  },
  "panels/network/BinaryResourceView.ts | copiedAsBase": {
    "message": "Скопировано как Base64."
  },
  "panels/network/BinaryResourceView.ts | copiedAsHex": {
    "message": "Скопировано как Hex."
  },
  "panels/network/BinaryResourceView.ts | copiedAsUtf": {
    "message": "Скопировано как UTF-8"
  },
  "panels/network/BinaryResourceView.ts | copyAsBase": {
    "message": "Копировать как Base64"
  },
  "panels/network/BinaryResourceView.ts | copyAsHex": {
    "message": "Копировать как Hex"
  },
  "panels/network/BinaryResourceView.ts | copyAsUtf": {
    "message": "Копировать как UTF-8"
  },
  "panels/network/BinaryResourceView.ts | copyToClipboard": {
    "message": "Копировать в буфер обмена"
  },
  "panels/network/BinaryResourceView.ts | hexViewer": {
    "message": "Hex Viewer"
  },
  "panels/network/BlockedURLsPane.ts | addNetworkRequestBlockingPattern": {
    "message": "Добавить шаблон блокировки сетевых запросов"
  },
  "panels/network/BlockedURLsPane.ts | addPattern": {
    "message": "Добавить шаблон"
  },
  "panels/network/BlockedURLsPane.ts | dBlocked": {
    "message": "Заблокировано: {PH1}"
  },
  "panels/network/BlockedURLsPane.ts | enableNetworkRequestBlocking": {
    "message": "Включить блокировку сетевых запросов"
  },
  "panels/network/BlockedURLsPane.ts | itemDeleted": {
    "message": "Пункт списка успешно удален"
  },
  "panels/network/BlockedURLsPane.ts | networkRequestsAreNotBlockedS": {
    "message": "Сетевые запросы не заблокированы. {PH1}"
  },
  "panels/network/BlockedURLsPane.ts | patternAlreadyExists": {
    "message": "Шаблон уже используется."
  },
  "panels/network/BlockedURLsPane.ts | patternInputCannotBeEmpty": {
    "message": "Шаблон не может быть пустым."
  },
  "panels/network/BlockedURLsPane.ts | textPatternToBlockMatching": {
    "message": "Текстовый шаблон для блокировки совпадающих запросов; в качестве подстановочного знака используйте \"*\""
  },
  "panels/network/EventSourceMessagesView.ts | copyMessage": {
    "message": "Копировать сообщение"
  },
  "panels/network/EventSourceMessagesView.ts | data": {
    "message": "Wi-Fi и мобильный интернет"
  },
  "panels/network/EventSourceMessagesView.ts | eventSource": {
    "message": "Источник события"
  },
  "panels/network/EventSourceMessagesView.ts | id": {
    "message": "Идентификатор"
  },
  "panels/network/EventSourceMessagesView.ts | time": {
    "message": "Время"
  },
  "panels/network/EventSourceMessagesView.ts | type": {
    "message": "Тип"
  },
  "panels/network/NetworkConfigView.ts | acceptedEncoding": {
    "message": "Разрешенные заголовки Content-Encoding"
  },
  "panels/network/NetworkConfigView.ts | caching": {
    "message": "Кеширование"
  },
  "panels/network/NetworkConfigView.ts | clientHintsStatusText": {
    "message": "Агент пользователя обновлен"
  },
  "panels/network/NetworkConfigView.ts | custom": {
    "message": "Настроить…"
  },
  "panels/network/NetworkConfigView.ts | customUserAgentFieldIsRequired": {
    "message": "Требуется настраиваемое поле агента пользователя."
  },
  "panels/network/NetworkConfigView.ts | disableCache": {
    "message": "Отключить кеш"
  },
  "panels/network/NetworkConfigView.ts | enterACustomUserAgent": {
    "message": "Укажите собственный агент пользователя"
  },
  "panels/network/NetworkConfigView.ts | networkConditionsPanelShown": {
    "message": "Показаны данные о состоянии сети"
  },
  "panels/network/NetworkConfigView.ts | networkThrottling": {
    "message": "Ограничение пропускной способности сети"
  },
  "panels/network/NetworkConfigView.ts | selectAutomatically": {
    "message": "Использовать настройки браузера по умолчанию"
  },
  "panels/network/NetworkConfigView.ts | userAgent": {
    "message": "Агент пользователя"
  },
  "panels/network/NetworkDataGridNode.ts | alternativeJobWonRace": {
    "message": "Браузер Chrome использовал для соединения протокол HTTP/3, определенный заголовком Alt-Svc, так как соединение с помощью этой версии HTTP было установлено раньше, чем посредством других"
  },
  "panels/network/NetworkDataGridNode.ts | alternativeJobWonWithoutRace": {
    "message": "Браузер Chrome установил соединение по протоколу HTTP/3, определенному заголовком Alt-Svc, и не пытался использовать для соединения другие версии HTTP"
  },
  "panels/network/NetworkDataGridNode.ts | blockedTooltip": {
    "message": "Запрос заблокирован из-за недопустимых заголовков ответа. Нажмите, чтобы посмотреть заголовки."
  },
  "panels/network/NetworkDataGridNode.ts | blockeds": {
    "message": "(заблокировано: {PH1})"
  },
  "panels/network/NetworkDataGridNode.ts | broken": {
    "message": "Браузер Chrome не пытался установить соединение по протоколу HTTP/3, поскольку оно было помечено как нерабочее"
  },
  "panels/network/NetworkDataGridNode.ts | canceled": {
    "message": "(отменено)"
  },
  "panels/network/NetworkDataGridNode.ts | corsError": {
    "message": "Ошибка CORS"
  },
  "panels/network/NetworkDataGridNode.ts | crossoriginResourceSharingErrorS": {
    "message": "Ошибка совместного использования ресурсов между разными источниками: {PH1}"
  },
  "panels/network/NetworkDataGridNode.ts | csp": {
    "message": "CSP"
  },
  "panels/network/NetworkDataGridNode.ts | data": {
    "message": "(Wi-Fi и мобильный интернет)"
  },
  "panels/network/NetworkDataGridNode.ts | devtools": {
    "message": "инструменты разработчика"
  },
  "panels/network/NetworkDataGridNode.ts | diskCache": {
    "message": "(кеш диска)"
  },
  "panels/network/NetworkDataGridNode.ts | dnsAlpnH3JobWonRace": {
    "message": "Браузер Chrome использовал для соединения протокол HTTP/3, так как DNS record содержит указание о поддержке HTTP/3. Соединение с помощью этой версии HTTP было установлено раньше, чем посредством других."
  },
  "panels/network/NetworkDataGridNode.ts | dnsAlpnH3JobWonWithoutRace": {
    "message": "Браузер Chrome установил соединение по протоколу HTTP/3, так как DNS record содержит указание о поддержке HTTP/3, и не пытался использовать другие версии HTTP"
  },
  "panels/network/NetworkDataGridNode.ts | failed": {
    "message": "(ошибка)"
  },
  "panels/network/NetworkDataGridNode.ts | finished": {
    "message": "Завершено"
  },
  "panels/network/NetworkDataGridNode.ts | initialPriorityToolTip": {
    "message": "{PH1}, начальный приоритет: {PH2}"
  },
  "panels/network/NetworkDataGridNode.ts | level": {
    "message": "уровень 1"
  },
  "panels/network/NetworkDataGridNode.ts | mainJobWonRace": {
    "message": "Браузер Chrome использовал этот протокол, так как соединение по нему было установлено раньше, чем по HTTP/3"
  },
  "panels/network/NetworkDataGridNode.ts | mappingMissing": {
    "message": "Браузер Chrome не использовал альтернативную версию протокола HTTP, так как на момент отправки запроса информация об альтернативных протоколах отсутствовала, несмотря на то, что ответ содержал заголовок Alt-Svc"
  },
  "panels/network/NetworkDataGridNode.ts | matchedToServiceWorkerRouter": {
    "message": "Соответствие: ServiceWorker router {PH1}. Размер ресурса: {PH2}."
  },
  "panels/network/NetworkDataGridNode.ts | memoryCache": {
    "message": "(кеш памяти)"
  },
  "panels/network/NetworkDataGridNode.ts | origin": {
    "message": "источник"
  },
  "panels/network/NetworkDataGridNode.ts | other": {
    "message": "другое"
  },
  "panels/network/NetworkDataGridNode.ts | otherC": {
    "message": "Другое"
  },
  "panels/network/NetworkDataGridNode.ts | parser": {
    "message": "Синтаксический анализатор"
  },
  "panels/network/NetworkDataGridNode.ts | pending": {
    "message": "Ожидание"
  },
  "panels/network/NetworkDataGridNode.ts | pendingq": {
    "message": "(ожидает)"
  },
  "panels/network/NetworkDataGridNode.ts | prefetchCache": {
    "message": "(кеш предзагрузки)"
  },
  "panels/network/NetworkDataGridNode.ts | preflight": {
    "message": "Предварительный процесс"
  },
  "panels/network/NetworkDataGridNode.ts | preload": {
    "message": "Предварительная загрузка"
  },
  "panels/network/NetworkDataGridNode.ts | push": {
    "message": "Транслировать/ "
  },
  "panels/network/NetworkDataGridNode.ts | redirect": {
    "message": "Переадресация"
  },
  "panels/network/NetworkDataGridNode.ts | requestContentHeadersOverridden": {
    "message": "Содержимое и заголовки запроса переопределены"
  },
  "panels/network/NetworkDataGridNode.ts | requestContentOverridden": {
    "message": "Запрошенный контент переопределен"
  },
  "panels/network/NetworkDataGridNode.ts | requestHeadersOverridden": {
    "message": "Заголовки запроса переопределены"
  },
  "panels/network/NetworkDataGridNode.ts | sPreflight": {
    "message": "{PH1} + подготовка"
  },
  "panels/network/NetworkDataGridNode.ts | script": {
    "message": "Скрипт"
  },
  "panels/network/NetworkDataGridNode.ts | selectPreflightRequest": {
    "message": "Выберите запрос предварительного процесса"
  },
  "panels/network/NetworkDataGridNode.ts | selectTheRequestThatTriggered": {
    "message": "Выберите запрос, который запустил этот предварительный процесс"
  },
  "panels/network/NetworkDataGridNode.ts | servedFromDiskCacheResourceSizeS": {
    "message": "Источник: кеш диска, размер ресурса: {PH1}"
  },
  "panels/network/NetworkDataGridNode.ts | servedFromMemoryCacheResource": {
    "message": "Источник: кеш памяти, размер ресурса: {PH1}"
  },
  "panels/network/NetworkDataGridNode.ts | servedFromPrefetchCacheResource": {
    "message": "Взято из предзагруженного кеша, размер ресурса: {PH1}"
  },
  "panels/network/NetworkDataGridNode.ts | servedFromServiceWorkerResource": {
    "message": "Источник: ServiceWorker, размер ресурса: {PH1}"
  },
  "panels/network/NetworkDataGridNode.ts | servedFromSignedHttpExchange": {
    "message": "Источник: Signed HTTP Exchange, размер ресурса: {PH1}"
  },
  "panels/network/NetworkDataGridNode.ts | servedFromWebBundle": {
    "message": "Показано с Web Bundle (размер ресурса: {PH1})"
  },
  "panels/network/NetworkDataGridNode.ts | serviceWorker": {
    "message": "(ServiceWorker)"
  },
  "panels/network/NetworkDataGridNode.ts | signedexchange": {
    "message": "signed-exchange"
  },
  "panels/network/NetworkDataGridNode.ts | thirdPartyPhaseout": {
    "message": "Файлы cookie для этого запроса заблокированы из-за постепенного отключения сторонних файлов cookie. Подробная информация доступна на панели \"Проблемы\"."
  },
  "panels/network/NetworkDataGridNode.ts | timeSubtitleTooltipText": {
    "message": "Задержка (время получения ответа - время отправки запроса)"
  },
  "panels/network/NetworkDataGridNode.ts | unknown": {
    "message": "(неизвестно)"
  },
  "panels/network/NetworkDataGridNode.ts | unknownExplanation": {
    "message": "Невозможно показать здесь статус запроса, так как страница, которая его отправила, была выгружена во время передачи запроса. Чтобы включить запись сетевого журнала и посмотреть всю информацию о запросе, используйте инструмент chrome://net-export."
  },
  "panels/network/NetworkDataGridNode.ts | webBundle": {
    "message": "(Web Bundle)"
  },
  "panels/network/NetworkDataGridNode.ts | webBundleError": {
    "message": "Ошибка Web Bundle"
  },
  "panels/network/NetworkDataGridNode.ts | webBundleInnerRequest": {
    "message": "Показано с Web Bundle"
  },
  "panels/network/NetworkItemView.ts | containsOverriddenHeaders": {
    "message": "Этот ответ содержит заголовки, которые переопределены с помощью инструментов разработчика"
  },
  "panels/network/NetworkItemView.ts | cookies": {
    "message": "Файлы cookie"
  },
  "panels/network/NetworkItemView.ts | eventstream": {
    "message": "EventStream"
  },
  "panels/network/NetworkItemView.ts | headers": {
    "message": "Заголовки"
  },
  "panels/network/NetworkItemView.ts | initiator": {
    "message": "Инициатор"
  },
  "panels/network/NetworkItemView.ts | messages": {
    "message": "Сообщения"
  },
  "panels/network/NetworkItemView.ts | payload": {
    "message": "Полезная нагрузка"
  },
  "panels/network/NetworkItemView.ts | preview": {
    "message": "Предварительный просмотр"
  },
  "panels/network/NetworkItemView.ts | rawResponseData": {
    "message": "Необработанные данные ответа"
  },
  "panels/network/NetworkItemView.ts | requestAndResponseCookies": {
    "message": "Файлы cookie запросов и ответов"
  },
  "panels/network/NetworkItemView.ts | requestAndResponseTimeline": {
    "message": "Хронология запроса и ответа"
  },
  "panels/network/NetworkItemView.ts | requestInitiatorCallStack": {
    "message": "Запрос стека вызовов инициатора"
  },
  "panels/network/NetworkItemView.ts | response": {
    "message": "Ответ"
  },
  "panels/network/NetworkItemView.ts | responseIsOverridden": {
    "message": "Этот ответ переопределен с помощью инструментов разработчика"
  },
  "panels/network/NetworkItemView.ts | responsePreview": {
    "message": "Просмотр ответа"
  },
  "panels/network/NetworkItemView.ts | signedexchangeError": {
    "message": "Ошибка SignedExchange"
  },
  "panels/network/NetworkItemView.ts | thirdPartyPhaseout": {
    "message": "Файлы cookie заблокированы из-за постепенного отключения сторонних файлов cookie"
  },
  "panels/network/NetworkItemView.ts | timing": {
    "message": "Время"
  },
  "panels/network/NetworkItemView.ts | trustTokenOperationDetails": {
    "message": "Информация о личных токенах состояния"
  },
  "panels/network/NetworkItemView.ts | trustTokens": {
    "message": "Личные токены состояния"
  },
  "panels/network/NetworkItemView.ts | websocketMessages": {
    "message": "Сообщения WebSocket"
  },
  "panels/network/NetworkLogView.ts | allStrings": {
    "message": "Все"
  },
  "panels/network/NetworkLogView.ts | areYouSureYouWantToClearBrowser": {
    "message": "Очистить кеш браузера?"
  },
  "panels/network/NetworkLogView.ts | areYouSureYouWantToClearBrowserCookies": {
    "message": "Вы действительно хотите удалить файлы cookie браузера?"
  },
  "panels/network/NetworkLogView.ts | blockRequestDomain": {
    "message": "Заблокировать запрашивающий домен"
  },
  "panels/network/NetworkLogView.ts | blockRequestUrl": {
    "message": "Заблокировать URL запроса"
  },
  "panels/network/NetworkLogView.ts | blockedRequests": {
    "message": "Заблокированные запросы"
  },
  "panels/network/NetworkLogView.ts | chromeExtensions": {
    "message": "Скрыть URL расширений"
  },
  "panels/network/NetworkLogView.ts | clearBrowserCache": {
    "message": "Очистить кеш браузера"
  },
  "panels/network/NetworkLogView.ts | clearBrowserCookies": {
    "message": "Удалить файлы cookie браузера"
  },
  "panels/network/NetworkLogView.ts | copy": {
    "message": "Копировать"
  },
  "panels/network/NetworkLogView.ts | copyAllAsCurl": {
    "message": "Копировать все как cURL"
  },
  "panels/network/NetworkLogView.ts | copyAllAsCurlBash": {
    "message": "Копировать все как cURL (bash)"
  },
  "panels/network/NetworkLogView.ts | copyAllAsCurlCmd": {
    "message": "Копировать все как cURL (cmd)"
  },
  "panels/network/NetworkLogView.ts | copyAllAsFetch": {
    "message": "Копировать все как fetch"
  },
  "panels/network/NetworkLogView.ts | copyAllAsHar": {
    "message": "Копировать все как HAR"
  },
  "panels/network/NetworkLogView.ts | copyAllAsNodejsFetch": {
    "message": "Копировать все как fetch (Node.js)"
  },
  "panels/network/NetworkLogView.ts | copyAllAsPowershell": {
    "message": "Копировать все как PowerShell"
  },
  "panels/network/NetworkLogView.ts | copyAllURLs": {
    "message": "Скопировать все URL"
  },
  "panels/network/NetworkLogView.ts | copyAsCurl": {
    "message": "Копировать как cURL"
  },
  "panels/network/NetworkLogView.ts | copyAsCurlBash": {
    "message": "Копировать как cURL (bash)"
  },
  "panels/network/NetworkLogView.ts | copyAsCurlCmd": {
    "message": "Копировать как cURL (cmd)"
  },
  "panels/network/NetworkLogView.ts | copyAsFetch": {
    "message": "Копировать как fetch"
  },
  "panels/network/NetworkLogView.ts | copyAsNodejsFetch": {
    "message": "Копировать как fetch (Node.js)"
  },
  "panels/network/NetworkLogView.ts | copyAsPowershell": {
    "message": "Копировать как PowerShell"
  },
  "panels/network/NetworkLogView.ts | copyRequestHeaders": {
    "message": "Копировать заголовки запроса"
  },
  "panels/network/NetworkLogView.ts | copyResponse": {
    "message": "Копировать ответ"
  },
  "panels/network/NetworkLogView.ts | copyResponseHeaders": {
    "message": "Копировать заголовки ответов"
  },
  "panels/network/NetworkLogView.ts | copyStacktrace": {
    "message": "Копировать трассировку стека"
  },
  "panels/network/NetworkLogView.ts | copyURL": {
    "message": "Скопировать URL"
  },
  "panels/network/NetworkLogView.ts | domcontentloadedS": {
    "message": "DOMContentLoaded: {PH1}"
  },
  "panels/network/NetworkLogView.ts | dropHarFilesHere": {
    "message": "Перетащите HAR-файлы сюда"
  },
  "panels/network/NetworkLogView.ts | finishS": {
    "message": "Завершено: {PH1}"
  },
  "panels/network/NetworkLogView.ts | hasBlockedCookies": {
    "message": "Заблокированные файлы cookie ответов"
  },
  "panels/network/NetworkLogView.ts | hideChromeExtension": {
    "message": "Скрыть URL расширений (chrome-extension://)"
  },
  "panels/network/NetworkLogView.ts | hideDataUrls": {
    "message": "Скрыть URL данных"
  },
  "panels/network/NetworkLogView.ts | hidesDataAndBlobUrls": {
    "message": "Скрыть URL (data: и blob:)"
  },
  "panels/network/NetworkLogView.ts | invertFilter": {
    "message": "Инвертировать"
  },
  "panels/network/NetworkLogView.ts | invertsFilter": {
    "message": "Инвертировать фильтр поиска"
  },
  "panels/network/NetworkLogView.ts | learnMore": {
    "message": "Подробнее…"
  },
  "panels/network/NetworkLogView.ts | loadS": {
    "message": "Загрузить: {PH1}"
  },
  "panels/network/NetworkLogView.ts | moreFilters": {
    "message": "Ещё фильтры"
  },
  "panels/network/NetworkLogView.ts | networkDataAvailable": {
    "message": "Доступны данные сети"
  },
  "panels/network/NetworkLogView.ts | onlyShowBlockedRequests": {
    "message": "Показывать только заблокированные запросы"
  },
  "panels/network/NetworkLogView.ts | onlyShowRequestsWithBlockedCookies": {
    "message": "Показывать только запросы с заблокированными файлами cookie ответов"
  },
  "panels/network/NetworkLogView.ts | onlyShowThirdPartyRequests": {
    "message": "Показывать только те запросы, источники которых отличаются от источника страницы"
  },
  "panels/network/NetworkLogView.ts | overTwoTypesSelected": {
    "message": "{PH1}, {PH2}..."
  },
  "panels/network/NetworkLogView.ts | overrideHeaders": {
    "message": "Переопределить заголовки"
  },
  "panels/network/NetworkLogView.ts | performARequestOrHitSToRecordThe": {
    "message": "Чтобы записать перезагрузку, выполните запрос или нажмите {PH1}."
  },
  "panels/network/NetworkLogView.ts | recordToDisplayNetworkActivity": {
    "message": "Чтобы показать действия в сети, запишите сетевой журнал ({PH1})."
  },
  "panels/network/NetworkLogView.ts | recordingNetworkActivity": {
    "message": "Запись действий в сети…"
  },
  "panels/network/NetworkLogView.ts | replayXhr": {
    "message": "Повторить запрос XHR"
  },
  "panels/network/NetworkLogView.ts | requestTypes": {
    "message": "Типы запросов"
  },
  "panels/network/NetworkLogView.ts | requestTypesToInclude": {
    "message": "Типы запросов, которые нужно включить"
  },
  "panels/network/NetworkLogView.ts | requestTypesTooltip": {
    "message": "Фильтровать запросы по типу"
  },
  "panels/network/NetworkLogView.ts | sBResourcesLoadedByThePage": {
    "message": "{PH1} Б ресурсов загружено на странице"
  },
  "panels/network/NetworkLogView.ts | sBSBResourcesLoadedByThePage": {
    "message": "{PH1} Б/{PH2} Б ресурсов загружено на странице"
  },
  "panels/network/NetworkLogView.ts | sBSBTransferredOverNetwork": {
    "message": "{PH1} Б / {PH2} Б передано по сети"
  },
  "panels/network/NetworkLogView.ts | sBTransferredOverNetwork": {
    "message": "По сети передано {PH1} Б."
  },
  "panels/network/NetworkLogView.ts | sRequests": {
    "message": "Запросы: {PH1}"
  },
  "panels/network/NetworkLogView.ts | sResources": {
    "message": "Ресурсы: {PH1}"
  },
  "panels/network/NetworkLogView.ts | sSRequests": {
    "message": "Запросы: {PH1}/{PH2}"
  },
  "panels/network/NetworkLogView.ts | sSResources": {
    "message": "Ресурсы {PH1}/{PH2}"
  },
  "panels/network/NetworkLogView.ts | sSTransferred": {
    "message": "Перенесено {PH1}/{PH2}"
  },
  "panels/network/NetworkLogView.ts | sTransferred": {
    "message": "Перенесено: {PH1}."
  },
  "panels/network/NetworkLogView.ts | saveAllAsHarWithContent": {
    "message": "Сохранить все как HAR с контентом"
  },
  "panels/network/NetworkLogView.ts | showOnly": {
    "message": "Показывать только определенные типы ({PH1})"
  },
  "panels/network/NetworkLogView.ts | showOnlyHideRequests": {
    "message": "Показать только/скрыть запросы"
  },
  "panels/network/NetworkLogView.ts | thirdParty": {
    "message": "Сторонние запросы"
  },
  "panels/network/NetworkLogView.ts | twoTypesSelected": {
    "message": "{PH1}, {PH2}"
  },
  "panels/network/NetworkLogView.ts | unblockS": {
    "message": "Разблокировать {PH1}"
  },
  "panels/network/NetworkLogViewColumns.ts | connectionId": {
    "message": "Идентификатор подключения"
  },
  "panels/network/NetworkLogViewColumns.ts | content": {
    "message": "Контент"
  },
  "panels/network/NetworkLogViewColumns.ts | cookies": {
    "message": "Файлы cookie"
  },
  "panels/network/NetworkLogViewColumns.ts | domain": {
    "message": "Домен"
  },
  "panels/network/NetworkLogViewColumns.ts | endTime": {
    "message": "Время окончания"
  },
  "panels/network/NetworkLogViewColumns.ts | hasOverrides": {
    "message": "С переопределением"
  },
  "panels/network/NetworkLogViewColumns.ts | initiator": {
    "message": "Инициатор"
  },
  "panels/network/NetworkLogViewColumns.ts | initiatorAddressSpace": {
    "message": "Адресное пространство инициатора"
  },
  "panels/network/NetworkLogViewColumns.ts | latency": {
    "message": "Задержка"
  },
  "panels/network/NetworkLogViewColumns.ts | manageHeaderColumns": {
    "message": "Управление столбцами заголовка…"
  },
  "panels/network/NetworkLogViewColumns.ts | method": {
    "message": "Метод"
  },
  "panels/network/NetworkLogViewColumns.ts | name": {
    "message": "Название"
  },
  "panels/network/NetworkLogViewColumns.ts | networkLog": {
    "message": "Сетевой журнал"
  },
  "panels/network/NetworkLogViewColumns.ts | path": {
    "message": "Путь"
  },
  "panels/network/NetworkLogViewColumns.ts | priority": {
    "message": "Приоритет"
  },
  "panels/network/NetworkLogViewColumns.ts | protocol": {
    "message": "Протокол"
  },
  "panels/network/NetworkLogViewColumns.ts | remoteAddress": {
    "message": "Удаленный адрес"
  },
  "panels/network/NetworkLogViewColumns.ts | remoteAddressSpace": {
    "message": "Удаленное адресное пространство"
  },
  "panels/network/NetworkLogViewColumns.ts | responseHeaders": {
    "message": "Заголовки ответов"
  },
  "panels/network/NetworkLogViewColumns.ts | responseTime": {
    "message": "Время ответа"
  },
  "panels/network/NetworkLogViewColumns.ts | scheme": {
    "message": "Схема"
  },
  "panels/network/NetworkLogViewColumns.ts | setCookies": {
    "message": "Настроить файлы cookie"
  },
  "panels/network/NetworkLogViewColumns.ts | size": {
    "message": "Размер"
  },
  "panels/network/NetworkLogViewColumns.ts | startTime": {
    "message": "Время начала"
  },
  "panels/network/NetworkLogViewColumns.ts | status": {
    "message": "Статус"
  },
  "panels/network/NetworkLogViewColumns.ts | text": {
    "message": "Текст"
  },
  "panels/network/NetworkLogViewColumns.ts | time": {
    "message": "Время"
  },
  "panels/network/NetworkLogViewColumns.ts | totalDuration": {
    "message": "Общая продолжительность"
  },
  "panels/network/NetworkLogViewColumns.ts | type": {
    "message": "Тип"
  },
  "panels/network/NetworkLogViewColumns.ts | url": {
    "message": "URL"
  },
  "panels/network/NetworkLogViewColumns.ts | waterfall": {
    "message": "Каскад загрузки"
  },
  "panels/network/NetworkManageCustomHeadersView.ts | addCustomHeader": {
    "message": "Добавить собственный заголовок…"
  },
  "panels/network/NetworkManageCustomHeadersView.ts | headerName": {
    "message": "Название заголовка"
  },
  "panels/network/NetworkManageCustomHeadersView.ts | manageHeaderColumns": {
    "message": "Управление заголовками столбцов"
  },
  "panels/network/NetworkManageCustomHeadersView.ts | noCustomHeaders": {
    "message": "Нет специальных заголовков"
  },
  "panels/network/NetworkPanel.ts | captureScreenshots": {
    "message": "Скриншот"
  },
  "panels/network/NetworkPanel.ts | captureScreenshotsWhenLoadingA": {
    "message": "Делать скриншот при загрузке страницы"
  },
  "panels/network/NetworkPanel.ts | close": {
    "message": "Закрыть"
  },
  "panels/network/NetworkPanel.ts | disableCache": {
    "message": "Отключить кеш"
  },
  "panels/network/NetworkPanel.ts | disableCacheWhileDevtoolsIsOpen": {
    "message": "Отключить кеш (пока открыты инструменты разработчика)"
  },
  "panels/network/NetworkPanel.ts | doNotClearLogOnPageReload": {
    "message": "Не очищать журнал при перезагрузке страницы и переходе между страницами"
  },
  "panels/network/NetworkPanel.ts | exportHar": {
    "message": "Экспорт HAR…"
  },
  "panels/network/NetworkPanel.ts | fetchingFrames": {
    "message": "Загрузка фреймов…"
  },
  "panels/network/NetworkPanel.ts | groupByFrame": {
    "message": "Группировка по фреймам"
  },
  "panels/network/NetworkPanel.ts | groupRequestsByTopLevelRequest": {
    "message": "Сгруппировать запросы по фрейму с запросом высшего уровня"
  },
  "panels/network/NetworkPanel.ts | hitSToReloadAndCaptureFilmstrip": {
    "message": "Нажмите {PH1}, чтобы перезагрузить ленту и сделать ее снимок."
  },
  "panels/network/NetworkPanel.ts | importHarFile": {
    "message": "Импортировать файл HAR"
  },
  "panels/network/NetworkPanel.ts | moreNetworkConditions": {
    "message": "Ещё условия работы сети"
  },
  "panels/network/NetworkPanel.ts | networkSettings": {
    "message": "Настройки сети"
  },
  "panels/network/NetworkPanel.ts | preserveLog": {
    "message": "Сохранять журнал"
  },
  "panels/network/NetworkPanel.ts | recordingFrames": {
    "message": "Запись фреймов…"
  },
  "panels/network/NetworkPanel.ts | revealInNetworkPanel": {
    "message": "Открыть на панели \"Сеть\""
  },
  "panels/network/NetworkPanel.ts | search": {
    "message": "Поиск"
  },
  "panels/network/NetworkPanel.ts | showMoreInformationInRequestRows": {
    "message": "Показать больше информации в строках запроса"
  },
  "panels/network/NetworkPanel.ts | showOverview": {
    "message": "Обзор"
  },
  "panels/network/NetworkPanel.ts | showOverviewOfNetworkRequests": {
    "message": "Показать обзор сетевых запросов"
  },
  "panels/network/NetworkPanel.ts | throttling": {
    "message": "Ограничение"
  },
  "panels/network/NetworkPanel.ts | useLargeRequestRows": {
    "message": "Большие строки запросов"
  },
  "panels/network/NetworkSearchScope.ts | url": {
    "message": "URL"
  },
  "panels/network/NetworkTimeCalculator.ts | sDownload": {
    "message": "Скачивание: {PH1}"
  },
  "panels/network/NetworkTimeCalculator.ts | sFromCache": {
    "message": "{PH1} (из кеша)"
  },
  "panels/network/NetworkTimeCalculator.ts | sFromServiceworker": {
    "message": "{PH1} (источник: ServiceWorker)"
  },
  "panels/network/NetworkTimeCalculator.ts | sLatency": {
    "message": "Задержка: {PH1}"
  },
  "panels/network/NetworkTimeCalculator.ts | sLatencySDownloadSTotal": {
    "message": "Задержка: {PH1}, загрузка: {PH2} (всего: {PH3})"
  },
  "panels/network/RequestCookiesView.ts | cookiesThatWereReceivedFromThe": {
    "message": "Файлы cookie, которые были получены от сервера в заголовке ответа set-cookie"
  },
  "panels/network/RequestCookiesView.ts | cookiesThatWereReceivedFromTheServer": {
    "message": "Файлы cookie, которые были получены от сервера в заголовке ответа set-cookie, но имели неверный формат"
  },
  "panels/network/RequestCookiesView.ts | cookiesThatWereSentToTheServerIn": {
    "message": "Файлы cookie, которые были отправлены на сервер в заголовке cookie запроса"
  },
  "panels/network/RequestCookiesView.ts | learnMore": {
    "message": "Подробнее…"
  },
  "panels/network/RequestCookiesView.ts | malformedResponseCookies": {
    "message": "Неверные файлы cookie ответов"
  },
  "panels/network/RequestCookiesView.ts | noRequestCookiesWereSent": {
    "message": "Файлы cookie запроса не были отправлены."
  },
  "panels/network/RequestCookiesView.ts | requestCookies": {
    "message": "Запросить файлы cookie"
  },
  "panels/network/RequestCookiesView.ts | responseCookies": {
    "message": "Файлы cookie ответов"
  },
  "panels/network/RequestCookiesView.ts | showFilteredOutRequestCookies": {
    "message": "Показать отфильтрованные файлы cookie запроса"
  },
  "panels/network/RequestCookiesView.ts | siteHasCookieInOtherPartition": {
    "message": "В другом сегменте этого сайта сохранены файлы cookie, которые не были отправлены с этим запросом. {PH1}"
  },
  "panels/network/RequestCookiesView.ts | thisRequestHasNoCookies": {
    "message": "У этого запроса нет файлов cookie."
  },
  "panels/network/RequestInitiatorView.ts | requestCallStack": {
    "message": "Запросить стек вызовов"
  },
  "panels/network/RequestInitiatorView.ts | requestInitiatorChain": {
    "message": "Цепочка инициаторов запроса"
  },
  "panels/network/RequestInitiatorView.ts | thisRequestHasNoInitiatorData": {
    "message": "У этого запроса нет данных инициатора"
  },
  "panels/network/RequestPayloadView.ts | copyValue": {
    "message": "Копировать значение"
  },
  "panels/network/RequestPayloadView.ts | empty": {
    "message": "(пусто)"
  },
  "panels/network/RequestPayloadView.ts | formData": {
    "message": "Данные форм"
  },
  "panels/network/RequestPayloadView.ts | queryStringParameters": {
    "message": "Параметры строки запроса"
  },
  "panels/network/RequestPayloadView.ts | requestPayload": {
    "message": "Запрос сведений о полезной нагрузке"
  },
  "panels/network/RequestPayloadView.ts | showMore": {
    "message": "Показать больше"
  },
  "panels/network/RequestPayloadView.ts | unableToDecodeValue": {
    "message": "(невозможно декодировать значение)"
  },
  "panels/network/RequestPayloadView.ts | viewDecoded": {
    "message": "Показать декодированные данные"
  },
  "panels/network/RequestPayloadView.ts | viewDecodedL": {
    "message": "показать декодированные данные"
  },
  "panels/network/RequestPayloadView.ts | viewParsed": {
    "message": "Посмотреть данные анализа"
  },
  "panels/network/RequestPayloadView.ts | viewParsedL": {
    "message": "посмотреть данные анализа"
  },
  "panels/network/RequestPayloadView.ts | viewSource": {
    "message": "Посмотреть источник"
  },
  "panels/network/RequestPayloadView.ts | viewSourceL": {
    "message": "посмотреть ресурс"
  },
  "panels/network/RequestPayloadView.ts | viewUrlEncoded": {
    "message": "Показать с URL-кодированием"
  },
  "panels/network/RequestPayloadView.ts | viewUrlEncodedL": {
    "message": "показать с URL-кодированием"
  },
  "panels/network/RequestPreviewView.ts | failedToLoadResponseData": {
    "message": "Не удалось загрузить данные ответа"
  },
  "panels/network/RequestPreviewView.ts | previewNotAvailable": {
    "message": "Предварительный просмотр недоступен"
  },
  "panels/network/RequestResponseView.ts | failedToLoadResponseData": {
    "message": "Не удалось загрузить данные ответа"
  },
  "panels/network/RequestResponseView.ts | thisRequestHasNoResponseData": {
    "message": "По этому запросу нет данных ответа."
  },
  "panels/network/RequestTimingView.ts | cacheStorageCacheNameS": {
    "message": "Имя хранилища кеша: {PH1}"
  },
  "panels/network/RequestTimingView.ts | cacheStorageCacheNameUnknown": {
    "message": "Имя хранилища кеша: неизвестно"
  },
  "panels/network/RequestTimingView.ts | cautionRequestIsNotFinishedYet": {
    "message": "Внимание! Запрос не завершен."
  },
  "panels/network/RequestTimingView.ts | connectionStart": {
    "message": "Начать подключение"
  },
  "panels/network/RequestTimingView.ts | contentDownload": {
    "message": "Скачивание контента"
  },
  "panels/network/RequestTimingView.ts | dnsLookup": {
    "message": "Поиск DNS"
  },
  "panels/network/RequestTimingView.ts | duration": {
    "message": "Продолжительность"
  },
  "panels/network/RequestTimingView.ts | durationC": {
    "message": "ПРОДОЛЖИТЕЛЬНОСТЬ"
  },
  "panels/network/RequestTimingView.ts | duringDevelopmentYouCanUseSToAdd": {
    "message": "Во время разработки можно использовать сайт {PH1}, чтобы добавлять статистику в серверный таймер этого запроса."
  },
  "panels/network/RequestTimingView.ts | explanation": {
    "message": "Описание"
  },
  "panels/network/RequestTimingView.ts | fallbackCode": {
    "message": "Резервный код"
  },
  "panels/network/RequestTimingView.ts | fromHttpCache": {
    "message": "Из кеша HTTP"
  },
  "panels/network/RequestTimingView.ts | initialConnection": {
    "message": "Первое подключение"
  },
  "panels/network/RequestTimingView.ts | label": {
    "message": "Элемент Label"
  },
  "panels/network/RequestTimingView.ts | networkFetch": {
    "message": "Данные получены из сети"
  },
  "panels/network/RequestTimingView.ts | originalRequest": {
    "message": "Исходный запрос"
  },
  "panels/network/RequestTimingView.ts | proxyNegotiation": {
    "message": "Согласование прокси-сервера"
  },
  "panels/network/RequestTimingView.ts | queuedAtS": {
    "message": "В очереди на {PH1}"
  },
  "panels/network/RequestTimingView.ts | queueing": {
    "message": "Очереди сообщений"
  },
  "panels/network/RequestTimingView.ts | readingPush": {
    "message": "Чтение Push"
  },
  "panels/network/RequestTimingView.ts | receivingPush": {
    "message": "Получение Push"
  },
  "panels/network/RequestTimingView.ts | requestSent": {
    "message": "Запрос отправлен"
  },
  "panels/network/RequestTimingView.ts | requestToServiceworker": {
    "message": "Запрос к ServiceWorker"
  },
  "panels/network/RequestTimingView.ts | requestresponse": {
    "message": "Запрос/ответ"
  },
  "panels/network/RequestTimingView.ts | resourceScheduling": {
    "message": "Планирование использования ресурсов"
  },
  "panels/network/RequestTimingView.ts | respondwith": {
    "message": "respondWith"
  },
  "panels/network/RequestTimingView.ts | responseReceived": {
    "message": "Получен ответ."
  },
  "panels/network/RequestTimingView.ts | retrievalTimeS": {
    "message": "Время извлечения: {PH1}"
  },
  "panels/network/RequestTimingView.ts | serverPush": {
    "message": "Отправка данных по инициативе сервера"
  },
  "panels/network/RequestTimingView.ts | serverTiming": {
    "message": "Время сервера"
  },
  "panels/network/RequestTimingView.ts | serviceworkerCacheStorage": {
    "message": "Хранилище кеша ServiceWorker"
  },
  "panels/network/RequestTimingView.ts | sourceOfResponseS": {
    "message": "Источник ответа: {PH1}"
  },
  "panels/network/RequestTimingView.ts | ssl": {
    "message": "SSL"
  },
  "panels/network/RequestTimingView.ts | stalled": {
    "message": "Остановлено"
  },
  "panels/network/RequestTimingView.ts | startedAtS": {
    "message": "Запущен в {PH1}."
  },
  "panels/network/RequestTimingView.ts | startup": {
    "message": "Запуск"
  },
  "panels/network/RequestTimingView.ts | theServerTimingApi": {
    "message": "Server Timing API"
  },
  "panels/network/RequestTimingView.ts | time": {
    "message": "ВРЕМЯ"
  },
  "panels/network/RequestTimingView.ts | total": {
    "message": "Всего"
  },
  "panels/network/RequestTimingView.ts | unknown": {
    "message": "Неизвестно"
  },
  "panels/network/RequestTimingView.ts | waitingTtfb": {
    "message": "Ожидание ответа сервера"
  },
  "panels/network/RequestTimingView.ts | waterfall": {
    "message": "Каскад загрузки"
  },
  "panels/network/ResourceWebSocketFrameView.ts | all": {
    "message": "Все"
  },
  "panels/network/ResourceWebSocketFrameView.ts | binaryMessage": {
    "message": "Двоичное сообщение"
  },
  "panels/network/ResourceWebSocketFrameView.ts | clearAll": {
    "message": "Очистить все"
  },
  "panels/network/ResourceWebSocketFrameView.ts | clearAllL": {
    "message": "Очистить все"
  },
  "panels/network/ResourceWebSocketFrameView.ts | connectionCloseMessage": {
    "message": "Сообщение, закрывающее соединение"
  },
  "panels/network/ResourceWebSocketFrameView.ts | continuationFrame": {
    "message": "Фрейм продолжения"
  },
  "panels/network/ResourceWebSocketFrameView.ts | copyMessage": {
    "message": "Копировать сообщение"
  },
  "panels/network/ResourceWebSocketFrameView.ts | copyMessageD": {
    "message": "Копировать сообщение…"
  },
  "panels/network/ResourceWebSocketFrameView.ts | data": {
    "message": "Wi-Fi и мобильный интернет"
  },
  "panels/network/ResourceWebSocketFrameView.ts | enterRegex": {
    "message": "Введите регулярное выражение, например: (web)?socket"
  },
  "panels/network/ResourceWebSocketFrameView.ts | filter": {
    "message": "Фильтр"
  },
  "panels/network/ResourceWebSocketFrameView.ts | length": {
    "message": "Длина"
  },
  "panels/network/ResourceWebSocketFrameView.ts | na": {
    "message": "Н/Д"
  },
  "panels/network/ResourceWebSocketFrameView.ts | pingMessage": {
    "message": "Сообщение Ping"
  },
  "panels/network/ResourceWebSocketFrameView.ts | pongMessage": {
    "message": "Сообщение Pong"
  },
  "panels/network/ResourceWebSocketFrameView.ts | receive": {
    "message": "Принять"
  },
  "panels/network/ResourceWebSocketFrameView.ts | sOpcodeS": {
    "message": "{PH1} (Опкод {PH2})"
  },
  "panels/network/ResourceWebSocketFrameView.ts | sOpcodeSMask": {
    "message": "{PH1} (Опкод {PH2}, маска)"
  },
  "panels/network/ResourceWebSocketFrameView.ts | selectMessageToBrowseItsContent": {
    "message": "Чтобы посмотреть содержимое сообщения, выберите его."
  },
  "panels/network/ResourceWebSocketFrameView.ts | send": {
    "message": "Отправить"
  },
  "panels/network/ResourceWebSocketFrameView.ts | textMessage": {
    "message": "Текстовое сообщение"
  },
  "panels/network/ResourceWebSocketFrameView.ts | time": {
    "message": "Время"
  },
  "panels/network/ResourceWebSocketFrameView.ts | webSocketFrame": {
    "message": "Фрейм WebSocket"
  },
  "panels/network/SignedExchangeInfoView.ts | certificate": {
    "message": "Сертификат"
  },
  "panels/network/SignedExchangeInfoView.ts | certificateSha": {
    "message": "Сертификат SHA256"
  },
  "panels/network/SignedExchangeInfoView.ts | certificateUrl": {
    "message": "URL сертификата"
  },
  "panels/network/SignedExchangeInfoView.ts | date": {
    "message": "Дата"
  },
  "panels/network/SignedExchangeInfoView.ts | errors": {
    "message": "Ошибки"
  },
  "panels/network/SignedExchangeInfoView.ts | expires": {
    "message": "Действительно до"
  },
  "panels/network/SignedExchangeInfoView.ts | headerIntegrityHash": {
    "message": "Хеш целостности заголовка"
  },
  "panels/network/SignedExchangeInfoView.ts | integrity": {
    "message": "Целостность"
  },
  "panels/network/SignedExchangeInfoView.ts | issuer": {
    "message": "Издатель"
  },
  "panels/network/SignedExchangeInfoView.ts | label": {
    "message": "Элемент Label"
  },
  "panels/network/SignedExchangeInfoView.ts | learnmore": {
    "message": "Подробнее"
  },
  "panels/network/SignedExchangeInfoView.ts | requestUrl": {
    "message": "URL запроса"
  },
  "panels/network/SignedExchangeInfoView.ts | responseCode": {
    "message": "Код ответа"
  },
  "panels/network/SignedExchangeInfoView.ts | responseHeaders": {
    "message": "Заголовки ответов"
  },
  "panels/network/SignedExchangeInfoView.ts | signature": {
    "message": "Подпись"
  },
  "panels/network/SignedExchangeInfoView.ts | signedHttpExchange": {
    "message": "Signed HTTP Exchange"
  },
  "panels/network/SignedExchangeInfoView.ts | subject": {
    "message": "Субъект"
  },
  "panels/network/SignedExchangeInfoView.ts | validFrom": {
    "message": "Действительно с"
  },
  "panels/network/SignedExchangeInfoView.ts | validUntil": {
    "message": "Действует до"
  },
  "panels/network/SignedExchangeInfoView.ts | validityUrl": {
    "message": "URL срока действия"
  },
  "panels/network/SignedExchangeInfoView.ts | viewCertificate": {
    "message": "Показать сертификат"
  },
  "panels/network/components/HeaderSectionRow.ts | activeClientExperimentVariation": {
    "message": "client experiment variation IDs: активно"
  },
  "panels/network/components/HeaderSectionRow.ts | activeClientExperimentVariationIds": {
    "message": "Активные client experiment variation IDs, которые запускают поведение со стороны сервера"
  },
  "panels/network/components/HeaderSectionRow.ts | decoded": {
    "message": "Декодировано:"
  },
  "panels/network/components/HeaderSectionRow.ts | editHeader": {
    "message": "Переопределить заголовок"
  },
  "panels/network/components/HeaderSectionRow.ts | headerNamesOnlyLetters": {
    "message": "Названия заголовков должны содержать только буквы, цифры, дефисы и символы подчеркивания."
  },
  "panels/network/components/HeaderSectionRow.ts | learnMore": {
    "message": "Подробнее…"
  },
  "panels/network/components/HeaderSectionRow.ts | learnMoreInTheIssuesTab": {
    "message": "Узнайте больше на вкладке \"Проблемы\""
  },
  "panels/network/components/HeaderSectionRow.ts | reloadPrompt": {
    "message": "Чтобы изменения вступили в силу, обновите страницу или запрос"
  },
  "panels/network/components/HeaderSectionRow.ts | removeOverride": {
    "message": "Удалить переопределение заголовка"
  },
  "panels/network/components/RequestHeaderSection.ts | learnMore": {
    "message": "Подробнее…"
  },
  "panels/network/components/RequestHeaderSection.ts | onlyProvisionalHeadersAre": {
    "message": "Доступны только предварительные заголовки, так как запрос не был отправлен через сеть, а был использован локальный кеш, который не хранит заголовки исходных запросов. Отключите кеш, чтобы видеть полные заголовки запросов."
  },
  "panels/network/components/RequestHeaderSection.ts | provisionalHeadersAreShown": {
    "message": "Отображаются предварительные заголовки."
  },
  "panels/network/components/RequestHeaderSection.ts | provisionalHeadersAreShownDisableCache": {
    "message": "Отображаются предварительные заголовки. Чтобы увидеть полные заголовки, отключите кеш."
  },
  "panels/network/components/RequestHeadersView.ts | fromDiskCache": {
    "message": "(источник: кеш диска)"
  },
  "panels/network/components/RequestHeadersView.ts | fromMemoryCache": {
    "message": "(из кеша памяти)"
  },
  "panels/network/components/RequestHeadersView.ts | fromPrefetchCache": {
    "message": "(источник: кеш предзагрузки)"
  },
  "panels/network/components/RequestHeadersView.ts | fromServiceWorker": {
    "message": "(источник: service worker)"
  },
  "panels/network/components/RequestHeadersView.ts | fromSignedexchange": {
    "message": "(источник: Signed Exchange)"
  },
  "panels/network/components/RequestHeadersView.ts | fromWebBundle": {
    "message": "(с Web Bundle)"
  },
  "panels/network/components/RequestHeadersView.ts | general": {
    "message": "Общие"
  },
  "panels/network/components/RequestHeadersView.ts | raw": {
    "message": "Исходные заголовки"
  },
  "panels/network/components/RequestHeadersView.ts | referrerPolicy": {
    "message": "Правило для URL перехода"
  },
  "panels/network/components/RequestHeadersView.ts | remoteAddress": {
    "message": "Удаленный адрес"
  },
  "panels/network/components/RequestHeadersView.ts | requestHeaders": {
    "message": "Заголовки запросов"
  },
  "panels/network/components/RequestHeadersView.ts | requestMethod": {
    "message": "Метод запроса"
  },
  "panels/network/components/RequestHeadersView.ts | requestUrl": {
    "message": "URL запроса"
  },
  "panels/network/components/RequestHeadersView.ts | responseHeaders": {
    "message": "Заголовки ответов"
  },
  "panels/network/components/RequestHeadersView.ts | revealHeaderOverrides": {
    "message": "Показать сведения о переопределении заголовка"
  },
  "panels/network/components/RequestHeadersView.ts | showMore": {
    "message": "Показать больше"
  },
  "panels/network/components/RequestHeadersView.ts | statusCode": {
    "message": "Код статуса"
  },
  "panels/network/components/RequestTrustTokensView.ts | aClientprovidedArgumentWas": {
    "message": "Аргумент, предоставленный клиентом, недопустим (например, имеет неверный формат)."
  },
  "panels/network/components/RequestTrustTokensView.ts | eitherNoInputsForThisOperation": {
    "message": "Для этой операции нет доступных значений ввода или вывод превышает квоту операций."
  },
  "panels/network/components/RequestTrustTokensView.ts | failure": {
    "message": "Ошибка"
  },
  "panels/network/components/RequestTrustTokensView.ts | issuer": {
    "message": "Издатель"
  },
  "panels/network/components/RequestTrustTokensView.ts | issuers": {
    "message": "Издатели"
  },
  "panels/network/components/RequestTrustTokensView.ts | numberOfIssuedTokens": {
    "message": "Количество выпущенных токенов"
  },
  "panels/network/components/RequestTrustTokensView.ts | parameters": {
    "message": "Параметры"
  },
  "panels/network/components/RequestTrustTokensView.ts | refreshPolicy": {
    "message": "Обновить политику"
  },
  "panels/network/components/RequestTrustTokensView.ts | result": {
    "message": "Результат"
  },
  "panels/network/components/RequestTrustTokensView.ts | status": {
    "message": "Статус"
  },
  "panels/network/components/RequestTrustTokensView.ts | success": {
    "message": "Готово"
  },
  "panels/network/components/RequestTrustTokensView.ts | theKeysForThisPSTIssuerAreUnavailable": {
    "message": "Ключи для этого издателя PST недоступны. Возможно, ему необходимо зарегистрироваться в Chrome."
  },
  "panels/network/components/RequestTrustTokensView.ts | theOperationFailedForAnUnknown": {
    "message": "Сбой операции по неизвестной причине."
  },
  "panels/network/components/RequestTrustTokensView.ts | theOperationWasFulfilledLocally": {
    "message": "Операция была выполнена локально. Запросы не отправлялись."
  },
  "panels/network/components/RequestTrustTokensView.ts | theOperationsResultWasServedFrom": {
    "message": "Результат операций взят из кеша."
  },
  "panels/network/components/RequestTrustTokensView.ts | theServersResponseWasMalformedOr": {
    "message": "Ответ сервера неверен или иным образом недействителен."
  },
  "panels/network/components/RequestTrustTokensView.ts | topLevelOrigin": {
    "message": "Источник высшего уровня"
  },
  "panels/network/components/RequestTrustTokensView.ts | type": {
    "message": "Тип"
  },
  "panels/network/components/ResponseHeaderSection.ts | addHeader": {
    "message": "Добавить заголовок"
  },
  "panels/network/components/ResponseHeaderSection.ts | chooseThisOptionIfTheResourceAnd": {
    "message": "Выберите этот вариант, если ресурс и документ находятся на одном и том же сайте."
  },
  "panels/network/components/ResponseHeaderSection.ts | onlyChooseThisOptionIfAn": {
    "message": "Выбирайте этот параметр, только если случайный сайт, включая этот ресурс, не представляет угрозу безопасности."
  },
  "panels/network/components/ResponseHeaderSection.ts | thisDocumentWasBlockedFrom": {
    "message": "Загрузка документа во всплывающем окне, которое было открыто изолированным окном iframe, заблокирована. Это произошло, потому что в документе указаны правила междоменного открытия."
  },
  "panels/network/components/ResponseHeaderSection.ts | toEmbedThisFrameInYourDocument": {
    "message": "Чтобы встроить этот фрейм в документ, необходимо включить правило междоменного встраивания, указав следующий заголовок ответа:"
  },
  "panels/network/components/ResponseHeaderSection.ts | toUseThisResourceFromADifferent": {
    "message": "Чтобы использовать этот ресурс из другого источника, серверу нужно указать заголовок ответа в правилах для ресурсов с разными источниками:"
  },
  "panels/network/components/ResponseHeaderSection.ts | toUseThisResourceFromADifferentOrigin": {
    "message": "Чтобы использовать этот ресурс из другого источника, сервер может использовать заголовок ответа в правилах для ресурсов с разными источниками:"
  },
  "panels/network/components/ResponseHeaderSection.ts | toUseThisResourceFromADifferentSite": {
    "message": "Чтобы использовать этот ресурс с другого сайта, сервер может ослабить правила совместного использования ресурсов между разными источниками в заголовке ответа:"
  },
  "panels/network/components/WebBundleInfoView.ts | bundledResource": {
    "message": "Ресурс в Web Bundle"
  },
  "panels/network/network-meta.ts | addNetworkRequestBlockingPattern": {
    "message": "Добавить шаблон блокировки сетевых запросов"
  },
  "panels/network/network-meta.ts | clear": {
    "message": "Очистить сетевой журнал"
  },
  "panels/network/network-meta.ts | colorCode": {
    "message": "цветовой код"
  },
  "panels/network/network-meta.ts | colorCodeByResourceType": {
    "message": "Цветовой код по типу ресурса"
  },
  "panels/network/network-meta.ts | colorcodeResourceTypes": {
    "message": "Типы ресурсов с цветовым кодом"
  },
  "panels/network/network-meta.ts | diskCache": {
    "message": "кеш диска"
  },
  "panels/network/network-meta.ts | dontGroupNetworkLogItemsByFrame": {
    "message": "Не группировать записи сети по фреймам"
  },
  "panels/network/network-meta.ts | frame": {
    "message": "фрейм"
  },
  "panels/network/network-meta.ts | group": {
    "message": "группа"
  },
  "panels/network/network-meta.ts | groupNetworkLogByFrame": {
    "message": "Группировать записи сетевого журнала по фреймам"
  },
  "panels/network/network-meta.ts | groupNetworkLogItemsByFrame": {
    "message": "Группировка записи сети по фреймам"
  },
  "panels/network/network-meta.ts | hideRequestDetails": {
    "message": "Скрыть сведения о запросе"
  },
  "panels/network/network-meta.ts | netWork": {
    "message": "сеть"
  },
  "panels/network/network-meta.ts | network": {
    "message": "Сеть"
  },
  "panels/network/network-meta.ts | networkConditions": {
    "message": "Условия работы сети"
  },
  "panels/network/network-meta.ts | networkRequestBlocking": {
    "message": "Блокировка сетевых запросов"
  },
  "panels/network/network-meta.ts | networkThrottling": {
    "message": "ограничение пропускной способности сети"
  },
  "panels/network/network-meta.ts | recordNetworkLog": {
    "message": "Запись сетевого журнала"
  },
  "panels/network/network-meta.ts | removeAllNetworkRequestBlockingPatterns": {
    "message": "Удалить все шаблоны блокировки сетевых запросов"
  },
  "panels/network/network-meta.ts | resourceType": {
    "message": "тип ресурса"
  },
  "panels/network/network-meta.ts | search": {
    "message": "Поиск"
  },
  "panels/network/network-meta.ts | showNetwork": {
    "message": "Показать \"Сеть\""
  },
  "panels/network/network-meta.ts | showNetworkConditions": {
    "message": "Показать данные о состоянии сети"
  },
  "panels/network/network-meta.ts | showNetworkRequestBlocking": {
    "message": "Показать \"Блокировку сетевого запроса\""
  },
  "panels/network/network-meta.ts | showSearch": {
    "message": "Показать \"Поиск\""
  },
  "panels/network/network-meta.ts | stopRecordingNetworkLog": {
    "message": "Остановить запись сетевого журнала"
  },
  "panels/network/network-meta.ts | useDefaultColors": {
    "message": "Использовать цвета по умолчанию"
  },
  "panels/performance_monitor/PerformanceMonitor.ts | cpuUsage": {
    "message": "Использование процессора"
  },
  "panels/performance_monitor/PerformanceMonitor.ts | documentFrames": {
    "message": "Фреймы документа"
  },
  "panels/performance_monitor/PerformanceMonitor.ts | documents": {
    "message": "Документы"
  },
  "panels/performance_monitor/PerformanceMonitor.ts | domNodes": {
    "message": "DOM-узлы"
  },
  "panels/performance_monitor/PerformanceMonitor.ts | graphsDisplayingARealtimeViewOf": {
    "message": "Графики, отображающие показатели производительности в реальном времени"
  },
  "panels/performance_monitor/PerformanceMonitor.ts | jsEventListeners": {
    "message": "Прослушиватели событий JavaScript"
  },
  "panels/performance_monitor/PerformanceMonitor.ts | jsHeapSize": {
    "message": "Размер памяти JavaScript"
  },
  "panels/performance_monitor/PerformanceMonitor.ts | layoutsSec": {
    "message": "Макетов в сек."
  },
  "panels/performance_monitor/PerformanceMonitor.ts | paused": {
    "message": "Приостановлено"
  },
  "panels/performance_monitor/PerformanceMonitor.ts | styleRecalcsSec": {
    "message": "Пересчеты стиля в секунду"
  },
  "panels/performance_monitor/performance_monitor-meta.ts | activity": {
    "message": "действия"
  },
  "panels/performance_monitor/performance_monitor-meta.ts | metrics": {
    "message": "показатели"
  },
  "panels/performance_monitor/performance_monitor-meta.ts | monitor": {
    "message": "отслеживать"
  },
  "panels/performance_monitor/performance_monitor-meta.ts | performance": {
    "message": "производительность"
  },
  "panels/performance_monitor/performance_monitor-meta.ts | performanceMonitor": {
    "message": "Монитор производительности"
  },
  "panels/performance_monitor/performance_monitor-meta.ts | showPerformanceMonitor": {
    "message": "Показать монитор производительности"
  },
  "panels/performance_monitor/performance_monitor-meta.ts | systemMonitor": {
    "message": "системный монитор"
  },
  "panels/profiler/CPUProfileView.ts | aggregatedSelfTime": {
    "message": "Агрегированное собственное время"
  },
  "panels/profiler/CPUProfileView.ts | aggregatedTotalTime": {
    "message": "Общее время"
  },
  "panels/profiler/CPUProfileView.ts | cpuProfiles": {
    "message": "ПРОФИЛИ ЦП"
  },
  "panels/profiler/CPUProfileView.ts | cpuProfilesShow": {
    "message": "Профилировщик ЦП показывает, где потрачено время на выполнение функций JavaScript вашей страницы."
  },
  "panels/profiler/CPUProfileView.ts | fms": {
    "message": "{PH1} мс"
  },
  "panels/profiler/CPUProfileView.ts | formatPercent": {
    "message": "{PH1} %"
  },
  "panels/profiler/CPUProfileView.ts | name": {
    "message": "Название"
  },
  "panels/profiler/CPUProfileView.ts | notOptimized": {
    "message": "Не оптимизировано"
  },
  "panels/profiler/CPUProfileView.ts | recordJavascriptCpuProfile": {
    "message": "Запись профиля процессора JavaScript"
  },
  "panels/profiler/CPUProfileView.ts | recording": {
    "message": "Запись…"
  },
  "panels/profiler/CPUProfileView.ts | selfTime": {
    "message": "Время одного действия"
  },
  "panels/profiler/CPUProfileView.ts | startCpuProfiling": {
    "message": "Запустить профилирование процессора"
  },
  "panels/profiler/CPUProfileView.ts | stopCpuProfiling": {
    "message": "Остановить профилирование процессора"
  },
  "panels/profiler/CPUProfileView.ts | totalTime": {
    "message": "Общее время"
  },
  "panels/profiler/CPUProfileView.ts | url": {
    "message": "URL"
  },
  "panels/profiler/HeapProfileView.ts | allocationSampling": {
    "message": "Выборка распределения памяти"
  },
  "panels/profiler/HeapProfileView.ts | formatPercent": {
    "message": "{PH1} %"
  },
  "panels/profiler/HeapProfileView.ts | heapProfilerIsRecording": {
    "message": "Профилировщик кучи выполняет запись"
  },
  "panels/profiler/HeapProfileView.ts | itProvidesGoodApproximation": {
    "message": "Предоставляет приблизительные распределения с разбивкой по стеку выполнения JavaScript."
  },
  "panels/profiler/HeapProfileView.ts | name": {
    "message": "Название"
  },
  "panels/profiler/HeapProfileView.ts | profileD": {
    "message": "Профиль \"{PH1}\""
  },
  "panels/profiler/HeapProfileView.ts | recordMemoryAllocations": {
    "message": "Записывает данные о распределении памяти, используя метод выборки."
  },
  "panels/profiler/HeapProfileView.ts | recording": {
    "message": "Запись…"
  },
  "panels/profiler/HeapProfileView.ts | sBytes": {
    "message": "{PH1} Б"
  },
  "panels/profiler/HeapProfileView.ts | samplingProfiles": {
    "message": "ВЫБОРКА ПРОФИЛЕЙ"
  },
  "panels/profiler/HeapProfileView.ts | selectedSizeS": {
    "message": "Выбранный размер: {PH1}"
  },
  "panels/profiler/HeapProfileView.ts | selfSize": {
    "message": "Собственный размер"
  },
  "panels/profiler/HeapProfileView.ts | selfSizeBytes": {
    "message": "Собственный размер (байты)"
  },
  "panels/profiler/HeapProfileView.ts | skb": {
    "message": "{PH1} КБ"
  },
  "panels/profiler/HeapProfileView.ts | startHeapProfiling": {
    "message": "Начать профилирование кучи"
  },
  "panels/profiler/HeapProfileView.ts | stopHeapProfiling": {
    "message": "Остановить профилирование кучи"
  },
  "panels/profiler/HeapProfileView.ts | stopping": {
    "message": "Остановка…"
  },
  "panels/profiler/HeapProfileView.ts | thisProfileTypeHasMinimal": {
    "message": "Этот тип профиля имеет минимальное ресурсопотребление и может использоваться для продолжительных операций."
  },
  "panels/profiler/HeapProfileView.ts | totalSize": {
    "message": "Общий размер"
  },
  "panels/profiler/HeapProfileView.ts | totalSizeBytes": {
    "message": "Общий размер (байты)"
  },
  "panels/profiler/HeapProfileView.ts | url": {
    "message": "URL"
  },
  "panels/profiler/HeapProfilerPanel.ts | revealInSummaryView": {
    "message": "Показать в виде \"Сводка\""
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | Deleted": {
    "message": "Удалено: #"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | Delta": {
    "message": "различие #"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | New": {
    "message": "# новых"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | allocSize": {
    "message": "Размер распределения"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | allocation": {
    "message": "Распределение"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | constructorString": {
    "message": "Конструктор"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | count": {
    "message": "Количество"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | distance": {
    "message": "Расстояние"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | distanceFromWindowObject": {
    "message": "Расстояние от оконного объекта"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | freedSize": {
    "message": "Объем освободившей памяти"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | function": {
    "message": "Функция"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | heapSnapshotConstructors": {
    "message": "Конструктор снимка кучи"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | heapSnapshotDiff": {
    "message": "Различия в снимках кучи"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | heapSnapshotRetainment": {
    "message": "Удержание снимка кучи"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | liveCount": {
    "message": "Счетчик в реальном времени"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | liveSize": {
    "message": "Действующий размер"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | object": {
    "message": "Объект"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | retainedSize": {
    "message": "Сохраненный размер"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | shallowSize": {
    "message": "Объем памяти, занимаемый объектом"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | size": {
    "message": "Размер"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | sizeDelta": {
    "message": "Разница размеров"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | sizeOfTheObjectItselfInBytes": {
    "message": "Размер объекта в байтах"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | sizeOfTheObjectPlusTheGraphIt": {
    "message": "Размер объекта плюс график, который он хранит, в байтах"
  },
  "panels/profiler/HeapSnapshotGridNodes.ts | detachedFromDomTree": {
    "message": "Отключено от дерева модели DOM"
  },
  "panels/profiler/HeapSnapshotGridNodes.ts | genericStringsTwoPlaceholders": {
    "message": "{PH1}, {PH2}"
  },
  "panels/profiler/HeapSnapshotGridNodes.ts | inElement": {
    "message": "внутри"
  },
  "panels/profiler/HeapSnapshotGridNodes.ts | internalArray": {
    "message": "(внутренний массив)[]"
  },
  "panels/profiler/HeapSnapshotGridNodes.ts | previewIsNotAvailable": {
    "message": "Предпросмотр недоступен."
  },
  "panels/profiler/HeapSnapshotGridNodes.ts | revealInSummaryView": {
    "message": "Показать в виде \"Сводка\""
  },
  "panels/profiler/HeapSnapshotGridNodes.ts | revealObjectSWithIdSInSummary": {
    "message": "Показать объект {PH1} с идентификатором @{PH2} в сводных данных"
  },
  "panels/profiler/HeapSnapshotGridNodes.ts | storeAsGlobalVariable": {
    "message": "Сохранить как глобальную переменную"
  },
  "panels/profiler/HeapSnapshotGridNodes.ts | summary": {
    "message": "Сводка"
  },
  "panels/profiler/HeapSnapshotGridNodes.ts | userObjectReachableFromWindow": {
    "message": "Пользовательский объект доступен из окна."
  },
  "panels/profiler/HeapSnapshotProxy.ts | anErrorOccurredWhenACallToMethod": {
    "message": "Не удалось вызвать метод {PH1}."
  },
  "panels/profiler/HeapSnapshotView.ts | AllocationTimelinesShowInstrumented": {
    "message": "На временной шкале показывается хронология инструментированного распределения памяти JavaScript. После записи профиля вы можете выбрать временной интервал, чтобы увидеть объекты, которые определены в нем и ещё существуют к концу записи. С помощью профиля этого типа можно изолировать утечки памяти."
  },
  "panels/profiler/HeapSnapshotView.ts | allObjects": {
    "message": "Все объекты"
  },
  "panels/profiler/HeapSnapshotView.ts | allocation": {
    "message": "Распределение"
  },
  "panels/profiler/HeapSnapshotView.ts | allocationInstrumentationOn": {
    "message": "Инструментирование распределения памяти в хронологии"
  },
  "panels/profiler/HeapSnapshotView.ts | allocationStack": {
    "message": "Стек распределения"
  },
  "panels/profiler/HeapSnapshotView.ts | allocationTimelines": {
    "message": "ХРОНОЛОГИЯ РАСПРЕДЕЛЕНИЯ ПАМЯТИ"
  },
  "panels/profiler/HeapSnapshotView.ts | baseSnapshot": {
    "message": "Базовый снимок"
  },
  "panels/profiler/HeapSnapshotView.ts | captureNumericValue": {
    "message": "Включить в снимок численные значения"
  },
  "panels/profiler/HeapSnapshotView.ts | classFilter": {
    "message": "Фильтр классов"
  },
  "panels/profiler/HeapSnapshotView.ts | code": {
    "message": "Код"
  },
  "panels/profiler/HeapSnapshotView.ts | comparison": {
    "message": "Сравнение"
  },
  "panels/profiler/HeapSnapshotView.ts | containment": {
    "message": "Включение"
  },
  "panels/profiler/HeapSnapshotView.ts | exposeInternals": {
    "message": "Раскрыть внутреннюю информацию (включая дополнительные данные реализации)"
  },
  "panels/profiler/HeapSnapshotView.ts | filter": {
    "message": "Фильтр"
  },
  "panels/profiler/HeapSnapshotView.ts | find": {
    "message": "Найти"
  },
  "panels/profiler/HeapSnapshotView.ts | heapMemoryUsage": {
    "message": "Использование памяти кучи"
  },
  "panels/profiler/HeapSnapshotView.ts | heapSnapshot": {
    "message": "Снимок кучи"
  },
  "panels/profiler/HeapSnapshotView.ts | heapSnapshotProfilesShowMemory": {
    "message": "Профили снимков кучи показывают распределение памяти между объектами JavaScript страницы и связанными узлами DOM."
  },
  "panels/profiler/HeapSnapshotView.ts | heapSnapshots": {
    "message": "СНИМКИ КУЧИ"
  },
  "panels/profiler/HeapSnapshotView.ts | jsArrays": {
    "message": "Массивы JavaScript"
  },
  "panels/profiler/HeapSnapshotView.ts | liveObjects": {
    "message": "Динамические объекты"
  },
  "panels/profiler/HeapSnapshotView.ts | loading": {
    "message": "Загрузка…"
  },
  "panels/profiler/HeapSnapshotView.ts | objectsAllocatedBeforeS": {
    "message": "Объекты, выделенные до {PH1}"
  },
  "panels/profiler/HeapSnapshotView.ts | objectsAllocatedBetweenSAndS": {
    "message": "Объекты, распределенные между {PH1} и {PH2}"
  },
  "panels/profiler/HeapSnapshotView.ts | percentagePlaceholder": {
    "message": "{PH1} %"
  },
  "panels/profiler/HeapSnapshotView.ts | perspective": {
    "message": "Перспектива"
  },
  "panels/profiler/HeapSnapshotView.ts | recordAllocationStacksExtra": {
    "message": "Запись трассировки стека выделений памяти (чрезмерное ресурсопотребление)"
  },
  "panels/profiler/HeapSnapshotView.ts | recording": {
    "message": "Запись…"
  },
  "panels/profiler/HeapSnapshotView.ts | retainers": {
    "message": "Сохраненные пути"
  },
  "panels/profiler/HeapSnapshotView.ts | savingD": {
    "message": "Сохранение… {PH1} %"
  },
  "panels/profiler/HeapSnapshotView.ts | selectedSizeS": {
    "message": "Выбранный размер: {PH1}"
  },
  "panels/profiler/HeapSnapshotView.ts | snapshotD": {
    "message": "Снимок {PH1}"
  },
  "panels/profiler/HeapSnapshotView.ts | snapshotting": {
    "message": "Создание снимка…"
  },
  "panels/profiler/HeapSnapshotView.ts | stackWasNotRecordedForThisObject": {
    "message": "Стек для этого объекта не записан, так как он был распределен до начала записи этого профиля"
  },
  "panels/profiler/HeapSnapshotView.ts | startRecordingHeapProfile": {
    "message": "Начать запись профиля кучи"
  },
  "panels/profiler/HeapSnapshotView.ts | statistics": {
    "message": "Статистика"
  },
  "panels/profiler/HeapSnapshotView.ts | stopRecordingHeapProfile": {
    "message": "Оставить запись профилировщика кучи"
  },
  "panels/profiler/HeapSnapshotView.ts | strings": {
    "message": "Строки"
  },
  "panels/profiler/HeapSnapshotView.ts | summary": {
    "message": "Сводка"
  },
  "panels/profiler/HeapSnapshotView.ts | systemObjects": {
    "message": "Объекты системы"
  },
  "panels/profiler/HeapSnapshotView.ts | takeHeapSnapshot": {
    "message": "Сделать снимок кучи"
  },
  "panels/profiler/HeapSnapshotView.ts | typedArrays": {
    "message": "Введенные массивы"
  },
  "panels/profiler/IsolateSelector.ts | changeRate": {
    "message": "{PH1}/с"
  },
  "panels/profiler/IsolateSelector.ts | decreasingBySPerSecond": {
    "message": "уменьшение на {PH1} в секунду"
  },
  "panels/profiler/IsolateSelector.ts | empty": {
    "message": "(пусто)"
  },
  "panels/profiler/IsolateSelector.ts | heapSizeChangeTrendOverTheLastS": {
    "message": "Последние изменения размера кучи за {PH1} мин."
  },
  "panels/profiler/IsolateSelector.ts | heapSizeInUseByLiveJsObjects": {
    "message": "Размер памяти, который используют активные объекты JavaScrip"
  },
  "panels/profiler/IsolateSelector.ts | increasingBySPerSecond": {
    "message": "увеличение на {PH1} в секунду"
  },
  "panels/profiler/IsolateSelector.ts | javascriptVmInstances": {
    "message": "Экземпляры виртуальной машины JavaScript"
  },
  "panels/profiler/IsolateSelector.ts | totalJsHeapSize": {
    "message": "Общий размер памяти JavaScript"
  },
  "panels/profiler/IsolateSelector.ts | totalPageJsHeapSizeAcrossAllVm": {
    "message": "Общий размер кучи JS страницы с учетом всех экземпляров виртуальных машин."
  },
  "panels/profiler/IsolateSelector.ts | totalPageJsHeapSizeChangeTrend": {
    "message": "Последние изменения общего размера кучи JavaScript страницы за {PH1} мин."
  },
  "panels/profiler/LiveHeapProfileView.ts | allocatedJsHeapSizeCurrentlyIn": {
    "message": "Выделенный размер кучи JS, который сейчас используется"
  },
  "panels/profiler/LiveHeapProfileView.ts | anonymousScriptS": {
    "message": "(анонимный скрипт {PH1})"
  },
  "panels/profiler/LiveHeapProfileView.ts | heapProfile": {
    "message": "Профиль кучи"
  },
  "panels/profiler/LiveHeapProfileView.ts | jsHeap": {
    "message": "Куча JS"
  },
  "panels/profiler/LiveHeapProfileView.ts | kb": {
    "message": "КБ"
  },
  "panels/profiler/LiveHeapProfileView.ts | numberOfVmsSharingTheSameScript": {
    "message": "Количество ВМ, совместно использующих один и тот же источник скрипта"
  },
  "panels/profiler/LiveHeapProfileView.ts | scriptUrl": {
    "message": "URL скрипта"
  },
  "panels/profiler/LiveHeapProfileView.ts | urlOfTheScriptSource": {
    "message": "URL источника скрипта"
  },
  "panels/profiler/LiveHeapProfileView.ts | vms": {
    "message": "Виртуальные машины"
  },
  "panels/profiler/ModuleUIStrings.ts | buildingAllocationStatistics": {
    "message": "Сбор статистики выделения…"
  },
  "panels/profiler/ModuleUIStrings.ts | buildingDominatedNodes": {
    "message": "Создание доминируемых узлов…"
  },
  "panels/profiler/ModuleUIStrings.ts | buildingDominatorTree": {
    "message": "Создается доминаторное дерево…"
  },
  "panels/profiler/ModuleUIStrings.ts | buildingEdgeIndexes": {
    "message": "Построение индексов ребер…"
  },
  "panels/profiler/ModuleUIStrings.ts | buildingLocations": {
    "message": "Построение расположений…"
  },
  "panels/profiler/ModuleUIStrings.ts | buildingPostorderIndex": {
    "message": "Создание индекса обратного порядка…"
  },
  "panels/profiler/ModuleUIStrings.ts | buildingRetainers": {
    "message": "Сохранение путей…"
  },
  "panels/profiler/ModuleUIStrings.ts | calculatingDistances": {
    "message": "Вычисление расстояний…"
  },
  "panels/profiler/ModuleUIStrings.ts | calculatingNodeFlags": {
    "message": "Расчет экспериментальных параметров узла…"
  },
  "panels/profiler/ModuleUIStrings.ts | calculatingRetainedSizes": {
    "message": "Подсчет полных размеров…"
  },
  "panels/profiler/ModuleUIStrings.ts | calculatingSamples": {
    "message": "Вычисление образцов…"
  },
  "panels/profiler/ModuleUIStrings.ts | calculatingStatistics": {
    "message": "Подсчет статистики…"
  },
  "panels/profiler/ModuleUIStrings.ts | done": {
    "message": "Готово"
  },
  "panels/profiler/ModuleUIStrings.ts | finishedProcessing": {
    "message": "Обработка завершена"
  },
  "panels/profiler/ModuleUIStrings.ts | loadingAllocationTracesD": {
    "message": "Загрузка трассировки распределения… ({PH1} %)"
  },
  "panels/profiler/ModuleUIStrings.ts | loadingEdgesD": {
    "message": "Загрузка ребер… {PH1} %"
  },
  "panels/profiler/ModuleUIStrings.ts | loadingLocations": {
    "message": "Загрузка местоположений…"
  },
  "panels/profiler/ModuleUIStrings.ts | loadingNodesD": {
    "message": "Загрузка узлов… {PH1} %"
  },
  "panels/profiler/ModuleUIStrings.ts | loadingSamples": {
    "message": "Загрузка образцов…"
  },
  "panels/profiler/ModuleUIStrings.ts | loadingSnapshotInfo": {
    "message": "Загрузка информации снимка…"
  },
  "panels/profiler/ModuleUIStrings.ts | loadingStrings": {
    "message": "Загрузка строк…"
  },
  "panels/profiler/ModuleUIStrings.ts | parsingStrings": {
    "message": "Синтаксический анализ строк…"
  },
  "panels/profiler/ModuleUIStrings.ts | processingSnapshot": {
    "message": "Обработка снимка…"
  },
  "panels/profiler/ModuleUIStrings.ts | propagatingDomState": {
    "message": "Распространение состояния DOM…"
  },
  "panels/profiler/ProfileDataGrid.ts | genericTextTwoPlaceholders": {
    "message": "{PH1}, {PH2}"
  },
  "panels/profiler/ProfileDataGrid.ts | notOptimizedS": {
    "message": "Не оптимизировано: {PH1}"
  },
  "panels/profiler/ProfileLauncherView.ts | load": {
    "message": "Загрузить"
  },
  "panels/profiler/ProfileLauncherView.ts | selectJavascriptVmInstance": {
    "message": "Выберите экземпляр виртуальной машины JavaScript"
  },
  "panels/profiler/ProfileLauncherView.ts | selectProfilingType": {
    "message": "Выберите тип профиля"
  },
  "panels/profiler/ProfileLauncherView.ts | start": {
    "message": "Начать"
  },
  "panels/profiler/ProfileLauncherView.ts | stop": {
    "message": "Остановить"
  },
  "panels/profiler/ProfileLauncherView.ts | takeSnapshot": {
    "message": "Сделать снимок"
  },
  "panels/profiler/ProfileSidebarTreeElement.ts | profileOptions": {
    "message": "Настройки профиля"
  },
  "panels/profiler/ProfileView.ts | chart": {
    "message": "Диаграмма"
  },
  "panels/profiler/ProfileView.ts | excludeSelectedFunction": {
    "message": "Исключить выбранную функцию"
  },
  "panels/profiler/ProfileView.ts | failedToReadFile": {
    "message": "Не удалось прочитать файл."
  },
  "panels/profiler/ProfileView.ts | fileSReadErrorS": {
    "message": "Ошибка чтения файла {PH1}: {PH2}"
  },
  "panels/profiler/ProfileView.ts | findByCostMsNameOrFile": {
    "message": "Найти по затратам (> 50 мс), имени или файлу"
  },
  "panels/profiler/ProfileView.ts | focusSelectedFunction": {
    "message": "Перейти к выбранной функции"
  },
  "panels/profiler/ProfileView.ts | function": {
    "message": "Функция"
  },
  "panels/profiler/ProfileView.ts | heavyBottomUp": {
    "message": "По тяжести (восходящий порядок)"
  },
  "panels/profiler/ProfileView.ts | loaded": {
    "message": "Данные загружены"
  },
  "panels/profiler/ProfileView.ts | loading": {
    "message": "Загрузка…"
  },
  "panels/profiler/ProfileView.ts | loadingD": {
    "message": "Загрузка… ({PH1} %)"
  },
  "panels/profiler/ProfileView.ts | parsing": {
    "message": "Обработка…"
  },
  "panels/profiler/ProfileView.ts | profile": {
    "message": "Профиль"
  },
  "panels/profiler/ProfileView.ts | profileD": {
    "message": "Профиль \"{PH1}\""
  },
  "panels/profiler/ProfileView.ts | profileViewMode": {
    "message": "Режим просмотра профиля"
  },
  "panels/profiler/ProfileView.ts | profiler": {
    "message": "Профилировщик"
  },
  "panels/profiler/ProfileView.ts | restoreAllFunctions": {
    "message": "Восстановить все функции"
  },
  "panels/profiler/ProfileView.ts | treeTopDown": {
    "message": "Дерево (сверху вниз)"
  },
  "panels/profiler/ProfilesPanel.ts | cantLoadFileSupportedFile": {
    "message": "Не удалось загрузить файл. Поддерживаются следующие расширения: {PH1}."
  },
  "panels/profiler/ProfilesPanel.ts | cantLoadProfileWhileAnother": {
    "message": "Не удалось загрузить профиль. Идет запись другого профиля."
  },
  "panels/profiler/ProfilesPanel.ts | deprecationWarnMsg": {
    "message": "Поддержка этой панели будет прекращена в следующей версии. Чтобы записывать профили ЦП JavaScript, используйте панель производительности."
  },
  "panels/profiler/ProfilesPanel.ts | feedback": {
    "message": "Отправить отзыв"
  },
  "panels/profiler/ProfilesPanel.ts | goToPerformancePanel": {
    "message": "Открыть панель производительности"
  },
  "panels/profiler/ProfilesPanel.ts | profileLoadingFailedS": {
    "message": "Не удалось загрузить профиль: {PH1}."
  },
  "panels/profiler/ProfilesPanel.ts | profiles": {
    "message": "Профили"
  },
  "panels/profiler/ProfilesPanel.ts | runD": {
    "message": "Выполнить {PH1}"
  },
  "panels/profiler/profiler-meta.ts | clearAllProfiles": {
    "message": "Очистить все профили"
  },
  "panels/profiler/profiler-meta.ts | deleteProfile": {
    "message": "Удалить профиль"
  },
  "panels/profiler/profiler-meta.ts | liveHeapProfile": {
    "message": "Активный профиль кучи"
  },
  "panels/profiler/profiler-meta.ts | loadProfile": {
    "message": "Загрузить профиль…"
  },
  "panels/profiler/profiler-meta.ts | memory": {
    "message": "Память"
  },
  "panels/profiler/profiler-meta.ts | saveProfile": {
    "message": "Сохранить профиль…"
  },
  "panels/profiler/profiler-meta.ts | showLiveHeapProfile": {
    "message": "Показать активный профиль кучи"
  },
  "panels/profiler/profiler-meta.ts | showMemory": {
    "message": "Показать \"Память\""
  },
  "panels/profiler/profiler-meta.ts | startRecordingHeapAllocations": {
    "message": "Начать запись памяти, выделенной для кучи"
  },
  "panels/profiler/profiler-meta.ts | startRecordingHeapAllocationsAndReload": {
    "message": "Начните запись распределения памяти кучи и перезагрузите страницу"
  },
  "panels/profiler/profiler-meta.ts | startStopRecording": {
    "message": "Начать/остановить запись"
  },
  "panels/profiler/profiler-meta.ts | stopRecordingHeapAllocations": {
    "message": "Остановить запись памяти, выделенной для кучи"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | CDPCommandEditorHidden": {
    "message": "Редактор команд CDP скрыт"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | CDPCommandEditorShown": {
    "message": "Редактор команд CDP показан"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | clearAll": {
    "message": "Очистить все"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | documentation": {
    "message": "Документация"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | editAndResend": {
    "message": "Изменить и отправить повторно"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | elapsedTime": {
    "message": "Прошедшее время"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | filter": {
    "message": "Фильтр"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | hideCDPCommandEditor": {
    "message": "Скрыть редактор команд CDP"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | method": {
    "message": "Метод"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | noMessageSelected": {
    "message": "Нет выбранных сообщений"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | record": {
    "message": "Запись"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | request": {
    "message": "Запрос"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | response": {
    "message": "Ответ"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | sMs": {
    "message": "{PH1} мс"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | save": {
    "message": "Сохранить"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | selectTarget": {
    "message": "Выбор цели"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | sendRawCDPCommand": {
    "message": "Отправить необработанную команду CDP"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | sendRawCDPCommandExplanation": {
    "message": "Используйте формат 'Domain.commandName' для команды без параметров или '{\"command\":\"Domain.commandName\", \"parameters\": {...}}' как объект JSON для команды с параметрами. 'cmd'/'method' и 'args'/'params'/'arguments' поддерживаются в качестве альтернативного ключа для объекта JSON."
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | session": {
    "message": "Сеанс"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | showCDPCommandEditor": {
    "message": "Показать редактор команд CDP"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | target": {
    "message": "Цель"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | timestamp": {
    "message": "Временная метка"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | type": {
    "message": "Тип"
  },
  "panels/protocol_monitor/components/JSONEditor.ts | addCustomProperty": {
    "message": "Добавить свое свойство"
  },
  "panels/protocol_monitor/components/JSONEditor.ts | addParameter": {
    "message": "Добавить параметр"
  },
  "panels/protocol_monitor/components/JSONEditor.ts | deleteParameter": {
    "message": "Удалить параметр"
  },
  "panels/protocol_monitor/components/JSONEditor.ts | resetDefaultValue": {
    "message": "Восстановить значение по умолчанию"
  },
  "panels/protocol_monitor/components/Toolbar.ts | copyCommand": {
    "message": "Копировать команду"
  },
  "panels/protocol_monitor/components/Toolbar.ts | sendCommandCmdEnter": {
    "message": "Отправить команду (⌘ + Enter)"
  },
  "panels/protocol_monitor/components/Toolbar.ts | sendCommandCtrlEnter": {
    "message": "Отправить команду (Ctrl + Ввод)"
  },
  "panels/protocol_monitor/protocol_monitor-meta.ts | protocolMonitor": {
    "message": "Монитор протокола"
  },
  "panels/protocol_monitor/protocol_monitor-meta.ts | showProtocolMonitor": {
    "message": "Показать монитор протокола"
  },
  "panels/recorder/RecorderController.ts | continueReplay": {
    "message": "Продолжить воспроизведение"
  },
  "panels/recorder/RecorderController.ts | copyShortcut": {
    "message": "Копировать запись или выбранный шаг"
  },
  "panels/recorder/RecorderController.ts | createRecording": {
    "message": "Создать запись"
  },
  "panels/recorder/RecorderController.ts | deleteRecording": {
    "message": "Удалить запись"
  },
  "panels/recorder/RecorderController.ts | export": {
    "message": "Экспортировать"
  },
  "panels/recorder/RecorderController.ts | exportRecording": {
    "message": "Экспортировать"
  },
  "panels/recorder/RecorderController.ts | exportViaExtensions": {
    "message": "Экспорт с помощью расширений"
  },
  "panels/recorder/RecorderController.ts | getExtensions": {
    "message": "Показать расширения"
  },
  "panels/recorder/RecorderController.ts | importRecording": {
    "message": "Импортировать запись"
  },
  "panels/recorder/RecorderController.ts | noRecordings": {
    "message": "Записей нет"
  },
  "panels/recorder/RecorderController.ts | numberOfRecordings": {
    "message": "запис."
  },
  "panels/recorder/RecorderController.ts | replayRecording": {
    "message": "Воспроизвести запись"
  },
  "panels/recorder/RecorderController.ts | sendFeedback": {
    "message": "Отправить отзыв"
  },
  "panels/recorder/RecorderController.ts | startStopRecording": {
    "message": "Начать/остановить запись"
  },
  "panels/recorder/RecorderController.ts | stepOverReplay": {
    "message": "Выполнить один шаг"
  },
  "panels/recorder/RecorderController.ts | toggleCode": {
    "message": "Включить/отключить режим просмотра кода"
  },
  "panels/recorder/components/CreateRecordingView.ts | cancelRecording": {
    "message": "Отменить запись"
  },
  "panels/recorder/components/CreateRecordingView.ts | createRecording": {
    "message": "Создание записи"
  },
  "panels/recorder/components/CreateRecordingView.ts | includeNecessarySelectors": {
    "message": "Необходимо выбрать CSS, Pierce, или XPath в качестве одного из вариантов. Только они будут гарантированно записаны, так как селекторы ARIA и текстовые селекторы могут быть не уникальными."
  },
  "panels/recorder/components/CreateRecordingView.ts | recordingName": {
    "message": "Название записи"
  },
  "panels/recorder/components/CreateRecordingView.ts | recordingNameIsRequired": {
    "message": "Необходимо ввести название для записи."
  },
  "panels/recorder/components/CreateRecordingView.ts | selectorAttribute": {
    "message": "Атрибут для селектора"
  },
  "panels/recorder/components/CreateRecordingView.ts | selectorTypeARIA": {
    "message": "ARIA"
  },
  "panels/recorder/components/CreateRecordingView.ts | selectorTypeCSS": {
    "message": "CSS"
  },
  "panels/recorder/components/CreateRecordingView.ts | selectorTypePierce": {
    "message": "Сквозной"
  },
  "panels/recorder/components/CreateRecordingView.ts | selectorTypeText": {
    "message": "Текст"
  },
  "panels/recorder/components/CreateRecordingView.ts | selectorTypeXPath": {
    "message": "XPath"
  },
  "panels/recorder/components/CreateRecordingView.ts | selectorTypes": {
    "message": "Типы селекторов для записи"
  },
  "panels/recorder/components/CreateRecordingView.ts | startRecording": {
    "message": "Начать запись"
  },
  "panels/recorder/components/ExtensionView.ts | closeView": {
    "message": "Закрыть"
  },
  "panels/recorder/components/ExtensionView.ts | extension": {
    "message": "Контент, предоставленный расширением браузера"
  },
  "panels/recorder/components/RecordingListView.ts | createRecording": {
    "message": "Создать запись"
  },
  "panels/recorder/components/RecordingListView.ts | deleteRecording": {
    "message": "Удалить запись"
  },
  "panels/recorder/components/RecordingListView.ts | openRecording": {
    "message": "Открыть запись"
  },
  "panels/recorder/components/RecordingListView.ts | playRecording": {
    "message": "Воспроизвести запись"
  },
  "panels/recorder/components/RecordingListView.ts | savedRecordings": {
    "message": "Сохраненные записи"
  },
  "panels/recorder/components/RecordingView.ts | addAssertion": {
    "message": "Добавить утверждение"
  },
  "panels/recorder/components/RecordingView.ts | cancelReplay": {
    "message": "Отменить воспроизведение"
  },
  "panels/recorder/components/RecordingView.ts | default": {
    "message": "По умолчанию"
  },
  "panels/recorder/components/RecordingView.ts | desktop": {
    "message": "Компьютер"
  },
  "panels/recorder/components/RecordingView.ts | download": {
    "message": "Скорость скачивания: {value}"
  },
  "panels/recorder/components/RecordingView.ts | editReplaySettings": {
    "message": "Изменить настройки воспроизведения"
  },
  "panels/recorder/components/RecordingView.ts | editTitle": {
    "message": "Изменить название"
  },
  "panels/recorder/components/RecordingView.ts | endRecording": {
    "message": "Завершить запись"
  },
  "panels/recorder/components/RecordingView.ts | environment": {
    "message": "Среда"
  },
  "panels/recorder/components/RecordingView.ts | hideCode": {
    "message": "Скрыть код"
  },
  "panels/recorder/components/RecordingView.ts | latency": {
    "message": "Задержка: {value} мс"
  },
  "panels/recorder/components/RecordingView.ts | mobile": {
    "message": "Мобильное устройство"
  },
  "panels/recorder/components/RecordingView.ts | network": {
    "message": "Сеть"
  },
  "panels/recorder/components/RecordingView.ts | performancePanel": {
    "message": "Панель \"Производительность\""
  },
  "panels/recorder/components/RecordingView.ts | recording": {
    "message": "Идет запись…"
  },
  "panels/recorder/components/RecordingView.ts | recordingIsBeingStopped": {
    "message": "Прекращение записи…"
  },
  "panels/recorder/components/RecordingView.ts | replaySettings": {
    "message": "Настройки воспроизведения"
  },
  "panels/recorder/components/RecordingView.ts | requiredTitleError": {
    "message": "Необходимо указать название."
  },
  "panels/recorder/components/RecordingView.ts | screenshotForSection": {
    "message": "Скриншот для этого раздела"
  },
  "panels/recorder/components/RecordingView.ts | showCode": {
    "message": "Показать код"
  },
  "panels/recorder/components/RecordingView.ts | timeout": {
    "message": "Время ожидания: {value} мс"
  },
  "panels/recorder/components/RecordingView.ts | timeoutExplanation": {
    "message": "Время ожидания (в миллисекундах) применяется к каждому действию при повторном воспроизведении записи. Например, если идентифицированный селектором CSS элемент DOM не появляется на странице в течение указанного времени ожидания, повтор прерывается из-за ошибки."
  },
  "panels/recorder/components/RecordingView.ts | timeoutLabel": {
    "message": "Время ожидания"
  },
  "panels/recorder/components/RecordingView.ts | upload": {
    "message": "Скорость загрузки: {value}"
  },
  "panels/recorder/components/ReplayButton.ts | ReplayExtremelySlowButtonLabel": {
    "message": "Воспроизвести крайне медленно"
  },
  "panels/recorder/components/ReplayButton.ts | ReplayExtremelySlowItemLabel": {
    "message": "Крайне низкая скорость"
  },
  "panels/recorder/components/ReplayButton.ts | ReplayNormalButtonLabel": {
    "message": "Воспроизвести"
  },
  "panels/recorder/components/ReplayButton.ts | ReplayNormalItemLabel": {
    "message": "Обычная скорость (по умолчанию)"
  },
  "panels/recorder/components/ReplayButton.ts | ReplaySlowButtonLabel": {
    "message": "Воспроизвести медленно"
  },
  "panels/recorder/components/ReplayButton.ts | ReplaySlowItemLabel": {
    "message": "Низкая скорость"
  },
  "panels/recorder/components/ReplayButton.ts | ReplayVerySlowButtonLabel": {
    "message": "Воспроизвести очень медленно"
  },
  "panels/recorder/components/ReplayButton.ts | ReplayVerySlowItemLabel": {
    "message": "Очень низкая скорость"
  },
  "panels/recorder/components/ReplayButton.ts | extensionGroup": {
    "message": "Расширения"
  },
  "panels/recorder/components/ReplayButton.ts | speedGroup": {
    "message": "Скорость"
  },
  "panels/recorder/components/StartView.ts | createRecording": {
    "message": "Создать запись"
  },
  "panels/recorder/components/StartView.ts | header": {
    "message": "Измеряйте производительность на каждом шаге пути пользователя"
  },
  "panels/recorder/components/StartView.ts | quickStart": {
    "message": "Краткое руководство: узнайте о возможностях новой панели \"Регистратор\" в инструментах разработчика"
  },
  "panels/recorder/components/StartView.ts | step1": {
    "message": "Запишите типичный путь пользователя на вашем сайте или в приложении."
  },
  "panels/recorder/components/StartView.ts | step2": {
    "message": "Воспроизведите запись и проверьте, нет ли с путем проблем."
  },
  "panels/recorder/components/StartView.ts | step3": {
    "message": "Создайте подробную трассировку производительности или экспортируйте запись как скрипт Puppeteer для тестирования."
  },
  "panels/recorder/components/StepEditor.ts | addAttribute": {
    "message": "Добавить атрибут {attributeName}"
  },
  "panels/recorder/components/StepEditor.ts | addFrameIndex": {
    "message": "Добавить индекс фрейма в древе фреймов"
  },
  "panels/recorder/components/StepEditor.ts | addSelector": {
    "message": "Добавить селектор"
  },
  "panels/recorder/components/StepEditor.ts | addSelectorPart": {
    "message": "Добавить часть селектора"
  },
  "panels/recorder/components/StepEditor.ts | deleteRow": {
    "message": "Удалить строку"
  },
  "panels/recorder/components/StepEditor.ts | notSaved": {
    "message": "Не удалось сохранить: {error}"
  },
  "panels/recorder/components/StepEditor.ts | removeFrameIndex": {
    "message": "Удалить индекс фрейма"
  },
  "panels/recorder/components/StepEditor.ts | removeSelector": {
    "message": "Удалить селектор"
  },
  "panels/recorder/components/StepEditor.ts | removeSelectorPart": {
    "message": "Удалить часть селектора"
  },
  "panels/recorder/components/StepEditor.ts | selectorPicker": {
    "message": "Выбрать на странице элемент, для которого нужно обновить селекторы"
  },
  "panels/recorder/components/StepEditor.ts | unknownActionType": {
    "message": "Неизвестный тип действия."
  },
  "panels/recorder/components/StepView.ts | addBreakpoint": {
    "message": "Добавить точку останова"
  },
  "panels/recorder/components/StepView.ts | addStepAfter": {
    "message": "Добавить шаг после"
  },
  "panels/recorder/components/StepView.ts | addStepBefore": {
    "message": "Добавить шаг перед"
  },
  "panels/recorder/components/StepView.ts | breakpoints": {
    "message": "Точки останова"
  },
  "panels/recorder/components/StepView.ts | changeStepTitle": {
    "message": "Изменение"
  },
  "panels/recorder/components/StepView.ts | clickStepTitle": {
    "message": "Клик"
  },
  "panels/recorder/components/StepView.ts | closeStepTitle": {
    "message": "Закрытие"
  },
  "panels/recorder/components/StepView.ts | copyAs": {
    "message": "Копировать как"
  },
  "panels/recorder/components/StepView.ts | customStepTitle": {
    "message": "Настраиваемый шаг"
  },
  "panels/recorder/components/StepView.ts | doubleClickStepTitle": {
    "message": "Двойное нажатие кнопкой мыши"
  },
  "panels/recorder/components/StepView.ts | elementRoleButton": {
    "message": "Кнопка"
  },
  "panels/recorder/components/StepView.ts | elementRoleFallback": {
    "message": "Элемент"
  },
  "panels/recorder/components/StepView.ts | elementRoleInput": {
    "message": "Ввод"
  },
  "panels/recorder/components/StepView.ts | emulateNetworkConditionsStepTitle": {
    "message": "Эмуляция условий подключения к сети"
  },
  "panels/recorder/components/StepView.ts | hoverStepTitle": {
    "message": "Наведение"
  },
  "panels/recorder/components/StepView.ts | keyDownStepTitle": {
    "message": "Клавиша нажата"
  },
  "panels/recorder/components/StepView.ts | keyUpStepTitle": {
    "message": "Клавиша отпущена"
  },
  "panels/recorder/components/StepView.ts | navigateStepTitle": {
    "message": "Переход"
  },
  "panels/recorder/components/StepView.ts | openStepActions": {
    "message": "Список действий, выполненных на этом шаге"
  },
  "panels/recorder/components/StepView.ts | removeBreakpoint": {
    "message": "Удалить точку останова"
  },
  "panels/recorder/components/StepView.ts | removeStep": {
    "message": "Удалить шаг"
  },
  "panels/recorder/components/StepView.ts | scrollStepTitle": {
    "message": "Прокрутка"
  },
  "panels/recorder/components/StepView.ts | setViewportClickTitle": {
    "message": "Настройка области просмотра"
  },
  "panels/recorder/components/StepView.ts | stepManagement": {
    "message": "Управление этапами"
  },
  "panels/recorder/components/StepView.ts | waitForElementStepTitle": {
    "message": "Ожидание элемента"
  },
  "panels/recorder/components/StepView.ts | waitForExpressionStepTitle": {
    "message": "Ожидание выражения"
  },
  "panels/recorder/models/RecorderSettings.ts | defaultRecordingName": {
    "message": "Запись ({TIME} {DATE})"
  },
  "panels/recorder/recorder-meta.ts | createRecording": {
    "message": "Создать запись"
  },
  "panels/recorder/recorder-meta.ts | recorder": {
    "message": "Регистратор"
  },
  "panels/recorder/recorder-meta.ts | replayRecording": {
    "message": "Воспроизвести запись"
  },
  "panels/recorder/recorder-meta.ts | showRecorder": {
    "message": "Показать панель \"Регистратор\""
  },
  "panels/recorder/recorder-meta.ts | startStopRecording": {
    "message": "Начать/остановить запись"
  },
  "panels/recorder/recorder-meta.ts | toggleCode": {
    "message": "Включить/отключить режим просмотра кода"
  },
  "panels/screencast/ScreencastApp.ts | toggleScreencast": {
    "message": "Показать/скрыть скринкаст"
  },
  "panels/screencast/ScreencastView.ts | addressBar": {
    "message": "Адресная строка"
  },
  "panels/screencast/ScreencastView.ts | back": {
    "message": "назад"
  },
  "panels/screencast/ScreencastView.ts | forward": {
    "message": "вперед"
  },
  "panels/screencast/ScreencastView.ts | mouseInput": {
    "message": "Эмулировать мышь"
  },
  "panels/screencast/ScreencastView.ts | profilingInProgress": {
    "message": "Выполняется профилирование"
  },
  "panels/screencast/ScreencastView.ts | reload": {
    "message": "обновить"
  },
  "panels/screencast/ScreencastView.ts | screencastViewOfDebugTarget": {
    "message": "Просмотр скринкаста целевого объекта отладки"
  },
  "panels/screencast/ScreencastView.ts | theTabIsInactive": {
    "message": "Вкладка неактивна"
  },
  "panels/screencast/ScreencastView.ts | touchInput": {
    "message": "Эмулировать касание"
  },
  "panels/search/SearchResultsPane.ts | lineS": {
    "message": "Строка {PH1}"
  },
  "panels/search/SearchResultsPane.ts | matchesCountS": {
    "message": "Совпадения: {PH1}"
  },
  "panels/search/SearchResultsPane.ts | showDMore": {
    "message": "Показать ещё {PH1}"
  },
  "panels/search/SearchView.ts | clear": {
    "message": "Сбросить"
  },
  "panels/search/SearchView.ts | foundDMatchingLinesInDFiles": {
    "message": "Найдены совпадающие строки ({PH1}) в нескольких файлах ({PH2})."
  },
  "panels/search/SearchView.ts | foundDMatchingLinesInFile": {
    "message": "Обнаружены совпадающие строки ({PH1}) в одном файле."
  },
  "panels/search/SearchView.ts | foundMatchingLineInFile": {
    "message": "Обнаружена 1 совпадающая строка в одном файле."
  },
  "panels/search/SearchView.ts | indexing": {
    "message": "Индексация…"
  },
  "panels/search/SearchView.ts | indexingInterrupted": {
    "message": "Индексирование прервано."
  },
  "panels/search/SearchView.ts | matchCase": {
    "message": "Учитывать регистр"
  },
  "panels/search/SearchView.ts | noMatchesFound": {
    "message": "Совпадений не найдено."
  },
  "panels/search/SearchView.ts | refresh": {
    "message": "Обновить"
  },
  "panels/search/SearchView.ts | search": {
    "message": "Поиск"
  },
  "panels/search/SearchView.ts | searchFinished": {
    "message": "Поиск завершен."
  },
  "panels/search/SearchView.ts | searchInterrupted": {
    "message": "Поиск прерван."
  },
  "panels/search/SearchView.ts | searchQuery": {
    "message": "Поисковый запрос"
  },
  "panels/search/SearchView.ts | searching": {
    "message": "Поиск…"
  },
  "panels/search/SearchView.ts | useRegularExpression": {
    "message": "Использовать регулярное выражение"
  },
  "panels/security/SecurityModel.ts | cipherWithMAC": {
    "message": "{PH1} и {PH2}"
  },
  "panels/security/SecurityModel.ts | keyExchangeWithGroup": {
    "message": "{PH1} и {PH2}"
  },
  "panels/security/SecurityModel.ts | theSecurityOfThisPageIsUnknown": {
    "message": "Статус безопасности этой страницы неизвестен."
  },
  "panels/security/SecurityModel.ts | thisPageIsNotSecure": {
    "message": "Подключение не защищено."
  },
  "panels/security/SecurityModel.ts | thisPageIsNotSecureBrokenHttps": {
    "message": "Подключение не защищено (ошибка HTTPS)."
  },
  "panels/security/SecurityModel.ts | thisPageIsSecureValidHttps": {
    "message": "Это безопасная страница (действительный HTTPS)."
  },
  "panels/security/SecurityPanel.ts | activeContentWithCertificate": {
    "message": "активный контент с ошибками сертификата"
  },
  "panels/security/SecurityPanel.ts | activeMixedContent": {
    "message": "активный смешанный контент"
  },
  "panels/security/SecurityPanel.ts | allResourcesOnThisPageAreServed": {
    "message": "Все ресурсы на этой странице безопасны."
  },
  "panels/security/SecurityPanel.ts | allServedSecurely": {
    "message": "все показы защищены"
  },
  "panels/security/SecurityPanel.ts | blockedMixedContent": {
    "message": "Заблокированный смешанный контент"
  },
  "panels/security/SecurityPanel.ts | certificate": {
    "message": "Сертификат"
  },
  "panels/security/SecurityPanel.ts | certificateExpiresSoon": {
    "message": "Срок действия сертификата скоро истекает"
  },
  "panels/security/SecurityPanel.ts | certificateTransparency": {
    "message": "Проверка сертификатов"
  },
  "panels/security/SecurityPanel.ts | chromeHasDeterminedThatThisSiteS": {
    "message": "Браузер Chrome определил, что этот сайт может оказаться поддельным или мошенническим."
  },
  "panels/security/SecurityPanel.ts | cipher": {
    "message": "Шифр"
  },
  "panels/security/SecurityPanel.ts | connection": {
    "message": "Подключение"
  },
  "panels/security/SecurityPanel.ts | contentWithCertificateErrors": {
    "message": "контент с ошибками сертификата"
  },
  "panels/security/SecurityPanel.ts | enabled": {
    "message": "включено"
  },
  "panels/security/SecurityPanel.ts | encryptedClientHello": {
    "message": "Сообщение ClientHello зашифровано"
  },
  "panels/security/SecurityPanel.ts | flaggedByGoogleSafeBrowsing": {
    "message": "Отмечено сервисом \"Google Безопасный просмотр\""
  },
  "panels/security/SecurityPanel.ts | hashAlgorithm": {
    "message": "Алгоритм хеширования"
  },
  "panels/security/SecurityPanel.ts | hideFullDetails": {
    "message": "Скрыть подробности"
  },
  "panels/security/SecurityPanel.ts | ifYouBelieveThisIsShownIn": {
    "message": "Если вы думаете, что это сообщение показано по ошибке, ознакомьтесь с информацией на странице https://g.co/chrome/lookalike-warnings."
  },
  "panels/security/SecurityPanel.ts | ifYouBelieveThisIsShownInErrorSafety": {
    "message": "Если вы думаете, что это сообщение показано по ошибке, ознакомьтесь с информацией на странице https://g.co/chrome/lookalike-warnings."
  },
  "panels/security/SecurityPanel.ts | info": {
    "message": "Информация"
  },
  "panels/security/SecurityPanel.ts | insecureSha": {
    "message": "небезопасно (SHA-1)"
  },
  "panels/security/SecurityPanel.ts | issuedAt": {
    "message": "Время выпуска"
  },
  "panels/security/SecurityPanel.ts | issuer": {
    "message": "Издатель"
  },
  "panels/security/SecurityPanel.ts | keyExchange": {
    "message": "Обмен ключами"
  },
  "panels/security/SecurityPanel.ts | logId": {
    "message": "Идентификатор журнала"
  },
  "panels/security/SecurityPanel.ts | logName": {
    "message": "Название журнала"
  },
  "panels/security/SecurityPanel.ts | mainOrigin": {
    "message": "Главный источник"
  },
  "panels/security/SecurityPanel.ts | mainOriginNonsecure": {
    "message": "Основной источник (небезопасный)"
  },
  "panels/security/SecurityPanel.ts | mainOriginSecure": {
    "message": "Главный источник (безопасно)"
  },
  "panels/security/SecurityPanel.ts | missing": {
    "message": "отсутствует"
  },
  "panels/security/SecurityPanel.ts | mixedContent": {
    "message": "смешанный контент"
  },
  "panels/security/SecurityPanel.ts | na": {
    "message": "(Н/Д)"
  },
  "panels/security/SecurityPanel.ts | noSecurityDetailsAreAvailableFor": {
    "message": "Параметры безопасности недоступны для этого источника."
  },
  "panels/security/SecurityPanel.ts | noSecurityInformation": {
    "message": "Нет информации о безопасности"
  },
  "panels/security/SecurityPanel.ts | nonsecureForm": {
    "message": "небезопасная форма"
  },
  "panels/security/SecurityPanel.ts | nonsecureOrigins": {
    "message": "Небезопасные источники"
  },
  "panels/security/SecurityPanel.ts | notSecure": {
    "message": "Не защищено"
  },
  "panels/security/SecurityPanel.ts | notSecureBroken": {
    "message": "Не защищено (нарушено)"
  },
  "panels/security/SecurityPanel.ts | obsoleteConnectionSettings": {
    "message": "устаревшие настройки подключения"
  },
  "panels/security/SecurityPanel.ts | openFullCertificateDetails": {
    "message": "Открыть полные сведения о сертификате"
  },
  "panels/security/SecurityPanel.ts | origin": {
    "message": "Источник"
  },
  "panels/security/SecurityPanel.ts | overview": {
    "message": "Обзор"
  },
  "panels/security/SecurityPanel.ts | possibleSpoofingUrl": {
    "message": "Возможная подмена URL"
  },
  "panels/security/SecurityPanel.ts | protocol": {
    "message": "Протокол"
  },
  "panels/security/SecurityPanel.ts | publickeypinningBypassed": {
    "message": "Закрепление открытого ключа игнорируется."
  },
  "panels/security/SecurityPanel.ts | publickeypinningWasBypassedByA": {
    "message": "Локальный корневой сертификат обходит закрепление открытого ключа."
  },
  "panels/security/SecurityPanel.ts | reloadThePageToRecordRequestsFor": {
    "message": "Чтобы записать запросы HTTP-ресурсов, обновите страницу."
  },
  "panels/security/SecurityPanel.ts | reloadToViewDetails": {
    "message": "Перезагрузите, чтобы увидеть подробные сведения."
  },
  "panels/security/SecurityPanel.ts | resources": {
    "message": "Ресурсы"
  },
  "panels/security/SecurityPanel.ts | rsaKeyExchangeIsObsoleteEnableAn": {
    "message": "Обмен ключами RSA устарел. Включите набор шифров на основе ECDHE."
  },
  "panels/security/SecurityPanel.ts | sIsObsoleteEnableAnAesgcmbased": {
    "message": "Шифр {PH1} устарел. Включите набор шифров AES-GCM."
  },
  "panels/security/SecurityPanel.ts | sIsObsoleteEnableTlsOrLater": {
    "message": "Протокол {PH1} устарел. Обновите TLS до версии 1.2 или более поздней."
  },
  "panels/security/SecurityPanel.ts | sct": {
    "message": "SCT"
  },
  "panels/security/SecurityPanel.ts | secure": {
    "message": "Защищено"
  },
  "panels/security/SecurityPanel.ts | secureConnectionSettings": {
    "message": "настройки безопасного подключения"
  },
  "panels/security/SecurityPanel.ts | secureOrigins": {
    "message": "Безопасные источники"
  },
  "panels/security/SecurityPanel.ts | securityOverview": {
    "message": "Общие сведения о безопасности"
  },
  "panels/security/SecurityPanel.ts | serverSignature": {
    "message": "Подпись сервера"
  },
  "panels/security/SecurityPanel.ts | showFullDetails": {
    "message": "Показать полные сведения"
  },
  "panels/security/SecurityPanel.ts | showLess": {
    "message": "Свернуть"
  },
  "panels/security/SecurityPanel.ts | showMoreSTotal": {
    "message": "Показать больше (всего {PH1})"
  },
  "panels/security/SecurityPanel.ts | signatureAlgorithm": {
    "message": "Алгоритм подписи"
  },
  "panels/security/SecurityPanel.ts | signatureData": {
    "message": "Данные подписи"
  },
  "panels/security/SecurityPanel.ts | source": {
    "message": "Источник"
  },
  "panels/security/SecurityPanel.ts | subject": {
    "message": "Субъект"
  },
  "panels/security/SecurityPanel.ts | subjectAlternativeNameMissing": {
    "message": "Не найдено: Subject Alternative Name."
  },
  "panels/security/SecurityPanel.ts | theCertificateChainForThisSite": {
    "message": "В цепочке сертификатов этого сайта есть сертификат, подписанный с помощью алгоритма SHA-1."
  },
  "panels/security/SecurityPanel.ts | theCertificateForThisSiteDoesNot": {
    "message": "У сертификата сайта нет расширения Subject Alternative Name с доменным именем или IP-адресом."
  },
  "panels/security/SecurityPanel.ts | theCertificateForThisSiteExpires": {
    "message": "Срок действия сертификата для этого сайта истекает в течение следующих 48 часов. Его необходимо продлить."
  },
  "panels/security/SecurityPanel.ts | theConnectionToThisSiteIs": {
    "message": "Подключение к сайту зашифровано и аутентифицировано с использованием {PH1}, {PH2} и {PH3}."
  },
  "panels/security/SecurityPanel.ts | theConnectionToThisSiteIsUsingA": {
    "message": "Для подключения к этому сайту используется действительный сертификат сервера, выпущенный {PH1}."
  },
  "panels/security/SecurityPanel.ts | theSecurityDetailsAboveAreFrom": {
    "message": "Указанные выше параметры безопасности взяты из первого проверенного ответа."
  },
  "panels/security/SecurityPanel.ts | theServerSignatureUsesShaWhichIs": {
    "message": "Сервер использует устаревшую подпись SHA-1. Включите алгоритм подписи SHA-2. Эта подпись отличается от подписи в сертификате."
  },
  "panels/security/SecurityPanel.ts | thisIsAnErrorPage": {
    "message": "Это страница ошибки."
  },
  "panels/security/SecurityPanel.ts | thisOriginIsANonhttpsSecure": {
    "message": "Этот источник не является безопасным источником \"не-HTTPS\""
  },
  "panels/security/SecurityPanel.ts | thisPageHasANonhttpsSecureOrigin": {
    "message": "У этой страницы защищенный источник не HTTPS."
  },
  "panels/security/SecurityPanel.ts | thisPageIncludesAFormWithA": {
    "message": "На этой странице присутствует форма с небезопасным атрибутом action."
  },
  "panels/security/SecurityPanel.ts | thisPageIncludesHttpResources": {
    "message": "Эта страница включает ресурсы HTTP."
  },
  "panels/security/SecurityPanel.ts | thisPageIncludesResourcesThat": {
    "message": "Эта страница включает ресурсы, загруженные с ошибками сертификата."
  },
  "panels/security/SecurityPanel.ts | thisPageIsDangerousFlaggedBy": {
    "message": "Это опасная страница (пометка сервиса \"Google Безопасный просмотр\")."
  },
  "panels/security/SecurityPanel.ts | thisPageIsInsecureUnencrypted": {
    "message": "Небезопасная страница (HTTP без шифрования)."
  },
  "panels/security/SecurityPanel.ts | thisPageIsSuspicious": {
    "message": "Подозрительная страница"
  },
  "panels/security/SecurityPanel.ts | thisPageIsSuspiciousFlaggedBy": {
    "message": "Эта страница выглядит подозрительно (пометка добавлена браузером Chrome)."
  },
  "panels/security/SecurityPanel.ts | thisRequestCompliesWithChromes": {
    "message": "Запрос соответствует правилам проверки сертификатов Chrome."
  },
  "panels/security/SecurityPanel.ts | thisRequestDoesNotComplyWith": {
    "message": "Запрос не соответствует правилам проверки сертификата Chrome."
  },
  "panels/security/SecurityPanel.ts | thisResponseWasLoadedFromCache": {
    "message": "Этот ответ загружен из кеша. Могут отсутствовать некоторые сведения о безопасности."
  },
  "panels/security/SecurityPanel.ts | thisSiteIsMissingAValidTrusted": {
    "message": "У этого сайта нет действительного сертификата ({PH1})."
  },
  "panels/security/SecurityPanel.ts | thisSitesHostnameLooksSimilarToP": {
    "message": "Имя хоста этого сайта похоже на {PH1}. Иногда злоумышленники создают копии сайтов и вносят незаметные изменения в их доменное имя."
  },
  "panels/security/SecurityPanel.ts | toCheckThisPagesStatusVisit": {
    "message": "Чтобы узнать статус страницы, перейдите на g.co/safebrowsingstatus."
  },
  "panels/security/SecurityPanel.ts | unknownCanceled": {
    "message": "Неизвестно/отменено"
  },
  "panels/security/SecurityPanel.ts | unknownField": {
    "message": "неизвестно"
  },
  "panels/security/SecurityPanel.ts | validAndTrusted": {
    "message": "действительный и надежный"
  },
  "panels/security/SecurityPanel.ts | validFrom": {
    "message": "Действительно с"
  },
  "panels/security/SecurityPanel.ts | validUntil": {
    "message": "Действует до"
  },
  "panels/security/SecurityPanel.ts | validationStatus": {
    "message": "Статус проверки"
  },
  "panels/security/SecurityPanel.ts | viewCertificate": {
    "message": "Показать сертификат"
  },
  "panels/security/SecurityPanel.ts | viewDRequestsInNetworkPanel": {
    "message": "{n,plural, =1{Посмотреть # запрос на панели \"Сеть\"}one{Посмотреть # запрос на панели \"Сеть\"}few{Посмотреть # запроса на панели \"Сеть\"}many{Посмотреть # запросов на панели \"Сеть\"}other{Посмотреть # запроса на панели \"Сеть\"}}"
  },
  "panels/security/SecurityPanel.ts | viewRequestsInNetworkPanel": {
    "message": "Посмотреть запросы на панели \"Сеть\""
  },
  "panels/security/SecurityPanel.ts | youHaveRecentlyAllowedContent": {
    "message": "Вы недавно разрешили на этом сайте запуск контента (скриптов или окон iframe), загруженного с ошибками сертификации."
  },
  "panels/security/SecurityPanel.ts | youHaveRecentlyAllowedNonsecure": {
    "message": "Вы недавно разрешили запуск небезопасного контента (например, скрипты или окна iframe) на этом сайте."
  },
  "panels/security/SecurityPanel.ts | yourConnectionToThisOriginIsNot": {
    "message": "Подключение к источнику не защищено."
  },
  "panels/security/SecurityPanel.ts | yourPageRequestedNonsecure": {
    "message": "Ваша страница отправила запрос в незащищенные источники, которые были заблокированы."
  },
  "panels/security/security-meta.ts | security": {
    "message": "Защита"
  },
  "panels/security/security-meta.ts | showSecurity": {
    "message": "Показать панель \"Безопасность\""
  },
  "panels/sensors/LocationsSettingsTab.ts | addLocation": {
    "message": "Добавить расположение"
  },
  "panels/sensors/LocationsSettingsTab.ts | customLocations": {
    "message": "Пользовательские местоположения"
  },
  "panels/sensors/LocationsSettingsTab.ts | lat": {
    "message": "Широта"
  },
  "panels/sensors/LocationsSettingsTab.ts | latitude": {
    "message": "Широта"
  },
  "panels/sensors/LocationsSettingsTab.ts | latitudeMustBeANumber": {
    "message": "Широта должна быть выражена числом."
  },
  "panels/sensors/LocationsSettingsTab.ts | latitudeMustBeGreaterThanOrEqual": {
    "message": "Широта должна быть больше или равна {PH1}."
  },
  "panels/sensors/LocationsSettingsTab.ts | latitudeMustBeLessThanOrEqualToS": {
    "message": "Широта должна быть меньше или равна {PH1}."
  },
  "panels/sensors/LocationsSettingsTab.ts | locale": {
    "message": "Региональные настройки"
  },
  "panels/sensors/LocationsSettingsTab.ts | localeMustContainAlphabetic": {
    "message": "Региональные настройки должны содержать буквы."
  },
  "panels/sensors/LocationsSettingsTab.ts | locationName": {
    "message": "Название местоположения"
  },
  "panels/sensors/LocationsSettingsTab.ts | locationNameCannotBeEmpty": {
    "message": "Введите название места."
  },
  "panels/sensors/LocationsSettingsTab.ts | locationNameMustBeLessThanS": {
    "message": "Количество символов в названии места должно быть меньше {PH1}."
  },
  "panels/sensors/LocationsSettingsTab.ts | long": {
    "message": "Долгота"
  },
  "panels/sensors/LocationsSettingsTab.ts | longitude": {
    "message": "Долгота"
  },
  "panels/sensors/LocationsSettingsTab.ts | longitudeMustBeANumber": {
    "message": "Долгота должна быть выражена числом."
  },
  "panels/sensors/LocationsSettingsTab.ts | longitudeMustBeGreaterThanOr": {
    "message": "Долгота должна быть больше или равна {PH1}."
  },
  "panels/sensors/LocationsSettingsTab.ts | longitudeMustBeLessThanOrEqualTo": {
    "message": "Долгота должна быть меньше или равна {PH1}."
  },
  "panels/sensors/LocationsSettingsTab.ts | timezoneId": {
    "message": "Идентификатор часового пояса"
  },
  "panels/sensors/LocationsSettingsTab.ts | timezoneIdMustContainAlphabetic": {
    "message": "Идентификатор часового пояса должен содержать буквы."
  },
  "panels/sensors/SensorsView.ts | adjustWithMousewheelOrUpdownKeys": {
    "message": "Меняйте значение с помощью колеса мыши или клавиш \"Вверх\" и \"Вниз\". {PH1} – ±10, Shift – ±1, Alt – ±0,01."
  },
  "panels/sensors/SensorsView.ts | alpha": {
    "message": "α (альфа)"
  },
  "panels/sensors/SensorsView.ts | beta": {
    "message": "β (бета)"
  },
  "panels/sensors/SensorsView.ts | customOrientation": {
    "message": "Пользовательская ориентация"
  },
  "panels/sensors/SensorsView.ts | deviceOrientationSetToAlphaSBeta": {
    "message": "Ориентация устройства: альфа {PH1}, бета {PH2}, гамма {PH3}."
  },
  "panels/sensors/SensorsView.ts | displayDown": {
    "message": "Экран вниз"
  },
  "panels/sensors/SensorsView.ts | displayUp": {
    "message": "Дисплеем вверх"
  },
  "panels/sensors/SensorsView.ts | enableOrientationToRotate": {
    "message": "Чтобы поворачивать, включите ориентацию."
  },
  "panels/sensors/SensorsView.ts | error": {
    "message": "Ошибка"
  },
  "panels/sensors/SensorsView.ts | forcesSelectedIdleStateEmulation": {
    "message": "Запускает выбранную эмуляцию состояния бездействия."
  },
  "panels/sensors/SensorsView.ts | forcesTouchInsteadOfClick": {
    "message": "Позволяет использовать только сенсорный ввод."
  },
  "panels/sensors/SensorsView.ts | gamma": {
    "message": "γ (гамма)"
  },
  "panels/sensors/SensorsView.ts | landscapeLeft": {
    "message": "Горизонтальная с поворотом влево"
  },
  "panels/sensors/SensorsView.ts | landscapeRight": {
    "message": "Горизонтальная с поворотом вправо"
  },
  "panels/sensors/SensorsView.ts | latitude": {
    "message": "Широта"
  },
  "panels/sensors/SensorsView.ts | locale": {
    "message": "Региональные настройки"
  },
  "panels/sensors/SensorsView.ts | location": {
    "message": "Расположение"
  },
  "panels/sensors/SensorsView.ts | locationUnavailable": {
    "message": "Местонахождение неизвестно"
  },
  "panels/sensors/SensorsView.ts | longitude": {
    "message": "Долгота"
  },
  "panels/sensors/SensorsView.ts | manage": {
    "message": "Настроить"
  },
  "panels/sensors/SensorsView.ts | manageTheListOfLocations": {
    "message": "Изменить список мест"
  },
  "panels/sensors/SensorsView.ts | noOverride": {
    "message": "Не переопределять"
  },
  "panels/sensors/SensorsView.ts | off": {
    "message": "Выключено"
  },
  "panels/sensors/SensorsView.ts | orientation": {
    "message": "Ориентация"
  },
  "panels/sensors/SensorsView.ts | other": {
    "message": "Другое"
  },
  "panels/sensors/SensorsView.ts | overrides": {
    "message": "Переопределения"
  },
  "panels/sensors/SensorsView.ts | portrait": {
    "message": "Вертикальное расположение"
  },
  "panels/sensors/SensorsView.ts | portraitUpsideDown": {
    "message": "Вертикальная с поворотом на 180°"
  },
  "panels/sensors/SensorsView.ts | presets": {
    "message": "Шаблоны"
  },
  "panels/sensors/SensorsView.ts | reset": {
    "message": "Сбросить"
  },
  "panels/sensors/SensorsView.ts | resetDeviceOrientation": {
    "message": "Сбросить настройки ориентации устройства"
  },
  "panels/sensors/SensorsView.ts | shiftdragHorizontallyToRotate": {
    "message": "Чтобы вращать модель вокруг оси Y, зажмите Shift и перетаскивайте ее в горизонтальной плоскости."
  },
  "panels/sensors/SensorsView.ts | timezoneId": {
    "message": "Идентификатор часового пояса"
  },
  "panels/sensors/sensors-meta.ts | accelerometer": {
    "message": "акселерометр"
  },
  "panels/sensors/sensors-meta.ts | deviceOrientation": {
    "message": "ориентация устройства"
  },
  "panels/sensors/sensors-meta.ts | devicebased": {
    "message": "Зависит от устройства"
  },
  "panels/sensors/sensors-meta.ts | emulateIdleDetectorState": {
    "message": "Эмулировать состояние Idle Detector"
  },
  "panels/sensors/sensors-meta.ts | forceEnabled": {
    "message": "Принудительно включено"
  },
  "panels/sensors/sensors-meta.ts | geolocation": {
    "message": "геолокация"
  },
  "panels/sensors/sensors-meta.ts | locale": {
    "message": "региональные настройки"
  },
  "panels/sensors/sensors-meta.ts | locales": {
    "message": "региональные настройки"
  },
  "panels/sensors/sensors-meta.ts | locations": {
    "message": "Места"
  },
  "panels/sensors/sensors-meta.ts | noIdleEmulation": {
    "message": "Отменить эмуляцию бездействия"
  },
  "panels/sensors/sensors-meta.ts | sensors": {
    "message": "Датчики"
  },
  "panels/sensors/sensors-meta.ts | showLocations": {
    "message": "Показать местоположения"
  },
  "panels/sensors/sensors-meta.ts | showSensors": {
    "message": "Показать \"Датчики\""
  },
  "panels/sensors/sensors-meta.ts | timezones": {
    "message": "часовые пояса"
  },
  "panels/sensors/sensors-meta.ts | touch": {
    "message": "Касание"
  },
  "panels/sensors/sensors-meta.ts | userActiveScreenLocked": {
    "message": "Пользователь активен, экран заблокирован"
  },
  "panels/sensors/sensors-meta.ts | userActiveScreenUnlocked": {
    "message": "Пользователь активен, экран разблокирован"
  },
  "panels/sensors/sensors-meta.ts | userIdleScreenLocked": {
    "message": "Пользователь бездействует, экран заблокирован"
  },
  "panels/sensors/sensors-meta.ts | userIdleScreenUnlocked": {
    "message": "Пользователь бездействует, экран разблокирован"
  },
  "panels/settings/FrameworkIgnoreListSettingsTab.ts | addFilenamePattern": {
    "message": "Добавить шаблон для названия файла"
  },
  "panels/settings/FrameworkIgnoreListSettingsTab.ts | addPattern": {
    "message": "Добавить шаблон…"
  },
  "panels/settings/FrameworkIgnoreListSettingsTab.ts | automaticallyIgnoreListKnownThirdPartyScripts": {
    "message": "Известные сторонние скрипты из карт исходных кодов"
  },
  "panels/settings/FrameworkIgnoreListSettingsTab.ts | customExclusionRules": {
    "message": "Пользовательские правила исключений:"
  },
  "panels/settings/FrameworkIgnoreListSettingsTab.ts | debuggerWillSkipThroughThe": {
    "message": "Отладчик пройдет по скриптам и не будет останавливаться на вызванных ими исключениях."
  },
  "panels/settings/FrameworkIgnoreListSettingsTab.ts | enableIgnoreListing": {
    "message": "Включить список игнорируемых"
  },
  "panels/settings/FrameworkIgnoreListSettingsTab.ts | enableIgnoreListingTooltip": {
    "message": "Снимите флажок, чтобы отключить список игнорируемых"
  },
  "panels/settings/FrameworkIgnoreListSettingsTab.ts | frameworkIgnoreList": {
    "message": "Список игнорируемых фреймворков"
  },
  "panels/settings/FrameworkIgnoreListSettingsTab.ts | generalExclusionRules": {
    "message": "Общие правила исключений:"
  },
  "panels/settings/FrameworkIgnoreListSettingsTab.ts | ignoreListContentScripts": {
    "message": "Скрипты для содержимого, внедренные расширениями"
  },
  "panels/settings/FrameworkIgnoreListSettingsTab.ts | ignoreScriptsWhoseNamesMatchS": {
    "message": "Игнорировать скрипты, имена которых соответствуют шаблону {PH1}"
  },
  "panels/settings/FrameworkIgnoreListSettingsTab.ts | learnMore": {
    "message": "Подробнее…"
  },
  "panels/settings/FrameworkIgnoreListSettingsTab.ts | pattern": {
    "message": "Добавить шаблон"
  },
  "panels/settings/FrameworkIgnoreListSettingsTab.ts | patternAlreadyExists": {
    "message": "Шаблон уже существует."
  },
  "panels/settings/FrameworkIgnoreListSettingsTab.ts | patternCannotBeEmpty": {
    "message": "Шаблон не может быть пустым."
  },
  "panels/settings/FrameworkIgnoreListSettingsTab.ts | patternMustBeAValidRegular": {
    "message": "В шаблоне могут указываться только допустимые регулярные выражения."
  },
  "panels/settings/KeybindsSettingsTab.ts | FullListOfDevtoolsKeyboard": {
    "message": "Полный список сочетаний клавиш и жестов для инструментов разработчика"
  },
  "panels/settings/KeybindsSettingsTab.ts | ResetShortcutsForAction": {
    "message": "Сбросить быстрые клавиши для действия"
  },
  "panels/settings/KeybindsSettingsTab.ts | RestoreDefaultShortcuts": {
    "message": "Восстановить сочетания клавиш по умолчанию"
  },
  "panels/settings/KeybindsSettingsTab.ts | addAShortcut": {
    "message": "Добавить сочетание клавиш"
  },
  "panels/settings/KeybindsSettingsTab.ts | confirmChanges": {
    "message": "Подтвердить изменения"
  },
  "panels/settings/KeybindsSettingsTab.ts | discardChanges": {
    "message": "Отменить изменения"
  },
  "panels/settings/KeybindsSettingsTab.ts | editShortcut": {
    "message": "Изменить сочетание клавиш"
  },
  "panels/settings/KeybindsSettingsTab.ts | keyboardShortcutsList": {
    "message": "Список сочетаний клавиш"
  },
  "panels/settings/KeybindsSettingsTab.ts | matchShortcutsFromPreset": {
    "message": "Соответствующие сочетания клавиш из набора"
  },
  "panels/settings/KeybindsSettingsTab.ts | noShortcutForAction": {
    "message": "Нет сочетания клавиш для этого действия"
  },
  "panels/settings/KeybindsSettingsTab.ts | removeShortcut": {
    "message": "Удалить сочетание клавиш"
  },
  "panels/settings/KeybindsSettingsTab.ts | shortcutModified": {
    "message": "Сочетание клавиш изменено"
  },
  "panels/settings/KeybindsSettingsTab.ts | shortcuts": {
    "message": "Сочетания клавиш"
  },
  "panels/settings/KeybindsSettingsTab.ts | shortcutsCannotContainOnly": {
    "message": "Сочетания клавиш не могут состоять только из модификаторов."
  },
  "panels/settings/KeybindsSettingsTab.ts | thisShortcutIsInUseByS": {
    "message": "Это сочетание клавиш используется элементом \"{PH1}: {PH2}\""
  },
  "panels/settings/SettingsScreen.ts | experiments": {
    "message": "Экспериментальные функции"
  },
  "panels/settings/SettingsScreen.ts | filterExperimentsLabel": {
    "message": "Фильтр"
  },
  "panels/settings/SettingsScreen.ts | learnMore": {
    "message": "Подробнее…"
  },
  "panels/settings/SettingsScreen.ts | noResults": {
    "message": "Нет экспериментов, соответствующих условиям фильтра."
  },
  "panels/settings/SettingsScreen.ts | oneOrMoreSettingsHaveChanged": {
    "message": "Чтобы изменения настроек вступили в силу, перезапустите инструменты разработчика."
  },
  "panels/settings/SettingsScreen.ts | preferences": {
    "message": "Параметры"
  },
  "panels/settings/SettingsScreen.ts | restoreDefaultsAndReload": {
    "message": "Восстановить настройки по умолчанию и обновить страницу"
  },
  "panels/settings/SettingsScreen.ts | sendFeedback": {
    "message": "Отправить отзыв"
  },
  "panels/settings/SettingsScreen.ts | settings": {
    "message": "Настройки"
  },
  "panels/settings/SettingsScreen.ts | shortcuts": {
    "message": "Сочетания клавиш"
  },
  "panels/settings/SettingsScreen.ts | theseExperimentsAreParticularly": {
    "message": "Эти эксперименты крайне ненадежны. Включая их, вы берете на себя весь риск."
  },
  "panels/settings/SettingsScreen.ts | theseExperimentsCouldBeUnstable": {
    "message": "Эти эксперименты могут быть нестабильны или ненадежны. Может потребоваться перезапуск инструментов разработчика."
  },
  "panels/settings/SettingsScreen.ts | warning": {
    "message": "ВНИМАНИЕ!"
  },
  "panels/settings/components/SyncSection.ts | preferencesSyncDisabled": {
    "message": "Чтобы включить этот параметр, необходимо активировать синхронизацию настроек в Chrome."
  },
  "panels/settings/components/SyncSection.ts | settings": {
    "message": "Открыть настройки"
  },
  "panels/settings/components/SyncSection.ts | signedIn": {
    "message": "Выполнен вход в аккаунт Chrome:"
  },
  "panels/settings/components/SyncSection.ts | syncDisabled": {
    "message": "Чтобы включить эту настройку, необходимо активировать синхронизацию Chrome."
  },
  "panels/settings/emulation/DevicesSettingsTab.ts | addCustomDevice": {
    "message": "Добавить пользовательское устройство"
  },
  "panels/settings/emulation/DevicesSettingsTab.ts | device": {
    "message": "Устройство"
  },
  "panels/settings/emulation/DevicesSettingsTab.ts | deviceAddedOrUpdated": {
    "message": "Устройство \"{PH1}\" добавлено или обновлено."
  },
  "panels/settings/emulation/DevicesSettingsTab.ts | deviceName": {
    "message": "Название устройства"
  },
  "panels/settings/emulation/DevicesSettingsTab.ts | deviceNameCannotBeEmpty": {
    "message": "Укажите название устройства."
  },
  "panels/settings/emulation/DevicesSettingsTab.ts | deviceNameMustBeLessThanS": {
    "message": "Количество символов в названии устройства должно быть меньше {PH1}."
  },
  "panels/settings/emulation/DevicesSettingsTab.ts | devicePixelRatio": {
    "message": "Соотношение логических и физических пикселей устройства"
  },
  "panels/settings/emulation/DevicesSettingsTab.ts | emulatedDevices": {
    "message": "Эмулированные устройства"
  },
  "panels/settings/emulation/DevicesSettingsTab.ts | height": {
    "message": "Высота"
  },
  "panels/settings/emulation/DevicesSettingsTab.ts | userAgentString": {
    "message": "Строка агента пользователя"
  },
  "panels/settings/emulation/DevicesSettingsTab.ts | userAgentType": {
    "message": "Тип агента пользователя"
  },
  "panels/settings/emulation/DevicesSettingsTab.ts | width": {
    "message": "Ширина"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | addBrand": {
    "message": "Добавить браузер"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | addedBrand": {
    "message": "Строка браузера добавлена."
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | architecture": {
    "message": "Архитектура (Sec-CH-UA-Arch)"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | architecturePlaceholder": {
    "message": "Архитектура (например, x86)"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | brandFullVersionListDelete": {
    "message": "Удалить бренд из полного списка версий"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | brandName": {
    "message": "Браузер"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | brandNameAriaLabel": {
    "message": "Браузер {PH1}"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | brandProperties": {
    "message": "Свойства агента пользователя"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | brandUserAgentDelete": {
    "message": "Удалить бренд из раздела агента пользователя"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | brandVersionAriaLabel": {
    "message": "Версия {PH1}"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | brandVersionPlaceholder": {
    "message": "Версия (например, 87.0.4280.88)"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | deletedBrand": {
    "message": "Строка браузера удалена."
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | deviceModel": {
    "message": "Модель устройства (Sec-CH-UA-Model)"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | deviceProperties": {
    "message": "Свойства устройства"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | fullBrowserVersion": {
    "message": "Версия браузера полностью (Sec-CH-UA-Full-Browser-Version)"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | fullBrowserVersionPlaceholder": {
    "message": "Версия браузера полностью (например, 87.0.4280.88)"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | fullVersionList": {
    "message": "Полный список версий (Sec-CH-UA-Full-Version-List)"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | learnMore": {
    "message": "Подробнее…"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | mobileCheckboxLabel": {
    "message": "Мобильный телефон"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | notRepresentable": {
    "message": "Не может быть представлено в виде структурированной строки заголовков."
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | platformLabel": {
    "message": "Платформа (Sec-CH-UA-Platform/Sec-CH-UA-Platform-Version)"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | platformPlaceholder": {
    "message": "Платформа (например, Android)"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | platformProperties": {
    "message": "Свойства платформы"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | platformVersion": {
    "message": "Версия платформы"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | significantBrandVersionPlaceholder": {
    "message": "Значимая версия (например, 87)"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | title": {
    "message": "Подсказки агента пользователя клиента"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | update": {
    "message": "Обновить"
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | userAgentClientHintsInfo": {
    "message": "Подсказки агента пользователя клиента – это альтернатива строке агента пользователя. Они позволяют более структурированно определять браузер и устройство, а также повышают конфиденциальность."
  },
  "panels/settings/emulation/components/UserAgentClientHintsForm.ts | useragent": {
    "message": "Агент пользователя (Sec-CH-UA)"
  },
  "panels/settings/emulation/emulation-meta.ts | devices": {
    "message": "Устройства"
  },
  "panels/settings/emulation/emulation-meta.ts | showDevices": {
    "message": "Показать устройства"
  },
  "panels/settings/settings-meta.ts | documentation": {
    "message": "Документация"
  },
  "panels/settings/settings-meta.ts | experiments": {
    "message": "Экспериментальные функции"
  },
  "panels/settings/settings-meta.ts | ignoreList": {
    "message": "Список игнорируемых"
  },
  "panels/settings/settings-meta.ts | preferences": {
    "message": "Параметры"
  },
  "panels/settings/settings-meta.ts | settings": {
    "message": "Настройки"
  },
  "panels/settings/settings-meta.ts | shortcuts": {
    "message": "Сочетания клавиш"
  },
  "panels/settings/settings-meta.ts | showExperiments": {
    "message": "Показать эксперименты"
  },
  "panels/settings/settings-meta.ts | showIgnoreList": {
    "message": "Показать список игнорируемых"
  },
  "panels/settings/settings-meta.ts | showPreferences": {
    "message": "Показать \"Параметры\""
  },
  "panels/settings/settings-meta.ts | showShortcuts": {
    "message": "Показать быстрые клавиши"
  },
  "panels/snippets/ScriptSnippetFileSystem.ts | linkedTo": {
    "message": "Связано с {PH1}"
  },
  "panels/snippets/ScriptSnippetFileSystem.ts | scriptSnippet": {
    "message": "Фрагмент скрипта #{PH1}"
  },
  "panels/snippets/SnippetsQuickOpen.ts | noSnippetsFound": {
    "message": "Ничего не найдено."
  },
  "panels/snippets/SnippetsQuickOpen.ts | run": {
    "message": "Запустить"
  },
  "panels/snippets/SnippetsQuickOpen.ts | snippet": {
    "message": "Фрагмент"
  },
  "panels/sources/AddSourceMapURLDialog.ts | add": {
    "message": "Добавить"
  },
  "panels/sources/AddSourceMapURLDialog.ts | debugInfoUrl": {
    "message": "URL-адрес, содержащий символы DWARF: "
  },
  "panels/sources/AddSourceMapURLDialog.ts | sourceMapUrl": {
    "message": "URL карты исходного кода: "
  },
  "panels/sources/BreakpointEditDialog.ts | breakpoint": {
    "message": "Точка останова"
  },
  "panels/sources/BreakpointEditDialog.ts | breakpointType": {
    "message": "Тип точки останова"
  },
  "panels/sources/BreakpointEditDialog.ts | closeDialog": {
    "message": "Закрыть диалоговое окно и сохранить изменения"
  },
  "panels/sources/BreakpointEditDialog.ts | conditionalBreakpoint": {
    "message": "Условная точка останова"
  },
  "panels/sources/BreakpointEditDialog.ts | expressionToCheckBeforePausingEg": {
    "message": "Выражение, которое нужно проверить перед приостановкой, например x > 5"
  },
  "panels/sources/BreakpointEditDialog.ts | learnMoreOnBreakpointTypes": {
    "message": "Подробнее о типах точек останова…"
  },
  "panels/sources/BreakpointEditDialog.ts | logAMessageToConsoleDoNotBreak": {
    "message": "Отправить сообщение в консоль, но не прерывать"
  },
  "panels/sources/BreakpointEditDialog.ts | logMessageEgXIsX": {
    "message": "Записать сообщение в журнале, например 'x is', x"
  },
  "panels/sources/BreakpointEditDialog.ts | logpoint": {
    "message": "Точка записи"
  },
  "panels/sources/BreakpointEditDialog.ts | pauseOnlyWhenTheConditionIsTrue": {
    "message": "Приостанавливать, если условие имеет значение true"
  },
  "panels/sources/CSSPlugin.ts | addSourceMap": {
    "message": "Добавить карту исходного кода"
  },
  "panels/sources/CSSPlugin.ts | openColorPicker": {
    "message": "Открыть палитру"
  },
  "panels/sources/CSSPlugin.ts | openCubicBezierEditor": {
    "message": "Открыть редактор кривой Безье"
  },
  "panels/sources/CallStackSidebarPane.ts | callFrameWarnings": {
    "message": "Для некоторых фреймов вызова есть предупреждения."
  },
  "panels/sources/CallStackSidebarPane.ts | callStack": {
    "message": "Стек вызовов"
  },
  "panels/sources/CallStackSidebarPane.ts | copyStackTrace": {
    "message": "Копировать трассировку стека"
  },
  "panels/sources/CallStackSidebarPane.ts | debugFileNotFound": {
    "message": "Не удалось загрузить отладочный файл {PH1}."
  },
  "panels/sources/CallStackSidebarPane.ts | notPaused": {
    "message": "Не приостановлено"
  },
  "panels/sources/CallStackSidebarPane.ts | onIgnoreList": {
    "message": "в списке игнорируемых"
  },
  "panels/sources/CallStackSidebarPane.ts | restartFrame": {
    "message": "Перезапустить фрейм"
  },
  "panels/sources/CallStackSidebarPane.ts | showIgnorelistedFrames": {
    "message": "Показать фреймы из списка игнорируемых"
  },
  "panels/sources/CallStackSidebarPane.ts | showMore": {
    "message": "Показать больше"
  },
  "panels/sources/CategorizedBreakpointL10n.ts | animationFrameFired": {
    "message": "Запущен фрейм анимации."
  },
  "panels/sources/CategorizedBreakpointL10n.ts | beforeBidderWorkletBiddingStart": {
    "message": "Начало фазы \"Назначение ставок участником аукциона\""
  },
  "panels/sources/CategorizedBreakpointL10n.ts | beforeBidderWorkletReportingStart": {
    "message": "Начало фазы \"Отчет участника аукциона\""
  },
  "panels/sources/CategorizedBreakpointL10n.ts | beforeSellerWorkletReportingStart": {
    "message": "Начало фазы \"Отчет продавца\""
  },
  "panels/sources/CategorizedBreakpointL10n.ts | beforeSellerWorkletScoringStart": {
    "message": "Начало фазы \"Подсчет продавца\""
  },
  "panels/sources/CategorizedBreakpointL10n.ts | cancelAnimationFrame": {
    "message": "Отключить фрейм анимации"
  },
  "panels/sources/CategorizedBreakpointL10n.ts | closeAudiocontext": {
    "message": "Закрыть AudioContext"
  },
  "panels/sources/CategorizedBreakpointL10n.ts | createAudiocontext": {
    "message": "Создать AudioContext"
  },
  "panels/sources/CategorizedBreakpointL10n.ts | createCanvasContext": {
    "message": "Создать контекст элемента canvas"
  },
  "panels/sources/CategorizedBreakpointL10n.ts | policyViolations": {
    "message": "Нарушение правил"
  },
  "panels/sources/CategorizedBreakpointL10n.ts | requestAnimationFrame": {
    "message": "Запрос фрейма анимации"
  },
  "panels/sources/CategorizedBreakpointL10n.ts | resumeAudiocontext": {
    "message": "Возобновить AudioContext"
  },
  "panels/sources/CategorizedBreakpointL10n.ts | scriptBlockedByContentSecurity": {
    "message": "Скрипт заблокирован в соответствии с директивой Content Security Policy"
  },
  "panels/sources/CategorizedBreakpointL10n.ts | scriptFirstStatement": {
    "message": "Первый оператор скрипта"
  },
  "panels/sources/CategorizedBreakpointL10n.ts | setInnerhtml": {
    "message": "Установить innerHTML"
  },
  "panels/sources/CategorizedBreakpointL10n.ts | setTimeoutOrIntervalFired": {
    "message": "Запущено действие {PH1}"
  },
  "panels/sources/CategorizedBreakpointL10n.ts | sinkViolations": {
    "message": "Нарушения приемника"
  },
  "panels/sources/CategorizedBreakpointL10n.ts | suspendAudiocontext": {
    "message": "Приостановка AudioContext"
  },
  "panels/sources/CategorizedBreakpointL10n.ts | webglErrorFired": {
    "message": "Сработала ошибка WebGL"
  },
  "panels/sources/CategorizedBreakpointL10n.ts | webglWarningFired": {
    "message": "Сработало предупреждение WebGL"
  },
  "panels/sources/CoveragePlugin.ts | clickToShowCoveragePanel": {
    "message": "Нажмите, чтобы показать панель \"Область действия\""
  },
  "panels/sources/CoveragePlugin.ts | coverageNa": {
    "message": "Покрытие: н/д"
  },
  "panels/sources/CoveragePlugin.ts | coverageS": {
    "message": "Покрытие: {PH1}"
  },
  "panels/sources/CoveragePlugin.ts | showDetails": {
    "message": "Показать сведения"
  },
  "panels/sources/DebuggerPausedMessage.ts | attributeModifications": {
    "message": "модификации атрибута"
  },
  "panels/sources/DebuggerPausedMessage.ts | childSAdded": {
    "message": "Добавлен дочерний элемент: {PH1}"
  },
  "panels/sources/DebuggerPausedMessage.ts | debuggerPaused": {
    "message": "Отладчик приостановлен"
  },
  "panels/sources/DebuggerPausedMessage.ts | descendantSAdded": {
    "message": "{PH1}: потомок добавлен."
  },
  "panels/sources/DebuggerPausedMessage.ts | descendantSRemoved": {
    "message": "{PH1}: удален потомок"
  },
  "panels/sources/DebuggerPausedMessage.ts | nodeRemoval": {
    "message": "удаление узла"
  },
  "panels/sources/DebuggerPausedMessage.ts | pausedBeforePotentialOutofmemory": {
    "message": "Приостановлено до возможного сбоя из-за нехватки памяти."
  },
  "panels/sources/DebuggerPausedMessage.ts | pausedOnAssertion": {
    "message": "Приостановлено на утверждении"
  },
  "panels/sources/DebuggerPausedMessage.ts | pausedOnBreakpoint": {
    "message": "Приостановлено на точке останова"
  },
  "panels/sources/DebuggerPausedMessage.ts | pausedOnCspViolation": {
    "message": "Приостановлено при нарушении CSP"
  },
  "panels/sources/DebuggerPausedMessage.ts | pausedOnDebuggedFunction": {
    "message": "Приостановлено на отлаживаемой функции"
  },
  "panels/sources/DebuggerPausedMessage.ts | pausedOnEventListener": {
    "message": "Остановлено на прослушивателе событий"
  },
  "panels/sources/DebuggerPausedMessage.ts | pausedOnException": {
    "message": "Остановка при исключении"
  },
  "panels/sources/DebuggerPausedMessage.ts | pausedOnPromiseRejection": {
    "message": "Остановлено на отклонении объекта promise"
  },
  "panels/sources/DebuggerPausedMessage.ts | pausedOnS": {
    "message": "{PH1}: приостановлено"
  },
  "panels/sources/DebuggerPausedMessage.ts | pausedOnXhrOrFetch": {
    "message": "Приостановлено на XHR или fetch"
  },
  "panels/sources/DebuggerPausedMessage.ts | scriptBlockedDueToContent": {
    "message": "Скрипт заблокирован в соответствии с директивой Content Security Policy: {PH1}"
  },
  "panels/sources/DebuggerPausedMessage.ts | subtreeModifications": {
    "message": "модификации поддерева"
  },
  "panels/sources/DebuggerPausedMessage.ts | trustedTypePolicyViolation": {
    "message": "Нарушение правил: Trusted Type."
  },
  "panels/sources/DebuggerPausedMessage.ts | trustedTypeSinkViolation": {
    "message": "Нарушение приемника: Trusted Type"
  },
  "panels/sources/DebuggerPausedMessage.ts | webglErrorFiredS": {
    "message": "Сработала ошибка WebGL ({PH1})."
  },
  "panels/sources/DebuggerPlugin.ts | addBreakpoint": {
    "message": "Добавить точку останова"
  },
  "panels/sources/DebuggerPlugin.ts | addConditionalBreakpoint": {
    "message": "Добавить условие точки останова…"
  },
  "panels/sources/DebuggerPlugin.ts | addLogpoint": {
    "message": "Добавить точку записи…"
  },
  "panels/sources/DebuggerPlugin.ts | addSourceMap": {
    "message": "Добавить карту исходного кода"
  },
  "panels/sources/DebuggerPlugin.ts | addWasmDebugInfo": {
    "message": "Добавить сведения для отладки DWARF…"
  },
  "panels/sources/DebuggerPlugin.ts | associatedFilesAreAvailable": {
    "message": "Связанные файлы доступны через дерево файлов или сочетание клавиш {PH1}"
  },
  "panels/sources/DebuggerPlugin.ts | associatedFilesShouldBeAdded": {
    "message": "Связанные файлы должны быть добавлены в дерево файлов. Вы можете выполнить отладку этих распознанных исходных файлов как обычных файлов JavaScript."
  },
  "panels/sources/DebuggerPlugin.ts | configure": {
    "message": "Настроить"
  },
  "panels/sources/DebuggerPlugin.ts | debugFileNotFound": {
    "message": "Не удалось загрузить отладочный файл {PH1}."
  },
  "panels/sources/DebuggerPlugin.ts | debugInfoNotFound": {
    "message": "Не удалось загрузить сведения для отладки: {PH1}."
  },
  "panels/sources/DebuggerPlugin.ts | debuggingPowerReduced": {
    "message": "С помощью инструментов разработчика нельзя просматривать авторские источники, но можно отлаживать развернутый код."
  },
  "panels/sources/DebuggerPlugin.ts | disableBreakpoint": {
    "message": "{n,plural, =1{Отключить точку останова}one{Отключить все точки останова в строке}few{Отключить все точки останова в строке}many{Отключить все точки останова в строке}other{Отключить все точки останова в строке}}"
  },
  "panels/sources/DebuggerPlugin.ts | editBreakpoint": {
    "message": "Редактировать точку останова…"
  },
  "panels/sources/DebuggerPlugin.ts | enableBreakpoint": {
    "message": "{n,plural, =1{Включить точку останова}one{Включить все точки останова в строке}few{Включить все точки останова в строке}many{Включить все точки останова в строке}other{Включить все точки останова в строке}}"
  },
  "panels/sources/DebuggerPlugin.ts | errorLoading": {
    "message": "Ошибка загрузки URL {PH1}: {PH2}"
  },
  "panels/sources/DebuggerPlugin.ts | ignoreContentScripts": {
    "message": "Игнорировать скрипты расширения"
  },
  "panels/sources/DebuggerPlugin.ts | ignoreScript": {
    "message": "Пропустить файл"
  },
  "panels/sources/DebuggerPlugin.ts | neverPauseHere": {
    "message": "Никогда не приостанавливать здесь"
  },
  "panels/sources/DebuggerPlugin.ts | reloadForSourceMap": {
    "message": "Для повторного включения убедитесь, что файла нет в списке игнорирования, а затем перезагрузите страницу."
  },
  "panels/sources/DebuggerPlugin.ts | removeBreakpoint": {
    "message": "{n,plural, =1{Удалить точку останова}one{Удалить все точки останова в строке}few{Удалить все точки останова в строке}many{Удалить все точки останова в строке}other{Удалить все точки останова в строке}}"
  },
  "panels/sources/DebuggerPlugin.ts | removeFromIgnoreList": {
    "message": "Удалить из списка игнорируемых"
  },
  "panels/sources/DebuggerPlugin.ts | sourceMapFailed": {
    "message": "Не удалось загрузить карту исходного кода."
  },
  "panels/sources/DebuggerPlugin.ts | sourceMapLoaded": {
    "message": "Карта исходного кода загружена."
  },
  "panels/sources/DebuggerPlugin.ts | sourceMapSkipped": {
    "message": "В этом файле пропущена карта исходного кода."
  },
  "panels/sources/DebuggerPlugin.ts | theDebuggerWillSkipStepping": {
    "message": "Отладчик не будет выполнять этот скрипт по шагам и не будет останавливаться на исключениях."
  },
  "panels/sources/DebuggerPlugin.ts | thisScriptIsOnTheDebuggersIgnore": {
    "message": "Этот скрипт в списке игнорируемых отладчика"
  },
  "panels/sources/FilteredUISourceCodeListProvider.ts | noFilesFound": {
    "message": "Файлов не найдено"
  },
  "panels/sources/FilteredUISourceCodeListProvider.ts | sIgnoreListed": {
    "message": "{PH1} (в списке игнорирования)"
  },
  "panels/sources/GoToLineQuickOpen.ts | currentLineSTypeALineNumber": {
    "message": "Текущая строка: {PH1}. Для перехода к другой строке введите число между 1 и {PH2}."
  },
  "panels/sources/GoToLineQuickOpen.ts | currentPositionXsTypeAnOffset": {
    "message": "Текущая позиция: 0x{PH1}. Для перехода введите смещение между 0x{PH2} и 0x{PH3}."
  },
  "panels/sources/GoToLineQuickOpen.ts | goToLineS": {
    "message": "Переход к строке {PH1}."
  },
  "panels/sources/GoToLineQuickOpen.ts | goToLineSAndColumnS": {
    "message": "Перейти к строке {PH1} и столбцу {PH2}"
  },
  "panels/sources/GoToLineQuickOpen.ts | goToOffsetXs": {
    "message": "Перейти к смещению 0x{PH1}."
  },
  "panels/sources/GoToLineQuickOpen.ts | noFileSelected": {
    "message": "Файл не выбран."
  },
  "panels/sources/GoToLineQuickOpen.ts | noResultsFound": {
    "message": "Ничего не найдено."
  },
  "panels/sources/GoToLineQuickOpen.ts | typeANumberToGoToThatLine": {
    "message": "Чтобы перейти на нужную строку, введите ее номер."
  },
  "panels/sources/InplaceFormatterEditorAction.ts | format": {
    "message": "Формат"
  },
  "panels/sources/InplaceFormatterEditorAction.ts | formatS": {
    "message": "{PH1}: форматировать"
  },
  "panels/sources/NavigatorView.ts | actionCannotBeUndone": {
    "message": "Это действие нельзя отменить."
  },
  "panels/sources/NavigatorView.ts | areYouSureYouWantToDeleteFolder": {
    "message": "Удалить эту папку и ее содержимое?"
  },
  "panels/sources/NavigatorView.ts | areYouSureYouWantToDeleteThis": {
    "message": "Удалить этот файл?"
  },
  "panels/sources/NavigatorView.ts | areYouSureYouWantToExcludeThis": {
    "message": "Исключить эту папку?"
  },
  "panels/sources/NavigatorView.ts | areYouSureYouWantToRemoveThis": {
    "message": "Удалить папку \"{PH1}\" из рабочей области?"
  },
  "panels/sources/NavigatorView.ts | authored": {
    "message": "Авторские"
  },
  "panels/sources/NavigatorView.ts | authoredTooltip": {
    "message": "Содержит оригинальные источники"
  },
  "panels/sources/NavigatorView.ts | delete": {
    "message": "Удалить"
  },
  "panels/sources/NavigatorView.ts | deployed": {
    "message": "Развернутые"
  },
  "panels/sources/NavigatorView.ts | deployedTooltip": {
    "message": "Содержит итоговые источники, доступные браузеру"
  },
  "panels/sources/NavigatorView.ts | excludeFolder": {
    "message": "Исключить из рабочей области"
  },
  "panels/sources/NavigatorView.ts | makeACopy": {
    "message": "Создать копию…"
  },
  "panels/sources/NavigatorView.ts | newFile": {
    "message": "Создать файл"
  },
  "panels/sources/NavigatorView.ts | noDomain": {
    "message": "(нет домена)"
  },
  "panels/sources/NavigatorView.ts | openFolder": {
    "message": "Открыть папку"
  },
  "panels/sources/NavigatorView.ts | remove": {
    "message": "Удалить"
  },
  "panels/sources/NavigatorView.ts | removeFolderFromWorkspace": {
    "message": "Удалить из рабочей области"
  },
  "panels/sources/NavigatorView.ts | rename": {
    "message": "Переименовать…"
  },
  "panels/sources/NavigatorView.ts | sFromSourceMap": {
    "message": "{PH1} (из карты исходного кода)"
  },
  "panels/sources/NavigatorView.ts | sIgnoreListed": {
    "message": "{PH1} (в списке игнорирования)"
  },
  "panels/sources/NavigatorView.ts | searchInAllFiles": {
    "message": "Поиск во всех файлах"
  },
  "panels/sources/NavigatorView.ts | searchInFolder": {
    "message": "Поиск в папке"
  },
  "panels/sources/NavigatorView.ts | workspaceStopSyncing": {
    "message": "Изменения в консоли инструментов разработчика перестанут синхронизироваться с вашим исходным кодом."
  },
  "panels/sources/OutlineQuickOpen.ts | noFileSelected": {
    "message": "Файл не выбран."
  },
  "panels/sources/OutlineQuickOpen.ts | noResultsFound": {
    "message": "Ничего не найдено."
  },
  "panels/sources/OutlineQuickOpen.ts | openAJavascriptOrCssFileToSee": {
    "message": "Чтобы увидеть символы, откройте файл JavaScript или CSS"
  },
  "panels/sources/ProfilePlugin.ts | kb": {
    "message": "КБ"
  },
  "panels/sources/ProfilePlugin.ts | mb": {
    "message": "МБ"
  },
  "panels/sources/ProfilePlugin.ts | ms": {
    "message": "мс"
  },
  "panels/sources/ResourceOriginPlugin.ts | fromS": {
    "message": "(из {PH1})"
  },
  "panels/sources/ResourceOriginPlugin.ts | sourceMappedFromS": {
    "message": "(исходный код преобразован из {PH1})"
  },
  "panels/sources/ScopeChainSidebarPane.ts | closure": {
    "message": "Замыкание"
  },
  "panels/sources/ScopeChainSidebarPane.ts | closureS": {
    "message": "Замыкание ({PH1})"
  },
  "panels/sources/ScopeChainSidebarPane.ts | exception": {
    "message": "Исключение"
  },
  "panels/sources/ScopeChainSidebarPane.ts | loading": {
    "message": "Загрузка…"
  },
  "panels/sources/ScopeChainSidebarPane.ts | noVariables": {
    "message": "Нет переменных"
  },
  "panels/sources/ScopeChainSidebarPane.ts | notPaused": {
    "message": "Не приостановлено"
  },
  "panels/sources/ScopeChainSidebarPane.ts | returnValue": {
    "message": "Возвращаемое значение"
  },
  "panels/sources/SnippetsPlugin.ts | ctrlenter": {
    "message": "Ctrl + Ввод"
  },
  "panels/sources/SnippetsPlugin.ts | enter": {
    "message": "⌘ + Ввод"
  },
  "panels/sources/SourcesNavigator.ts | clearConfiguration": {
    "message": "Очистить настройки"
  },
  "panels/sources/SourcesNavigator.ts | createNewSnippet": {
    "message": "Создать фрагмент"
  },
  "panels/sources/SourcesNavigator.ts | explainContentScripts": {
    "message": "Посмотреть встраиваемые скрипты расширений"
  },
  "panels/sources/SourcesNavigator.ts | explainLocalOverrides": {
    "message": "Локально переопределить сетевые запросы и веб-контент, чтобы имитировать ресурсы, работающие удаленно"
  },
  "panels/sources/SourcesNavigator.ts | explainSnippets": {
    "message": "Сохраните код JavaScript, который вы часто запускаете, чтобы легко использовать его в любое время."
  },
  "panels/sources/SourcesNavigator.ts | explainWorkspace": {
    "message": "Настроить рабочую область для синхронизации изменений напрямую с источником кода"
  },
  "panels/sources/SourcesNavigator.ts | learnMore": {
    "message": "Подробнее…"
  },
  "panels/sources/SourcesNavigator.ts | newSnippet": {
    "message": "Новый фрагмент"
  },
  "panels/sources/SourcesNavigator.ts | remove": {
    "message": "Удалить"
  },
  "panels/sources/SourcesNavigator.ts | rename": {
    "message": "Переименовать…"
  },
  "panels/sources/SourcesNavigator.ts | run": {
    "message": "Запустить"
  },
  "panels/sources/SourcesNavigator.ts | saveAs": {
    "message": "Сохранить как…"
  },
  "panels/sources/SourcesNavigator.ts | selectFolderForOverrides": {
    "message": "Выбрать папку для переопределений"
  },
  "panels/sources/SourcesPanel.ts | continueToHere": {
    "message": "Закончить здесь"
  },
  "panels/sources/SourcesPanel.ts | copyS": {
    "message": "Копировать: {PH1}"
  },
  "panels/sources/SourcesPanel.ts | copyStringAsJSLiteral": {
    "message": "Копировать строку как литерал JavaScript"
  },
  "panels/sources/SourcesPanel.ts | copyStringAsJSONLiteral": {
    "message": "Копировать строку как литерал JSON"
  },
  "panels/sources/SourcesPanel.ts | copyStringContents": {
    "message": "Копировать содержимое строки"
  },
  "panels/sources/SourcesPanel.ts | debuggerHidden": {
    "message": "Боковая панель отладчика скрыта"
  },
  "panels/sources/SourcesPanel.ts | debuggerShown": {
    "message": "Боковая панель отладчика показана"
  },
  "panels/sources/SourcesPanel.ts | dropWorkspaceFolderHere": {
    "message": "Перетащите папку рабочей области сюда."
  },
  "panels/sources/SourcesPanel.ts | groupByAuthored": {
    "message": "Сгруппировать по авторским и развернутым"
  },
  "panels/sources/SourcesPanel.ts | groupByFolder": {
    "message": "Группировка по папке"
  },
  "panels/sources/SourcesPanel.ts | hideDebugger": {
    "message": "Скрыть отладчик"
  },
  "panels/sources/SourcesPanel.ts | hideIgnoreListed": {
    "message": "Скрыть источники из списка игнорируемых"
  },
  "panels/sources/SourcesPanel.ts | hideNavigator": {
    "message": "Скрыть навигатор"
  },
  "panels/sources/SourcesPanel.ts | moreOptions": {
    "message": "Больше вариантов"
  },
  "panels/sources/SourcesPanel.ts | navigatorHidden": {
    "message": "Боковая панель навигатора скрыта"
  },
  "panels/sources/SourcesPanel.ts | navigatorShown": {
    "message": "Боковая панель навигатора показана"
  },
  "panels/sources/SourcesPanel.ts | openInSourcesPanel": {
    "message": "Открыть на панели \"Источники\""
  },
  "panels/sources/SourcesPanel.ts | pauseOnCaughtExceptions": {
    "message": "Приостановка на обнаруженных исключениях"
  },
  "panels/sources/SourcesPanel.ts | resumeWithAllPausesBlockedForMs": {
    "message": "Продолжить и заблокировать все приостановки на 500 мс"
  },
  "panels/sources/SourcesPanel.ts | revealInSidebar": {
    "message": "Показать на боковой панели навигации"
  },
  "panels/sources/SourcesPanel.ts | showDebugger": {
    "message": "Открыть отладчик"
  },
  "panels/sources/SourcesPanel.ts | showFunctionDefinition": {
    "message": "Показать определение функции"
  },
  "panels/sources/SourcesPanel.ts | showNavigator": {
    "message": "Показать навигатор"
  },
  "panels/sources/SourcesPanel.ts | storeAsGlobalVariable": {
    "message": "Сохранить как глобальную переменную"
  },
  "panels/sources/SourcesPanel.ts | terminateCurrentJavascriptCall": {
    "message": "Остановить текущий вызов JavaScript"
  },
  "panels/sources/SourcesView.ts | openFile": {
    "message": "Открыть файл"
  },
  "panels/sources/SourcesView.ts | runCommand": {
    "message": "Выполнить команду"
  },
  "panels/sources/SourcesView.ts | selectFolder": {
    "message": "Выбрать папку"
  },
  "panels/sources/SourcesView.ts | sourceViewActions": {
    "message": "Просмотр исходного кода"
  },
  "panels/sources/SourcesView.ts | workspaceDropInAFolderToSyncSources": {
    "message": "Чтобы синхронизировать изменения с рабочей областью, перетащите папку с исходным кодом сюда или сделайте следующее:"
  },
  "panels/sources/TabbedEditorContainer.ts | areYouSureYouWantToCloseUnsaved": {
    "message": "Закрыть несохраненный файл {PH1}?"
  },
  "panels/sources/TabbedEditorContainer.ts | changesToThisFileWereNotSavedTo": {
    "message": "Изменения этого файла не сохранены в файловой системе."
  },
  "panels/sources/TabbedEditorContainer.ts | unableToLoadThisContent": {
    "message": "Не удалось загрузить этот контент"
  },
  "panels/sources/ThreadsSidebarPane.ts | paused": {
    "message": "приостановлено"
  },
  "panels/sources/WatchExpressionsSidebarPane.ts | addPropertyPathToWatch": {
    "message": "Добавить путь свойства для наблюдения"
  },
  "panels/sources/WatchExpressionsSidebarPane.ts | addWatchExpression": {
    "message": "Добавить выражение контрольного значения"
  },
  "panels/sources/WatchExpressionsSidebarPane.ts | copyValue": {
    "message": "Копировать значение"
  },
  "panels/sources/WatchExpressionsSidebarPane.ts | deleteAllWatchExpressions": {
    "message": "Удалить все выражения контрольного значения"
  },
  "panels/sources/WatchExpressionsSidebarPane.ts | deleteWatchExpression": {
    "message": "Удалить выражение контрольного значения"
  },
  "panels/sources/WatchExpressionsSidebarPane.ts | noWatchExpressions": {
    "message": "Нет выражений контрольного значения"
  },
  "panels/sources/WatchExpressionsSidebarPane.ts | notAvailable": {
    "message": "<недоступно>"
  },
  "panels/sources/WatchExpressionsSidebarPane.ts | refreshWatchExpressions": {
    "message": "Обновить выражения контрольного значения"
  },
  "panels/sources/components/BreakpointsView.ts | breakpointHit": {
    "message": "Достигнута точка останова {PH1}"
  },
  "panels/sources/components/BreakpointsView.ts | checked": {
    "message": "отмечено"
  },
  "panels/sources/components/BreakpointsView.ts | conditionCode": {
    "message": "Условие: {PH1}"
  },
  "panels/sources/components/BreakpointsView.ts | disableAllBreakpointsInFile": {
    "message": "Отключить все точки останова в файле"
  },
  "panels/sources/components/BreakpointsView.ts | editCondition": {
    "message": "Изменить условие"
  },
  "panels/sources/components/BreakpointsView.ts | editLogpoint": {
    "message": "Изменить точку записи"
  },
  "panels/sources/components/BreakpointsView.ts | enableAllBreakpointsInFile": {
    "message": "Включить все точки останова в файле"
  },
  "panels/sources/components/BreakpointsView.ts | indeterminate": {
    "message": "смешанное"
  },
  "panels/sources/components/BreakpointsView.ts | logpointCode": {
    "message": "Точка записи: {PH1}"
  },
  "panels/sources/components/BreakpointsView.ts | pauseOnCaughtExceptions": {
    "message": "Приостанавливать на обнаруженных исключениях"
  },
  "panels/sources/components/BreakpointsView.ts | pauseOnUncaughtExceptions": {
    "message": "Приостанавливать на необнаруженных исключениях"
  },
  "panels/sources/components/BreakpointsView.ts | removeAllBreakpoints": {
    "message": "Удалить все точки останова"
  },
  "panels/sources/components/BreakpointsView.ts | removeAllBreakpointsInFile": {
    "message": "Удалить все точки останова в файле"
  },
  "panels/sources/components/BreakpointsView.ts | removeBreakpoint": {
    "message": "Удалить точку останова"
  },
  "panels/sources/components/BreakpointsView.ts | removeOtherBreakpoints": {
    "message": "Удалить другие точки останова"
  },
  "panels/sources/components/BreakpointsView.ts | revealLocation": {
    "message": "Открыть местоположение"
  },
  "panels/sources/components/BreakpointsView.ts | unchecked": {
    "message": "флажок не установлен"
  },
  "panels/sources/components/HeadersView.ts | addHeader": {
    "message": "Добавить заголовок"
  },
  "panels/sources/components/HeadersView.ts | addOverrideRule": {
    "message": "Добавить правило переопределения"
  },
  "panels/sources/components/HeadersView.ts | errorWhenParsing": {
    "message": "Ошибка синтаксического анализа элемента ''{PH1}''."
  },
  "panels/sources/components/HeadersView.ts | learnMore": {
    "message": "Подробнее"
  },
  "panels/sources/components/HeadersView.ts | parsingErrorExplainer": {
    "message": "Скорее всего, это связано с синтаксической ошибкой в элементе ''{PH1}''. Исправьте ошибку в этом файле, открыв его во внешнем редакторе, или удалите его и создайте переопределение заново."
  },
  "panels/sources/components/HeadersView.ts | removeBlock": {
    "message": "Удалить этот раздел: ApplyTo"
  },
  "panels/sources/components/HeadersView.ts | removeHeader": {
    "message": "Удалить заголовок"
  },
  "panels/sources/sources-meta.ts | activateBreakpoints": {
    "message": "Активировать точки останова"
  },
  "panels/sources/sources-meta.ts | addFolder": {
    "message": "Добавление папки"
  },
  "panels/sources/sources-meta.ts | addFolderToWorkspace": {
    "message": "Добавить папку в рабочую область"
  },
  "panels/sources/sources-meta.ts | addSelectedTextToWatches": {
    "message": "Добавить выбранный текст для наблюдения"
  },
  "panels/sources/sources-meta.ts | all": {
    "message": "Все"
  },
  "panels/sources/sources-meta.ts | allowScrollingPastEndOfFile": {
    "message": "Разрешить прокрутку за пределами файла"
  },
  "panels/sources/sources-meta.ts | autocompletion": {
    "message": "Автозаполнение"
  },
  "panels/sources/sources-meta.ts | automaticallyRevealFilesIn": {
    "message": "Автоматически показывать файлы на боковой панели"
  },
  "panels/sources/sources-meta.ts | bracketMatching": {
    "message": "Сопоставление скобок"
  },
  "panels/sources/sources-meta.ts | breakpoints": {
    "message": "Точки останова"
  },
  "panels/sources/sources-meta.ts | closeAll": {
    "message": "Закрыть все"
  },
  "panels/sources/sources-meta.ts | closeTheActiveTab": {
    "message": "Закрыть активную вкладку"
  },
  "panels/sources/sources-meta.ts | codeFolding": {
    "message": "Свертывание кода"
  },
  "panels/sources/sources-meta.ts | createNewSnippet": {
    "message": "Создать фрагмент"
  },
  "panels/sources/sources-meta.ts | deactivateBreakpoints": {
    "message": "Отключить точки останова"
  },
  "panels/sources/sources-meta.ts | decrementCssUnitBy": {
    "message": "Уменьшить значение свойства CSS на {PH1}"
  },
  "panels/sources/sources-meta.ts | detectIndentation": {
    "message": "Определять отступ"
  },
  "panels/sources/sources-meta.ts | disableAutoFocusOnDebuggerPaused": {
    "message": "Не переходить на панель \"Источники\" при срабатывании точки останова"
  },
  "panels/sources/sources-meta.ts | disableAutocompletion": {
    "message": "Отключить автозаполнение"
  },
  "panels/sources/sources-meta.ts | disableBracketMatching": {
    "message": "Отключить сопоставление скобок"
  },
  "panels/sources/sources-meta.ts | disableCodeFolding": {
    "message": "Отключить свертывание кода"
  },
  "panels/sources/sources-meta.ts | disableCssSourceMaps": {
    "message": "Отключить карты исходного кода CSS"
  },
  "panels/sources/sources-meta.ts | disableTabMovesFocus": {
    "message": "Отключить перемещение фокуса вкладками"
  },
  "panels/sources/sources-meta.ts | disableWasmAutoStepping": {
    "message": "Отключить автоматическое пошаговое выполнение кода Wasm"
  },
  "panels/sources/sources-meta.ts | disallowScrollingPastEndOfFile": {
    "message": "Запретить прокрутку за пределами файла"
  },
  "panels/sources/sources-meta.ts | displayVariableValuesInlineWhile": {
    "message": "Показывать значения переменных в виде встроенных во время отладки"
  },
  "panels/sources/sources-meta.ts | doNotAutomaticallyRevealFilesIn": {
    "message": "Не показывать файлы на боковой панели автоматически"
  },
  "panels/sources/sources-meta.ts | doNotDetectIndentation": {
    "message": "Не определять отступ"
  },
  "panels/sources/sources-meta.ts | doNotDisplayVariableValuesInline": {
    "message": "Не показывать значения переменных в виде встроенных во время отладки"
  },
  "panels/sources/sources-meta.ts | doNotSearchInAnonymousAndContent": {
    "message": "Не искать в анонимных скриптах и скриптах для содержимого"
  },
  "panels/sources/sources-meta.ts | doNotShowWhitespaceCharacters": {
    "message": "Не показывать пробелы"
  },
  "panels/sources/sources-meta.ts | enableAutoFocusOnDebuggerPaused": {
    "message": "Переходить на панель \"Источники\" при срабатывании точки останова"
  },
  "panels/sources/sources-meta.ts | enableAutocompletion": {
    "message": "Включить автозаполнение"
  },
  "panels/sources/sources-meta.ts | enableBracketMatching": {
    "message": "Включить сопоставление скобок"
  },
  "panels/sources/sources-meta.ts | enableCodeFolding": {
    "message": "Включить свертывание кода"
  },
  "panels/sources/sources-meta.ts | enableCssSourceMaps": {
    "message": "Включить карты исходного кода CSS"
  },
  "panels/sources/sources-meta.ts | enableTabMovesFocus": {
    "message": "Включить перемещение фокуса вкладками"
  },
  "panels/sources/sources-meta.ts | enableWasmAutoStepping": {
    "message": "Включить автоматическое пошаговое выполнение кода Wasm"
  },
  "panels/sources/sources-meta.ts | evaluateSelectedTextInConsole": {
    "message": "Оценить выбранный текст в консоли"
  },
  "panels/sources/sources-meta.ts | file": {
    "message": "Файл"
  },
  "panels/sources/sources-meta.ts | goTo": {
    "message": "Перейти к"
  },
  "panels/sources/sources-meta.ts | goToAFunctionDeclarationruleSet": {
    "message": "Перейти к объявлению функции/набору правил"
  },
  "panels/sources/sources-meta.ts | goToLine": {
    "message": "Перейти к строке"
  },
  "panels/sources/sources-meta.ts | incrementCssUnitBy": {
    "message": "Увеличить значение свойства CSS на {PH1}"
  },
  "panels/sources/sources-meta.ts | jumpToNextEditingLocation": {
    "message": "Перейти к следующему месту редактирования"
  },
  "panels/sources/sources-meta.ts | jumpToPreviousEditingLocation": {
    "message": "Перейти к предыдущему месту редактирования"
  },
  "panels/sources/sources-meta.ts | line": {
    "message": "Строка"
  },
  "panels/sources/sources-meta.ts | nextCallFrame": {
    "message": "Следующий фрейм вызова"
  },
  "panels/sources/sources-meta.ts | nextEditorTab": {
    "message": "Перейти к следующему редактору"
  },
  "panels/sources/sources-meta.ts | none": {
    "message": "Нет"
  },
  "panels/sources/sources-meta.ts | open": {
    "message": "Открыть"
  },
  "panels/sources/sources-meta.ts | pauseScriptExecution": {
    "message": "Приостановить выполнение скрипта"
  },
  "panels/sources/sources-meta.ts | previousCallFrame": {
    "message": "Предыдущий фрейм вызова"
  },
  "panels/sources/sources-meta.ts | previousEditorTab": {
    "message": "Перейти к предыдущему редактору"
  },
  "panels/sources/sources-meta.ts | quickSource": {
    "message": "Быстрый исходный код"
  },
  "panels/sources/sources-meta.ts | rename": {
    "message": "Переименовать"
  },
  "panels/sources/sources-meta.ts | resumeScriptExecution": {
    "message": "Продолжить выполнение скрипта"
  },
  "panels/sources/sources-meta.ts | revealActiveFileInSidebar": {
    "message": "Показать активный файл на боковой панели навигации"
  },
  "panels/sources/sources-meta.ts | runSnippet": {
    "message": "Запустить фрагмент"
  },
  "panels/sources/sources-meta.ts | save": {
    "message": "Сохранить"
  },
  "panels/sources/sources-meta.ts | saveAll": {
    "message": "Сохранить все"
  },
  "panels/sources/sources-meta.ts | scope": {
    "message": "Область действия"
  },
  "panels/sources/sources-meta.ts | search": {
    "message": "Поиск"
  },
  "panels/sources/sources-meta.ts | searchInAnonymousAndContent": {
    "message": "Поиск в анонимных и встраиваемых скриптах"
  },
  "panels/sources/sources-meta.ts | showAllWhitespaceCharacters": {
    "message": "Показать все пробелы"
  },
  "panels/sources/sources-meta.ts | showBreakpoints": {
    "message": "Показать точки останова"
  },
  "panels/sources/sources-meta.ts | showQuickSource": {
    "message": "Показать \"Быстрый исходный код\""
  },
  "panels/sources/sources-meta.ts | showScope": {
    "message": "Показать \"Область применения\""
  },
  "panels/sources/sources-meta.ts | showSearch": {
    "message": "Показать \"Поиск\""
  },
  "panels/sources/sources-meta.ts | showSnippets": {
    "message": "Показать \"Фрагменты\""
  },
  "panels/sources/sources-meta.ts | showSources": {
    "message": "Показать \"Источники\""
  },
  "panels/sources/sources-meta.ts | showThreads": {
    "message": "Показать \"Потоки\""
  },
  "panels/sources/sources-meta.ts | showTrailingWhitespaceCharacters": {
    "message": "Показать завершающие пробелы"
  },
  "panels/sources/sources-meta.ts | showWatch": {
    "message": "Показать выражения контрольного значения"
  },
  "panels/sources/sources-meta.ts | showWhitespaceCharacters": {
    "message": "Показать пробелы:"
  },
  "panels/sources/sources-meta.ts | showWorkspace": {
    "message": "Показать рабочую область"
  },
  "panels/sources/sources-meta.ts | snippets": {
    "message": "Фрагменты"
  },
  "panels/sources/sources-meta.ts | sources": {
    "message": "Источники"
  },
  "panels/sources/sources-meta.ts | step": {
    "message": "Шаг"
  },
  "panels/sources/sources-meta.ts | stepIntoNextFunctionCall": {
    "message": "Перейти к следующему вызову функции"
  },
  "panels/sources/sources-meta.ts | stepOutOfCurrentFunction": {
    "message": "Выйти из текущей функции"
  },
  "panels/sources/sources-meta.ts | stepOverNextFunctionCall": {
    "message": "Пропустить следующий вызов функции"
  },
  "panels/sources/sources-meta.ts | switchFile": {
    "message": "Сменить файл"
  },
  "panels/sources/sources-meta.ts | symbol": {
    "message": "Символ"
  },
  "panels/sources/sources-meta.ts | threads": {
    "message": "Потоки"
  },
  "panels/sources/sources-meta.ts | toggleBreakpoint": {
    "message": "Переключатель точки останова"
  },
  "panels/sources/sources-meta.ts | toggleBreakpointEnabled": {
    "message": "Переключатель точки останова включен."
  },
  "panels/sources/sources-meta.ts | toggleBreakpointInputWindow": {
    "message": "Показать или скрыть окно ввода точки останова"
  },
  "panels/sources/sources-meta.ts | toggleDebuggerSidebar": {
    "message": "Показать/скрыть боковую панель отладчика"
  },
  "panels/sources/sources-meta.ts | toggleNavigatorSidebar": {
    "message": "Показать/скрыть боковую панель навигации"
  },
  "panels/sources/sources-meta.ts | trailing": {
    "message": "Завершающие символы"
  },
  "panels/sources/sources-meta.ts | wasmAutoStepping": {
    "message": "По возможности не останавливаться на байт-коде Wasm при отладке Wasm с помощью сведений для отладки"
  },
  "panels/sources/sources-meta.ts | watch": {
    "message": "Выражения контрольного значения"
  },
  "panels/sources/sources-meta.ts | workspace": {
    "message": "Рабочая область"
  },
  "panels/timeline/AnimationsTrackAppender.ts | animations": {
    "message": "Анимации"
  },
  "panels/timeline/AppenderUtils.ts | sSelfS": {
    "message": "{PH1} (одно действие: {PH2})"
  },
  "panels/timeline/CountersGraph.ts | documents": {
    "message": "Документы"
  },
  "panels/timeline/CountersGraph.ts | gpuMemory": {
    "message": "Память графического процессора"
  },
  "panels/timeline/CountersGraph.ts | jsHeap": {
    "message": "Куча JS"
  },
  "panels/timeline/CountersGraph.ts | listeners": {
    "message": "Прослушиватели"
  },
  "panels/timeline/CountersGraph.ts | nodes": {
    "message": "Узлы"
  },
  "panels/timeline/CountersGraph.ts | ss": {
    "message": "[{PH1}–{PH2}]"
  },
  "panels/timeline/EventUICategory.ts | animation": {
    "message": "Анимация"
  },
  "panels/timeline/EventUICategory.ts | animationFrameFired": {
    "message": "Запущен фрейм анимации."
  },
  "panels/timeline/EventUICategory.ts | async": {
    "message": "Асинхронный"
  },
  "panels/timeline/EventUICategory.ts | asyncTask": {
    "message": "Асинхронная задача"
  },
  "panels/timeline/EventUICategory.ts | cacheModule": {
    "message": "Код модуля кеша"
  },
  "panels/timeline/EventUICategory.ts | cacheScript": {
    "message": "Код скрипта кеша"
  },
  "panels/timeline/EventUICategory.ts | cachedWasmModule": {
    "message": "Кешированный модуль Wasm"
  },
  "panels/timeline/EventUICategory.ts | cancelAnimationFrame": {
    "message": "Отключить фрейм анимации"
  },
  "panels/timeline/EventUICategory.ts | cancelIdleCallback": {
    "message": "Отмена вызова функции в период простоя"
  },
  "panels/timeline/EventUICategory.ts | commit": {
    "message": "Перенос"
  },
  "panels/timeline/EventUICategory.ts | compileCode": {
    "message": "Компилировать код"
  },
  "panels/timeline/EventUICategory.ts | compileModule": {
    "message": "Компилировать модуль"
  },
  "panels/timeline/EventUICategory.ts | compileScript": {
    "message": "Компилировать скрипт"
  },
  "panels/timeline/EventUICategory.ts | compiledWasmModule": {
    "message": "Скомпилированный модуль Wasm"
  },
  "panels/timeline/EventUICategory.ts | compositeLayers": {
    "message": "Составные слои"
  },
  "panels/timeline/EventUICategory.ts | computeIntersections": {
    "message": "Рассчитать пересечения"
  },
  "panels/timeline/EventUICategory.ts | consoleTime": {
    "message": "Время консоли"
  },
  "panels/timeline/EventUICategory.ts | cppGc": {
    "message": "Сборка мусора в C++"
  },
  "panels/timeline/EventUICategory.ts | createWebsocket": {
    "message": "Создать WebSocket"
  },
  "panels/timeline/EventUICategory.ts | decrypt": {
    "message": "Расшифровка"
  },
  "panels/timeline/EventUICategory.ts | decryptReply": {
    "message": "Расшифровать ответ"
  },
  "panels/timeline/EventUICategory.ts | deserializeCodeCache": {
    "message": "Десериализовать кеш кода"
  },
  "panels/timeline/EventUICategory.ts | destroyWebsocket": {
    "message": "Уничтожить WebSocket"
  },
  "panels/timeline/EventUICategory.ts | digest": {
    "message": "Хеш-сумма"
  },
  "panels/timeline/EventUICategory.ts | digestReply": {
    "message": "Ответ с хеш-суммой"
  },
  "panels/timeline/EventUICategory.ts | domGc": {
    "message": "Сборка мусора DOM"
  },
  "panels/timeline/EventUICategory.ts | domcontentloadedEvent": {
    "message": "Событие DOMContentLoaded"
  },
  "panels/timeline/EventUICategory.ts | drawFrame": {
    "message": "Рисование фрейма"
  },
  "panels/timeline/EventUICategory.ts | embedderCallback": {
    "message": "Обратный вызов встраивания"
  },
  "panels/timeline/EventUICategory.ts | encrypt": {
    "message": "Шифрование"
  },
  "panels/timeline/EventUICategory.ts | encryptReply": {
    "message": "Зашифровать ответ"
  },
  "panels/timeline/EventUICategory.ts | evaluateModule": {
    "message": "Оценка модуля"
  },
  "panels/timeline/EventUICategory.ts | evaluateScript": {
    "message": "Оценка скрипта"
  },
  "panels/timeline/EventUICategory.ts | event": {
    "message": "Событие"
  },
  "panels/timeline/EventUICategory.ts | eventTiming": {
    "message": "Временные метки событий"
  },
  "panels/timeline/EventUICategory.ts | experience": {
    "message": "Взаимодействие"
  },
  "panels/timeline/EventUICategory.ts | finishLoading": {
    "message": "Завершить загрузку"
  },
  "panels/timeline/EventUICategory.ts | fireIdleCallback": {
    "message": "Запуск функции обратного вызова для простоя"
  },
  "panels/timeline/EventUICategory.ts | firstContentfulPaint": {
    "message": "Первое существенное отображение"
  },
  "panels/timeline/EventUICategory.ts | firstPaint": {
    "message": "Первая отрисовка"
  },
  "panels/timeline/EventUICategory.ts | frameStart": {
    "message": "Запуск фрейма"
  },
  "panels/timeline/EventUICategory.ts | frameStartMainThread": {
    "message": "Начало фрейма (основной поток)"
  },
  "panels/timeline/EventUICategory.ts | frameStartedLoading": {
    "message": "Фрейм начал загружаться"
  },
  "panels/timeline/EventUICategory.ts | functionCall": {
    "message": "Вызов функции"
  },
  "panels/timeline/EventUICategory.ts | gcEvent": {
    "message": "Событие сборки мусора"
  },
  "panels/timeline/EventUICategory.ts | gpu": {
    "message": "Графический процессор"
  },
  "panels/timeline/EventUICategory.ts | hitTest": {
    "message": "Проверка нажатия"
  },
  "panels/timeline/EventUICategory.ts | idle": {
    "message": "Бездействует"
  },
  "panels/timeline/EventUICategory.ts | imageDecode": {
    "message": "Расшифровка изображения"
  },
  "panels/timeline/EventUICategory.ts | imageResize": {
    "message": "Изменение размера изображения"
  },
  "panels/timeline/EventUICategory.ts | installTimer": {
    "message": "Установить таймер"
  },
  "panels/timeline/EventUICategory.ts | invalidateLayout": {
    "message": "Аннулировать макет"
  },
  "panels/timeline/EventUICategory.ts | jsFrame": {
    "message": "Фрейм JS"
  },
  "panels/timeline/EventUICategory.ts | largestContentfulPaint": {
    "message": "Самое крупное существенное отображение"
  },
  "panels/timeline/EventUICategory.ts | layerize": {
    "message": "Создание слоев"
  },
  "panels/timeline/EventUICategory.ts | layout": {
    "message": "Макет"
  },
  "panels/timeline/EventUICategory.ts | layoutShift": {
    "message": "Смещение макета"
  },
  "panels/timeline/EventUICategory.ts | loading": {
    "message": "Загрузка"
  },
  "panels/timeline/EventUICategory.ts | majorGc": {
    "message": "Полная сборка мусора"
  },
  "panels/timeline/EventUICategory.ts | minorGc": {
    "message": "Быстрая сборка мусора"
  },
  "panels/timeline/EventUICategory.ts | onloadEvent": {
    "message": "Событие onload"
  },
  "panels/timeline/EventUICategory.ts | optimizeCode": {
    "message": "Оптимизировать код"
  },
  "panels/timeline/EventUICategory.ts | other": {
    "message": "Другое"
  },
  "panels/timeline/EventUICategory.ts | paint": {
    "message": "Отрисовка"
  },
  "panels/timeline/EventUICategory.ts | paintImage": {
    "message": "Отрисовка изображения"
  },
  "panels/timeline/EventUICategory.ts | paintSetup": {
    "message": "Настройка отрисовки"
  },
  "panels/timeline/EventUICategory.ts | painting": {
    "message": "Отображение"
  },
  "panels/timeline/EventUICategory.ts | parseAndCompile": {
    "message": "Синтаксический анализ и компиляция"
  },
  "panels/timeline/EventUICategory.ts | parseHtml": {
    "message": "Синтаксический анализ HTML"
  },
  "panels/timeline/EventUICategory.ts | parseStylesheet": {
    "message": "Синтаксический анализ таблицы стилей"
  },
  "panels/timeline/EventUICategory.ts | prePaint": {
    "message": "Предварительная отрисовка"
  },
  "panels/timeline/EventUICategory.ts | profilingOverhead": {
    "message": "Ресурсопотребление профилирования"
  },
  "panels/timeline/EventUICategory.ts | rasterizePaint": {
    "message": "Растрировать отрисовку"
  },
  "panels/timeline/EventUICategory.ts | recalculateStyle": {
    "message": "Рассчитать стиль заново"
  },
  "panels/timeline/EventUICategory.ts | receiveData": {
    "message": "Получить данные"
  },
  "panels/timeline/EventUICategory.ts | receiveResponse": {
    "message": "Получить ответ"
  },
  "panels/timeline/EventUICategory.ts | receiveWebsocketHandshake": {
    "message": "Получить рукопожатие WebSocket"
  },
  "panels/timeline/EventUICategory.ts | removeTimer": {
    "message": "Удалить таймер"
  },
  "panels/timeline/EventUICategory.ts | rendering": {
    "message": "Отрисовка"
  },
  "panels/timeline/EventUICategory.ts | requestAnimationFrame": {
    "message": "Запрос фрейма анимации"
  },
  "panels/timeline/EventUICategory.ts | requestIdleCallback": {
    "message": "Запрос функции обратного вызова для простоя"
  },
  "panels/timeline/EventUICategory.ts | requestMainThreadFrame": {
    "message": "Запрос фрейма основного потока"
  },
  "panels/timeline/EventUICategory.ts | runMicrotasks": {
    "message": "Запуск микрозадач"
  },
  "panels/timeline/EventUICategory.ts | scheduleStyleRecalculation": {
    "message": "Планирование пересчета стилей"
  },
  "panels/timeline/EventUICategory.ts | scripting": {
    "message": "Выполнение скриптов"
  },
  "panels/timeline/EventUICategory.ts | scroll": {
    "message": "Прокрутка"
  },
  "panels/timeline/EventUICategory.ts | sendRequest": {
    "message": "Отправить запрос"
  },
  "panels/timeline/EventUICategory.ts | sendWebsocketHandshake": {
    "message": "Отправить рукопожатие WebSocket"
  },
  "panels/timeline/EventUICategory.ts | sign": {
    "message": "Подписание"
  },
  "panels/timeline/EventUICategory.ts | signReply": {
    "message": "Подпись ответа"
  },
  "panels/timeline/EventUICategory.ts | streamingCompileTask": {
    "message": "Задача по компиляции для потоковой передачи"
  },
  "panels/timeline/EventUICategory.ts | streamingWasmResponse": {
    "message": "Потоковая передача ответа Wasm"
  },
  "panels/timeline/EventUICategory.ts | system": {
    "message": "Система"
  },
  "panels/timeline/EventUICategory.ts | task": {
    "message": "Задача"
  },
  "panels/timeline/EventUICategory.ts | timerFired": {
    "message": "Таймер запущен"
  },
  "panels/timeline/EventUICategory.ts | timestamp": {
    "message": "Временная метка"
  },
  "panels/timeline/EventUICategory.ts | updateLayer": {
    "message": "Обновить слой"
  },
  "panels/timeline/EventUICategory.ts | updateLayerTree": {
    "message": "Обновить дерево слоев"
  },
  "panels/timeline/EventUICategory.ts | userTiming": {
    "message": "Пользовательское время"
  },
  "panels/timeline/EventUICategory.ts | verify": {
    "message": "Подтвердить"
  },
  "panels/timeline/EventUICategory.ts | verifyReply": {
    "message": "Проверить ответ"
  },
  "panels/timeline/EventUICategory.ts | waitingForNetwork": {
    "message": "Поиск сети"
  },
  "panels/timeline/EventUICategory.ts | wasmModuleCacheHit": {
    "message": "Совпадение в кеше модуля Wasm"
  },
  "panels/timeline/EventUICategory.ts | wasmModuleCacheInvalid": {
    "message": "Недействительный кеш модуля Wasm"
  },
  "panels/timeline/EventUICategory.ts | willSendRequest": {
    "message": "Запрос будет отправлен"
  },
  "panels/timeline/EventUICategory.ts | xhrLoad": {
    "message": "Загрузка XHR"
  },
  "panels/timeline/EventUICategory.ts | xhrReadyStateChange": {
    "message": "Изменение состояния готовности: XHR"
  },
  "panels/timeline/EventsTimelineTreeView.ts | Dms": {
    "message": "{PH1} мс"
  },
  "panels/timeline/EventsTimelineTreeView.ts | all": {
    "message": "Все"
  },
  "panels/timeline/EventsTimelineTreeView.ts | durationFilter": {
    "message": "Фильтровать по длительности"
  },
  "panels/timeline/EventsTimelineTreeView.ts | filterEventLog": {
    "message": "Фильтр журнала событий"
  },
  "panels/timeline/EventsTimelineTreeView.ts | startTime": {
    "message": "Время начала"
  },
  "panels/timeline/GPUTrackAppender.ts | gpu": {
    "message": "Графический процессор"
  },
  "panels/timeline/InteractionsTrackAppender.ts | interactions": {
    "message": "Взаимодействия"
  },
  "panels/timeline/IsolateSelector.ts | empty": {
    "message": "(пусто)"
  },
  "panels/timeline/IsolateSelector.ts | selectJavascriptVmInstance": {
    "message": "Выберите экземпляр виртуальной машины JavaScript"
  },
  "panels/timeline/LayoutShiftsTrackAppender.ts | layoutShifts": {
    "message": "Смещения макета"
  },
  "panels/timeline/NetworkTrackAppender.ts | network": {
    "message": "Сеть"
  },
  "panels/timeline/ThreadAppender.ts | anonymous": {
    "message": "(анонимная)"
  },
  "panels/timeline/ThreadAppender.ts | bidderWorklet": {
    "message": "Worklet покупателя"
  },
  "panels/timeline/ThreadAppender.ts | bidderWorkletS": {
    "message": "Worklet покупателя — {PH1}"
  },
  "panels/timeline/ThreadAppender.ts | dedicatedWorker": {
    "message": "Выделенное: Worker"
  },
  "panels/timeline/ThreadAppender.ts | eventDispatchS": {
    "message": "Событие: {PH1}"
  },
  "panels/timeline/ThreadAppender.ts | frameS": {
    "message": "Фрейм – {PH1}"
  },
  "panels/timeline/ThreadAppender.ts | main": {
    "message": "Основной поток"
  },
  "panels/timeline/ThreadAppender.ts | mainS": {
    "message": "Основной – {PH1}"
  },
  "panels/timeline/ThreadAppender.ts | onIgnoreList": {
    "message": "В списке игнорирования"
  },
  "panels/timeline/ThreadAppender.ts | raster": {
    "message": "Растр"
  },
  "panels/timeline/ThreadAppender.ts | rasterizerThreadS": {
    "message": "Поток растеризатора {PH1}"
  },
  "panels/timeline/ThreadAppender.ts | sellerWorklet": {
    "message": "Worklet продавца"
  },
  "panels/timeline/ThreadAppender.ts | sellerWorkletS": {
    "message": "Worklet продавца — {PH1}"
  },
  "panels/timeline/ThreadAppender.ts | threadPool": {
    "message": "Пул потоков"
  },
  "panels/timeline/ThreadAppender.ts | threadPoolThreadS": {
    "message": "Управляющий пулом потоков ({PH1})"
  },
  "panels/timeline/ThreadAppender.ts | threadS": {
    "message": "Поток {PH1}"
  },
  "panels/timeline/ThreadAppender.ts | unknownWorklet": {
    "message": "Аукцион Worklet"
  },
  "panels/timeline/ThreadAppender.ts | unknownWorkletS": {
    "message": "Аукцион Worklet — {PH1}"
  },
  "panels/timeline/ThreadAppender.ts | workerS": {
    "message": "Worker – {PH1}"
  },
  "panels/timeline/ThreadAppender.ts | workerSS": {
    "message": "Worker: {PH1} – {PH2}"
  },
  "panels/timeline/ThreadAppender.ts | workletService": {
    "message": "Сервис аукциона Worklet"
  },
  "panels/timeline/ThreadAppender.ts | workletServiceS": {
    "message": "Сервис аукциона Worklet — {PH1}"
  },
  "panels/timeline/TimelineController.ts | tracingNotSupported": {
    "message": "Запись отслеживания производительности для целевого объекта такого типа не поддерживается"
  },
  "panels/timeline/TimelineDetailsView.ts | bottomup": {
    "message": "Снизу вверх"
  },
  "panels/timeline/TimelineDetailsView.ts | callTree": {
    "message": "Дерево вызовов"
  },
  "panels/timeline/TimelineDetailsView.ts | eventLog": {
    "message": "Журнал событий"
  },
  "panels/timeline/TimelineDetailsView.ts | layers": {
    "message": "Слои"
  },
  "panels/timeline/TimelineDetailsView.ts | paintProfiler": {
    "message": "Профилировщик отображения"
  },
  "panels/timeline/TimelineDetailsView.ts | rangeSS": {
    "message": "Диапазон: {PH1}–{PH2}"
  },
  "panels/timeline/TimelineDetailsView.ts | summary": {
    "message": "Сводка"
  },
  "panels/timeline/TimelineEventOverview.ts | cpu": {
    "message": "Процессор"
  },
  "panels/timeline/TimelineEventOverview.ts | heap": {
    "message": "КУЧА"
  },
  "panels/timeline/TimelineEventOverview.ts | net": {
    "message": "NET"
  },
  "panels/timeline/TimelineEventOverview.ts | sSDash": {
    "message": "{PH1}–{PH2}"
  },
  "panels/timeline/TimelineFlameChartDataProvider.ts | droppedFrame": {
    "message": "Отмененный фрейм"
  },
  "panels/timeline/TimelineFlameChartDataProvider.ts | frame": {
    "message": "Фрейм"
  },
  "panels/timeline/TimelineFlameChartDataProvider.ts | frameS": {
    "message": "Фрейм – {PH1}"
  },
  "panels/timeline/TimelineFlameChartDataProvider.ts | frames": {
    "message": "Фреймы"
  },
  "panels/timeline/TimelineFlameChartDataProvider.ts | idleFrame": {
    "message": "Бездействующий фрейм"
  },
  "panels/timeline/TimelineFlameChartDataProvider.ts | main": {
    "message": "Основная"
  },
  "panels/timeline/TimelineFlameChartDataProvider.ts | mainS": {
    "message": "Основной – {PH1}"
  },
  "panels/timeline/TimelineFlameChartDataProvider.ts | onIgnoreList": {
    "message": "В списке игнорирования"
  },
  "panels/timeline/TimelineFlameChartDataProvider.ts | partiallyPresentedFrame": {
    "message": "Частичный показ фрейма"
  },
  "panels/timeline/TimelineFlameChartDataProvider.ts | raster": {
    "message": "Растр"
  },
  "panels/timeline/TimelineFlameChartDataProvider.ts | rasterizerThreadS": {
    "message": "Поток растеризатора {PH1}"
  },
  "panels/timeline/TimelineFlameChartDataProvider.ts | sSelfS": {
    "message": "{PH1} (одно действие: {PH2})"
  },
  "panels/timeline/TimelineFlameChartDataProvider.ts | subframe": {
    "message": "Субфрейм"
  },
  "panels/timeline/TimelineFlameChartDataProvider.ts | thread": {
    "message": "Поток"
  },
  "panels/timeline/TimelineFlameChartView.ts | sAtS": {
    "message": "{PH1}: {PH2}"
  },
  "panels/timeline/TimelineHistoryManager.ts | currentSessionSS": {
    "message": "Текущий сеанс: {PH1}. {PH2}"
  },
  "panels/timeline/TimelineHistoryManager.ts | moments": {
    "message": "моменты"
  },
  "panels/timeline/TimelineHistoryManager.ts | noRecordings": {
    "message": "(записей нет)"
  },
  "panels/timeline/TimelineHistoryManager.ts | sAgo": {
    "message": "({PH1} назад)"
  },
  "panels/timeline/TimelineHistoryManager.ts | sD": {
    "message": "{PH1} {PH2}"
  },
  "panels/timeline/TimelineHistoryManager.ts | sH": {
    "message": "{PH1} ч."
  },
  "panels/timeline/TimelineHistoryManager.ts | sM": {
    "message": "{PH1} м"
  },
  "panels/timeline/TimelineHistoryManager.ts | selectTimelineSession": {
    "message": "Выбрать сеанс хронологии"
  },
  "panels/timeline/TimelineLoader.ts | legacyTimelineFormatIsNot": {
    "message": "Устаревший формат хронологии не поддерживается."
  },
  "panels/timeline/TimelineLoader.ts | malformedCpuProfileFormat": {
    "message": "Неверный формат профиля ЦП"
  },
  "panels/timeline/TimelineLoader.ts | malformedTimelineDataS": {
    "message": "Неверный формат данных хронологии: {PH1}."
  },
  "panels/timeline/TimelineLoader.ts | malformedTimelineDataUnknownJson": {
    "message": "Неверный формат данных хронологии: неизвестный формат JSON"
  },
  "panels/timeline/TimelineLoader.ts | malformedTimelineInputWrongJson": {
    "message": "Неверные входные данные хронологии и баланс скобок в данных JSON"
  },
  "panels/timeline/TimelinePanel.ts | CpuThrottlingIsEnabled": {
    "message": "– Ограничение процессора включено"
  },
  "panels/timeline/TimelinePanel.ts | HardwareConcurrencyIsEnabled": {
    "message": "– Включено переопределение аппаратного параллелизма"
  },
  "panels/timeline/TimelinePanel.ts | JavascriptSamplingIsDisabled": {
    "message": "– Выборка JavaScript отключена"
  },
  "panels/timeline/TimelinePanel.ts | NetworkThrottlingIsEnabled": {
    "message": "– Включено ограничение пропускной способности сети"
  },
  "panels/timeline/TimelinePanel.ts | SignificantOverheadDueToPaint": {
    "message": "– Значительное ресурсопотребление из-за инструментирования отображения"
  },
  "panels/timeline/TimelinePanel.ts | afterRecordingSelectAnAreaOf": {
    "message": "После записи выделите интересующую область в обзоре мышью. Затем масштабируйте и переместите хронологию, используя колесо мыши или клавиши {PH1}. {PH2}"
  },
  "panels/timeline/TimelinePanel.ts | bufferUsage": {
    "message": "Использование буфера"
  },
  "panels/timeline/TimelinePanel.ts | captureScreenshots": {
    "message": "Сделать скриншоты"
  },
  "panels/timeline/TimelinePanel.ts | captureSettings": {
    "message": "Настройки съемки"
  },
  "panels/timeline/TimelinePanel.ts | capturesAdvancedPaint": {
    "message": "Вводит дополнительное инструментирование отображения, предполагает значительное ресурсопотребление"
  },
  "panels/timeline/TimelinePanel.ts | clear": {
    "message": "Сбросить"
  },
  "panels/timeline/TimelinePanel.ts | clickTheRecordButtonSOrHitSTo": {
    "message": "Чтобы начать запись, нажмите кнопку \"{PH1}\" или {PH2}."
  },
  "panels/timeline/TimelinePanel.ts | clickTheReloadButtonSOrHitSTo": {
    "message": "Чтобы записать загрузку страницы, нажмите кнопку перезагрузки \"{PH1}\" или комбинацию клавиш {PH2}."
  },
  "panels/timeline/TimelinePanel.ts | close": {
    "message": "Закрыть"
  },
  "panels/timeline/TimelinePanel.ts | cpu": {
    "message": "ЦП:"
  },
  "panels/timeline/TimelinePanel.ts | description": {
    "message": "Описание"
  },
  "panels/timeline/TimelinePanel.ts | disableJavascriptSamples": {
    "message": "Отключить образцы JavaScript"
  },
  "panels/timeline/TimelinePanel.ts | disablesJavascriptSampling": {
    "message": "Отключает выборку JavaScript и уменьшает ресурсопотребление при выполнении на мобильных устройствах."
  },
  "panels/timeline/TimelinePanel.ts | downloadAfterError": {
    "message": "Скачать исходные файлы отслеженных событий"
  },
  "panels/timeline/TimelinePanel.ts | dropTimelineFileOrUrlHere": {
    "message": "Перетащите сюда файл хронологии или URL"
  },
  "panels/timeline/TimelinePanel.ts | enableAdvancedPaint": {
    "message": "Включить дополнительное инструментирование отрисовки (медленно)"
  },
  "panels/timeline/TimelinePanel.ts | failedToSaveTimelineSS": {
    "message": "Не удалось сохранить хронологию: {PH1} ({PH2})."
  },
  "panels/timeline/TimelinePanel.ts | initializingProfiler": {
    "message": "Запуск профилировщика…"
  },
  "panels/timeline/TimelinePanel.ts | learnmore": {
    "message": "Подробнее"
  },
  "panels/timeline/TimelinePanel.ts | loadProfile": {
    "message": "Загрузить профиль…"
  },
  "panels/timeline/TimelinePanel.ts | loadingProfile": {
    "message": "Загрузка профиля…"
  },
  "panels/timeline/TimelinePanel.ts | memory": {
    "message": "Память"
  },
  "panels/timeline/TimelinePanel.ts | network": {
    "message": "Сеть:"
  },
  "panels/timeline/TimelinePanel.ts | networkConditions": {
    "message": "Условия работы сети"
  },
  "panels/timeline/TimelinePanel.ts | processingProfile": {
    "message": "Обработка профиля…"
  },
  "panels/timeline/TimelinePanel.ts | profiling": {
    "message": "Профилирование…"
  },
  "panels/timeline/TimelinePanel.ts | received": {
    "message": "Принято"
  },
  "panels/timeline/TimelinePanel.ts | recordingFailed": {
    "message": "Ошибка записи видео"
  },
  "panels/timeline/TimelinePanel.ts | saveProfile": {
    "message": "Сохранить профиль…"
  },
  "panels/timeline/TimelinePanel.ts | screenshots": {
    "message": "Скриншоты"
  },
  "panels/timeline/TimelinePanel.ts | showMemoryTimeline": {
    "message": "Показать хронологию памяти"
  },
  "panels/timeline/TimelinePanel.ts | ssec": {
    "message": "{PH1} сек."
  },
  "panels/timeline/TimelinePanel.ts | status": {
    "message": "Статус"
  },
  "panels/timeline/TimelinePanel.ts | stop": {
    "message": "Остановить"
  },
  "panels/timeline/TimelinePanel.ts | stoppingTimeline": {
    "message": "Остановка хронологии…"
  },
  "panels/timeline/TimelinePanel.ts | time": {
    "message": "Время"
  },
  "panels/timeline/TimelinePanel.ts | wasd": {
    "message": "WASD"
  },
  "panels/timeline/TimelineTreeView.ts | activity": {
    "message": "Действия"
  },
  "panels/timeline/TimelineTreeView.ts | chromeExtensionsOverhead": {
    "message": "[Ресурсопотребление расширений Chrome]"
  },
  "panels/timeline/TimelineTreeView.ts | filter": {
    "message": "Фильтр"
  },
  "panels/timeline/TimelineTreeView.ts | filterBottomup": {
    "message": "Фильтровать снизу вверх"
  },
  "panels/timeline/TimelineTreeView.ts | filterCallTree": {
    "message": "Фильтр дерева вызовов"
  },
  "panels/timeline/TimelineTreeView.ts | fms": {
    "message": "{PH1} мс"
  },
  "panels/timeline/TimelineTreeView.ts | groupBy": {
    "message": "Группировка по"
  },
  "panels/timeline/TimelineTreeView.ts | groupByActivity": {
    "message": "Группировка по действию"
  },
  "panels/timeline/TimelineTreeView.ts | groupByCategory": {
    "message": "Группировка по категории"
  },
  "panels/timeline/TimelineTreeView.ts | groupByDomain": {
    "message": "Группировка по домену"
  },
  "panels/timeline/TimelineTreeView.ts | groupByFrame": {
    "message": "Группировка по фрейму"
  },
  "panels/timeline/TimelineTreeView.ts | groupBySubdomain": {
    "message": "Группировка по субдомену"
  },
  "panels/timeline/TimelineTreeView.ts | groupByUrl": {
    "message": "Группировка по URL"
  },
  "panels/timeline/TimelineTreeView.ts | heaviestStack": {
    "message": "Самый тяжелый стек"
  },
  "panels/timeline/TimelineTreeView.ts | heaviestStackHidden": {
    "message": "Боковая панель самого тяжелого стека скрыта"
  },
  "panels/timeline/TimelineTreeView.ts | heaviestStackShown": {
    "message": "Боковая панель самого тяжелого стека показана"
  },
  "panels/timeline/TimelineTreeView.ts | hideHeaviestStack": {
    "message": "Скрыть самый тяжелый стек"
  },
  "panels/timeline/TimelineTreeView.ts | matchCase": {
    "message": "Учитывать регистр"
  },
  "panels/timeline/TimelineTreeView.ts | matchWholeWord": {
    "message": "Учитывать слово целиком"
  },
  "panels/timeline/TimelineTreeView.ts | noGrouping": {
    "message": "Без группировки"
  },
  "panels/timeline/TimelineTreeView.ts | notOptimizedS": {
    "message": "Не оптимизировано: {PH1}"
  },
  "panels/timeline/TimelineTreeView.ts | page": {
    "message": "Страница"
  },
  "panels/timeline/TimelineTreeView.ts | percentPlaceholder": {
    "message": "{PH1} %"
  },
  "panels/timeline/TimelineTreeView.ts | performance": {
    "message": "Производительность"
  },
  "panels/timeline/TimelineTreeView.ts | selectItemForDetails": {
    "message": "Чтобы посмотреть дополнительную информацию, выберите объект."
  },
  "panels/timeline/TimelineTreeView.ts | selfTime": {
    "message": "Время одного действия"
  },
  "panels/timeline/TimelineTreeView.ts | showHeaviestStack": {
    "message": "Показать самый тяжелый стек"
  },
  "panels/timeline/TimelineTreeView.ts | timelineStack": {
    "message": "Стек хронологии"
  },
  "panels/timeline/TimelineTreeView.ts | totalTime": {
    "message": "Общее время"
  },
  "panels/timeline/TimelineTreeView.ts | unattributed": {
    "message": "[без атрибуции]"
  },
  "panels/timeline/TimelineTreeView.ts | useRegularExpression": {
    "message": "Использовать регулярное выражение"
  },
  "panels/timeline/TimelineTreeView.ts | vRuntime": {
    "message": "[Время выполнения V8]"
  },
  "panels/timeline/TimelineUIUtils.ts | FromCache": {
    "message": " (из кеша)"
  },
  "panels/timeline/TimelineUIUtils.ts | FromMemoryCache": {
    "message": " (из кеша памяти)"
  },
  "panels/timeline/TimelineUIUtils.ts | FromPush": {
    "message": " (источник: push)"
  },
  "panels/timeline/TimelineUIUtils.ts | FromServiceWorker": {
    "message": " (источник: service worker)"
  },
  "panels/timeline/TimelineUIUtils.ts | SSSResourceLoading": {
    "message": " ({PH2} – {PH1} и загрузка ресурса – {PH3})"
  },
  "panels/timeline/TimelineUIUtils.ts | UnknownNode": {
    "message": "[неизвестный узел]"
  },
  "panels/timeline/TimelineUIUtils.ts | aggregatedTime": {
    "message": "Общее время"
  },
  "panels/timeline/TimelineUIUtils.ts | allottedTime": {
    "message": "Отведенное время"
  },
  "panels/timeline/TimelineUIUtils.ts | animation": {
    "message": "Анимация"
  },
  "panels/timeline/TimelineUIUtils.ts | animationFrameFired": {
    "message": "Запущен фрейм анимации."
  },
  "panels/timeline/TimelineUIUtils.ts | animationFrameRequested": {
    "message": "Фрейм анимации запрошен"
  },
  "panels/timeline/TimelineUIUtils.ts | async": {
    "message": "Асинхронный"
  },
  "panels/timeline/TimelineUIUtils.ts | asyncTask": {
    "message": "Асинхронная задача"
  },
  "panels/timeline/TimelineUIUtils.ts | cacheModule": {
    "message": "Код модуля кеша"
  },
  "panels/timeline/TimelineUIUtils.ts | cacheScript": {
    "message": "Код скрипта кеша"
  },
  "panels/timeline/TimelineUIUtils.ts | cachedWasmModule": {
    "message": "Кешированный модуль Wasm"
  },
  "panels/timeline/TimelineUIUtils.ts | callStacks": {
    "message": "Стеки вызовов"
  },
  "panels/timeline/TimelineUIUtils.ts | callbackFunction": {
    "message": "Функция обратного вызова"
  },
  "panels/timeline/TimelineUIUtils.ts | callbackId": {
    "message": "Идентификатор обратного вызова"
  },
  "panels/timeline/TimelineUIUtils.ts | cancelAnimationFrame": {
    "message": "Отключить фрейм анимации"
  },
  "panels/timeline/TimelineUIUtils.ts | cancelIdleCallback": {
    "message": "Отмена вызова функции в период простоя"
  },
  "panels/timeline/TimelineUIUtils.ts | collected": {
    "message": "Собрано"
  },
  "panels/timeline/TimelineUIUtils.ts | commit": {
    "message": "Перенос"
  },
  "panels/timeline/TimelineUIUtils.ts | compilationCacheKind": {
    "message": "Тип кеша компилирования"
  },
  "panels/timeline/TimelineUIUtils.ts | compilationCacheSize": {
    "message": "Размер кеша компиляции"
  },
  "panels/timeline/TimelineUIUtils.ts | compilationCacheStatus": {
    "message": "Статус компилирования кеша"
  },
  "panels/timeline/TimelineUIUtils.ts | compile": {
    "message": "Компиляция"
  },
  "panels/timeline/TimelineUIUtils.ts | compileCode": {
    "message": "Компилировать код"
  },
  "panels/timeline/TimelineUIUtils.ts | compileModule": {
    "message": "Компилировать модуль"
  },
  "panels/timeline/TimelineUIUtils.ts | compileScript": {
    "message": "Компилировать скрипт"
  },
  "panels/timeline/TimelineUIUtils.ts | compiledWasmModule": {
    "message": "Скомпилированный модуль Wasm"
  },
  "panels/timeline/TimelineUIUtils.ts | compositeLayers": {
    "message": "Составные слои"
  },
  "panels/timeline/TimelineUIUtils.ts | computeIntersections": {
    "message": "Рассчитать пересечения"
  },
  "panels/timeline/TimelineUIUtils.ts | consoleTime": {
    "message": "Время консоли"
  },
  "panels/timeline/TimelineUIUtils.ts | consumedCacheSize": {
    "message": "Размер использованного кеша"
  },
  "panels/timeline/TimelineUIUtils.ts | createWebsocket": {
    "message": "Создать WebSocket"
  },
  "panels/timeline/TimelineUIUtils.ts | cumulativeLayoutShifts": {
    "message": "Совокупные смещения макета"
  },
  "panels/timeline/TimelineUIUtils.ts | cumulativeScore": {
    "message": "Общая оценка"
  },
  "panels/timeline/TimelineUIUtils.ts | currentClusterId": {
    "message": "Идентификатор текущего кластера"
  },
  "panels/timeline/TimelineUIUtils.ts | currentClusterScore": {
    "message": "Оценка текущего кластера"
  },
  "panels/timeline/TimelineUIUtils.ts | decodedBody": {
    "message": "Декодированный текст"
  },
  "panels/timeline/TimelineUIUtils.ts | decrypt": {
    "message": "Расшифровка"
  },
  "panels/timeline/TimelineUIUtils.ts | decryptReply": {
    "message": "Расшифровать ответ"
  },
  "panels/timeline/TimelineUIUtils.ts | deserializeCodeCache": {
    "message": "Десериализовать кеш кода"
  },
  "panels/timeline/TimelineUIUtils.ts | destroyWebsocket": {
    "message": "Уничтожить WebSocket"
  },
  "panels/timeline/TimelineUIUtils.ts | details": {
    "message": "Сведения"
  },
  "panels/timeline/TimelineUIUtils.ts | digest": {
    "message": "Хеш-сумма"
  },
  "panels/timeline/TimelineUIUtils.ts | digestReply": {
    "message": "Ответ с хеш-суммой"
  },
  "panels/timeline/TimelineUIUtils.ts | dimensions": {
    "message": "Размеры"
  },
  "panels/timeline/TimelineUIUtils.ts | domGc": {
    "message": "Сборка мусора DOM"
  },
  "panels/timeline/TimelineUIUtils.ts | domcontentloadedEvent": {
    "message": "Событие DOMContentLoaded"
  },
  "panels/timeline/TimelineUIUtils.ts | drawFrame": {
    "message": "Рисование фрейма"
  },
  "panels/timeline/TimelineUIUtils.ts | duration": {
    "message": "Продолжительность"
  },
  "panels/timeline/TimelineUIUtils.ts | eagerCompile": {
    "message": "Быстрая компиляция всех функций"
  },
  "panels/timeline/TimelineUIUtils.ts | elementsAffected": {
    "message": "Затронутые элементы"
  },
  "panels/timeline/TimelineUIUtils.ts | embedderCallback": {
    "message": "Обратный вызов встраивания"
  },
  "panels/timeline/TimelineUIUtils.ts | emptyPlaceholder": {
    "message": "{PH1}"
  },
  "panels/timeline/TimelineUIUtils.ts | encodedData": {
    "message": "Данные в кодировке"
  },
  "panels/timeline/TimelineUIUtils.ts | encrypt": {
    "message": "Шифрование"
  },
  "panels/timeline/TimelineUIUtils.ts | encryptReply": {
    "message": "Зашифровать ответ"
  },
  "panels/timeline/TimelineUIUtils.ts | evaluateModule": {
    "message": "Оценка модуля"
  },
  "panels/timeline/TimelineUIUtils.ts | evaluateScript": {
    "message": "Оценка скрипта"
  },
  "panels/timeline/TimelineUIUtils.ts | event": {
    "message": "Событие"
  },
  "panels/timeline/TimelineUIUtils.ts | eventTiming": {
    "message": "Временные метки событий"
  },
  "panels/timeline/TimelineUIUtils.ts | evolvedClsLink": {
    "message": "усовершенствованный"
  },
  "panels/timeline/TimelineUIUtils.ts | experience": {
    "message": "Взаимодействие"
  },
  "panels/timeline/TimelineUIUtils.ts | failedToLoadScriptFromCache": {
    "message": "не удалось загрузить скрипт из кеша"
  },
  "panels/timeline/TimelineUIUtils.ts | finishLoading": {
    "message": "Завершить загрузку"
  },
  "panels/timeline/TimelineUIUtils.ts | fireIdleCallback": {
    "message": "Запуск функции обратного вызова для простоя"
  },
  "panels/timeline/TimelineUIUtils.ts | firstContentfulPaint": {
    "message": "Первое существенное отображение"
  },
  "panels/timeline/TimelineUIUtils.ts | firstInvalidated": {
    "message": "Первое объявление недействительным"
  },
  "panels/timeline/TimelineUIUtils.ts | firstLayoutInvalidation": {
    "message": "Первое аннулирование макета"
  },
  "panels/timeline/TimelineUIUtils.ts | firstPaint": {
    "message": "Первая отрисовка"
  },
  "panels/timeline/TimelineUIUtils.ts | frame": {
    "message": "Фрейм"
  },
  "panels/timeline/TimelineUIUtils.ts | frameStart": {
    "message": "Запуск фрейма"
  },
  "panels/timeline/TimelineUIUtils.ts | frameStartMainThread": {
    "message": "Начало фрейма (основной поток)"
  },
  "panels/timeline/TimelineUIUtils.ts | frameStartedLoading": {
    "message": "Фрейм начал загружаться"
  },
  "panels/timeline/TimelineUIUtils.ts | function": {
    "message": "Функция"
  },
  "panels/timeline/TimelineUIUtils.ts | functionCall": {
    "message": "Вызов функции"
  },
  "panels/timeline/TimelineUIUtils.ts | gcEvent": {
    "message": "Событие сборки мусора"
  },
  "panels/timeline/TimelineUIUtils.ts | gpu": {
    "message": "Графический процессор"
  },
  "panels/timeline/TimelineUIUtils.ts | hadRecentInput": {
    "message": "Ввод был осуществлен недавно"
  },
  "panels/timeline/TimelineUIUtils.ts | hitTest": {
    "message": "Проверка нажатия"
  },
  "panels/timeline/TimelineUIUtils.ts | idle": {
    "message": "Бездействует"
  },
  "panels/timeline/TimelineUIUtils.ts | idleCallbackRequested": {
    "message": "Запрошен вызов функции в период простоя"
  },
  "panels/timeline/TimelineUIUtils.ts | imageDecode": {
    "message": "Расшифровка изображения"
  },
  "panels/timeline/TimelineUIUtils.ts | imageResize": {
    "message": "Изменение размера изображения"
  },
  "panels/timeline/TimelineUIUtils.ts | imageUrl": {
    "message": "URL изображения"
  },
  "panels/timeline/TimelineUIUtils.ts | initialPriority": {
    "message": "Первоначальный приоритет"
  },
  "panels/timeline/TimelineUIUtils.ts | initiator": {
    "message": "Инициатор"
  },
  "panels/timeline/TimelineUIUtils.ts | inputDelay": {
    "message": "Задержка ввода"
  },
  "panels/timeline/TimelineUIUtils.ts | installTimer": {
    "message": "Установить таймер"
  },
  "panels/timeline/TimelineUIUtils.ts | interactionID": {
    "message": "Идентификатор"
  },
  "panels/timeline/TimelineUIUtils.ts | invalidateLayout": {
    "message": "Аннулировать макет"
  },
  "panels/timeline/TimelineUIUtils.ts | invalidationWithCallFrame": {
    "message": "{PH1} в {PH2}"
  },
  "panels/timeline/TimelineUIUtils.ts | invalidations": {
    "message": "Аннулирования"
  },
  "panels/timeline/TimelineUIUtils.ts | invokedByTimeout": {
    "message": "Вызвано временем ожидания"
  },
  "panels/timeline/TimelineUIUtils.ts | jsFrame": {
    "message": "Фрейм JS"
  },
  "panels/timeline/TimelineUIUtils.ts | jsIdleFrame": {
    "message": "Бездействующий фрейм JS"
  },
  "panels/timeline/TimelineUIUtils.ts | jsRoot": {
    "message": "Источник JS"
  },
  "panels/timeline/TimelineUIUtils.ts | jsSystemFrame": {
    "message": "Системный фрейм JS"
  },
  "panels/timeline/TimelineUIUtils.ts | largestContentfulPaint": {
    "message": "Самое крупное существенное отображение"
  },
  "panels/timeline/TimelineUIUtils.ts | layerRoot": {
    "message": "Корень слоя"
  },
  "panels/timeline/TimelineUIUtils.ts | layerize": {
    "message": "Создание слоев"
  },
  "panels/timeline/TimelineUIUtils.ts | layout": {
    "message": "Макет"
  },
  "panels/timeline/TimelineUIUtils.ts | layoutForced": {
    "message": "Макет принудительно применен"
  },
  "panels/timeline/TimelineUIUtils.ts | layoutRoot": {
    "message": "Корневой макет"
  },
  "panels/timeline/TimelineUIUtils.ts | layoutShift": {
    "message": "Смещение макета"
  },
  "panels/timeline/TimelineUIUtils.ts | learnMore": {
    "message": "Подробнее…"
  },
  "panels/timeline/TimelineUIUtils.ts | loadFromCache": {
    "message": "загрузка из кеша"
  },
  "panels/timeline/TimelineUIUtils.ts | loading": {
    "message": "Загрузка"
  },
  "panels/timeline/TimelineUIUtils.ts | location": {
    "message": "Расположение"
  },
  "panels/timeline/TimelineUIUtils.ts | majorGc": {
    "message": "Полная сборка мусора"
  },
  "panels/timeline/TimelineUIUtils.ts | message": {
    "message": "Сообщение"
  },
  "panels/timeline/TimelineUIUtils.ts | mimeType": {
    "message": "MIME-тип"
  },
  "panels/timeline/TimelineUIUtils.ts | minorGc": {
    "message": "Быстрая сборка мусора"
  },
  "panels/timeline/TimelineUIUtils.ts | module": {
    "message": "Модуль"
  },
  "panels/timeline/TimelineUIUtils.ts | movedFrom": {
    "message": "Откуда перемещено:"
  },
  "panels/timeline/TimelineUIUtils.ts | movedTo": {
    "message": "Перемещено:"
  },
  "panels/timeline/TimelineUIUtils.ts | networkRequest": {
    "message": "Сетевой запрос"
  },
  "panels/timeline/TimelineUIUtils.ts | networkTransfer": {
    "message": "сетевая передача"
  },
  "panels/timeline/TimelineUIUtils.ts | no": {
    "message": "Нет"
  },
  "panels/timeline/TimelineUIUtils.ts | nodesThatNeedLayout": {
    "message": "Узлы, для которых нужны макеты"
  },
  "panels/timeline/TimelineUIUtils.ts | onloadEvent": {
    "message": "Событие onload"
  },
  "panels/timeline/TimelineUIUtils.ts | optimizeCode": {
    "message": "Оптимизировать код"
  },
  "panels/timeline/TimelineUIUtils.ts | other": {
    "message": "Другое"
  },
  "panels/timeline/TimelineUIUtils.ts | ownerElement": {
    "message": "Элемент owner"
  },
  "panels/timeline/TimelineUIUtils.ts | paint": {
    "message": "Отрисовка"
  },
  "panels/timeline/TimelineUIUtils.ts | paintImage": {
    "message": "Отрисовка изображения"
  },
  "panels/timeline/TimelineUIUtils.ts | paintProfiler": {
    "message": "Профилировщик отображения"
  },
  "panels/timeline/TimelineUIUtils.ts | paintSetup": {
    "message": "Настройка отрисовки"
  },
  "panels/timeline/TimelineUIUtils.ts | painting": {
    "message": "Отображение"
  },
  "panels/timeline/TimelineUIUtils.ts | parse": {
    "message": "Синтаксический анализ"
  },
  "panels/timeline/TimelineUIUtils.ts | parseAndCompile": {
    "message": "Синтаксический анализ и компиляция"
  },
  "panels/timeline/TimelineUIUtils.ts | parseHtml": {
    "message": "Синтаксический анализ HTML"
  },
  "panels/timeline/TimelineUIUtils.ts | parseStylesheet": {
    "message": "Синтаксический анализ таблицы стилей"
  },
  "panels/timeline/TimelineUIUtils.ts | pendingFor": {
    "message": "Ожидание:"
  },
  "panels/timeline/TimelineUIUtils.ts | prePaint": {
    "message": "Предварительная отрисовка"
  },
  "panels/timeline/TimelineUIUtils.ts | presentationDelay": {
    "message": "Задержка вывода ответа на экран"
  },
  "panels/timeline/TimelineUIUtils.ts | preview": {
    "message": "Предварительный просмотр"
  },
  "panels/timeline/TimelineUIUtils.ts | priority": {
    "message": "Приоритет"
  },
  "panels/timeline/TimelineUIUtils.ts | processingTime": {
    "message": "Время обработки"
  },
  "panels/timeline/TimelineUIUtils.ts | producedCacheSize": {
    "message": "Выполненный размер кеша"
  },
  "panels/timeline/TimelineUIUtils.ts | profilingOverhead": {
    "message": "Ресурсопотребление профилирования"
  },
  "panels/timeline/TimelineUIUtils.ts | range": {
    "message": "Диапазон"
  },
  "panels/timeline/TimelineUIUtils.ts | rasterizePaint": {
    "message": "Растрировать отрисовку"
  },
  "panels/timeline/TimelineUIUtils.ts | recalculateStyle": {
    "message": "Рассчитать стиль заново"
  },
  "panels/timeline/TimelineUIUtils.ts | recalculationForced": {
    "message": "Вычисление принудительно выполнено заново"
  },
  "panels/timeline/TimelineUIUtils.ts | receiveData": {
    "message": "Получить данные"
  },
  "panels/timeline/TimelineUIUtils.ts | receiveResponse": {
    "message": "Получить ответ"
  },
  "panels/timeline/TimelineUIUtils.ts | receiveWebsocketHandshake": {
    "message": "Получить рукопожатие WebSocket"
  },
  "panels/timeline/TimelineUIUtils.ts | relatedNode": {
    "message": "Связанный узел"
  },
  "panels/timeline/TimelineUIUtils.ts | removeTimer": {
    "message": "Удалить таймер"
  },
  "panels/timeline/TimelineUIUtils.ts | rendering": {
    "message": "Отрисовка"
  },
  "panels/timeline/TimelineUIUtils.ts | repeats": {
    "message": "Повтор"
  },
  "panels/timeline/TimelineUIUtils.ts | requestAnimationFrame": {
    "message": "Запрос фрейма анимации"
  },
  "panels/timeline/TimelineUIUtils.ts | requestIdleCallback": {
    "message": "Запрос функции обратного вызова для простоя"
  },
  "panels/timeline/TimelineUIUtils.ts | requestMainThreadFrame": {
    "message": "Запрос фрейма основного потока"
  },
  "panels/timeline/TimelineUIUtils.ts | requestMethod": {
    "message": "Метод запроса"
  },
  "panels/timeline/TimelineUIUtils.ts | reveal": {
    "message": "Показать"
  },
  "panels/timeline/TimelineUIUtils.ts | runMicrotasks": {
    "message": "Запуск микрозадач"
  },
  "panels/timeline/TimelineUIUtils.ts | sAtS": {
    "message": "{PH1}: {PH2}"
  },
  "panels/timeline/TimelineUIUtils.ts | sAtSParentheses": {
    "message": "{PH1} (при {PH2})"
  },
  "panels/timeline/TimelineUIUtils.ts | sCLSInformation": {
    "message": "{PH1} может снизить удобство для пользователей. Недавно использовался {PH2}."
  },
  "panels/timeline/TimelineUIUtils.ts | sChildren": {
    "message": "{PH1} (дочерние)"
  },
  "panels/timeline/TimelineUIUtils.ts | sCollected": {
    "message": "Получено {PH1}"
  },
  "panels/timeline/TimelineUIUtils.ts | sOfS": {
    "message": "{PH1} из {PH2}"
  },
  "panels/timeline/TimelineUIUtils.ts | sS": {
    "message": "{PH1}: {PH2}"
  },
  "panels/timeline/TimelineUIUtils.ts | sSCurlyBrackets": {
    "message": "({PH1}, {PH2})"
  },
  "panels/timeline/TimelineUIUtils.ts | sSDimensions": {
    "message": "{PH1} × {PH2}"
  },
  "panels/timeline/TimelineUIUtils.ts | sSSquareBrackets": {
    "message": "{PH1} [{PH2}…]"
  },
  "panels/timeline/TimelineUIUtils.ts | sSelf": {
    "message": "{PH1} (одно действие)"
  },
  "panels/timeline/TimelineUIUtils.ts | sSs": {
    "message": "{PH1} [{PH2}…{PH3}]"
  },
  "panels/timeline/TimelineUIUtils.ts | scheduleStyleRecalculation": {
    "message": "Планирование пересчета стилей"
  },
  "panels/timeline/TimelineUIUtils.ts | score": {
    "message": "Оценка"
  },
  "panels/timeline/TimelineUIUtils.ts | script": {
    "message": "Скрипт"
  },
  "panels/timeline/TimelineUIUtils.ts | scriptLoadedFromCache": {
    "message": "скрипт загружен из кеша"
  },
  "panels/timeline/TimelineUIUtils.ts | scriptNotEligible": {
    "message": "скрипт не поддерживается"
  },
  "panels/timeline/TimelineUIUtils.ts | scripting": {
    "message": "Выполнение скриптов"
  },
  "panels/timeline/TimelineUIUtils.ts | scroll": {
    "message": "Прокрутка"
  },
  "panels/timeline/TimelineUIUtils.ts | selfTime": {
    "message": "Время одного действия"
  },
  "panels/timeline/TimelineUIUtils.ts | sendRequest": {
    "message": "Отправить запрос"
  },
  "panels/timeline/TimelineUIUtils.ts | sendWebsocketHandshake": {
    "message": "Отправить рукопожатие WebSocket"
  },
  "panels/timeline/TimelineUIUtils.ts | sign": {
    "message": "Подписание"
  },
  "panels/timeline/TimelineUIUtils.ts | signReply": {
    "message": "Подпись ответа"
  },
  "panels/timeline/TimelineUIUtils.ts | size": {
    "message": "Размер"
  },
  "panels/timeline/TimelineUIUtils.ts | stackTrace": {
    "message": "Трассировка стека"
  },
  "panels/timeline/TimelineUIUtils.ts | state": {
    "message": "Состояние"
  },
  "panels/timeline/TimelineUIUtils.ts | streamed": {
    "message": "Завершено"
  },
  "panels/timeline/TimelineUIUtils.ts | streamingCompileTask": {
    "message": "Задача по компиляции для потоковой передачи"
  },
  "panels/timeline/TimelineUIUtils.ts | streamingWasmResponse": {
    "message": "Потоковая передача ответа Wasm"
  },
  "panels/timeline/TimelineUIUtils.ts | stylesheetUrl": {
    "message": "URL таблицы стилей"
  },
  "panels/timeline/TimelineUIUtils.ts | system": {
    "message": "Система"
  },
  "panels/timeline/TimelineUIUtils.ts | task": {
    "message": "Задача"
  },
  "panels/timeline/TimelineUIUtils.ts | timeSpentInRendering": {
    "message": "Время отрисовки"
  },
  "panels/timeline/TimelineUIUtils.ts | timeout": {
    "message": "Время ожидания"
  },
  "panels/timeline/TimelineUIUtils.ts | timerFired": {
    "message": "Таймер запущен"
  },
  "panels/timeline/TimelineUIUtils.ts | timerId": {
    "message": "Идентификатор таймера"
  },
  "panels/timeline/TimelineUIUtils.ts | timerInstalled": {
    "message": "Таймер установлен."
  },
  "panels/timeline/TimelineUIUtils.ts | timestamp": {
    "message": "Временная метка"
  },
  "panels/timeline/TimelineUIUtils.ts | totalTime": {
    "message": "Общее время"
  },
  "panels/timeline/TimelineUIUtils.ts | type": {
    "message": "Тип"
  },
  "panels/timeline/TimelineUIUtils.ts | updateLayer": {
    "message": "Обновить слой"
  },
  "panels/timeline/TimelineUIUtils.ts | updateLayerTree": {
    "message": "Обновить дерево слоев"
  },
  "panels/timeline/TimelineUIUtils.ts | url": {
    "message": "URL"
  },
  "panels/timeline/TimelineUIUtils.ts | userTiming": {
    "message": "Пользовательское время"
  },
  "panels/timeline/TimelineUIUtils.ts | verify": {
    "message": "Подтвердить"
  },
  "panels/timeline/TimelineUIUtils.ts | verifyReply": {
    "message": "Проверить ответ"
  },
  "panels/timeline/TimelineUIUtils.ts | waitingForNetwork": {
    "message": "Поиск сети"
  },
  "panels/timeline/TimelineUIUtils.ts | warning": {
    "message": "Предупреждение"
  },
  "panels/timeline/TimelineUIUtils.ts | wasmModuleCacheHit": {
    "message": "Совпадение в кеше модуля Wasm"
  },
  "panels/timeline/TimelineUIUtils.ts | wasmModuleCacheInvalid": {
    "message": "Недействительный кеш модуля Wasm"
  },
  "panels/timeline/TimelineUIUtils.ts | willSendRequest": {
    "message": "Запрос будет отправлен"
  },
  "panels/timeline/TimelineUIUtils.ts | xhrLoad": {
    "message": "Загрузка XHR"
  },
  "panels/timeline/TimelineUIUtils.ts | xhrReadyStateChange": {
    "message": "Изменение состояния готовности: XHR"
  },
  "panels/timeline/TimelineUIUtils.ts | yes": {
    "message": "Да"
  },
  "panels/timeline/TimingsTrackAppender.ts | timings": {
    "message": "Временные метки"
  },
  "panels/timeline/UIDevtoolsUtils.ts | drawFrame": {
    "message": "Рисование фрейма"
  },
  "panels/timeline/UIDevtoolsUtils.ts | drawing": {
    "message": "Рисунок"
  },
  "panels/timeline/UIDevtoolsUtils.ts | frameStart": {
    "message": "Запуск фрейма"
  },
  "panels/timeline/UIDevtoolsUtils.ts | idle": {
    "message": "Бездействует"
  },
  "panels/timeline/UIDevtoolsUtils.ts | layout": {
    "message": "Макет"
  },
  "panels/timeline/UIDevtoolsUtils.ts | painting": {
    "message": "Отображение"
  },
  "panels/timeline/UIDevtoolsUtils.ts | rasterizing": {
    "message": "Растрирование"
  },
  "panels/timeline/UIDevtoolsUtils.ts | system": {
    "message": "Система"
  },
  "panels/timeline/components/DetailsView.ts | forcedReflow": {
    "message": "Принудительная компоновка"
  },
  "panels/timeline/components/DetailsView.ts | idleCallbackExecutionExtended": {
    "message": "Выполнение вызова функции в период простоя продлено на {PH1}."
  },
  "panels/timeline/components/DetailsView.ts | longInteractionINP": {
    "message": "Длительное взаимодействие"
  },
  "panels/timeline/components/DetailsView.ts | longTask": {
    "message": "Длительная задача"
  },
  "panels/timeline/components/DetailsView.ts | sIsALikelyPerformanceBottleneck": {
    "message": "{PH1} может быть узким местом производительности."
  },
  "panels/timeline/components/DetailsView.ts | sIsLikelyPoorPageResponsiveness": {
    "message": "Статус \"{PH1}\" указывает на низкую скорость отклика страницы."
  },
  "panels/timeline/components/DetailsView.ts | sTookS": {
    "message": "{PH1}: потребовалось {PH2}."
  },
  "panels/timeline/components/DetailsView.ts | websocketProtocol": {
    "message": "Протокол WebSocket"
  },
  "panels/timeline/components/InteractionBreakdown.ts | inputDelay": {
    "message": "Задержка ввода"
  },
  "panels/timeline/components/InteractionBreakdown.ts | presentationDelay": {
    "message": "Задержка вывода ответа на экран"
  },
  "panels/timeline/components/InteractionBreakdown.ts | processingTime": {
    "message": "Время обработки"
  },
  "panels/timeline/timeline-meta.ts | hideChromeFrameInLayersView": {
    "message": "Скрыть фрейм chrome в виде слоев"
  },
  "panels/timeline/timeline-meta.ts | javascriptProfiler": {
    "message": "Профилировщик JavaScript"
  },
  "panels/timeline/timeline-meta.ts | loadProfile": {
    "message": "Загрузить профиль…"
  },
  "panels/timeline/timeline-meta.ts | nextFrame": {
    "message": "Следующий фрейм"
  },
  "panels/timeline/timeline-meta.ts | nextRecording": {
    "message": "Следующая запись"
  },
  "panels/timeline/timeline-meta.ts | performance": {
    "message": "Производительность"
  },
  "panels/timeline/timeline-meta.ts | previousFrame": {
    "message": "Предыдущий кадр"
  },
  "panels/timeline/timeline-meta.ts | previousRecording": {
    "message": "Предыдущая запись"
  },
  "panels/timeline/timeline-meta.ts | record": {
    "message": "Запись"
  },
  "panels/timeline/timeline-meta.ts | saveProfile": {
    "message": "Сохранить профиль…"
  },
  "panels/timeline/timeline-meta.ts | showJavascriptProfiler": {
    "message": "Показать профилировщик JavaScript"
  },
  "panels/timeline/timeline-meta.ts | showPerformance": {
    "message": "Показать панель \"Производительность\""
  },
  "panels/timeline/timeline-meta.ts | showRecentTimelineSessions": {
    "message": "Показать недавние сеансы хронологии"
  },
  "panels/timeline/timeline-meta.ts | startProfilingAndReloadPage": {
    "message": "Начать профилирование и обновить страницу"
  },
  "panels/timeline/timeline-meta.ts | startStopRecording": {
    "message": "Начать/остановить запись"
  },
  "panels/timeline/timeline-meta.ts | stop": {
    "message": "Остановить"
  },
  "panels/web_audio/AudioContextContentBuilder.ts | callbackBufferSize": {
    "message": "Размер буфера обратного вызова"
  },
  "panels/web_audio/AudioContextContentBuilder.ts | callbackInterval": {
    "message": "Интервал обратного вызова"
  },
  "panels/web_audio/AudioContextContentBuilder.ts | currentTime": {
    "message": "Текущее время"
  },
  "panels/web_audio/AudioContextContentBuilder.ts | maxOutputChannels": {
    "message": "Максимальное количество каналов вывода"
  },
  "panels/web_audio/AudioContextContentBuilder.ts | renderCapacity": {
    "message": "Емкость рендеринга"
  },
  "panels/web_audio/AudioContextContentBuilder.ts | sampleRate": {
    "message": "Частота дискретизации"
  },
  "panels/web_audio/AudioContextContentBuilder.ts | state": {
    "message": "Состояние"
  },
  "panels/web_audio/AudioContextSelector.ts | audioContextS": {
    "message": "Аудиоконтекст: {PH1}"
  },
  "panels/web_audio/AudioContextSelector.ts | noRecordings": {
    "message": "(записей нет)"
  },
  "panels/web_audio/WebAudioView.ts | openAPageThatUsesWebAudioApiTo": {
    "message": "Чтобы начать мониторинг, откройте страницу, которая использует Web Audio API."
  },
  "panels/web_audio/web_audio-meta.ts | audio": {
    "message": "аудио"
  },
  "panels/web_audio/web_audio-meta.ts | showWebaudio": {
    "message": "Показать WebAudio"
  },
  "panels/web_audio/web_audio-meta.ts | webaudio": {
    "message": "WebAudio"
  },
  "panels/webauthn/WebauthnPane.ts | actions": {
    "message": "Действия"
  },
  "panels/webauthn/WebauthnPane.ts | active": {
    "message": "Активно"
  },
  "panels/webauthn/WebauthnPane.ts | add": {
    "message": "Добавить"
  },
  "panels/webauthn/WebauthnPane.ts | addAuthenticator": {
    "message": "Добавить программу для аутентификации"
  },
  "panels/webauthn/WebauthnPane.ts | authenticatorS": {
    "message": "Программа для аутентификации {PH1}"
  },
  "panels/webauthn/WebauthnPane.ts | credentials": {
    "message": "Учетные данные"
  },
  "panels/webauthn/WebauthnPane.ts | editName": {
    "message": "Изменить название"
  },
  "panels/webauthn/WebauthnPane.ts | enableVirtualAuthenticator": {
    "message": "Включить программу для аутентификации в виртуальной среде"
  },
  "panels/webauthn/WebauthnPane.ts | enterNewName": {
    "message": "Введите новое название"
  },
  "panels/webauthn/WebauthnPane.ts | export": {
    "message": "Экспортировать"
  },
  "panels/webauthn/WebauthnPane.ts | id": {
    "message": "Идентификатор"
  },
  "panels/webauthn/WebauthnPane.ts | isResident": {
    "message": "Это резидент"
  },
  "panels/webauthn/WebauthnPane.ts | learnMore": {
    "message": "Подробнее…"
  },
  "panels/webauthn/WebauthnPane.ts | newAuthenticator": {
    "message": "Новая программа для аутентификации"
  },
  "panels/webauthn/WebauthnPane.ts | no": {
    "message": "Нет"
  },
  "panels/webauthn/WebauthnPane.ts | noCredentialsTryCallingSFromYour": {
    "message": "Нет учетных данных. Вызовите функцию {PH1} с сайта."
  },
  "panels/webauthn/WebauthnPane.ts | privateKeypem": {
    "message": "Закрытый ключ PEM-файла"
  },
  "panels/webauthn/WebauthnPane.ts | protocol": {
    "message": "Протокол"
  },
  "panels/webauthn/WebauthnPane.ts | remove": {
    "message": "Удалить"
  },
  "panels/webauthn/WebauthnPane.ts | rpId": {
    "message": "Идентификатор доверяющей стороны"
  },
  "panels/webauthn/WebauthnPane.ts | saveName": {
    "message": "Сохранить название"
  },
  "panels/webauthn/WebauthnPane.ts | setSAsTheActiveAuthenticator": {
    "message": "Установить {PH1} в качестве активной программы для аутентификации"
  },
  "panels/webauthn/WebauthnPane.ts | signCount": {
    "message": "Счетчик подписей"
  },
  "panels/webauthn/WebauthnPane.ts | supportsLargeBlob": {
    "message": "Поддерживать большие объекты BLOB"
  },
  "panels/webauthn/WebauthnPane.ts | supportsResidentKeys": {
    "message": "Поддерживает ключи устройства"
  },
  "panels/webauthn/WebauthnPane.ts | supportsUserVerification": {
    "message": "Поддерживает верификацию пользователя"
  },
  "panels/webauthn/WebauthnPane.ts | transport": {
    "message": "Способ отправки запроса"
  },
  "panels/webauthn/WebauthnPane.ts | useWebauthnForPhishingresistant": {
    "message": "Используйте WebAuthn для аутентификации, устойчивой к фишингу"
  },
  "panels/webauthn/WebauthnPane.ts | userHandle": {
    "message": "Имя пользователя"
  },
  "panels/webauthn/WebauthnPane.ts | uuid": {
    "message": "UUID"
  },
  "panels/webauthn/WebauthnPane.ts | yes": {
    "message": "Да"
  },
  "panels/webauthn/webauthn-meta.ts | showWebauthn": {
    "message": "Показать WebAuthn"
  },
  "panels/webauthn/webauthn-meta.ts | webauthn": {
    "message": "WebAuthn"
  },
  "ui/components/data_grid/DataGrid.ts | enterToSort": {
    "message": "Сортировка столбцов: {PH1}. Нажмите Ввод, чтобы применить фильтр для сортировки."
  },
  "ui/components/data_grid/DataGrid.ts | headerOptions": {
    "message": "Варианты заголовка"
  },
  "ui/components/data_grid/DataGrid.ts | resetColumns": {
    "message": "Сбросить столбцы"
  },
  "ui/components/data_grid/DataGrid.ts | sortAsc": {
    "message": "по возрастанию"
  },
  "ui/components/data_grid/DataGrid.ts | sortBy": {
    "message": "Сортировать"
  },
  "ui/components/data_grid/DataGrid.ts | sortDesc": {
    "message": "по убыванию"
  },
  "ui/components/data_grid/DataGrid.ts | sortNone": {
    "message": "нет"
  },
  "ui/components/data_grid/DataGridController.ts | sortInAscendingOrder": {
    "message": "Данные в столбце \"{PH1}\" отсортированы по возрастанию"
  },
  "ui/components/data_grid/DataGridController.ts | sortInDescendingOrder": {
    "message": "Данные в столбце \"{PH1}\" отсортированы по убыванию"
  },
  "ui/components/data_grid/DataGridController.ts | sortingCanceled": {
    "message": "Сортировка данных в столбце \"{PH1}\" отменена"
  },
  "ui/components/dialogs/IconDialog.ts | close": {
    "message": "Закрыть"
  },
  "ui/components/dialogs/ShortcutDialog.ts | close": {
    "message": "Закрыть"
  },
  "ui/components/dialogs/ShortcutDialog.ts | dialogTitle": {
    "message": "Сочетание клавиш"
  },
  "ui/components/dialogs/ShortcutDialog.ts | showShortcutTitle": {
    "message": "Показывать ярлыки"
  },
  "ui/components/diff_view/DiffView.ts | SkippingDMatchingLines": {
    "message": "( … Пропуск совпадающих строк ({PH1}) … )"
  },
  "ui/components/diff_view/DiffView.ts | additions": {
    "message": "Добавление:"
  },
  "ui/components/diff_view/DiffView.ts | changesDiffViewer": {
    "message": "Просмотр изменений"
  },
  "ui/components/diff_view/DiffView.ts | deletions": {
    "message": "Удаление:"
  },
  "ui/components/issue_counter/IssueCounter.ts | breakingChanges": {
    "message": "{issueCount,plural, =1{# критическое изменение}one{# критическое изменение}few{# критических изменения}many{# критических изменений}other{# критического изменения}}"
  },
  "ui/components/issue_counter/IssueCounter.ts | pageErrors": {
    "message": "{issueCount,plural, =1{# ошибка страницы}one{# ошибка страницы}few{# ошибки страницы}many{# ошибок страницы}other{# ошибки страницы}}"
  },
  "ui/components/issue_counter/IssueCounter.ts | possibleImprovements": {
    "message": "{issueCount,plural, =1{# потенциальное улучшение}one{# потенциальное улучшение}few{# потенциальных улучшения}many{# потенциальных улучшений}other{# потенциального улучшения}}"
  },
  "ui/components/issue_counter/IssueLinkIcon.ts | clickToShowIssue": {
    "message": "Нажмите, чтобы показать проблему на вкладке \"Проблемы\""
  },
  "ui/components/issue_counter/IssueLinkIcon.ts | clickToShowIssueWithTitle": {
    "message": "Нажмите, чтобы открыть панель \"Проблемы\" и посмотреть проблему \"{title}\""
  },
  "ui/components/issue_counter/IssueLinkIcon.ts | issueUnavailable": {
    "message": "Сведения о проблеме сейчас недоступны"
  },
  "ui/components/markdown_view/CodeBlock.ts | copied": {
    "message": "Скопировано в буфер обмена"
  },
  "ui/components/markdown_view/CodeBlock.ts | copy": {
    "message": "Скопировать код"
  },
  "ui/components/panel_feedback/FeedbackButton.ts | feedback": {
    "message": "Отправить отзыв"
  },
  "ui/components/panel_feedback/PanelFeedback.ts | previewFeature": {
    "message": "Функция просмотра"
  },
  "ui/components/panel_feedback/PanelFeedback.ts | previewText": {
    "message": "Наши специалисты активно работают над этой функцией и хотят узнать ваше мнение."
  },
  "ui/components/panel_feedback/PanelFeedback.ts | previewTextFeedbackLink": {
    "message": "Отправить отзыв"
  },
  "ui/components/panel_feedback/PanelFeedback.ts | videoAndDocumentation": {
    "message": "Видео и документация"
  },
  "ui/components/panel_feedback/PreviewToggle.ts | learnMoreLink": {
    "message": "Подробнее…"
  },
  "ui/components/panel_feedback/PreviewToggle.ts | previewTextFeedbackLink": {
    "message": "Отправить отзыв"
  },
  "ui/components/panel_feedback/PreviewToggle.ts | shortFeedbackLink": {
    "message": "Отправить отзыв"
  },
  "ui/components/request_link_icon/RequestLinkIcon.ts | clickToShowRequestInTheNetwork": {
    "message": "Нажмите, чтобы открыть панель \"Сеть\" и показать запрос для следующего URL: {url}"
  },
  "ui/components/request_link_icon/RequestLinkIcon.ts | requestUnavailableInTheNetwork": {
    "message": "Запрос недоступен на панели \"Сеть\", попробовать перезагрузить проверенную страницу"
  },
  "ui/components/request_link_icon/RequestLinkIcon.ts | shortenedURL": {
    "message": "Короткий URL"
  },
  "ui/components/survey_link/SurveyLink.ts | anErrorOccurredWithTheSurvey": {
    "message": "Возникла проблема с опросом."
  },
  "ui/components/survey_link/SurveyLink.ts | openingSurvey": {
    "message": "Подождите…"
  },
  "ui/components/survey_link/SurveyLink.ts | thankYouForYourFeedback": {
    "message": "Благодарим за отзыв!"
  },
  "ui/components/text_editor/config.ts | codeEditor": {
    "message": "Редактор кода"
  },
  "ui/components/text_editor/config.ts | sSuggestionSOfS": {
    "message": "{PH1}, подсказка {PH2} из {PH3}"
  },
  "ui/legacy/ActionRegistration.ts | background_services": {
    "message": "Фоновые службы"
  },
  "ui/legacy/ActionRegistration.ts | changes": {
    "message": "Изменения"
  },
  "ui/legacy/ActionRegistration.ts | console": {
    "message": "Консоль"
  },
  "ui/legacy/ActionRegistration.ts | debugger": {
    "message": "Отладчик"
  },
  "ui/legacy/ActionRegistration.ts | drawer": {
    "message": "Выдвигающаяся панель"
  },
  "ui/legacy/ActionRegistration.ts | elements": {
    "message": "Элементы"
  },
  "ui/legacy/ActionRegistration.ts | global": {
    "message": "Глобальные"
  },
  "ui/legacy/ActionRegistration.ts | help": {
    "message": "Справка"
  },
  "ui/legacy/ActionRegistration.ts | javascript_profiler": {
    "message": "Профилировщик JavaScript"
  },
  "ui/legacy/ActionRegistration.ts | layers": {
    "message": "Слои"
  },
  "ui/legacy/ActionRegistration.ts | memory": {
    "message": "Память"
  },
  "ui/legacy/ActionRegistration.ts | mobile": {
    "message": "Мобильная версия"
  },
  "ui/legacy/ActionRegistration.ts | navigation": {
    "message": "Навигация"
  },
  "ui/legacy/ActionRegistration.ts | network": {
    "message": "Сети"
  },
  "ui/legacy/ActionRegistration.ts | performance": {
    "message": "Производительность"
  },
  "ui/legacy/ActionRegistration.ts | recorder": {
    "message": "Регистратор"
  },
  "ui/legacy/ActionRegistration.ts | rendering": {
    "message": "Визуализация"
  },
  "ui/legacy/ActionRegistration.ts | resources": {
    "message": "Ресурсы"
  },
  "ui/legacy/ActionRegistration.ts | screenshot": {
    "message": "Скриншот"
  },
  "ui/legacy/ActionRegistration.ts | settings": {
    "message": "Настройки"
  },
  "ui/legacy/ActionRegistration.ts | sources": {
    "message": "Источники"
  },
  "ui/legacy/DockController.ts | close": {
    "message": "Закрыть"
  },
  "ui/legacy/DockController.ts | devToolsDockedTo": {
    "message": "Положение инструментов разработчика на странице: {PH1}"
  },
  "ui/legacy/DockController.ts | devtoolsUndocked": {
    "message": "Инструменты разработчика откреплены"
  },
  "ui/legacy/DockController.ts | dockToBottom": {
    "message": "Прикрепить внизу"
  },
  "ui/legacy/DockController.ts | dockToLeft": {
    "message": "Прикрепить слева"
  },
  "ui/legacy/DockController.ts | dockToRight": {
    "message": "Прикрепить справа"
  },
  "ui/legacy/DockController.ts | undockIntoSeparateWindow": {
    "message": "Перенести в отдельное окно"
  },
  "ui/legacy/EmptyWidget.ts | learnMore": {
    "message": "Подробнее…"
  },
  "ui/legacy/FilterBar.ts | allStrings": {
    "message": "Все"
  },
  "ui/legacy/FilterBar.ts | clearFilter": {
    "message": "Очистить"
  },
  "ui/legacy/FilterBar.ts | egSmalldUrlacomb": {
    "message": "Например: /small[d]+/ url:a.com/b"
  },
  "ui/legacy/FilterBar.ts | filter": {
    "message": "Фильтр"
  },
  "ui/legacy/FilterBar.ts | sclickToSelectMultipleTypes": {
    "message": "Чтобы выбрать несколько типов, нажмите {PH1} щелкните мышью."
  },
  "ui/legacy/Infobar.ts | close": {
    "message": "Закрыть"
  },
  "ui/legacy/Infobar.ts | dontShowAgain": {
    "message": "Больше не показывать"
  },
  "ui/legacy/Infobar.ts | showMore": {
    "message": "Показать больше"
  },
  "ui/legacy/InspectorView.ts | closeDrawer": {
    "message": "Закрыть выдвигающуюся панель"
  },
  "ui/legacy/InspectorView.ts | devToolsLanguageMissmatch": {
    "message": "Теперь инструменты разработчика доступны на этом языке: {PH1}."
  },
  "ui/legacy/InspectorView.ts | drawer": {
    "message": "Выдвигающаяся панель инструмента"
  },
  "ui/legacy/InspectorView.ts | drawerHidden": {
    "message": "Выдвигающаяся панель скрыта"
  },
  "ui/legacy/InspectorView.ts | drawerShown": {
    "message": "Выдвигающаяся панель показана"
  },
  "ui/legacy/InspectorView.ts | mainToolbar": {
    "message": "Основная панель инструментов"
  },
  "ui/legacy/InspectorView.ts | moreTools": {
    "message": "Дополнительные инструменты"
  },
  "ui/legacy/InspectorView.ts | moveToBottom": {
    "message": "Переместить вниз"
  },
  "ui/legacy/InspectorView.ts | moveToTop": {
    "message": "Переместить наверх"
  },
  "ui/legacy/InspectorView.ts | panels": {
    "message": "Панели"
  },
  "ui/legacy/InspectorView.ts | reloadDevtools": {
    "message": "Перезагрузить инструменты разработчика"
  },
  "ui/legacy/InspectorView.ts | selectFolder": {
    "message": "Выбрать папку"
  },
  "ui/legacy/InspectorView.ts | selectOverrideFolder": {
    "message": "Выберите папку для файлов переопределения."
  },
  "ui/legacy/InspectorView.ts | setToBrowserLanguage": {
    "message": "Всегда использовать язык Chrome"
  },
  "ui/legacy/InspectorView.ts | setToSpecificLanguage": {
    "message": "Изменить язык инструментов разработчика на {PH1}"
  },
  "ui/legacy/ListWidget.ts | addString": {
    "message": "Добавить"
  },
  "ui/legacy/ListWidget.ts | cancelString": {
    "message": "Отмена"
  },
  "ui/legacy/ListWidget.ts | changesSaved": {
    "message": "Изменения элемента сохранены"
  },
  "ui/legacy/ListWidget.ts | editString": {
    "message": "Изменить"
  },
  "ui/legacy/ListWidget.ts | removeString": {
    "message": "Удалить"
  },
  "ui/legacy/ListWidget.ts | removedItem": {
    "message": "Элемент удален"
  },
  "ui/legacy/ListWidget.ts | saveString": {
    "message": "Сохранить"
  },
  "ui/legacy/RemoteDebuggingTerminatedScreen.ts | debuggingConnectionWasClosed": {
    "message": "Подключение, используемое для отладки, закрыто. Причина: "
  },
  "ui/legacy/RemoteDebuggingTerminatedScreen.ts | reconnectDevtools": {
    "message": "Повторно подключить DevTools"
  },
  "ui/legacy/RemoteDebuggingTerminatedScreen.ts | reconnectWhenReadyByReopening": {
    "message": "Чтобы подключиться заново, откройте инструменты разработчика."
  },
  "ui/legacy/SearchableView.ts | cancel": {
    "message": "Отмена"
  },
  "ui/legacy/SearchableView.ts | dMatches": {
    "message": "Найдено соответствий: {PH1}."
  },
  "ui/legacy/SearchableView.ts | dOfD": {
    "message": "{PH1} из {PH2}"
  },
  "ui/legacy/SearchableView.ts | findString": {
    "message": "Найти"
  },
  "ui/legacy/SearchableView.ts | matchCase": {
    "message": "Учитывать регистр"
  },
  "ui/legacy/SearchableView.ts | matchString": {
    "message": "1 совпадение"
  },
  "ui/legacy/SearchableView.ts | replace": {
    "message": "Заменить"
  },
  "ui/legacy/SearchableView.ts | replaceAll": {
    "message": "Заменить все"
  },
  "ui/legacy/SearchableView.ts | searchNext": {
    "message": "Искать следующий"
  },
  "ui/legacy/SearchableView.ts | searchPrevious": {
    "message": "Искать предыдущий"
  },
  "ui/legacy/SearchableView.ts | useRegularExpression": {
    "message": "Использовать регулярное выражение"
  },
  "ui/legacy/SettingsUI.ts | oneOrMoreSettingsHaveChanged": {
    "message": "Чтобы изменения настроек вступили в силу, перезапустите инструменты разработчика."
  },
  "ui/legacy/SettingsUI.ts | srequiresReload": {
    "message": "*Требуется перезагрузка"
  },
  "ui/legacy/SoftContextMenu.ts | checked": {
    "message": "отмечено"
  },
  "ui/legacy/SoftContextMenu.ts | sS": {
    "message": "{PH1}, {PH2}"
  },
  "ui/legacy/SoftContextMenu.ts | sSS": {
    "message": "{PH1}, {PH2} {PH3}"
  },
  "ui/legacy/SoftContextMenu.ts | unchecked": {
    "message": "флажок не установлен"
  },
  "ui/legacy/SoftDropDown.ts | noItemSelected": {
    "message": "(объект не выбран)"
  },
  "ui/legacy/SuggestBox.ts | sSuggestionSOfS": {
    "message": "{PH1}, подсказка {PH2} из {PH3}"
  },
  "ui/legacy/SuggestBox.ts | sSuggestionSSelected": {
    "message": "Выбран совет \"{PH1}\""
  },
  "ui/legacy/TabbedPane.ts | close": {
    "message": "Закрыть"
  },
  "ui/legacy/TabbedPane.ts | closeAll": {
    "message": "Закрыть все"
  },
  "ui/legacy/TabbedPane.ts | closeOthers": {
    "message": "Закрыть другие"
  },
  "ui/legacy/TabbedPane.ts | closeS": {
    "message": "Закрыть вкладку \"{PH1}\""
  },
  "ui/legacy/TabbedPane.ts | closeTabsToTheRight": {
    "message": "Закрыть вкладки справа"
  },
  "ui/legacy/TabbedPane.ts | moreTabs": {
    "message": "Ещё вкладки"
  },
  "ui/legacy/TabbedPane.ts | previewFeature": {
    "message": "Функция просмотра"
  },
  "ui/legacy/TargetCrashedScreen.ts | devtoolsWasDisconnectedFromThe": {
    "message": "Инструменты разработчика отключены от страницы."
  },
  "ui/legacy/TargetCrashedScreen.ts | oncePageIsReloadedDevtoolsWill": {
    "message": "После перезагрузки страницы инструменты разработчика подключатся автоматически."
  },
  "ui/legacy/Toolbar.ts | clearInput": {
    "message": "Очистить"
  },
  "ui/legacy/Toolbar.ts | notPressed": {
    "message": "не нажато"
  },
  "ui/legacy/Toolbar.ts | pressed": {
    "message": "нажато"
  },
  "ui/legacy/UIUtils.ts | anonymous": {
    "message": "(анонимная)"
  },
  "ui/legacy/UIUtils.ts | anotherProfilerIsAlreadyActive": {
    "message": "Активен другой профилировщик"
  },
  "ui/legacy/UIUtils.ts | asyncCall": {
    "message": "Асинхронный вызов"
  },
  "ui/legacy/UIUtils.ts | cancel": {
    "message": "Отмена"
  },
  "ui/legacy/UIUtils.ts | close": {
    "message": "Закрыть"
  },
  "ui/legacy/UIUtils.ts | copyFileName": {
    "message": "Копировать название файла"
  },
  "ui/legacy/UIUtils.ts | copyLinkAddress": {
    "message": "Копировать адрес ссылки"
  },
  "ui/legacy/UIUtils.ts | ok": {
    "message": "ОК"
  },
  "ui/legacy/UIUtils.ts | openInNewTab": {
    "message": "Открыть в новой вкладке"
  },
  "ui/legacy/UIUtils.ts | promiseRejectedAsync": {
    "message": "Объект Promise отклонен (асинхронный)"
  },
  "ui/legacy/UIUtils.ts | promiseResolvedAsync": {
    "message": "Объект Promise распознан (асинхронный)"
  },
  "ui/legacy/UIUtils.ts | sAsync": {
    "message": "Объект {PH1} (асинхронный)"
  },
  "ui/legacy/ViewManager.ts | sPanel": {
    "message": "Панель \"{PH1}\""
  },
  "ui/legacy/ViewRegistration.ts | drawer": {
    "message": "Выдвигающаяся панель"
  },
  "ui/legacy/ViewRegistration.ts | drawer_sidebar": {
    "message": "Выдвигающаяся боковая панель"
  },
  "ui/legacy/ViewRegistration.ts | elements": {
    "message": "Элементы"
  },
  "ui/legacy/ViewRegistration.ts | network": {
    "message": "Сети"
  },
  "ui/legacy/ViewRegistration.ts | panel": {
    "message": "Панель"
  },
  "ui/legacy/ViewRegistration.ts | settings": {
    "message": "Настройки"
  },
  "ui/legacy/ViewRegistration.ts | sources": {
    "message": "Источники"
  },
  "ui/legacy/components/color_picker/ContrastDetails.ts | aa": {
    "message": "AA"
  },
  "ui/legacy/components/color_picker/ContrastDetails.ts | aaa": {
    "message": "AAA"
  },
  "ui/legacy/components/color_picker/ContrastDetails.ts | apca": {
    "message": "APCA"
  },
  "ui/legacy/components/color_picker/ContrastDetails.ts | contrastRatio": {
    "message": "Коэффициент контрастности"
  },
  "ui/legacy/components/color_picker/ContrastDetails.ts | noContrastInformationAvailable": {
    "message": "Данные о контрастности недоступны"
  },
  "ui/legacy/components/color_picker/ContrastDetails.ts | pickBackgroundColor": {
    "message": "Выбрать фоновый цвет"
  },
  "ui/legacy/components/color_picker/ContrastDetails.ts | placeholderWithColon": {
    "message": ": {PH1}"
  },
  "ui/legacy/components/color_picker/ContrastDetails.ts | showLess": {
    "message": "Свернуть"
  },
  "ui/legacy/components/color_picker/ContrastDetails.ts | showMore": {
    "message": "Показать больше"
  },
  "ui/legacy/components/color_picker/ContrastDetails.ts | toggleBackgroundColorPicker": {
    "message": "Показать или скрыть фоновую палитры"
  },
  "ui/legacy/components/color_picker/ContrastDetails.ts | useSuggestedColorStoFixLow": {
    "message": "Использовать предложенный цвет для увеличения контраста: {PH1}"
  },
  "ui/legacy/components/color_picker/FormatPickerContextMenu.ts | colorClippedTooltipText": {
    "message": "Значения цвета были уменьшены для соответствия цветовой гамме формата. Фактический результат: {PH1}."
  },
  "ui/legacy/components/color_picker/Spectrum.ts | addToPalette": {
    "message": "Добавить в палитру"
  },
  "ui/legacy/components/color_picker/Spectrum.ts | changeAlpha": {
    "message": "Изменить значение альфа-канала"
  },
  "ui/legacy/components/color_picker/Spectrum.ts | changeColorFormat": {
    "message": "Изменить цветовой формат"
  },
  "ui/legacy/components/color_picker/Spectrum.ts | changeHue": {
    "message": "Изменить оттенок"
  },
  "ui/legacy/components/color_picker/Spectrum.ts | clearPalette": {
    "message": "Очистить палитру"
  },
  "ui/legacy/components/color_picker/Spectrum.ts | colorPalettes": {
    "message": "Цветовые палитры"
  },
  "ui/legacy/components/color_picker/Spectrum.ts | colorS": {
    "message": "Цвет {PH1}"
  },
  "ui/legacy/components/color_picker/Spectrum.ts | copyColorToClipboard": {
    "message": "Копировать цвет в буфер обмена"
  },
  "ui/legacy/components/color_picker/Spectrum.ts | hex": {
    "message": "Шестнадцатеричный код"
  },
  "ui/legacy/components/color_picker/Spectrum.ts | longclickOrLongpressSpaceToShow": {
    "message": "Чтобы показать другие оттенки {PH1}, выполните долгое нажатие кнопки мыши или клавиши Пробел"
  },
  "ui/legacy/components/color_picker/Spectrum.ts | pressArrowKeysMessage": {
    "message": "Чтобы переместить палитру, используйте клавиши со стрелками и модификаторы. Нажимайте на стрелки, удерживая Shift для быстрого перемещения, Ctrl – для среднего, Alt – для медленного."
  },
  "ui/legacy/components/color_picker/Spectrum.ts | previewPalettes": {
    "message": "Просмотр палитр"
  },
  "ui/legacy/components/color_picker/Spectrum.ts | removeAllToTheRight": {
    "message": "Удалить все справа"
  },
  "ui/legacy/components/color_picker/Spectrum.ts | removeColor": {
    "message": "Удалить цвет"
  },
  "ui/legacy/components/color_picker/Spectrum.ts | returnToColorPicker": {
    "message": "Назад к палитре"
  },
  "ui/legacy/components/color_picker/Spectrum.ts | sInS": {
    "message": "{PH1} в {PH2}"
  },
  "ui/legacy/components/color_picker/Spectrum.ts | toggleColorPicker": {
    "message": "Пипетка [{PH1}]"
  },
  "ui/legacy/components/cookie_table/CookiesTable.ts | cookies": {
    "message": "Файлы cookie"
  },
  "ui/legacy/components/cookie_table/CookiesTable.ts | editableCookies": {
    "message": "Редактируемые файлы cookie"
  },
  "ui/legacy/components/cookie_table/CookiesTable.ts | na": {
    "message": "Н/Д"
  },
  "ui/legacy/components/cookie_table/CookiesTable.ts | name": {
    "message": "Название"
  },
  "ui/legacy/components/cookie_table/CookiesTable.ts | opaquePartitionKey": {
    "message": "(не определен)"
  },
  "ui/legacy/components/cookie_table/CookiesTable.ts | session": {
    "message": "Сеанс"
  },
  "ui/legacy/components/cookie_table/CookiesTable.ts | showIssueAssociatedWithThis": {
    "message": "Показать проблему, связанную с этим файлом cookie"
  },
  "ui/legacy/components/cookie_table/CookiesTable.ts | showRequestsWithThisCookie": {
    "message": "Показать запросы, связанные с этим файлом cookie"
  },
  "ui/legacy/components/cookie_table/CookiesTable.ts | size": {
    "message": "Размер"
  },
  "ui/legacy/components/cookie_table/CookiesTable.ts | sourcePortTooltip": {
    "message": "Показать порт источника (диапазон 1–65535), где был установлен файл cookie. Если порт неизвестен, вы увидите –1."
  },
  "ui/legacy/components/cookie_table/CookiesTable.ts | sourceSchemeTooltip": {
    "message": "Показать схему источника (Secure, NonSecure), где был установлен файл cookie. Если схема неизвестна, вы увидите \"Unset\"."
  },
  "ui/legacy/components/cookie_table/CookiesTable.ts | timeAfter": {
    "message": "после {date}"
  },
  "ui/legacy/components/cookie_table/CookiesTable.ts | timeAfterTooltip": {
    "message": "Временная метка окончания срока действия, {seconds}, соответствует дате после {date}"
  },
  "ui/legacy/components/cookie_table/CookiesTable.ts | value": {
    "message": "Значение"
  },
  "ui/legacy/components/data_grid/DataGrid.ts | addNew": {
    "message": "Добавить"
  },
  "ui/legacy/components/data_grid/DataGrid.ts | checked": {
    "message": "отмечено"
  },
  "ui/legacy/components/data_grid/DataGrid.ts | collapsed": {
    "message": "свернуто"
  },
  "ui/legacy/components/data_grid/DataGrid.ts | delete": {
    "message": "Удалить"
  },
  "ui/legacy/components/data_grid/DataGrid.ts | editS": {
    "message": "Изменить \"{PH1}\""
  },
  "ui/legacy/components/data_grid/DataGrid.ts | emptyRowCreated": {
    "message": "В таблице была создана пустая строка. Чтобы ее отредактировать, нажмите на нее дважды или используйте контекстное меню."
  },
  "ui/legacy/components/data_grid/DataGrid.ts | expanded": {
    "message": "развернуто"
  },
  "ui/legacy/components/data_grid/DataGrid.ts | headerOptions": {
    "message": "Варианты заголовка"
  },
  "ui/legacy/components/data_grid/DataGrid.ts | levelS": {
    "message": "уровень {PH1}"
  },
  "ui/legacy/components/data_grid/DataGrid.ts | refresh": {
    "message": "Обновить"
  },
  "ui/legacy/components/data_grid/DataGrid.ts | resetColumns": {
    "message": "Сбросить столбцы"
  },
  "ui/legacy/components/data_grid/DataGrid.ts | rowsS": {
    "message": "Строки: {PH1}"
  },
  "ui/legacy/components/data_grid/DataGrid.ts | sRowS": {
    "message": "{PH1} Строка {PH2}"
  },
  "ui/legacy/components/data_grid/DataGrid.ts | sSUseTheUpAndDownArrowKeysTo": {
    "message": "{PH1} {PH2}. Чтобы работать со строками таблицы, используйте клавиши со стрелками вверх и вниз. Воспользуйтесь режимом поиска для чтения по ячейкам."
  },
  "ui/legacy/components/data_grid/DataGrid.ts | sortByString": {
    "message": "Сортировать"
  },
  "ui/legacy/components/data_grid/ShowMoreDataGridNode.ts | showAllD": {
    "message": "Показать все {PH1}"
  },
  "ui/legacy/components/data_grid/ShowMoreDataGridNode.ts | showDAfter": {
    "message": "Показать после: {PH1}"
  },
  "ui/legacy/components/data_grid/ShowMoreDataGridNode.ts | showDBefore": {
    "message": "Показать {PH1} предыдущих"
  },
  "ui/legacy/components/inline_editor/CSSShadowEditor.ts | blur": {
    "message": "Размытие"
  },
  "ui/legacy/components/inline_editor/CSSShadowEditor.ts | spread": {
    "message": "Растянуть"
  },
  "ui/legacy/components/inline_editor/CSSShadowEditor.ts | type": {
    "message": "Тип"
  },
  "ui/legacy/components/inline_editor/CSSShadowEditor.ts | xOffset": {
    "message": "Смещение по оси X"
  },
  "ui/legacy/components/inline_editor/CSSShadowEditor.ts | yOffset": {
    "message": "Смещение по оси Y"
  },
  "ui/legacy/components/inline_editor/ColorSwatch.ts | shiftclickToChangeColorFormat": {
    "message": "Чтобы изменить формат цвета, нажмите, удерживая клавишу Shift"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | PleaseEnterAValidValueForSText": {
    "message": "*Укажите действительное значение для ввода текста ({PH1})."
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | cssProperties": {
    "message": "Свойства CSS"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | deleteS": {
    "message": "Удалить: {PH1}"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | fallbackS": {
    "message": "Обходные пути: {PH1}"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | fontFamily": {
    "message": "Семейство шрифтов"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | fontSelectorDeletedAtIndexS": {
    "message": "Селектор шрифта удален при индексе {PH1}"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | fontSize": {
    "message": "Размер шрифта"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | fontWeight": {
    "message": "Вес шрифта"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | lineHeight": {
    "message": "Высота строки"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | sKeyValueSelector": {
    "message": "Селектор ключа-значения {PH1}"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | sSliderInput": {
    "message": "Ползунок выбора {PH1}"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | sTextInput": {
    "message": "Ввод текста ({PH1})"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | sToggleInputType": {
    "message": "Тип переключения ввода ({PH1})"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | sUnitInput": {
    "message": "Ввод единицы измерения {PH1}"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | selectorInputMode": {
    "message": "Селектор режима ввода"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | sliderInputMode": {
    "message": "Режим ввода: ползунок"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | spacing": {
    "message": "Расположение"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | thereIsNoValueToDeleteAtIndexS": {
    "message": "Нет значения для удаления с индексом {PH1}"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | thisPropertyIsSetToContainUnits": {
    "message": "Согласно настройкам это свойство должно содержать модули, но у него нет заданного параметра unitsArray: {PH1}."
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | units": {
    "message": "Единицы измерения"
  },
  "ui/legacy/components/inline_editor/LinkSwatch.ts | sIsNotDefined": {
    "message": "Свойство {PH1} не определено"
  },
  "ui/legacy/components/object_ui/CustomPreviewComponent.ts | showAsJavascriptObject": {
    "message": "Показать как объект JavaScript"
  },
  "ui/legacy/components/object_ui/ObjectPropertiesSection.ts | collapseChildren": {
    "message": "Свернуть дочерние элементы"
  },
  "ui/legacy/components/object_ui/ObjectPropertiesSection.ts | copy": {
    "message": "Копировать"
  },
  "ui/legacy/components/object_ui/ObjectPropertiesSection.ts | copyPropertyPath": {
    "message": "Копировать путь свойства"
  },
  "ui/legacy/components/object_ui/ObjectPropertiesSection.ts | copyValue": {
    "message": "Копировать значение"
  },
  "ui/legacy/components/object_ui/ObjectPropertiesSection.ts | dots": {
    "message": "(…)"
  },
  "ui/legacy/components/object_ui/ObjectPropertiesSection.ts | exceptionS": {
    "message": "[Исключение: {PH1}]"
  },
  "ui/legacy/components/object_ui/ObjectPropertiesSection.ts | expandRecursively": {
    "message": "Рекурсивное расширение"
  },
  "ui/legacy/components/object_ui/ObjectPropertiesSection.ts | invokePropertyGetter": {
    "message": "Вызвать геттер свойства"
  },
  "ui/legacy/components/object_ui/ObjectPropertiesSection.ts | longTextWasTruncatedS": {
    "message": "Длинный текст обрезан ({PH1})."
  },
  "ui/legacy/components/object_ui/ObjectPropertiesSection.ts | noProperties": {
    "message": "Нет свойств"
  },
  "ui/legacy/components/object_ui/ObjectPropertiesSection.ts | revealInMemoryInpector": {
    "message": "Открыть на панели \"Инспектор памяти\""
  },
  "ui/legacy/components/object_ui/ObjectPropertiesSection.ts | showAllD": {
    "message": "Показать все {PH1}"
  },
  "ui/legacy/components/object_ui/ObjectPropertiesSection.ts | showMoreS": {
    "message": "Показать ещё ({PH1})"
  },
  "ui/legacy/components/object_ui/ObjectPropertiesSection.ts | stringIsTooLargeToEdit": {
    "message": "<слишком большая строка для редактирования>"
  },
  "ui/legacy/components/object_ui/ObjectPropertiesSection.ts | unknown": {
    "message": "неизвестно"
  },
  "ui/legacy/components/object_ui/ObjectPropertiesSection.ts | valueNotAccessibleToTheDebugger": {
    "message": "Отладчик не может получить доступ к значению"
  },
  "ui/legacy/components/object_ui/ObjectPropertiesSection.ts | valueUnavailable": {
    "message": "<значение недоступно>"
  },
  "ui/legacy/components/object_ui/RemoteObjectPreviewFormatter.ts | empty": {
    "message": "пусто"
  },
  "ui/legacy/components/object_ui/RemoteObjectPreviewFormatter.ts | emptyD": {
    "message": "пусто × {PH1}"
  },
  "ui/legacy/components/object_ui/RemoteObjectPreviewFormatter.ts | thePropertyIsComputedWithAGetter": {
    "message": "Свойство вычисляется с помощью геттера"
  },
  "ui/legacy/components/perf_ui/FilmStripView.ts | doubleclickToZoomImageClickTo": {
    "message": "Чтобы увеличить изображение, нажмите дважды. Нажмите, чтобы посмотреть предыдущие запросы."
  },
  "ui/legacy/components/perf_ui/FilmStripView.ts | nextFrame": {
    "message": "Следующий фрейм"
  },
  "ui/legacy/components/perf_ui/FilmStripView.ts | previousFrame": {
    "message": "Предыдущий кадр"
  },
  "ui/legacy/components/perf_ui/FilmStripView.ts | screenshot": {
    "message": "Скриншоты"
  },
  "ui/legacy/components/perf_ui/FilmStripView.ts | screenshotForSSelectToView": {
    "message": "Скриншот для {PH1}: выберите, чтобы посмотреть предыдущие запросы."
  },
  "ui/legacy/components/perf_ui/FlameChart.ts | flameChart": {
    "message": "Флейм-граф"
  },
  "ui/legacy/components/perf_ui/FlameChart.ts | hideChildren": {
    "message": "Скрыть дочерние элементы"
  },
  "ui/legacy/components/perf_ui/FlameChart.ts | hideFunction": {
    "message": "Скрыть функцию"
  },
  "ui/legacy/components/perf_ui/FlameChart.ts | hideRepeatingChildren": {
    "message": "Скрыть повторяющиеся дочерние элементы"
  },
  "ui/legacy/components/perf_ui/FlameChart.ts | resetTrace": {
    "message": "Сбросить трассировку"
  },
  "ui/legacy/components/perf_ui/FlameChart.ts | sCollapsed": {
    "message": "Группа \"{PH1}\" свернута"
  },
  "ui/legacy/components/perf_ui/FlameChart.ts | sExpanded": {
    "message": "Группа \"{PH1}\" развернута"
  },
  "ui/legacy/components/perf_ui/FlameChart.ts | sHovered": {
    "message": "Указатель наведен на группу элементов \"{PH1}\""
  },
  "ui/legacy/components/perf_ui/FlameChart.ts | sSelected": {
    "message": "Выбрано: {PH1}"
  },
  "ui/legacy/components/perf_ui/NetworkPriorities.ts | high": {
    "message": "Высокий"
  },
  "ui/legacy/components/perf_ui/NetworkPriorities.ts | highest": {
    "message": "Самый высокий"
  },
  "ui/legacy/components/perf_ui/NetworkPriorities.ts | low": {
    "message": "Низкий"
  },
  "ui/legacy/components/perf_ui/NetworkPriorities.ts | lowest": {
    "message": "Самый низкий"
  },
  "ui/legacy/components/perf_ui/NetworkPriorities.ts | medium": {
    "message": "Средний"
  },
  "ui/legacy/components/perf_ui/OverviewGrid.ts | leftResizer": {
    "message": "Изменение размера левого окна"
  },
  "ui/legacy/components/perf_ui/OverviewGrid.ts | overviewGridWindow": {
    "message": "Обзор окна сетки"
  },
  "ui/legacy/components/perf_ui/OverviewGrid.ts | rightResizer": {
    "message": "Изменение размера правого окна"
  },
  "ui/legacy/components/perf_ui/PieChart.ts | total": {
    "message": "Всего"
  },
  "ui/legacy/components/perf_ui/perf_ui-meta.ts | collectGarbage": {
    "message": "Собрать мусор"
  },
  "ui/legacy/components/perf_ui/perf_ui-meta.ts | flamechartMouseWheelAction": {
    "message": "Действие колеса мыши для флейм-графа:"
  },
  "ui/legacy/components/perf_ui/perf_ui-meta.ts | hideLiveMemoryAllocation": {
    "message": "Скрыть пояснения по распределению памяти в режиме реального времени"
  },
  "ui/legacy/components/perf_ui/perf_ui-meta.ts | liveMemoryAllocationAnnotations": {
    "message": "Пояснения по распределению памяти в режиме реального времени"
  },
  "ui/legacy/components/perf_ui/perf_ui-meta.ts | scroll": {
    "message": "Прокрутка"
  },
  "ui/legacy/components/perf_ui/perf_ui-meta.ts | showLiveMemoryAllocation": {
    "message": "Показывать пояснения по распределению памяти в режиме реального времени"
  },
  "ui/legacy/components/perf_ui/perf_ui-meta.ts | zoom": {
    "message": "Масштаб"
  },
  "ui/legacy/components/quick_open/CommandMenu.ts | command": {
    "message": "Команда"
  },
  "ui/legacy/components/quick_open/CommandMenu.ts | deprecated": {
    "message": "– больше не поддерживается"
  },
  "ui/legacy/components/quick_open/CommandMenu.ts | noCommandsFound": {
    "message": "Команды не найдены."
  },
  "ui/legacy/components/quick_open/CommandMenu.ts | oneOrMoreSettingsHaveChanged": {
    "message": "Чтобы изменения настроек вступили в силу, перезапустите инструменты разработчика."
  },
  "ui/legacy/components/quick_open/CommandMenu.ts | run": {
    "message": "Запустить"
  },
  "ui/legacy/components/quick_open/FilteredListWidget.ts | noResultsFound": {
    "message": "Ничего не найдено."
  },
  "ui/legacy/components/quick_open/FilteredListWidget.ts | quickOpen": {
    "message": "Быстрое открытие"
  },
  "ui/legacy/components/quick_open/FilteredListWidget.ts | quickOpenPrompt": {
    "message": "Быстрый доступ к текстовому полю"
  },
  "ui/legacy/components/quick_open/FilteredListWidget.ts | sItemSOfS": {
    "message": "{PH1}, элемент {PH2} из {PH3}"
  },
  "ui/legacy/components/quick_open/QuickOpen.ts | typeToSeeAvailableCommands": {
    "message": "Чтобы увидеть доступные команды, введите знак вопроса (?)."
  },
  "ui/legacy/components/quick_open/quick_open-meta.ts | openFile": {
    "message": "Открыть файл"
  },
  "ui/legacy/components/quick_open/quick_open-meta.ts | runCommand": {
    "message": "Выполнить команду"
  },
  "ui/legacy/components/source_frame/FontView.ts | font": {
    "message": "Шрифт"
  },
  "ui/legacy/components/source_frame/FontView.ts | previewOfFontFromS": {
    "message": "Предварительный просмотр шрифта с сайта {PH1}"
  },
  "ui/legacy/components/source_frame/ImageView.ts | copyImageAsDataUri": {
    "message": "Копировать изображение как URI данных"
  },
  "ui/legacy/components/source_frame/ImageView.ts | copyImageUrl": {
    "message": "Копировать URL изображения"
  },
  "ui/legacy/components/source_frame/ImageView.ts | dD": {
    "message": "{PH1} × {PH2}"
  },
  "ui/legacy/components/source_frame/ImageView.ts | download": {
    "message": "Без названия"
  },
  "ui/legacy/components/source_frame/ImageView.ts | dropImageFileHere": {
    "message": "Перетащите графический файл сюда"
  },
  "ui/legacy/components/source_frame/ImageView.ts | image": {
    "message": "Изображение"
  },
  "ui/legacy/components/source_frame/ImageView.ts | imageFromS": {
    "message": "Изображение с сайта {PH1}"
  },
  "ui/legacy/components/source_frame/ImageView.ts | openImageInNewTab": {
    "message": "Открыть изображение в новой вкладке"
  },
  "ui/legacy/components/source_frame/ImageView.ts | saveImageAs": {
    "message": "Сохранить изображение как…"
  },
  "ui/legacy/components/source_frame/JSONView.ts | find": {
    "message": "Найти"
  },
  "ui/legacy/components/source_frame/PreviewFactory.ts | nothingToPreview": {
    "message": "Нет объектов для просмотра"
  },
  "ui/legacy/components/source_frame/ResourceSourceFrame.ts | find": {
    "message": "Найти"
  },
  "ui/legacy/components/source_frame/SourceFrame.ts | allow": {
    "message": "Разрешить"
  },
  "ui/legacy/components/source_frame/SourceFrame.ts | allowPasting": {
    "message": "разрешить вставку"
  },
  "ui/legacy/components/source_frame/SourceFrame.ts | bytecodePositionXs": {
    "message": "Позиция байт-кода: 0x{PH1}"
  },
  "ui/legacy/components/source_frame/SourceFrame.ts | cancel": {
    "message": "Отмена"
  },
  "ui/legacy/components/source_frame/SourceFrame.ts | dCharactersSelected": {
    "message": "Выбрано символов: {PH1}"
  },
  "ui/legacy/components/source_frame/SourceFrame.ts | dLinesDCharactersSelected": {
    "message": "Выбрано строк: {PH1}, символов: {PH2}"
  },
  "ui/legacy/components/source_frame/SourceFrame.ts | dSelectionRegions": {
    "message": "Области выбора: {PH1}"
  },
  "ui/legacy/components/source_frame/SourceFrame.ts | doNotPaste": {
    "message": "Не вставляйте в консоль инструментов разработчика код, который вы не понимаете или не проверяли. Так злоумышленники могут украсть у вас данные или получить контроль над вашим компьютером. Чтобы разрешить вставку, введите ''{PH1}'' ниже."
  },
  "ui/legacy/components/source_frame/SourceFrame.ts | doYouTrustThisCode": {
    "message": "Вы доверяете этому коду?"
  },
  "ui/legacy/components/source_frame/SourceFrame.ts | lineSColumnS": {
    "message": "Строка {PH1}, столбец {PH2}"
  },
  "ui/legacy/components/source_frame/SourceFrame.ts | loading": {
    "message": "Загрузка…"
  },
  "ui/legacy/components/source_frame/SourceFrame.ts | prettyPrint": {
    "message": "Распечатать в удобном формате"
  },
  "ui/legacy/components/source_frame/SourceFrame.ts | source": {
    "message": "Источник"
  },
  "ui/legacy/components/source_frame/SourceFrame.ts | typeAllowPasting": {
    "message": "Введите текст \"{PH1}\""
  },
  "ui/legacy/components/source_frame/XMLView.ts | find": {
    "message": "Найти"
  },
  "ui/legacy/components/source_frame/source_frame-meta.ts | Spaces": {
    "message": "2 пробела"
  },
  "ui/legacy/components/source_frame/source_frame-meta.ts | defaultIndentation": {
    "message": "Отступ по умолчанию:"
  },
  "ui/legacy/components/source_frame/source_frame-meta.ts | eSpaces": {
    "message": "8 пробелов"
  },
  "ui/legacy/components/source_frame/source_frame-meta.ts | fSpaces": {
    "message": "4 пробела"
  },
  "ui/legacy/components/source_frame/source_frame-meta.ts | setIndentationToESpaces": {
    "message": "Установить отступ в 8 пробелов"
  },
  "ui/legacy/components/source_frame/source_frame-meta.ts | setIndentationToFSpaces": {
    "message": "Установить отступ в 4 пробела"
  },
  "ui/legacy/components/source_frame/source_frame-meta.ts | setIndentationToSpaces": {
    "message": "Установить отступ в 2 пробела"
  },
  "ui/legacy/components/source_frame/source_frame-meta.ts | setIndentationToTabCharacter": {
    "message": "Установка отступа для символа табуляции"
  },
  "ui/legacy/components/source_frame/source_frame-meta.ts | tabCharacter": {
    "message": "Символ табуляции"
  },
  "ui/legacy/components/utils/ImagePreview.ts | currentSource": {
    "message": "Текущий источник:"
  },
  "ui/legacy/components/utils/ImagePreview.ts | fileSize": {
    "message": "Размер файла:"
  },
  "ui/legacy/components/utils/ImagePreview.ts | imageFromS": {
    "message": "Изображение с сайта {PH1}"
  },
  "ui/legacy/components/utils/ImagePreview.ts | intrinsicAspectRatio": {
    "message": "Встроенное соотношение сторон:"
  },
  "ui/legacy/components/utils/ImagePreview.ts | intrinsicSize": {
    "message": "Внутренний размер:"
  },
  "ui/legacy/components/utils/ImagePreview.ts | renderedAspectRatio": {
    "message": "Соотношение сторон после обработки:"
  },
  "ui/legacy/components/utils/ImagePreview.ts | renderedSize": {
    "message": "Размер после обработки:"
  },
  "ui/legacy/components/utils/ImagePreview.ts | unknownSource": {
    "message": "неизвестный источник"
  },
  "ui/legacy/components/utils/JSPresentationUtils.ts | addToIgnore": {
    "message": "Добавить скрипт в список игнорируемых"
  },
  "ui/legacy/components/utils/JSPresentationUtils.ts | removeFromIgnore": {
    "message": "Удалить из списка игнорируемых"
  },
  "ui/legacy/components/utils/JSPresentationUtils.ts | showLess": {
    "message": "Свернуть"
  },
  "ui/legacy/components/utils/JSPresentationUtils.ts | showSMoreFrames": {
    "message": "{n,plural, =1{Показать ещё # фрейм}one{Показать ещё # фрейм}few{Показать ещё # фрейма}many{Показать ещё # фреймов}other{Показать ещё # фрейма}}"
  },
  "ui/legacy/components/utils/JSPresentationUtils.ts | unknownSource": {
    "message": "неизвестно"
  },
  "ui/legacy/components/utils/Linkifier.ts | auto": {
    "message": "авто"
  },
  "ui/legacy/components/utils/Linkifier.ts | linkHandling": {
    "message": "Обработка ссылки:"
  },
  "ui/legacy/components/utils/Linkifier.ts | openUsingS": {
    "message": "Открыть с помощью \"{PH1}\""
  },
  "ui/legacy/components/utils/Linkifier.ts | reveal": {
    "message": "Показать"
  },
  "ui/legacy/components/utils/Linkifier.ts | revealInS": {
    "message": "Показать здесь: {PH1}"
  },
  "ui/legacy/components/utils/Linkifier.ts | unknown": {
    "message": "(неизвестно)"
  },
  "ui/legacy/components/utils/TargetDetachedDialog.ts | websocketDisconnected": {
    "message": "Нет подключения к WebSocket"
  }
}
