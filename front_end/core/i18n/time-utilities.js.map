{"version":3,"file":"time-utilities.js","sourceRoot":"","sources":["../../../../../../front_end/core/i18n/time-utilities.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2021 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/**\n * @file Uses Intl.NumberFormat.\n * @see go/cpq:i18n-units-design\n */\n\nimport * as Platform from '../platform/platform.js';\n\nimport {defineFormatter, type NumberFormatter} from './NumberFormatter.js';\n\nconst narrowMillisecondsInteger = defineFormatter({\n  style: 'unit',\n  unit: 'millisecond',\n  unitDisplay: 'narrow',\n  minimumFractionDigits: 0,\n  maximumFractionDigits: 0,\n});\n\nconst longMilliseconds = defineFormatter({\n  style: 'unit',\n  unit: 'millisecond',\n  unitDisplay: 'long',\n  minimumFractionDigits: 0,\n  maximumFractionDigits: 0,\n});\n\nconst narrowMicrosecondsInteger = defineFormatter({\n  style: 'unit',\n  unit: 'microsecond',\n  unitDisplay: 'narrow',\n  minimumFractionDigits: 0,\n  maximumFractionDigits: 0,\n});\n\nconst narrowMillisecondsDecimal = defineFormatter({\n  style: 'unit',\n  unit: 'millisecond',\n  unitDisplay: 'narrow',\n  minimumFractionDigits: 2,\n  maximumFractionDigits: 2,\n});\n\nconst narrowSecondsDecimal = defineFormatter({\n  style: 'unit',\n  unit: 'second',\n  unitDisplay: 'narrow',\n  minimumFractionDigits: 2,\n  maximumFractionDigits: 2,\n});\n\nconst shortMinutesDecimal = defineFormatter({\n  style: 'unit',\n  unit: 'minute',\n  unitDisplay: 'short',\n  minimumFractionDigits: 0,\n  maximumFractionDigits: 1,\n});\n\nconst shortHoursDecimal = defineFormatter({\n  style: 'unit',\n  unit: 'hour',\n  unitDisplay: 'short',\n  minimumFractionDigits: 0,\n  maximumFractionDigits: 1,\n});\n\nconst longDaysDecimal = defineFormatter({\n  style: 'unit',\n  unit: 'day',\n  unitDisplay: 'long',\n  minimumFractionDigits: 0,\n  maximumFractionDigits: 1,\n});\n\nexport function formatMicroSecondsTime(time: Platform.Timing.MicroSeconds): string {\n  return millisToString(Platform.Timing.microSecondsToMilliSeconds(time), true);\n}\n\nexport function formatMicroSecondsAsSeconds(time: Platform.Timing.MicroSeconds): string {\n  const milliseconds = Platform.Timing.microSecondsToMilliSeconds(time);\n  const seconds = Platform.Timing.milliSecondsToSeconds(milliseconds);\n  return narrowSecondsDecimal.format(seconds);\n}\n\nexport function formatMicroSecondsAsMillisFixed(time: Platform.Timing.MicroSeconds): string {\n  const milliseconds = Platform.Timing.microSecondsToMilliSeconds(time);\n  return narrowMillisecondsInteger.format(milliseconds);\n}\n\nexport function formatMicroSecondsAsMillisFixedExpanded(time: Platform.Timing.MicroSeconds): string {\n  const milliseconds = Platform.Timing.microSecondsToMilliSeconds(time);\n  return longMilliseconds.format(milliseconds);\n}\n\n/**\n * @param higherResolution if true, the output may show as microsends or as milliseconds with a fractional component\n */\nexport function millisToString(ms: number, higherResolution?: boolean): string {\n  if (!isFinite(ms)) {\n    return '-';\n  }\n\n  if (higherResolution && ms < 0.1) {\n    return narrowMicrosecondsInteger.format(ms * 1000);\n  }\n  if (higherResolution && ms < 1000) {\n    return narrowMillisecondsDecimal.format(ms);\n  }\n  if (ms < 1000) {\n    return narrowMillisecondsInteger.format(ms);\n  }\n\n  const seconds = ms / 1000;\n  if (seconds < 60) {\n    return narrowSecondsDecimal.format(seconds);\n  }\n\n  const minutes = seconds / 60;\n  if (minutes < 60) {\n    return shortMinutesDecimal.format(minutes);\n  }\n\n  const hours = minutes / 60;\n  if (hours < 24) {\n    return shortHoursDecimal.format(hours);\n  }\n\n  const days = hours / 24;\n  return longDaysDecimal.format(days);\n}\n\nconst preciseMillisToStringFormattersCache = new Map<number, NumberFormatter>();\n\nexport function preciseMillisToString(ms: number, precision = 0, separator?: string): string {\n  let formatter = preciseMillisToStringFormattersCache.get(precision);\n  if (!formatter) {\n    formatter = defineFormatter({\n      style: 'unit',\n      unit: 'millisecond',\n      unitDisplay: 'narrow',\n      minimumFractionDigits: precision,\n      maximumFractionDigits: precision,\n    });\n    preciseMillisToStringFormattersCache.set(precision, formatter);\n  }\n  return formatter.format(ms, separator);\n}\n\nconst preciseSecondsToStringFormattersCache = new Map<number, NumberFormatter>();\n\nexport function preciseSecondsToString(ms: number, precision = 0): string {\n  let formatter = preciseSecondsToStringFormattersCache.get(precision);\n  if (!formatter) {\n    formatter = defineFormatter({\n      style: 'unit',\n      unit: 'second',\n      unitDisplay: 'narrow',\n      minimumFractionDigits: precision,\n      maximumFractionDigits: precision,\n    });\n    preciseSecondsToStringFormattersCache.set(precision, formatter);\n  }\n  return formatter.format(ms);\n}\n\nexport function secondsToString(seconds: number, higherResolution?: boolean): string {\n  if (!isFinite(seconds)) {\n    return '-';\n  }\n  return millisToString(seconds * 1000, higherResolution);\n}\n"]}