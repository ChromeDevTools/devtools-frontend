{
  "version": 3,
  "sources": ["../../../../../../front_end/core/platform/UserVisibleError.ts"],
  "sourcesContent": ["// Copyright 2021 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type {LocalizedString} from './UIString.js';\n\n/**\n * Represents an error that might become visible to the user. Where errors\n * might be surfaced to the user (such as by displaying the message to the\n * console), this class should be used to enforce that the message is\n * localized on the way in.\n */\nexport class UserVisibleError extends Error {\n  override readonly message: LocalizedString;\n\n  constructor(message: LocalizedString) {\n    super(message);\n    this.message = message;\n  }\n}\n\nexport function isUserVisibleError(error: unknown): error is UserVisibleError {\n  if (typeof error === 'object' && error !== null) {\n    return error instanceof UserVisibleError;\n  }\n\n  return false;\n}\n"],
  "mappings": ";AAYO,aAAM,yBAAyB,MAAM;AAAA,EACxB;AAAA,EAElB,YAAY,SAA0B;AACpC,UAAM,OAAO;AACb,SAAK,UAAU;AAAA,EACjB;AACF;AAEO,gBAAS,mBAAmB,OAA2C;AAC5E,MAAI,OAAO,UAAU,YAAY,UAAU,MAAM;AAC/C,WAAO,iBAAiB;AAAA,EAC1B;AAEA,SAAO;AACT;",
  "names": []
}
