{"version":3,"file":"ConnectionTransport.js","sourceRoot":"","sources":["../../../../../../front_end/core/protocol_client/ConnectionTransport.ts"],"names":[],"mappings":"AAAA,sCAAsC;AACtC,yEAAyE;AACzE,6BAA6B;AAE7B,IAAI,iBAA4C,CAAC;AAEjD,MAAM,OAAgB,mBAAmB;IAYvC,MAAM,CAAC,UAAU,CAAC,OAAkC;QAClD,iBAAiB,GAAG,OAAO,CAAC;IAC9B,CAAC;IAED,MAAM,CAAC,UAAU;QACf,OAAO,iBAAiB,CAAC;IAC3B,CAAC;CACF","sourcesContent":["// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nlet connectionFactory: () => ConnectionTransport;\n\nexport abstract class ConnectionTransport {\n  declare onMessage: ((arg0: Object) => void)|null;\n\n  // on message from browser\n  abstract setOnMessage(onMessage: (arg0: Object|string) => void): void;\n  abstract setOnDisconnect(onDisconnect: (arg0: string) => void): void;\n\n  // send raw CDP message to browser\n  abstract sendRawMessage(message: string): void;\n\n  abstract disconnect(): Promise<void>;\n\n  static setFactory(factory: () => ConnectionTransport): void {\n    connectionFactory = factory;\n  }\n\n  static getFactory(): () => ConnectionTransport {\n    return connectionFactory;\n  }\n}\n"]}