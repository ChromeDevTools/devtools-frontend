{
  "version": 3,
  "sources": ["../../../../../../front_end/core/root/Runtime.ts"],
  "sourcesContent": ["// Copyright 2020 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Platform from '../platform/platform.js';\n\nlet runtimePlatform = '';\n\nlet runtimeInstance: Runtime|undefined;\nlet isNode: boolean|undefined;\nlet isTraceAppEntry: boolean|undefined;\n\n/**\n * Returns the base URL (similar to `<base>`).\n * Used to resolve the relative URLs of any additional DevTools files (locale strings, etc) needed.\n * See: https://cs.chromium.org/remoteBase+f:devtools_window\n */\nexport function getRemoteBase(location: string = self.location.toString()): {\n  base: string,\n  version: string,\n}|null {\n  const url = new URL(location);\n  const remoteBase = url.searchParams.get('remoteBase');\n  if (!remoteBase) {\n    return null;\n  }\n\n  const version = /\\/serve_file\\/(@[0-9a-zA-Z]+)\\/?$/.exec(remoteBase);\n  if (!version) {\n    return null;\n  }\n\n  return {base: `devtools://devtools/remote/serve_file/${version[1]}/`, version: version[1]};\n}\n\nexport function getPathName(): string {\n  return window.location.pathname;\n}\n\nexport function isNodeEntry(pathname: string): boolean {\n  const nodeEntryPoints = ['node_app', 'js_app'];\n  return nodeEntryPoints.some(component => pathname.includes(component));\n}\n\nexport const getChromeVersion = (): string => {\n  const chromeRegex = /(?:^|\\W)(?:Chrome|HeadlessChrome)\\/(\\S+)/;\n  const chromeMatch = navigator.userAgent.match(chromeRegex);\n  if (chromeMatch && chromeMatch.length > 1) {\n    return chromeMatch[1];\n  }\n  return '';\n};\n\nexport class Runtime {\n  private constructor() {\n  }\n\n  static instance(opts: {\n    forceNew: boolean|null,\n  }|undefined = {forceNew: null}): Runtime {\n    const {forceNew} = opts;\n    if (!runtimeInstance || forceNew) {\n      runtimeInstance = new Runtime();\n    }\n\n    return runtimeInstance;\n  }\n\n  static removeInstance(): void {\n    runtimeInstance = undefined;\n  }\n\n  static queryParamsObject: URLSearchParams;\n\n  static getSearchParams(): URLSearchParams {\n    if (!Runtime.queryParamsObject) {\n      Runtime.queryParamsObject = new URLSearchParams(location.search);\n    }\n    return Runtime.queryParamsObject;\n  }\n\n  static queryParam(name: string): string|null {\n    return Runtime.getSearchParams().get(name);\n  }\n\n  static setQueryParamForTesting(name: string, value: string): void {\n    Runtime.getSearchParams().set(name, value);\n  }\n\n  static isNode(): boolean {\n    if (isNode === undefined) {\n      isNode = isNodeEntry(getPathName());\n    }\n    return isNode;\n  }\n\n  /**\n   * Returns true if viewing the slimmed-down devtools meant for just viewing a\n   * performance trace, e.g. devtools://devtools/bundled/trace_app.html?traceURL=http://...\n   */\n  static isTraceApp(): boolean {\n    if (isTraceAppEntry === undefined) {\n      isTraceAppEntry = getPathName().includes('trace_app');\n    }\n    return isTraceAppEntry;\n  }\n\n  static setPlatform(platform: string): void {\n    runtimePlatform = platform;\n  }\n\n  static platform(): string {\n    return runtimePlatform;\n  }\n\n  static isDescriptorEnabled(descriptor: {experiment?: string|null, condition?: Condition}): boolean {\n    const {experiment} = descriptor;\n    if (experiment === '*') {\n      return true;\n    }\n    if (experiment && experiment.startsWith('!') && experiments.isEnabled(experiment.substring(1))) {\n      return false;\n    }\n    if (experiment && !experiment.startsWith('!') && !experiments.isEnabled(experiment)) {\n      return false;\n    }\n    const {condition} = descriptor;\n    return condition ? condition(hostConfig) : true;\n  }\n\n  loadLegacyModule(modulePath: string): Promise<unknown> {\n    // eslint-disable-next-line no-console\n    console.log('Loading legacy module: ' + modulePath);\n    const importPath =\n        `../../${modulePath}`;  // Extracted as a variable so esbuild doesn't attempt to bundle all the things.\n    return import(importPath).then(m => {\n      // eslint-disable-next-line no-console\n      console.log('Loaded legacy module: ' + modulePath);\n      return m;\n    });\n  }\n}\n\nexport interface Option {\n  title: string;\n  value: string|boolean;\n  raw?: boolean;\n  text?: string;\n}\n\nexport class ExperimentsSupport {\n  #experiments: Experiment[] = [];\n  readonly #experimentNames = new Set<string>();\n  readonly #enabledTransiently = new Set<string>();\n  readonly #enabledByDefault = new Set<string>();\n  readonly #serverEnabled = new Set<string>();\n  readonly #storage = new ExperimentStorage();\n\n  allConfigurableExperiments(): Experiment[] {\n    const result = [];\n    for (const experiment of this.#experiments) {\n      if (!this.#enabledTransiently.has(experiment.name)) {\n        result.push(experiment);\n      }\n    }\n    return result;\n  }\n\n  register(\n      experimentName: string, experimentTitle: string, unstable?: boolean, docLink?: string,\n      feedbackLink?: string): void {\n    if (this.#experimentNames.has(experimentName)) {\n      throw new Error(`Duplicate registration of experiment '${experimentName}'`);\n    }\n    this.#experimentNames.add(experimentName);\n    this.#experiments.push(new Experiment(\n        this, experimentName, experimentTitle, Boolean(unstable),\n        docLink as Platform.DevToolsPath.UrlString ?? Platform.DevToolsPath.EmptyUrlString,\n        feedbackLink as Platform.DevToolsPath.UrlString ?? Platform.DevToolsPath.EmptyUrlString));\n  }\n\n  isEnabled(experimentName: string): boolean {\n    this.checkExperiment(experimentName);\n    // Check for explicitly disabled #experiments first - the code could call setEnable(false) on the experiment enabled\n    // by default and we should respect that.\n    if (this.#storage.get(experimentName) === false) {\n      return false;\n    }\n    if (this.#enabledTransiently.has(experimentName) || this.#enabledByDefault.has(experimentName)) {\n      return true;\n    }\n    if (this.#serverEnabled.has(experimentName)) {\n      return true;\n    }\n\n    return Boolean(this.#storage.get(experimentName));\n  }\n\n  setEnabled(experimentName: string, enabled: boolean): void {\n    this.checkExperiment(experimentName);\n    this.#storage.set(experimentName, enabled);\n  }\n\n  enableExperimentsTransiently(experimentNames: string[]): void {\n    for (const experimentName of experimentNames) {\n      this.checkExperiment(experimentName);\n      this.#enabledTransiently.add(experimentName);\n    }\n  }\n\n  enableExperimentsByDefault(experimentNames: string[]): void {\n    for (const experimentName of experimentNames) {\n      this.checkExperiment(experimentName);\n      this.#enabledByDefault.add(experimentName);\n    }\n  }\n\n  setServerEnabledExperiments(experimentNames: string[]): void {\n    for (const experiment of experimentNames) {\n      this.checkExperiment(experiment);\n      this.#serverEnabled.add(experiment);\n    }\n  }\n\n  enableForTest(experimentName: string): void {\n    this.checkExperiment(experimentName);\n    this.#enabledTransiently.add(experimentName);\n  }\n\n  disableForTest(experimentName: string): void {\n    this.checkExperiment(experimentName);\n    this.#enabledTransiently.delete(experimentName);\n  }\n\n  clearForTest(): void {\n    this.#experiments = [];\n    this.#experimentNames.clear();\n    this.#enabledTransiently.clear();\n    this.#enabledByDefault.clear();\n    this.#serverEnabled.clear();\n  }\n\n  cleanUpStaleExperiments(): void {\n    this.#storage.cleanUpStaleExperiments(this.#experimentNames);\n  }\n\n  private checkExperiment(experimentName: string): void {\n    if (!this.#experimentNames.has(experimentName)) {\n      throw new Error(`Unknown experiment '${experimentName}'`);\n    }\n  }\n}\n\n/** Manages the 'experiments' dictionary in self.localStorage */\nclass ExperimentStorage {\n  readonly #experiments: Record<string, boolean|undefined> = {};\n\n  constructor() {\n    try {\n      const storedExperiments = self.localStorage?.getItem('experiments');\n      if (storedExperiments) {\n        this.#experiments = JSON.parse(storedExperiments);\n      }\n    } catch {\n      console.error('Failed to parse localStorage[\\'experiments\\']');\n    }\n  }\n\n  /**\n   * Experiments are stored with a tri-state:\n   *   - true: Explicitly enabled.\n   *   - false: Explicitly disabled.\n   *   - undefined: Disabled.\n   */\n  get(experimentName: string): boolean|undefined {\n    return this.#experiments[experimentName];\n  }\n\n  set(experimentName: string, enabled: boolean): void {\n    this.#experiments[experimentName] = enabled;\n    this.#syncToLocalStorage();\n  }\n\n  cleanUpStaleExperiments(validExperiments: Set<string>): void {\n    for (const [key] of Object.entries(this.#experiments)) {\n      if (!validExperiments.has(key)) {\n        delete this.#experiments[key];\n      }\n    }\n    this.#syncToLocalStorage();\n  }\n\n  #syncToLocalStorage(): void {\n    self.localStorage?.setItem('experiments', JSON.stringify(this.#experiments));\n  }\n}\n\nexport class Experiment {\n  name: string;\n  title: string;\n  unstable: boolean;\n  docLink?: Platform.DevToolsPath.UrlString;\n  readonly feedbackLink?: Platform.DevToolsPath.UrlString;\n  readonly #experiments: ExperimentsSupport;\n  constructor(\n      experiments: ExperimentsSupport, name: string, title: string, unstable: boolean,\n      docLink: Platform.DevToolsPath.UrlString, feedbackLink: Platform.DevToolsPath.UrlString) {\n    this.name = name;\n    this.title = title;\n    this.unstable = unstable;\n    this.docLink = docLink;\n    this.feedbackLink = feedbackLink;\n    this.#experiments = experiments;\n  }\n\n  isEnabled(): boolean {\n    return this.#experiments.isEnabled(this.name);\n  }\n\n  setEnabled(enabled: boolean): void {\n    this.#experiments.setEnabled(this.name, enabled);\n  }\n}\n\n/** This must be constructed after the query parameters have been parsed. **/\nexport const experiments = new ExperimentsSupport();\n\n/**\n * @deprecated Experiments should not be used anymore, instead use base::Feature.\n * See docs/contributing/settings-experiments-features.md\n */\nexport const enum ExperimentName {\n  CAPTURE_NODE_CREATION_STACKS = 'capture-node-creation-stacks',\n  CSS_OVERVIEW = 'css-overview',\n  LIVE_HEAP_PROFILE = 'live-heap-profile',\n  ALL = '*',\n  PROTOCOL_MONITOR = 'protocol-monitor',\n  FULL_ACCESSIBILITY_TREE = 'full-accessibility-tree',\n  HEADER_OVERRIDES = 'header-overrides',\n  INSTRUMENTATION_BREAKPOINTS = 'instrumentation-breakpoints',\n  AUTHORED_DEPLOYED_GROUPING = 'authored-deployed-grouping',\n  JUST_MY_CODE = 'just-my-code',\n  USE_SOURCE_MAP_SCOPES = 'use-source-map-scopes',\n  TIMELINE_SHOW_POST_MESSAGE_EVENTS = 'timeline-show-postmessage-events',\n  TIMELINE_DEBUG_MODE = 'timeline-debug-mode',\n  // Adding or removing an entry from this enum?\n  // You will need to update:\n  // 1. REGISTERED_EXPERIMENTS in EnvironmentHelpers.ts (to create this experiment in the test env)\n  // 2. DevToolsExperiments enum in host/UserMetrics.ts\n}\n\nexport enum GenAiEnterprisePolicyValue {\n  ALLOW = 0,\n  ALLOW_WITHOUT_LOGGING = 1,\n  DISABLE = 2,\n}\n\nexport interface AidaAvailability {\n  enabled: boolean;\n  blockedByAge: boolean;\n  blockedByEnterprisePolicy: boolean;\n  blockedByGeo: boolean;\n  disallowLogging: boolean;\n  enterprisePolicyValue: number;\n}\n\ntype Channel = 'stable'|'beta'|'dev'|'canary';\n\nexport interface HostConfigConsoleInsights {\n  modelId: string;\n  temperature: number;\n  enabled: boolean;\n}\n\nexport enum HostConfigFreestylerExecutionMode {\n  ALL_SCRIPTS = 'ALL_SCRIPTS',\n  SIDE_EFFECT_FREE_SCRIPTS_ONLY = 'SIDE_EFFECT_FREE_SCRIPTS_ONLY',\n  NO_SCRIPTS = 'NO_SCRIPTS',\n}\n\nexport interface HostConfigFreestyler {\n  modelId: string;\n  temperature: number;\n  enabled: boolean;\n  userTier: string;\n  executionMode?: HostConfigFreestylerExecutionMode;\n  patching?: boolean;\n  multimodal?: boolean;\n  multimodalUploadInput?: boolean;\n  functionCalling?: boolean;\n  featureName?: string;\n}\n\nexport interface HostConfigAiAssistanceNetworkAgent {\n  modelId: string;\n  temperature: number;\n  enabled: boolean;\n  userTier: string;\n  featureName?: string;\n}\n\nexport interface HostConfigAiAssistancePerformanceAgent {\n  modelId: string;\n  temperature: number;\n  enabled: boolean;\n  userTier: string;\n  featureName?: string;\n}\n\nexport interface HostConfigAiAssistanceFileAgent {\n  modelId: string;\n  temperature: number;\n  enabled: boolean;\n  userTier: string;\n  featureName?: string;\n}\n\nexport interface HostConfigAiCodeCompletion {\n  modelId: string;\n  temperature: number;\n  enabled: boolean;\n  userTier: string;\n}\n\nexport interface HostConfigDeepLinksViaExtensibilityApi {\n  enabled: boolean;\n}\n\nexport interface HostConfigVeLogging {\n  enabled: boolean;\n  testing: boolean;\n}\n\n/**\n * @see https://goo.gle/devtools-json-design\n */\nexport interface HostConfigWellKnown {\n  enabled: boolean;\n}\n\nexport interface HostConfigPrivacyUI {\n  enabled: boolean;\n}\n\nexport interface HostConfigEnableOriginBoundCookies {\n  portBindingEnabled: boolean;\n  schemeBindingEnabled: boolean;\n}\n\nexport interface HostConfigAnimationStylesInStylesTab {\n  enabled: boolean;\n}\n\nexport interface HostConfigThirdPartyCookieControls {\n  thirdPartyCookieRestrictionEnabled: boolean;\n  thirdPartyCookieMetadataEnabled: boolean;\n  thirdPartyCookieHeuristicsEnabled: boolean;\n  managedBlockThirdPartyCookies: string|boolean;\n}\n\nexport interface HostConfigIPProtection {\n  enabled: boolean;\n}\n\ninterface AiGeneratedTimelineLabels {\n  enabled: boolean;\n}\n\ninterface AllowPopoverForcing {\n  enabled: boolean;\n}\n\ninterface AiSubmenuPrompts {\n  enabled: boolean;\n  featureName?: string;\n}\n\ninterface IpProtectionInDevTools {\n  enabled: boolean;\n}\n\ninterface AiDebugWithAi {\n  enabled: boolean;\n  featureName?: string;\n}\n\ninterface GlobalAiButton {\n  enabled: boolean;\n  promotionEnabled: boolean;\n}\n\ninterface GdpProfiles {\n  enabled: boolean;\n  badgesEnabled: boolean;\n  starterBadgeEnabled: boolean;\n}\n\nexport enum GdpProfilesEnterprisePolicyValue {\n  ENABLED = 0,\n  ENABLED_WITHOUT_BADGES = 1,\n  DISABLED = 2,\n}\n\ninterface GdpProfilesAvailability {\n  // Whether GDP profiles can be enabled on this host (only possible on branded builds).\n  enabled: boolean;\n  enterprisePolicyValue: GdpProfilesEnterprisePolicyValue;\n}\n\ninterface LiveEdit {\n  enabled: boolean;\n}\n\ninterface DevToolsFlexibleLayout {\n  verticalDrawerEnabled: boolean;\n}\n\ninterface DevToolsStartingStyleDebugging {\n  enabled: boolean;\n}\n\ninterface AiPromptApi {\n  enabled: boolean;\n  allowWithoutGpu: boolean;\n}\n\ninterface DevToolsIndividualRequestThrottling {\n  enabled: boolean;\n}\n\nexport interface DevToolsEnableDurableMessages {\n  enabled: boolean;\n}\n\n/**\n * The host configuration that we expect from the DevTools back-end.\n *\n * We use `RecursivePartial` here to enforce that DevTools code is able to\n * handle `HostConfig` objects of an unexpected shape. This can happen if\n * the implementation in the Chromium backend is changed without correctly\n * updating the DevTools frontend. Or if remote debugging a different version\n * of Chrome, resulting in the local browser window and the local DevTools\n * window being of different versions, and consequently potentially having\n * differently shaped `HostConfig`s.\n *\n * @see hostConfig\n */\nexport type HostConfig = Platform.TypeScriptUtilities.RecursivePartial<{\n  aidaAvailability: AidaAvailability,\n  channel: Channel,\n  devToolsConsoleInsights: HostConfigConsoleInsights,\n  devToolsDeepLinksViaExtensibilityApi: HostConfigDeepLinksViaExtensibilityApi,\n  devToolsFreestyler: HostConfigFreestyler,\n  devToolsAiAssistanceNetworkAgent: HostConfigAiAssistanceNetworkAgent,\n  devToolsAiDebugWithAi: AiDebugWithAi,\n  devToolsAiAssistanceFileAgent: HostConfigAiAssistanceFileAgent,\n  devToolsAiAssistancePerformanceAgent: HostConfigAiAssistancePerformanceAgent,\n  devToolsAiCodeCompletion: HostConfigAiCodeCompletion,\n  devToolsVeLogging: HostConfigVeLogging,\n  devToolsWellKnown: HostConfigWellKnown,\n  devToolsPrivacyUI: HostConfigPrivacyUI,\n  devToolsIndividualRequestThrottling: DevToolsIndividualRequestThrottling,\n  devToolsIpProtectionPanelInDevTools: HostConfigIPProtection,\n  /**\n   * OffTheRecord here indicates that the user's profile is either incognito,\n   * or guest mode, rather than a \"normal\" profile.\n   */\n  isOffTheRecord: boolean,\n  devToolsEnableOriginBoundCookies: HostConfigEnableOriginBoundCookies,\n  devToolsAnimationStylesInStylesTab: HostConfigAnimationStylesInStylesTab,\n  thirdPartyCookieControls: HostConfigThirdPartyCookieControls,\n  devToolsAiGeneratedTimelineLabels: AiGeneratedTimelineLabels,\n  devToolsAllowPopoverForcing: AllowPopoverForcing,\n  devToolsAiSubmenuPrompts: AiSubmenuPrompts,\n  devToolsIpProtectionInDevTools: IpProtectionInDevTools,\n  devToolsGlobalAiButton: GlobalAiButton,\n  devToolsGdpProfiles: GdpProfiles,\n  devToolsGdpProfilesAvailability: GdpProfilesAvailability,\n  devToolsLiveEdit: LiveEdit,\n  devToolsFlexibleLayout: DevToolsFlexibleLayout,\n  devToolsStartingStyleDebugging: DevToolsStartingStyleDebugging,\n  devToolsAiPromptApi: AiPromptApi,\n  devToolsEnableDurableMessages: DevToolsEnableDurableMessages,\n}>;\n\n/**\n * The host configuration for this DevTools instance.\n *\n * This is initialized early during app startup and should not be modified\n * afterwards. In some cases it can be necessary to re-request the host\n * configuration from Chrome while DevTools is already running. In these\n * cases, the new host configuration should be reflected here, e.g.:\n *\n * ```js\n * const config = await new Promise<Root.Runtime.HostConfig>(\n *   resolve => InspectorFrontendHostInstance.getHostConfig(resolve));\n * Object.assign(Root.runtime.hostConfig, config);\n * ```\n */\nexport const hostConfig: Platform.TypeScriptUtilities.RecursiveReadonly<HostConfig> = Object.create(null);\n\n/**\n * When defining conditions make sure that objects used by the function have\n * been instantiated.\n */\nexport type Condition = (config?: HostConfig) => boolean;\n\nexport const conditions = {\n  canDock: () => Boolean(Runtime.queryParam('can_dock')),\n};\n"],
  "mappings": "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",
  "names": ["location", "experiments", "ExperimentName", "GenAiEnterprisePolicyValue", "HostConfigFreestylerExecutionMode", "GdpProfilesEnterprisePolicyValue"]
}
