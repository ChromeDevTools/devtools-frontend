# Copyright 2020 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("../../../scripts/build/ninja/devtools_entrypoint.gni")
import("../../../scripts/build/ninja/devtools_module.gni")
import("../../../third_party/typescript/typescript.gni")

devtools_module("sdk") {
  sources = [
    "AccessibilityModel.ts",
    "AutofillModel.ts",
    "CPUProfileDataModel.ts",
    "CPUProfilerModel.ts",
    "CPUThrottlingManager.ts",
    "CSSContainerQuery.ts",
    "CSSFontFace.ts",
    "CSSLayer.ts",
    "CSSMatchedStyles.ts",
    "CSSMedia.ts",
    "CSSMetadata.ts",
    "CSSModel.ts",
    "CSSProperty.ts",
    "CSSPropertyParser.ts",
    "CSSQuery.ts",
    "CSSRule.ts",
    "CSSScope.ts",
    "CSSStyleDeclaration.ts",
    "CSSStyleSheetHeader.ts",
    "CSSSupports.ts",
    "CategorizedBreakpoint.ts",
    "ChildTargetManager.ts",
    "CompilerSourceMappingContentProvider.ts",
    "Connections.ts",
    "ConsoleModel.ts",
    "ConsoleModelTypes.ts",
    "Cookie.ts",
    "CookieModel.ts",
    "CookieParser.ts",
    "DOMDebuggerModel.ts",
    "DOMModel.ts",
    "DebuggerModel.ts",
    "EmulationModel.ts",
    "EventBreakpointsModel.ts",
    "FrameAssociated.ts",
    "FrameManager.ts",
    "HeapProfilerModel.ts",
    "HttpReasonPhraseStrings.ts",
    "IOModel.ts",
    "IsolateManager.ts",
    "IssuesModel.ts",
    "LayerTreeBase.ts",
    "LogModel.ts",
    "NetworkManager.ts",
    "NetworkRequest.ts",
    "OverlayColorGenerator.ts",
    "OverlayModel.ts",
    "OverlayPersistentHighlighter.ts",
    "PageLoad.ts",
    "PageResourceLoader.ts",
    "PaintProfiler.ts",
    "PerformanceMetricsModel.ts",
    "PreloadingModel.ts",
    "ProfileTreeModel.ts",
    "RemoteObject.ts",
    "Resource.ts",
    "ResourceTreeModel.ts",
    "RuntimeModel.ts",
    "SDKModel.ts",
    "ScreenCaptureModel.ts",
    "Script.ts",
    "SecurityOriginManager.ts",
    "ServerSentEvents.ts",
    "ServerSentEventsProtocol.ts",
    "ServerTiming.ts",
    "ServiceWorkerCacheModel.ts",
    "ServiceWorkerManager.ts",
    "SourceMap.ts",
    "SourceMapManager.ts",
    "SourceMapScopes.ts",
    "StorageBucketsModel.ts",
    "StorageKeyManager.ts",
    "Target.ts",
    "TargetManager.ts",
    "WebAuthnModel.ts",
  ]

  deps = [
    "../../core/common:bundle",
    "../../core/host:bundle",
    "../../core/i18n:bundle",
    "../../core/platform:bundle",
    "../../core/protocol_client:bundle",
    "../../core/root:bundle",
    "../../generated",
    "../../generated:protocol",
    "../../models/cpu_profile:bundle",
    "../../models/text_utils:bundle",
  ]
}

devtools_entrypoint("bundle") {
  entrypoint = "sdk.ts"

  deps = [
    ":sdk",
    "../../generated",
  ]

  visibility = [ "*" ]
}

devtools_entrypoint("meta") {
  entrypoint = "sdk-meta.ts"

  deps = [
    ":bundle",
    "../../core/common:bundle",
    "../../core/i18n:bundle",
  ]

  visibility = [ "../../entrypoints/*" ]
}

ts_library("unittests") {
  testonly = true

  sources = [
    "AccessibilityModel.test.ts",
    "AutofillModel.test.ts",
    "CPUThrottlingManager.test.ts",
    "CSSContainerQuery.test.ts",
    "CSSMatchedStyles.test.ts",
    "CSSModel.test.ts",
    "CSSProperty.test.ts",
    "CSSPropertyParser.test.ts",
    "CSSStyleDeclaration.test.ts",
    "CSSStyleSheetHeader.test.ts",
    "ChildTargetManager.test.ts",
    "ConsoleModel.test.ts",
    "Cookie.test.ts",
    "CookieModel.test.ts",
    "CookieParser.test.ts",
    "DOMModel.test.ts",
    "DebuggerModel.test.ts",
    "EmulationModel.test.ts",
    "FrameManager.test.ts",
    "NetworkManager.test.ts",
    "NetworkRequest.test.ts",
    "OverlayColorGenerator.test.ts",
    "OverlayModel.test.ts",
    "OverlayPersistentHighlighter.test.ts",
    "PageResourceLoader.test.ts",
    "PreloadingModel.test.ts",
    "RemoteObject.test.ts",
    "ResourceTreeModel.test.ts",
    "RuntimeModel.test.ts",
    "Script.test.ts",
    "ServerSentEventsProtocol.test.ts",
    "ServerTiming.test.ts",
    "ServiceWorkerCacheModel.test.ts",
    "ServiceWorkerManager.test.ts",
    "SourceMap.test.ts",
    "SourceMapManager.test.ts",
    "SourceMapScopes.test.ts",
    "StorageBucketsModel.test.ts",
    "StorageKeyManager.test.ts",
    "Target.test.ts",
    "TargetManager.test.ts",
  ]

  deps = [
    ":bundle",
    "../../generated:protocol",
    "../../models/bindings:bundle",
    "../../models/persistence:bundle",
    "../../models/text_utils:bundle",
    "../../models/trace:bundle",
    "../../models/workspace:bundle",
    "../../testing",
    "../common:bundle",
    "../protocol_client:bundle",
  ]
}
