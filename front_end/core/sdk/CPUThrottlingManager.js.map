{"version":3,"file":"CPUThrottlingManager.js","sourceRoot":"","sources":["../../../../../../front_end/core/sdk/CPUThrottlingManager.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2017 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../i18n/i18n.js';\n\nimport {EmulationModel} from './EmulationModel.js';\nimport {type SDKModelObserver, TargetManager} from './TargetManager.js';\n\nconst UIStrings = {\n  /**\n   * @description Text label for a menu item indicating that no throttling is applied.\n   */\n  noThrottling: 'No throttling',\n  /**\n   * @description Text label for a menu item indicating that a specific slowdown multiplier is applied.\n   * @example {2} PH1\n   */\n  dSlowdown: '{PH1}Ã— slowdown',\n  /**\n   * @description Text label for a menu item indicating an average mobile device.\n   */\n  calibratedMidTierMobile: 'Mid-tier mobile',\n  /**\n   * @description Text label for a menu item indicating a below-average mobile device.\n   */\n  calibratedLowTierMobile: 'Low-tier mobile',\n  /**\n   * @description Text label indicating why an option is not available, because the user's device is not fast enough to emulate a device.\n   */\n  calibrationErrorDeviceTooWeak: 'Device is not powerful enough',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('core/sdk/CPUThrottlingManager.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\n\nlet throttlingManagerInstance: CPUThrottlingManager;\n\nexport class CPUThrottlingManager extends Common.ObjectWrapper.ObjectWrapper<EventTypes> implements\n    SDKModelObserver<EmulationModel> {\n  #cpuThrottlingOption: CPUThrottlingOption;\n  #calibratedThrottlingSetting: Common.Settings.Setting<CalibratedCPUThrottling>;\n  #hardwareConcurrency?: number;\n  #pendingMainTargetPromise?: (r: number) => void;\n\n  private constructor() {\n    super();\n    this.#cpuThrottlingOption = NoThrottlingOption;\n    this.#calibratedThrottlingSetting = Common.Settings.Settings.instance().createSetting<CalibratedCPUThrottling>(\n        'calibrated-cpu-throttling', {}, Common.Settings.SettingStorageType.GLOBAL);\n    this.#calibratedThrottlingSetting.addChangeListener(this.#onCalibratedSettingChanged, this);\n    TargetManager.instance().observeModels(EmulationModel, this);\n  }\n\n  static instance(opts: {forceNew: boolean|null} = {forceNew: null}): CPUThrottlingManager {\n    const {forceNew} = opts;\n    if (!throttlingManagerInstance || forceNew) {\n      throttlingManagerInstance = new CPUThrottlingManager();\n    }\n\n    return throttlingManagerInstance;\n  }\n\n  cpuThrottlingRate(): number {\n    return this.#cpuThrottlingOption.rate();\n  }\n\n  cpuThrottlingOption(): CPUThrottlingOption {\n    return this.#cpuThrottlingOption;\n  }\n\n  #onCalibratedSettingChanged(): void {\n    // If a calibrated option is selected, need to propagate new rate.\n    const currentOption = this.#cpuThrottlingOption;\n    if (!currentOption.calibratedDeviceType) {\n      return;\n    }\n\n    const rate = this.#cpuThrottlingOption.rate();\n    if (rate === 0) {\n      // This calibrated option is no longer valid.\n      this.setCPUThrottlingOption(NoThrottlingOption);\n      return;\n    }\n\n    for (const emulationModel of TargetManager.instance().models(EmulationModel)) {\n      void emulationModel.setCPUThrottlingRate(rate);\n    }\n    this.dispatchEventToListeners(Events.RATE_CHANGED, rate);\n  }\n\n  setCPUThrottlingOption(option: CPUThrottlingOption): void {\n    if (option === this.#cpuThrottlingOption) {\n      return;\n    }\n\n    this.#cpuThrottlingOption = option;\n    for (const emulationModel of TargetManager.instance().models(EmulationModel)) {\n      void emulationModel.setCPUThrottlingRate(this.#cpuThrottlingOption.rate());\n    }\n    this.dispatchEventToListeners(Events.RATE_CHANGED, this.#cpuThrottlingOption.rate());\n  }\n\n  setHardwareConcurrency(concurrency: number): void {\n    this.#hardwareConcurrency = concurrency;\n    for (const emulationModel of TargetManager.instance().models(EmulationModel)) {\n      void emulationModel.setHardwareConcurrency(concurrency);\n    }\n    this.dispatchEventToListeners(Events.HARDWARE_CONCURRENCY_CHANGED, this.#hardwareConcurrency);\n  }\n\n  hasPrimaryPageTargetSet(): boolean {\n    // In some environments, such as Node, trying to check if we have a page\n    // target may error. So if we get any errors here at all, assume that we do\n    // not have a target.\n    try {\n      return TargetManager.instance().primaryPageTarget() !== null;\n    } catch {\n      return false;\n    }\n  }\n\n  async getHardwareConcurrency(): Promise<number> {\n    const target = TargetManager.instance().primaryPageTarget();\n    const existingCallback = this.#pendingMainTargetPromise;\n\n    // If the main target hasn't attached yet, block callers until it appears.\n    if (!target) {\n      if (existingCallback) {\n        return await new Promise(r => {\n          this.#pendingMainTargetPromise = (result: number) => {\n            r(result);\n            existingCallback(result);\n          };\n        });\n      }\n      return await new Promise(r => {\n        this.#pendingMainTargetPromise = r;\n      });\n    }\n\n    const evalResult = await target.runtimeAgent().invoke_evaluate(\n        {expression: 'navigator.hardwareConcurrency', returnByValue: true, silent: true, throwOnSideEffect: true});\n    const error = evalResult.getError();\n    if (error) {\n      throw new Error(error);\n    }\n    const {result, exceptionDetails} = evalResult;\n    if (exceptionDetails) {\n      throw new Error(exceptionDetails.text);\n    }\n    return result.value;\n  }\n\n  modelAdded(emulationModel: EmulationModel): void {\n    if (this.#cpuThrottlingOption !== NoThrottlingOption) {\n      void emulationModel.setCPUThrottlingRate(this.#cpuThrottlingOption.rate());\n    }\n    if (this.#hardwareConcurrency !== undefined) {\n      void emulationModel.setHardwareConcurrency(this.#hardwareConcurrency);\n    }\n\n    // If there are any callers blocked on a getHardwareConcurrency call, let's wake them now.\n    if (this.#pendingMainTargetPromise) {\n      const existingCallback = this.#pendingMainTargetPromise;\n      this.#pendingMainTargetPromise = undefined;\n      void this.getHardwareConcurrency().then(existingCallback);\n    }\n  }\n\n  modelRemoved(_emulationModel: EmulationModel): void {\n    // Implemented as a requirement for being a SDKModelObserver.\n  }\n}\n\nexport const enum Events {\n  RATE_CHANGED = 'RateChanged',\n  HARDWARE_CONCURRENCY_CHANGED = 'HardwareConcurrencyChanged',\n}\n\nexport interface EventTypes {\n  [Events.RATE_CHANGED]: number;\n  [Events.HARDWARE_CONCURRENCY_CHANGED]: number;\n}\n\nexport function throttlingManager(): CPUThrottlingManager {\n  return CPUThrottlingManager.instance();\n}\n\nexport enum CPUThrottlingRates {\n  NO_THROTTLING = 1,\n  MID_TIER_MOBILE = 4,\n  LOW_TIER_MOBILE = 6,\n  EXTRA_SLOW = 20,\n\n  // eslint-disable-next-line @typescript-eslint/naming-convention -- Used by web_tests.\n  MidTierMobile = MID_TIER_MOBILE,\n  // eslint-disable-next-line @typescript-eslint/naming-convention -- Used by web_tests.\n  LowEndMobile = LOW_TIER_MOBILE,\n}\n\nexport type CalibratedDeviceType = 'low-tier-mobile'|'mid-tier-mobile';\n\nexport interface CPUThrottlingOption {\n  title: () => string;\n  rate: () => number;\n  calibratedDeviceType?: CalibratedDeviceType;\n  jslogContext: string;\n}\n\nfunction makeFixedPresetThrottlingOption(rate: CPUThrottlingRates): CPUThrottlingOption {\n  return {\n    title: rate === 1 ? i18nLazyString(UIStrings.noThrottling) : i18nLazyString(UIStrings.dSlowdown, {PH1: rate}),\n    rate: () => rate,\n    jslogContext: rate === 1 ? 'cpu-no-throttling' : `cpu-throttled-${rate}`,\n  };\n}\n\nexport const NoThrottlingOption = makeFixedPresetThrottlingOption(CPUThrottlingRates.NO_THROTTLING);\nexport const MidTierThrottlingOption = makeFixedPresetThrottlingOption(CPUThrottlingRates.MID_TIER_MOBILE);\nexport const LowTierThrottlingOption = makeFixedPresetThrottlingOption(CPUThrottlingRates.LOW_TIER_MOBILE);\nexport const ExtraSlowThrottlingOption = makeFixedPresetThrottlingOption(CPUThrottlingRates.EXTRA_SLOW);\n\nfunction makeCalibratedThrottlingOption(calibratedDeviceType: CalibratedDeviceType): CPUThrottlingOption {\n  const getSettingValue = (): number|CalibrationError|null => {\n    const setting = Common.Settings.Settings.instance().createSetting<CalibratedCPUThrottling>(\n        'calibrated-cpu-throttling', {}, Common.Settings.SettingStorageType.GLOBAL);\n    const value = setting.get();\n    if (calibratedDeviceType === 'low-tier-mobile') {\n      return value.low ?? null;\n    }\n    if (calibratedDeviceType === 'mid-tier-mobile') {\n      return value.mid ?? null;\n    }\n    return null;\n  };\n\n  return {\n    title(): string {\n      const typeString = calibratedDeviceType === 'low-tier-mobile' ? i18nString(UIStrings.calibratedLowTierMobile) :\n                                                                      i18nString(UIStrings.calibratedMidTierMobile);\n\n      const value = getSettingValue();\n      if (typeof value === 'number') {\n        return `${typeString} â€“ ${value.toFixed(1)}Ã—`;\n      }\n\n      return typeString;\n    },\n    rate(): number {\n      const value = getSettingValue();\n      if (typeof value === 'number') {\n        return value;\n      }\n      return 0;\n    },\n    calibratedDeviceType,\n    jslogContext: `cpu-throttled-calibrated-${calibratedDeviceType}`,\n  };\n}\n\nexport const CalibratedLowTierMobileThrottlingOption = makeCalibratedThrottlingOption('low-tier-mobile');\nexport const CalibratedMidTierMobileThrottlingOption = makeCalibratedThrottlingOption('mid-tier-mobile');\n\nexport interface CalibratedCPUThrottling {\n  /** Either the CPU multiplier, or an error code for why it could not be determined. */\n  low?: number|CalibrationError;\n  mid?: number|CalibrationError;\n}\n\nexport enum CalibrationError {\n  DEVICE_TOO_WEAK = 'DEVICE_TOO_WEAK',\n}\n\nexport function calibrationErrorToString(error: CalibrationError): string {\n  if (error === CalibrationError.DEVICE_TOO_WEAK) {\n    return i18nString(UIStrings.calibrationErrorDeviceTooWeak);\n  }\n\n  return error;\n}\n"]}