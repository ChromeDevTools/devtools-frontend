{"version":3,"file":"CSSQuery.js","sourceRoot":"","sources":["../../../../../../front_end/core/sdk/CSSQuery.ts"],"names":[],"mappings":"AAAA,sCAAsC;AACtC,yEAAyE;AACzE,6BAA6B;AAK7B,OAAO,EAAC,WAAW,EAA2B,MAAM,eAAe,CAAC;AAMpE,MAAM,OAAgB,QAAQ;IAC5B,IAAI,GAAG,EAAE,CAAC;IACV,KAAK,CAAsC;IAC3C,YAAY,CAA6B;IAC/B,QAAQ,CAAW;IAE7B,YAAY,QAAkB;QAC5B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC3B,CAAC;IAMD,MAAM,CAAC,IAAU;QACf,IAAI,IAAI,CAAC,YAAY,KAAK,IAAI,CAAC,YAAY,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;YAC3D,OAAO;QACT,CAAC;QACD,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC;YACpC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAA0B,CAAC,CAAC;QACrD,CAAC;aAAM,CAAC;YACN,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,mBAAmB,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC5E,CAAC;IACH,CAAC;IAED,KAAK,CAAC,KAAe;QACnB,IAAI,CAAC,IAAI,CAAC,YAAY,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;YACtD,OAAO,KAAK,CAAC;QACf,CAAC;QACD,OAAO,IAAI,CAAC,YAAY,KAAK,KAAK,CAAC,YAAY,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IACnF,CAAC;IAED,kBAAkB;QAChB,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;YAChB,OAAO,SAAS,CAAC;QACnB,CAAC;QACD,OAAO,IAAI,CAAC,MAAM,EAAE,EAAE,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;IACjE,CAAC;IAED,oBAAoB;QAClB,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;YAChB,OAAO,SAAS,CAAC;QACnB,CAAC;QACD,OAAO,IAAI,CAAC,MAAM,EAAE,EAAE,oBAAoB,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;IAC3F,CAAC;IAED,MAAM;QACJ,OAAO,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,qBAAqB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;IAC3F,CAAC;IAED,WAAW;QACT,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;QAC7B,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,kBAAkB,EAAE,KAAK,SAAS,EAAE,CAAC;YACvD,OAAO,IAAI,CAAC;QACd,CAAC;QACD,MAAM,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,kBAAkB,EAAE,CAAC,CAAC;QACrD,OAAO,IAAI,WAAW,CAAC,MAAM,EAAE,UAAU,EAAE,IAAI,CAAC,oBAAoB,EAAE,CAAC,CAAC;IAC1E,CAAC;CACF","sourcesContent":["// Copyright 2021 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Protocol from '../../generated/protocol.js';\nimport type * as TextUtils from '../../models/text_utils/text_utils.js';\n\nimport {CSSLocation, type CSSModel, type Edit} from './CSSModel.js';\nimport type {CSSStyleSheetHeader} from './CSSStyleSheetHeader.js';\n\ntype CSSQueryPayload =\n    Protocol.CSS.CSSMedia|Protocol.CSS.CSSContainerQuery|Protocol.CSS.CSSSupports|Protocol.CSS.CSSScope;\n\nexport abstract class CSSQuery {\n  text = '';\n  range?: TextUtils.TextRange.TextRange|null;\n  styleSheetId?: Protocol.CSS.StyleSheetId;\n  protected cssModel: CSSModel;\n\n  constructor(cssModel: CSSModel) {\n    this.cssModel = cssModel;\n  }\n\n  protected abstract reinitialize(payload: CSSQueryPayload): void;\n\n  abstract active(): boolean;\n\n  rebase(edit: Edit): void {\n    if (this.styleSheetId !== edit.styleSheetId || !this.range) {\n      return;\n    }\n    if (edit.oldRange.equal(this.range)) {\n      this.reinitialize(edit.payload as CSSQueryPayload);\n    } else {\n      this.range = this.range.rebaseAfterTextEdit(edit.oldRange, edit.newRange);\n    }\n  }\n\n  equal(other: CSSQuery): boolean {\n    if (!this.styleSheetId || !this.range || !other.range) {\n      return false;\n    }\n    return this.styleSheetId === other.styleSheetId && this.range.equal(other.range);\n  }\n\n  lineNumberInSource(): number|undefined {\n    if (!this.range) {\n      return undefined;\n    }\n    return this.header()?.lineNumberInSource(this.range.startLine);\n  }\n\n  columnNumberInSource(): number|undefined {\n    if (!this.range) {\n      return undefined;\n    }\n    return this.header()?.columnNumberInSource(this.range.startLine, this.range.startColumn);\n  }\n\n  header(): CSSStyleSheetHeader|null {\n    return this.styleSheetId ? this.cssModel.styleSheetHeaderForId(this.styleSheetId) : null;\n  }\n\n  rawLocation(): CSSLocation|null {\n    const header = this.header();\n    if (!header || this.lineNumberInSource() === undefined) {\n      return null;\n    }\n    const lineNumber = Number(this.lineNumberInSource());\n    return new CSSLocation(header, lineNumber, this.columnNumberInSource());\n  }\n}\n"]}