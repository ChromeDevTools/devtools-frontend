{"version":3,"file":"CategorizedBreakpoint.js","sourceRoot":"","sources":["../../../../../../front_end/core/sdk/CategorizedBreakpoint.ts"],"names":[],"mappings":"AAAA,sCAAsC;AACtC,yEAAyE;AACzE,6BAA6B;AA+B7B,MAAM,OAAO,qBAAqB;IAChC;;;;;;OAMG;IACM,IAAI,CAAS;IAEb,SAAS,CAAW;IAC7B,QAAQ,CAAU;IAElB,YAAY,QAAkB,EAAE,IAAY;QAC1C,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC1B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;IACxB,CAAC;IAED,QAAQ;QACN,OAAO,IAAI,CAAC,SAAS,CAAC;IACxB,CAAC;IAED,OAAO;QACL,OAAO,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;IAED,UAAU,CAAC,OAAgB;QACzB,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;IAC1B,CAAC;CACF","sourcesContent":["// Copyright 2021 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nexport const enum Category {\n  ANIMATION = 'animation',\n  AUCTION_WORKLET = 'auction-worklet',\n  CANVAS = 'canvas',\n  CLIPBOARD = 'clipboard',\n  CONTROL = 'control',\n  DEVICE = 'device',\n  DOM_MUTATION = 'dom-mutation',\n  DRAG_DROP = 'drag-drop',\n  GEOLOCATION = 'geolocation',\n  KEYBOARD = 'keyboard',\n  LOAD = 'load',\n  MEDIA = 'media',\n  MOUSE = 'mouse',\n  NOTIFICATION = 'notification',\n  PARSE = 'parse',\n  PICTURE_IN_PICTURE = 'picture-in-picture',\n  POINTER = 'pointer',\n  SCRIPT = 'script',\n  SHARED_STORAGE_WORKLET = 'shared-storage-worklet',\n  TIMER = 'timer',\n  TOUCH = 'touch',\n  TRUSTED_TYPE_VIOLATION = 'trusted-type-violation',\n  WEB_AUDIO = 'web-audio',\n  WINDOW = 'window',\n  WORKER = 'worker',\n  XHR = 'xhr',\n}\n\nexport class CategorizedBreakpoint {\n  /**\n   * The name of this breakpoint as passed to 'setInstrumentationBreakpoint',\n   * 'setEventListenerBreakpoint' and 'setBreakOnCSPViolation'.\n   *\n   * Note that the backend adds a 'listener:' and 'instrumentation:' prefix\n   * to this name in the 'Debugger.paused' CDP event.\n   */\n  readonly name: string;\n\n  readonly #category: Category;\n  #enabled: boolean;\n\n  constructor(category: Category, name: string) {\n    this.#category = category;\n    this.name = name;\n    this.#enabled = false;\n  }\n\n  category(): Category {\n    return this.#category;\n  }\n\n  enabled(): boolean {\n    return this.#enabled;\n  }\n\n  setEnabled(enabled: boolean): void {\n    this.#enabled = enabled;\n  }\n}\n"]}