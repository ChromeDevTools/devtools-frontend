{"version":3,"file":"ChildTargetManager.js","sourceRoot":"","sources":["../../../../../../front_end/core/sdk/ChildTargetManager.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2018 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as ProtocolProxyApi from '../../generated/protocol-proxy-api.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport * as Common from '../common/common.js';\nimport * as Host from '../host/host.js';\nimport type * as ProtocolClient from '../protocol_client/protocol_client.js';\n\nimport {ParallelConnection} from './Connections.js';\nimport {PrimaryPageChangeType, ResourceTreeModel} from './ResourceTreeModel.js';\nimport {SDKModel} from './SDKModel.js';\nimport {SecurityOriginManager} from './SecurityOriginManager.js';\nimport {StorageKeyManager} from './StorageKeyManager.js';\nimport {Capability, type Target, Type} from './Target.js';\nimport {Events as TargetManagerEvents, TargetManager} from './TargetManager.js';\n\nconst UIStrings = {\n  /**\n   * @description Text that refers to the main target. The main target is the primary webpage that\n   * DevTools is connected to. This text is used in various places in the UI as a label/name to inform\n   * the user which target/webpage they are currently connected to, as DevTools may connect to multiple\n   * targets at the same time in some scenarios.\n   */\n  main: 'Main',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('core/sdk/ChildTargetManager.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class ChildTargetManager extends SDKModel<EventTypes> implements ProtocolProxyApi.TargetDispatcher {\n  readonly #targetManager: TargetManager;\n  #parentTarget: Target;\n  readonly #targetAgent: ProtocolProxyApi.TargetApi;\n  readonly #targetInfos = new Map<Protocol.Target.TargetID, Protocol.Target.TargetInfo>();\n  readonly #childTargetsBySessionId = new Map<Protocol.Target.SessionID, Target>();\n  readonly #childTargetsById = new Map<Protocol.Target.TargetID|'main', Target>();\n  readonly #parallelConnections = new Map<string, ProtocolClient.ConnectionTransport.ConnectionTransport>();\n  #parentTargetId: Protocol.Target.TargetID|null = null;\n\n  constructor(parentTarget: Target) {\n    super(parentTarget);\n    this.#targetManager = parentTarget.targetManager();\n    this.#parentTarget = parentTarget;\n    this.#targetAgent = parentTarget.targetAgent();\n    parentTarget.registerTargetDispatcher(this);\n    const browserTarget = this.#targetManager.browserTarget();\n    if (browserTarget) {\n      if (browserTarget !== parentTarget) {\n        void browserTarget.targetAgent().invoke_autoAttachRelated(\n            {targetId: parentTarget.id() as Protocol.Target.TargetID, waitForDebuggerOnStart: true});\n      }\n    } else if (parentTarget.type() === Type.NODE) {\n      void this.#targetAgent.invoke_setAutoAttach({autoAttach: true, waitForDebuggerOnStart: true, flatten: false});\n    } else {\n      void this.#targetAgent.invoke_setAutoAttach({autoAttach: true, waitForDebuggerOnStart: true, flatten: true});\n    }\n\n    if (parentTarget.parentTarget()?.type() !== Type.FRAME && !Host.InspectorFrontendHost.isUnderTest()) {\n      void this.#targetAgent.invoke_setDiscoverTargets({discover: true});\n      void this.#targetAgent.invoke_setRemoteLocations({locations: [{host: 'localhost', port: 9229}]});\n    }\n  }\n\n  static install(attachCallback?: ((arg0: {\n                                     target: Target,\n                                     waitingForDebugger: boolean,\n                                   }) => Promise<void>)): void {\n    ChildTargetManager.attachCallback = attachCallback;\n    SDKModel.register(ChildTargetManager, {capabilities: Capability.TARGET, autostart: true});\n  }\n\n  childTargets(): Target[] {\n    return Array.from(this.#childTargetsBySessionId.values());\n  }\n\n  override async suspendModel(): Promise<void> {\n    await this.#targetAgent.invoke_setAutoAttach({autoAttach: true, waitForDebuggerOnStart: false, flatten: true});\n  }\n\n  override async resumeModel(): Promise<void> {\n    await this.#targetAgent.invoke_setAutoAttach({autoAttach: true, waitForDebuggerOnStart: true, flatten: true});\n  }\n\n  override dispose(): void {\n    for (const sessionId of this.#childTargetsBySessionId.keys()) {\n      this.detachedFromTarget({sessionId, targetId: undefined});\n    }\n  }\n\n  targetCreated({targetInfo}: Protocol.Target.TargetCreatedEvent): void {\n    this.#targetInfos.set(targetInfo.targetId, targetInfo);\n    this.fireAvailableTargetsChanged();\n    this.dispatchEventToListeners(Events.TARGET_CREATED, targetInfo);\n  }\n\n  targetInfoChanged({targetInfo}: Protocol.Target.TargetInfoChangedEvent): void {\n    this.#targetInfos.set(targetInfo.targetId, targetInfo);\n    const target = this.#childTargetsById.get(targetInfo.targetId);\n    if (target) {\n      void target.setHasCrashed(false);\n      if (target.targetInfo()?.subtype === 'prerender' && !targetInfo.subtype) {\n        const resourceTreeModel = target.model(ResourceTreeModel);\n        target.updateTargetInfo(targetInfo);\n        if (resourceTreeModel?.mainFrame) {\n          resourceTreeModel.primaryPageChanged(resourceTreeModel.mainFrame, PrimaryPageChangeType.ACTIVATION);\n        }\n        target.setName(i18nString(UIStrings.main));\n      } else {\n        target.updateTargetInfo(targetInfo);\n      }\n    }\n    this.fireAvailableTargetsChanged();\n    this.dispatchEventToListeners(Events.TARGET_INFO_CHANGED, targetInfo);\n  }\n\n  targetDestroyed({targetId}: Protocol.Target.TargetDestroyedEvent): void {\n    this.#targetInfos.delete(targetId);\n    this.fireAvailableTargetsChanged();\n    this.dispatchEventToListeners(Events.TARGET_DESTROYED, targetId);\n  }\n\n  targetCrashed({targetId}: Protocol.Target.TargetCrashedEvent): void {\n    const target = this.#childTargetsById.get(targetId);\n    if (target) {\n      target.setHasCrashed(true);\n    }\n  }\n\n  private fireAvailableTargetsChanged(): void {\n    TargetManager.instance().dispatchEventToListeners(\n        TargetManagerEvents.AVAILABLE_TARGETS_CHANGED, [...this.#targetInfos.values()]);\n  }\n\n  async getParentTargetId(): Promise<Protocol.Target.TargetID> {\n    if (!this.#parentTargetId) {\n      this.#parentTargetId = (await this.#parentTarget.targetAgent().invoke_getTargetInfo({})).targetInfo.targetId;\n    }\n    return this.#parentTargetId;\n  }\n\n  async getTargetInfo(): Promise<Protocol.Target.TargetInfo> {\n    return (await this.#parentTarget.targetAgent().invoke_getTargetInfo({})).targetInfo;\n  }\n\n  async attachedToTarget({sessionId, targetInfo, waitingForDebugger}: Protocol.Target.AttachedToTargetEvent):\n      Promise<void> {\n    if (this.#parentTargetId === targetInfo.targetId) {\n      return;\n    }\n    let type = Type.BROWSER;\n    let targetName = '';\n    if (targetInfo.type === 'worker' && targetInfo.title && targetInfo.title !== targetInfo.url) {\n      targetName = targetInfo.title;\n    } else if (!['page', 'iframe', 'webview'].includes(targetInfo.type)) {\n      const KNOWN_FRAME_PATTERNS = [\n        '^chrome://print/$',\n        '^chrome://file-manager/',\n        '^chrome://feedback/',\n        '^chrome://.*\\\\.top-chrome/$',\n        '^chrome://view-cert/$',\n        '^devtools://',\n      ];\n      if (KNOWN_FRAME_PATTERNS.some(p => targetInfo.url.match(p))) {\n        type = Type.FRAME;\n      } else {\n        const parsedURL = Common.ParsedURL.ParsedURL.fromString(targetInfo.url);\n        targetName =\n            parsedURL ? parsedURL.lastPathComponentWithFragment() : '#' + (++ChildTargetManager.lastAnonymousTargetId);\n      }\n    }\n\n    if (targetInfo.type === 'iframe' || targetInfo.type === 'webview') {\n      type = Type.FRAME;\n    } else if (targetInfo.type === 'background_page' || targetInfo.type === 'app' || targetInfo.type === 'popup_page') {\n      type = Type.FRAME;\n    } else if (targetInfo.type === 'page') {\n      type = Type.FRAME;\n    } else if (targetInfo.type === 'browser_ui') {\n      type = Type.FRAME;\n    } else if (targetInfo.type === 'worker') {\n      type = Type.Worker;\n    } else if (targetInfo.type === 'worklet') {\n      type = Type.WORKLET;\n    } else if (targetInfo.type === 'shared_worker') {\n      type = Type.SHARED_WORKER;\n    } else if (targetInfo.type === 'shared_storage_worklet') {\n      type = Type.SHARED_STORAGE_WORKLET;\n    } else if (targetInfo.type === 'service_worker') {\n      type = Type.ServiceWorker;\n    } else if (targetInfo.type === 'auction_worklet') {\n      type = Type.AUCTION_WORKLET;\n    } else if (targetInfo.type === 'node_worker') {\n      type = Type.NODE_WORKER;\n    }\n    const target = this.#targetManager.createTarget(\n        targetInfo.targetId, targetName, type, this.#parentTarget, sessionId, undefined, undefined, targetInfo);\n    this.#childTargetsBySessionId.set(sessionId, target);\n    this.#childTargetsById.set(target.id(), target);\n\n    if (ChildTargetManager.attachCallback) {\n      await ChildTargetManager.attachCallback({target, waitingForDebugger});\n    }\n\n    // [crbug/1423096] Invoking this on a worker session that is not waiting for the debugger can force the worker\n    // to resume even if there is another session waiting for the debugger.\n    if (waitingForDebugger) {\n      void target.runtimeAgent().invoke_runIfWaitingForDebugger();\n    }\n\n    // For top-level workers (those not attached to a frame), we need to\n    // initialize their storage context manually. The `Capability.STORAGE` is\n    // only granted in `Target.ts` to workers that are not parented by a frame,\n    // which makes this check safe. Frame-associated workers have their storage\n    // managed by ResourceTreeModel.\n    if (type !== Type.FRAME && target.hasAllCapabilities(Capability.STORAGE)) {\n      await this.initializeStorage(target);\n    }\n  }\n\n  private async initializeStorage(target: Target): Promise<void> {\n    const storageAgent = target.storageAgent();\n    const response = await storageAgent.invoke_getStorageKey({});\n\n    const storageKey = response.storageKey;\n    if (response.getError() || !storageKey) {\n      console.error(`Failed to get storage key for target ${target.id()}: ${response.getError()}`);\n      return;\n    }\n\n    const storageKeyManager = target.model(StorageKeyManager);\n    if (storageKeyManager) {\n      storageKeyManager.setMainStorageKey(storageKey);\n      storageKeyManager.updateStorageKeys(new Set([storageKey]));\n    }\n\n    const securityOriginManager = target.model(SecurityOriginManager);\n    if (securityOriginManager) {\n      const origin = new URL(storageKey).origin;\n      securityOriginManager.setMainSecurityOrigin(origin, '');\n      securityOriginManager.updateSecurityOrigins(new Set([origin]));\n    }\n  }\n\n  detachedFromTarget({sessionId}: Protocol.Target.DetachedFromTargetEvent): void {\n    if (this.#parallelConnections.has(sessionId)) {\n      this.#parallelConnections.delete(sessionId);\n    } else {\n      const target = this.#childTargetsBySessionId.get(sessionId);\n      if (target) {\n        target.dispose('target terminated');\n        this.#childTargetsBySessionId.delete(sessionId);\n        this.#childTargetsById.delete(target.id());\n      }\n    }\n  }\n\n  receivedMessageFromTarget({}: Protocol.Target.ReceivedMessageFromTargetEvent): void {\n    // We use flatten protocol.\n  }\n\n  async createParallelConnection(onMessage: (arg0: Object|string) => void):\n      Promise<{connection: ProtocolClient.ConnectionTransport.ConnectionTransport, sessionId: string}> {\n    // The main Target id is actually just `main`, instead of the real targetId.\n    // Get the real id (requires an async operation) so that it can be used synchronously later.\n    const targetId = await this.getParentTargetId();\n    const {connection, sessionId} =\n        await this.createParallelConnectionAndSessionForTarget(this.#parentTarget, targetId);\n    connection.setOnMessage(onMessage);\n    this.#parallelConnections.set(sessionId, connection);\n    return {connection, sessionId};\n  }\n\n  private async createParallelConnectionAndSessionForTarget(target: Target, targetId: Protocol.Target.TargetID):\n      Promise<{\n        connection: ProtocolClient.ConnectionTransport.ConnectionTransport,\n        sessionId: string,\n      }> {\n    const targetAgent = target.targetAgent();\n    const targetRouter = (target.router() as ProtocolClient.InspectorBackend.SessionRouter);\n    const sessionId = (await targetAgent.invoke_attachToTarget({targetId, flatten: true})).sessionId;\n    const connection = new ParallelConnection(targetRouter.connection(), sessionId);\n    targetRouter.registerSession(target, sessionId, connection);\n    connection.setOnDisconnect(() => {\n      targetRouter.unregisterSession(sessionId);\n      void targetAgent.invoke_detachFromTarget({sessionId});\n    });\n    return {connection, sessionId};\n  }\n\n  targetInfos(): Protocol.Target.TargetInfo[] {\n    return Array.from(this.#targetInfos.values());\n  }\n\n  private static lastAnonymousTargetId = 0;\n\n  private static attachCallback?: ((arg0: {\n                                     target: Target,\n                                     waitingForDebugger: boolean,\n                                   }) => Promise<void>);\n}\n\nexport const enum Events {\n  TARGET_CREATED = 'TargetCreated',\n  TARGET_DESTROYED = 'TargetDestroyed',\n  TARGET_INFO_CHANGED = 'TargetInfoChanged',\n}\n\nexport interface EventTypes {\n  [Events.TARGET_CREATED]: Protocol.Target.TargetInfo;\n  [Events.TARGET_DESTROYED]: Protocol.Target.TargetID;\n  [Events.TARGET_INFO_CHANGED]: Protocol.Target.TargetInfo;\n}\n"]}