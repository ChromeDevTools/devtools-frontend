{"version":3,"file":"Connections.js","sourceRoot":"","sources":["../../../../../../front_end/core/sdk/Connections.ts"],"names":[],"mappings":"AAAA,sCAAsC;AACtC,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,IAAI,MAAM,yBAAyB,CAAC;AAChD,OAAO,KAAK,MAAM,MAAM,qBAAqB,CAAC;AAC9C,OAAO,KAAK,IAAI,MAAM,iBAAiB,CAAC;AAExC,OAAO,KAAK,cAAc,MAAM,uCAAuC,CAAC;AACxE,OAAO,KAAK,IAAI,MAAM,iBAAiB,CAAC;AAExC,OAAO,EAAC,qBAAqB,EAAC,MAAM,4BAA4B,CAAC;AAEjE,MAAM,SAAS,GAAG;IAChB;;OAEG;IACH,qBAAqB,EAAE,wBAAwB;CACvC,CAAC;AACX,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,yBAAyB,EAAE,SAAS,CAAC,CAAC;AAC/E,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AACtE,MAAM,OAAO,cAAc;IACzB,SAAS,GAAyC,IAAI,CAAC;IACvD,aAAa,GAAkC,IAAI,CAAC;IACpD,cAAc,GAAG,EAAE,CAAC;IACpB,YAAY,GAAG,CAAC,CAAC;IACR,eAAe,CAAuC;IAC/D;QACE,IAAI,CAAC,eAAe,GAAG;YACrB,IAAI,CAAC,qBAAqB,CAAC,6BAA6B,CAAC,MAAM,CAAC,gBAAgB,CAC5E,IAAI,CAAC,wBAAwB,CAAC,MAAM,CAAC,eAAe,EAAE,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC;YACrF,IAAI,CAAC,qBAAqB,CAAC,6BAA6B,CAAC,MAAM,CAAC,gBAAgB,CAC5E,IAAI,CAAC,wBAAwB,CAAC,MAAM,CAAC,oBAAoB,EAAE,IAAI,CAAC,oBAAoB,EAAE,IAAI,CAAC;SAChG,CAAC;IACJ,CAAC;IAED,YAAY,CAAC,SAAwC;QACnD,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IAC7B,CAAC;IAED,eAAe,CAAC,YAAoC;QAClD,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;IACpC,CAAC;IAED,cAAc,CAAC,OAAe;QAC5B,IAAI,IAAI,CAAC,SAAS,EAAE,CAAC;YACnB,IAAI,CAAC,qBAAqB,CAAC,6BAA6B,CAAC,oBAAoB,CAAC,OAAO,CAAC,CAAC;QACzF,CAAC;IACH,CAAC;IAEO,eAAe,CAAC,KAAkD;QACxE,IAAI,IAAI,CAAC,SAAS,EAAE,CAAC;YACnB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC;QACxC,CAAC;IACH,CAAC;IAEO,oBAAoB,CACxB,KAAmG;QACrG,MAAM,EAAC,YAAY,EAAE,WAAW,EAAC,GAAG,KAAK,CAAC,IAAI,CAAC;QAC/C,IAAI,WAAW,EAAE,CAAC;YAChB,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;YACzB,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC;QAClC,CAAC;QACD,IAAI,CAAC,cAAc,IAAI,YAAY,CAAC;QACpC,IAAI,IAAI,CAAC,cAAc,CAAC,MAAM,KAAK,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,SAAS,EAAE,CAAC;YACvE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;YAC/C,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;YACzB,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;QACxB,CAAC;IACH,CAAC;IAED,KAAK,CAAC,UAAU;QACd,MAAM,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC;QACxC,MAAM,CAAC,WAAW,CAAC,oBAAoB,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QAC9D,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAEtB,IAAI,YAAY,EAAE,CAAC;YACjB,YAAY,CAAC,IAAI,CAAC,IAAI,EAAE,kBAAkB,CAAC,CAAC;QAC9C,CAAC;IACH,CAAC;CACF;AAED,MAAM,OAAO,mBAAmB;IAC9B,OAAO,CAAiB;IACxB,SAAS,GAAyC,IAAI,CAAC;IACvD,aAAa,GAAkC,IAAI,CAAC;IACpD,sBAAsB,CAA8D;IACpF,UAAU,GAAG,KAAK,CAAC;IACnB,SAAS,GAAa,EAAE,CAAC;IACzB,YACI,GAAoC,EACpC,qBAA2E;QAC7E,IAAI,CAAC,OAAO,GAAG,IAAI,SAAS,CAAC,GAAG,CAAC,CAAC;QAClC,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC/C,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC7C,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,CAAC,YAAkC,EAAQ,EAAE;YACpE,IAAI,IAAI,CAAC,SAAS,EAAE,CAAC;gBACnB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,YAAY,CAAC,IAAI,CAAC,CAAC;YAC/C,CAAC;QACH,CAAC,CAAC;QACF,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAE/C,IAAI,CAAC,sBAAsB,GAAG,qBAAqB,CAAC;IACtD,CAAC;IAED,YAAY,CAAC,SAAwC;QACnD,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IAC7B,CAAC;IAED,eAAe,CAAC,YAAoC;QAClD,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;IACpC,CAAC;IAEO,OAAO;QACb,IAAI,IAAI,CAAC,sBAAsB,EAAE,CAAC;YAChC,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,EAAE,UAAU,CAAC,SAAS,CAAC,qBAAqB,CAAC,CAAC,CAAC;QACtF,CAAC;QACD,IAAI,IAAI,CAAC,aAAa,EAAE,CAAC;YACvB,qDAAqD;YACrD,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,EAAE,mBAAmB,CAAC,CAAC;QACrD,CAAC;QACD,IAAI,CAAC,KAAK,EAAE,CAAC;IACf,CAAC;IAEO,MAAM;QACZ,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,IAAI,CAAC,OAAO,EAAE,CAAC;YACjB,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC;YACrC,KAAK,MAAM,OAAO,IAAI,IAAI,CAAC,SAAS,EAAE,CAAC;gBACrC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAC7B,CAAC;QACH,CAAC;QACD,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;IACtB,CAAC;IAEO,OAAO;QACb,IAAI,IAAI,CAAC,sBAAsB,EAAE,CAAC;YAChC,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,EAAE,UAAU,CAAC,SAAS,CAAC,qBAAqB,CAAC,CAAC,CAAC;QACtF,CAAC;QACD,IAAI,IAAI,CAAC,aAAa,EAAE,CAAC;YACvB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,EAAE,kBAAkB,CAAC,CAAC;QACpD,CAAC;QACD,IAAI,CAAC,KAAK,EAAE,CAAC;IACf,CAAC;IAEO,KAAK,CAAC,QAAuB;QACnC,IAAI,IAAI,CAAC,OAAO,EAAE,CAAC;YACjB,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC;YAC5B,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC;YAC3B,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,QAAQ,IAAI,IAAI,CAAC;YACxC,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,IAAI,CAAC;YAC9B,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;YACrB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACtB,CAAC;QACD,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC;IACrC,CAAC;IAED,cAAc,CAAC,OAAe;QAC5B,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,OAAO,EAAE,CAAC;YACpC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC7B,CAAC;aAAM,CAAC;YACN,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC/B,CAAC;IACH,CAAC;IAED,UAAU;QACR,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE;YAC3B,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE;gBACd,IAAI,IAAI,CAAC,aAAa,EAAE,CAAC;oBACvB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,EAAE,kBAAkB,CAAC,CAAC;gBACpD,CAAC;gBACD,OAAO,EAAE,CAAC;YACZ,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;CACF;AAED,MAAM,OAAO,cAAc;IACzB,SAAS,GAAyC,IAAI,CAAC;IACvD,aAAa,GAAkC,IAAI,CAAC;IAEpD,YAAY,CAAC,SAAwC;QACnD,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IAC7B,CAAC;IAED,eAAe,CAAC,YAAoC;QAClD,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;IACpC,CAAC;IAED,cAAc,CAAC,OAAe;QAC5B,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;IAClE,CAAC;IAEO,gBAAgB,CAAC,OAAe;QACtC,MAAM,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAC1C,MAAM,KAAK,GAAG;YACZ,OAAO,EAAE,qDAAqD;YAC9D,IAAI,EAAE,cAAc,CAAC,gBAAgB,CAAC,qBAAqB;YAC3D,IAAI,EAAE,aAAa;SACpB,CAAC;QACF,IAAI,IAAI,CAAC,SAAS,EAAE,CAAC;YACnB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,EAAC,EAAE,EAAE,aAAa,CAAC,EAAE,EAAE,KAAK,EAAC,CAAC,CAAC;QAC3D,CAAC;IACH,CAAC;IAED,KAAK,CAAC,UAAU;QACd,IAAI,IAAI,CAAC,aAAa,EAAE,CAAC;YACvB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,EAAE,kBAAkB,CAAC,CAAC;QACpD,CAAC;QACD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;IACxB,CAAC;CACF;AAOD,MAAM,OAAO,kBAAkB;IACpB,WAAW,CAAyD;IAC7E,UAAU,CAAS;IACnB,SAAS,GAAkC,IAAI,CAAC;IAChD,aAAa,GAAkC,IAAI,CAAC;IACpD,YAAY,UAAkE,EAAE,SAAiB;QAC/F,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;QAC9B,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;IAC9B,CAAC;IAED,YAAY,CAAC,SAAiC;QAC5C,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IAC7B,CAAC;IAED,eAAe,CAAC,YAAoC;QAClD,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;IACpC,CAAC;IAED,eAAe;QACb,OAAO,IAAI,CAAC,aAAa,CAAC;IAC5B,CAAC;IAED,cAAc,CAAC,OAAe;QAC5B,MAAM,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAC1C,gFAAgF;QAChF,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE,CAAC;YAC7B,aAAa,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC;QAC5C,CAAC;QACD,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC;IACjE,CAAC;IAED,YAAY;QACV,OAAO,IAAI,CAAC,UAAU,CAAC;IACzB,CAAC;IAED,KAAK,CAAC,UAAU;QACd,IAAI,IAAI,CAAC,aAAa,EAAE,CAAC;YACvB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,EAAE,kBAAkB,CAAC,CAAC;QACpD,CAAC;QACD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;IACxB,CAAC;CACF;AAED,MAAM,CAAC,KAAK,UAAU,kBAAkB,CACpC,gBAAqC,EACrC,gBAAsE;IACxE,cAAc,CAAC,mBAAmB,CAAC,mBAAmB,CAAC,UAAU,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,EAAE,gBAAgB,CAAC,CAAC,CAAC;IACrH,MAAM,gBAAgB,EAAE,CAAC;IACzB,IAAI,CAAC,qBAAqB,CAAC,6BAA6B,CAAC,eAAe,EAAE,CAAC;AAC7E,CAAC;AAED,SAAS,oBAAoB,CAAC,gBAAsE;IAElG,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC;QACtC,OAAO,IAAI,qBAAqB,CAAC,gBAAgB,CAAC,CAAC;IACrD,CAAC;IAED,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;IACtD,MAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IACxD,IAAI,OAAO,IAAI,QAAQ,EAAE,CAAC;QACxB,MAAM,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,QAAQ,OAAO,EAAE,CAAC,CAAC,CAAC,SAAS,QAAQ,EAAE,CAAoC,CAAC;QAClG,OAAO,IAAI,mBAAmB,CAAC,EAAE,EAAE,gBAAgB,CAAC,CAAC;IACvD,CAAC;IAED,MAAM,eAAe,GAAG,IAAI,CAAC,qBAAqB,CAAC,6BAA6B,CAAC,YAAY,EAAE,CAAC;IAChG,IAAI,eAAe,EAAE,CAAC;QACpB,mGAAmG;QACnG,OAAO,IAAI,cAAc,EAAE,CAAC;IAC9B,CAAC;IAED,OAAO,IAAI,cAAc,EAAE,CAAC;AAC9B,CAAC","sourcesContent":["// Copyright 2015 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Common from '../common/common.js';\nimport * as Host from '../host/host.js';\nimport type * as Platform from '../platform/platform.js';\nimport * as ProtocolClient from '../protocol_client/protocol_client.js';\nimport * as Root from '../root/root.js';\n\nimport {RehydratingConnection} from './RehydratingConnection.js';\n\nconst UIStrings = {\n  /**\n   * @description Text on the remote debugging window to indicate the connection is lost\n   */\n  websocketDisconnected: 'WebSocket disconnected',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('core/sdk/Connections.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class MainConnection implements ProtocolClient.ConnectionTransport.ConnectionTransport {\n  onMessage: ((arg0: Object|string) => void)|null = null;\n  #onDisconnect: ((arg0: string) => void)|null = null;\n  #messageBuffer = '';\n  #messageSize = 0;\n  readonly #eventListeners: Common.EventTarget.EventDescriptor[];\n  constructor() {\n    this.#eventListeners = [\n      Host.InspectorFrontendHost.InspectorFrontendHostInstance.events.addEventListener(\n          Host.InspectorFrontendHostAPI.Events.DispatchMessage, this.dispatchMessage, this),\n      Host.InspectorFrontendHost.InspectorFrontendHostInstance.events.addEventListener(\n          Host.InspectorFrontendHostAPI.Events.DispatchMessageChunk, this.dispatchMessageChunk, this),\n    ];\n  }\n\n  setOnMessage(onMessage: (arg0: Object|string) => void): void {\n    this.onMessage = onMessage;\n  }\n\n  setOnDisconnect(onDisconnect: (arg0: string) => void): void {\n    this.#onDisconnect = onDisconnect;\n  }\n\n  sendRawMessage(message: string): void {\n    if (this.onMessage) {\n      Host.InspectorFrontendHost.InspectorFrontendHostInstance.sendMessageToBackend(message);\n    }\n  }\n\n  private dispatchMessage(event: Common.EventTarget.EventTargetEvent<string>): void {\n    if (this.onMessage) {\n      this.onMessage.call(null, event.data);\n    }\n  }\n\n  private dispatchMessageChunk(\n      event: Common.EventTarget.EventTargetEvent<Host.InspectorFrontendHostAPI.DispatchMessageChunkEvent>): void {\n    const {messageChunk, messageSize} = event.data;\n    if (messageSize) {\n      this.#messageBuffer = '';\n      this.#messageSize = messageSize;\n    }\n    this.#messageBuffer += messageChunk;\n    if (this.#messageBuffer.length === this.#messageSize && this.onMessage) {\n      this.onMessage.call(null, this.#messageBuffer);\n      this.#messageBuffer = '';\n      this.#messageSize = 0;\n    }\n  }\n\n  async disconnect(): Promise<void> {\n    const onDisconnect = this.#onDisconnect;\n    Common.EventTarget.removeEventListeners(this.#eventListeners);\n    this.#onDisconnect = null;\n    this.onMessage = null;\n\n    if (onDisconnect) {\n      onDisconnect.call(null, 'force disconnect');\n    }\n  }\n}\n\nexport class WebSocketConnection implements ProtocolClient.ConnectionTransport.ConnectionTransport {\n  #socket: WebSocket|null;\n  onMessage: ((arg0: Object|string) => void)|null = null;\n  #onDisconnect: ((arg0: string) => void)|null = null;\n  #onWebSocketDisconnect: ((message: Platform.UIString.LocalizedString) => void)|null;\n  #connected = false;\n  #messages: string[] = [];\n  constructor(\n      url: Platform.DevToolsPath.UrlString,\n      onWebSocketDisconnect: (message: Platform.UIString.LocalizedString) => void) {\n    this.#socket = new WebSocket(url);\n    this.#socket.onerror = this.onError.bind(this);\n    this.#socket.onopen = this.onOpen.bind(this);\n    this.#socket.onmessage = (messageEvent: MessageEvent<string>): void => {\n      if (this.onMessage) {\n        this.onMessage.call(null, messageEvent.data);\n      }\n    };\n    this.#socket.onclose = this.onClose.bind(this);\n\n    this.#onWebSocketDisconnect = onWebSocketDisconnect;\n  }\n\n  setOnMessage(onMessage: (arg0: Object|string) => void): void {\n    this.onMessage = onMessage;\n  }\n\n  setOnDisconnect(onDisconnect: (arg0: string) => void): void {\n    this.#onDisconnect = onDisconnect;\n  }\n\n  private onError(): void {\n    if (this.#onWebSocketDisconnect) {\n      this.#onWebSocketDisconnect.call(null, i18nString(UIStrings.websocketDisconnected));\n    }\n    if (this.#onDisconnect) {\n      // This is called if error occurred while connecting.\n      this.#onDisconnect.call(null, 'connection failed');\n    }\n    this.close();\n  }\n\n  private onOpen(): void {\n    this.#connected = true;\n    if (this.#socket) {\n      this.#socket.onerror = console.error;\n      for (const message of this.#messages) {\n        this.#socket.send(message);\n      }\n    }\n    this.#messages = [];\n  }\n\n  private onClose(): void {\n    if (this.#onWebSocketDisconnect) {\n      this.#onWebSocketDisconnect.call(null, i18nString(UIStrings.websocketDisconnected));\n    }\n    if (this.#onDisconnect) {\n      this.#onDisconnect.call(null, 'websocket closed');\n    }\n    this.close();\n  }\n\n  private close(callback?: (() => void)): void {\n    if (this.#socket) {\n      this.#socket.onerror = null;\n      this.#socket.onopen = null;\n      this.#socket.onclose = callback || null;\n      this.#socket.onmessage = null;\n      this.#socket.close();\n      this.#socket = null;\n    }\n    this.#onWebSocketDisconnect = null;\n  }\n\n  sendRawMessage(message: string): void {\n    if (this.#connected && this.#socket) {\n      this.#socket.send(message);\n    } else {\n      this.#messages.push(message);\n    }\n  }\n\n  disconnect(): Promise<void> {\n    return new Promise(fulfill => {\n      this.close(() => {\n        if (this.#onDisconnect) {\n          this.#onDisconnect.call(null, 'force disconnect');\n        }\n        fulfill();\n      });\n    });\n  }\n}\n\nexport class StubConnection implements ProtocolClient.ConnectionTransport.ConnectionTransport {\n  onMessage: ((arg0: Object|string) => void)|null = null;\n  #onDisconnect: ((arg0: string) => void)|null = null;\n\n  setOnMessage(onMessage: (arg0: Object|string) => void): void {\n    this.onMessage = onMessage;\n  }\n\n  setOnDisconnect(onDisconnect: (arg0: string) => void): void {\n    this.#onDisconnect = onDisconnect;\n  }\n\n  sendRawMessage(message: string): void {\n    window.setTimeout(this.respondWithError.bind(this, message), 0);\n  }\n\n  private respondWithError(message: string): void {\n    const messageObject = JSON.parse(message);\n    const error = {\n      message: 'This is a stub connection, can\\'t dispatch message.',\n      code: ProtocolClient.InspectorBackend.DevToolsStubErrorCode,\n      data: messageObject,\n    };\n    if (this.onMessage) {\n      this.onMessage.call(null, {id: messageObject.id, error});\n    }\n  }\n\n  async disconnect(): Promise<void> {\n    if (this.#onDisconnect) {\n      this.#onDisconnect.call(null, 'force disconnect');\n    }\n    this.#onDisconnect = null;\n    this.onMessage = null;\n  }\n}\n\nexport interface ParallelConnectionInterface extends ProtocolClient.ConnectionTransport.ConnectionTransport {\n  getSessionId: () => string;\n  getOnDisconnect: () => ((arg0: string) => void) | null;\n}\n\nexport class ParallelConnection implements ParallelConnectionInterface {\n  readonly #connection: ProtocolClient.ConnectionTransport.ConnectionTransport;\n  #sessionId: string;\n  onMessage: ((arg0: Object) => void)|null = null;\n  #onDisconnect: ((arg0: string) => void)|null = null;\n  constructor(connection: ProtocolClient.ConnectionTransport.ConnectionTransport, sessionId: string) {\n    this.#connection = connection;\n    this.#sessionId = sessionId;\n  }\n\n  setOnMessage(onMessage: (arg0: Object) => void): void {\n    this.onMessage = onMessage;\n  }\n\n  setOnDisconnect(onDisconnect: (arg0: string) => void): void {\n    this.#onDisconnect = onDisconnect;\n  }\n\n  getOnDisconnect(): ((arg0: string) => void)|null {\n    return this.#onDisconnect;\n  }\n\n  sendRawMessage(message: string): void {\n    const messageObject = JSON.parse(message);\n    // If the message isn't for a specific session, it must be for the root session.\n    if (!messageObject.sessionId) {\n      messageObject.sessionId = this.#sessionId;\n    }\n    this.#connection.sendRawMessage(JSON.stringify(messageObject));\n  }\n\n  getSessionId(): string {\n    return this.#sessionId;\n  }\n\n  async disconnect(): Promise<void> {\n    if (this.#onDisconnect) {\n      this.#onDisconnect.call(null, 'force disconnect');\n    }\n    this.#onDisconnect = null;\n    this.onMessage = null;\n  }\n}\n\nexport async function initMainConnection(\n    createRootTarget: () => Promise<void>,\n    onConnectionLost: (message: Platform.UIString.LocalizedString) => void): Promise<void> {\n  ProtocolClient.ConnectionTransport.ConnectionTransport.setFactory(createMainConnection.bind(null, onConnectionLost));\n  await createRootTarget();\n  Host.InspectorFrontendHost.InspectorFrontendHostInstance.connectionReady();\n}\n\nfunction createMainConnection(onConnectionLost: (message: Platform.UIString.LocalizedString) => void):\n    ProtocolClient.ConnectionTransport.ConnectionTransport {\n  if (Root.Runtime.Runtime.isTraceApp()) {\n    return new RehydratingConnection(onConnectionLost);\n  }\n\n  const wsParam = Root.Runtime.Runtime.queryParam('ws');\n  const wssParam = Root.Runtime.Runtime.queryParam('wss');\n  if (wsParam || wssParam) {\n    const ws = (wsParam ? `ws://${wsParam}` : `wss://${wssParam}`) as Platform.DevToolsPath.UrlString;\n    return new WebSocketConnection(ws, onConnectionLost);\n  }\n\n  const notEmbeddedOrWs = Host.InspectorFrontendHost.InspectorFrontendHostInstance.isHostedMode();\n  if (notEmbeddedOrWs) {\n    // eg., hosted mode (e.g. `http://localhost:9222/devtools/inspector.html`) without a WebSocket URL,\n    return new StubConnection();\n  }\n\n  return new MainConnection();\n}\n"]}