{"version":3,"file":"ConsoleModel.js","sourceRoot":"","sources":["../../../../../../front_end/core/sdk/ConsoleModel.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2011 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Protocol from '../../generated/protocol.js';\nimport * as Common from '../common/common.js';\nimport * as Host from '../host/host.js';\nimport * as i18n from '../i18n/i18n.js';\nimport * as Platform from '../platform/platform.js';\n\nimport {FrontendMessageType} from './ConsoleModelTypes.js';\nimport {CPUProfilerModel, type EventData, Events as CPUProfilerModelEvents} from './CPUProfilerModel.js';\nimport {\n  BreakpointType,\n  COND_BREAKPOINT_SOURCE_URL,\n  Events as DebuggerModelEvents,\n  type Location,\n  LOGPOINT_SOURCE_URL,\n} from './DebuggerModel.js';\nimport {LogModel} from './LogModel.js';\nimport {RemoteObject} from './RemoteObject.js';\nimport {\n  Events as ResourceTreeModelEvents,\n  type PrimaryPageChangeType,\n  type ResourceTreeFrame,\n  ResourceTreeModel,\n} from './ResourceTreeModel.js';\nimport {\n  type ConsoleAPICall,\n  Events as RuntimeModelEvents,\n  type ExceptionWithTimestamp,\n  type ExecutionContext,\n  type QueryObjectRequestedEvent,\n  RuntimeModel,\n} from './RuntimeModel.js';\nimport {SDKModel} from './SDKModel.js';\nimport {Capability, type Target, Type} from './Target.js';\nimport {TargetManager} from './TargetManager.js';\n\nexport {FrontendMessageType} from './ConsoleModelTypes.js';\n\nconst UIStrings = {\n  /**\n   * @description Text shown when the main frame (page) of the website was navigated to a different URL.\n   * @example {https://example.com} PH1\n   */\n  navigatedToS: 'Navigated to {PH1}',\n  /**\n   * @description Text shown when the main frame (page) of the website was navigated to a different URL\n   * and the page was restored from back/forward cache (https://web.dev/bfcache/).\n   * @example {https://example.com} PH1\n   */\n  bfcacheNavigation: 'Navigation to {PH1} was restored from back/forward cache (see https://web.dev/bfcache/)',\n  /**\n   * @description Text shown in the console when a performance profile (with the given name) was started.\n   * @example {title} PH1\n   */\n  profileSStarted: 'Profile \\'\\'{PH1}\\'\\' started.',\n  /**\n   * @description Text shown in the console when a performance profile (with the given name) was stopped.\n   * @example {name} PH1\n   */\n  profileSFinished: 'Profile \\'\\'{PH1}\\'\\' finished.',\n  /**\n   * @description Error message shown in the console after the user tries to save a JavaScript value to a temporary variable.\n   */\n  failedToSaveToTempVariable: 'Failed to save to temp variable.',\n} as const;\n\nconst str_ = i18n.i18n.registerUIStrings('core/sdk/ConsoleModel.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class ConsoleModel extends SDKModel<EventTypes> {\n  #messages: ConsoleMessage[] = [];\n  readonly #messagesByTimestamp = new Platform.MapUtilities.Multimap<number, ConsoleMessage>();\n  readonly #messageByExceptionId = new Map<RuntimeModel, Map<number, ConsoleMessage>>();\n  #warnings = 0;\n  #errors = 0;\n  #violations = 0;\n  #pageLoadSequenceNumber = 0;\n  readonly #targetListeners = new WeakMap<Target, Common.EventTarget.EventDescriptor[]>();\n\n  constructor(target: Target) {\n    super(target);\n\n    const resourceTreeModel = target.model(ResourceTreeModel);\n    if (!resourceTreeModel || resourceTreeModel.cachedResourcesLoaded()) {\n      this.initTarget(target);\n      return;\n    }\n\n    const eventListener = resourceTreeModel.addEventListener(ResourceTreeModelEvents.CachedResourcesLoaded, () => {\n      Common.EventTarget.removeEventListeners([eventListener]);\n      this.initTarget(target);\n    });\n  }\n\n  private initTarget(target: Target): void {\n    const eventListeners = [];\n\n    const cpuProfilerModel = target.model(CPUProfilerModel);\n    if (cpuProfilerModel) {\n      eventListeners.push(cpuProfilerModel.addEventListener(\n          CPUProfilerModelEvents.CONSOLE_PROFILE_STARTED, this.consoleProfileStarted.bind(this, cpuProfilerModel)));\n      eventListeners.push(cpuProfilerModel.addEventListener(\n          CPUProfilerModelEvents.CONSOLE_PROFILE_FINISHED, this.consoleProfileFinished.bind(this, cpuProfilerModel)));\n    }\n\n    const resourceTreeModel = target.model(ResourceTreeModel);\n    if (resourceTreeModel && target.parentTarget()?.type() !== Type.FRAME) {\n      eventListeners.push(resourceTreeModel.addEventListener(\n          ResourceTreeModelEvents.PrimaryPageChanged, this.primaryPageChanged, this));\n    }\n\n    const runtimeModel = target.model(RuntimeModel);\n    if (runtimeModel) {\n      eventListeners.push(runtimeModel.addEventListener(\n          RuntimeModelEvents.ExceptionThrown, this.exceptionThrown.bind(this, runtimeModel)));\n      eventListeners.push(runtimeModel.addEventListener(\n          RuntimeModelEvents.ExceptionRevoked, this.exceptionRevoked.bind(this, runtimeModel)));\n      eventListeners.push(runtimeModel.addEventListener(\n          RuntimeModelEvents.ConsoleAPICalled, this.consoleAPICalled.bind(this, runtimeModel)));\n      if (target.parentTarget()?.type() !== Type.FRAME) {\n        eventListeners.push(runtimeModel.debuggerModel().addEventListener(\n            DebuggerModelEvents.GlobalObjectCleared, this.clearIfNecessary, this));\n      }\n      eventListeners.push(runtimeModel.addEventListener(\n          RuntimeModelEvents.QueryObjectRequested, this.queryObjectRequested.bind(this, runtimeModel)));\n    }\n\n    this.#targetListeners.set(target, eventListeners);\n  }\n\n  targetRemoved(target: Target): void {\n    const runtimeModel = target.model(RuntimeModel);\n    if (runtimeModel) {\n      this.#messageByExceptionId.delete(runtimeModel);\n    }\n    Common.EventTarget.removeEventListeners(this.#targetListeners.get(target) || []);\n  }\n\n  async evaluateCommandInConsole(\n      executionContext: ExecutionContext, originatingMessage: ConsoleMessage, expression: string,\n      useCommandLineAPI: boolean): Promise<void> {\n    const result = await executionContext.evaluate(\n        {\n          expression,\n          objectGroup: 'console',\n          includeCommandLineAPI: useCommandLineAPI,\n          silent: false,\n          returnByValue: false,\n          generatePreview: true,\n          replMode: true,\n          allowUnsafeEvalBlockedByCSP: false,\n        },\n        Common.Settings.Settings.instance().moduleSetting('console-user-activation-eval').get(),\n        /* awaitPromise */ false);\n    Host.userMetrics.actionTaken(Host.UserMetrics.Action.ConsoleEvaluated);\n    if ('error' in result) {\n      return;\n    }\n    await Common.Console.Console.instance().showPromise();\n    this.dispatchEventToListeners(\n        Events.CommandEvaluated,\n        {result: result.object, commandMessage: originatingMessage, exceptionDetails: result.exceptionDetails});\n  }\n\n  addCommandMessage(executionContext: ExecutionContext, text: string): ConsoleMessage {\n    const commandMessage = new ConsoleMessage(\n        executionContext.runtimeModel, Protocol.Log.LogEntrySource.Javascript, null, text,\n        {type: FrontendMessageType.Command});\n    commandMessage.setExecutionContextId(executionContext.id);\n    this.addMessage(commandMessage);\n    return commandMessage;\n  }\n\n  addMessage(msg: ConsoleMessage): void {\n    msg.setPageLoadSequenceNumber(this.#pageLoadSequenceNumber);\n    if (msg.source === Common.Console.FrontendMessageSource.ConsoleAPI &&\n        msg.type === Protocol.Runtime.ConsoleAPICalledEventType.Clear) {\n      this.clearIfNecessary();\n    }\n\n    this.#messages.push(msg);\n    this.#messagesByTimestamp.set(msg.timestamp, msg);\n    const runtimeModel = msg.runtimeModel();\n    const exceptionId = msg.getExceptionId();\n    if (exceptionId && runtimeModel) {\n      let modelMap = this.#messageByExceptionId.get(runtimeModel);\n      if (!modelMap) {\n        modelMap = new Map();\n        this.#messageByExceptionId.set(runtimeModel, modelMap);\n      }\n      modelMap.set(exceptionId, msg);\n    }\n    this.incrementErrorWarningCount(msg);\n    this.dispatchEventToListeners(Events.MessageAdded, msg);\n  }\n\n  private exceptionThrown(\n      runtimeModel: RuntimeModel, event: Common.EventTarget.EventTargetEvent<ExceptionWithTimestamp>): void {\n    const exceptionWithTimestamp = event.data;\n    const affectedResources = extractExceptionMetaData(exceptionWithTimestamp.details.exceptionMetaData);\n    const consoleMessage = ConsoleMessage.fromException(\n        runtimeModel, exceptionWithTimestamp.details, undefined, exceptionWithTimestamp.timestamp, undefined,\n        affectedResources);\n    consoleMessage.setExceptionId(exceptionWithTimestamp.details.exceptionId);\n    this.addMessage(consoleMessage);\n  }\n\n  private exceptionRevoked(runtimeModel: RuntimeModel, event: Common.EventTarget.EventTargetEvent<number>): void {\n    const exceptionId = event.data;\n    const modelMap = this.#messageByExceptionId.get(runtimeModel);\n    const exceptionMessage = modelMap ? modelMap.get(exceptionId) : null;\n    if (!exceptionMessage) {\n      return;\n    }\n    this.#errors--;\n    exceptionMessage.level = Protocol.Log.LogEntryLevel.Verbose;\n    this.dispatchEventToListeners(Events.MessageUpdated, exceptionMessage);\n  }\n\n  private consoleAPICalled(runtimeModel: RuntimeModel, event: Common.EventTarget.EventTargetEvent<ConsoleAPICall>):\n      void {\n    const call = event.data;\n    let level: Protocol.Log.LogEntryLevel = Protocol.Log.LogEntryLevel.Info;\n    if (call.type === Protocol.Runtime.ConsoleAPICalledEventType.Debug) {\n      level = Protocol.Log.LogEntryLevel.Verbose;\n    } else if (\n        call.type === Protocol.Runtime.ConsoleAPICalledEventType.Error ||\n        call.type === Protocol.Runtime.ConsoleAPICalledEventType.Assert) {\n      level = Protocol.Log.LogEntryLevel.Error;\n    } else if (call.type === Protocol.Runtime.ConsoleAPICalledEventType.Warning) {\n      level = Protocol.Log.LogEntryLevel.Warning;\n    } else if (\n        call.type === Protocol.Runtime.ConsoleAPICalledEventType.Info ||\n        call.type === Protocol.Runtime.ConsoleAPICalledEventType.Log) {\n      level = Protocol.Log.LogEntryLevel.Info;\n    }\n    let message = '';\n    if (call.args.length && call.args[0].unserializableValue) {\n      message = call.args[0].unserializableValue;\n    } else if (\n        call.args.length &&\n        ((typeof call.args[0].value !== 'object' && typeof call.args[0].value !== 'undefined') ||\n         call.args[0].value === null)) {\n      message = String(call.args[0].value);\n    } else if (call.args.length && call.args[0].description) {\n      message = call.args[0].description;\n    }\n    const callFrame = call.stackTrace?.callFrames.length ? call.stackTrace.callFrames[0] : null;\n    const details = {\n      type: call.type,\n      url: callFrame?.url as Platform.DevToolsPath.UrlString | undefined,\n      line: callFrame?.lineNumber,\n      column: callFrame?.columnNumber,\n      parameters: call.args,\n      stackTrace: call.stackTrace,\n      timestamp: call.timestamp,\n      executionContextId: call.executionContextId,\n      context: call.context,\n    };\n    const consoleMessage =\n        new ConsoleMessage(runtimeModel, Common.Console.FrontendMessageSource.ConsoleAPI, level, (message), details);\n    for (const msg of this.#messagesByTimestamp.get(consoleMessage.timestamp).values()) {\n      if (consoleMessage.isEqual(msg)) {\n        return;\n      }\n    }\n    this.addMessage(consoleMessage);\n  }\n\n  private queryObjectRequested(\n      runtimeModel: RuntimeModel, event: Common.EventTarget.EventTargetEvent<QueryObjectRequestedEvent>): void {\n    const {objects, executionContextId} = event.data;\n    const details = {\n      type: FrontendMessageType.QueryObjectResult,\n      parameters: [objects],\n      executionContextId,\n    };\n    const consoleMessage = new ConsoleMessage(\n        runtimeModel, Common.Console.FrontendMessageSource.ConsoleAPI, Protocol.Log.LogEntryLevel.Info, '', details);\n    this.addMessage(consoleMessage);\n  }\n\n  private clearIfNecessary(): void {\n    if (!Common.Settings.Settings.instance().moduleSetting('preserve-console-log').get()) {\n      this.clear();\n    }\n    ++this.#pageLoadSequenceNumber;\n  }\n\n  private primaryPageChanged(\n      event: Common.EventTarget.EventTargetEvent<{frame: ResourceTreeFrame, type: PrimaryPageChangeType}>): void {\n    if (Common.Settings.Settings.instance().moduleSetting('preserve-console-log').get()) {\n      const {frame} = event.data;\n      if (frame.backForwardCacheDetails.restoredFromCache) {\n        Common.Console.Console.instance().log(i18nString(UIStrings.bfcacheNavigation, {PH1: frame.url}));\n      } else {\n        Common.Console.Console.instance().log(i18nString(UIStrings.navigatedToS, {PH1: frame.url}));\n      }\n    }\n  }\n\n  private consoleProfileStarted(\n      cpuProfilerModel: CPUProfilerModel, event: Common.EventTarget.EventTargetEvent<EventData>): void {\n    const {data} = event;\n    this.addConsoleProfileMessage(\n        cpuProfilerModel, Protocol.Runtime.ConsoleAPICalledEventType.Profile, data.scriptLocation,\n        i18nString(UIStrings.profileSStarted, {PH1: data.title}));\n  }\n\n  private consoleProfileFinished(\n      cpuProfilerModel: CPUProfilerModel, event: Common.EventTarget.EventTargetEvent<EventData>): void {\n    const {data} = event;\n    this.addConsoleProfileMessage(\n        cpuProfilerModel, Protocol.Runtime.ConsoleAPICalledEventType.ProfileEnd, data.scriptLocation,\n        i18nString(UIStrings.profileSFinished, {PH1: data.title}));\n  }\n\n  private addConsoleProfileMessage(\n      cpuProfilerModel: CPUProfilerModel, type: MessageType, scriptLocation: Location, messageText: string): void {\n    const script = scriptLocation.script();\n    const callFrames = [{\n      functionName: '',\n      scriptId: scriptLocation.scriptId,\n      url: script ? script.contentURL() : '',\n      lineNumber: scriptLocation.lineNumber,\n      columnNumber: scriptLocation.columnNumber || 0,\n    }];\n    this.addMessage(new ConsoleMessage(\n        cpuProfilerModel.runtimeModel(), Common.Console.FrontendMessageSource.ConsoleAPI,\n        Protocol.Log.LogEntryLevel.Info, messageText, {type, stackTrace: {callFrames}}));\n  }\n\n  private incrementErrorWarningCount(msg: ConsoleMessage): void {\n    if (msg.source === Protocol.Log.LogEntrySource.Violation) {\n      this.#violations++;\n      return;\n    }\n    switch (msg.level) {\n      case Protocol.Log.LogEntryLevel.Warning:\n        this.#warnings++;\n        break;\n      case Protocol.Log.LogEntryLevel.Error:\n        this.#errors++;\n        break;\n    }\n  }\n\n  messages(): ConsoleMessage[] {\n    return this.#messages;\n  }\n\n  // messages[] are not ordered by timestamp.\n  static allMessagesUnordered(): ConsoleMessage[] {\n    const messages = [];\n    for (const target of TargetManager.instance().targets()) {\n      const targetMessages = target.model(ConsoleModel)?.messages() || [];\n      messages.push(...targetMessages);\n    }\n    return messages;\n  }\n\n  static requestClearMessages(): void {\n    for (const logModel of TargetManager.instance().models(LogModel)) {\n      logModel.requestClear();\n    }\n    for (const runtimeModel of TargetManager.instance().models(RuntimeModel)) {\n      runtimeModel.discardConsoleEntries();\n      // Runtime.discardConsoleEntries implies Runtime.releaseObjectGroup('console').\n      runtimeModel.releaseObjectGroup('live-expression');\n    }\n    for (const target of TargetManager.instance().targets()) {\n      target.model(ConsoleModel)?.clear();\n    }\n  }\n\n  private clear(): void {\n    this.#messages = [];\n    this.#messagesByTimestamp.clear();\n    this.#messageByExceptionId.clear();\n    this.#errors = 0;\n    this.#warnings = 0;\n    this.#violations = 0;\n    this.dispatchEventToListeners(Events.ConsoleCleared);\n  }\n\n  errors(): number {\n    return this.#errors;\n  }\n\n  static allErrors(): number {\n    let errors = 0;\n    for (const target of TargetManager.instance().targets()) {\n      errors += target.model(ConsoleModel)?.errors() || 0;\n    }\n    return errors;\n  }\n\n  warnings(): number {\n    return this.#warnings;\n  }\n\n  static allWarnings(): number {\n    let warnings = 0;\n    for (const target of TargetManager.instance().targets()) {\n      warnings += target.model(ConsoleModel)?.warnings() || 0;\n    }\n    return warnings;\n  }\n\n  violations(): number {\n    return this.#violations;\n  }\n\n  async saveToTempVariable(currentExecutionContext: ExecutionContext|null, remoteObject: RemoteObject|null):\n      Promise<void> {\n    if (!remoteObject || !currentExecutionContext) {\n      failedToSave(null);\n      return;\n    }\n    const executionContext = (currentExecutionContext);\n\n    const result = await executionContext.globalObject(/* objectGroup */ '', /* generatePreview */ false);\n    if ('error' in result || Boolean(result.exceptionDetails) || !result.object) {\n      failedToSave('object' in result && result.object || null);\n      return;\n    }\n\n    const globalObject = result.object;\n    const callFunctionResult =\n        await globalObject.callFunction(saveVariable, [RemoteObject.toCallArgument(remoteObject)]);\n    globalObject.release();\n    if (callFunctionResult.wasThrown || !callFunctionResult.object || callFunctionResult.object.type !== 'string') {\n      failedToSave(callFunctionResult.object || null);\n    } else {\n      const text = (callFunctionResult.object.value as string);\n      const message = this.addCommandMessage(executionContext, text);\n      void this.evaluateCommandInConsole(executionContext, message, text, /* useCommandLineAPI */ false);\n    }\n    if (callFunctionResult.object) {\n      callFunctionResult.object.release();\n    }\n\n    function saveVariable(this: Window, value: Protocol.Runtime.CallArgument): string {\n      const prefix = 'temp';\n      let index = 1;\n      while ((prefix + index) in this) {\n        ++index;\n      }\n      const name = prefix + index;\n      // @ts-expect-error Assignment to global object\n      this[name] = value;\n      return name;\n    }\n\n    function failedToSave(result: RemoteObject|null): void {\n      let message = i18nString(UIStrings.failedToSaveToTempVariable);\n      if (result) {\n        message = (message + ' ' + result.description as Common.UIString.LocalizedString);\n      }\n      Common.Console.Console.instance().error(message);\n    }\n  }\n}\n\nexport enum Events {\n  /* eslint-disable @typescript-eslint/naming-convention -- Used by web_tests. */\n  ConsoleCleared = 'ConsoleCleared',\n  MessageAdded = 'MessageAdded',\n  MessageUpdated = 'MessageUpdated',\n  CommandEvaluated = 'CommandEvaluated',\n  /* eslint-enable @typescript-eslint/naming-convention */\n}\n\nexport interface CommandEvaluatedEvent {\n  result: RemoteObject;\n  commandMessage: ConsoleMessage;\n  exceptionDetails?: Protocol.Runtime.ExceptionDetails|undefined;\n}\n\nexport interface EventTypes {\n  [Events.ConsoleCleared]: void;\n  [Events.MessageAdded]: ConsoleMessage;\n  [Events.MessageUpdated]: ConsoleMessage;\n  [Events.CommandEvaluated]: CommandEvaluatedEvent;\n}\n\nexport interface AffectedResources {\n  requestId?: Protocol.Network.RequestId;\n  issueId?: Protocol.Audits.IssueId;\n}\n\nfunction extractExceptionMetaData(metaData?: {\n  requestId?: Protocol.Network.RequestId,\n  issueId?: Protocol.Audits.IssueId,\n}): AffectedResources|undefined {\n  if (!metaData) {\n    return undefined;\n  }\n  return {requestId: metaData.requestId || undefined, issueId: metaData.issueId || undefined};\n}\n\nfunction areAffectedResourcesEquivalent(a?: AffectedResources, b?: AffectedResources): boolean {\n  // Not considering issueId, as that would prevent de-duplication of console #messages.\n  return a?.requestId === b?.requestId;\n}\n\nfunction areStackTracesEquivalent(\n    stackTrace1?: Protocol.Runtime.StackTrace, stackTrace2?: Protocol.Runtime.StackTrace): boolean {\n  if (!stackTrace1 !== !stackTrace2) {\n    return false;\n  }\n  if (!stackTrace1 || !stackTrace2) {\n    return true;\n  }\n  const callFrames1 = stackTrace1.callFrames;\n  const callFrames2 = stackTrace2.callFrames;\n  if (callFrames1.length !== callFrames2.length) {\n    return false;\n  }\n  for (let i = 0, n = callFrames1.length; i < n; ++i) {\n    if (callFrames1[i].scriptId !== callFrames2[i].scriptId ||\n        callFrames1[i].functionName !== callFrames2[i].functionName ||\n        callFrames1[i].lineNumber !== callFrames2[i].lineNumber ||\n        callFrames1[i].columnNumber !== callFrames2[i].columnNumber) {\n      return false;\n    }\n  }\n  return areStackTracesEquivalent(stackTrace1.parent, stackTrace2.parent);\n}\n\nexport interface ConsoleMessageDetails {\n  type?: MessageType;\n  url?: Platform.DevToolsPath.UrlString;\n  line?: number;\n  column?: number;\n  parameters?: Array<string|RemoteObject|Protocol.Runtime.RemoteObject>;\n  stackTrace?: Protocol.Runtime.StackTrace;\n  timestamp?: number;\n  executionContextId?: number;\n  scriptId?: Protocol.Runtime.ScriptId;\n  workerId?: string;\n  context?: string;\n  affectedResources?: AffectedResources;\n  category?: Protocol.Log.LogEntryCategory;\n  isCookieReportIssue?: boolean;\n}\n\nexport class ConsoleMessage {\n  readonly #runtimeModel: RuntimeModel|null;\n  source: MessageSource;\n  level: Protocol.Log.LogEntryLevel|null;\n  messageText: string;\n  readonly type: MessageType;\n  url: Platform.DevToolsPath.UrlString|undefined;\n  line: number;\n  column: number;\n  parameters: Array<string|RemoteObject|Protocol.Runtime.RemoteObject>|undefined;\n  stackTrace: Protocol.Runtime.StackTrace|undefined;\n  timestamp: number;\n  #executionContextId: number;\n  scriptId?: Protocol.Runtime.ScriptId;\n  workerId?: string;\n  context?: string;\n  #originatingConsoleMessage: ConsoleMessage|null = null;\n  #pageLoadSequenceNumber?: number = undefined;\n  #exceptionId?: number = undefined;\n  #affectedResources?: AffectedResources;\n  category?: Protocol.Log.LogEntryCategory;\n  isCookieReportIssue = false;\n\n  /**\n   * The parent frame of the `console.log` call of logpoints or conditional breakpoints\n   * if they called `console.*` explicitly. The parent frame is where V8 paused\n   * and consequently where the logpoint is set.\n   *\n   * Is `null` for page console.logs, commands, command results, etc.\n   */\n  readonly stackFrameWithBreakpoint: Protocol.Runtime.CallFrame|null = null;\n  readonly #originatingBreakpointType: BreakpointType|null = null;\n\n  constructor(\n      runtimeModel: RuntimeModel|null, source: MessageSource, level: Protocol.Log.LogEntryLevel|null,\n      messageText: string, details?: ConsoleMessageDetails) {\n    this.#runtimeModel = runtimeModel;\n    this.source = source;\n    this.level = (level);\n    this.messageText = messageText;\n    this.type = details?.type || Protocol.Runtime.ConsoleAPICalledEventType.Log;\n    this.url = details?.url;\n    this.line = details?.line || 0;\n    this.column = details?.column || 0;\n    this.parameters = details?.parameters;\n    this.stackTrace = details?.stackTrace;\n    this.timestamp = details?.timestamp || Date.now();\n    this.#executionContextId = details?.executionContextId || 0;\n    this.scriptId = details?.scriptId;\n    this.workerId = details?.workerId;\n    this.#affectedResources = details?.affectedResources;\n    this.category = details?.category;\n    this.isCookieReportIssue = Boolean(details?.isCookieReportIssue);\n\n    if (!this.#executionContextId && this.#runtimeModel) {\n      if (this.scriptId) {\n        this.#executionContextId = this.#runtimeModel.executionContextIdForScriptId(this.scriptId);\n      } else if (this.stackTrace) {\n        this.#executionContextId = this.#runtimeModel.executionContextForStackTrace(this.stackTrace);\n      }\n    }\n\n    if (details?.context) {\n      const match = details?.context.match(/[^#]*/);\n      this.context = match?.[0];\n    }\n\n    if (this.stackTrace) {\n      const {callFrame, type} = ConsoleMessage.#stackFrameWithBreakpoint(this.stackTrace);\n      this.stackFrameWithBreakpoint = callFrame;\n      this.#originatingBreakpointType = type;\n    }\n  }\n\n  getAffectedResources(): AffectedResources|undefined {\n    return this.#affectedResources;\n  }\n\n  setPageLoadSequenceNumber(pageLoadSequenceNumber: number): void {\n    this.#pageLoadSequenceNumber = pageLoadSequenceNumber;\n  }\n\n  static fromException(\n      runtimeModel: RuntimeModel, exceptionDetails: Protocol.Runtime.ExceptionDetails,\n      messageType?: Protocol.Runtime.ConsoleAPICalledEventType|FrontendMessageType, timestamp?: number,\n      forceUrl?: Platform.DevToolsPath.UrlString, affectedResources?: AffectedResources): ConsoleMessage {\n    const details = {\n      type: messageType,\n      url: forceUrl || exceptionDetails.url as Platform.DevToolsPath.UrlString,\n      line: exceptionDetails.lineNumber,\n      column: exceptionDetails.columnNumber,\n      parameters: exceptionDetails.exception ?\n          [RemoteObject.fromLocalObject(exceptionDetails.text), exceptionDetails.exception] :\n          undefined,\n      stackTrace: exceptionDetails.stackTrace,\n      timestamp,\n      executionContextId: exceptionDetails.executionContextId,\n      scriptId: exceptionDetails.scriptId,\n      affectedResources,\n    };\n    return new ConsoleMessage(\n        runtimeModel, Protocol.Log.LogEntrySource.Javascript, Protocol.Log.LogEntryLevel.Error,\n        RuntimeModel.simpleTextFromException(exceptionDetails), details);\n  }\n\n  runtimeModel(): RuntimeModel|null {\n    return this.#runtimeModel;\n  }\n\n  target(): Target|null {\n    return this.#runtimeModel ? this.#runtimeModel.target() : null;\n  }\n\n  setOriginatingMessage(originatingMessage: ConsoleMessage): void {\n    this.#originatingConsoleMessage = originatingMessage;\n    this.#executionContextId = originatingMessage.#executionContextId;\n  }\n\n  originatingMessage(): ConsoleMessage|null {\n    return this.#originatingConsoleMessage;\n  }\n\n  setExecutionContextId(executionContextId: number): void {\n    this.#executionContextId = executionContextId;\n  }\n\n  getExecutionContextId(): number {\n    return this.#executionContextId;\n  }\n\n  getExceptionId(): number|undefined {\n    return this.#exceptionId;\n  }\n\n  setExceptionId(exceptionId: number): void {\n    this.#exceptionId = exceptionId;\n  }\n\n  isGroupMessage(): boolean {\n    return this.type === Protocol.Runtime.ConsoleAPICalledEventType.StartGroup ||\n        this.type === Protocol.Runtime.ConsoleAPICalledEventType.StartGroupCollapsed ||\n        this.type === Protocol.Runtime.ConsoleAPICalledEventType.EndGroup;\n  }\n\n  isGroupStartMessage(): boolean {\n    return this.type === Protocol.Runtime.ConsoleAPICalledEventType.StartGroup ||\n        this.type === Protocol.Runtime.ConsoleAPICalledEventType.StartGroupCollapsed;\n  }\n\n  isErrorOrWarning(): boolean {\n    return (this.level === Protocol.Log.LogEntryLevel.Warning || this.level === Protocol.Log.LogEntryLevel.Error);\n  }\n\n  isGroupable(): boolean {\n    const isUngroupableError = this.level === Protocol.Log.LogEntryLevel.Error &&\n        (this.source === Protocol.Log.LogEntrySource.Javascript || this.source === Protocol.Log.LogEntrySource.Network);\n    return (\n        this.source !== Common.Console.FrontendMessageSource.ConsoleAPI && this.type !== FrontendMessageType.Command &&\n        this.type !== FrontendMessageType.Result && this.type !== FrontendMessageType.System && !isUngroupableError);\n  }\n\n  groupCategoryKey(): string {\n    return [this.source, this.level, this.type, this.#pageLoadSequenceNumber].join(':');\n  }\n\n  isEqual(msg: ConsoleMessage|null): boolean {\n    if (!msg) {\n      return false;\n    }\n\n    if (this.parameters) {\n      if (!msg.parameters || this.parameters.length !== msg.parameters.length) {\n        return false;\n      }\n\n      for (let i = 0; i < msg.parameters.length; ++i) {\n        const msgParam = msg.parameters[i];\n        const param = this.parameters[i];\n        if (typeof msgParam === 'string' || typeof param === 'string') {\n          // TODO(chromium:1136435): Remove this case.\n          return false;\n        }\n        if (msgParam.type === 'object' && msgParam.subtype !== 'error') {\n          if (!msgParam.objectId || msgParam.objectId !== param.objectId || msg.timestamp !== this.timestamp) {\n            return false;\n          }\n        }\n        if (param.type !== msgParam.type || param.value !== msgParam.value ||\n            param.description !== msgParam.description) {\n          return false;\n        }\n      }\n    }\n\n    return (this.runtimeModel() === msg.runtimeModel()) && (this.source === msg.source) && (this.type === msg.type) &&\n        (this.level === msg.level) && (this.line === msg.line) && (this.url === msg.url) &&\n        (this.scriptId === msg.scriptId) && (this.messageText === msg.messageText) &&\n        (this.#executionContextId === msg.#executionContextId) &&\n        areAffectedResourcesEquivalent(this.#affectedResources, msg.#affectedResources) &&\n        areStackTracesEquivalent(this.stackTrace, msg.stackTrace);\n  }\n\n  get originatesFromLogpoint(): boolean {\n    return this.#originatingBreakpointType === BreakpointType.LOGPOINT;\n  }\n\n  /** @returns true, iff this was a console.* call in a conditional breakpoint */\n  get originatesFromConditionalBreakpoint(): boolean {\n    return this.#originatingBreakpointType === BreakpointType.CONDITIONAL_BREAKPOINT;\n  }\n\n  static #stackFrameWithBreakpoint({callFrames}: Protocol.Runtime.StackTrace):\n      {callFrame: Protocol.Runtime.CallFrame|null, type: BreakpointType|null} {\n    // Note that breakpoint condition code could in theory call into user JS and back into\n    // \"condition-defined\" functions. This means that the top-most\n    // stack frame is not necessarily the `console.log` call, but there could be other things\n    // on top. We want the LAST marker frame in the stack.\n    // We search FROM THE TOP for the last marked stack frame and\n    // return it's parent (successor).\n    const markerSourceUrls = [COND_BREAKPOINT_SOURCE_URL, LOGPOINT_SOURCE_URL];\n    const lastBreakpointFrameIndex = callFrames.findLastIndex(({url}) => markerSourceUrls.includes(url));\n    if (lastBreakpointFrameIndex === -1 || lastBreakpointFrameIndex === callFrames.length - 1) {\n      // We either didn't find any breakpoint or we didn't capture enough stack\n      // frames and the breakpoint condition is the bottom-most frame.\n      return {callFrame: null, type: null};\n    }\n\n    const type = callFrames[lastBreakpointFrameIndex].url === LOGPOINT_SOURCE_URL ?\n        BreakpointType.LOGPOINT :\n        BreakpointType.CONDITIONAL_BREAKPOINT;\n    return {callFrame: callFrames[lastBreakpointFrameIndex + 1], type};\n  }\n}\n\nSDKModel.register(ConsoleModel, {capabilities: Capability.JS, autostart: true});\n\nexport type MessageSource = Protocol.Log.LogEntrySource|Common.Console.FrontendMessageSource;\nexport type MessageLevel = Protocol.Log.LogEntryLevel;\nexport type MessageType = Protocol.Runtime.ConsoleAPICalledEventType|FrontendMessageType;\n\nexport const MessageSourceDisplayName = new Map<MessageSource, string>(([\n  [Protocol.Log.LogEntrySource.XML, 'xml'],\n  [Protocol.Log.LogEntrySource.Javascript, 'javascript'],\n  [Protocol.Log.LogEntrySource.Network, 'network'],\n  [Common.Console.FrontendMessageSource.ConsoleAPI, 'console-api'],\n  [Protocol.Log.LogEntrySource.Storage, 'storage'],\n  [Protocol.Log.LogEntrySource.Appcache, 'appcache'],\n  [Protocol.Log.LogEntrySource.Rendering, 'rendering'],\n  [Common.Console.FrontendMessageSource.CSS, 'css'],\n  [Protocol.Log.LogEntrySource.Security, 'security'],\n  [Protocol.Log.LogEntrySource.Deprecation, 'deprecation'],\n  [Protocol.Log.LogEntrySource.Worker, 'worker'],\n  [Protocol.Log.LogEntrySource.Violation, 'violation'],\n  [Protocol.Log.LogEntrySource.Intervention, 'intervention'],\n  [Protocol.Log.LogEntrySource.Recommendation, 'recommendation'],\n  [Protocol.Log.LogEntrySource.Other, 'other'],\n  [Common.Console.FrontendMessageSource.ISSUE_PANEL, 'issue-panel'],\n]));\n"]}