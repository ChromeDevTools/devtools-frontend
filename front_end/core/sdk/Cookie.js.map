{"version":3,"file":"Cookie.js","sourceRoot":"","sources":["../../../../../../front_end/core/sdk/Cookie.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2019 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Protocol from '../../generated/protocol.js';\nimport type * as Platform from '../platform/platform.js';\n\nconst OPAQUE_PARTITION_KEY = '<opaque>';\n\nexport class Cookie {\n  readonly #name: string;\n  readonly #value: string;\n  readonly #type: Type|null|undefined;\n  #attributes = new Map<Attribute, string|number|boolean|undefined>();\n  #size = 0;\n  #priority: Protocol.Network.CookiePriority;\n  #cookieLine: string|null = null;\n  #partitionKey: Protocol.Network.CookiePartitionKey|undefined;\n\n  constructor(\n      name: string, value: string, type?: Type|null, priority?: Protocol.Network.CookiePriority,\n      partitionKey?: Protocol.Network.CookiePartitionKey) {\n    this.#name = name;\n    this.#value = value;\n    this.#type = type;\n    this.#priority = (priority || 'Medium' as Protocol.Network.CookiePriority);\n    this.#partitionKey = partitionKey;\n  }\n\n  static fromProtocolCookie(protocolCookie: Protocol.Network.Cookie): Cookie {\n    const cookie = new Cookie(protocolCookie.name, protocolCookie.value, null, protocolCookie.priority);\n    cookie.addAttribute(Attribute.DOMAIN, protocolCookie['domain']);\n    cookie.addAttribute(Attribute.PATH, protocolCookie['path']);\n    if (protocolCookie['expires']) {\n      cookie.addAttribute(Attribute.EXPIRES, protocolCookie['expires'] * 1000);\n    }\n    if (protocolCookie['httpOnly']) {\n      cookie.addAttribute(Attribute.HTTP_ONLY);\n    }\n    if (protocolCookie['secure']) {\n      cookie.addAttribute(Attribute.SECURE);\n    }\n    if (protocolCookie['sameSite']) {\n      cookie.addAttribute(Attribute.SAME_SITE, protocolCookie['sameSite']);\n    }\n    if ('sourcePort' in protocolCookie) {\n      cookie.addAttribute(Attribute.SOURCE_PORT, protocolCookie.sourcePort);\n    }\n    if ('sourceScheme' in protocolCookie) {\n      cookie.addAttribute(Attribute.SOURCE_SCHEME, protocolCookie.sourceScheme);\n    }\n    if ('partitionKey' in protocolCookie) {\n      if (protocolCookie.partitionKey) {\n        cookie.setPartitionKey(\n            protocolCookie.partitionKey.topLevelSite, protocolCookie.partitionKey.hasCrossSiteAncestor);\n      }\n    }\n    if ('partitionKeyOpaque' in protocolCookie && protocolCookie.partitionKeyOpaque) {\n      cookie.addAttribute(Attribute.PARTITION_KEY, OPAQUE_PARTITION_KEY);\n    }\n    cookie.setSize(protocolCookie['size']);\n    return cookie;\n  }\n\n  key(): string {\n    return (this.domain() || '-') + ' ' + this.name() + ' ' + (this.path() || '-') + ' ' +\n        (this.partitionKey() ?\n             (this.topLevelSite() + ' ' + (this.hasCrossSiteAncestor() ? 'cross_site' : 'same_site')) :\n             '-');\n  }\n\n  name(): string {\n    return this.#name;\n  }\n\n  value(): string {\n    return this.#value;\n  }\n\n  type(): Type|null|undefined {\n    return this.#type;\n  }\n\n  httpOnly(): boolean {\n    return this.#attributes.has(Attribute.HTTP_ONLY);\n  }\n\n  secure(): boolean {\n    return this.#attributes.has(Attribute.SECURE);\n  }\n\n  partitioned(): boolean {\n    return this.#attributes.has(Attribute.PARTITIONED) || Boolean(this.partitionKey()) || this.partitionKeyOpaque();\n  }\n\n  sameSite(): Protocol.Network.CookieSameSite {\n    // TODO(allada) This should not rely on #attributes and instead store them individually.\n    // when #attributes get added via addAttribute() they are lowercased, hence the lowercasing of samesite here\n    return this.#attributes.get(Attribute.SAME_SITE) as Protocol.Network.CookieSameSite;\n  }\n\n  partitionKey(): Protocol.Network.CookiePartitionKey {\n    return this.#partitionKey as Protocol.Network.CookiePartitionKey;\n  }\n\n  setPartitionKey(topLevelSite: string, hasCrossSiteAncestor: boolean): void {\n    this.#partitionKey = {topLevelSite, hasCrossSiteAncestor};\n    if (!this.#attributes.has(Attribute.PARTITIONED)) {\n      this.addAttribute(Attribute.PARTITIONED);\n    }\n  }\n\n  topLevelSite(): string {\n    if (!this.#partitionKey) {\n      return '';\n    }\n    return this.#partitionKey?.topLevelSite;\n  }\n\n  setTopLevelSite(topLevelSite: string, hasCrossSiteAncestor: boolean): void {\n    this.setPartitionKey(topLevelSite, hasCrossSiteAncestor);\n  }\n\n  hasCrossSiteAncestor(): boolean {\n    if (!this.#partitionKey) {\n      return false;\n    }\n    return this.#partitionKey?.hasCrossSiteAncestor;\n  }\n\n  setHasCrossSiteAncestor(hasCrossSiteAncestor: boolean): void {\n    if (!this.partitionKey() || !Boolean(this.topLevelSite())) {\n      return;\n    }\n    this.setPartitionKey(this.topLevelSite(), hasCrossSiteAncestor);\n  }\n\n  partitionKeyOpaque(): boolean {\n    if (!this.#partitionKey) {\n      return false;\n    }\n    return (this.topLevelSite() === OPAQUE_PARTITION_KEY);\n  }\n\n  setPartitionKeyOpaque(): void {\n    this.addAttribute(Attribute.PARTITION_KEY, OPAQUE_PARTITION_KEY);\n    this.setPartitionKey(OPAQUE_PARTITION_KEY, false);\n  }\n\n  priority(): Protocol.Network.CookiePriority {\n    return this.#priority;\n  }\n\n  session(): boolean {\n    // RFC 2965 suggests using Discard attribute to mark session cookies, but this does not seem to be widely used.\n    // Check for absence of explicitly max-age or expiry date instead.\n    return !(this.#attributes.has(Attribute.EXPIRES) || this.#attributes.has(Attribute.MAX_AGE));\n  }\n\n  path(): string {\n    return this.#attributes.get(Attribute.PATH) as string;\n  }\n\n  domain(): string {\n    return this.#attributes.get(Attribute.DOMAIN) as string;\n  }\n\n  expires(): number {\n    return this.#attributes.get(Attribute.EXPIRES) as number;\n  }\n\n  maxAge(): number {\n    return this.#attributes.get(Attribute.MAX_AGE) as number;\n  }\n\n  sourcePort(): number {\n    return this.#attributes.get(Attribute.SOURCE_PORT) as number;\n  }\n\n  sourceScheme(): Protocol.Network.CookieSourceScheme {\n    return this.#attributes.get(Attribute.SOURCE_SCHEME) as Protocol.Network.CookieSourceScheme;\n  }\n\n  size(): number {\n    return this.#size;\n  }\n\n  /**\n   * @deprecated\n   */\n  url(): Platform.DevToolsPath.UrlString|null {\n    if (!this.domain() || !this.path()) {\n      return null;\n    }\n    let port = '';\n    const sourcePort = this.sourcePort();\n    // Do not include standard ports to ensure the back-end will change standard ports according to the scheme.\n    if (sourcePort && sourcePort !== 80 && sourcePort !== 443) {\n      port = `:${this.sourcePort()}`;\n    }\n    // We must not consider the this.sourceScheme() here, otherwise it will be impossible to set a cookie without\n    // the Secure attribute from a secure origin.\n    return (this.secure() ? 'https://' : 'http://') + this.domain() + port + this.path() as\n        Platform.DevToolsPath.UrlString;\n  }\n\n  setSize(size: number): void {\n    this.#size = size;\n  }\n\n  expiresDate(requestDate: Date): Date|null {\n    // RFC 6265 indicates that the max-age attribute takes precedence over the expires attribute\n    if (this.maxAge()) {\n      return new Date(requestDate.getTime() + 1000 * this.maxAge());\n    }\n\n    if (this.expires()) {\n      return new Date(this.expires());\n    }\n\n    return null;\n  }\n\n  addAttribute(key: Attribute|null, value?: string|number|boolean): void {\n    if (!key) {\n      return;\n    }\n    switch (key) {\n      case Attribute.PRIORITY:\n        this.#priority = (value as Protocol.Network.CookiePriority);\n        break;\n      default:\n        this.#attributes.set(key, value);\n    }\n  }\n\n  hasAttribute(key: Attribute): boolean {\n    return this.#attributes.has(key);\n  }\n\n  getAttribute(key: Attribute): string|number|boolean|undefined {\n    return this.#attributes.get(key);\n  }\n\n  setCookieLine(cookieLine: string): void {\n    this.#cookieLine = cookieLine;\n  }\n\n  getCookieLine(): string|null {\n    return this.#cookieLine;\n  }\n\n  matchesSecurityOrigin(securityOrigin: string): boolean {\n    const hostname = new URL(securityOrigin).hostname;\n    return Cookie.isDomainMatch(this.domain(), hostname);\n  }\n\n  static isDomainMatch(domain: string, hostname: string): boolean {\n    // This implementation mirrors\n    // https://source.chromium.org/search?q=net::cookie_util::IsDomainMatch()\n    //\n    // Can domain match in two ways; as a domain cookie (where the cookie\n    // domain begins with \".\") or as a host cookie (where it doesn't).\n\n    // Some consumers of the CookieMonster expect to set cookies on\n    // URLs like http://.strange.url.  To retrieve cookies in this instance,\n    // we allow matching as a host cookie even when the domain_ starts with\n    // a period.\n    if (hostname === domain) {\n      return true;\n    }\n\n    // Domain cookie must have an initial \".\".  To match, it must be\n    // equal to url's host with initial period removed, or a suffix of\n    // it.\n\n    // Arguably this should only apply to \"http\" or \"https\" cookies, but\n    // extension cookie tests currently use the funtionality, and if we\n    // ever decide to implement that it should be done by preventing\n    // such cookies from being set.\n    if (!domain || domain[0] !== '.') {\n      return false;\n    }\n\n    // The host with a \".\" prefixed.\n    if (domain.substr(1) === hostname) {\n      return true;\n    }\n\n    // A pure suffix of the host (ok since we know the domain already\n    // starts with a \".\")\n    return hostname.length > domain.length && hostname.endsWith(domain);\n  }\n}\n\nexport const enum Type {\n  REQUEST = 0,\n  RESPONSE = 1,\n}\n\nexport const enum Attribute {\n  NAME = 'name',\n  VALUE = 'value',\n  SIZE = 'size',\n  DOMAIN = 'domain',\n  PATH = 'path',\n  EXPIRES = 'expires',\n  MAX_AGE = 'max-age',\n  HTTP_ONLY = 'http-only',\n  SECURE = 'secure',\n  SAME_SITE = 'same-site',\n  SOURCE_SCHEME = 'source-scheme',\n  SOURCE_PORT = 'source-port',\n  PRIORITY = 'priority',\n  PARTITIONED = 'partitioned',\n  PARTITION_KEY = 'partition-key',\n  PARTITION_KEY_SITE = 'partition-key-site',\n  HAS_CROSS_SITE_ANCESTOR = 'has-cross-site-ancestor',\n}\n"]}