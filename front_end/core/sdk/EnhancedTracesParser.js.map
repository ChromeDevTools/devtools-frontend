{"version":3,"file":"EnhancedTracesParser.js","sourceRoot":"","sources":["../../../../../../front_end/core/sdk/EnhancedTracesParser.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Protocol from '../../generated/protocol.js';\nimport * as Common from '../common/common.js';\nimport type * as Platform from '../platform/platform.js';\nimport {UserVisibleError} from '../platform/platform.js';\n\nimport type {\n  HydratingDataPerTarget, RehydratingExecutionContext, RehydratingResource, RehydratingScript, RehydratingTarget} from\n  './RehydratingObject.js';\nimport type {SourceMapV3} from './SourceMap.js';\nimport type {TraceObject} from './TraceObject.js';\n\ninterface EventBase {\n  cat: string;\n  pid: number;\n  args: {data: object};\n  name: string;\n}\n\n/**\n * While called 'TargetRundown', this event is emitted for each script that is compiled or evaluated.\n * Within EnhancedTraceParser, this event is used to construct targets and execution contexts (and to associate scripts to frames).\n *\n * See `inspector_target_rundown_event::Data` https://source.chromium.org/chromium/chromium/src/+/main:third_party/blink/renderer/core/inspector/inspector_trace_events.cc;l=1189-1232;drc=48d6f7175422b2c969c14258f9f8d5b196c28d18\n */\nexport interface RundownScriptCompiled extends EventBase {\n  cat: 'disabled-by-default-devtools.target-rundown';\n  name: 'ScriptCompiled'|'ModuleEvaluated';\n  args: {\n    data: {\n      frame: Protocol.Page.FrameId,\n      frameType: 'page'|'iframe',\n      url: string,\n      /**\n       * Older traces were a number, but this is an unsigned 64 bit value, so that was a bug.\n       * New traces use string instead. See https://crbug.com/447654178.\n       */\n      isolate: string|number,\n      /** AKA V8ContextToken. https://source.chromium.org/chromium/chromium/src/+/main:third_party/blink/renderer/core/inspector/inspector_trace_events.cc;l=1229;drc=3c88f61e18b043e70c225d8d57c77832a85e7f58 */\n      v8context: string,\n      origin: string,\n      scriptId: number,\n      /** script->World().isMainWorld() */\n      isDefault?: boolean,\n      contextType?: 'default'|'isolated'|'worker',\n    },\n  };\n}\n/**\n * When profiling starts, all currently loaded scripts are emitted via this event.\n *\n * See `Script::TraceScriptRundown()` https://source.chromium.org/chromium/chromium/src/+/main:v8/src/objects/script.cc;l=184-220;drc=328f6c467b940f322544567740c9c871064d045c\n */\nexport interface RundownScript extends EventBase {\n  cat: 'disabled-by-default-devtools.v8-source-rundown';\n  name: 'ScriptCatchup';\n  args: {\n    data: {\n      /**\n       * Older traces were a number, but this is an unsigned 64 bit value, so that was a bug.\n       * New traces use string instead. See https://crbug.com/447654178.\n       */\n      isolate: string|number,\n      executionContextId: Protocol.Runtime.ExecutionContextId,\n      scriptId: number,\n      isModule: boolean,\n      /** aka HasSourceURLComment */\n      hasSourceUrl: boolean,\n      // These don't actually get set in v8.\n      url?: string,\n      hash?: string,\n      /** value of the sourceURL comment. */\n      sourceUrl?: string,\n      /* value of the sourceMappingURL comment */\n      sourceMapUrl?: string,\n      /** If true, the source map url was a data URL, so the `sourceMapUrl` was removed. */\n      sourceMapUrlElided?: boolean,\n      startLine?: number,\n      startColumn?: number,\n      endLine?: number,\n      endColumn?: number,\n    },\n  };\n}\n\nexport interface RundownScriptSource extends EventBase {\n  cat: 'disabled-by-default-devtools.v8-source-rundown-sources';\n  name: 'ScriptCatchup'|'LargeScriptCatchup'|'TooLargeScriptCatchup';\n  args: {\n    data: {\n      isolate: number,\n      scriptId: number,\n      length?: number,\n      sourceText?: string,\n    },\n  };\n}\n\ninterface TracingStartedInBrowser extends EventBase {\n  cat: 'disabled-by-default-devtools.timeline';\n  args: {\n    data: {\n      frames: [{\n        frame: Protocol.Page.FrameId,\n        isInPrimaryMainFrame: boolean,\n        isOutermostMainFrame: boolean,\n        parent: Protocol.Page.FrameId,\n        processId: number,\n        url: string,\n        pid: number,\n      }],\n    },\n  };\n}\n\ninterface FunctionCall extends EventBase {\n  cat: 'devtools.timeline';\n  args: {\n    data: {\n      frame: Protocol.Page.FrameId,\n      scriptId: Protocol.Runtime.ScriptId,\n      /**\n       * Older traces were a number, but this is an unsigned 64 bit value, so that was a bug.\n       * New traces use string instead. See https://crbug.com/447654178.\n       */\n      isolate?: string|number,\n    },\n  };\n}\n\nexport class EnhancedTracesParser {\n  #trace: TraceObject;\n  #scriptRundownEvents: RundownScript[] = [];\n  #scriptToV8Context: Map<string, string> = new Map<string, string>();\n  #scriptToFrame: Map<string, Protocol.Page.FrameId> = new Map<string, Protocol.Page.FrameId>();\n  #scriptToScriptSource: Map<string, string> = new Map<string, string>();\n  #largeScriptToScriptSource: Map<string, string[]> = new Map<string, string[]>();\n  #scriptToSourceLength: Map<string, number> = new Map<string, number>();\n  #targets: RehydratingTarget[] = [];\n  #executionContexts: RehydratingExecutionContext[] = [];\n  #scripts: RehydratingScript[] = [];\n  #resources: RehydratingResource[] = [];\n  static readonly enhancedTraceVersion: number = 1;\n\n  constructor(trace: TraceObject) {\n    this.#trace = trace;\n\n    // Initialize with the trace provided.\n    try {\n      this.parseEnhancedTrace();\n    } catch (e) {\n      throw new UserVisibleError.UserVisibleError(e);\n    }\n  }\n\n  parseEnhancedTrace(): void {\n    for (const event of this.#trace.traceEvents) {\n      if (this.isTracingStartedInBrowser(event)) {\n        // constructs all targets by devtools.timeline TracingStartedInBrowser\n        const data = event.args?.data;\n        for (const frame of data.frames) {\n          if (frame.url === 'about:blank') {\n            continue;\n          }\n          if (!frame.isInPrimaryMainFrame) {\n            continue;\n          }\n\n          const frameId = frame.frame as string as Protocol.Target.TargetID;\n          if (!this.#targets.find(target => target.targetId === frameId)) {\n            const frameType = frame.isOutermostMainFrame ? 'page' : 'iframe';\n            this.#targets.push({\n              targetId: frameId,\n              type: frameType,\n              pid: frame.processId,\n              url: frame.url,\n            });\n          }\n        }\n      } else if (this.isFunctionCallEvent(event)) {\n        // constructs all script to frame mapping with devtools.timeline FunctionCall\n        const data = event.args?.data;\n        if (data.isolate) {\n          this.#scriptToFrame.set(this.getScriptIsolateId(data.isolate, data.scriptId), data.frame);\n        }\n      } else if (this.isRundownScriptCompiled(event)) {\n        // Set up script to v8 context mapping\n        const data = event.args?.data;\n        this.#scriptToV8Context.set(this.getScriptIsolateId(data.isolate, data.scriptId), data.v8context);\n        this.#scriptToFrame.set(this.getScriptIsolateId(data.isolate, data.scriptId), data.frame);\n        // All the targets should've been added by the TracingStartedInBrowser event, but just in case we're missing some there\n        const frameId = data.frame as string as Protocol.Target.TargetID;\n        if (!this.#targets.find(target => target.targetId === frameId)) {\n          this.#targets.push({\n            targetId: frameId,\n            type: data.frameType,\n            isolate: String(data.isolate),\n            pid: event.pid,\n            url: data.url,\n          });\n        }\n        // Add execution context, need to put back execution context id with info from other traces\n        if (!this.#executionContexts.find(executionContext => executionContext.v8Context === data.v8context)) {\n          this.#executionContexts.push({\n            id: -1 as Protocol.Runtime.ExecutionContextId,\n            origin: data.origin,\n            v8Context: data.v8context,\n            auxData: {\n              frameId: data.frame,\n              isDefault: data.isDefault,\n              type: data.contextType,\n            },\n            isolate: String(data.isolate),\n            name: data.origin,\n            uniqueId: `${data.v8context}-${data.isolate}`,\n          });\n        }\n      } else if (this.isRundownScript(event)) {\n        this.#scriptRundownEvents.push(event);\n        const data = event.args.data;\n        // Add script\n        if (!this.#scripts.find(\n                script => script.scriptId === String(data.scriptId) && script.isolate === String(data.isolate))) {\n          this.#scripts.push({\n            scriptId: String(data.scriptId) as Protocol.Runtime.ScriptId,\n            isolate: String(data.isolate),\n            buildId: '',\n            executionContextId: data.executionContextId,\n            startLine: data.startLine ?? 0,\n            startColumn: data.startColumn ?? 0,\n            endLine: data.endLine ?? 0,\n            endColumn: data.endColumn ?? 0,\n            hash: data.hash ?? '',\n            isModule: data.isModule,\n            url: data.url ?? '',\n            hasSourceURL: data.hasSourceUrl,\n            sourceURL: data.sourceUrl ?? '',\n            sourceMapURL: data.sourceMapUrl,\n            pid: event.pid,\n          });\n        }\n      } else if (this.isRundownScriptSource(event)) {\n        // Set up script to source text and length mapping\n        const data = event.args.data;\n        const scriptIsolateId = this.getScriptIsolateId(data.isolate, data.scriptId);\n        if ('splitIndex' in data && 'splitCount' in data) {\n          if (!this.#largeScriptToScriptSource.has(scriptIsolateId)) {\n            this.#largeScriptToScriptSource.set(scriptIsolateId, new Array(data.splitCount).fill('') as string[]);\n          }\n          const splittedSource = this.#largeScriptToScriptSource.get(scriptIsolateId);\n          if (splittedSource && data.sourceText) {\n            splittedSource[data.splitIndex as number] = data.sourceText;\n          }\n        } else {\n          if (data.sourceText) {\n            this.#scriptToScriptSource.set(scriptIsolateId, data.sourceText);\n          }\n          if (data.length) {\n            this.#scriptToSourceLength.set(scriptIsolateId, data.length);\n          }\n        }\n      }\n    }\n  }\n\n  data(): HydratingDataPerTarget[] {\n    // Put back execution context id\n    const v8ContextToExecutionContextId: Map<string, Protocol.Runtime.ExecutionContextId> =\n        new Map<string, Protocol.Runtime.ExecutionContextId>();\n    this.#scriptRundownEvents.forEach(scriptRundownEvent => {\n      const data = scriptRundownEvent.args.data;\n      const v8Context = this.#scriptToV8Context.get(this.getScriptIsolateId(data.isolate, data.scriptId));\n      if (v8Context) {\n        v8ContextToExecutionContextId.set(v8Context, data.executionContextId);\n      }\n    });\n    this.#executionContexts.forEach(executionContext => {\n      if (executionContext.v8Context) {\n        const id = v8ContextToExecutionContextId.get(executionContext.v8Context);\n        if (id) {\n          executionContext.id = id;\n        }\n      }\n    });\n\n    // Put back script source text and length\n    this.#scripts.forEach(script => {\n      const scriptIsolateId = this.getScriptIsolateId(script.isolate, script.scriptId);\n      if (this.#scriptToScriptSource.has(scriptIsolateId)) {\n        script.sourceText = this.#scriptToScriptSource.get(scriptIsolateId);\n        script.length = this.#scriptToSourceLength.get(scriptIsolateId);\n      } else if (this.#largeScriptToScriptSource.has(scriptIsolateId)) {\n        const splittedSources = this.#largeScriptToScriptSource.get(scriptIsolateId);\n        if (splittedSources) {\n          script.sourceText = splittedSources.join('');\n          script.length = script.sourceText.length;\n        }\n      }\n      // put in the aux data\n      const linkedExecutionContext = this.#executionContexts.find(\n          context => context.id === script.executionContextId && context.isolate === script.isolate);\n      if (linkedExecutionContext) {\n        script.executionContextAuxData = linkedExecutionContext.auxData;\n        // If a script successfully mapped to an execution context and aux data, link script to frame\n        if (script.executionContextAuxData?.frameId) {\n          this.#scriptToFrame.set(scriptIsolateId, script.executionContextAuxData?.frameId);\n        }\n      }\n    });\n\n    for (const script of this.#scripts) {\n      // Resolve the source map from the provided metadata.\n      // If no map is found for a given source map url, no source map is passed to the debugger model.\n      // Encoded as a data url so that the debugger model makes no network request.\n      // NOTE: consider passing directly as object and hacking `parsedScriptSource` in DebuggerModel.ts to handle\n      // this fake event. Would avoid a lot of wasteful (de)serialization. Maybe add SDK.Script.hydratedSourceMap.\n      this.resolveSourceMap(script);\n    }\n\n    this.#resources = this.#trace.metadata.resources ?? [];\n\n    return this.groupContextsAndScriptsUnderTarget(\n        this.#targets, this.#executionContexts, this.#scripts, this.#resources);\n  }\n\n  private resolveSourceMap(script: RehydratingScript): void {\n    if (script.sourceMapURL?.startsWith('data:')) {\n      return;\n    }\n\n    const sourceMap = this.getSourceMapFromMetadata(script);\n    if (!sourceMap) {\n      return;\n    }\n\n    // Note: this encoding + re-parsing overhead cost ~10ms per 1MB of JSON on my\n    // Mac M1 Pro.\n    // See https://crrev.com/c/6490409/comments/f294c12a_69781e24\n    const payload = encodeURIComponent(JSON.stringify(sourceMap));\n    script.sourceMapURL = `data:application/json;charset=utf-8,${payload}`;\n  }\n\n  private getSourceMapFromMetadata(script: RehydratingScript): SourceMapV3|undefined {\n    const {hasSourceURL, sourceURL, url, sourceMapURL, isolate, scriptId} = script;\n\n    if (!sourceMapURL || !this.#trace.metadata.sourceMaps) {\n      return;\n    }\n\n    const frame =\n        this.#scriptToFrame.get(this.getScriptIsolateId(isolate, scriptId)) as string as Protocol.Target.TargetID;\n    if (!frame) {\n      return;\n    }\n\n    const target = this.#targets.find(t => t.targetId === frame);\n    if (!target) {\n      return;\n    }\n\n    let resolvedSourceUrl = url;\n    if (hasSourceURL && sourceURL) {\n      const targetUrl = target.url as Platform.DevToolsPath.UrlString;\n      resolvedSourceUrl = Common.ParsedURL.ParsedURL.completeURL(targetUrl, sourceURL) ?? sourceURL;\n    }\n\n    // Resolve the source map url. The value given by v8 may be relative, so resolve it here.\n    // This process should match the one in `SourceMapManager.attachSourceMap`.\n    const resolvedSourceMapUrl =\n        Common.ParsedURL.ParsedURL.completeURL(resolvedSourceUrl as Platform.DevToolsPath.UrlString, sourceMapURL);\n    if (!resolvedSourceMapUrl) {\n      return;\n    }\n\n    const {sourceMap} = this.#trace.metadata.sourceMaps.find(m => m.sourceMapUrl === resolvedSourceMapUrl) ?? {};\n    return sourceMap;\n  }\n\n  private getScriptIsolateId(isolate: number|string, scriptId: Protocol.Runtime.ScriptId|number): string {\n    return `${scriptId}@${isolate}`;\n  }\n\n  private getExecutionContextIsolateId(isolate: number|string, executionContextId: Protocol.Runtime.ExecutionContextId):\n      string {\n    return `${executionContextId}@${isolate}`;\n  }\n\n  private isTraceEvent(event: unknown): event is EventBase {\n    return 'cat' in (event as EventBase) && 'pid' in (event as EventBase) && 'args' in (event as EventBase) &&\n        'data' in (event as EventBase).args;\n  }\n\n  private isRundownScriptCompiled(event: unknown): event is RundownScriptCompiled {\n    return this.isTraceEvent(event) && event.cat === 'disabled-by-default-devtools.target-rundown';\n  }\n\n  private isRundownScript(event: unknown): event is RundownScript {\n    return this.isTraceEvent(event) && event.cat === 'disabled-by-default-devtools.v8-source-rundown';\n  }\n\n  private isRundownScriptSource(event: unknown): event is RundownScriptSource {\n    return this.isTraceEvent(event) && event.cat === 'disabled-by-default-devtools.v8-source-rundown-sources';\n  }\n\n  private isTracingStartedInBrowser(event: unknown): event is TracingStartedInBrowser {\n    return this.isTraceEvent(event) && event.cat === 'disabled-by-default-devtools.timeline' &&\n        event.name === 'TracingStartedInBrowser';\n  }\n\n  private isFunctionCallEvent(event: unknown): event is FunctionCall {\n    return this.isTraceEvent(event) && event.cat === 'devtools.timeline' && event.name === 'FunctionCall';\n  }\n\n  private groupContextsAndScriptsUnderTarget(\n      targets: RehydratingTarget[], executionContexts: RehydratingExecutionContext[], scripts: RehydratingScript[],\n      resources: RehydratingResource[]): HydratingDataPerTarget[] {\n    const data: HydratingDataPerTarget[] = [];\n    const targetIds = new Set<Protocol.Target.TargetID>();\n    const targetToExecutionContexts: Map<string, RehydratingExecutionContext[]> =\n        new Map<Protocol.Target.TargetID, RehydratingExecutionContext[]>();\n    // We want to keep track of how each execution context is linked to targets so we may use this\n    // information to link scripts with no target to a target\n    const executionContextIsolateToTarget: Map<string, Protocol.Target.TargetID> =\n        new Map<string, Protocol.Target.TargetID>();\n    const targetToScripts: Map<Protocol.Target.TargetID, RehydratingScript[]> =\n        new Map<Protocol.Target.TargetID, RehydratingScript[]>();\n    const orphanScripts: RehydratingScript[] = [];\n    const targetToResources: Map<Protocol.Target.TargetID, RehydratingResource[]> =\n        new Map<Protocol.Target.TargetID, RehydratingResource[]>();\n\n    // Initialize all the mapping needed\n    for (const target of targets) {\n      targetIds.add(target.targetId);\n      targetToExecutionContexts.set(target.targetId, []);\n      targetToScripts.set(target.targetId, []);\n      targetToResources.set(target.targetId, []);\n    }\n\n    // Put all of the known execution contexts under respective targets\n    for (const executionContext of executionContexts) {\n      const frameId = executionContext.auxData?.frameId as string as Protocol.Target.TargetID;\n      if (frameId && targetIds.has(frameId)) {\n        targetToExecutionContexts.get(frameId)?.push(executionContext);\n        executionContextIsolateToTarget.set(\n            this.getExecutionContextIsolateId(executionContext.isolate, executionContext.id), frameId);\n      } else {\n        console.error('Execution context can\\'t be linked to a target', executionContext);\n      }\n    }\n\n    // Put all of the scripts under respective targets with collected information\n    for (const script of scripts) {\n      const scriptExecutionContextIsolateId =\n          this.getExecutionContextIsolateId(script.isolate, script.executionContextId);\n      const scriptFrameId = script.executionContextAuxData?.frameId as string as Protocol.Target.TargetID;\n      if (script.executionContextAuxData?.frameId && targetIds.has(scriptFrameId)) {\n        targetToScripts.get(scriptFrameId)?.push(script);\n        executionContextIsolateToTarget.set(scriptExecutionContextIsolateId, scriptFrameId);\n      } else if (this.#scriptToFrame.has(this.getScriptIsolateId(script.isolate, script.scriptId))) {\n        const targetId = this.#scriptToFrame.get(this.getScriptIsolateId(script.isolate, script.scriptId)) as string as\n            Protocol.Target.TargetID;\n        if (targetId) {\n          targetToScripts.get(targetId)?.push(script);\n          executionContextIsolateToTarget.set(scriptExecutionContextIsolateId, targetId);\n        }\n      } else {\n        // These scripts are not linked to any target\n        orphanScripts.push(script);\n      }\n    }\n\n    // If a script is not linked to a target, use executionContext@isolate to link to a target\n    // Using PID is the last resort\n    for (const orphanScript of orphanScripts) {\n      const orphanScriptExecutionContextIsolateId =\n          this.getExecutionContextIsolateId(orphanScript.isolate, orphanScript.executionContextId);\n      const frameId = executionContextIsolateToTarget.get(orphanScriptExecutionContextIsolateId);\n\n      if (frameId) {\n        // Found a link via execution context, use it.\n        targetToScripts.get(frameId)?.push(orphanScript);\n      } else if (orphanScript.pid) {\n        const target = targets.find(target => target.pid === orphanScript.pid);\n        if (target) {\n          targetToScripts.get(target.targetId)?.push(orphanScript);\n        }\n      } else {\n        console.error('Script can\\'t be linked to any target', orphanScript);\n      }\n    }\n\n    for (const resource of resources) {\n      const frameId = resource.frame as Protocol.Target.TargetID;\n      if (targetIds.has(frameId)) {\n        targetToResources.get(frameId)?.push(resource);\n      }\n    }\n\n    // Now all the scripts are linked to a target, we want to make sure all the scripts are pointing to a valid\n    // execution context. If not, we will create an artificial execution context for the script\n    for (const target of targets) {\n      const targetId = target.targetId;\n      const executionContexts = targetToExecutionContexts.get(targetId) || [];\n      const scripts = targetToScripts.get(targetId) || [];\n      const resources = targetToResources.get(targetId) || [];\n      for (const script of scripts) {\n        if (!executionContexts.find(context => context.id === script.executionContextId)) {\n          const artificialContext: RehydratingExecutionContext = {\n            id: script.executionContextId,\n            origin: '',\n            v8Context: '',\n            name: '',\n            auxData: {\n              frameId: targetId as string as Protocol.Page.FrameId,\n              isDefault: false,\n              type: 'type',\n            },\n            isolate: script.isolate,\n            uniqueId: `${targetId}-${script.isolate}`,\n          };\n          executionContexts.push(artificialContext);\n        }\n      }\n\n      // Finally, we put all the information into the data structure we want to return as.\n      data.push({target, executionContexts, scripts, resources});\n    }\n\n    return data;\n  }\n}\n"]}