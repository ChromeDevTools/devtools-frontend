{"version":3,"file":"IOModel.js","sourceRoot":"","sources":["../../../../../../front_end/core/sdk/IOModel.ts"],"names":[],"mappings":"AAAA,sCAAsC;AACtC,yEAAyE;AACzE,6BAA6B;AAG7B,OAAO,KAAK,MAAM,MAAM,qBAAqB,CAAC;AAE9C,OAAO,EAAC,YAAY,EAAC,MAAM,mBAAmB,CAAC;AAC/C,OAAO,EAAC,QAAQ,EAAC,MAAM,eAAe,CAAC;AAGvC,MAAM,OAAO,OAAQ,SAAQ,QAAc;IACzC,KAAK,CAAC,IAAI,CAAC,MAAgC,EAAE,IAAa,EAAE,MAAe;QACzE,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,MAAM,EAAE,CAAC,OAAO,EAAE,CAAC,WAAW,CAAC,EAAC,MAAM,EAAE,MAAM,EAAE,IAAI,EAAC,CAAC,CAAC;QACjF,IAAI,MAAM,CAAC,QAAQ,EAAE,EAAE,CAAC;YACtB,MAAM,IAAI,KAAK,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC;QACrC,CAAC;QACD,IAAI,MAAM,CAAC,GAAG,EAAE,CAAC;YACf,OAAO,IAAI,CAAC;QACd,CAAC;QACD,IAAI,MAAM,CAAC,aAAa,EAAE,CAAC;YACzB,OAAO,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAC3C,CAAC;QACD,OAAO,MAAM,CAAC,IAAI,CAAC;IACrB,CAAC;IAED,KAAK,CAAC,KAAK,CAAC,MAAgC;QAC1C,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,MAAM,EAAE,CAAC,OAAO,EAAE,CAAC,YAAY,CAAC,EAAC,MAAM,EAAC,CAAC,CAAC;QACpE,IAAI,MAAM,CAAC,QAAQ,EAAE,EAAE,CAAC;YACtB,OAAO,CAAC,KAAK,CAAC,yBAAyB,CAAC,CAAC;QAC3C,CAAC;IACH,CAAC;IAED,KAAK,CAAC,WAAW,CAAC,gBAA8D;QAC9E,MAAM,QAAQ,GAAG,gBAAgB,YAAY,YAAY,CAAC,CAAC,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC,CAAC,gBAAgB,CAAC;QACzG,IAAI,CAAC,QAAQ,EAAE,CAAC;YACd,MAAM,IAAI,KAAK,CAAC,sCAAsC,CAAC,CAAC;QAC1D,CAAC;QACD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,MAAM,EAAE,CAAC,OAAO,EAAE,CAAC,kBAAkB,CAAC,EAAC,QAAQ,EAAC,CAAC,CAAC;QAC5E,IAAI,MAAM,CAAC,QAAQ,EAAE,EAAE,CAAC;YACtB,MAAM,IAAI,KAAK,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC;QACrC,CAAC;QACD,OAAO,QAAQ,MAAM,CAAC,IAAI,EAAE,CAAC;IAC/B,CAAC;IAED,KAAK,CAAC,YAAY,CAAC,MAAgC;QACjD,MAAM,OAAO,GAAa,EAAE,CAAC;QAC7B,MAAM,OAAO,GAAG,IAAI,WAAW,EAAE,CAAC;QAClC,SAAS,CAAC;YACR,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,GAAG,IAAI,CAAC,CAAC;YAClD,IAAI,IAAI,KAAK,IAAI,EAAE,CAAC;gBAClB,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC;gBAC/B,MAAM;YACR,CAAC;YACD,IAAI,IAAI,YAAY,UAAU,EAAE,CAAC;gBAC/B,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,EAAE,EAAC,MAAM,EAAE,IAAI,EAAC,CAAC,CAAC,CAAC;YACrD,CAAC;iBAAM,CAAC;gBACN,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACrB,CAAC;QACH,CAAC;QACD,OAAO,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAC1B,CAAC;IAED,KAAK,CAAC,YAAY,CAAC,MAAgC;QACjD,MAAM,KAAK,GAAiB,EAAE,CAAC;QAC/B,SAAS,CAAC;YACR,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,GAAG,IAAI,CAAC,CAAC;YAClD,IAAI,IAAI,KAAK,IAAI,EAAE,CAAC;gBAClB,MAAM;YACR,CAAC;YACD,IAAI,IAAI,YAAY,UAAU,EAAE,CAAC;gBAC/B,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACnB,CAAC;iBAAM,CAAC;gBACN,MAAM,IAAI,KAAK,CAAC,4DAA4D,CAAC,CAAC;YAChF,CAAC;QACH,CAAC;QACD,IAAI,MAAM,GAAG,CAAC,CAAC;QACf,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE,CAAC;YACzB,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC;QACxB,CAAC;QACD,MAAM,MAAM,GAAG,IAAI,UAAU,CAAC,MAAM,CAAC,CAAC;QACtC,IAAI,MAAM,GAAG,CAAC,CAAC;QACf,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE,CAAC;YACzB,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;YACzB,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC;QACxB,CAAC;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;CACF;AAED,QAAQ,CAAC,QAAQ,CAAC,OAAO,EAAE,EAAC,YAAY,4BAAe,EAAE,SAAS,EAAE,IAAI,EAAC,CAAC,CAAC","sourcesContent":["// Copyright 2020 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Protocol from '../../generated/protocol.js';\nimport * as Common from '../common/common.js';\n\nimport {RemoteObject} from './RemoteObject.js';\nimport {SDKModel} from './SDKModel.js';\nimport {Capability} from './Target.js';\n\nexport class IOModel extends SDKModel<void> {\n  async read(handle: Protocol.IO.StreamHandle, size?: number, offset?: number): Promise<string|Uint8Array|null> {\n    const result = await this.target().ioAgent().invoke_read({handle, offset, size});\n    if (result.getError()) {\n      throw new Error(result.getError());\n    }\n    if (result.eof) {\n      return null;\n    }\n    if (result.base64Encoded) {\n      return Common.Base64.decode(result.data);\n    }\n    return result.data;\n  }\n\n  async close(handle: Protocol.IO.StreamHandle): Promise<void> {\n    const result = await this.target().ioAgent().invoke_close({handle});\n    if (result.getError()) {\n      console.error('Could not close stream.');\n    }\n  }\n\n  async resolveBlob(objectOrObjectId: Protocol.Runtime.RemoteObjectId|RemoteObject): Promise<string> {\n    const objectId = objectOrObjectId instanceof RemoteObject ? objectOrObjectId.objectId : objectOrObjectId;\n    if (!objectId) {\n      throw new Error('Remote object has undefined objectId');\n    }\n    const result = await this.target().ioAgent().invoke_resolveBlob({objectId});\n    if (result.getError()) {\n      throw new Error(result.getError());\n    }\n    return `blob:${result.uuid}`;\n  }\n\n  async readToString(handle: Protocol.IO.StreamHandle): Promise<string> {\n    const strings: string[] = [];\n    const decoder = new TextDecoder();\n    for (;;) {\n      const data = await this.read(handle, 1024 * 1024);\n      if (data === null) {\n        strings.push(decoder.decode());\n        break;\n      }\n      if (data instanceof Uint8Array) {\n        strings.push(decoder.decode(data, {stream: true}));\n      } else {\n        strings.push(data);\n      }\n    }\n    return strings.join('');\n  }\n\n  async readToBuffer(handle: Protocol.IO.StreamHandle): Promise<Uint8Array<ArrayBuffer>> {\n    const items: Uint8Array[] = [];\n    for (;;) {\n      const data = await this.read(handle, 1024 * 1024);\n      if (data === null) {\n        break;\n      }\n      if (data instanceof Uint8Array) {\n        items.push(data);\n      } else {\n        throw new Error('Unexpected stream data type: expected binary, got a string');\n      }\n    }\n    let length = 0;\n    for (const item of items) {\n      length += item.length;\n    }\n    const result = new Uint8Array(length);\n    let offset = 0;\n    for (const item of items) {\n      result.set(item, offset);\n      offset += item.length;\n    }\n    return result;\n  }\n}\n\nSDKModel.register(IOModel, {capabilities: Capability.IO, autostart: true});\n"]}