{"version":3,"file":"LayerTreeBase.js","sourceRoot":"","sources":["../../../../../../front_end/core/sdk/LayerTreeBase.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2016 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Protocol from '../../generated/protocol.js';\n\nimport {DOMModel, type DOMNode} from './DOMModel.js';\nimport type {SnapshotWithRect} from './PaintProfiler.js';\nimport type {Target} from './Target.js';\n\nexport interface Layer {\n  id(): string;\n  parentId(): string|null;\n  parent(): Layer|null;\n  isRoot(): boolean;\n  children(): Layer[];\n  addChild(child: Layer): void;\n  node(): DOMNode|null;\n  nodeForSelfOrAncestor(): DOMNode|null;\n  offsetX(): number;\n  offsetY(): number;\n  width(): number;\n  height(): number;\n  transform(): number[]|null;\n  quad(): number[];\n  anchorPoint(): number[];\n  invisible(): boolean;\n  paintCount(): number;\n  lastPaintRect(): Protocol.DOM.Rect|null;\n  scrollRects(): Protocol.LayerTree.ScrollRect[];\n  stickyPositionConstraint(): StickyPositionConstraint|null;\n  gpuMemoryUsage(): number;\n  requestCompositingReasons(): Promise<string[]>;\n  requestCompositingReasonIds(): Promise<string[]>;\n  drawsContent(): boolean;\n  snapshots(): Array<Promise<SnapshotWithRect|null>>;\n}\n\nexport namespace Layer {\n  export const enum ScrollRectType {\n    NON_FAST_SCROLLABLE = 'NonFastScrollable',\n    TOUCH_EVENT_HANDLER = 'TouchEventHandler',\n    WHEEL_EVENT_HANDLER = 'WheelEventHandler',\n    REPAINTS_ON_SCROLL = 'RepaintsOnScroll',\n    MAIN_THREAD_SCROLL_REASON = 'MainThreadScrollingReason',\n  }\n}\n\nexport class StickyPositionConstraint {\n  readonly #stickyBoxRect: Protocol.DOM.Rect;\n  readonly #containingBlockRect: Protocol.DOM.Rect;\n  readonly #nearestLayerShiftingStickyBox: Layer|null;\n  readonly #nearestLayerShiftingContainingBlock: Layer|null;\n\n  constructor(layerTree: LayerTreeBase|null, constraint: Protocol.LayerTree.StickyPositionConstraint) {\n    this.#stickyBoxRect = constraint.stickyBoxRect;\n    this.#containingBlockRect = constraint.containingBlockRect;\n    this.#nearestLayerShiftingStickyBox = null;\n    if (layerTree && constraint.nearestLayerShiftingStickyBox) {\n      this.#nearestLayerShiftingStickyBox = layerTree.layerById(constraint.nearestLayerShiftingStickyBox);\n    }\n\n    this.#nearestLayerShiftingContainingBlock = null;\n    if (layerTree && constraint.nearestLayerShiftingContainingBlock) {\n      this.#nearestLayerShiftingContainingBlock = layerTree.layerById(constraint.nearestLayerShiftingContainingBlock);\n    }\n  }\n\n  stickyBoxRect(): Protocol.DOM.Rect {\n    return this.#stickyBoxRect;\n  }\n\n  containingBlockRect(): Protocol.DOM.Rect {\n    return this.#containingBlockRect;\n  }\n\n  nearestLayerShiftingStickyBox(): Layer|null {\n    return this.#nearestLayerShiftingStickyBox;\n  }\n\n  nearestLayerShiftingContainingBlock(): Layer|null {\n    return this.#nearestLayerShiftingContainingBlock;\n  }\n}\n\nexport class LayerTreeBase {\n  readonly #target: Target|null;\n  #domModel: DOMModel|null;\n  layersById = new Map<string|number, Layer>();\n  #root: Layer|null = null;\n  #contentRoot: Layer|null = null;\n  readonly #backendNodeIdToNode = new Map<Protocol.DOM.BackendNodeId, DOMNode|null>();\n  #viewportSize?: {\n    width: number,\n    height: number,\n  };\n\n  constructor(target: Target|null) {\n    this.#target = target;\n    this.#domModel = target ? target.model(DOMModel) : null;\n  }\n\n  target(): Target|null {\n    return this.#target;\n  }\n\n  root(): Layer|null {\n    return this.#root;\n  }\n\n  setRoot(root: Layer|null): void {\n    this.#root = root;\n  }\n\n  contentRoot(): Layer|null {\n    return this.#contentRoot;\n  }\n\n  setContentRoot(contentRoot: Layer|null): void {\n    this.#contentRoot = contentRoot;\n  }\n\n  forEachLayer<T>(callback: (arg0: Layer) => T, root?: Layer|null): T|boolean {\n    if (!root) {\n      root = this.root();\n      if (!root) {\n        return false;\n      }\n    }\n    return callback(root) || root.children().some(this.forEachLayer.bind(this, callback));\n  }\n\n  layerById(id: string): Layer|null {\n    return this.layersById.get(id) || null;\n  }\n\n  async resolveBackendNodeIds(requestedNodeIds: Set<Protocol.DOM.BackendNodeId>): Promise<void> {\n    if (!requestedNodeIds.size || !this.#domModel) {\n      return;\n    }\n\n    const nodesMap = await this.#domModel.pushNodesByBackendIdsToFrontend(requestedNodeIds);\n\n    if (!nodesMap) {\n      return;\n    }\n    for (const nodeId of nodesMap.keys()) {\n      this.#backendNodeIdToNode.set(nodeId, nodesMap.get(nodeId) || null);\n    }\n  }\n\n  backendNodeIdToNode(): Map<Protocol.DOM.BackendNodeId, DOMNode|null> {\n    return this.#backendNodeIdToNode;\n  }\n\n  setViewportSize(viewportSize: {\n    width: number,\n    height: number,\n  }): void {\n    this.#viewportSize = viewportSize;\n  }\n\n  viewportSize(): {\n    width: number,\n    height: number,\n  }|undefined {\n    return this.#viewportSize;\n  }\n}\n"]}