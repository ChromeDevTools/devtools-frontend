{"version":3,"file":"NetworkRequest.js","sourceRoot":"","sources":["../../../../../../front_end/core/sdk/NetworkRequest.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2012 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Protocol from '../../generated/protocol.js';\nimport * as TextUtils from '../../models/text_utils/text_utils.js';\nimport * as Common from '../common/common.js';\nimport * as i18n from '../i18n/i18n.js';\nimport * as Platform from '../platform/platform.js';\n\nimport {Attribute, type Cookie} from './Cookie.js';\nimport {CookieModel} from './CookieModel.js';\nimport {CookieParser} from './CookieParser.js';\nimport * as HttpReasonPhraseStrings from './HttpReasonPhraseStrings.js';\nimport {\n  Events as NetworkManagerEvents,\n  NetworkManager,\n} from './NetworkManager.js';\nimport {ServerSentEvents} from './ServerSentEvents.js';\nimport {ServerTiming} from './ServerTiming.js';\nimport {Type} from './Target.js';\n\n// clang-format off\nconst UIStrings = {\n  /**\n   * @description Text in Network Request\n   */\n  binary: '(binary)',\n  /**\n   * @description Tooltip to explain why a cookie was blocked\n   */\n  secureOnly: 'This cookie was blocked because it had the \"`Secure`\" attribute and the connection was not secure.',\n  /**\n   * @description Tooltip to explain why a cookie was blocked\n   */\n  notOnPath: 'This cookie was blocked because its path was not an exact match for or a superdirectory of the request url\\'s path.',\n  /**\n   * @description Tooltip to explain why a cookie was blocked\n   */\n  domainMismatch: 'This cookie was blocked because neither did the request URL\\'s domain exactly match the cookie\\'s domain, nor was the request URL\\'s domain a subdomain of the cookie\\'s Domain attribute value.',\n  /**\n   * @description Tooltip to explain why a cookie was blocked\n   */\n  sameSiteStrict: 'This cookie was blocked because it had the \"`SameSite=Strict`\" attribute and the request was made from a different site. This includes top-level navigation requests initiated by other sites.',\n  /**\n   * @description Tooltip to explain why a cookie was blocked\n   */\n  sameSiteLax: 'This cookie was blocked because it had the \"`SameSite=Lax`\" attribute and the request was made from a different site and was not initiated by a top-level navigation.',\n  /**\n   * @description Tooltip to explain why a cookie was blocked\n   */\n  sameSiteUnspecifiedTreatedAsLax: 'This cookie didn\\'t specify a \"`SameSite`\" attribute when it was stored and was defaulted to \"SameSite=Lax,\" and was blocked because the request was made from a different site and was not initiated by a top-level navigation. The cookie had to have been set with \"`SameSite=None`\" to enable cross-site usage.',\n  /**\n   * @description Tooltip to explain why a cookie was blocked\n   */\n  sameSiteNoneInsecure: 'This cookie was blocked because it had the \"`SameSite=None`\" attribute but was not marked \"Secure\". Cookies without SameSite restrictions must be marked \"Secure\" and sent over a secure connection.',\n  /**\n   * @description Tooltip to explain why a cookie was blocked\n   */\n  userPreferences: 'This cookie was blocked due to user preferences.',\n  /**\n   * @description Tooltip to explain why a cookie was blocked\n   */\n  thirdPartyPhaseout: 'This cookie was blocked either because of Chrome flags or browser configuration. Learn more in the Issues panel.',\n  /**\n   * @description Tooltip to explain why a cookie was blocked\n   */\n  unknownError: 'An unknown error was encountered when trying to send this cookie.',\n  /**\n   * @description Tooltip to explain why a cookie was blocked due to Schemeful Same-Site\n   */\n  schemefulSameSiteStrict: 'This cookie was blocked because it had the \"`SameSite=Strict`\" attribute but the request was cross-site. This includes top-level navigation requests initiated by other sites. This request is considered cross-site because the URL has a different scheme than the current site.',\n  /**\n   * @description Tooltip to explain why a cookie was blocked due to Schemeful Same-Site\n   */\n  schemefulSameSiteLax: 'This cookie was blocked because it had the \"`SameSite=Lax`\" attribute but the request was cross-site and was not initiated by a top-level navigation. This request is considered cross-site because the URL has a different scheme than the current site.',\n  /**\n   * @description Tooltip to explain why a cookie was blocked due to Schemeful Same-Site\n   */\n  schemefulSameSiteUnspecifiedTreatedAsLax: 'This cookie didn\\'t specify a \"`SameSite`\" attribute when it was stored, was defaulted to \"`SameSite=Lax\"`, and was blocked because the request was cross-site and was not initiated by a top-level navigation. This request is considered cross-site because the URL has a different scheme than the current site.',\n  /**\n   * @description Tooltip to explain why a cookie was blocked due to SameParty\n   */\n  samePartyFromCrossPartyContext: 'This cookie was blocked because it had the \"`SameParty`\" attribute but the request was cross-party. The request was considered cross-party because the domain of the resource\\'s URL and the domains of the resource\\'s enclosing frames/documents are neither owners nor members in the same First-Party Set.',\n  /**\n   * @description Tooltip to explain why a cookie was blocked due to exceeding the maximum size\n   */\n  nameValuePairExceedsMaxSize: 'This cookie was blocked because it was too large. The combined size of the name and value must be less than or equal to 4096 characters.',\n  /**\n   * @description Tooltip to explain why an attempt to set a cookie via `Set-Cookie` HTTP header on a request's response was blocked.\n   */\n  thisSetcookieWasBlockedDueToUser: 'This attempt to set a cookie via a `Set-Cookie` header was blocked due to user preferences.',\n  /**\n   * @description Tooltip to explain why an attempt to set a cookie via `Set-Cookie` HTTP header on a request's response was blocked.\n   */\n   thisSetcookieWasBlockedDueThirdPartyPhaseout: 'Setting this cookie was blocked either because of Chrome flags or browser configuration. Learn more in the Issues panel.',\n  /**\n   * @description Tooltip to explain why an attempt to set a cookie via `Set-Cookie` HTTP header on a request's response was blocked.\n   */\n  thisSetcookieHadInvalidSyntax: 'This `Set-Cookie` header had invalid syntax.',\n  /**\n   * @description Tooltip to explain why a cookie was blocked\n   */\n  thisSetcookieHadADisallowedCharacter: 'This `Set-Cookie` header contained a disallowed character (a forbidden ASCII control character, or the tab character if it appears in the middle of the cookie name, value, an attribute name, or an attribute value).',\n  /**\n   * @description Tooltip to explain why a cookie was blocked\n   */\n  theSchemeOfThisConnectionIsNot: 'The scheme of this connection is not allowed to store cookies.',\n  /**\n   * @description Tooltip to explain why a cookie was blocked\n   */\n  anUnknownErrorWasEncounteredWhenTrying: 'An unknown error was encountered when trying to store this cookie.',\n  /**\n   * @description Tooltip to explain why a cookie was blocked due to Schemeful Same-Site\n   * @example {SameSite=Strict} PH1\n   */\n  thisSetcookieWasBlockedBecauseItHadTheSamesiteStrictLax: 'This attempt to set a cookie via a `Set-Cookie` header was blocked because it had the \"{PH1}\" attribute but came from a cross-site response which was not the response to a top-level navigation. This response is considered cross-site because the URL has a different scheme than the current site.',\n  /**\n   * @description Tooltip to explain why a cookie was blocked due to Schemeful Same-Site\n   */\n  thisSetcookieDidntSpecifyASamesite: 'This `Set-Cookie` header didn\\'t specify a \"`SameSite`\" attribute, was defaulted to \"`SameSite=Lax\"`, and was blocked because it came from a cross-site response which was not the response to a top-level navigation. This response is considered cross-site because the URL has a different scheme than the current site.',\n  /**\n   * @description Tooltip to explain why a cookie was blocked due to SameParty\n   */\n  thisSetcookieWasBlockedBecauseItHadTheSameparty: 'This attempt to set a cookie via a `Set-Cookie` header was blocked because it had the \"`SameParty`\" attribute but the request was cross-party. The request was considered cross-party because the domain of the resource\\'s URL and the domains of the resource\\'s enclosing frames/documents are neither owners nor members in the same First-Party Set.',\n  /**\n   * @description Tooltip to explain why a cookie was blocked due to SameParty\n   */\n  thisSetcookieWasBlockedBecauseItHadTheSamepartyAttribute: 'This attempt to set a cookie via a `Set-Cookie` header was blocked because it had the \"`SameParty`\" attribute but also had other conflicting attributes. Chrome requires cookies that use the \"`SameParty`\" attribute to also have the \"Secure\" attribute, and to not be restricted to \"`SameSite=Strict`\".',\n  /**\n   * @description Tooltip to explain why an attempt to set a cookie via a `Set-Cookie` HTTP header on a request's response was blocked.\n   */\n  blockedReasonSecureOnly: 'This attempt to set a cookie via a `Set-Cookie` header was blocked because it had the \"Secure\" attribute but was not received over a secure connection.',\n  /**\n   * @description Tooltip to explain why an attempt to set a cookie via a `Set-Cookie` HTTP header on a request's response was blocked.\n   * @example {SameSite=Strict} PH1\n   */\n  blockedReasonSameSiteStrictLax: 'This attempt to set a cookie via a `Set-Cookie` header was blocked because it had the \"{PH1}\" attribute but came from a cross-site response which was not the response to a top-level navigation.',\n  /**\n   * @description Tooltip to explain why an attempt to set a cookie via a `Set-Cookie` HTTP header on a request's response was blocked.\n   */\n  blockedReasonSameSiteUnspecifiedTreatedAsLax: 'This `Set-Cookie` header didn\\'t specify a \"`SameSite`\" attribute and was defaulted to \"`SameSite=Lax,`\" and was blocked because it came from a cross-site response which was not the response to a top-level navigation. The `Set-Cookie` had to have been set with \"`SameSite=None`\" to enable cross-site usage.',\n  /**\n   * @description Tooltip to explain why an attempt to set a cookie via a `Set-Cookie` HTTP header on a request's response was blocked.\n   */\n  blockedReasonSameSiteNoneInsecure: 'This attempt to set a cookie via a `Set-Cookie` header was blocked because it had the \"`SameSite=None`\" attribute but did not have the \"Secure\" attribute, which is required in order to use \"`SameSite=None`\".',\n  /**\n   * @description Tooltip to explain why an attempt to set a cookie via a `Set-Cookie` HTTP header on a request's response was blocked.\n   */\n  blockedReasonOverwriteSecure: 'This attempt to set a cookie via a `Set-Cookie` header was blocked because it was not sent over a secure connection and would have overwritten a cookie with the Secure attribute.',\n  /**\n   * @description Tooltip to explain why an attempt to set a cookie via a `Set-Cookie` HTTP header on a request's response was blocked.\n   */\n  blockedReasonInvalidDomain: 'This attempt to set a cookie via a `Set-Cookie` header was blocked because its Domain attribute was invalid with regards to the current host url.',\n  /**\n   * @description Tooltip to explain why an attempt to set a cookie via a `Set-Cookie` HTTP header on a request's response was blocked.\n   */\n  blockedReasonInvalidPrefix: 'This attempt to set a cookie via a `Set-Cookie` header was blocked because it used the \"`__Secure-`\" or \"`__Host-`\" prefix in its name and broke the additional rules applied to cookies with these prefixes as defined in `https://tools.ietf.org/html/draft-west-cookie-prefixes-05`.',\n  /**\n   * @description Tooltip to explain why a cookie was blocked when the size of the #name plus the size of the value exceeds the max size.\n   */\n  thisSetcookieWasBlockedBecauseTheNameValuePairExceedsMaxSize: 'This attempt to set a cookie via a `Set-Cookie` header was blocked because the cookie was too large. The combined size of the name and value must be less than or equal to 4096 characters.',\n  /**\n   * @description Text in Network Manager\n   * @example {https://example.com} PH1\n   */\n  setcookieHeaderIsIgnoredIn: 'Set-Cookie header is ignored in response from url: {PH1}. The combined size of the name and value must be less than or equal to 4096 characters.',\n  /**\n   * @description Tooltip to explain why the cookie should have been blocked by third-party cookie phaseout but is exempted.\n   */\n   exemptionReasonUserSetting: 'This cookie is allowed by user preference.',\n   /**\n    * @description Tooltip to explain why the cookie should have been blocked by third-party cookie phaseout but is exempted.\n    */\n   exemptionReasonTPCDMetadata: 'This cookie is allowed by a third-party cookie deprecation trial grace period. Learn more: goo.gle/dt-grace.',\n   /**\n    * @description Tooltip to explain why the cookie should have been blocked by third-party cookie phaseout but is exempted.\n    */\n   exemptionReasonTPCDDeprecationTrial: 'This cookie is allowed by third-party cookie deprecation trial. Learn more: goo.gle/ps-dt.',\n   /**\n    * @description Tooltip to explain why the cookie should have been blocked by third-party cookie phaseout but is exempted.\n    */\n  exemptionReasonTopLevelTPCDDeprecationTrial: 'This cookie is allowed by top-level third-party cookie deprecation trial. Learn more: goo.gle/ps-dt.',\n   /**\n    * @description Tooltip to explain why the cookie should have been blocked by third-party cookie phaseout but is exempted.\n    */\n   exemptionReasonTPCDHeuristics: 'This cookie is allowed by third-party cookie heuristics. Learn more: goo.gle/hbe',\n   /**\n    * @description Tooltip to explain why the cookie should have been blocked by third-party cookie phaseout but is exempted.\n    */\n   exemptionReasonEnterprisePolicy: 'This cookie is allowed by Chrome Enterprise policy. Learn more: goo.gle/ce-3pc',\n   /**\n    * @description Tooltip to explain why the cookie should have been blocked by third-party cookie phaseout but is exempted.\n    */\n   exemptionReasonStorageAccessAPI: 'This cookie is allowed by the Storage Access API. Learn more: goo.gle/saa',\n   /**\n    * @description Tooltip to explain why the cookie should have been blocked by third-party cookie phaseout but is exempted.\n    */\n   exemptionReasonTopLevelStorageAccessAPI: 'This cookie is allowed by the top-level Storage Access API. Learn more: goo.gle/saa-top',\n   /**\n    * @description Tooltip to explain why the cookie should have been blocked by third-party cookie phaseout but is exempted.\n    */\n    exemptionReasonScheme: 'This cookie is allowed by the top-level url scheme',\n} as const;\n// clang-format on\n\nconst str_ = i18n.i18n.registerUIStrings('core/sdk/NetworkRequest.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class NetworkRequest extends Common.ObjectWrapper.ObjectWrapper<EventTypes> implements\n    TextUtils.ContentProvider.StreamingContentProvider {\n  #requestId: string;\n  #backendRequestId?: Protocol.Network.RequestId;\n  readonly #documentURL: Platform.DevToolsPath.UrlString;\n  readonly #frameId: Protocol.Page.FrameId|null;\n  readonly #loaderId: Protocol.Network.LoaderId|null;\n  readonly #hasUserGesture: boolean|undefined;\n  readonly #initiator: Protocol.Network.Initiator|null|undefined;\n  #redirectSource: NetworkRequest|null = null;\n  #preflightRequest: NetworkRequest|null = null;\n  #preflightInitiatorRequest: NetworkRequest|null = null;\n  #isRedirect = false;\n  #redirectDestination: NetworkRequest|null = null;\n  #issueTime = -1;\n  #startTime = -1;\n  #endTime = -1;\n  #blockedReason: Protocol.Network.BlockedReason|undefined = undefined;\n  #corsErrorStatus: Protocol.Network.CorsErrorStatus|undefined = undefined;\n  statusCode = 0;\n  statusText = '';\n  requestMethod = '';\n  requestTime = 0;\n  protocol = '';\n  alternateProtocolUsage: Protocol.Network.AlternateProtocolUsage|undefined = undefined;\n  mixedContentType: Protocol.Security.MixedContentType = Protocol.Security.MixedContentType.None;\n  #initialPriority: Protocol.Network.ResourcePriority|null = null;\n  #currentPriority: Protocol.Network.ResourcePriority|null = null;\n  #signedExchangeInfo: Protocol.Network.SignedExchangeInfo|null = null;\n  #resourceType: Common.ResourceType.ResourceType = Common.ResourceType.resourceTypes.Other;\n  #contentData: Promise<TextUtils.ContentData.ContentDataOrError>|null = null;\n  #streamingContentData: Promise<TextUtils.StreamingContentData.StreamingContentDataOrError>|null = null;\n  readonly #frames: WebSocketFrame[] = [];\n  #responseHeaderValues: Record<string, string|undefined> = {};\n  #responseHeadersText = '';\n  #originalResponseHeaders: Protocol.Fetch.HeaderEntry[] = [];\n  #sortedOriginalResponseHeaders?: NameValue[];\n\n  // This field is only used when intercepting and overriding requests, because\n  // in that case 'this.responseHeaders' does not contain 'set-cookie' headers.\n  #setCookieHeaders: Protocol.Fetch.HeaderEntry[] = [];\n\n  #requestHeaders: NameValue[] = [];\n  #requestHeaderValues: Record<string, string|undefined> = {};\n  #remoteAddress = '';\n  #remoteAddressSpace: Protocol.Network.IPAddressSpace = Protocol.Network.IPAddressSpace.Unknown;\n  #referrerPolicy: Protocol.Network.RequestReferrerPolicy|null = null;\n  #securityState: Protocol.Security.SecurityState = Protocol.Security.SecurityState.Unknown;\n  #securityDetails: Protocol.Network.SecurityDetails|null = null;\n  connectionId = '0';\n  connectionReused = false;\n  hasNetworkData = false;\n  #formParametersPromise: Promise<NameValue[]|null>|null = null;\n  #requestFormDataPromise: Promise<string|null>|null = Promise.resolve(null);\n  #hasExtraRequestInfo = false;\n  #hasExtraResponseInfo = false;\n  #blockedRequestCookies: BlockedCookieWithReason[] = [];\n  #includedRequestCookies: IncludedCookieWithReason[] = [];\n  #blockedResponseCookies: BlockedSetCookieWithReason[] = [];\n  #exemptedResponseCookies: ExemptedSetCookieWithReason[] = [];\n  #responseCookiesPartitionKey: Protocol.Network.CookiePartitionKey|null = null;\n  #responseCookiesPartitionKeyOpaque: boolean|null = null;\n  #siteHasCookieInOtherPartition = false;\n  localizedFailDescription: string|null = null;\n  #url!: Platform.DevToolsPath.UrlString;\n  #responseReceivedTime!: number;\n  #transferSize!: number;\n  #finished!: boolean;\n  #failed!: boolean;\n  #canceled!: boolean;\n  #preserved!: boolean;\n  #mimeType!: string;\n  #charset!: string;\n  #parsedURL!: Common.ParsedURL.ParsedURL;\n  #name!: string|undefined;\n  #path!: string|undefined;\n  #clientSecurityState!:|Protocol.Network.ClientSecurityState|undefined;\n  #trustTokenParams!: Protocol.Network.TrustTokenParams|undefined;\n  #trustTokenOperationDoneEvent!:|Protocol.Network.TrustTokenOperationDoneEvent|undefined;\n  #responseCacheStorageCacheName?: string;\n  #serviceWorkerResponseSource?: Protocol.Network.ServiceWorkerResponseSource;\n  #wallIssueTime?: number;\n  #responseRetrievalTime?: Date;\n  #resourceSize?: number;\n  #fromMemoryCache?: boolean;\n  #fromDiskCache?: boolean;\n  #fromPrefetchCache?: boolean;\n  #fromEarlyHints?: boolean;\n  #fetchedViaServiceWorker?: boolean;\n  #serviceWorkerRouterInfo?: Protocol.Network.ServiceWorkerRouterInfo;\n  #timing?: Protocol.Network.ResourceTiming;\n  #requestHeadersText?: string;\n  #responseHeaders?: NameValue[];\n  #earlyHintsHeaders?: NameValue[];\n  #sortedResponseHeaders?: NameValue[];\n  #responseCookies?: Cookie[];\n  #serverTimings?: ServerTiming[]|null;\n  #queryString?: string|null;\n  #parsedQueryParameters?: NameValue[];\n  #contentDataProvider?: () => Promise<TextUtils.ContentData.ContentDataOrError>;\n  #isSameSite: boolean|null = null;\n  #wasIntercepted = false;\n  #associatedData = new Map<string, object>();\n  #hasOverriddenContent = false;\n  #hasThirdPartyCookiePhaseoutIssue = false;\n  #serverSentEvents?: ServerSentEvents;\n  responseReceivedPromise?: Promise<void>;\n  responseReceivedPromiseResolve?: () => void;\n  directSocketInfo?: DirectSocketInfo;\n  readonly #directSocketChunks: DirectSocketChunk[] = [];\n  #isIpProtectionUsed: boolean;\n  #isAdRelated: boolean;\n  #appliedNetworkConditionsId?: string;\n\n  constructor(\n      requestId: string,\n      backendRequestId: Protocol.Network.RequestId|undefined,\n      url: Platform.DevToolsPath.UrlString,\n      documentURL: Platform.DevToolsPath.UrlString,\n      frameId: Protocol.Page.FrameId|null,\n      loaderId: Protocol.Network.LoaderId|null,\n      initiator: Protocol.Network.Initiator|null,\n      hasUserGesture?: boolean,\n  ) {\n    super();\n\n    this.#requestId = requestId;\n    this.#backendRequestId = backendRequestId;\n    this.setUrl(url);\n    this.#documentURL = documentURL;\n    this.#frameId = frameId;\n    this.#loaderId = loaderId;\n    this.#initiator = initiator;\n    this.#hasUserGesture = hasUserGesture;\n    this.#isIpProtectionUsed = false;\n    this.#isAdRelated = false;\n  }\n\n  static create(\n      backendRequestId: Protocol.Network.RequestId,\n      url: Platform.DevToolsPath.UrlString,\n      documentURL: Platform.DevToolsPath.UrlString,\n      frameId: Protocol.Page.FrameId|null,\n      loaderId: Protocol.Network.LoaderId|null,\n      initiator: Protocol.Network.Initiator|null,\n      hasUserGesture?: boolean,\n      ): NetworkRequest {\n    return new NetworkRequest(\n        backendRequestId,\n        backendRequestId,\n        url,\n        documentURL,\n        frameId,\n        loaderId,\n        initiator,\n        hasUserGesture,\n    );\n  }\n\n  static createForSocket(\n      backendRequestId: Protocol.Network.RequestId,\n      requestURL: Platform.DevToolsPath.UrlString,\n      initiator?: Protocol.Network.Initiator,\n      ): NetworkRequest {\n    return new NetworkRequest(\n        backendRequestId,\n        backendRequestId,\n        requestURL,\n        Platform.DevToolsPath.EmptyUrlString,\n        null,\n        null,\n        initiator || null,\n    );\n  }\n\n  static createWithoutBackendRequest(\n      requestId: string,\n      url: Platform.DevToolsPath.UrlString,\n      documentURL: Platform.DevToolsPath.UrlString,\n      initiator: Protocol.Network.Initiator|null,\n      ): NetworkRequest {\n    return new NetworkRequest(\n        requestId,\n        undefined,\n        url,\n        documentURL,\n        null,\n        null,\n        initiator,\n    );\n  }\n\n  identityCompare(other: NetworkRequest): number {\n    const thisId = this.requestId();\n    const thatId = other.requestId();\n    if (thisId > thatId) {\n      return 1;\n    }\n    if (thisId < thatId) {\n      return -1;\n    }\n    return 0;\n  }\n\n  requestId(): string {\n    return this.#requestId;\n  }\n\n  backendRequestId(): Protocol.Network.RequestId|undefined {\n    return this.#backendRequestId;\n  }\n\n  url(): Platform.DevToolsPath.UrlString {\n    return this.#url;\n  }\n\n  isBlobRequest(): boolean {\n    return Common.ParsedURL.schemeIs(this.#url, 'blob:');\n  }\n\n  setUrl(x: Platform.DevToolsPath.UrlString): void {\n    if (this.#url === x) {\n      return;\n    }\n\n    this.#url = x;\n    this.#parsedURL = new Common.ParsedURL.ParsedURL(x);\n    this.#queryString = undefined;\n    this.#parsedQueryParameters = undefined;\n    this.#name = undefined;\n    this.#path = undefined;\n  }\n\n  get documentURL(): Platform.DevToolsPath.UrlString {\n    return this.#documentURL;\n  }\n\n  get parsedURL(): Common.ParsedURL.ParsedURL {\n    return this.#parsedURL;\n  }\n\n  get frameId(): Protocol.Page.FrameId|null {\n    return this.#frameId;\n  }\n\n  get loaderId(): Protocol.Network.LoaderId|null {\n    return this.#loaderId;\n  }\n\n  get appliedNetworkConditionsId(): string|undefined {\n    return this.#appliedNetworkConditionsId;\n  }\n\n  setRemoteAddress(ip: string, port: number): void {\n    this.#remoteAddress = ip + ':' + port;\n    this.dispatchEventToListeners(Events.REMOTE_ADDRESS_CHANGED, this);\n  }\n\n  remoteAddress(): string {\n    return this.#remoteAddress;\n  }\n\n  remoteAddressSpace(): Protocol.Network.IPAddressSpace {\n    return this.#remoteAddressSpace;\n  }\n\n  /**\n   * The cache #name of the CacheStorage from where the response is served via\n   * the ServiceWorker.\n   */\n  getResponseCacheStorageCacheName(): string|undefined {\n    return this.#responseCacheStorageCacheName;\n  }\n\n  setResponseCacheStorageCacheName(x: string): void {\n    this.#responseCacheStorageCacheName = x;\n  }\n\n  serviceWorkerResponseSource():|Protocol.Network.ServiceWorkerResponseSource|undefined {\n    return this.#serviceWorkerResponseSource;\n  }\n\n  setServiceWorkerResponseSource(\n      serviceWorkerResponseSource: Protocol.Network.ServiceWorkerResponseSource,\n      ): void {\n    this.#serviceWorkerResponseSource = serviceWorkerResponseSource;\n  }\n\n  setReferrerPolicy(\n      referrerPolicy: Protocol.Network.RequestReferrerPolicy,\n      ): void {\n    this.#referrerPolicy = referrerPolicy;\n  }\n\n  referrerPolicy(): Protocol.Network.RequestReferrerPolicy|null {\n    return this.#referrerPolicy;\n  }\n\n  securityState(): Protocol.Security.SecurityState {\n    return this.#securityState;\n  }\n\n  setSecurityState(securityState: Protocol.Security.SecurityState): void {\n    this.#securityState = securityState;\n  }\n\n  securityDetails(): Protocol.Network.SecurityDetails|null {\n    return this.#securityDetails;\n  }\n\n  securityOrigin(): string {\n    return this.#parsedURL.securityOrigin();\n  }\n\n  setSecurityDetails(securityDetails: Protocol.Network.SecurityDetails): void {\n    this.#securityDetails = securityDetails;\n  }\n\n  get startTime(): number {\n    return this.#startTime || -1;\n  }\n\n  setIssueTime(monotonicTime: number, wallTime: number): void {\n    this.#issueTime = monotonicTime;\n    this.#wallIssueTime = wallTime;\n    this.#startTime = monotonicTime;\n  }\n\n  issueTime(): number {\n    return this.#issueTime;\n  }\n\n  pseudoWallTime(monotonicTime: number): number {\n    return this.#wallIssueTime ? this.#wallIssueTime - this.#issueTime + monotonicTime : monotonicTime;\n  }\n\n  get responseReceivedTime(): number {\n    return this.#responseReceivedTime || -1;\n  }\n\n  set responseReceivedTime(x: number) {\n    this.#responseReceivedTime = x;\n  }\n\n  /**\n   * The time at which the returned response was generated. For cached\n   * responses, this is the last time the cache entry was validated.\n   */\n  getResponseRetrievalTime(): Date|undefined {\n    return this.#responseRetrievalTime;\n  }\n\n  setResponseRetrievalTime(x: Date): void {\n    this.#responseRetrievalTime = x;\n  }\n\n  get endTime(): number {\n    return this.#endTime || -1;\n  }\n\n  set endTime(x: number) {\n    if (this.timing?.requestTime) {\n      // Check against accurate responseReceivedTime.\n      this.#endTime = Math.max(x, this.responseReceivedTime);\n    } else {\n      // Prefer endTime since it might be from the network stack.\n      this.#endTime = x;\n      if (this.#responseReceivedTime > x) {\n        this.#responseReceivedTime = x;\n      }\n    }\n    this.dispatchEventToListeners(Events.TIMING_CHANGED, this);\n  }\n\n  get duration(): number {\n    if (this.#endTime === -1 || this.#startTime === -1) {\n      return -1;\n    }\n    return this.#endTime - this.#startTime;\n  }\n\n  get latency(): number {\n    if (this.#responseReceivedTime === -1 || this.#startTime === -1) {\n      return -1;\n    }\n    return this.#responseReceivedTime - this.#startTime;\n  }\n\n  get resourceSize(): number {\n    return this.#resourceSize || 0;\n  }\n\n  set resourceSize(x: number) {\n    this.#resourceSize = x;\n  }\n\n  get transferSize(): number {\n    return this.#transferSize || 0;\n  }\n\n  increaseTransferSize(x: number): void {\n    this.#transferSize = (this.#transferSize || 0) + x;\n  }\n\n  setTransferSize(x: number): void {\n    this.#transferSize = x;\n  }\n\n  get finished(): boolean {\n    return this.#finished;\n  }\n\n  set finished(x: boolean) {\n    if (this.#finished === x) {\n      return;\n    }\n\n    this.#finished = x;\n\n    if (x) {\n      this.dispatchEventToListeners(Events.FINISHED_LOADING, this);\n    }\n  }\n\n  get failed(): boolean {\n    return this.#failed;\n  }\n\n  set failed(x: boolean) {\n    this.#failed = x;\n  }\n\n  get canceled(): boolean {\n    return this.#canceled;\n  }\n\n  set canceled(x: boolean) {\n    this.#canceled = x;\n  }\n\n  get preserved(): boolean {\n    return this.#preserved;\n  }\n\n  set preserved(x: boolean) {\n    this.#preserved = x;\n  }\n\n  blockedReason(): Protocol.Network.BlockedReason|undefined {\n    return this.#blockedReason;\n  }\n\n  setBlockedReason(reason: Protocol.Network.BlockedReason): void {\n    this.#blockedReason = reason;\n  }\n\n  corsErrorStatus(): Protocol.Network.CorsErrorStatus|undefined {\n    return this.#corsErrorStatus;\n  }\n\n  setCorsErrorStatus(corsErrorStatus: Protocol.Network.CorsErrorStatus): void {\n    this.#corsErrorStatus = corsErrorStatus;\n  }\n\n  wasBlocked(): boolean {\n    return Boolean(this.#blockedReason);\n  }\n\n  cached(): boolean {\n    return ((Boolean(this.#fromMemoryCache) || Boolean(this.#fromDiskCache)) && !this.#transferSize);\n  }\n\n  cachedInMemory(): boolean {\n    return Boolean(this.#fromMemoryCache) && !this.#transferSize;\n  }\n\n  fromPrefetchCache(): boolean {\n    return Boolean(this.#fromPrefetchCache);\n  }\n\n  setFromMemoryCache(): void {\n    this.#fromMemoryCache = true;\n    this.#timing = undefined;\n  }\n\n  get fromDiskCache(): boolean|undefined {\n    return this.#fromDiskCache;\n  }\n\n  setFromDiskCache(): void {\n    this.#fromDiskCache = true;\n  }\n\n  setFromPrefetchCache(): void {\n    this.#fromPrefetchCache = true;\n  }\n\n  fromEarlyHints(): boolean {\n    return Boolean(this.#fromEarlyHints);\n  }\n\n  setFromEarlyHints(): void {\n    this.#fromEarlyHints = true;\n  }\n\n  /**\n   * Returns true if the request was intercepted by a service worker and it\n   * provided its own response.\n   */\n  get fetchedViaServiceWorker(): boolean {\n    return Boolean(this.#fetchedViaServiceWorker);\n  }\n\n  set fetchedViaServiceWorker(x: boolean) {\n    this.#fetchedViaServiceWorker = x;\n  }\n\n  get serviceWorkerRouterInfo():|Protocol.Network.ServiceWorkerRouterInfo|undefined {\n    return this.#serviceWorkerRouterInfo;\n  }\n\n  set serviceWorkerRouterInfo(x: Protocol.Network.ServiceWorkerRouterInfo) {\n    this.#serviceWorkerRouterInfo = x;\n  }\n\n  /**\n   * Returns true if the request was matched to a route when using the\n   * ServiceWorker static routing API.\n   */\n  hasMatchingServiceWorkerRouter(): boolean {\n    // See definitions in `browser_protocol.pdl` for justification.\n    return (\n        this.#serviceWorkerRouterInfo !== undefined && this.serviceWorkerRouterInfo?.matchedSourceType !== undefined);\n  }\n\n  /**\n   * Returns true if the request was sent by a service worker.\n   */\n  initiatedByServiceWorker(): boolean {\n    const networkManager = NetworkManager.forRequest(this);\n    if (!networkManager) {\n      return false;\n    }\n    return networkManager.target().type() === Type.ServiceWorker;\n  }\n\n  get timing(): Protocol.Network.ResourceTiming|undefined {\n    return this.#timing;\n  }\n\n  set timing(timingInfo: Protocol.Network.ResourceTiming|undefined) {\n    if (!timingInfo || this.#fromMemoryCache) {\n      return;\n    }\n    // Take startTime and responseReceivedTime from timing data for better accuracy.\n    // Timing's requestTime is a baseline in seconds, rest of the numbers there are ticks in millis.\n    this.#startTime = timingInfo.requestTime;\n    const headersReceivedTime = timingInfo.requestTime + timingInfo.receiveHeadersEnd / 1000.0;\n    if ((this.#responseReceivedTime || -1) < 0 || this.#responseReceivedTime > headersReceivedTime) {\n      this.#responseReceivedTime = headersReceivedTime;\n    }\n    if (this.#startTime > this.#responseReceivedTime) {\n      this.#responseReceivedTime = this.#startTime;\n    }\n\n    this.#timing = timingInfo;\n    this.dispatchEventToListeners(Events.TIMING_CHANGED, this);\n  }\n\n  private setConnectTimingFromExtraInfo(\n      connectTiming: Protocol.Network.ConnectTiming,\n      ): void {\n    this.#startTime = connectTiming.requestTime;\n    this.dispatchEventToListeners(Events.TIMING_CHANGED, this);\n  }\n\n  get mimeType(): string {\n    return this.#mimeType;\n  }\n\n  set mimeType(x: string) {\n    this.#mimeType = x;\n    if (x === Platform.MimeType.MimeType.EVENTSTREAM && !this.#serverSentEvents) {\n      const parseFromStreamedData = this.resourceType() !== Common.ResourceType.resourceTypes.EventSource;\n      this.#serverSentEvents = new ServerSentEvents(\n          this,\n          parseFromStreamedData,\n      );\n    }\n  }\n\n  get displayName(): string {\n    return this.#parsedURL.displayName;\n  }\n\n  name(): string {\n    if (this.#name) {\n      return this.#name;\n    }\n    this.parseNameAndPathFromURL();\n    return this.#name as string;\n  }\n\n  path(): string {\n    if (this.#path) {\n      return this.#path;\n    }\n    this.parseNameAndPathFromURL();\n    return this.#path as string;\n  }\n\n  private parseNameAndPathFromURL(): void {\n    if (this.#parsedURL.isDataURL()) {\n      this.#name = this.#parsedURL.dataURLDisplayName();\n      this.#path = '';\n    } else if (this.#parsedURL.isBlobURL()) {\n      this.#name = this.#parsedURL.url;\n      this.#path = '';\n    } else if (this.#parsedURL.isAboutBlank()) {\n      this.#name = this.#parsedURL.url;\n      this.#path = '';\n    } else {\n      this.#path = this.#parsedURL.host + this.#parsedURL.folderPathComponents;\n\n      const networkManager = NetworkManager.forRequest(this);\n      const inspectedURL = networkManager ? Common.ParsedURL.ParsedURL.fromString(\n                                                networkManager.target().inspectedURL(),\n                                                ) :\n                                            null;\n      this.#path = Platform.StringUtilities.trimURL(\n          this.#path,\n          inspectedURL ? inspectedURL.host : '',\n      );\n      if (this.#parsedURL.lastPathComponent || this.#parsedURL.queryParams) {\n        this.#name =\n            this.#parsedURL.lastPathComponent + (this.#parsedURL.queryParams ? '?' + this.#parsedURL.queryParams : '');\n      } else if (this.#parsedURL.folderPathComponents) {\n        this.#name = this.#parsedURL.folderPathComponents.substring(\n                         this.#parsedURL.folderPathComponents.lastIndexOf('/') + 1,\n                         ) +\n            '/';\n        this.#path = this.#path.substring(\n            0,\n            this.#path.lastIndexOf('/'),\n        );\n      } else {\n        this.#name = this.#parsedURL.host;\n        this.#path = '';\n      }\n    }\n  }\n\n  get folder(): string {\n    let path: string = this.#parsedURL.path;\n    const indexOfQuery = path.indexOf('?');\n    if (indexOfQuery !== -1) {\n      path = path.substring(0, indexOfQuery);\n    }\n    const lastSlashIndex = path.lastIndexOf('/');\n    return lastSlashIndex !== -1 ? path.substring(0, lastSlashIndex) : '';\n  }\n\n  get pathname(): string {\n    return this.#parsedURL.path;\n  }\n\n  resourceType(): Common.ResourceType.ResourceType {\n    return this.#resourceType;\n  }\n\n  setResourceType(resourceType: Common.ResourceType.ResourceType): void {\n    this.#resourceType = resourceType;\n  }\n\n  get domain(): string {\n    return this.#parsedURL.host;\n  }\n\n  get scheme(): string {\n    return this.#parsedURL.scheme;\n  }\n\n  getInferredStatusText(): string {\n    return (this.statusText || HttpReasonPhraseStrings.getStatusText(this.statusCode));\n  }\n\n  redirectSource(): NetworkRequest|null {\n    return this.#redirectSource;\n  }\n\n  setRedirectSource(originatingRequest: NetworkRequest|null): void {\n    this.#redirectSource = originatingRequest;\n  }\n\n  preflightRequest(): NetworkRequest|null {\n    return this.#preflightRequest;\n  }\n\n  setPreflightRequest(preflightRequest: NetworkRequest|null): void {\n    this.#preflightRequest = preflightRequest;\n  }\n\n  preflightInitiatorRequest(): NetworkRequest|null {\n    return this.#preflightInitiatorRequest;\n  }\n\n  setPreflightInitiatorRequest(\n      preflightInitiatorRequest: NetworkRequest|null,\n      ): void {\n    this.#preflightInitiatorRequest = preflightInitiatorRequest;\n  }\n\n  isPreflightRequest(): boolean {\n    return (\n        this.#initiator !== null && this.#initiator !== undefined &&\n        this.#initiator.type === Protocol.Network.InitiatorType.Preflight);\n  }\n\n  redirectDestination(): NetworkRequest|null {\n    return this.#redirectDestination;\n  }\n\n  setRedirectDestination(redirectDestination: NetworkRequest|null): void {\n    this.#redirectDestination = redirectDestination;\n  }\n\n  requestHeaders(): NameValue[] {\n    return this.#requestHeaders;\n  }\n\n  setRequestHeaders(headers: NameValue[]): void {\n    this.#requestHeaders = headers;\n\n    this.dispatchEventToListeners(Events.REQUEST_HEADERS_CHANGED);\n  }\n\n  requestHeadersText(): string|undefined {\n    return this.#requestHeadersText;\n  }\n\n  setRequestHeadersText(text: string): void {\n    this.#requestHeadersText = text;\n\n    this.dispatchEventToListeners(Events.REQUEST_HEADERS_CHANGED);\n  }\n\n  requestHeaderValue(headerName: string): string|undefined {\n    if (this.#requestHeaderValues[headerName]) {\n      return this.#requestHeaderValues[headerName];\n    }\n    this.#requestHeaderValues[headerName] = this.computeHeaderValue(\n        this.requestHeaders(),\n        headerName,\n    );\n    return this.#requestHeaderValues[headerName];\n  }\n\n  requestFormData(): Promise<string|null> {\n    if (!this.#requestFormDataPromise) {\n      this.#requestFormDataPromise = NetworkManager.requestPostData(this);\n    }\n    return this.#requestFormDataPromise;\n  }\n\n  setRequestFormData(hasData: boolean, data: string|null): void {\n    this.#requestFormDataPromise = hasData && data === null ? null : Promise.resolve(data);\n    this.#formParametersPromise = null;\n  }\n\n  private filteredProtocolName(): string {\n    const protocol = this.protocol.toLowerCase();\n    if (protocol === 'h2') {\n      return 'http/2.0';\n    }\n    return protocol.replace(/^http\\/2(\\.0)?\\+/, 'http/2.0+');\n  }\n\n  requestHttpVersion(): string {\n    const headersText = this.requestHeadersText();\n    if (!headersText) {\n      const version = this.requestHeaderValue('version') || this.requestHeaderValue(':version');\n      if (version) {\n        return version;\n      }\n      return this.filteredProtocolName();\n    }\n    const firstLine = headersText.split(/\\r\\n/)[0];\n    const match = firstLine.match(/(HTTP\\/\\d+\\.\\d+)$/);\n    return match ? match[1] : 'HTTP/0.9';\n  }\n\n  get responseHeaders(): NameValue[] {\n    return this.#responseHeaders || [];\n  }\n\n  set responseHeaders(x: NameValue[]) {\n    this.#responseHeaders = x;\n    this.#sortedResponseHeaders = undefined;\n    this.#serverTimings = undefined;\n    this.#responseCookies = undefined;\n    this.#responseHeaderValues = {};\n\n    this.dispatchEventToListeners(Events.RESPONSE_HEADERS_CHANGED);\n  }\n\n  get earlyHintsHeaders(): NameValue[] {\n    return this.#earlyHintsHeaders || [];\n  }\n\n  set earlyHintsHeaders(x: NameValue[]) {\n    this.#earlyHintsHeaders = x;\n  }\n\n  get originalResponseHeaders(): Protocol.Fetch.HeaderEntry[] {\n    return this.#originalResponseHeaders;\n  }\n\n  set originalResponseHeaders(headers: Protocol.Fetch.HeaderEntry[]) {\n    this.#originalResponseHeaders = headers;\n    this.#sortedOriginalResponseHeaders = undefined;\n  }\n\n  get setCookieHeaders(): Protocol.Fetch.HeaderEntry[] {\n    return this.#setCookieHeaders;\n  }\n\n  set setCookieHeaders(headers: Protocol.Fetch.HeaderEntry[]) {\n    this.#setCookieHeaders = headers;\n  }\n\n  get responseHeadersText(): string {\n    return this.#responseHeadersText;\n  }\n\n  set responseHeadersText(x: string) {\n    this.#responseHeadersText = x;\n\n    this.dispatchEventToListeners(Events.RESPONSE_HEADERS_CHANGED);\n  }\n\n  get sortedResponseHeaders(): NameValue[] {\n    if (this.#sortedResponseHeaders !== undefined) {\n      return this.#sortedResponseHeaders;\n    }\n\n    this.#sortedResponseHeaders = this.responseHeaders.slice();\n    return this.#sortedResponseHeaders.sort(function(a, b) {\n      return Platform.StringUtilities.compare(\n          a.name.toLowerCase(),\n          b.name.toLowerCase(),\n      );\n    });\n  }\n\n  get sortedOriginalResponseHeaders(): NameValue[] {\n    if (this.#sortedOriginalResponseHeaders !== undefined) {\n      return this.#sortedOriginalResponseHeaders;\n    }\n\n    this.#sortedOriginalResponseHeaders = this.originalResponseHeaders.slice();\n    return this.#sortedOriginalResponseHeaders.sort(function(a, b) {\n      return Platform.StringUtilities.compare(\n          a.name.toLowerCase(),\n          b.name.toLowerCase(),\n      );\n    });\n  }\n\n  get overrideTypes(): OverrideType[] {\n    const types: OverrideType[] = [];\n\n    if (this.hasOverriddenContent) {\n      types.push('content');\n    }\n\n    if (this.hasOverriddenHeaders()) {\n      types.push('headers');\n    }\n\n    return types;\n  }\n\n  get hasOverriddenContent(): boolean {\n    return this.#hasOverriddenContent;\n  }\n\n  set hasOverriddenContent(value: boolean) {\n    this.#hasOverriddenContent = value;\n  }\n\n  #deduplicateHeaders(sortedHeaders: NameValue[]): NameValue[] {\n    const dedupedHeaders: NameValue[] = [];\n    for (const header of sortedHeaders) {\n      if (dedupedHeaders.length && dedupedHeaders[dedupedHeaders.length - 1].name === header.name) {\n        dedupedHeaders[dedupedHeaders.length - 1].value += `, ${header.value}`;\n      } else {\n        dedupedHeaders.push({name: header.name, value: header.value});\n      }\n    }\n    return dedupedHeaders;\n  }\n\n  hasOverriddenHeaders(): boolean {\n    if (!this.#originalResponseHeaders.length) {\n      return false;\n    }\n    const responseHeaders = this.#deduplicateHeaders(\n        this.sortedResponseHeaders,\n    );\n    const originalResponseHeaders = this.#deduplicateHeaders(\n        this.sortedOriginalResponseHeaders,\n    );\n    if (responseHeaders.length !== originalResponseHeaders.length) {\n      return true;\n    }\n    for (let i = 0; i < responseHeaders.length; i++) {\n      if (responseHeaders[i].name.toLowerCase() !== originalResponseHeaders[i].name.toLowerCase()) {\n        return true;\n      }\n      if (responseHeaders[i].value !== originalResponseHeaders[i].value) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  responseHeaderValue(headerName: string): string|undefined {\n    if (headerName in this.#responseHeaderValues) {\n      return this.#responseHeaderValues[headerName];\n    }\n    this.#responseHeaderValues[headerName] = this.computeHeaderValue(\n        this.responseHeaders,\n        headerName,\n    );\n    return this.#responseHeaderValues[headerName];\n  }\n\n  wasIntercepted(): boolean {\n    return this.#wasIntercepted;\n  }\n\n  setWasIntercepted(wasIntercepted: boolean): void {\n    this.#wasIntercepted = wasIntercepted;\n  }\n\n  setEarlyHintsHeaders(headers: NameValue[]): void {\n    this.earlyHintsHeaders = headers;\n  }\n\n  get responseCookies(): Cookie[] {\n    if (!this.#responseCookies) {\n      this.#responseCookies = CookieParser.parseSetCookie(\n                                  this.responseHeaderValue('Set-Cookie'),\n                                  this.domain,\n                                  ) ||\n          [];\n      if (this.#responseCookiesPartitionKey) {\n        for (const cookie of this.#responseCookies) {\n          if (cookie.partitioned()) {\n            cookie.setPartitionKey(\n                this.#responseCookiesPartitionKey.topLevelSite,\n                this.#responseCookiesPartitionKey.hasCrossSiteAncestor,\n            );\n          }\n        }\n      } else if (this.#responseCookiesPartitionKeyOpaque) {\n        for (const cookie of this.#responseCookies) {\n          // Do not check cookie.partitioned() since most opaque partitions\n          // are fenced/credentialless frames partitioned by default.\n          cookie.setPartitionKeyOpaque();\n        }\n      }\n    }\n    return this.#responseCookies;\n  }\n\n  set responseCookies(responseCookies: Cookie[]) {\n    this.#responseCookies = responseCookies;\n  }\n\n  responseLastModified(): string|undefined {\n    return this.responseHeaderValue('last-modified');\n  }\n\n  allCookiesIncludingBlockedOnes(): Cookie[] {\n    return [\n      ...this.includedRequestCookies().map(\n          includedRequestCookie => includedRequestCookie.cookie,\n          ),\n      ...this.responseCookies,\n      ...this.blockedRequestCookies().map(\n          blockedRequestCookie => blockedRequestCookie.cookie,\n          ),\n      ...this.blockedResponseCookies().map(\n          blockedResponseCookie => blockedResponseCookie.cookie,\n          ),\n    ].filter(v => !!v);\n  }\n\n  get serverTimings(): ServerTiming[]|null {\n    if (typeof this.#serverTimings === 'undefined') {\n      this.#serverTimings = ServerTiming.parseHeaders(\n          this.responseHeaders,\n      );\n    }\n    return this.#serverTimings;\n  }\n\n  queryString(): string|null {\n    if (this.#queryString !== undefined) {\n      return this.#queryString;\n    }\n\n    let queryString: string|null = null;\n    const url = this.url();\n    const questionMarkPosition = url.indexOf('?');\n    if (questionMarkPosition !== -1) {\n      queryString = url.substring(questionMarkPosition + 1);\n      const hashSignPosition = queryString.indexOf('#');\n      if (hashSignPosition !== -1) {\n        queryString = queryString.substring(0, hashSignPosition);\n      }\n    }\n    this.#queryString = queryString;\n    return this.#queryString;\n  }\n\n  get queryParameters(): NameValue[]|null {\n    if (this.#parsedQueryParameters) {\n      return this.#parsedQueryParameters;\n    }\n    const queryString = this.queryString();\n    if (!queryString) {\n      return null;\n    }\n    this.#parsedQueryParameters = this.parseParameters(queryString);\n    return this.#parsedQueryParameters;\n  }\n\n  private async parseFormParameters(): Promise<NameValue[]|null> {\n    const requestContentType = this.requestContentType();\n\n    if (!requestContentType) {\n      return null;\n    }\n\n    // Handling application/#x-www-form-urlencoded request bodies.\n    if (requestContentType.match(/^application\\/x-www-form-urlencoded\\s*(;.*)?$/i)) {\n      const formData = await this.requestFormData();\n      if (!formData) {\n        return null;\n      }\n\n      return this.parseParameters(formData);\n    }\n\n    // Handling multipart/form-data request bodies.\n    const multipartDetails = requestContentType.match(\n        /^multipart\\/form-data\\s*;\\s*boundary\\s*=\\s*(\\S+)\\s*$/,\n    );\n\n    if (!multipartDetails) {\n      return null;\n    }\n\n    const boundary = multipartDetails[1];\n    if (!boundary) {\n      return null;\n    }\n\n    const formData = await this.requestFormData();\n    if (!formData) {\n      return null;\n    }\n\n    return this.parseMultipartFormDataParameters(formData, boundary);\n  }\n\n  formParameters(): Promise<NameValue[]|null> {\n    if (!this.#formParametersPromise) {\n      this.#formParametersPromise = this.parseFormParameters();\n    }\n    return this.#formParametersPromise;\n  }\n\n  responseHttpVersion(): string {\n    const headersText = this.#responseHeadersText;\n    if (!headersText) {\n      const version = this.responseHeaderValue('version') || this.responseHeaderValue(':version');\n      if (version) {\n        return version;\n      }\n      return this.filteredProtocolName();\n    }\n    const firstLine = headersText.split(/\\r\\n/)[0];\n    const match = firstLine.match(/^(HTTP\\/\\d+\\.\\d+)/);\n    return match ? match[1] : 'HTTP/0.9';\n  }\n\n  private parseParameters(queryString: string): NameValue[] {\n    function parseNameValue(pair: string): {name: string, value: string} {\n      const position = pair.indexOf('=');\n      if (position === -1) {\n        return {name: pair, value: ''};\n      }\n      return {\n        name: pair.substring(0, position),\n        value: pair.substring(position + 1),\n      };\n    }\n    return queryString.split('&').map(parseNameValue);\n  }\n\n  /**\n   * Parses multipart/form-data; boundary=boundaryString request bodies -\n   * --boundaryString\n   * Content-Disposition: form-data; #name=\"field-#name\"; filename=\"r.gif\"\n   * Content-Type: application/octet-stream\n   *\n   * optionalValue\n   * --boundaryString\n   * Content-Disposition: form-data; #name=\"field-#name-2\"\n   *\n   * optionalValue2\n   * --boundaryString--\n   */\n  private parseMultipartFormDataParameters(\n      data: string,\n      boundary: string,\n      ): NameValue[] {\n    const sanitizedBoundary = Platform.StringUtilities.escapeForRegExp(boundary);\n    const keyValuePattern = new RegExp(\n        // Header with an optional file #name.\n        '^\\\\r\\\\ncontent-disposition\\\\s*:\\\\s*form-data\\\\s*;\\\\s*name=\"([^\"]*)\"(?:\\\\s*;\\\\s*filename=\"([^\"]*)\")?' +\n            // Optional secondary header with the content type.\n            '(?:\\\\r\\\\ncontent-type\\\\s*:\\\\s*([^\\\\r\\\\n]*))?' +\n            // Padding.\n            '\\\\r\\\\n\\\\r\\\\n' +\n            // Value\n            '(.*)' +\n            // Padding.\n            '\\\\r\\\\n$',\n        'is',\n    );\n    const fields = data.split(\n        new RegExp(`--${sanitizedBoundary}(?:--\\s*$)?`, 'g'),\n    );\n    return fields.reduce(parseMultipartField, []);\n\n    function parseMultipartField(\n        result: NameValue[],\n        field: string,\n        ): NameValue[] {\n      const [match, name, filename, contentType, value] = field.match(keyValuePattern) || [];\n\n      if (!match) {\n        return result;\n      }\n\n      const processedValue = filename || contentType ? i18nString(UIStrings.binary) : value;\n      result.push({name, value: processedValue});\n\n      return result;\n    }\n  }\n\n  private computeHeaderValue(\n      headers: NameValue[],\n      headerName: string,\n      ): string|undefined {\n    headerName = headerName.toLowerCase();\n\n    const values = [];\n    for (let i = 0; i < headers.length; ++i) {\n      if (headers[i].name.toLowerCase() === headerName) {\n        values.push(headers[i].value);\n      }\n    }\n    if (!values.length) {\n      return undefined;\n    }\n    // Set-Cookie #values should be separated by '\\n', not comma, otherwise cookies could not be parsed.\n    if (headerName === 'set-cookie') {\n      return values.join('\\n');\n    }\n    return values.join(', ');\n  }\n\n  requestContentData(): Promise<TextUtils.ContentData.ContentDataOrError> {\n    if (this.#contentData) {\n      return this.#contentData;\n    }\n    if (this.#contentDataProvider) {\n      this.#contentData = this.#contentDataProvider();\n    } else {\n      this.#contentData = NetworkManager.requestContentData(this);\n    }\n    return this.#contentData;\n  }\n\n  setContentDataProvider(\n      dataProvider: () => Promise<TextUtils.ContentData.ContentDataOrError>,\n      ): void {\n    console.assert(\n        !this.#contentData,\n        'contentData can only be set once.',\n    );\n    this.#contentDataProvider = dataProvider;\n  }\n\n  requestStreamingContent(): Promise<TextUtils.StreamingContentData.StreamingContentDataOrError> {\n    if (this.#streamingContentData) {\n      return this.#streamingContentData;\n    }\n\n    const contentPromise = this.finished ? this.requestContentData() : NetworkManager.streamResponseBody(this);\n    this.#streamingContentData = contentPromise.then(contentData => {\n      if (TextUtils.ContentData.ContentData.isError(contentData)) {\n        return contentData;\n      }\n      // Note that this is save: \"streamResponseBody()\" always creates base64-based ContentData and\n      // for \"contentData()\" we'll never call \"addChunk\".\n      return TextUtils.StreamingContentData.StreamingContentData.from(\n          contentData,\n      );\n    });\n\n    return this.#streamingContentData;\n  }\n\n  contentURL(): Platform.DevToolsPath.UrlString {\n    return this.#url;\n  }\n\n  contentType(): Common.ResourceType.ResourceType {\n    return this.#resourceType;\n  }\n\n  async searchInContent(\n      query: string,\n      caseSensitive: boolean,\n      isRegex: boolean,\n      ): Promise<TextUtils.ContentProvider.SearchMatch[]> {\n    if (!this.#contentDataProvider) {\n      return await NetworkManager.searchInRequest(\n          this,\n          query,\n          caseSensitive,\n          isRegex,\n      );\n    }\n\n    const contentData = await this.requestContentData();\n    if (TextUtils.ContentData.ContentData.isError(contentData) || !contentData.isTextContent) {\n      return [];\n    }\n    return TextUtils.TextUtils.performSearchInContentData(\n        contentData,\n        query,\n        caseSensitive,\n        isRegex,\n    );\n  }\n\n  requestContentType(): string|undefined {\n    return this.requestHeaderValue('Content-Type');\n  }\n\n  hasErrorStatusCode(): boolean {\n    return this.statusCode >= 400;\n  }\n\n  setInitialPriority(priority: Protocol.Network.ResourcePriority): void {\n    this.#initialPriority = priority;\n  }\n\n  initialPriority(): Protocol.Network.ResourcePriority|null {\n    return this.#initialPriority;\n  }\n\n  setPriority(priority: Protocol.Network.ResourcePriority): void {\n    this.#currentPriority = priority;\n  }\n\n  priority(): Protocol.Network.ResourcePriority|null {\n    return this.#currentPriority || this.#initialPriority || null;\n  }\n\n  setSignedExchangeInfo(info: Protocol.Network.SignedExchangeInfo): void {\n    this.#signedExchangeInfo = info;\n  }\n\n  signedExchangeInfo(): Protocol.Network.SignedExchangeInfo|null {\n    return this.#signedExchangeInfo;\n  }\n\n  async populateImageSource(image: HTMLImageElement): Promise<void> {\n    const contentData = await this.requestContentData();\n    if (TextUtils.ContentData.ContentData.isError(contentData)) {\n      return;\n    }\n    let imageSrc = contentData.asDataUrl();\n    if (imageSrc === null && !this.#failed) {\n      const cacheControl = this.responseHeaderValue('cache-control') || '';\n      if (!cacheControl.includes('no-cache')) {\n        imageSrc = this.#url;\n      }\n    }\n    if (imageSrc !== null) {\n      image.src = imageSrc;\n    }\n  }\n\n  initiator(): Protocol.Network.Initiator|null {\n    return this.#initiator || null;\n  }\n\n  hasUserGesture(): boolean|null {\n    return this.#hasUserGesture ?? null;\n  }\n\n  frames(): WebSocketFrame[] {\n    return this.#frames;\n  }\n\n  addProtocolFrameError(errorMessage: string, time: number): void {\n    this.addFrame({\n      type: WebSocketFrameType.Error,\n      text: errorMessage,\n      time: this.pseudoWallTime(time),\n      opCode: -1,\n      mask: false,\n    });\n  }\n\n  addProtocolFrame(\n      response: Protocol.Network.WebSocketFrame,\n      time: number,\n      sent: boolean,\n      ): void {\n    const type = sent ? WebSocketFrameType.Send : WebSocketFrameType.Receive;\n    this.addFrame({\n      type,\n      text: response.payloadData,\n      time: this.pseudoWallTime(time),\n      opCode: response.opcode,\n      mask: response.mask,\n    });\n  }\n\n  addFrame(frame: WebSocketFrame): void {\n    this.#frames.push(frame);\n    this.dispatchEventToListeners(Events.WEBSOCKET_FRAME_ADDED, frame);\n  }\n\n  directSocketChunks(): DirectSocketChunk[] {\n    return this.#directSocketChunks;\n  }\n\n  addDirectSocketChunk(chunk: DirectSocketChunk): void {\n    this.#directSocketChunks.push(chunk);\n    this.dispatchEventToListeners(Events.DIRECTSOCKET_CHUNK_ADDED, chunk);\n  }\n\n  eventSourceMessages(): readonly EventSourceMessage[] {\n    return this.#serverSentEvents?.eventSourceMessages ?? [];\n  }\n\n  addEventSourceMessage(\n      time: number,\n      eventName: string,\n      eventId: string,\n      data: string,\n      ): void {\n    this.#serverSentEvents?.onProtocolEventSourceMessageReceived(\n        eventName,\n        data,\n        eventId,\n        this.pseudoWallTime(time),\n    );\n  }\n\n  markAsRedirect(redirectCount: number): void {\n    this.#isRedirect = true;\n    this.#requestId = `${this.#backendRequestId}:redirected.${redirectCount}`;\n  }\n\n  isRedirect(): boolean {\n    return this.#isRedirect;\n  }\n\n  setRequestIdForTest(requestId: Protocol.Network.RequestId): void {\n    this.#backendRequestId = requestId;\n    this.#requestId = requestId;\n  }\n\n  charset(): string|null {\n    return this.#charset ?? null;\n  }\n\n  setCharset(charset: string): void {\n    this.#charset = charset;\n  }\n\n  addExtraRequestInfo(extraRequestInfo: ExtraRequestInfo): void {\n    this.#blockedRequestCookies = extraRequestInfo.blockedRequestCookies;\n    this.setIncludedRequestCookies(extraRequestInfo.includedRequestCookies);\n    this.setRequestHeaders(extraRequestInfo.requestHeaders);\n    this.#hasExtraRequestInfo = true;\n    this.setRequestHeadersText('');  // Mark request headers as non-provisional\n    this.#clientSecurityState = extraRequestInfo.clientSecurityState;\n    this.#appliedNetworkConditionsId = extraRequestInfo.appliedNetworkConditionsId;\n    if (extraRequestInfo.connectTiming) {\n      this.setConnectTimingFromExtraInfo(extraRequestInfo.connectTiming);\n    }\n    this.#siteHasCookieInOtherPartition = extraRequestInfo.siteHasCookieInOtherPartition ?? false;\n\n    this.#hasThirdPartyCookiePhaseoutIssue = this.#blockedRequestCookies.some(\n        item => item.blockedReasons.includes(\n            Protocol.Network.CookieBlockedReason.ThirdPartyPhaseout,\n            ),\n    );\n  }\n\n  hasExtraRequestInfo(): boolean {\n    return this.#hasExtraRequestInfo;\n  }\n\n  blockedRequestCookies(): BlockedCookieWithReason[] {\n    return this.#blockedRequestCookies;\n  }\n\n  setIncludedRequestCookies(includedRequestCookies: IncludedCookieWithReason[]): void {\n    this.#includedRequestCookies = includedRequestCookies;\n  }\n\n  includedRequestCookies(): IncludedCookieWithReason[] {\n    return this.#includedRequestCookies;\n  }\n\n  hasRequestCookies(): boolean {\n    return (this.#includedRequestCookies.length > 0 || this.#blockedRequestCookies.length > 0);\n  }\n\n  siteHasCookieInOtherPartition(): boolean {\n    return this.#siteHasCookieInOtherPartition;\n  }\n\n  // Parse the status text from the first line of the response headers text.\n  // See net::HttpResponseHeaders::GetStatusText.\n  static parseStatusTextFromResponseHeadersText(\n      responseHeadersText: string,\n      ): string {\n    const firstLineParts = responseHeadersText.split('\\r')[0].split(' ');\n    return firstLineParts.slice(2).join(' ');\n  }\n\n  addExtraResponseInfo(extraResponseInfo: ExtraResponseInfo): void {\n    this.#blockedResponseCookies = extraResponseInfo.blockedResponseCookies;\n    if (extraResponseInfo.exemptedResponseCookies) {\n      this.#exemptedResponseCookies = extraResponseInfo.exemptedResponseCookies;\n    }\n    this.#responseCookiesPartitionKey =\n        extraResponseInfo.cookiePartitionKey ? extraResponseInfo.cookiePartitionKey : null;\n    this.#responseCookiesPartitionKeyOpaque = extraResponseInfo.cookiePartitionKeyOpaque || null;\n    this.responseHeaders = extraResponseInfo.responseHeaders;\n    // We store a copy of the headers we initially received, so that after\n    // potential header overrides, we can compare actual with original headers.\n    this.originalResponseHeaders = extraResponseInfo.responseHeaders.map(\n        headerEntry => ({...headerEntry}),\n    );\n\n    if (extraResponseInfo.responseHeadersText) {\n      this.responseHeadersText = extraResponseInfo.responseHeadersText;\n\n      if (!this.requestHeadersText()) {\n        // Generate request headers text from raw headers in extra request info because\n        // Network.requestWillBeSentExtraInfo doesn't include headers text.\n        let requestHeadersText = `${this.requestMethod} ${this.parsedURL.path}`;\n        if (this.parsedURL.queryParams) {\n          requestHeadersText += `?${this.parsedURL.queryParams}`;\n        }\n        requestHeadersText += ' HTTP/1.1\\r\\n';\n\n        for (const {name, value} of this.requestHeaders()) {\n          requestHeadersText += `${name}: ${value}\\r\\n`;\n        }\n        this.setRequestHeadersText(requestHeadersText);\n      }\n\n      this.statusText = NetworkRequest.parseStatusTextFromResponseHeadersText(\n          extraResponseInfo.responseHeadersText,\n      );\n    }\n    this.#remoteAddressSpace = extraResponseInfo.resourceIPAddressSpace;\n\n    if (extraResponseInfo.statusCode) {\n      this.statusCode = extraResponseInfo.statusCode;\n    }\n\n    this.#hasExtraResponseInfo = true;\n\n    // TODO(crbug.com/1252463) Explore replacing this with a DevTools Issue.\n    const networkManager = NetworkManager.forRequest(this);\n    if (!networkManager) {\n      return;\n    }\n    for (const blockedCookie of this.#blockedResponseCookies) {\n      if (blockedCookie.blockedReasons.includes(\n              Protocol.Network.SetCookieBlockedReason.NameValuePairExceedsMaxSize,\n              )) {\n        const message = i18nString(UIStrings.setcookieHeaderIsIgnoredIn, {\n          PH1: this.url(),\n        });\n        networkManager.dispatchEventToListeners(\n            NetworkManagerEvents.MessageGenerated,\n            {message, requestId: this.#requestId, warning: true},\n        );\n      }\n    }\n\n    const cookieModel = networkManager.target().model(CookieModel);\n    if (!cookieModel) {\n      return;\n    }\n    for (const exemptedCookie of this.#exemptedResponseCookies) {\n      cookieModel.removeBlockedCookie(exemptedCookie.cookie);\n    }\n    for (const blockedCookie of this.#blockedResponseCookies) {\n      const cookie = blockedCookie.cookie;\n      if (!cookie) {\n        continue;\n      }\n      if (blockedCookie.blockedReasons.includes(\n              Protocol.Network.SetCookieBlockedReason.ThirdPartyPhaseout,\n              )) {\n        this.#hasThirdPartyCookiePhaseoutIssue = true;\n      }\n      cookieModel.addBlockedCookie(\n          cookie,\n          blockedCookie.blockedReasons.map(blockedReason => ({\n                                             attribute: setCookieBlockedReasonToAttribute(blockedReason),\n                                             uiString: setCookieBlockedReasonToUiString(blockedReason),\n                                           })),\n      );\n    }\n  }\n\n  hasExtraResponseInfo(): boolean {\n    return this.#hasExtraResponseInfo;\n  }\n\n  blockedResponseCookies(): BlockedSetCookieWithReason[] {\n    return this.#blockedResponseCookies;\n  }\n\n  exemptedResponseCookies(): ExemptedSetCookieWithReason[] {\n    return this.#exemptedResponseCookies;\n  }\n\n  nonBlockedResponseCookies(): Cookie[] {\n    const blockedCookieLines: Array<string|null> = this.blockedResponseCookies().map(\n        blockedCookie => blockedCookie.cookieLine,\n    );\n    // Use array and remove 1 by 1 to handle the (potential) case of multiple\n    // identical cookies, only some of which are blocked.\n    const responseCookies = this.responseCookies.filter(cookie => {\n      const index = blockedCookieLines.indexOf(cookie.getCookieLine());\n      if (index !== -1) {\n        blockedCookieLines[index] = null;\n        return false;\n      }\n      return true;\n    });\n    return responseCookies;\n  }\n\n  responseCookiesPartitionKey(): Protocol.Network.CookiePartitionKey|null {\n    return this.#responseCookiesPartitionKey;\n  }\n\n  responseCookiesPartitionKeyOpaque(): boolean|null {\n    return this.#responseCookiesPartitionKeyOpaque;\n  }\n\n  redirectSourceSignedExchangeInfoHasNoErrors(): boolean {\n    return (\n        this.#redirectSource !== null && this.#redirectSource.#signedExchangeInfo !== null &&\n        !this.#redirectSource.#signedExchangeInfo.errors);\n  }\n\n  clientSecurityState(): Protocol.Network.ClientSecurityState|undefined {\n    return this.#clientSecurityState;\n  }\n\n  setTrustTokenParams(\n      trustTokenParams: Protocol.Network.TrustTokenParams,\n      ): void {\n    this.#trustTokenParams = trustTokenParams;\n  }\n\n  trustTokenParams(): Protocol.Network.TrustTokenParams|undefined {\n    return this.#trustTokenParams;\n  }\n\n  setTrustTokenOperationDoneEvent(\n      doneEvent: Protocol.Network.TrustTokenOperationDoneEvent,\n      ): void {\n    this.#trustTokenOperationDoneEvent = doneEvent;\n\n    this.dispatchEventToListeners(Events.TRUST_TOKEN_RESULT_ADDED);\n  }\n\n  trustTokenOperationDoneEvent():|Protocol.Network.TrustTokenOperationDoneEvent|undefined {\n    return this.#trustTokenOperationDoneEvent;\n  }\n\n  setIsSameSite(isSameSite: boolean): void {\n    this.#isSameSite = isSameSite;\n  }\n\n  isSameSite(): boolean|null {\n    return this.#isSameSite;\n  }\n\n  setIsIpProtectionUsed(isIpProtectionUsed: boolean): void {\n    this.#isIpProtectionUsed = isIpProtectionUsed;\n  }\n\n  isIpProtectionUsed(): boolean|null {\n    return this.#isIpProtectionUsed;\n  }\n\n  setIsAdRelated(isAdRelated: boolean): void {\n    this.#isAdRelated = isAdRelated;\n  }\n\n  isAdRelated(): boolean {\n    return this.#isAdRelated;\n  }\n\n  getAssociatedData(key: string): object|null {\n    return this.#associatedData.get(key) || null;\n  }\n\n  setAssociatedData(key: string, data: object): void {\n    this.#associatedData.set(key, data);\n  }\n\n  deleteAssociatedData(key: string): void {\n    this.#associatedData.delete(key);\n  }\n\n  hasThirdPartyCookiePhaseoutIssue(): boolean {\n    return this.#hasThirdPartyCookiePhaseoutIssue;\n  }\n\n  addDataReceivedEvent({\n    timestamp,\n    dataLength,\n    encodedDataLength,\n    data,\n  }: Protocol.Network.DataReceivedEvent): void {\n    this.resourceSize += dataLength;\n    if (encodedDataLength !== -1) {\n      this.increaseTransferSize(encodedDataLength);\n    }\n    this.endTime = timestamp;\n    if (data) {\n      void this.#streamingContentData?.then(contentData => {\n        if (!TextUtils.StreamingContentData.isError(contentData)) {\n          contentData.addChunk(data);\n        }\n      });\n    }\n  }\n\n  waitForResponseReceived(): Promise<void> {\n    if (this.responseReceivedPromise) {\n      return this.responseReceivedPromise;\n    }\n    const {promise, resolve} = Promise.withResolvers<void>();\n    this.responseReceivedPromise = promise;\n    this.responseReceivedPromiseResolve = resolve;\n    return this.responseReceivedPromise;\n  }\n}\n\nexport enum Events {\n  FINISHED_LOADING = 'FinishedLoading',\n  TIMING_CHANGED = 'TimingChanged',\n  REMOTE_ADDRESS_CHANGED = 'RemoteAddressChanged',\n  REQUEST_HEADERS_CHANGED = 'RequestHeadersChanged',\n  RESPONSE_HEADERS_CHANGED = 'ResponseHeadersChanged',\n  WEBSOCKET_FRAME_ADDED = 'WebsocketFrameAdded',\n  DIRECTSOCKET_CHUNK_ADDED = 'DirectsocketChunkAdded',\n  EVENT_SOURCE_MESSAGE_ADDED = 'EventSourceMessageAdded',\n  TRUST_TOKEN_RESULT_ADDED = 'TrustTokenResultAdded',\n}\n\nexport interface EventTypes {\n  [Events.FINISHED_LOADING]: NetworkRequest;\n  [Events.TIMING_CHANGED]: NetworkRequest;\n  [Events.REMOTE_ADDRESS_CHANGED]: NetworkRequest;\n  [Events.REQUEST_HEADERS_CHANGED]: void;\n  [Events.RESPONSE_HEADERS_CHANGED]: void;\n  [Events.WEBSOCKET_FRAME_ADDED]: WebSocketFrame;\n  [Events.DIRECTSOCKET_CHUNK_ADDED]: DirectSocketChunk;\n  [Events.DIRECTSOCKET_CHUNK_ADDED]: DirectSocketChunk;\n  [Events.EVENT_SOURCE_MESSAGE_ADDED]: EventSourceMessage;\n  [Events.TRUST_TOKEN_RESULT_ADDED]: void;\n}\n\nexport const enum InitiatorType {\n  OTHER = 'other',\n  PARSER = 'parser',\n  REDIRECT = 'redirect',\n  SCRIPT = 'script',\n  PRELOAD = 'preload',\n  SIGNED_EXCHANGE = 'signedExchange',\n  PREFLIGHT = 'preflight',\n}\n\nexport enum WebSocketFrameType {\n  /* eslint-disable @typescript-eslint/naming-convention -- Used by web_tests. */\n  Send = 'send',\n  Receive = 'receive',\n  Error = 'error',\n  /* eslint-enable @typescript-eslint/naming-convention */\n}\n\nexport const cookieExemptionReasonToUiString = function(\n    exemptionReason: Protocol.Network.CookieExemptionReason,\n    ): string {\n  switch (exemptionReason) {\n    case Protocol.Network.CookieExemptionReason.UserSetting:\n      return i18nString(UIStrings.exemptionReasonUserSetting);\n    case Protocol.Network.CookieExemptionReason.TPCDMetadata:\n      return i18nString(UIStrings.exemptionReasonTPCDMetadata);\n    case Protocol.Network.CookieExemptionReason.TopLevelTPCDDeprecationTrial:\n      return i18nString(UIStrings.exemptionReasonTopLevelTPCDDeprecationTrial);\n    case Protocol.Network.CookieExemptionReason.TPCDDeprecationTrial:\n      return i18nString(UIStrings.exemptionReasonTPCDDeprecationTrial);\n    case Protocol.Network.CookieExemptionReason.TPCDHeuristics:\n      return i18nString(UIStrings.exemptionReasonTPCDHeuristics);\n    case Protocol.Network.CookieExemptionReason.EnterprisePolicy:\n      return i18nString(UIStrings.exemptionReasonEnterprisePolicy);\n    case Protocol.Network.CookieExemptionReason.StorageAccess:\n      return i18nString(UIStrings.exemptionReasonStorageAccessAPI);\n    case Protocol.Network.CookieExemptionReason.TopLevelStorageAccess:\n      return i18nString(UIStrings.exemptionReasonTopLevelStorageAccessAPI);\n    case Protocol.Network.CookieExemptionReason.Scheme:\n      return i18nString(UIStrings.exemptionReasonScheme);\n  }\n  return '';\n};\n\nexport const cookieBlockedReasonToUiString = function(\n    blockedReason: Protocol.Network.CookieBlockedReason,\n    ): string {\n  switch (blockedReason) {\n    case Protocol.Network.CookieBlockedReason.SecureOnly:\n      return i18nString(UIStrings.secureOnly);\n    case Protocol.Network.CookieBlockedReason.NotOnPath:\n      return i18nString(UIStrings.notOnPath);\n    case Protocol.Network.CookieBlockedReason.DomainMismatch:\n      return i18nString(UIStrings.domainMismatch);\n    case Protocol.Network.CookieBlockedReason.SameSiteStrict:\n      return i18nString(UIStrings.sameSiteStrict);\n    case Protocol.Network.CookieBlockedReason.SameSiteLax:\n      return i18nString(UIStrings.sameSiteLax);\n    case Protocol.Network.CookieBlockedReason.SameSiteUnspecifiedTreatedAsLax:\n      return i18nString(UIStrings.sameSiteUnspecifiedTreatedAsLax);\n    case Protocol.Network.CookieBlockedReason.SameSiteNoneInsecure:\n      return i18nString(UIStrings.sameSiteNoneInsecure);\n    case Protocol.Network.CookieBlockedReason.UserPreferences:\n      return i18nString(UIStrings.userPreferences);\n    case Protocol.Network.CookieBlockedReason.UnknownError:\n      return i18nString(UIStrings.unknownError);\n    case Protocol.Network.CookieBlockedReason.SchemefulSameSiteStrict:\n      return i18nString(UIStrings.schemefulSameSiteStrict);\n    case Protocol.Network.CookieBlockedReason.SchemefulSameSiteLax:\n      return i18nString(UIStrings.schemefulSameSiteLax);\n    case Protocol.Network.CookieBlockedReason.SchemefulSameSiteUnspecifiedTreatedAsLax:\n      return i18nString(UIStrings.schemefulSameSiteUnspecifiedTreatedAsLax);\n    case Protocol.Network.CookieBlockedReason.SamePartyFromCrossPartyContext:\n      return i18nString(UIStrings.samePartyFromCrossPartyContext);\n    case Protocol.Network.CookieBlockedReason.NameValuePairExceedsMaxSize:\n      return i18nString(UIStrings.nameValuePairExceedsMaxSize);\n    case Protocol.Network.CookieBlockedReason.ThirdPartyPhaseout:\n      return i18nString(UIStrings.thirdPartyPhaseout);\n  }\n  return '';\n};\n\nexport const setCookieBlockedReasonToUiString = function(\n    blockedReason: Protocol.Network.SetCookieBlockedReason,\n    ): string {\n  switch (blockedReason) {\n    case Protocol.Network.SetCookieBlockedReason.SecureOnly:\n      return i18nString(UIStrings.blockedReasonSecureOnly);\n    case Protocol.Network.SetCookieBlockedReason.SameSiteStrict:\n      return i18nString(UIStrings.blockedReasonSameSiteStrictLax, {\n        PH1: 'SameSite=Strict',\n      });\n    case Protocol.Network.SetCookieBlockedReason.SameSiteLax:\n      return i18nString(UIStrings.blockedReasonSameSiteStrictLax, {\n        PH1: 'SameSite=Lax',\n      });\n    case Protocol.Network.SetCookieBlockedReason.SameSiteUnspecifiedTreatedAsLax:\n      return i18nString(UIStrings.blockedReasonSameSiteUnspecifiedTreatedAsLax);\n    case Protocol.Network.SetCookieBlockedReason.SameSiteNoneInsecure:\n      return i18nString(UIStrings.blockedReasonSameSiteNoneInsecure);\n    case Protocol.Network.SetCookieBlockedReason.UserPreferences:\n      return i18nString(UIStrings.thisSetcookieWasBlockedDueToUser);\n    case Protocol.Network.SetCookieBlockedReason.SyntaxError:\n      return i18nString(UIStrings.thisSetcookieHadInvalidSyntax);\n    case Protocol.Network.SetCookieBlockedReason.SchemeNotSupported:\n      return i18nString(UIStrings.theSchemeOfThisConnectionIsNot);\n    case Protocol.Network.SetCookieBlockedReason.OverwriteSecure:\n      return i18nString(UIStrings.blockedReasonOverwriteSecure);\n    case Protocol.Network.SetCookieBlockedReason.InvalidDomain:\n      return i18nString(UIStrings.blockedReasonInvalidDomain);\n    case Protocol.Network.SetCookieBlockedReason.InvalidPrefix:\n      return i18nString(UIStrings.blockedReasonInvalidPrefix);\n    case Protocol.Network.SetCookieBlockedReason.UnknownError:\n      return i18nString(UIStrings.anUnknownErrorWasEncounteredWhenTrying);\n    case Protocol.Network.SetCookieBlockedReason.SchemefulSameSiteStrict:\n      return i18nString(\n          UIStrings.thisSetcookieWasBlockedBecauseItHadTheSamesiteStrictLax,\n          {PH1: 'SameSite=Strict'},\n      );\n    case Protocol.Network.SetCookieBlockedReason.SchemefulSameSiteLax:\n      return i18nString(\n          UIStrings.thisSetcookieWasBlockedBecauseItHadTheSamesiteStrictLax,\n          {PH1: 'SameSite=Lax'},\n      );\n    case Protocol.Network.SetCookieBlockedReason.SchemefulSameSiteUnspecifiedTreatedAsLax:\n      return i18nString(UIStrings.thisSetcookieDidntSpecifyASamesite);\n    case Protocol.Network.SetCookieBlockedReason.SamePartyFromCrossPartyContext:\n      return i18nString(\n          UIStrings.thisSetcookieWasBlockedBecauseItHadTheSameparty,\n      );\n    case Protocol.Network.SetCookieBlockedReason.SamePartyConflictsWithOtherAttributes:\n      return i18nString(\n          UIStrings.thisSetcookieWasBlockedBecauseItHadTheSamepartyAttribute,\n      );\n    case Protocol.Network.SetCookieBlockedReason.NameValuePairExceedsMaxSize:\n      return i18nString(\n          UIStrings.thisSetcookieWasBlockedBecauseTheNameValuePairExceedsMaxSize,\n      );\n    case Protocol.Network.SetCookieBlockedReason.DisallowedCharacter:\n      return i18nString(UIStrings.thisSetcookieHadADisallowedCharacter);\n    case Protocol.Network.SetCookieBlockedReason.ThirdPartyPhaseout:\n      return i18nString(UIStrings.thisSetcookieWasBlockedDueThirdPartyPhaseout);\n  }\n  return '';\n};\n\nexport const cookieBlockedReasonToAttribute = function(\n    blockedReason: Protocol.Network.CookieBlockedReason,\n    ): Attribute|null {\n  switch (blockedReason) {\n    case Protocol.Network.CookieBlockedReason.SecureOnly:\n      return Attribute.SECURE;\n    case Protocol.Network.CookieBlockedReason.NotOnPath:\n      return Attribute.PATH;\n    case Protocol.Network.CookieBlockedReason.DomainMismatch:\n      return Attribute.DOMAIN;\n    case Protocol.Network.CookieBlockedReason.SameSiteStrict:\n    case Protocol.Network.CookieBlockedReason.SameSiteLax:\n    case Protocol.Network.CookieBlockedReason.SameSiteUnspecifiedTreatedAsLax:\n    case Protocol.Network.CookieBlockedReason.SameSiteNoneInsecure:\n    case Protocol.Network.CookieBlockedReason.SchemefulSameSiteStrict:\n    case Protocol.Network.CookieBlockedReason.SchemefulSameSiteLax:\n    case Protocol.Network.CookieBlockedReason.SchemefulSameSiteUnspecifiedTreatedAsLax:\n      return Attribute.SAME_SITE;\n    case Protocol.Network.CookieBlockedReason.SamePartyFromCrossPartyContext:\n    case Protocol.Network.CookieBlockedReason.NameValuePairExceedsMaxSize:\n    case Protocol.Network.CookieBlockedReason.UserPreferences:\n    case Protocol.Network.CookieBlockedReason.ThirdPartyPhaseout:\n    case Protocol.Network.CookieBlockedReason.UnknownError:\n      return null;\n  }\n  return null;\n};\n\nexport const setCookieBlockedReasonToAttribute = function(\n    blockedReason: Protocol.Network.SetCookieBlockedReason,\n    ): Attribute|null {\n  switch (blockedReason) {\n    case Protocol.Network.SetCookieBlockedReason.SecureOnly:\n    case Protocol.Network.SetCookieBlockedReason.OverwriteSecure:\n      return Attribute.SECURE;\n    case Protocol.Network.SetCookieBlockedReason.SameSiteStrict:\n    case Protocol.Network.SetCookieBlockedReason.SameSiteLax:\n    case Protocol.Network.SetCookieBlockedReason.SameSiteUnspecifiedTreatedAsLax:\n    case Protocol.Network.SetCookieBlockedReason.SameSiteNoneInsecure:\n    case Protocol.Network.SetCookieBlockedReason.SchemefulSameSiteStrict:\n    case Protocol.Network.SetCookieBlockedReason.SchemefulSameSiteLax:\n    case Protocol.Network.SetCookieBlockedReason.SchemefulSameSiteUnspecifiedTreatedAsLax:\n      return Attribute.SAME_SITE;\n    case Protocol.Network.SetCookieBlockedReason.InvalidDomain:\n      return Attribute.DOMAIN;\n    case Protocol.Network.SetCookieBlockedReason.InvalidPrefix:\n      return Attribute.NAME;\n    case Protocol.Network.SetCookieBlockedReason.SamePartyConflictsWithOtherAttributes:\n    case Protocol.Network.SetCookieBlockedReason.SamePartyFromCrossPartyContext:\n    case Protocol.Network.SetCookieBlockedReason.NameValuePairExceedsMaxSize:\n    case Protocol.Network.SetCookieBlockedReason.UserPreferences:\n    case Protocol.Network.SetCookieBlockedReason.ThirdPartyPhaseout:\n    case Protocol.Network.SetCookieBlockedReason.SyntaxError:\n    case Protocol.Network.SetCookieBlockedReason.SchemeNotSupported:\n    case Protocol.Network.SetCookieBlockedReason.UnknownError:\n    case Protocol.Network.SetCookieBlockedReason.DisallowedCharacter:\n      return null;\n  }\n  return null;\n};\n\nexport interface NameValue {\n  name: string;\n  value: string;\n}\n\nexport interface WebSocketFrame {\n  type: WebSocketFrameType;\n  time: number;\n  text: string;\n  opCode: number;\n  mask: boolean;\n}\n\nexport interface BlockedSetCookieWithReason {\n  blockedReasons: Protocol.Network.SetCookieBlockedReason[];\n  cookieLine: string;\n  cookie: Cookie|null;\n}\n\nexport interface BlockedCookieWithReason {\n  cookie: Cookie;\n  blockedReasons: Protocol.Network.CookieBlockedReason[];\n}\n\nexport interface IncludedCookieWithReason {\n  cookie: Cookie;\n  exemptionReason: Protocol.Network.CookieExemptionReason|undefined;\n}\n\nexport interface ExemptedSetCookieWithReason {\n  cookie: Cookie;\n  cookieLine: string;\n  exemptionReason: Protocol.Network.CookieExemptionReason;\n}\n\nexport interface EventSourceMessage {\n  time: number;\n  eventName: string;\n  eventId: string;\n  data: string;\n}\n\nexport interface ExtraRequestInfo {\n  blockedRequestCookies: Array<{blockedReasons: Protocol.Network.CookieBlockedReason[], cookie: Cookie}>;\n  requestHeaders: NameValue[];\n  includedRequestCookies: IncludedCookieWithReason[];\n  clientSecurityState?: Protocol.Network.ClientSecurityState;\n  connectTiming: Protocol.Network.ConnectTiming;\n  siteHasCookieInOtherPartition?: boolean;\n  appliedNetworkConditionsId?: string;\n}\n\nexport interface ExtraResponseInfo {\n  blockedResponseCookies:\n      Array<{blockedReasons: Protocol.Network.SetCookieBlockedReason[], cookieLine: string, cookie: Cookie|null}>;\n  responseHeaders: NameValue[];\n  responseHeadersText?: string;\n  resourceIPAddressSpace: Protocol.Network.IPAddressSpace;\n  statusCode: number|undefined;\n  cookiePartitionKey?: Protocol.Network.CookiePartitionKey;\n  cookiePartitionKeyOpaque: boolean|undefined;\n  exemptedResponseCookies:|\n      Array<{cookie: Cookie, cookieLine: string, exemptionReason: Protocol.Network.CookieExemptionReason}>|undefined;\n}\n\nexport interface EarlyHintsInfo {\n  responseHeaders: NameValue[];\n}\n\nexport type OverrideType = 'content'|'headers';\n\nexport enum DirectSocketType {\n  TCP = 1,\n  UDP_BOUND = 2,\n  UDP_CONNECTED = 3,\n}\n\nexport enum DirectSocketStatus {\n  OPENING = 1,\n  OPEN = 2,\n  CLOSED = 3,\n  ABORTED = 4,\n}\n\nexport interface DirectSocketCreateOptions {\n  remoteAddr?: string;\n  remotePort?: number;\n  localAddr?: string;\n  localPort?: number;\n  noDelay?: boolean;\n  keepAliveDelay?: number;\n  sendBufferSize?: number;\n  receiveBufferSize?: number;\n  dnsQueryType?: Protocol.Network.DirectSocketDnsQueryType;\n}\n\nexport interface DirectSocketOpenInfo {\n  remoteAddr?: string;\n  remotePort?: number;\n  localAddr?: string;\n  localPort?: number;\n}\n\nexport interface DirectSocketInfo {\n  type: DirectSocketType;\n  status: DirectSocketStatus;\n  errorMessage?: string;\n  createOptions: DirectSocketCreateOptions;\n  openInfo?: DirectSocketOpenInfo;\n}\n\nexport interface DirectSocketChunk {\n  data: string;\n  type: DirectSocketChunkType;\n  timestamp: number;\n  // Only for bound udp socket.\n  remoteAddress?: string;\n  remotePort?: number;\n}\n\nexport enum DirectSocketChunkType {\n  SEND = 'send',\n  RECEIVE = 'receive',\n}\n"]}