{"version":3,"file":"OverlayModel.js","sourceRoot":"","sources":["../../../../../../front_end/core/sdk/OverlayModel.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2017 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Platform from '../../core/platform/platform.js';\nimport type * as ProtocolProxyApi from '../../generated/protocol-proxy-api.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport * as Common from '../common/common.js';\nimport * as i18n from '../i18n/i18n.js';\nimport * as Root from '../root/root.js';\n\nimport type {CSSModel} from './CSSModel.js';\nimport {DebuggerModel, Events as DebuggerModelEvents} from './DebuggerModel.js';\nimport {DeferredDOMNode, DOMModel, type DOMNode, Events as DOMModelEvents} from './DOMModel.js';\nimport {OverlayPersistentHighlighter} from './OverlayPersistentHighlighter.js';\nimport type {RemoteObject} from './RemoteObject.js';\nimport {SDKModel} from './SDKModel.js';\nimport {Capability, type Target} from './Target.js';\nimport {TargetManager} from './TargetManager.js';\n\nconst UIStrings = {\n  /**\n   * @description Text in Overlay Model\n   */\n  pausedInDebugger: 'Paused in debugger',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('core/sdk/OverlayModel.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport interface HighlightColor {\n  r: number;\n  g: number;\n  b: number;\n  a: number;\n}\n\nexport interface HighlightRect {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  color: HighlightColor;\n  outlineColor: HighlightColor;\n}\nexport interface Hinge {\n  width: number;\n  height: number;\n  x: number;\n  y: number;\n  contentColor: HighlightColor;\n  outlineColor: HighlightColor;\n}\n\nexport const enum EmulatedOSType {\n  WINDOWS = 'Windows',\n  MAC = 'Mac',\n  LINUX = 'Linux',\n}\n\ninterface PlatformOverlayDimensions {\n  mac: {x: number, y: number, width: number, height: number};\n  linux: {x: number, y: number, width: number, height: number};\n  windows: {x: number, y: number, width: number, height: number};\n}\n\nconst platformOverlayDimensions: Readonly<PlatformOverlayDimensions> = {\n  mac: {x: 85, y: 0, width: 185, height: 40},\n  linux: {x: 0, y: 0, width: 196, height: 34},\n  windows: {x: 0, y: 0, width: 238, height: 33},\n};\n\nexport class OverlayModel extends SDKModel<EventTypes> implements ProtocolProxyApi.OverlayDispatcher {\n  readonly #domModel: DOMModel;\n  overlayAgent: ProtocolProxyApi.OverlayApi;\n  readonly #debuggerModel: DebuggerModel|null;\n  #inspectModeEnabled = false;\n  #hideHighlightTimeout: number|null = null;\n  #defaultHighlighter: Highlighter;\n  #highlighter: Highlighter;\n  #showPaintRectsSetting: Common.Settings.Setting<boolean>;\n  #showLayoutShiftRegionsSetting: Common.Settings.Setting<boolean>;\n  #showAdHighlightsSetting: Common.Settings.Setting<boolean>;\n  #showDebugBordersSetting: Common.Settings.Setting<boolean>;\n  #showFPSCounterSetting: Common.Settings.Setting<boolean>;\n  #showScrollBottleneckRectsSetting: Common.Settings.Setting<boolean>;\n  #registeredListeners: Common.EventTarget.EventDescriptor[] = [];\n  #showViewportSizeOnResize = true;\n  #persistentHighlighter: OverlayPersistentHighlighter|null;\n  readonly #sourceOrderHighlighter: SourceOrderHighlighter;\n  #sourceOrderModeActive = false;\n  #windowControls: WindowControls;\n\n  constructor(target: Target) {\n    super(target);\n    this.#domModel = (target.model(DOMModel) as DOMModel);\n\n    target.registerOverlayDispatcher(this);\n    this.overlayAgent = target.overlayAgent();\n\n    this.#debuggerModel = target.model(DebuggerModel);\n    if (this.#debuggerModel) {\n      Common.Settings.Settings.instance()\n          .moduleSetting('disable-paused-state-overlay')\n          .addChangeListener(this.updatePausedInDebuggerMessage, this);\n      this.#debuggerModel.addEventListener(\n          DebuggerModelEvents.DebuggerPaused, this.updatePausedInDebuggerMessage, this);\n      this.#debuggerModel.addEventListener(\n          DebuggerModelEvents.DebuggerResumed, this.updatePausedInDebuggerMessage, this);\n      // TODO(dgozman): we should get DebuggerResumed on navigations instead of listening to GlobalObjectCleared.\n      this.#debuggerModel.addEventListener(\n          DebuggerModelEvents.GlobalObjectCleared, this.updatePausedInDebuggerMessage, this);\n    }\n\n    this.#defaultHighlighter = new DefaultHighlighter(this);\n    this.#highlighter = this.#defaultHighlighter;\n\n    this.#showPaintRectsSetting = Common.Settings.Settings.instance().moduleSetting<boolean>('show-paint-rects');\n    this.#showLayoutShiftRegionsSetting =\n        Common.Settings.Settings.instance().moduleSetting<boolean>('show-layout-shift-regions');\n    this.#showAdHighlightsSetting = Common.Settings.Settings.instance().moduleSetting<boolean>('show-ad-highlights');\n    this.#showDebugBordersSetting = Common.Settings.Settings.instance().moduleSetting<boolean>('show-debug-borders');\n    this.#showFPSCounterSetting = Common.Settings.Settings.instance().moduleSetting<boolean>('show-fps-counter');\n    this.#showScrollBottleneckRectsSetting =\n        Common.Settings.Settings.instance().moduleSetting<boolean>('show-scroll-bottleneck-rects');\n\n    if (!target.suspended()) {\n      void this.overlayAgent.invoke_enable();\n      void this.wireAgentToSettings();\n    }\n\n    this.#persistentHighlighter = new OverlayPersistentHighlighter(this, {\n      onGridOverlayStateChanged: ({nodeId, enabled}) =>\n          this.dispatchEventToListeners(Events.PERSISTENT_GRID_OVERLAY_STATE_CHANGED, {nodeId, enabled}),\n      onFlexOverlayStateChanged: ({nodeId, enabled}) =>\n          this.dispatchEventToListeners(Events.PERSISTENT_FLEX_CONTAINER_OVERLAY_STATE_CHANGED, {nodeId, enabled}),\n      onContainerQueryOverlayStateChanged: ({nodeId, enabled}) =>\n          this.dispatchEventToListeners(Events.PERSISTENT_CONTAINER_QUERY_OVERLAY_STATE_CHANGED, {nodeId, enabled}),\n      onScrollSnapOverlayStateChanged: ({nodeId, enabled}) =>\n          this.dispatchEventToListeners(Events.PERSISTENT_SCROLL_SNAP_OVERLAY_STATE_CHANGED, {nodeId, enabled}),\n    });\n    this.#domModel.addEventListener(DOMModelEvents.NodeRemoved, () => {\n      if (!this.#persistentHighlighter) {\n        return;\n      }\n\n      this.#persistentHighlighter.refreshHighlights();\n    });\n\n    this.#domModel.addEventListener(DOMModelEvents.DocumentUpdated, () => {\n      if (!this.#persistentHighlighter) {\n        return;\n      }\n\n      // Hide all the overlays initially after document update\n      this.#persistentHighlighter.hideAllInOverlayWithoutSave();\n\n      if (!target.suspended()) {\n        void this.#persistentHighlighter.restoreHighlightsForDocument();\n      }\n    });\n\n    this.#sourceOrderHighlighter = new SourceOrderHighlighter(this);\n    this.#windowControls = new WindowControls(this.#domModel.cssModel());\n  }\n\n  static highlightObjectAsDOMNode(object: RemoteObject): void {\n    const domModel = object.runtimeModel().target().model(DOMModel);\n    if (domModel) {\n      domModel.overlayModel().highlightInOverlay({object, selectorList: undefined});\n    }\n  }\n\n  static hideDOMNodeHighlight(): void {\n    for (const overlayModel of TargetManager.instance().models(OverlayModel)) {\n      overlayModel.delayedHideHighlight(0);\n    }\n  }\n\n  static async muteHighlight(): Promise<void[]> {\n    return await Promise.all(TargetManager.instance().models(OverlayModel).map(model => model.suspendModel()));\n  }\n\n  static async unmuteHighlight(): Promise<void[]> {\n    return await Promise.all(TargetManager.instance().models(OverlayModel).map(model => model.resumeModel()));\n  }\n\n  static highlightRect(rect: HighlightRect): void {\n    for (const overlayModel of TargetManager.instance().models(OverlayModel)) {\n      void overlayModel.highlightRect(rect);\n    }\n  }\n\n  static clearHighlight(): void {\n    for (const overlayModel of TargetManager.instance().models(OverlayModel)) {\n      void overlayModel.clearHighlight();\n    }\n  }\n\n  getDOMModel(): DOMModel {\n    return this.#domModel;\n  }\n\n  highlightRect({x, y, width, height, color, outlineColor}: HighlightRect):\n      Promise<Protocol.ProtocolResponseWithError> {\n    const highlightColor = color || {r: 255, g: 0, b: 255, a: 0.3};\n    const highlightOutlineColor = outlineColor || {r: 255, g: 0, b: 255, a: 0.5};\n    return this.overlayAgent.invoke_highlightRect(\n        {x, y, width, height, color: highlightColor, outlineColor: highlightOutlineColor});\n  }\n\n  clearHighlight(): Promise<Protocol.ProtocolResponseWithError> {\n    return this.overlayAgent.invoke_hideHighlight();\n  }\n\n  private async wireAgentToSettings(): Promise<void> {\n    this.#registeredListeners = [\n      this.#showPaintRectsSetting.addChangeListener(\n          () => this.overlayAgent.invoke_setShowPaintRects({result: this.#showPaintRectsSetting.get()})),\n      this.#showLayoutShiftRegionsSetting.addChangeListener(\n          () =>\n              this.overlayAgent.invoke_setShowLayoutShiftRegions({result: this.#showLayoutShiftRegionsSetting.get()})),\n      this.#showAdHighlightsSetting.addChangeListener(\n          () => this.overlayAgent.invoke_setShowAdHighlights({show: this.#showAdHighlightsSetting.get()})),\n      this.#showDebugBordersSetting.addChangeListener(\n          () => this.overlayAgent.invoke_setShowDebugBorders({show: this.#showDebugBordersSetting.get()})),\n      this.#showFPSCounterSetting.addChangeListener(\n          () => this.overlayAgent.invoke_setShowFPSCounter({show: this.#showFPSCounterSetting.get()})),\n      this.#showScrollBottleneckRectsSetting.addChangeListener(\n          () => this.overlayAgent.invoke_setShowScrollBottleneckRects(\n              {show: this.#showScrollBottleneckRectsSetting.get()})),\n    ];\n\n    if (this.#showPaintRectsSetting.get()) {\n      void this.overlayAgent.invoke_setShowPaintRects({result: true});\n    }\n    if (this.#showLayoutShiftRegionsSetting.get()) {\n      void this.overlayAgent.invoke_setShowLayoutShiftRegions({result: true});\n    }\n    if (this.#showAdHighlightsSetting.get()) {\n      void this.overlayAgent.invoke_setShowAdHighlights({show: true});\n    }\n    if (this.#showDebugBordersSetting.get()) {\n      void this.overlayAgent.invoke_setShowDebugBorders({show: true});\n    }\n    if (this.#showFPSCounterSetting.get()) {\n      void this.overlayAgent.invoke_setShowFPSCounter({show: true});\n    }\n    if (this.#showScrollBottleneckRectsSetting.get()) {\n      void this.overlayAgent.invoke_setShowScrollBottleneckRects({show: true});\n    }\n    if (this.#debuggerModel && this.#debuggerModel.isPaused()) {\n      this.updatePausedInDebuggerMessage();\n    }\n    await this.overlayAgent.invoke_setShowViewportSizeOnResize({show: this.#showViewportSizeOnResize});\n    this.#persistentHighlighter?.resetOverlay();\n  }\n\n  override async suspendModel(): Promise<void> {\n    Common.EventTarget.removeEventListeners(this.#registeredListeners);\n    await this.overlayAgent.invoke_disable();\n  }\n\n  override async resumeModel(): Promise<void> {\n    await Promise.all([this.overlayAgent.invoke_enable(), this.wireAgentToSettings()]);\n  }\n\n  setShowViewportSizeOnResize(show: boolean): void {\n    if (this.#showViewportSizeOnResize === show) {\n      return;\n    }\n\n    this.#showViewportSizeOnResize = show;\n    if (this.target().suspended()) {\n      return;\n    }\n    void this.overlayAgent.invoke_setShowViewportSizeOnResize({show});\n  }\n\n  private updatePausedInDebuggerMessage(): void {\n    if (this.target().suspended()) {\n      return;\n    }\n    const message = this.#debuggerModel && this.#debuggerModel.isPaused() &&\n            !Common.Settings.Settings.instance().moduleSetting('disable-paused-state-overlay').get() ?\n        i18nString(UIStrings.pausedInDebugger) :\n        undefined;\n    void this.overlayAgent.invoke_setPausedInDebuggerMessage({message});\n  }\n\n  setHighlighter(highlighter: Highlighter|null): void {\n    this.#highlighter = highlighter || this.#defaultHighlighter;\n  }\n\n  async setInspectMode(mode: Protocol.Overlay.InspectMode, showDetailedTooltip: boolean|undefined = true):\n      Promise<void> {\n    await this.#domModel.requestDocument();\n    this.#inspectModeEnabled = mode !== Protocol.Overlay.InspectMode.None;\n    this.dispatchEventToListeners(Events.INSPECT_MODE_WILL_BE_TOGGLED, this);\n    void this.#highlighter.setInspectMode(mode, this.buildHighlightConfig('all', showDetailedTooltip));\n  }\n\n  inspectModeEnabled(): boolean {\n    return this.#inspectModeEnabled;\n  }\n\n  highlightInOverlay(data: HighlightData, mode?: string, showInfo?: boolean): void {\n    if (this.#sourceOrderModeActive) {\n      // Return early if the source order is currently being shown the in the\n      // overlay, so that it is not cleared by the highlight\n      return;\n    }\n    if (this.#hideHighlightTimeout) {\n      clearTimeout(this.#hideHighlightTimeout);\n      this.#hideHighlightTimeout = null;\n    }\n    const highlightConfig = this.buildHighlightConfig(mode);\n    if (typeof showInfo !== 'undefined') {\n      highlightConfig.showInfo = showInfo;\n    }\n    this.#highlighter.highlightInOverlay(data, highlightConfig);\n  }\n\n  highlightInOverlayForTwoSeconds(data: HighlightData): void {\n    this.highlightInOverlay(data);\n    this.delayedHideHighlight(2000);\n  }\n\n  highlightGridInPersistentOverlay(nodeId: Protocol.DOM.NodeId): void {\n    if (!this.#persistentHighlighter) {\n      return;\n    }\n    this.#persistentHighlighter.highlightGridInOverlay(nodeId);\n  }\n\n  isHighlightedGridInPersistentOverlay(nodeId: Protocol.DOM.NodeId): boolean {\n    if (!this.#persistentHighlighter) {\n      return false;\n    }\n    return this.#persistentHighlighter.isGridHighlighted(nodeId);\n  }\n\n  hideGridInPersistentOverlay(nodeId: Protocol.DOM.NodeId): void {\n    if (!this.#persistentHighlighter) {\n      return;\n    }\n    this.#persistentHighlighter.hideGridInOverlay(nodeId);\n  }\n\n  highlightScrollSnapInPersistentOverlay(nodeId: Protocol.DOM.NodeId): void {\n    if (!this.#persistentHighlighter) {\n      return;\n    }\n    this.#persistentHighlighter.highlightScrollSnapInOverlay(nodeId);\n  }\n\n  isHighlightedScrollSnapInPersistentOverlay(nodeId: Protocol.DOM.NodeId): boolean {\n    if (!this.#persistentHighlighter) {\n      return false;\n    }\n    return this.#persistentHighlighter.isScrollSnapHighlighted(nodeId);\n  }\n\n  hideScrollSnapInPersistentOverlay(nodeId: Protocol.DOM.NodeId): void {\n    if (!this.#persistentHighlighter) {\n      return;\n    }\n    this.#persistentHighlighter.hideScrollSnapInOverlay(nodeId);\n  }\n\n  highlightFlexContainerInPersistentOverlay(nodeId: Protocol.DOM.NodeId): void {\n    if (!this.#persistentHighlighter) {\n      return;\n    }\n    this.#persistentHighlighter.highlightFlexInOverlay(nodeId);\n  }\n\n  isHighlightedFlexContainerInPersistentOverlay(nodeId: Protocol.DOM.NodeId): boolean {\n    if (!this.#persistentHighlighter) {\n      return false;\n    }\n    return this.#persistentHighlighter.isFlexHighlighted(nodeId);\n  }\n\n  hideFlexContainerInPersistentOverlay(nodeId: Protocol.DOM.NodeId): void {\n    if (!this.#persistentHighlighter) {\n      return;\n    }\n    this.#persistentHighlighter.hideFlexInOverlay(nodeId);\n  }\n\n  highlightContainerQueryInPersistentOverlay(nodeId: Protocol.DOM.NodeId): void {\n    if (!this.#persistentHighlighter) {\n      return;\n    }\n    this.#persistentHighlighter.highlightContainerQueryInOverlay(nodeId);\n  }\n\n  isHighlightedContainerQueryInPersistentOverlay(nodeId: Protocol.DOM.NodeId): boolean {\n    if (!this.#persistentHighlighter) {\n      return false;\n    }\n    return this.#persistentHighlighter.isContainerQueryHighlighted(nodeId);\n  }\n\n  hideContainerQueryInPersistentOverlay(nodeId: Protocol.DOM.NodeId): void {\n    if (!this.#persistentHighlighter) {\n      return;\n    }\n    this.#persistentHighlighter.hideContainerQueryInOverlay(nodeId);\n  }\n\n  highlightSourceOrderInOverlay(node: DOMNode): void {\n    const sourceOrderConfig = {\n      parentOutlineColor: Common.Color.SourceOrderHighlight.ParentOutline.toProtocolRGBA(),\n      childOutlineColor: Common.Color.SourceOrderHighlight.ChildOutline.toProtocolRGBA(),\n    };\n    this.#sourceOrderHighlighter.highlightSourceOrderInOverlay(node, sourceOrderConfig);\n  }\n\n  colorOfGridInPersistentOverlay(nodeId: Protocol.DOM.NodeId): string|null {\n    if (!this.#persistentHighlighter) {\n      return null;\n    }\n    return this.#persistentHighlighter.colorOfGrid(nodeId).asString(Common.Color.Format.HEX);\n  }\n\n  setColorOfGridInPersistentOverlay(nodeId: Protocol.DOM.NodeId, colorStr: string): void {\n    if (!this.#persistentHighlighter) {\n      return;\n    }\n    const color = Common.Color.parse(colorStr);\n    if (!color) {\n      return;\n    }\n    this.#persistentHighlighter.setColorOfGrid(nodeId, color);\n    this.#persistentHighlighter.resetOverlay();\n  }\n\n  colorOfFlexInPersistentOverlay(nodeId: Protocol.DOM.NodeId): string|null {\n    if (!this.#persistentHighlighter) {\n      return null;\n    }\n    return this.#persistentHighlighter.colorOfFlex(nodeId).asString(Common.Color.Format.HEX);\n  }\n\n  setColorOfFlexInPersistentOverlay(nodeId: Protocol.DOM.NodeId, colorStr: string): void {\n    if (!this.#persistentHighlighter) {\n      return;\n    }\n    const color = Common.Color.parse(colorStr);\n    if (!color) {\n      return;\n    }\n    this.#persistentHighlighter.setColorOfFlex(nodeId, color);\n    this.#persistentHighlighter.resetOverlay();\n  }\n\n  hideSourceOrderInOverlay(): void {\n    this.#sourceOrderHighlighter.hideSourceOrderHighlight();\n  }\n\n  setSourceOrderActive(isActive: boolean): void {\n    this.#sourceOrderModeActive = isActive;\n  }\n\n  private delayedHideHighlight(delay: number): void {\n    if (this.#hideHighlightTimeout === null) {\n      this.#hideHighlightTimeout = window.setTimeout(() => this.highlightInOverlay({clear: true}), delay);\n    }\n  }\n\n  highlightFrame(frameId: Protocol.Page.FrameId): void {\n    if (this.#hideHighlightTimeout) {\n      clearTimeout(this.#hideHighlightTimeout);\n      this.#hideHighlightTimeout = null;\n    }\n    this.#highlighter.highlightFrame(frameId);\n  }\n\n  showHingeForDualScreen(hinge: Hinge|null): void {\n    if (hinge) {\n      const {x, y, width, height, contentColor, outlineColor} = hinge;\n      void this.overlayAgent.invoke_setShowHinge({\n        hingeConfig: {rect: {x, y, width, height}, contentColor, outlineColor},\n      });\n    } else {\n      void this.overlayAgent.invoke_setShowHinge({});\n    }\n  }\n\n  setWindowControlsPlatform(selectedPlatform: EmulatedOSType): void {\n    this.#windowControls.selectedPlatform = selectedPlatform;\n  }\n\n  setWindowControlsThemeColor(themeColor: string): void {\n    this.#windowControls.themeColor = themeColor;\n  }\n\n  getWindowControlsConfig(): Protocol.Overlay.WindowControlsOverlayConfig {\n    return this.#windowControls.config;\n  }\n\n  async toggleWindowControlsToolbar(show: boolean): Promise<void> {\n    const wcoConfigObj = show ? {windowControlsOverlayConfig: this.#windowControls.config} : {};\n\n    const setWindowControlsOverlayOperation = this.overlayAgent.invoke_setShowWindowControlsOverlay(wcoConfigObj);\n    const toggleStylesheetOperation = this.#windowControls.toggleEmulatedOverlay(show);\n\n    await Promise.all([setWindowControlsOverlayOperation, toggleStylesheetOperation]);\n\n    this.setShowViewportSizeOnResize(!show);\n  }\n\n  private buildHighlightConfig(mode: string|undefined = 'all', showDetailedToolip: boolean|undefined = false):\n      Protocol.Overlay.HighlightConfig {\n    const showRulers = Common.Settings.Settings.instance().moduleSetting('show-metrics-rulers').get();\n    const highlightConfig: Protocol.Overlay.HighlightConfig = {\n      showInfo: mode === 'all' || mode === 'container-outline',\n      showRulers,\n      showStyles: showDetailedToolip,\n      showAccessibilityInfo: showDetailedToolip,\n      showExtensionLines: showRulers,\n      gridHighlightConfig: {},\n      flexContainerHighlightConfig: {},\n      flexItemHighlightConfig: {},\n      contrastAlgorithm: Root.Runtime.experiments.isEnabled('apca') ? Protocol.Overlay.ContrastAlgorithm.Apca :\n                                                                      Protocol.Overlay.ContrastAlgorithm.Aa,\n    };\n\n    if (mode === 'all' || mode === 'content') {\n      highlightConfig.contentColor = Common.Color.PageHighlight.Content.toProtocolRGBA();\n    }\n\n    if (mode === 'all' || mode === 'padding') {\n      highlightConfig.paddingColor = Common.Color.PageHighlight.Padding.toProtocolRGBA();\n    }\n\n    if (mode === 'all' || mode === 'border') {\n      highlightConfig.borderColor = Common.Color.PageHighlight.Border.toProtocolRGBA();\n    }\n\n    if (mode === 'all' || mode === 'margin') {\n      highlightConfig.marginColor = Common.Color.PageHighlight.Margin.toProtocolRGBA();\n    }\n\n    if (mode === 'all') {\n      highlightConfig.eventTargetColor = Common.Color.PageHighlight.EventTarget.toProtocolRGBA();\n      highlightConfig.shapeColor = Common.Color.PageHighlight.Shape.toProtocolRGBA();\n      highlightConfig.shapeMarginColor = Common.Color.PageHighlight.ShapeMargin.toProtocolRGBA();\n\n      highlightConfig.gridHighlightConfig = {\n        rowGapColor: Common.Color.PageHighlight.GapBackground.toProtocolRGBA(),\n        rowHatchColor: Common.Color.PageHighlight.GapHatch.toProtocolRGBA(),\n        columnGapColor: Common.Color.PageHighlight.GapBackground.toProtocolRGBA(),\n        columnHatchColor: Common.Color.PageHighlight.GapHatch.toProtocolRGBA(),\n        rowLineColor: Common.Color.PageHighlight.LayoutLine.toProtocolRGBA(),\n        columnLineColor: Common.Color.PageHighlight.LayoutLine.toProtocolRGBA(),\n        rowLineDash: true,\n        columnLineDash: true,\n      };\n\n      highlightConfig.flexContainerHighlightConfig = {\n        containerBorder: {\n          color: Common.Color.PageHighlight.LayoutLine.toProtocolRGBA(),\n          pattern: Protocol.Overlay.LineStylePattern.Dashed,\n        },\n        itemSeparator: {\n          color: Common.Color.PageHighlight.LayoutLine.toProtocolRGBA(),\n          pattern: Protocol.Overlay.LineStylePattern.Dotted,\n        },\n        lineSeparator: {\n          color: Common.Color.PageHighlight.LayoutLine.toProtocolRGBA(),\n          pattern: Protocol.Overlay.LineStylePattern.Dashed,\n        },\n        mainDistributedSpace: {\n          hatchColor: Common.Color.PageHighlight.GapHatch.toProtocolRGBA(),\n          fillColor: Common.Color.PageHighlight.GapBackground.toProtocolRGBA(),\n        },\n        crossDistributedSpace: {\n          hatchColor: Common.Color.PageHighlight.GapHatch.toProtocolRGBA(),\n          fillColor: Common.Color.PageHighlight.GapBackground.toProtocolRGBA(),\n        },\n        rowGapSpace: {\n          hatchColor: Common.Color.PageHighlight.GapHatch.toProtocolRGBA(),\n          fillColor: Common.Color.PageHighlight.GapBackground.toProtocolRGBA(),\n        },\n        columnGapSpace: {\n          hatchColor: Common.Color.PageHighlight.GapHatch.toProtocolRGBA(),\n          fillColor: Common.Color.PageHighlight.GapBackground.toProtocolRGBA(),\n        },\n      };\n\n      highlightConfig.flexItemHighlightConfig = {\n        baseSizeBox: {\n          hatchColor: Common.Color.PageHighlight.GapHatch.toProtocolRGBA(),\n        },\n        baseSizeBorder: {\n          color: Common.Color.PageHighlight.LayoutLine.toProtocolRGBA(),\n          pattern: Protocol.Overlay.LineStylePattern.Dotted,\n        },\n        flexibilityArrow: {\n          color: Common.Color.PageHighlight.LayoutLine.toProtocolRGBA(),\n        },\n      };\n    }\n\n    if (mode.endsWith('gap')) {\n      highlightConfig.gridHighlightConfig = {\n        gridBorderColor: Common.Color.PageHighlight.GridBorder.toProtocolRGBA(),\n        gridBorderDash: true,\n      };\n\n      if (mode === 'gap' || mode === 'row-gap') {\n        highlightConfig.gridHighlightConfig.rowGapColor = Common.Color.PageHighlight.GapBackground.toProtocolRGBA();\n        highlightConfig.gridHighlightConfig.rowHatchColor = Common.Color.PageHighlight.GapHatch.toProtocolRGBA();\n      }\n      if (mode === 'gap' || mode === 'column-gap') {\n        highlightConfig.gridHighlightConfig.columnGapColor = Common.Color.PageHighlight.GapBackground.toProtocolRGBA();\n        highlightConfig.gridHighlightConfig.columnHatchColor = Common.Color.PageHighlight.GapHatch.toProtocolRGBA();\n      }\n    }\n\n    if (mode.endsWith('gap')) {\n      highlightConfig.flexContainerHighlightConfig = {\n        containerBorder: {\n          color: Common.Color.PageHighlight.LayoutLine.toProtocolRGBA(),\n          pattern: Protocol.Overlay.LineStylePattern.Dashed,\n        },\n      };\n\n      if (mode === 'gap' || mode === 'row-gap') {\n        highlightConfig.flexContainerHighlightConfig.rowGapSpace = {\n          hatchColor: Common.Color.PageHighlight.GapHatch.toProtocolRGBA(),\n          fillColor: Common.Color.PageHighlight.GapBackground.toProtocolRGBA(),\n        };\n      }\n      if (mode === 'gap' || mode === 'column-gap') {\n        highlightConfig.flexContainerHighlightConfig.columnGapSpace = {\n          hatchColor: Common.Color.PageHighlight.GapHatch.toProtocolRGBA(),\n          fillColor: Common.Color.PageHighlight.GapBackground.toProtocolRGBA(),\n        };\n      }\n    }\n\n    if (mode === 'grid-areas') {\n      highlightConfig.gridHighlightConfig = {\n        rowLineColor: Common.Color.PageHighlight.LayoutLine.toProtocolRGBA(),\n        columnLineColor: Common.Color.PageHighlight.LayoutLine.toProtocolRGBA(),\n        rowLineDash: true,\n        columnLineDash: true,\n        showAreaNames: true,\n        areaBorderColor: Common.Color.PageHighlight.GridAreaBorder.toProtocolRGBA(),\n      };\n    }\n\n    if (mode === 'grid-template-columns') {\n      highlightConfig.contentColor = Common.Color.PageHighlight.Content.toProtocolRGBA();\n      highlightConfig.gridHighlightConfig = {\n        columnLineColor: Common.Color.PageHighlight.LayoutLine.toProtocolRGBA(),\n        columnLineDash: true,\n      };\n    }\n\n    if (mode === 'grid-template-rows') {\n      highlightConfig.contentColor = Common.Color.PageHighlight.Content.toProtocolRGBA();\n      highlightConfig.gridHighlightConfig = {\n        rowLineColor: Common.Color.PageHighlight.LayoutLine.toProtocolRGBA(),\n        rowLineDash: true,\n      };\n    }\n\n    if (mode === 'justify-content') {\n      highlightConfig.flexContainerHighlightConfig = {\n        containerBorder: {\n          color: Common.Color.PageHighlight.LayoutLine.toProtocolRGBA(),\n          pattern: Protocol.Overlay.LineStylePattern.Dashed,\n        },\n        mainDistributedSpace: {\n          hatchColor: Common.Color.PageHighlight.GapHatch.toProtocolRGBA(),\n          fillColor: Common.Color.PageHighlight.GapBackground.toProtocolRGBA(),\n        },\n      };\n    }\n\n    if (mode === 'align-content') {\n      highlightConfig.flexContainerHighlightConfig = {\n        containerBorder: {\n          color: Common.Color.PageHighlight.LayoutLine.toProtocolRGBA(),\n          pattern: Protocol.Overlay.LineStylePattern.Dashed,\n        },\n        crossDistributedSpace: {\n          hatchColor: Common.Color.PageHighlight.GapHatch.toProtocolRGBA(),\n          fillColor: Common.Color.PageHighlight.GapBackground.toProtocolRGBA(),\n        },\n      };\n    }\n\n    if (mode === 'align-items') {\n      highlightConfig.flexContainerHighlightConfig = {\n        containerBorder: {\n          color: Common.Color.PageHighlight.LayoutLine.toProtocolRGBA(),\n          pattern: Protocol.Overlay.LineStylePattern.Dashed,\n        },\n        lineSeparator: {\n          color: Common.Color.PageHighlight.LayoutLine.toProtocolRGBA(),\n          pattern: Protocol.Overlay.LineStylePattern.Dashed,\n        },\n        crossAlignment: {color: Common.Color.PageHighlight.LayoutLine.toProtocolRGBA()},\n      };\n    }\n\n    if (mode === 'flexibility') {\n      highlightConfig.flexItemHighlightConfig = {\n        baseSizeBox: {\n          hatchColor: Common.Color.PageHighlight.GapHatch.toProtocolRGBA(),\n        },\n        baseSizeBorder: {\n          color: Common.Color.PageHighlight.LayoutLine.toProtocolRGBA(),\n          pattern: Protocol.Overlay.LineStylePattern.Dotted,\n        },\n        flexibilityArrow: {\n          color: Common.Color.PageHighlight.LayoutLine.toProtocolRGBA(),\n        },\n      };\n    }\n\n    if (mode === 'container-outline') {\n      highlightConfig.containerQueryContainerHighlightConfig = {\n        containerBorder: {\n          color: Common.Color.PageHighlight.LayoutLine.toProtocolRGBA(),\n          pattern: Protocol.Overlay.LineStylePattern.Dashed,\n        },\n      };\n    }\n\n    return highlightConfig;\n  }\n\n  nodeHighlightRequested({nodeId}: Protocol.Overlay.NodeHighlightRequestedEvent): void {\n    const node = this.#domModel.nodeForId(nodeId);\n    if (node) {\n      this.dispatchEventToListeners(Events.HIGHLIGHT_NODE_REQUESTED, node);\n    }\n  }\n\n  static setInspectNodeHandler(handler: (arg0: DOMNode) => Promise<void>): void {\n    OverlayModel.inspectNodeHandler = handler;\n  }\n\n  inspectNodeRequested({backendNodeId}: Protocol.Overlay.InspectNodeRequestedEvent): void {\n    const deferredNode = new DeferredDOMNode(this.target(), backendNodeId);\n    if (OverlayModel.inspectNodeHandler) {\n      void deferredNode.resolvePromise().then(node => {\n        if (node && OverlayModel.inspectNodeHandler) {\n          void OverlayModel.inspectNodeHandler(node);\n        }\n      });\n    } else {\n      void Common.Revealer.reveal(deferredNode);\n    }\n    this.dispatchEventToListeners(Events.EXITED_INSPECT_MODE);\n  }\n\n  screenshotRequested({viewport}: Protocol.Overlay.ScreenshotRequestedEvent): void {\n    this.dispatchEventToListeners(Events.SCREENSHOT_REQUESTED, viewport);\n    this.dispatchEventToListeners(Events.EXITED_INSPECT_MODE);\n  }\n\n  inspectModeCanceled(): void {\n    this.dispatchEventToListeners(Events.EXITED_INSPECT_MODE);\n  }\n\n  static inspectNodeHandler: ((node: DOMNode) => Promise<void>)|null = null;\n\n  getOverlayAgent(): ProtocolProxyApi.OverlayApi {\n    return this.overlayAgent;\n  }\n\n  async hasStyleSheetText(url: Platform.DevToolsPath.UrlString): Promise<boolean> {\n    return await this.#windowControls.initializeStyleSheetText(url);\n  }\n}\n\nexport class WindowControls {\n  readonly #cssModel: CSSModel;\n  #originalStylesheetText: string|undefined;\n  #stylesheetId?: Protocol.CSS.StyleSheetId;\n  #currentUrl: Platform.DevToolsPath.UrlString|undefined;\n\n  #config: Protocol.Overlay.WindowControlsOverlayConfig = {\n    showCSS: false,\n    selectedPlatform: EmulatedOSType.WINDOWS,\n    themeColor: '#ffffff',\n  };\n\n  constructor(cssModel: CSSModel) {\n    this.#cssModel = cssModel;\n  }\n\n  get selectedPlatform(): string {\n    return this.#config.selectedPlatform;\n  }\n\n  set selectedPlatform(osType: EmulatedOSType) {\n    this.#config.selectedPlatform = osType;\n  }\n\n  get themeColor(): string {\n    return this.#config.themeColor;\n  }\n\n  set themeColor(color: string) {\n    this.#config.themeColor = color;\n  }\n\n  get config(): Protocol.Overlay.WindowControlsOverlayConfig {\n    return this.#config;\n  }\n\n  async initializeStyleSheetText(url: Platform.DevToolsPath.UrlString): Promise<boolean> {\n    if (this.#originalStylesheetText && url === this.#currentUrl) {\n      return true;\n    }\n\n    const cssSourceUrl = this.#fetchCssSourceUrl(url);\n    if (!cssSourceUrl) {\n      return false;\n    }\n\n    this.#stylesheetId = this.#fetchCurrentStyleSheet(cssSourceUrl);\n    if (!this.#stylesheetId) {\n      return false;\n    }\n\n    const stylesheetText = await this.#cssModel.getStyleSheetText(this.#stylesheetId);\n\n    if (!stylesheetText) {\n      return false;\n    }\n\n    this.#originalStylesheetText = stylesheetText;\n    this.#currentUrl = url;\n\n    return true;\n  }\n\n  async toggleEmulatedOverlay(showOverlay: boolean): Promise<void> {\n    if (!this.#stylesheetId || !this.#originalStylesheetText) {\n      return;\n    }\n    if (showOverlay) {\n      const styleSheetText = WindowControls.#getStyleSheetForPlatform(\n          this.#config.selectedPlatform.toLowerCase(), this.#originalStylesheetText);\n      if (styleSheetText) {\n        await this.#cssModel.setStyleSheetText(this.#stylesheetId, styleSheetText, false);\n      }\n    } else {\n      // Restore the original stylesheet\n      await this.#cssModel.setStyleSheetText(this.#stylesheetId, this.#originalStylesheetText, false);\n    }\n  }\n\n  static #getStyleSheetForPlatform(platform: string, originalStyleSheet: string|undefined): string|undefined {\n    const overlayDimensions = platformOverlayDimensions[platform as keyof PlatformOverlayDimensions];\n    return WindowControls.#transformStyleSheet(\n        overlayDimensions.x, overlayDimensions.y, overlayDimensions.width, overlayDimensions.height,\n        originalStyleSheet);\n  }\n\n  #fetchCssSourceUrl(url: Platform.DevToolsPath.UrlString): Platform.DevToolsPath.UrlString|undefined {\n    const parentURL = Common.ParsedURL.ParsedURL.extractOrigin(url);\n    const cssHeaders = this.#cssModel.styleSheetHeaders();\n    const header = cssHeaders.find(header => header.sourceURL && header.sourceURL.includes(parentURL));\n    return header?.sourceURL;\n  }\n\n  #fetchCurrentStyleSheet(cssSourceUrl: Platform.DevToolsPath.UrlString): Protocol.CSS.StyleSheetId|undefined {\n    const stylesheetIds = this.#cssModel.getStyleSheetIdsForURL(cssSourceUrl);\n    return stylesheetIds.length > 0 ? stylesheetIds[0] : undefined;\n  }\n\n  // The primary objective of this function is to adjust certain CSS environment variables within the existing stylesheet\n  // and provide it as the style sheet for the emulated overlay.\n  static #transformStyleSheet(\n      x: number, y: number, width: number, height: number, originalStyleSheet: string|undefined): string|undefined {\n    if (!originalStyleSheet) {\n      return undefined;\n    }\n    const stylesheetText = originalStyleSheet;\n\n    const updatedStylesheet =\n        stylesheetText.replace(/: env\\(titlebar-area-x(?:,[^)]*)?\\);/g, `: env(titlebar-area-x, ${x}px);`)\n            .replace(/: env\\(titlebar-area-y(?:,[^)]*)?\\);/g, `: env(titlebar-area-y, ${y}px);`)\n            .replace(\n                /: env\\(titlebar-area-width(?:,[^)]*)?\\);/g, `: env(titlebar-area-width, calc(100% - ${width}px));`)\n            .replace(/: env\\(titlebar-area-height(?:,[^)]*)?\\);/g, `: env(titlebar-area-height, ${height}px);`);\n\n    return updatedStylesheet;\n  }\n\n  transformStyleSheetforTesting(\n      x: number, y: number, width: number, height: number, originalStyleSheet: string|undefined): string|undefined {\n    return WindowControls.#transformStyleSheet(x, y, width, height, originalStyleSheet);\n  }\n}\n\nexport const enum Events {\n  INSPECT_MODE_WILL_BE_TOGGLED = 'InspectModeWillBeToggled',\n  EXITED_INSPECT_MODE = 'InspectModeExited',\n  HIGHLIGHT_NODE_REQUESTED = 'HighlightNodeRequested',\n  SCREENSHOT_REQUESTED = 'ScreenshotRequested',\n  PERSISTENT_GRID_OVERLAY_STATE_CHANGED = 'PersistentGridOverlayStateChanged',\n  PERSISTENT_FLEX_CONTAINER_OVERLAY_STATE_CHANGED = 'PersistentFlexContainerOverlayStateChanged',\n  PERSISTENT_SCROLL_SNAP_OVERLAY_STATE_CHANGED = 'PersistentScrollSnapOverlayStateChanged',\n  PERSISTENT_CONTAINER_QUERY_OVERLAY_STATE_CHANGED = 'PersistentContainerQueryOverlayStateChanged',\n}\n\nexport interface ChangedNodeId {\n  nodeId: number;\n  enabled: boolean;\n}\n\nexport interface EventTypes {\n  [Events.INSPECT_MODE_WILL_BE_TOGGLED]: OverlayModel;\n  [Events.EXITED_INSPECT_MODE]: void;\n  [Events.HIGHLIGHT_NODE_REQUESTED]: DOMNode;\n  [Events.SCREENSHOT_REQUESTED]: Protocol.Page.Viewport;\n  [Events.PERSISTENT_GRID_OVERLAY_STATE_CHANGED]: ChangedNodeId;\n  [Events.PERSISTENT_FLEX_CONTAINER_OVERLAY_STATE_CHANGED]: ChangedNodeId;\n  [Events.PERSISTENT_SCROLL_SNAP_OVERLAY_STATE_CHANGED]: ChangedNodeId;\n  [Events.PERSISTENT_CONTAINER_QUERY_OVERLAY_STATE_CHANGED]: ChangedNodeId;\n}\n\nexport interface Highlighter {\n  highlightInOverlay(data: HighlightData, config: Protocol.Overlay.HighlightConfig): void;\n\n  setInspectMode(mode: Protocol.Overlay.InspectMode, config: Protocol.Overlay.HighlightConfig): Promise<void>;\n\n  highlightFrame(frameId: Protocol.Page.FrameId): void;\n}\n\nclass DefaultHighlighter implements Highlighter {\n  readonly #model: OverlayModel;\n  constructor(model: OverlayModel) {\n    this.#model = model;\n  }\n\n  highlightInOverlay(data: HighlightData, highlightConfig: Protocol.Overlay.HighlightConfig): void {\n    const {node, deferredNode, object, selectorList} =\n        {node: undefined, deferredNode: undefined, object: undefined, selectorList: undefined, ...data};\n    const nodeId = node ? node.id : undefined;\n    const backendNodeId = deferredNode ? deferredNode.backendNodeId() : undefined;\n    const objectId = object ? object.objectId : undefined;\n    if (nodeId || backendNodeId || objectId) {\n      void this.#model.target().overlayAgent().invoke_highlightNode(\n          {highlightConfig, nodeId, backendNodeId, objectId, selector: selectorList});\n    } else {\n      void this.#model.target().overlayAgent().invoke_hideHighlight();\n    }\n  }\n\n  async setInspectMode(mode: Protocol.Overlay.InspectMode, highlightConfig: Protocol.Overlay.HighlightConfig):\n      Promise<void> {\n    await this.#model.target().overlayAgent().invoke_setInspectMode({mode, highlightConfig});\n  }\n\n  highlightFrame(frameId: Protocol.Page.FrameId): void {\n    void this.#model.target().overlayAgent().invoke_highlightFrame({\n      frameId,\n      contentColor: Common.Color.PageHighlight.Content.toProtocolRGBA(),\n      contentOutlineColor: Common.Color.PageHighlight.ContentOutline.toProtocolRGBA(),\n    });\n  }\n}\n\nexport class SourceOrderHighlighter {\n  readonly #model: OverlayModel;\n  constructor(model: OverlayModel) {\n    this.#model = model;\n  }\n\n  highlightSourceOrderInOverlay(node: DOMNode, sourceOrderConfig: Protocol.Overlay.SourceOrderConfig): void {\n    this.#model.setSourceOrderActive(true);\n    this.#model.setShowViewportSizeOnResize(false);\n    void this.#model.getOverlayAgent().invoke_highlightSourceOrder({sourceOrderConfig, nodeId: node.id});\n  }\n\n  hideSourceOrderHighlight(): void {\n    this.#model.setSourceOrderActive(false);\n    this.#model.setShowViewportSizeOnResize(true);\n    void this.#model.clearHighlight();\n  }\n}\n\nSDKModel.register(OverlayModel, {capabilities: Capability.DOM, autostart: true});\n\nexport interface HighlightNodeData {\n  node: DOMNode;\n  selectorList?: string;\n}\n\nexport interface HighlightDeferredNode {\n  deferredNode: DeferredDOMNode;\n}\n\nexport interface HighlightObjectData {\n  object: RemoteObject;\n  selectorList?: string;\n}\n\nexport type HighlightData = HighlightNodeData|HighlightDeferredNode|HighlightObjectData|{clear: boolean};\n"]}