{"version":3,"file":"OverlayPersistentHighlighter.js","sourceRoot":"","sources":["../../../../../../front_end/core/sdk/OverlayPersistentHighlighter.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Protocol from '../../generated/protocol.js';\nimport * as Common from '../common/common.js';\nimport * as Platform from '../platform/platform.js';\n\nimport type {DOMModel} from './DOMModel.js';\nimport {OverlayColorGenerator} from './OverlayColorGenerator.js';\n\nexport const enum HighlightType {\n  FLEX = 'FLEX',\n  GRID = 'GRID',\n  SCROLL_SNAP = 'SCROLL_SNAP',\n  CONTAINER_QUERY = 'CONTAINER_QUERY',\n  ISOLATED_ELEMENT = 'ISOLATED_ELEMENT',\n}\n\nexport interface PersistentHighlightSettingItem {\n  url: Platform.DevToolsPath.UrlString;\n  path: string;\n  type: HighlightType;\n}\n\nexport interface PersistentHighlighterCallbacks {\n  onGridOverlayStateChanged: ({nodeId, enabled}: {nodeId: Protocol.DOM.NodeId, enabled: boolean}) => void;\n  onFlexOverlayStateChanged: ({nodeId, enabled}: {nodeId: Protocol.DOM.NodeId, enabled: boolean}) => void;\n  onScrollSnapOverlayStateChanged: ({nodeId, enabled}: {nodeId: Protocol.DOM.NodeId, enabled: boolean}) => void;\n  onContainerQueryOverlayStateChanged: ({nodeId, enabled}: {nodeId: Protocol.DOM.NodeId, enabled: boolean}) => void;\n}\n\nexport class OverlayPersistentHighlighter {\n  readonly #model: OverlayModel;\n  readonly #colors = new Map<Protocol.DOM.NodeId, Common.Color.Color>();\n  readonly #persistentHighlightSetting =\n      Common.Settings.Settings.instance().createLocalSetting<PersistentHighlightSettingItem[]>(\n          'persistent-highlight-setting', []);\n  #gridHighlights = new Map<Protocol.DOM.NodeId, Protocol.Overlay.GridHighlightConfig>();\n  #scrollSnapHighlights = new Map<Protocol.DOM.NodeId, Protocol.Overlay.ScrollSnapContainerHighlightConfig>();\n  #flexHighlights = new Map<Protocol.DOM.NodeId, Protocol.Overlay.FlexContainerHighlightConfig>();\n  #containerQueryHighlights = new Map<Protocol.DOM.NodeId, Protocol.Overlay.ContainerQueryContainerHighlightConfig>();\n  #isolatedElementHighlights = new Map<Protocol.DOM.NodeId, Protocol.Overlay.IsolationModeHighlightConfig>();\n  #gridColorGenerator = new OverlayColorGenerator();\n  #flexColorGenerator = new OverlayColorGenerator();\n\n  /**\n   * @see `front_end/core/sdk/sdk-meta.ts`\n   */\n  readonly #showGridLineLabelsSetting =\n      Common.Settings.Settings.instance().moduleSetting<string>('show-grid-line-labels');\n  readonly #extendGridLinesSetting = Common.Settings.Settings.instance().moduleSetting<boolean>('extend-grid-lines');\n  readonly #showGridAreasSetting = Common.Settings.Settings.instance().moduleSetting<boolean>('show-grid-areas');\n  readonly #showGridTrackSizesSetting =\n      Common.Settings.Settings.instance().moduleSetting<boolean>('show-grid-track-sizes');\n\n  readonly #callbacks: PersistentHighlighterCallbacks;\n  constructor(model: OverlayModel, callbacks: PersistentHighlighterCallbacks) {\n    this.#model = model;\n    this.#callbacks = callbacks;\n\n    this.#showGridLineLabelsSetting.addChangeListener(this.onSettingChange, this);\n    this.#extendGridLinesSetting.addChangeListener(this.onSettingChange, this);\n    this.#showGridAreasSetting.addChangeListener(this.onSettingChange, this);\n    this.#showGridTrackSizesSetting.addChangeListener(this.onSettingChange, this);\n  }\n\n  private onSettingChange(): void {\n    this.resetOverlay();\n  }\n\n  private buildGridHighlightConfig(nodeId: Protocol.DOM.NodeId): Protocol.Overlay.GridHighlightConfig {\n    const mainColor = this.colorOfGrid(nodeId).asLegacyColor();\n    const background = mainColor.setAlpha(0.1).asLegacyColor();\n    const gapBackground = mainColor.setAlpha(0.3).asLegacyColor();\n    const gapHatch = mainColor.setAlpha(0.8).asLegacyColor();\n\n    const showGridExtensionLines = this.#extendGridLinesSetting.get();\n    const showPositiveLineNumbers = this.#showGridLineLabelsSetting.get() === 'lineNumbers';\n    const showNegativeLineNumbers = showPositiveLineNumbers;\n    const showLineNames = this.#showGridLineLabelsSetting.get() === 'lineNames';\n    return {\n      rowGapColor: gapBackground.toProtocolRGBA(),\n      rowHatchColor: gapHatch.toProtocolRGBA(),\n      columnGapColor: gapBackground.toProtocolRGBA(),\n      columnHatchColor: gapHatch.toProtocolRGBA(),\n      gridBorderColor: mainColor.toProtocolRGBA(),\n      gridBorderDash: false,\n      rowLineColor: mainColor.toProtocolRGBA(),\n      columnLineColor: mainColor.toProtocolRGBA(),\n      rowLineDash: true,\n      columnLineDash: true,\n      showGridExtensionLines,\n      showPositiveLineNumbers,\n      showNegativeLineNumbers,\n      showLineNames,\n      showAreaNames: this.#showGridAreasSetting.get(),\n      showTrackSizes: this.#showGridTrackSizesSetting.get(),\n      areaBorderColor: mainColor.toProtocolRGBA(),\n      gridBackgroundColor: background.toProtocolRGBA(),\n    };\n  }\n\n  private buildFlexContainerHighlightConfig(nodeId: Protocol.DOM.NodeId):\n      Protocol.Overlay.FlexContainerHighlightConfig {\n    const mainColor = this.colorOfFlex(nodeId).asLegacyColor();\n    return {\n      containerBorder: {color: mainColor.toProtocolRGBA(), pattern: Protocol.Overlay.LineStylePattern.Dashed},\n      itemSeparator: {color: mainColor.toProtocolRGBA(), pattern: Protocol.Overlay.LineStylePattern.Dotted},\n      lineSeparator: {color: mainColor.toProtocolRGBA(), pattern: Protocol.Overlay.LineStylePattern.Dashed},\n      mainDistributedSpace: {hatchColor: mainColor.toProtocolRGBA()},\n      crossDistributedSpace: {hatchColor: mainColor.toProtocolRGBA()},\n    };\n  }\n\n  private buildScrollSnapContainerHighlightConfig(_nodeId: number):\n      Protocol.Overlay.ScrollSnapContainerHighlightConfig {\n    return {\n      snapAreaBorder: {\n        color: Common.Color.PageHighlight.GridBorder.toProtocolRGBA(),\n        pattern: Protocol.Overlay.LineStylePattern.Dashed,\n      },\n      snapportBorder: {color: Common.Color.PageHighlight.GridBorder.toProtocolRGBA()},\n      scrollMarginColor: Common.Color.PageHighlight.Margin.toProtocolRGBA(),\n      scrollPaddingColor: Common.Color.PageHighlight.Padding.toProtocolRGBA(),\n    };\n  }\n\n  highlightGridInOverlay(nodeId: Protocol.DOM.NodeId): void {\n    this.#gridHighlights.set(nodeId, this.buildGridHighlightConfig(nodeId));\n    this.updateHighlightsInOverlay();\n    this.savePersistentHighlightSetting();\n    this.#callbacks.onGridOverlayStateChanged({nodeId, enabled: true});\n  }\n\n  isGridHighlighted(nodeId: Protocol.DOM.NodeId): boolean {\n    return this.#gridHighlights.has(nodeId);\n  }\n\n  colorOfGrid(nodeId: Protocol.DOM.NodeId): Common.Color.Color {\n    let color = this.#colors.get(nodeId);\n    if (!color) {\n      color = this.#gridColorGenerator.next();\n      this.#colors.set(nodeId, color);\n    }\n\n    return color;\n  }\n\n  setColorOfGrid(nodeId: Protocol.DOM.NodeId, color: Common.Color.Color): void {\n    this.#colors.set(nodeId, color);\n  }\n\n  hideGridInOverlay(nodeId: Protocol.DOM.NodeId): void {\n    if (this.#gridHighlights.has(nodeId)) {\n      this.#gridHighlights.delete(nodeId);\n      this.updateHighlightsInOverlay();\n      this.savePersistentHighlightSetting();\n      this.#callbacks.onGridOverlayStateChanged({nodeId, enabled: false});\n    }\n  }\n\n  highlightScrollSnapInOverlay(nodeId: Protocol.DOM.NodeId): void {\n    this.#scrollSnapHighlights.set(nodeId, this.buildScrollSnapContainerHighlightConfig(nodeId));\n    this.updateHighlightsInOverlay();\n    this.#callbacks.onScrollSnapOverlayStateChanged({nodeId, enabled: true});\n    this.savePersistentHighlightSetting();\n  }\n\n  isScrollSnapHighlighted(nodeId: Protocol.DOM.NodeId): boolean {\n    return this.#scrollSnapHighlights.has(nodeId);\n  }\n\n  hideScrollSnapInOverlay(nodeId: Protocol.DOM.NodeId): void {\n    if (this.#scrollSnapHighlights.has(nodeId)) {\n      this.#scrollSnapHighlights.delete(nodeId);\n      this.updateHighlightsInOverlay();\n      this.#callbacks.onScrollSnapOverlayStateChanged({nodeId, enabled: false});\n      this.savePersistentHighlightSetting();\n    }\n  }\n\n  highlightFlexInOverlay(nodeId: Protocol.DOM.NodeId): void {\n    this.#flexHighlights.set(nodeId, this.buildFlexContainerHighlightConfig(nodeId));\n    this.updateHighlightsInOverlay();\n    this.savePersistentHighlightSetting();\n    this.#callbacks.onFlexOverlayStateChanged({nodeId, enabled: true});\n  }\n\n  isFlexHighlighted(nodeId: Protocol.DOM.NodeId): boolean {\n    return this.#flexHighlights.has(nodeId);\n  }\n\n  colorOfFlex(nodeId: Protocol.DOM.NodeId): Common.Color.Color {\n    let color = this.#colors.get(nodeId);\n    if (!color) {\n      color = this.#flexColorGenerator.next();\n      this.#colors.set(nodeId, color);\n    }\n\n    return color;\n  }\n\n  setColorOfFlex(nodeId: Protocol.DOM.NodeId, color: Common.Color.Color): void {\n    this.#colors.set(nodeId, color);\n  }\n\n  hideFlexInOverlay(nodeId: Protocol.DOM.NodeId): void {\n    if (this.#flexHighlights.has(nodeId)) {\n      this.#flexHighlights.delete(nodeId);\n      this.updateHighlightsInOverlay();\n      this.savePersistentHighlightSetting();\n      this.#callbacks.onFlexOverlayStateChanged({nodeId, enabled: false});\n    }\n  }\n\n  highlightContainerQueryInOverlay(nodeId: Protocol.DOM.NodeId): void {\n    this.#containerQueryHighlights.set(nodeId, this.buildContainerQueryContainerHighlightConfig());\n    this.updateHighlightsInOverlay();\n    this.savePersistentHighlightSetting();\n    this.#callbacks.onContainerQueryOverlayStateChanged({nodeId, enabled: true});\n  }\n\n  hideContainerQueryInOverlay(nodeId: Protocol.DOM.NodeId): void {\n    if (this.#containerQueryHighlights.has(nodeId)) {\n      this.#containerQueryHighlights.delete(nodeId);\n      this.updateHighlightsInOverlay();\n      this.savePersistentHighlightSetting();\n      this.#callbacks.onContainerQueryOverlayStateChanged({nodeId, enabled: false});\n    }\n  }\n\n  isContainerQueryHighlighted(nodeId: Protocol.DOM.NodeId): boolean {\n    return this.#containerQueryHighlights.has(nodeId);\n  }\n\n  private buildContainerQueryContainerHighlightConfig(): Protocol.Overlay.ContainerQueryContainerHighlightConfig {\n    return {\n      containerBorder: {\n        color: Common.Color.PageHighlight.LayoutLine.toProtocolRGBA(),\n        pattern: Protocol.Overlay.LineStylePattern.Dashed,\n      },\n      descendantBorder: {\n        color: Common.Color.PageHighlight.LayoutLine.toProtocolRGBA(),\n        pattern: Protocol.Overlay.LineStylePattern.Dashed,\n      },\n    };\n  }\n\n  highlightIsolatedElementInOverlay(nodeId: Protocol.DOM.NodeId): void {\n    this.#isolatedElementHighlights.set(nodeId, this.buildIsolationModeHighlightConfig());\n    this.updateHighlightsInOverlay();\n    this.savePersistentHighlightSetting();\n  }\n\n  hideIsolatedElementInOverlay(nodeId: Protocol.DOM.NodeId): void {\n    if (this.#isolatedElementHighlights.has(nodeId)) {\n      this.#isolatedElementHighlights.delete(nodeId);\n      this.updateHighlightsInOverlay();\n      this.savePersistentHighlightSetting();\n    }\n  }\n\n  isIsolatedElementHighlighted(nodeId: Protocol.DOM.NodeId): boolean {\n    return this.#isolatedElementHighlights.has(nodeId);\n  }\n\n  private buildIsolationModeHighlightConfig(): Protocol.Overlay.IsolationModeHighlightConfig {\n    return {\n      resizerColor: Common.Color.IsolationModeHighlight.Resizer.toProtocolRGBA(),\n      resizerHandleColor: Common.Color.IsolationModeHighlight.ResizerHandle.toProtocolRGBA(),\n      maskColor: Common.Color.IsolationModeHighlight.Mask.toProtocolRGBA(),\n    };\n  }\n\n  hideAllInOverlayWithoutSave(): void {\n    this.#flexHighlights.clear();\n    this.#gridHighlights.clear();\n    this.#scrollSnapHighlights.clear();\n    this.#containerQueryHighlights.clear();\n    this.#isolatedElementHighlights.clear();\n    this.updateHighlightsInOverlay();\n  }\n\n  refreshHighlights(): void {\n    const gridsNeedUpdate = this.updateHighlightsForDeletedNodes(this.#gridHighlights);\n    const flexboxesNeedUpdate = this.updateHighlightsForDeletedNodes(this.#flexHighlights);\n    const scrollSnapsNeedUpdate = this.updateHighlightsForDeletedNodes(this.#scrollSnapHighlights);\n    const containerQueriesNeedUpdate = this.updateHighlightsForDeletedNodes(this.#containerQueryHighlights);\n    const isolatedElementsNeedUpdate = this.updateHighlightsForDeletedNodes(this.#isolatedElementHighlights);\n    if (flexboxesNeedUpdate || gridsNeedUpdate || scrollSnapsNeedUpdate || containerQueriesNeedUpdate ||\n        isolatedElementsNeedUpdate) {\n      this.updateHighlightsInOverlay();\n      this.savePersistentHighlightSetting();\n    }\n  }\n\n  private updateHighlightsForDeletedNodes(highlights: Map<Protocol.DOM.NodeId, unknown>): boolean {\n    let needsUpdate = false;\n    for (const nodeId of highlights.keys()) {\n      if (this.#model.getDOMModel().nodeForId(nodeId) === null) {\n        highlights.delete(nodeId);\n        needsUpdate = true;\n      }\n    }\n    return needsUpdate;\n  }\n\n  resetOverlay(): void {\n    for (const nodeId of this.#gridHighlights.keys()) {\n      this.#gridHighlights.set(nodeId, this.buildGridHighlightConfig(nodeId));\n    }\n    for (const nodeId of this.#flexHighlights.keys()) {\n      this.#flexHighlights.set(nodeId, this.buildFlexContainerHighlightConfig(nodeId));\n    }\n    for (const nodeId of this.#scrollSnapHighlights.keys()) {\n      this.#scrollSnapHighlights.set(nodeId, this.buildScrollSnapContainerHighlightConfig(nodeId));\n    }\n    for (const nodeId of this.#containerQueryHighlights.keys()) {\n      this.#containerQueryHighlights.set(nodeId, this.buildContainerQueryContainerHighlightConfig());\n    }\n    for (const nodeId of this.#isolatedElementHighlights.keys()) {\n      this.#isolatedElementHighlights.set(nodeId, this.buildIsolationModeHighlightConfig());\n    }\n    this.updateHighlightsInOverlay();\n  }\n\n  private updateHighlightsInOverlay(): void {\n    const hasNodesToHighlight = this.#gridHighlights.size > 0 || this.#flexHighlights.size > 0 ||\n        this.#containerQueryHighlights.size > 0 || this.#isolatedElementHighlights.size > 0;\n    this.#model.setShowViewportSizeOnResize(!hasNodesToHighlight);\n    this.updateGridHighlightsInOverlay();\n    this.updateFlexHighlightsInOverlay();\n    this.updateScrollSnapHighlightsInOverlay();\n    this.updateContainerQueryHighlightsInOverlay();\n    this.updateIsolatedElementHighlightsInOverlay();\n  }\n\n  private updateGridHighlightsInOverlay(): void {\n    const overlayModel = this.#model;\n    const gridNodeHighlightConfigs = [];\n    for (const [nodeId, gridHighlightConfig] of this.#gridHighlights.entries()) {\n      gridNodeHighlightConfigs.push({nodeId, gridHighlightConfig});\n    }\n    overlayModel.target().overlayAgent().invoke_setShowGridOverlays({gridNodeHighlightConfigs});\n  }\n\n  private updateFlexHighlightsInOverlay(): void {\n    const overlayModel = this.#model;\n    const flexNodeHighlightConfigs = [];\n    for (const [nodeId, flexContainerHighlightConfig] of this.#flexHighlights.entries()) {\n      flexNodeHighlightConfigs.push({nodeId, flexContainerHighlightConfig});\n    }\n    overlayModel.target().overlayAgent().invoke_setShowFlexOverlays({flexNodeHighlightConfigs});\n  }\n\n  private updateScrollSnapHighlightsInOverlay(): void {\n    const overlayModel = this.#model;\n    const scrollSnapHighlightConfigs = [];\n    for (const [nodeId, scrollSnapContainerHighlightConfig] of this.#scrollSnapHighlights.entries()) {\n      scrollSnapHighlightConfigs.push({nodeId, scrollSnapContainerHighlightConfig});\n    }\n    overlayModel.target().overlayAgent().invoke_setShowScrollSnapOverlays({scrollSnapHighlightConfigs});\n  }\n\n  updateContainerQueryHighlightsInOverlay(): void {\n    const overlayModel = this.#model;\n    const containerQueryHighlightConfigs = [];\n    for (const [nodeId, containerQueryContainerHighlightConfig] of this.#containerQueryHighlights.entries()) {\n      containerQueryHighlightConfigs.push({nodeId, containerQueryContainerHighlightConfig});\n    }\n    overlayModel.target().overlayAgent().invoke_setShowContainerQueryOverlays({containerQueryHighlightConfigs});\n  }\n\n  updateIsolatedElementHighlightsInOverlay(): void {\n    const overlayModel = this.#model;\n    const isolatedElementHighlightConfigs = [];\n    for (const [nodeId, isolationModeHighlightConfig] of this.#isolatedElementHighlights.entries()) {\n      isolatedElementHighlightConfigs.push({nodeId, isolationModeHighlightConfig});\n    }\n    overlayModel.target().overlayAgent().invoke_setShowIsolatedElements({isolatedElementHighlightConfigs});\n  }\n\n  async restoreHighlightsForDocument(): Promise<void> {\n    this.#flexHighlights = new Map();\n    this.#gridHighlights = new Map();\n    this.#scrollSnapHighlights = new Map();\n    this.#containerQueryHighlights = new Map();\n    this.#isolatedElementHighlights = new Map();\n\n    // this.currentURL() is empty when the page is reloaded because the\n    // new document has not been requested yet and the old one has been\n    // removed. Therefore, we need to request the document and wait for it.\n    // Note that requestDocument() caches the document so that it is requested\n    // only once.\n    const document = await this.#model.getDOMModel().requestDocument();\n    const currentURL = document ? document.documentURL : Platform.DevToolsPath.EmptyUrlString;\n    await Promise.all(this.#persistentHighlightSetting.get().map(async persistentHighlight => {\n      if (persistentHighlight.url === currentURL) {\n        return await this.#model.getDOMModel().pushNodeByPathToFrontend(persistentHighlight.path).then(nodeId => {\n          const node = this.#model.getDOMModel().nodeForId(nodeId);\n          if (!node) {\n            return;\n          }\n\n          switch (persistentHighlight.type) {\n            case HighlightType.GRID:\n              this.#gridHighlights.set(node.id, this.buildGridHighlightConfig(node.id));\n              this.#callbacks.onGridOverlayStateChanged({nodeId: node.id, enabled: true});\n              break;\n            case HighlightType.FLEX:\n              this.#flexHighlights.set(node.id, this.buildFlexContainerHighlightConfig(node.id));\n              this.#callbacks.onFlexOverlayStateChanged({nodeId: node.id, enabled: true});\n              break;\n            case HighlightType.CONTAINER_QUERY:\n              this.#containerQueryHighlights.set(node.id, this.buildContainerQueryContainerHighlightConfig());\n              this.#callbacks.onContainerQueryOverlayStateChanged({nodeId: node.id, enabled: true});\n              break;\n            case HighlightType.SCROLL_SNAP:\n              this.#scrollSnapHighlights.set(node.id, this.buildScrollSnapContainerHighlightConfig(node.id));\n              this.#callbacks.onScrollSnapOverlayStateChanged({nodeId: node.id, enabled: true});\n              break;\n            case HighlightType.ISOLATED_ELEMENT:\n              this.#isolatedElementHighlights.set(node.id, this.buildIsolationModeHighlightConfig());\n              break;\n          }\n        });\n      }\n    }));\n\n    this.updateHighlightsInOverlay();\n  }\n\n  private currentUrl(): Platform.DevToolsPath.UrlString {\n    const domDocument = this.#model.getDOMModel().existingDocument();\n    return domDocument ? domDocument.documentURL : Platform.DevToolsPath.EmptyUrlString;\n  }\n\n  private getPersistentHighlightSettingForOneType(highlights: Map<Protocol.DOM.NodeId, unknown>, type: HighlightType):\n      PersistentHighlightSettingItem[] {\n    const persistentHighlights: PersistentHighlightSettingItem[] = [];\n    for (const nodeId of highlights.keys()) {\n      const node = this.#model.getDOMModel().nodeForId(nodeId);\n      if (node) {\n        persistentHighlights.push({url: this.currentUrl(), path: node.path(), type});\n      }\n    }\n\n    return persistentHighlights;\n  }\n\n  private savePersistentHighlightSetting(): void {\n    const currentURL = this.currentUrl();\n\n    // Keep the highlights that are not related to this document.\n    const highlightsInOtherDocuments =\n        this.#persistentHighlightSetting.get().filter((persistentSetting: {\n                                                        url: Platform.DevToolsPath.UrlString,\n                                                      }) => persistentSetting.url !== currentURL);\n\n    const persistentHighlights = [\n      ...highlightsInOtherDocuments,\n      ...this.getPersistentHighlightSettingForOneType(this.#gridHighlights, HighlightType.GRID),\n      ...this.getPersistentHighlightSettingForOneType(this.#flexHighlights, HighlightType.FLEX),\n      ...this.getPersistentHighlightSettingForOneType(this.#containerQueryHighlights, HighlightType.CONTAINER_QUERY),\n      ...this.getPersistentHighlightSettingForOneType(this.#scrollSnapHighlights, HighlightType.SCROLL_SNAP),\n      ...this.getPersistentHighlightSettingForOneType(this.#isolatedElementHighlights, HighlightType.ISOLATED_ELEMENT),\n    ];\n\n    this.#persistentHighlightSetting.set(persistentHighlights);\n  }\n}\n\nexport interface OverlayAgent {\n  /* eslint-disable @typescript-eslint/naming-convention */\n  invoke_setShowGridOverlays(param: {\n    gridNodeHighlightConfigs: Array<{\n      nodeId: number,\n      gridHighlightConfig: Protocol.Overlay.GridHighlightConfig,\n    }>,\n  }): void;\n\n  invoke_setShowFlexOverlays(param: {\n    flexNodeHighlightConfigs: Array<{\n      nodeId: number,\n      flexContainerHighlightConfig: Protocol.Overlay.FlexContainerHighlightConfig,\n    }>,\n  }): void;\n\n  invoke_setShowScrollSnapOverlays(param: {\n    scrollSnapHighlightConfigs: Array<{\n      nodeId: number,\n    }>,\n  }): void;\n\n  invoke_setShowContainerQueryOverlays(param: {\n    containerQueryHighlightConfigs: Array<{\n      nodeId: number,\n      containerQueryContainerHighlightConfig: Protocol.Overlay.ContainerQueryContainerHighlightConfig,\n    }>,\n  }): void;\n\n  invoke_setShowIsolatedElements(param: {\n    isolatedElementHighlightConfigs: Array<{\n      nodeId: number,\n      isolationModeHighlightConfig: Protocol.Overlay.IsolationModeHighlightConfig,\n    }>,\n  }): void;\n  /* eslint-enable @typescript-eslint/naming-convention */\n}\n\nexport interface Target {\n  overlayAgent(): OverlayAgent;\n}\n\nexport interface OverlayModel {\n  getDOMModel(): DOMModel;\n\n  target(): Target;\n\n  setShowViewportSizeOnResize(value: boolean): void;\n}\n"]}