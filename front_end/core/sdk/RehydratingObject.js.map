{"version":3,"file":"RehydratingObject.js","sourceRoot":"","sources":["../../../../../../front_end/core/sdk/RehydratingObject.ts"],"names":[],"mappings":"AAAA,sCAAsC;AACtC,yEAAyE;AACzE,6BAA6B","sourcesContent":["// Copyright 2024 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Protocol from '../../generated/protocol.js';\n\n/** This object is emitted to ScriptParsed and also used in the RehydratingConnection **/\nexport interface RehydratingScript extends Protocol.Debugger.ScriptParsedEvent {\n  sourceText?: string;\n  executionContextAuxData?: RehydratingExecutionContextAuxData;\n  isolate: string;\n  /** The manually provided string via the `//# sourceURL` directive. Meanwhile the `url` is the script's `src`  */\n  sourceURL?: string;\n  pid: number;\n}\n\nexport interface RehydratingResource {\n  url: string;\n  content: string;\n  frame: string;\n  mimeType: string;\n}\n\nexport interface RehydratingExecutionContextAuxData {\n  frameId?: Protocol.Page.FrameId;\n  isDefault?: boolean;\n  type?: string;\n}\n\nexport interface RehydratingExecutionContext extends Protocol.Runtime.ExecutionContextDescription {\n  /** AKA V8ContextToken. https://source.chromium.org/chromium/chromium/src/+/main:third_party/blink/renderer/core/inspector/inspector_trace_events.cc;l=1229;drc=3c88f61e18b043e70c225d8d57c77832a85e7f58 */\n  v8Context?: string;\n  auxData?: RehydratingExecutionContextAuxData;\n  isolate: string;\n}\n\nexport interface RehydratingTarget {\n  targetId: Protocol.Target.TargetID;\n  type: string;\n  url: string;\n  pid?: number;\n  isolate?: string;\n}\n\nexport interface HydratingDataPerTarget {\n  target: RehydratingTarget;\n  executionContexts: RehydratingExecutionContext[];\n  scripts: RehydratingScript[];\n  resources: RehydratingResource[];\n}\n\nexport interface ProtocolMessage {\n  id: number;\n  method: string;\n  sessionId?: number;\n  params?: object;\n}\n\nexport interface ProtocolEvent {\n  method: string;\n  params: object;\n}\n\nexport interface ProtocolResponse {\n  id: number;\n}\n\nexport type ServerMessage = (ProtocolEvent|ProtocolMessage|ProtocolResponse)&Record<string, unknown>;\n\nexport interface Session {\n  target: RehydratingTarget;\n  executionContexts: RehydratingExecutionContext[];\n  scripts: RehydratingScript[];\n}\n"]}