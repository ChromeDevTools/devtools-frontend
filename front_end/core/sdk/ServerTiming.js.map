{"version":3,"file":"ServerTiming.js","sourceRoot":"","sources":["../../../../../../front_end/core/sdk/ServerTiming.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2016 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../common/common.js';\nimport * as i18n from '../i18n/i18n.js';\n\nimport type {NameValue} from './NetworkRequest.js';\n\nconst UIStrings = {\n  /**\n   * @description Text in Server Timing\n   * @example {sql-lookup} PH1\n   */\n  deprecatedSyntaxFoundPleaseUse:\n      'Deprecated syntax found for metric \"{PH1}\". Please use: <name>;dur=<duration>;desc=<description>',\n  /**\n   * @description Text in Server Timing\n   * @example {https} PH1\n   */\n  duplicateParameterSIgnored: 'Duplicate parameter \"{PH1}\" ignored.',\n  /**\n   * @description Text in Server Timing\n   * @example {https} PH1\n   */\n  noValueFoundForParameterS: 'No value found for parameter \"{PH1}\".',\n  /**\n   * @description Text in Server Timing\n   * @example {https} PH1\n   */\n  unrecognizedParameterS: 'Unrecognized parameter \"{PH1}\".',\n  /**\n   * @description Text in Server Timing\n   */\n  extraneousTrailingCharacters: 'Extraneous trailing characters.',\n  /**\n   * @description Text in Server Timing\n   * @example {https} PH1\n   * @example {2.0} PH2\n   */\n  unableToParseSValueS: 'Unable to parse \"{PH1}\" value \"{PH2}\".',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('core/sdk/ServerTiming.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\n/**\n * Represents an authored single server timing metric. https://w3c.github.io/server-timing/#the-server-timing-header-field\n */\nexport interface ServerTimingMetric {\n  /** The name of the metric, a single token */\n  name: string;\n  /** A human-readable description of the metric. */\n  desc?: string;\n  /** The duration; milliseconds is recommended. https://w3c.github.io/server-timing/#duration-attribute. */\n  dur?: number;\n}\n\nexport const cloudflarePrefix = '(cf) ';\nexport const cloudinaryPrefix = '(cld) ';\n\nexport class ServerTiming {\n  metric: string;\n  value: number|null;\n  description: string|null;\n\n  constructor(metric: string, value: number|null, description: string|null) {\n    this.metric = metric;\n    this.value = value;\n    this.description = description;\n  }\n\n  static parseHeaders(headers: NameValue[]): ServerTiming[]|null {\n    const rawServerTimingHeaders = headers.filter(item => item.name.toLowerCase() === 'server-timing');\n    if (!rawServerTimingHeaders.length) {\n      return null;\n    }\n\n    const serverTimings = rawServerTimingHeaders.reduce<ServerTiming[]>((timings, header) => {\n      const timing = this.createFromHeaderValue(header.value);\n      timings.push(...timing.map(function(entry) {\n        return new ServerTiming(entry.name, entry.dur ?? null, entry.desc ?? '');\n      }));\n      return timings;\n    }, []);\n    return serverTimings;\n  }\n\n  static createFromHeaderValue(valueString: string): ServerTimingMetric[] {\n    function trimLeadingWhiteSpace(): void {\n      valueString = valueString.replace(/^\\s*/, '');\n    }\n    function consumeDelimiter(char: string): boolean {\n      console.assert(char.length === 1);\n      trimLeadingWhiteSpace();\n      if (valueString.charAt(0) !== char) {\n        return false;\n      }\n\n      valueString = valueString.substring(1);\n      return true;\n    }\n    function consumeToken(): string|null {\n      // https://tools.ietf.org/html/rfc7230#appendix-B\n      const result = /^(?:\\s*)([\\w!#$%&'*+\\-.^`|~]+)(?:\\s*)(.*)/.exec(valueString);\n      if (!result) {\n        return null;\n      }\n\n      valueString = result[2];\n      return result[1];\n    }\n    function consumeTokenOrQuotedString(): string|null {\n      trimLeadingWhiteSpace();\n      if (valueString.charAt(0) === '\"') {\n        return consumeQuotedString();\n      }\n\n      return consumeToken();\n    }\n    function consumeQuotedString(): string|null {\n      console.assert(valueString.charAt(0) === '\"');\n      valueString = valueString.substring(1);  // remove leading DQUOTE\n\n      let value = '';\n      while (valueString.length) {\n        // split into two parts:\n        //  -everything before the first \" or \\\n        //  -everything else\n        const result = /^([^\"\\\\]*)(.*)/.exec(valueString);\n        if (!result) {\n          return null;  // not a valid quoted-string\n        }\n        value += result[1];\n        if (result[2].charAt(0) === '\"') {\n          // we have found our closing \"\n          valueString = result[2].substring(1);  // strip off everything after the closing \"\n          return value;                          // we are done here\n        }\n\n        console.assert(result[2].charAt(0) === '\\\\');\n        // special rules for \\ found in quoted-string (https://tools.ietf.org/html/rfc7230#section-3.2.6)\n        value += result[2].charAt(1);          // grab the character AFTER the \\ (if there was one)\n        valueString = result[2].substring(2);  // strip off \\ and next character\n      }\n\n      return null;  // not a valid quoted-string\n    }\n    function consumeExtraneous(): void {\n      const result = /([,;].*)/.exec(valueString);\n      if (result) {\n        valueString = result[1];\n      }\n    }\n\n    const result: ServerTimingMetric[] = [];\n    let name;\n    while ((name = consumeToken()) !== null) {\n      const entry: ServerTimingMetric = {name};\n\n      if (valueString.charAt(0) === '=') {\n        this.showWarning(i18nString(UIStrings.deprecatedSyntaxFoundPleaseUse, {PH1: name}));\n      }\n\n      while (consumeDelimiter(';')) {\n        let paramName;\n        if ((paramName = consumeToken()) === null) {\n          continue;\n        }\n\n        paramName = paramName.toLowerCase();\n        const parseParameter = this.getParserForParameter(paramName);\n        let paramValue: (string|null)|null = null;\n        if (consumeDelimiter('=')) {\n          // always parse the value, even if we don't recognize the parameter #name\n          paramValue = consumeTokenOrQuotedString();\n          consumeExtraneous();\n        }\n\n        if (parseParameter) {\n          // paramName is valid\n          if (entry.hasOwnProperty(paramName)) {\n            this.showWarning(i18nString(UIStrings.duplicateParameterSIgnored, {PH1: paramName}));\n            continue;\n          }\n\n          if (paramValue === null) {\n            this.showWarning(i18nString(UIStrings.noValueFoundForParameterS, {PH1: paramName}));\n          }\n\n          parseParameter.call(this, entry, paramValue);\n        } else {\n          // paramName is not valid\n          // TODO(paulirish): consider showing other included params, like `start`: https://github.com/w3c/server-timing/issues/43\n          this.showWarning(i18nString(UIStrings.unrecognizedParameterS, {PH1: paramName}));\n        }\n      }\n\n      result.push(entry);\n\n      // Special parsing for cloudflare's bespoke format. https://blog.cloudflare.com/new-standards/#measuring-impact\n      // We extract the individual items of the cfL4 server-timing for clear presentation\n      if (entry.name === 'cfL4' && entry.desc) {\n        new URLSearchParams(entry.desc).entries().forEach(([key, val]) => {\n          result.push({name: `${cloudflarePrefix}${key}`, desc: val});\n        });\n      }\n\n      // Special parsing for cloudinary's bespoke format. https://cloudinary.com/blog/inside_the_black_box_with_server_timing#what_details_are_you_sharing_\n      // The format has changed since this blog post\n      if (entry.name === 'content-info' && entry.desc) {\n        new URLSearchParams(entry.desc.replace(/,/g, '&')).entries().forEach(([key, val]) => {\n          result.push({name: `${cloudinaryPrefix}${key}`, desc: val});\n        });\n      }\n\n      if (!consumeDelimiter(',')) {\n        break;\n      }\n    }\n\n    if (valueString.length) {\n      this.showWarning(i18nString(UIStrings.extraneousTrailingCharacters));\n    }\n    return result;\n  }\n\n  static getParserForParameter(paramName: string): ((arg0: ServerTimingMetric, arg1: string|null) => void)|null {\n    switch (paramName) {\n      case 'dur': {\n        function durParser(entry: ServerTimingMetric, paramValue: string|null): void {\n          entry.dur = 0;\n          if (paramValue !== null) {\n            const duration = parseFloat(paramValue);\n            if (isNaN(duration)) {\n              ServerTiming.showWarning(i18nString(UIStrings.unableToParseSValueS, {PH1: paramName, PH2: paramValue}));\n              return;\n            }\n            entry.dur = duration;\n          }\n        }\n        return durParser;\n      }\n\n      case 'desc': {\n        function descParser(entry: ServerTimingMetric, paramValue: string|null): void {\n          entry.desc = paramValue || '';\n        }\n        return descParser;\n      }\n\n      default: {\n        return null;\n      }\n    }\n  }\n\n  static showWarning(msg: string): void {\n    Common.Console.Console.instance().warn(`ServerTiming: ${msg}`);\n  }\n}\n"]}