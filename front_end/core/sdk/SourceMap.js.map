{"version":3,"file":"SourceMap.js","sourceRoot":"","sources":["../../../../../../front_end/core/sdk/SourceMap.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2012 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as TextUtils from '../../models/text_utils/text_utils.js';\nimport * as ScopesCodec from '../../third_party/source-map-scopes-codec/source-map-scopes-codec.js';\nimport * as Common from '../common/common.js';\nimport * as Platform from '../platform/platform.js';\nimport * as Root from '../root/root.js';\n\nimport type {CallFrame, ScopeChainEntry} from './DebuggerModel.js';\nimport {scopeTreeForScript} from './ScopeTreeCache.js';\nimport type {Script} from './Script.js';\nimport {buildOriginalScopes, decodePastaRanges, type NamedFunctionRange} from './SourceMapFunctionRanges.js';\nimport {SourceMapScopesInfo, type TranslatedFrame} from './SourceMapScopesInfo.js';\n\n/**\n * Type of the base source map JSON object, which contains the sources and the mappings at the very least, plus\n * some additional fields.\n *\n * @see {@link SourceMapV3}\n * @see {@link https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k Source Map Revision 3 Proposal}\n */\nexport interface SourceMapV3Object {\n  /* eslint-disable @typescript-eslint/naming-convention */\n  version: number;\n  sources: string[];\n  mappings: string;\n\n  file?: string;\n  sourceRoot?: string;\n  sourcesContent?: Array<string|null>;\n\n  names?: string[];\n  ignoreList?: number[];\n  scopes?: string;\n  debugId?: string;\n  x_google_linecount?: number;\n  x_google_ignoreList?: number[];\n  x_com_bloomberg_sourcesFunctionMappings?: string[];\n  /* eslint-enable @typescript-eslint/naming-convention */\n}\n\n/**\n * Type of JSON objects that classify as valid sourcemaps per version 3 of the specification.\n *\n * We support both possible formats, the traditional source map object (represented by the {@link SourceMapV3Object} type),\n * as well as the index map format, which consists of a sequence of sections that each hold source maps objects themselves\n * or URLs to external source map files.\n *\n * @see {@link SourceMapV3Object}\n * @see {@link https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k Source Map Revision 3 Proposal}\n */\nexport type SourceMapV3 = SourceMapV3Object|{\n  // clang-format off\n  version: number,\n  sections: Array<{\n    offset: {line: number, column: number},\n    map: SourceMapV3Object,\n  } | {\n    offset: {line: number, column: number},\n    url: string,\n  }>,\n  file?: string,\n  // clang-format on\n};\n\n/**\n * Parses the {@link content} as JSON, ignoring BOM markers in the beginning, and\n * also handling the CORB bypass prefix correctly.\n *\n * @param content the string representation of a sourcemap.\n * @returns the {@link SourceMapV3} representation of the {@link content}.\n */\nexport function parseSourceMap(content: string): SourceMapV3 {\n  if (content.startsWith(')]}')) {\n    content = content.substring(content.indexOf('\\n'));\n  }\n  if (content.charCodeAt(0) === 0xFEFF) {\n    // Strip BOM at the beginning before parsing the JSON.\n    content = content.slice(1);\n  }\n  return JSON.parse(content) as SourceMapV3;\n}\n\nexport type DebugId = Platform.Brand.Brand<string, 'DebugId'>;\n\nexport class SourceMapEntry {\n  readonly lineNumber: number;\n  readonly columnNumber: number;\n  readonly sourceIndex?: number;\n  readonly sourceURL: Platform.DevToolsPath.UrlString|undefined;\n  readonly sourceLineNumber: number;\n  readonly sourceColumnNumber: number;\n  readonly name: string|undefined;\n\n  constructor(\n      lineNumber: number, columnNumber: number, sourceIndex?: number, sourceURL?: Platform.DevToolsPath.UrlString,\n      sourceLineNumber?: number, sourceColumnNumber?: number, name?: string) {\n    this.lineNumber = lineNumber;\n    this.columnNumber = columnNumber;\n    this.sourceIndex = sourceIndex;\n    this.sourceURL = sourceURL;\n    this.sourceLineNumber = (sourceLineNumber as number);\n    this.sourceColumnNumber = (sourceColumnNumber as number);\n    this.name = name;\n  }\n\n  static compare(entry1: SourceMapEntry, entry2: SourceMapEntry): number {\n    if (entry1.lineNumber !== entry2.lineNumber) {\n      return entry1.lineNumber - entry2.lineNumber;\n    }\n    return entry1.columnNumber - entry2.columnNumber;\n  }\n}\n\ninterface SourceInfo {\n  sourceURL: Platform.DevToolsPath.UrlString;\n  content: string|null;\n  ignoreListHint: boolean;\n  reverseMappings: number[]|null;\n}\n\nexport class SourceMap {\n  static retainRawSourceMaps = false;\n\n  #json: SourceMapV3|null;\n  readonly #compiledURL: Platform.DevToolsPath.UrlString;\n  readonly #sourceMappingURL: Platform.DevToolsPath.UrlString;\n  readonly #baseURL: Platform.DevToolsPath.UrlString;\n  #mappings: SourceMapEntry[]|null = null;\n\n  readonly #sourceInfos: SourceInfo[] = [];\n  readonly #sourceInfoByURL = new Map<Platform.DevToolsPath.UrlString, SourceInfo>();\n\n  readonly #script?: Script;\n  #scopesInfo: SourceMapScopesInfo|null = null;\n\n  readonly #debugId?: DebugId;\n\n  scopesFallbackPromiseForTest?: Promise<unknown>;\n\n  /**\n   * Implements Source Map V3 model. See https://github.com/google/closure-compiler/wiki/Source-Maps\n   * for format description.\n   */\n  constructor(\n      compiledURL: Platform.DevToolsPath.UrlString, sourceMappingURL: Platform.DevToolsPath.UrlString,\n      payload: SourceMapV3, script?: Script) {\n    this.#json = payload;\n    this.#script = script;\n    this.#compiledURL = compiledURL;\n    this.#sourceMappingURL = sourceMappingURL;\n    this.#baseURL = (Common.ParsedURL.schemeIs(sourceMappingURL, 'data:')) ? compiledURL : sourceMappingURL;\n    this.#debugId = 'debugId' in payload ? (payload.debugId as DebugId | undefined) : undefined;\n\n    if ('sections' in this.#json) {\n      if (this.#json.sections.find(section => 'url' in section)) {\n        Common.Console.Console.instance().warn(\n            `SourceMap \"${sourceMappingURL}\" contains unsupported \"URL\" field in one of its sections.`);\n      }\n    }\n    this.eachSection(this.parseSources.bind(this));\n  }\n\n  json(): SourceMapV3|null {\n    return this.#json;\n  }\n\n  augmentWithScopes(scriptUrl: Platform.DevToolsPath.UrlString, ranges: NamedFunctionRange[]): void {\n    this.#ensureSourceMapProcessed();\n    if (this.#json && this.#json.version > 3) {\n      throw new Error('Only support augmenting source maps up to version 3.');\n    }\n    // Ensure scriptUrl is associated with sourceMap sources\n    const sourceIdx = this.#sourceIndex(scriptUrl);\n    if (sourceIdx >= 0) {\n      if (!this.#scopesInfo) {\n        // First time seeing this sourcemap, create an new empty scopesInfo object\n        this.#scopesInfo = new SourceMapScopesInfo(this, {scopes: [], ranges: []});\n      }\n      if (!this.#scopesInfo.hasOriginalScopes(sourceIdx)) {\n        const originalScopes = buildOriginalScopes(ranges);\n        this.#scopesInfo.addOriginalScopesAtIndex(sourceIdx, originalScopes);\n      }\n    } else {\n      throw new Error(`Could not find sourceURL ${scriptUrl} in sourceMap`);\n    }\n  }\n\n  #sourceIndex(sourceURL: Platform.DevToolsPath.UrlString): number {\n    return this.#sourceInfos.findIndex(info => info.sourceURL === sourceURL);\n  }\n\n  compiledURL(): Platform.DevToolsPath.UrlString {\n    return this.#compiledURL;\n  }\n\n  url(): Platform.DevToolsPath.UrlString {\n    return this.#sourceMappingURL;\n  }\n\n  debugId(): DebugId|null {\n    return this.#debugId ?? null;\n  }\n\n  sourceURLForSourceIndex(index: number): Platform.DevToolsPath.UrlString|undefined {\n    return this.#sourceInfos[index]?.sourceURL;\n  }\n\n  sourceURLs(): Platform.DevToolsPath.UrlString[] {\n    return [...this.#sourceInfoByURL.keys()];\n  }\n\n  embeddedContentByURL(sourceURL: Platform.DevToolsPath.UrlString): string|null {\n    const entry = this.#sourceInfoByURL.get(sourceURL);\n    if (!entry) {\n      return null;\n    }\n    return entry.content;\n  }\n\n  hasScopeInfo(): boolean {\n    this.#ensureSourceMapProcessed();\n    return this.#scopesInfo !== null && !this.#scopesInfo.isEmpty();\n  }\n\n  findEntry(lineNumber: number, columnNumber: number, inlineFrameIndex?: number): SourceMapEntry|null {\n    this.#ensureSourceMapProcessed();\n    if (inlineFrameIndex && this.#scopesInfo !== null) {\n      // For inlineFrameIndex != 0 we use the callsite info for the corresponding inlining site.\n      // Note that the callsite for \"inlineFrameIndex\" is actually in the previous frame.\n      const {inlinedFunctions} = this.#scopesInfo.findInlinedFunctions(lineNumber, columnNumber);\n      const {callsite} = inlinedFunctions[inlineFrameIndex - 1];\n      if (!callsite) {\n        console.error('Malformed source map. Expected to have a callsite info for index', inlineFrameIndex);\n        return null;\n      }\n      return {\n        lineNumber,\n        columnNumber,\n        sourceIndex: callsite.sourceIndex,\n        sourceURL: this.sourceURLs()[callsite.sourceIndex],\n        sourceLineNumber: callsite.line,\n        sourceColumnNumber: callsite.column,\n        name: undefined,\n      };\n    }\n    const mappings = this.mappings();\n    const index = Platform.ArrayUtilities.upperBound(\n        mappings, undefined, (_, entry) => lineNumber - entry.lineNumber || columnNumber - entry.columnNumber);\n    return index ? mappings[index - 1] : null;\n  }\n\n  findEntryRanges(lineNumber: number, columnNumber: number): {\n    range: TextUtils.TextRange.TextRange,\n    sourceRange: TextUtils.TextRange.TextRange,\n    sourceURL: Platform.DevToolsPath.UrlString,\n  }|null {\n    const mappings = this.mappings();\n    const endIndex = Platform.ArrayUtilities.upperBound(\n        mappings, undefined, (_, entry) => lineNumber - entry.lineNumber || columnNumber - entry.columnNumber);\n    if (!endIndex) {\n      // If the line and column are preceding all the entries, then there is nothing to map.\n      return null;\n    }\n    // startIndex must be within mappings range because endIndex must be not falsy\n    const startIndex = endIndex - 1;\n    const sourceURL = mappings[startIndex].sourceURL;\n    if (!sourceURL) {\n      return null;\n    }\n\n    // Let us compute the range that contains the source position in the compiled code.\n    const endLine = endIndex < mappings.length ? mappings[endIndex].lineNumber : 2 ** 31 - 1;\n    const endColumn = endIndex < mappings.length ? mappings[endIndex].columnNumber : 2 ** 31 - 1;\n    const range = new TextUtils.TextRange.TextRange(\n        mappings[startIndex].lineNumber, mappings[startIndex].columnNumber, endLine, endColumn);\n\n    // Now try to find the corresponding token in the original code.\n    const reverseMappings = this.reversedMappings(sourceURL);\n    const startSourceLine = mappings[startIndex].sourceLineNumber;\n    const startSourceColumn = mappings[startIndex].sourceColumnNumber;\n    const endReverseIndex = Platform.ArrayUtilities.upperBound(\n        reverseMappings, undefined,\n        (_, i) => startSourceLine - mappings[i].sourceLineNumber || startSourceColumn - mappings[i].sourceColumnNumber);\n    if (!endReverseIndex) {\n      return null;\n    }\n    const endSourceLine = endReverseIndex < reverseMappings.length ?\n        mappings[reverseMappings[endReverseIndex]].sourceLineNumber :\n        2 ** 31 - 1;\n    const endSourceColumn = endReverseIndex < reverseMappings.length ?\n        mappings[reverseMappings[endReverseIndex]].sourceColumnNumber :\n        2 ** 31 - 1;\n\n    const sourceRange =\n        new TextUtils.TextRange.TextRange(startSourceLine, startSourceColumn, endSourceLine, endSourceColumn);\n    return {range, sourceRange, sourceURL};\n  }\n\n  sourceLineMapping(sourceURL: Platform.DevToolsPath.UrlString, lineNumber: number, columnNumber: number):\n      SourceMapEntry|null {\n    const mappings = this.mappings();\n    const reverseMappings = this.reversedMappings(sourceURL);\n    const first = Platform.ArrayUtilities.lowerBound(reverseMappings, lineNumber, lineComparator);\n    const last = Platform.ArrayUtilities.upperBound(reverseMappings, lineNumber, lineComparator);\n    if (first >= reverseMappings.length || mappings[reverseMappings[first]].sourceLineNumber !== lineNumber) {\n      return null;\n    }\n    const columnMappings = reverseMappings.slice(first, last);\n    if (!columnMappings.length) {\n      return null;\n    }\n    const index = Platform.ArrayUtilities.lowerBound(\n        columnMappings, columnNumber, (columnNumber, i) => columnNumber - mappings[i].sourceColumnNumber);\n    return index >= columnMappings.length ? mappings[columnMappings[columnMappings.length - 1]] :\n                                            mappings[columnMappings[index]];\n\n    function lineComparator(lineNumber: number, i: number): number {\n      return lineNumber - mappings[i].sourceLineNumber;\n    }\n  }\n\n  private findReverseIndices(sourceURL: Platform.DevToolsPath.UrlString, lineNumber: number, columnNumber: number):\n      number[] {\n    const mappings = this.mappings();\n    const reverseMappings = this.reversedMappings(sourceURL);\n    const endIndex = Platform.ArrayUtilities.upperBound(\n        reverseMappings, undefined,\n        (_, i) => lineNumber - mappings[i].sourceLineNumber || columnNumber - mappings[i].sourceColumnNumber);\n    let startIndex = endIndex;\n    while (startIndex > 0 &&\n           mappings[reverseMappings[startIndex - 1]].sourceLineNumber ===\n               mappings[reverseMappings[endIndex - 1]].sourceLineNumber &&\n           mappings[reverseMappings[startIndex - 1]].sourceColumnNumber ===\n               mappings[reverseMappings[endIndex - 1]].sourceColumnNumber) {\n      --startIndex;\n    }\n\n    return reverseMappings.slice(startIndex, endIndex);\n  }\n\n  findReverseEntries(sourceURL: Platform.DevToolsPath.UrlString, lineNumber: number, columnNumber: number):\n      SourceMapEntry[] {\n    const mappings = this.mappings();\n    return this.findReverseIndices(sourceURL, lineNumber, columnNumber).map(i => mappings[i]);\n  }\n\n  findReverseRanges(sourceURL: Platform.DevToolsPath.UrlString, lineNumber: number, columnNumber: number):\n      TextUtils.TextRange.TextRange[] {\n    const mappings = this.mappings();\n    const indices = this.findReverseIndices(sourceURL, lineNumber, columnNumber);\n    const ranges: TextUtils.TextRange.TextRange[] = [];\n\n    for (let i = 0; i < indices.length; ++i) {\n      const startIndex = indices[i];\n\n      // Merge adjacent ranges.\n      let endIndex = startIndex + 1;\n      while (i + 1 < indices.length && endIndex === indices[i + 1]) {\n        ++endIndex;\n        ++i;\n      }\n\n      // Source maps don't contain end positions for entries, but each entry is assumed to\n      // span until the following entry. This doesn't work however in case of the last\n      // entry, where there's no following entry. We also don't know the number of lines\n      // and columns in the original source code (which might not be available at all), so\n      // for that case we store the maximum signed 32-bit integer, which is definitely going\n      // to be larger than any script we can process and can safely be serialized as part of\n      // the skip list we send to V8 with `Debugger.stepOver` (http://crbug.com/1305956).\n      const startLine = mappings[startIndex].lineNumber;\n      const startColumn = mappings[startIndex].columnNumber;\n      const endLine = endIndex < mappings.length ? mappings[endIndex].lineNumber : 2 ** 31 - 1;\n      const endColumn = endIndex < mappings.length ? mappings[endIndex].columnNumber : 2 ** 31 - 1;\n      ranges.push(new TextUtils.TextRange.TextRange(startLine, startColumn, endLine, endColumn));\n    }\n\n    return ranges;\n  }\n\n  mappings(): SourceMapEntry[] {\n    this.#ensureSourceMapProcessed();\n    return this.#mappings ?? [];\n  }\n\n  /**\n   * If the source map does not contain scope information by itself (e.g. \"scopes proposal\"\n   * or \"pasta\" scopes), then we'll use this getter to calculate basic function name information from\n   * the AST and mappings.\n   */\n  async #buildScopesFallback(): Promise<SourceMapScopesInfo|null> {\n    const scopeTreeAndText = this.#script ? await scopeTreeForScript(this.#script) : null;\n    if (!scopeTreeAndText) {\n      return null;\n    }\n\n    const {scopeTree, text} = scopeTreeAndText;\n    return SourceMapScopesInfo.createFromAst(this, scopeTree, text);\n  }\n\n  private reversedMappings(sourceURL: Platform.DevToolsPath.UrlString): number[] {\n    this.#ensureSourceMapProcessed();\n    return this.#sourceInfoByURL.get(sourceURL)?.reverseMappings ?? [];\n  }\n\n  #ensureSourceMapProcessed(): void {\n    if (this.#mappings === null) {\n      this.#mappings = [];\n      try {\n        this.eachSection(this.parseMap.bind(this));\n        if (!this.hasScopeInfo()) {\n          this.scopesFallbackPromiseForTest = this.#buildScopesFallback().then(info => {\n            this.#scopesInfo = info;\n          });\n        }\n      } catch (e) {\n        console.error('Failed to parse source map', e);\n        this.#mappings = [];\n      }\n\n      // As per spec, mappings are not necessarily sorted.\n      this.mappings().sort(SourceMapEntry.compare);\n\n      this.#computeReverseMappings(this.#mappings);\n    }\n\n    if (!SourceMap.retainRawSourceMaps) {\n      this.#json = null;\n    }\n  }\n\n  #computeReverseMappings(mappings: SourceMapEntry[]): void {\n    const reverseMappingsPerUrl = new Map<Platform.DevToolsPath.UrlString, number[]>();\n    for (let i = 0; i < mappings.length; i++) {\n      const entryUrl = mappings[i]?.sourceURL;\n      if (!entryUrl) {\n        continue;\n      }\n      let reverseMap = reverseMappingsPerUrl.get(entryUrl);\n      if (!reverseMap) {\n        reverseMap = [];\n        reverseMappingsPerUrl.set(entryUrl, reverseMap);\n      }\n      reverseMap.push(i);\n    }\n\n    for (const [url, reverseMap] of reverseMappingsPerUrl.entries()) {\n      const info = this.#sourceInfoByURL.get(url);\n      if (!info) {\n        continue;\n      }\n      reverseMap.sort(sourceMappingComparator);\n      info.reverseMappings = reverseMap;\n    }\n\n    function sourceMappingComparator(indexA: number, indexB: number): number {\n      const a = mappings[indexA];\n      const b = mappings[indexB];\n      return a.sourceLineNumber - b.sourceLineNumber || a.sourceColumnNumber - b.sourceColumnNumber ||\n          a.lineNumber - b.lineNumber || a.columnNumber - b.columnNumber;\n    }\n  }\n\n  private eachSection(callback: (arg0: SourceMapV3Object, arg1: number, arg2: number, arg3: number) => void): void {\n    if (!this.#json) {\n      return;\n    }\n    if ('sections' in this.#json) {\n      let sourcesIndex = 0;\n      for (const section of this.#json.sections) {\n        if ('map' in section) {\n          callback(section.map, sourcesIndex, section.offset.line, section.offset.column);\n          sourcesIndex += section.map.sources.length;\n        }\n      }\n    } else {\n      callback(this.#json, 0, 0, 0);\n    }\n  }\n\n  private parseSources(sourceMap: SourceMapV3Object): void {\n    const sourceRoot = sourceMap.sourceRoot ?? '';\n    const ignoreList = new Set(sourceMap.ignoreList ?? sourceMap.x_google_ignoreList);\n    for (let i = 0; i < sourceMap.sources.length; ++i) {\n      let href = sourceMap.sources[i];\n      // The source map v3 proposal says to prepend the sourceRoot to the source URL\n      // and if the resulting URL is not absolute, then resolve the source URL against\n      // the source map URL. Prepending the sourceRoot (if one exists) is not likely to\n      // be meaningful or useful if the source URL is already absolute though. In this\n      // case, use the source URL as is without prepending the sourceRoot.\n      if (Common.ParsedURL.ParsedURL.isRelativeURL(href)) {\n        if (sourceRoot && !sourceRoot.endsWith('/') && href && !href.startsWith('/')) {\n          href = sourceRoot.concat('/', href);\n        } else {\n          href = sourceRoot.concat(href);\n        }\n      }\n      const url =\n          Common.ParsedURL.ParsedURL.completeURL(this.#baseURL, href) || (href as Platform.DevToolsPath.UrlString);\n      const source = sourceMap.sourcesContent?.[i];\n      const sourceInfo: SourceInfo = {\n        sourceURL: url,\n        content: source ?? null,\n        ignoreListHint: ignoreList.has(i),\n        reverseMappings: null,\n      };\n      this.#sourceInfos.push(sourceInfo);\n      if (!this.#sourceInfoByURL.has(url)) {\n        this.#sourceInfoByURL.set(url, sourceInfo);\n      }\n    }\n  }\n\n  private parseMap(map: SourceMapV3Object, baseSourceIndex: number, baseLineNumber: number, baseColumnNumber: number):\n      void {\n    let sourceIndex = baseSourceIndex;\n    let lineNumber = baseLineNumber;\n    let columnNumber = baseColumnNumber;\n    let sourceLineNumber = 0;\n    let sourceColumnNumber = 0;\n    let nameIndex = 0;\n    const names = map.names ?? [];\n    const tokenIter = new TokenIterator(map.mappings);\n    let sourceURL: Platform.DevToolsPath.UrlString|undefined = this.#sourceInfos[sourceIndex]?.sourceURL;\n\n    while (true) {\n      if (tokenIter.peek() === ',') {\n        tokenIter.next();\n      } else {\n        while (tokenIter.peek() === ';') {\n          lineNumber += 1;\n          columnNumber = 0;\n          tokenIter.next();\n        }\n        if (!tokenIter.hasNext()) {\n          break;\n        }\n      }\n\n      columnNumber += tokenIter.nextVLQ();\n      if (!tokenIter.hasNext() || this.isSeparator(tokenIter.peek())) {\n        this.mappings().push(new SourceMapEntry(lineNumber, columnNumber));\n        continue;\n      }\n\n      const sourceIndexDelta = tokenIter.nextVLQ();\n      if (sourceIndexDelta) {\n        sourceIndex += sourceIndexDelta;\n        sourceURL = this.#sourceInfos[sourceIndex]?.sourceURL;\n      }\n      sourceLineNumber += tokenIter.nextVLQ();\n      sourceColumnNumber += tokenIter.nextVLQ();\n\n      if (!tokenIter.hasNext() || this.isSeparator(tokenIter.peek())) {\n        this.mappings().push(\n            new SourceMapEntry(lineNumber, columnNumber, sourceIndex, sourceURL, sourceLineNumber, sourceColumnNumber));\n        continue;\n      }\n\n      nameIndex += tokenIter.nextVLQ();\n      this.mappings().push(new SourceMapEntry(\n          lineNumber, columnNumber, sourceIndex, sourceURL, sourceLineNumber, sourceColumnNumber, names[nameIndex]));\n    }\n\n    if (Root.Runtime.experiments.isEnabled(Root.Runtime.ExperimentName.USE_SOURCE_MAP_SCOPES)) {\n      if (!this.#scopesInfo) {\n        this.#scopesInfo = new SourceMapScopesInfo(this, {scopes: [], ranges: []});\n      }\n      if (map.scopes) {\n        const {scopes, ranges} = ScopesCodec.decode(\n            map as ScopesCodec.SourceMapJson,\n            {mode: ScopesCodec.DecodeMode.LAX, generatedOffset: {line: baseLineNumber, column: baseColumnNumber}});\n        this.#scopesInfo.addOriginalScopes(scopes);\n        this.#scopesInfo.addGeneratedRanges(ranges);\n      } else if (map.x_com_bloomberg_sourcesFunctionMappings) {\n        const originalScopes = this.parseBloombergScopes(map);\n        this.#scopesInfo.addOriginalScopes(originalScopes);\n      } else {\n        // Keep the OriginalScope[] tree array consistent with sources.\n        this.#scopesInfo.addOriginalScopes(new Array(map.sources.length).fill(null));\n      }\n    }\n  }\n\n  private parseBloombergScopes(map: SourceMapV3Object): Array<ScopesCodec.OriginalScope|null> {\n    const scopeList = map.x_com_bloomberg_sourcesFunctionMappings;\n    if (!scopeList) {\n      throw new Error('Cant decode pasta scopes without x_com_bloomberg_sourcesFunctionMappings field');\n    } else if (scopeList.length !== map.sources.length) {\n      throw new Error(`x_com_bloomberg_sourcesFunctionMappings must have ${map.sources.length} scope trees`);\n    }\n    const names = map.names ?? [];\n\n    return scopeList.map(rawScopes => {\n      if (!rawScopes) {\n        return null;\n      }\n      const ranges = decodePastaRanges(rawScopes, names);\n      return buildOriginalScopes(ranges);\n    });\n  }\n\n  private isSeparator(char: string): boolean {\n    return char === ',' || char === ';';\n  }\n\n  /**\n   * Finds all the reverse mappings that intersect with the given `textRange` within the\n   * source entity identified by the `url`. If the `url` does not have any reverse mappings\n   * within this source map, an empty array is returned.\n   *\n   * @param url the URL of the source entity to query.\n   * @param textRange the range of text within the entity to check, considered `[start,end[`.\n   * @returns the list of ranges in the generated file that map to locations overlapping the\n   *          {@link textRange} in the source file identified by the {@link url}, or `[]`\n   *          if the {@link url} does not identify an entity in this source map.\n   */\n  reverseMapTextRanges(url: Platform.DevToolsPath.UrlString, textRange: TextUtils.TextRange.TextRange):\n      TextUtils.TextRange.TextRange[] {\n    const reverseMappings = this.reversedMappings(url);\n    const mappings = this.mappings();\n    if (reverseMappings.length === 0) {\n      return [];\n    }\n\n    // Determine the first reverse mapping that contains the starting point of the `textRange`.\n    let startReverseIndex =\n        Platform.ArrayUtilities.lowerBound(reverseMappings, textRange, ({startLine, startColumn}, index) => {\n          const {sourceLineNumber, sourceColumnNumber} = mappings[index];\n          return startLine - sourceLineNumber || startColumn - sourceColumnNumber;\n        });\n\n    // Check if the current mapping does not start on the exact start of the `textRange`, and if\n    // so we know that a previous mapping entry (if any) would also overlap. If we reach the end\n    // of the reverse mappings table, we just take the last entry and report that.\n    while (startReverseIndex === reverseMappings.length ||\n           startReverseIndex > 0 &&\n               (mappings[reverseMappings[startReverseIndex]].sourceLineNumber > textRange.startLine ||\n                mappings[reverseMappings[startReverseIndex]].sourceColumnNumber > textRange.startColumn)) {\n      startReverseIndex--;\n    }\n\n    // Determine the last reverse mapping that contains the end point of the `textRange`.\n    let endReverseIndex = startReverseIndex + 1;\n    for (; endReverseIndex < reverseMappings.length; ++endReverseIndex) {\n      const {sourceLineNumber, sourceColumnNumber} = mappings[reverseMappings[endReverseIndex]];\n      if (sourceLineNumber < textRange.endLine ||\n          (sourceLineNumber === textRange.endLine && sourceColumnNumber < textRange.endColumn)) {\n        continue;\n      }\n      break;\n    }\n\n    // Create the ranges...\n    const ranges = [];\n    for (let reverseIndex = startReverseIndex; reverseIndex < endReverseIndex; ++reverseIndex) {\n      const startIndex = reverseMappings[reverseIndex], endIndex = startIndex + 1;\n      const range = TextUtils.TextRange.TextRange.createUnboundedFromLocation(\n          mappings[startIndex].lineNumber, mappings[startIndex].columnNumber);\n      if (endIndex < mappings.length) {\n        range.endLine = mappings[endIndex].lineNumber;\n        range.endColumn = mappings[endIndex].columnNumber;\n      }\n      ranges.push(range);\n    }\n\n    // ...sort them...\n    ranges.sort(TextUtils.TextRange.TextRange.comparator);\n\n    // ...and ensure they are maximally merged.\n    let j = 0;\n    for (let i = 1; i < ranges.length; ++i) {\n      if (ranges[j].immediatelyPrecedes(ranges[i])) {\n        ranges[j].endLine = ranges[i].endLine;\n        ranges[j].endColumn = ranges[i].endColumn;\n      } else {\n        ranges[++j] = ranges[i];\n      }\n    }\n    ranges.length = j + 1;\n\n    return ranges;\n  }\n\n  mapsOrigin(): boolean {\n    const mappings = this.mappings();\n    if (mappings.length > 0) {\n      const firstEntry = mappings[0];\n      return firstEntry?.lineNumber === 0 || firstEntry.columnNumber === 0;\n    }\n    return false;\n  }\n\n  hasIgnoreListHint(sourceURL: Platform.DevToolsPath.UrlString): boolean {\n    return this.#sourceInfoByURL.get(sourceURL)?.ignoreListHint ?? false;\n  }\n\n  /**\n   * Returns a list of ranges in the generated script for original sources that\n   * match a predicate. Each range is a [begin, end) pair, meaning that code at\n   * the beginning location, up to but not including the end location, matches\n   * the predicate.\n   */\n  findRanges(predicate: (sourceURL: Platform.DevToolsPath.UrlString) => boolean, options?: {isStartMatching: boolean}):\n      TextUtils.TextRange.TextRange[] {\n    const mappings = this.mappings();\n    const ranges = [];\n\n    if (!mappings.length) {\n      return [];\n    }\n\n    let current: TextUtils.TextRange.TextRange|null = null;\n\n    // If the first mapping isn't at the beginning of the original source, it's\n    // up to the caller to decide if it should be considered matching the\n    // predicate or not. By default, it's not.\n    if ((mappings[0].lineNumber !== 0 || mappings[0].columnNumber !== 0) && options?.isStartMatching) {\n      current = TextUtils.TextRange.TextRange.createUnboundedFromLocation(0, 0);\n      ranges.push(current);\n    }\n\n    for (const {sourceURL, lineNumber, columnNumber} of mappings) {\n      const ignoreListHint = sourceURL && predicate(sourceURL);\n\n      if (!current && ignoreListHint) {\n        current = TextUtils.TextRange.TextRange.createUnboundedFromLocation(lineNumber, columnNumber);\n        ranges.push(current);\n        continue;\n      }\n      if (current && !ignoreListHint) {\n        current.endLine = lineNumber;\n        current.endColumn = columnNumber;\n        current = null;\n      }\n    }\n\n    return ranges;\n  }\n\n  /**\n   * Determines whether this and the {@link other} `SourceMap` agree on content and ignore-list hint\n   * with respect to the {@link sourceURL}.\n   *\n   * @param sourceURL the URL to test for (might not be provided by either of the sourcemaps).\n   * @param other the other `SourceMap` to check.\n   * @returns `true` if both this and the {@link other} `SourceMap` either both have the ignore-list\n   *          hint for {@link sourceURL} or neither, and if both of them either provide the same\n   *          content for the {@link sourceURL} inline or both provide no `sourcesContent` entry\n   *          for it.\n   */\n  compatibleForURL(sourceURL: Platform.DevToolsPath.UrlString, other: SourceMap): boolean {\n    return this.embeddedContentByURL(sourceURL) === other.embeddedContentByURL(sourceURL) &&\n        this.hasIgnoreListHint(sourceURL) === other.hasIgnoreListHint(sourceURL);\n  }\n\n  expandCallFrame(frame: CallFrame): CallFrame[] {\n    this.#ensureSourceMapProcessed();\n    if (this.#scopesInfo === null) {\n      return [frame];\n    }\n\n    return this.#scopesInfo.expandCallFrame(frame);\n  }\n\n  resolveScopeChain(frame: CallFrame): ScopeChainEntry[]|null {\n    this.#ensureSourceMapProcessed();\n    if (this.#scopesInfo === null) {\n      return null;\n    }\n\n    return this.#scopesInfo.resolveMappedScopeChain(frame);\n  }\n\n  findOriginalFunctionName(position: ScopesCodec.Position): string|null {\n    this.#ensureSourceMapProcessed();\n    return this.#scopesInfo?.findOriginalFunctionName(position) ?? null;\n  }\n\n  isOutlinedFrame(generatedLine: number, generatedColumn: number): boolean {\n    this.#ensureSourceMapProcessed();\n    return this.#scopesInfo?.isOutlinedFrame(generatedLine, generatedColumn) ?? false;\n  }\n\n  hasInlinedFrames(generatedLine: number, generatedColumn: number): boolean {\n    this.#ensureSourceMapProcessed();\n    return this.#scopesInfo?.hasInlinedFrames(generatedLine, generatedColumn) ?? false;\n  }\n\n  translateCallSite(generatedLine: number, generatedColumn: number): TranslatedFrame[] {\n    this.#ensureSourceMapProcessed();\n    return this.#scopesInfo?.translateCallSite(generatedLine, generatedColumn) ?? [];\n  }\n}\n\nconst VLQ_BASE_SHIFT = 5;\nconst VLQ_BASE_MASK = (1 << 5) - 1;\nconst VLQ_CONTINUATION_MASK = 1 << 5;\n\nexport class TokenIterator {\n  readonly #string: string;\n  #position: number;\n\n  constructor(string: string) {\n    this.#string = string;\n    this.#position = 0;\n  }\n\n  next(): string {\n    return this.#string.charAt(this.#position++);\n  }\n\n  /** Returns the unicode value of the next character and advances the iterator  */\n  nextCharCode(): number {\n    return this.#string.charCodeAt(this.#position++);\n  }\n\n  peek(): string {\n    return this.#string.charAt(this.#position);\n  }\n\n  hasNext(): boolean {\n    return this.#position < this.#string.length;\n  }\n\n  nextVLQ(): number {\n    // Read unsigned value.\n    let result = 0;\n    let shift = 0;\n    let digit: number = VLQ_CONTINUATION_MASK;\n    while (digit & VLQ_CONTINUATION_MASK) {\n      if (!this.hasNext()) {\n        throw new Error('Unexpected end of input while decodling VLQ number!');\n      }\n      const charCode = this.nextCharCode();\n      digit = Common.Base64.BASE64_CODES[charCode];\n      if (charCode !== 65 /* 'A' */ && digit === 0) {\n        throw new Error(`Unexpected char '${String.fromCharCode(charCode)}' encountered while decoding`);\n      }\n      result += (digit & VLQ_BASE_MASK) << shift;\n      shift += VLQ_BASE_SHIFT;\n    }\n\n    // Fix the sign.\n    const negative = result & 1;\n    result >>= 1;\n    return negative ? -result : result;\n  }\n\n  /**\n   * @returns the next VLQ number without iterating further. Or returns null if\n   * the iterator is at the end or it's not a valid number.\n   */\n  peekVLQ(): null|number {\n    const pos = this.#position;\n    try {\n      return this.nextVLQ();\n    } catch {\n      return null;\n    } finally {\n      this.#position = pos;  // Reset the iterator.\n    }\n  }\n}\n"]}