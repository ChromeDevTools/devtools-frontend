{"version":3,"file":"TargetManager.js","sourceRoot":"","sources":["../../../../../../front_end/core/sdk/TargetManager.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2021 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Protocol from '../../generated/protocol.js';\nimport * as Common from '../common/common.js';\nimport * as Host from '../host/host.js';\nimport * as Platform from '../platform/platform.js';\nimport {assertNotNullOrUndefined} from '../platform/platform.js';\nimport type * as ProtocolClient from '../protocol_client/protocol_client.js';\nimport * as Root from '../root/root.js';\n\nimport {SDKModel} from './SDKModel.js';\nimport {Target, Type as TargetType} from './Target.js';\n\nlet targetManagerInstance: TargetManager|undefined;\ntype ModelClass<T = SDKModel> = new (arg1: Target) => T;\n\nexport class TargetManager extends Common.ObjectWrapper.ObjectWrapper<EventTypes> {\n  #targets: Set<Target>;\n  readonly #observers: Set<Observer>;\n  /* eslint-disable @typescript-eslint/no-explicit-any */\n  #modelListeners: Platform.MapUtilities.Multimap<string|symbol|number, {\n    modelClass: ModelClass,\n    thisObject: Object|undefined,\n    listener: Common.EventTarget.EventListener<any, any>,\n    wrappedListener: Common.EventTarget.EventListener<any, any>,\n  }>;\n  readonly #modelObservers: Platform.MapUtilities.Multimap<ModelClass, SDKModelObserver<any>>;\n  #scopedObservers: WeakSet<Observer|SDKModelObserver<any>>;\n  /* eslint-enable @typescript-eslint/no-explicit-any */\n  #isSuspended: boolean;\n  #browserTarget: Target|null;\n  #scopeTarget: Target|null;\n  #defaultScopeSet: boolean;\n  readonly #scopeChangeListeners: Set<() => void>;\n\n  private constructor() {\n    super();\n    this.#targets = new Set();\n    this.#observers = new Set();\n    this.#modelListeners = new Platform.MapUtilities.Multimap();\n    this.#modelObservers = new Platform.MapUtilities.Multimap();\n    this.#isSuspended = false;\n    this.#browserTarget = null;\n    this.#scopeTarget = null;\n    this.#scopedObservers = new WeakSet();\n    this.#defaultScopeSet = false;\n    this.#scopeChangeListeners = new Set();\n  }\n\n  static instance({forceNew}: {\n    forceNew: boolean,\n  } = {forceNew: false}): TargetManager {\n    if (!targetManagerInstance || forceNew) {\n      targetManagerInstance = new TargetManager();\n    }\n\n    return targetManagerInstance;\n  }\n\n  static removeInstance(): void {\n    targetManagerInstance = undefined;\n  }\n\n  onInspectedURLChange(target: Target): void {\n    if (target !== this.#scopeTarget) {\n      return;\n    }\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.inspectedURLChanged(\n        target.inspectedURL() || Platform.DevToolsPath.EmptyUrlString);\n    this.dispatchEventToListeners(Events.INSPECTED_URL_CHANGED, target);\n  }\n\n  onNameChange(target: Target): void {\n    this.dispatchEventToListeners(Events.NAME_CHANGED, target);\n  }\n\n  async suspendAllTargets(reason?: string): Promise<void> {\n    if (this.#isSuspended) {\n      return;\n    }\n    this.#isSuspended = true;\n    this.dispatchEventToListeners(Events.SUSPEND_STATE_CHANGED);\n    const suspendPromises = Array.from(this.#targets.values(), target => target.suspend(reason));\n    await Promise.all(suspendPromises);\n  }\n\n  async resumeAllTargets(): Promise<void> {\n    if (!this.#isSuspended) {\n      return;\n    }\n    this.#isSuspended = false;\n    this.dispatchEventToListeners(Events.SUSPEND_STATE_CHANGED);\n    const resumePromises = Array.from(this.#targets.values(), target => target.resume());\n    await Promise.all(resumePromises);\n  }\n\n  allTargetsSuspended(): boolean {\n    return this.#isSuspended;\n  }\n\n  models<T extends SDKModel>(modelClass: ModelClass<T>, opts?: {scoped: boolean}): T[] {\n    const result = [];\n    for (const target of this.#targets) {\n      if (opts?.scoped && !this.isInScope(target)) {\n        continue;\n      }\n      const model = target.model(modelClass);\n      if (!model) {\n        continue;\n      }\n      result.push(model);\n    }\n    return result;\n  }\n\n  inspectedURL(): string {\n    const mainTarget = this.primaryPageTarget();\n    return mainTarget ? mainTarget.inspectedURL() : '';\n  }\n\n  observeModels<T extends SDKModel>(modelClass: ModelClass<T>, observer: SDKModelObserver<T>, opts?: {scoped: boolean}):\n      void {\n    const models = this.models(modelClass, opts);\n    this.#modelObservers.set(modelClass, observer);\n    if (opts?.scoped) {\n      this.#scopedObservers.add(observer);\n    }\n    for (const model of models) {\n      observer.modelAdded(model);\n    }\n  }\n\n  unobserveModels<T extends SDKModel>(modelClass: ModelClass<T>, observer: SDKModelObserver<T>): void {\n    this.#modelObservers.delete(modelClass, observer);\n    this.#scopedObservers.delete(observer);\n  }\n\n  modelAdded(modelClass: ModelClass, model: SDKModel, inScope: boolean): void {\n    for (const observer of this.#modelObservers.get(modelClass).values()) {\n      if (!this.#scopedObservers.has(observer) || inScope) {\n        observer.modelAdded(model);\n      }\n    }\n  }\n\n  private modelRemoved(modelClass: ModelClass, model: SDKModel, inScope: boolean): void {\n    for (const observer of this.#modelObservers.get(modelClass).values()) {\n      if (!this.#scopedObservers.has(observer) || inScope) {\n        observer.modelRemoved(model);\n      }\n    }\n  }\n\n  addModelListener<Events, T extends keyof Events>(\n      modelClass: ModelClass<SDKModel<Events>>, eventType: T, listener: Common.EventTarget.EventListener<Events, T>,\n      thisObject?: Object, opts?: {scoped: boolean}): void {\n    const wrappedListener = (event: Common.EventTarget.EventTargetEvent<Events[T], Events>): void => {\n      if (!opts?.scoped || this.isInScope(event)) {\n        listener.call(thisObject, event);\n      }\n    };\n    for (const model of this.models(modelClass)) {\n      model.addEventListener(eventType, wrappedListener);\n    }\n    this.#modelListeners.set(eventType, {modelClass, thisObject, listener, wrappedListener});\n  }\n\n  removeModelListener<Events, T extends keyof Events>(\n      modelClass: ModelClass<SDKModel<Events>>, eventType: T, listener: Common.EventTarget.EventListener<Events, T>,\n      thisObject?: Object): void {\n    if (!this.#modelListeners.has(eventType)) {\n      return;\n    }\n    let wrappedListener = null;\n    for (const info of this.#modelListeners.get(eventType)) {\n      if (info.modelClass === modelClass && info.listener === listener && info.thisObject === thisObject) {\n        wrappedListener = info.wrappedListener;\n        this.#modelListeners.delete(eventType, info);\n      }\n    }\n    if (wrappedListener) {\n      for (const model of this.models(modelClass)) {\n        model.removeEventListener(eventType, wrappedListener);\n      }\n    }\n  }\n\n  observeTargets(targetObserver: Observer, opts?: {scoped: boolean}): void {\n    if (this.#observers.has(targetObserver)) {\n      throw new Error('Observer can only be registered once');\n    }\n    if (opts?.scoped) {\n      this.#scopedObservers.add(targetObserver);\n    }\n    for (const target of this.#targets) {\n      if (!opts?.scoped || this.isInScope(target)) {\n        targetObserver.targetAdded(target);\n      }\n    }\n    this.#observers.add(targetObserver);\n  }\n\n  unobserveTargets(targetObserver: Observer): void {\n    this.#observers.delete(targetObserver);\n    this.#scopedObservers.delete(targetObserver);\n  }\n\n  createTarget(\n      id: Protocol.Target.TargetID|'main', name: string, type: TargetType, parentTarget: Target|null,\n      sessionId?: string, waitForDebuggerInPage?: boolean,\n      connection?: ProtocolClient.ConnectionTransport.ConnectionTransport,\n      targetInfo?: Protocol.Target.TargetInfo): Target {\n    const target = new Target(\n        this, id, name, type, parentTarget, sessionId || '', this.#isSuspended, connection || null, targetInfo);\n    if (waitForDebuggerInPage) {\n      void target.pageAgent().invoke_waitForDebugger();\n    }\n    target.createModels(new Set(this.#modelObservers.keysArray()));\n    this.#targets.add(target);\n\n    const inScope = this.isInScope(target);\n    // Iterate over a copy. #observers might be modified during iteration.\n    for (const observer of [...this.#observers]) {\n      if (!this.#scopedObservers.has(observer) || inScope) {\n        observer.targetAdded(target);\n      }\n    }\n\n    for (const [modelClass, model] of target.models().entries()) {\n      this.modelAdded(modelClass, model, inScope);\n    }\n\n    for (const key of this.#modelListeners.keysArray()) {\n      for (const info of this.#modelListeners.get(key)) {\n        const model = target.model(info.modelClass);\n        if (model) {\n          model.addEventListener(key, info.wrappedListener);\n        }\n      }\n    }\n\n    if ((target === target.outermostTarget() &&\n         (target.type() !== TargetType.FRAME || target === this.primaryPageTarget())) &&\n        !this.#defaultScopeSet) {\n      this.setScopeTarget(target);\n    }\n\n    return target;\n  }\n\n  removeTarget(target: Target): void {\n    if (!this.#targets.has(target)) {\n      return;\n    }\n\n    const inScope = this.isInScope(target);\n    this.#targets.delete(target);\n    for (const modelClass of target.models().keys()) {\n      const model = target.models().get(modelClass);\n      assertNotNullOrUndefined(model);\n      this.modelRemoved(modelClass, model, inScope);\n    }\n\n    // Iterate over a copy. #observers might be modified during iteration.\n    for (const observer of [...this.#observers]) {\n      if (!this.#scopedObservers.has(observer) || inScope) {\n        observer.targetRemoved(target);\n      }\n    }\n\n    for (const key of this.#modelListeners.keysArray()) {\n      for (const info of this.#modelListeners.get(key)) {\n        const model = target.model(info.modelClass);\n        if (model) {\n          model.removeEventListener(key, info.wrappedListener);\n        }\n      }\n    }\n  }\n\n  targets(): Target[] {\n    return [...this.#targets];\n  }\n\n  targetById(id: string): Target|null {\n    // TODO(dgozman): add a map #id -> #target.\n    return this.targets().find(target => target.id() === id) || null;\n  }\n\n  rootTarget(): Target|null {\n    if (this.#targets.size === 0) {\n      return null;\n    }\n    return this.#targets.values().next().value ?? null;\n  }\n\n  primaryPageTarget(): Target|null {\n    let target = this.rootTarget();\n    if (target?.type() === TargetType.TAB) {\n      target =\n          this.targets().find(\n              t => t.parentTarget() === target && t.type() === TargetType.FRAME && !t.targetInfo()?.subtype?.length) ||\n          null;\n    }\n    return target;\n  }\n\n  browserTarget(): Target|null {\n    return this.#browserTarget;\n  }\n\n  async maybeAttachInitialTarget(): Promise<boolean> {\n    if (!Boolean(Root.Runtime.Runtime.queryParam('browserConnection'))) {\n      return false;\n    }\n    if (!this.#browserTarget) {\n      this.#browserTarget = new Target(\n          this, /* #id*/ 'main', /* #name*/ 'browser', TargetType.BROWSER, /* #parentTarget*/ null,\n          /* #sessionId */ '', /* suspended*/ false, /* #connection*/ null, /* targetInfo*/ undefined);\n      this.#browserTarget.createModels(new Set(this.#modelObservers.keysArray()));\n    }\n    const targetId =\n        await Host.InspectorFrontendHost.InspectorFrontendHostInstance.initialTargetId() as Protocol.Target.TargetID;\n    // Do not await for Target.autoAttachRelated to return, as it goes throguh the renderer and we don't want to block early\n    // at front-end initialization if a renderer is stuck. The rest of #target discovery and auto-attach process should happen\n    // asynchronously upon Target.attachedToTarget.\n    void this.#browserTarget.targetAgent().invoke_autoAttachRelated({\n      targetId,\n      waitForDebuggerOnStart: true,\n    });\n    return true;\n  }\n\n  clearAllTargetsForTest(): void {\n    this.#targets.clear();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  isInScope(arg: SDKModel|Target|Common.EventTarget.EventTargetEvent<any, any>|null): boolean {\n    if (!arg) {\n      return false;\n    }\n    if (isSDKModelEvent(arg)) {\n      arg = arg.source as SDKModel;\n    }\n    if (arg instanceof SDKModel) {\n      arg = arg.target();\n    }\n    while (arg && arg !== this.#scopeTarget) {\n      arg = arg.parentTarget();\n    }\n    return Boolean(arg) && arg === this.#scopeTarget;\n  }\n\n  // Sets a root of a scope substree.\n  // TargetManager API invoked with `scoped: true` will behave as if targets\n  // outside of the scope subtree don't exist. Concretely this means that\n  // target observers, model observers and model listeners won't be invoked for targets outside of the\n  // scope tree. This method will invoke targetRemoved and modelRemoved for\n  // objects in the previous scope, as if they disappear and then will invoke\n  // targetAdded and modelAdded as if they just appeared.\n  // Note that scopeTarget could be null, which will effectively prevent scoped\n  // observes from getting any events.\n  setScopeTarget(scopeTarget: Target|null): void {\n    if (scopeTarget === this.#scopeTarget) {\n      return;\n    }\n    for (const target of this.targets()) {\n      if (!this.isInScope(target)) {\n        continue;\n      }\n      for (const modelClass of this.#modelObservers.keysArray()) {\n        const model = target.models().get(modelClass);\n        if (!model) {\n          continue;\n        }\n        for (const observer of [...this.#modelObservers.get(modelClass)].filter(o => this.#scopedObservers.has(o))) {\n          observer.modelRemoved(model);\n        }\n      }\n\n      // Iterate over a copy. #observers might be modified during iteration.\n      for (const observer of [...this.#observers].filter(o => this.#scopedObservers.has(o))) {\n        observer.targetRemoved(target);\n      }\n    }\n    this.#scopeTarget = scopeTarget;\n    for (const target of this.targets()) {\n      if (!this.isInScope(target)) {\n        continue;\n      }\n\n      for (const observer of [...this.#observers].filter(o => this.#scopedObservers.has(o))) {\n        observer.targetAdded(target);\n      }\n\n      for (const [modelClass, model] of target.models().entries()) {\n        for (const observer of [...this.#modelObservers.get(modelClass)].filter(o => this.#scopedObservers.has(o))) {\n          observer.modelAdded(model);\n        }\n      }\n    }\n    for (const scopeChangeListener of this.#scopeChangeListeners) {\n      scopeChangeListener();\n    }\n    if (scopeTarget?.inspectedURL()) {\n      this.onInspectedURLChange(scopeTarget);\n    }\n  }\n\n  addScopeChangeListener(listener: () => void): void {\n    this.#scopeChangeListeners.add(listener);\n  }\n\n  scopeTarget(): Target|null {\n    return this.#scopeTarget;\n  }\n}\n\nexport const enum Events {\n  AVAILABLE_TARGETS_CHANGED = 'AvailableTargetsChanged',\n  INSPECTED_URL_CHANGED = 'InspectedURLChanged',\n  NAME_CHANGED = 'NameChanged',\n  SUSPEND_STATE_CHANGED = 'SuspendStateChanged',\n}\n\nexport interface EventTypes {\n  [Events.AVAILABLE_TARGETS_CHANGED]: Protocol.Target.TargetInfo[];\n  [Events.INSPECTED_URL_CHANGED]: Target;\n  [Events.NAME_CHANGED]: Target;\n  [Events.SUSPEND_STATE_CHANGED]: void;\n}\n\nexport class Observer {\n  targetAdded(_target: Target): void {\n  }\n  targetRemoved(_target: Target): void {\n  }\n}\n\nexport class SDKModelObserver<T> {\n  modelAdded(_model: T): void {\n  }\n  modelRemoved(_model: T): void {\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction isSDKModelEvent(arg: Object): arg is Common.EventTarget.EventTargetEvent<any, any> {\n  return 'source' in arg && arg.source instanceof SDKModel;\n}\n"]}