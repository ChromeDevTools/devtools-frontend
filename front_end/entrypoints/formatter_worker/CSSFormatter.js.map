{"version":3,"file":"CSSFormatter.js","sourceRoot":"","sources":["../../../../../../front_end/entrypoints/formatter_worker/CSSFormatter.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2013 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Platform from '../../core/platform/platform.js';\n\nimport type {FormattedContentBuilder} from './FormattedContentBuilder.js';\nimport {createTokenizer} from './FormatterWorker.js';\n\nconst cssTrimEnd = (tokenValue: string): string => {\n  // https://drafts.csswg.org/css-syntax/#whitespace\n  const re = /(?:\\r?\\n|[\\t\\f\\r ])+$/g;\n  return tokenValue.replace(re, '');\n};\n\nexport class CSSFormatter {\n  readonly #builder: FormattedContentBuilder;\n  #toOffset!: number;\n  #fromOffset!: number;\n  #lineEndings!: number[];\n  #lastLine: number;\n  #state: {\n    eatWhitespace: (boolean|undefined),\n    seenProperty: (boolean|undefined),\n    inPropertyValue: (boolean|undefined),\n    afterClosingBrace: (boolean|undefined),\n  };\n  constructor(builder: FormattedContentBuilder) {\n    this.#builder = builder;\n    this.#lastLine = -1;\n    this.#state = {\n      eatWhitespace: undefined,\n      seenProperty: undefined,\n      inPropertyValue: undefined,\n      afterClosingBrace: undefined,\n    };\n  }\n\n  format(text: string, lineEndings: number[], fromOffset: number, toOffset: number): void {\n    this.#lineEndings = lineEndings;\n    this.#fromOffset = fromOffset;\n    this.#toOffset = toOffset;\n    this.#state = {\n      eatWhitespace: undefined,\n      seenProperty: undefined,\n      inPropertyValue: undefined,\n      afterClosingBrace: undefined,\n    };\n    this.#lastLine = -1;\n    const tokenize = createTokenizer('text/css');\n    const oldEnforce = this.#builder.setEnforceSpaceBetweenWords(false);\n    tokenize(text.substring(this.#fromOffset, this.#toOffset), this.#tokenCallback.bind(this));\n    this.#builder.setEnforceSpaceBetweenWords(oldEnforce);\n  }\n\n  #tokenCallback(token: string, type: string|null, startPosition: number): void {\n    startPosition += this.#fromOffset;\n    const startLine = Platform.ArrayUtilities.lowerBound(\n        this.#lineEndings, startPosition, Platform.ArrayUtilities.DEFAULT_COMPARATOR);\n    if (startLine !== this.#lastLine) {\n      this.#state.eatWhitespace = true;\n    }\n    if (type && (/^property/.test(type) || /^variable-2/.test(type)) && !this.#state.inPropertyValue) {\n      this.#state.seenProperty = true;\n    }\n    this.#lastLine = startLine;\n    // https://drafts.csswg.org/css-syntax/#whitespace\n    const isWhitespace = /^(?:\\r?\\n|[\\t\\f\\r ])+$/.test(token);\n    if (isWhitespace) {\n      if (!this.#state.eatWhitespace) {\n        this.#builder.addSoftSpace();\n      }\n      return;\n    }\n    this.#state.eatWhitespace = false;\n    if (token === '\\n') {\n      return;\n    }\n\n    if (token !== '}') {\n      if (this.#state.afterClosingBrace) {\n        this.#builder.addNewLine(true);\n      }\n      this.#state.afterClosingBrace = false;\n    }\n    if (token === '}') {\n      if (this.#state.inPropertyValue) {\n        this.#builder.addNewLine();\n      }\n      this.#builder.decreaseNestingLevel();\n      this.#state.afterClosingBrace = true;\n      this.#state.inPropertyValue = false;\n    } else if (token === ':' && !this.#state.inPropertyValue && this.#state.seenProperty) {\n      this.#builder.addToken(token, startPosition);\n      this.#builder.addSoftSpace();\n      this.#state.eatWhitespace = true;\n      this.#state.inPropertyValue = true;\n      this.#state.seenProperty = false;\n      return;\n    } else if (token === '{') {\n      this.#builder.addSoftSpace();\n      this.#builder.addToken(token, startPosition);\n      this.#builder.addNewLine();\n      this.#builder.increaseNestingLevel();\n      return;\n    }\n\n    this.#builder.addToken(cssTrimEnd(token), startPosition);\n\n    if (type === 'comment' && !this.#state.inPropertyValue && !this.#state.seenProperty) {\n      this.#builder.addNewLine();\n    }\n    if (token === ';' && this.#state.inPropertyValue) {\n      this.#state.inPropertyValue = false;\n      this.#builder.addNewLine();\n    } else if (token === '}') {\n      this.#builder.addNewLine();\n    }\n  }\n}\n"]}