{"version":3,"file":"ESTreeWalker.js","sourceRoot":"","sources":["../../../../../../front_end/entrypoints/formatter_worker/ESTreeWalker.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2014 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Acorn from '../../third_party/acorn/acorn.js';\n\nexport class ESTreeWalker {\n  readonly #beforeVisit: (arg0: Acorn.ESTree.Node) => unknown;\n  readonly #afterVisit: (arg0: Acorn.ESTree.Node) => unknown;\n\n  constructor(beforeVisit: (arg0: Acorn.ESTree.Node) => unknown, afterVisit: ((arg0: Acorn.ESTree.Node) => unknown)) {\n    this.#beforeVisit = beforeVisit;\n    this.#afterVisit = afterVisit;\n  }\n\n  walk(ast: Acorn.ESTree.Node): void {\n    this.#innerWalk(ast, null);\n  }\n\n  #innerWalk(node: Acorn.ESTree.Node, parent: Acorn.ESTree.Node|null): void {\n    if (!node) {\n      return;\n    }\n    node.parent = parent;\n\n    this.#beforeVisit.call(null, node);\n\n    const walkOrder = WALK_ORDER[node.type];\n    if (!walkOrder) {\n      console.error('Walk order not defined for ' + node.type);\n      return;\n    }\n\n    if (node.type === 'TemplateLiteral') {\n      const templateLiteral = (node);\n      const expressionsLength = templateLiteral.expressions.length;\n      for (let i = 0; i < expressionsLength; ++i) {\n        this.#innerWalk(templateLiteral.quasis[i], templateLiteral);\n        this.#innerWalk(templateLiteral.expressions[i], templateLiteral);\n      }\n      this.#innerWalk(templateLiteral.quasis[expressionsLength], templateLiteral);\n    } else {\n      for (let i = 0; i < walkOrder.length; ++i) {\n        // @ts-expect-error We are doing type traversal here, but the strings\n        // in _walkOrder are not mapping. Preferably, we would use the\n        // properties as defined in the types, but we can't do that yet.\n        const entity = node[walkOrder[i]];\n        if (Array.isArray(entity)) {\n          this.#walkArray((entity as Acorn.ESTree.Node[]), node);\n        } else {\n          this.#innerWalk((entity as Acorn.ESTree.Node), node);\n        }\n      }\n    }\n\n    this.#afterVisit.call(null, node);\n  }\n\n  #walkArray(nodeArray: Acorn.ESTree.Node[], parentNode: Acorn.ESTree.Node|null): void {\n    for (let i = 0; i < nodeArray.length; ++i) {\n      this.#innerWalk(nodeArray[i], parentNode);\n    }\n  }\n}\n\nconst WALK_ORDER = {\n  AwaitExpression: ['argument'],\n  ArrayExpression: ['elements'],\n  ArrayPattern: ['elements'],\n  ArrowFunctionExpression: ['params', 'body'],\n  AssignmentExpression: ['left', 'right'],\n  AssignmentPattern: ['left', 'right'],\n  BinaryExpression: ['left', 'right'],\n  BlockStatement: ['body'],\n  BreakStatement: ['label'],\n  CallExpression: ['callee', 'arguments'],\n  CatchClause: ['param', 'body'],\n  ClassBody: ['body'],\n  ClassDeclaration: ['id', 'superClass', 'body'],\n  ClassExpression: ['id', 'superClass', 'body'],\n  ChainExpression: ['expression'],\n  ConditionalExpression: ['test', 'consequent', 'alternate'],\n  ContinueStatement: ['label'],\n  DebuggerStatement: [],\n  DoWhileStatement: ['body', 'test'],\n  EmptyStatement: [],\n  ExpressionStatement: ['expression'],\n  ForInStatement: ['left', 'right', 'body'],\n  ForOfStatement: ['left', 'right', 'body'],\n  ForStatement: ['init', 'test', 'update', 'body'],\n  FunctionDeclaration: ['id', 'params', 'body'],\n  FunctionExpression: ['id', 'params', 'body'],\n  Identifier: [],\n  ImportDeclaration: ['specifiers', 'source'],\n  ImportDefaultSpecifier: ['local'],\n  ImportNamespaceSpecifier: ['local'],\n  ImportSpecifier: ['imported', 'local'],\n  ImportExpression: ['source'],\n  ExportAllDeclaration: ['source'],\n  ExportDefaultDeclaration: ['declaration'],\n  ExportNamedDeclaration: ['specifiers', 'source', 'declaration'],\n  ExportSpecifier: ['exported', 'local'],\n  IfStatement: ['test', 'consequent', 'alternate'],\n  LabeledStatement: ['label', 'body'],\n  Literal: [],\n  LogicalExpression: ['left', 'right'],\n  MemberExpression: ['object', 'property'],\n  MetaProperty: ['meta', 'property'],\n  MethodDefinition: ['key', 'value'],\n  NewExpression: ['callee', 'arguments'],\n  ObjectExpression: ['properties'],\n  ObjectPattern: ['properties'],\n  ParenthesizedExpression: ['expression'],\n  PrivateIdentifier: [],\n  PropertyDefinition: ['key', 'value'],\n  Program: ['body'],\n  Property: ['key', 'value'],\n  RestElement: ['argument'],\n  ReturnStatement: ['argument'],\n  SequenceExpression: ['expressions'],\n  SpreadElement: ['argument'],\n  StaticBlock: ['body'],\n  Super: [],\n  SwitchCase: ['test', 'consequent'],\n  SwitchStatement: ['discriminant', 'cases'],\n  TaggedTemplateExpression: ['tag', 'quasi'],\n  TemplateElement: [],\n  TemplateLiteral: ['quasis', 'expressions'],\n  ThisExpression: [],\n  ThrowStatement: ['argument'],\n  TryStatement: ['block', 'handler', 'finalizer'],\n  UnaryExpression: ['argument'],\n  UpdateExpression: ['argument'],\n  VariableDeclaration: ['declarations'],\n  VariableDeclarator: ['id', 'init'],\n  WhileStatement: ['test', 'body'],\n  WithStatement: ['object', 'body'],\n  YieldExpression: ['argument'],\n};\n"]}