{
  "version": 3,
  "sources": ["../../third_party/codemirror/package/addon/runmode/runmode-standalone.mjs", "../../third_party/codemirror/package/mode/css/css.mjs", "../../third_party/codemirror/package/mode/xml/xml.mjs", "../../third_party/codemirror/package/mode/javascript/javascript.mjs", "../../../../../../front_end/entrypoints/formatter_worker/CSSFormatter.ts", "../../../../../../front_end/entrypoints/formatter_worker/FormatterWorker.ts", "../../../../../../front_end/entrypoints/formatter_worker/FormattedContentBuilder.ts", "../../../../../../front_end/entrypoints/formatter_worker/HTMLFormatter.ts", "../../../../../../front_end/entrypoints/formatter_worker/JavaScriptFormatter.ts", "../../../../../../front_end/entrypoints/formatter_worker/AcornTokenizer.ts", "../../../../../../front_end/entrypoints/formatter_worker/ESTreeWalker.ts", "../../../../../../front_end/entrypoints/formatter_worker/JSONFormatter.ts", "../../../../../../front_end/entrypoints/formatter_worker/IdentityFormatter.ts", "../../../../../../front_end/entrypoints/formatter_worker/Substitute.ts", "../../../../../../front_end/entrypoints/formatter_worker/ScopeParser.ts", "../../../../../../front_end/entrypoints/formatter_worker/CSSRuleParser.ts"],
  "sourcesContent": ["(function () {\n  'use strict';\n\n  function copyObj(obj, target, overwrite) {\n    if (!target) { target = {}; }\n    for (var prop in obj)\n      { if (obj.hasOwnProperty(prop) && (overwrite !== false || !target.hasOwnProperty(prop)))\n        { target[prop] = obj[prop]; } }\n    return target\n  }\n\n  // Counts the column offset in a string, taking tabs into account.\n  // Used mostly to find indentation.\n  function countColumn(string, end, tabSize, startIndex, startValue) {\n    if (end == null) {\n      end = string.search(/[^\\s\\u00a0]/);\n      if (end == -1) { end = string.length; }\n    }\n    for (var i = startIndex || 0, n = startValue || 0;;) {\n      var nextTab = string.indexOf(\"\\t\", i);\n      if (nextTab < 0 || nextTab >= end)\n        { return n + (end - i) }\n      n += nextTab - i;\n      n += tabSize - (n % tabSize);\n      i = nextTab + 1;\n    }\n  }\n\n  function nothing() {}\n\n  function createObj(base, props) {\n    var inst;\n    if (Object.create) {\n      inst = Object.create(base);\n    } else {\n      nothing.prototype = base;\n      inst = new nothing();\n    }\n    if (props) { copyObj(props, inst); }\n    return inst\n  }\n\n  // STRING STREAM\n\n  // Fed to the mode parsers, provides helper functions to make\n  // parsers more succinct.\n\n  var StringStream = function(string, tabSize, lineOracle) {\n    this.pos = this.start = 0;\n    this.string = string;\n    this.tabSize = tabSize || 8;\n    this.lastColumnPos = this.lastColumnValue = 0;\n    this.lineStart = 0;\n    this.lineOracle = lineOracle;\n  };\n\n  StringStream.prototype.eol = function () {return this.pos >= this.string.length};\n  StringStream.prototype.sol = function () {return this.pos == this.lineStart};\n  StringStream.prototype.peek = function () {return this.string.charAt(this.pos) || undefined};\n  StringStream.prototype.next = function () {\n    if (this.pos < this.string.length)\n      { return this.string.charAt(this.pos++) }\n  };\n  StringStream.prototype.eat = function (match) {\n    var ch = this.string.charAt(this.pos);\n    var ok;\n    if (typeof match == \"string\") { ok = ch == match; }\n    else { ok = ch && (match.test ? match.test(ch) : match(ch)); }\n    if (ok) {++this.pos; return ch}\n  };\n  StringStream.prototype.eatWhile = function (match) {\n    var start = this.pos;\n    while (this.eat(match)){}\n    return this.pos > start\n  };\n  StringStream.prototype.eatSpace = function () {\n    var start = this.pos;\n    while (/[\\s\\u00a0]/.test(this.string.charAt(this.pos))) { ++this.pos; }\n    return this.pos > start\n  };\n  StringStream.prototype.skipToEnd = function () {this.pos = this.string.length;};\n  StringStream.prototype.skipTo = function (ch) {\n    var found = this.string.indexOf(ch, this.pos);\n    if (found > -1) {this.pos = found; return true}\n  };\n  StringStream.prototype.backUp = function (n) {this.pos -= n;};\n  StringStream.prototype.column = function () {\n    if (this.lastColumnPos < this.start) {\n      this.lastColumnValue = countColumn(this.string, this.start, this.tabSize, this.lastColumnPos, this.lastColumnValue);\n      this.lastColumnPos = this.start;\n    }\n    return this.lastColumnValue - (this.lineStart ? countColumn(this.string, this.lineStart, this.tabSize) : 0)\n  };\n  StringStream.prototype.indentation = function () {\n    return countColumn(this.string, null, this.tabSize) -\n      (this.lineStart ? countColumn(this.string, this.lineStart, this.tabSize) : 0)\n  };\n  StringStream.prototype.match = function (pattern, consume, caseInsensitive) {\n    if (typeof pattern == \"string\") {\n      var cased = function (str) { return caseInsensitive ? str.toLowerCase() : str; };\n      var substr = this.string.substr(this.pos, pattern.length);\n      if (cased(substr) == cased(pattern)) {\n        if (consume !== false) { this.pos += pattern.length; }\n        return true\n      }\n    } else {\n      var match = this.string.slice(this.pos).match(pattern);\n      if (match && match.index > 0) { return null }\n      if (match && consume !== false) { this.pos += match[0].length; }\n      return match\n    }\n  };\n  StringStream.prototype.current = function (){return this.string.slice(this.start, this.pos)};\n  StringStream.prototype.hideFirstChars = function (n, inner) {\n    this.lineStart += n;\n    try { return inner() }\n    finally { this.lineStart -= n; }\n  };\n  StringStream.prototype.lookAhead = function (n) {\n    var oracle = this.lineOracle;\n    return oracle && oracle.lookAhead(n)\n  };\n  StringStream.prototype.baseToken = function () {\n    var oracle = this.lineOracle;\n    return oracle && oracle.baseToken(this.pos)\n  };\n\n  // Known modes, by name and by MIME\n  var modes = {}, mimeModes = {};\n\n  // Extra arguments are stored as the mode's dependencies, which is\n  // used by (legacy) mechanisms like loadmode.js to automatically\n  // load a mode. (Preferred mechanism is the require/define calls.)\n  function defineMode(name, mode) {\n    if (arguments.length > 2)\n      { mode.dependencies = Array.prototype.slice.call(arguments, 2); }\n    modes[name] = mode;\n  }\n\n  function defineMIME(mime, spec) {\n    mimeModes[mime] = spec;\n  }\n\n  // Given a MIME type, a {name, ...options} config object, or a name\n  // string, return a mode config object.\n  function resolveMode(spec) {\n    if (typeof spec == \"string\" && mimeModes.hasOwnProperty(spec)) {\n      spec = mimeModes[spec];\n    } else if (spec && typeof spec.name == \"string\" && mimeModes.hasOwnProperty(spec.name)) {\n      var found = mimeModes[spec.name];\n      if (typeof found == \"string\") { found = {name: found}; }\n      spec = createObj(found, spec);\n      spec.name = found.name;\n    } else if (typeof spec == \"string\" && /^[\\w\\-]+\\/[\\w\\-]+\\+xml$/.test(spec)) {\n      return resolveMode(\"application/xml\")\n    } else if (typeof spec == \"string\" && /^[\\w\\-]+\\/[\\w\\-]+\\+json$/.test(spec)) {\n      return resolveMode(\"application/json\")\n    }\n    if (typeof spec == \"string\") { return {name: spec} }\n    else { return spec || {name: \"null\"} }\n  }\n\n  // Given a mode spec (anything that resolveMode accepts), find and\n  // initialize an actual mode object.\n  function getMode(options, spec) {\n    spec = resolveMode(spec);\n    var mfactory = modes[spec.name];\n    if (!mfactory) { return getMode(options, \"text/plain\") }\n    var modeObj = mfactory(options, spec);\n    if (modeExtensions.hasOwnProperty(spec.name)) {\n      var exts = modeExtensions[spec.name];\n      for (var prop in exts) {\n        if (!exts.hasOwnProperty(prop)) { continue }\n        if (modeObj.hasOwnProperty(prop)) { modeObj[\"_\" + prop] = modeObj[prop]; }\n        modeObj[prop] = exts[prop];\n      }\n    }\n    modeObj.name = spec.name;\n    if (spec.helperType) { modeObj.helperType = spec.helperType; }\n    if (spec.modeProps) { for (var prop$1 in spec.modeProps)\n      { modeObj[prop$1] = spec.modeProps[prop$1]; } }\n\n    return modeObj\n  }\n\n  // This can be used to attach properties to mode objects from\n  // outside the actual mode definition.\n  var modeExtensions = {};\n  function extendMode(mode, properties) {\n    var exts = modeExtensions.hasOwnProperty(mode) ? modeExtensions[mode] : (modeExtensions[mode] = {});\n    copyObj(properties, exts);\n  }\n\n  function copyState(mode, state) {\n    if (state === true) { return state }\n    if (mode.copyState) { return mode.copyState(state) }\n    var nstate = {};\n    for (var n in state) {\n      var val = state[n];\n      if (val instanceof Array) { val = val.concat([]); }\n      nstate[n] = val;\n    }\n    return nstate\n  }\n\n  // Given a mode and a state (for that mode), find the inner mode and\n  // state at the position that the state refers to.\n  function innerMode(mode, state) {\n    var info;\n    while (mode.innerMode) {\n      info = mode.innerMode(state);\n      if (!info || info.mode == mode) { break }\n      state = info.state;\n      mode = info.mode;\n    }\n    return info || {mode: mode, state: state}\n  }\n\n  function startState(mode, a1, a2) {\n    return mode.startState ? mode.startState(a1, a2) : true\n  }\n\n  var modeMethods = ({\n    __proto__: null,\n    modes: modes,\n    mimeModes: mimeModes,\n    defineMode: defineMode,\n    defineMIME: defineMIME,\n    resolveMode: resolveMode,\n    getMode: getMode,\n    modeExtensions: modeExtensions,\n    extendMode: extendMode,\n    copyState: copyState,\n    innerMode: innerMode,\n    startState: startState\n  });\n\n  // declare global: globalThis, CodeMirror\n\n  // Create a minimal CodeMirror needed to use runMode, and assign to root.\n  var root = typeof globalThis !== 'undefined' ? globalThis : window;\n  root.CodeMirror = {};\n\n  // Copy StringStream and mode methods into CodeMirror object.\n  CodeMirror.StringStream = StringStream;\n  for (var exported in modeMethods) { CodeMirror[exported] = modeMethods[exported]; }\n\n  // Minimal default mode.\n  CodeMirror.defineMode(\"null\", function () { return ({token: function (stream) { return stream.skipToEnd(); }}); });\n  CodeMirror.defineMIME(\"text/plain\", \"null\");\n\n  CodeMirror.registerHelper = CodeMirror.registerGlobalHelper = Math.min;\n  CodeMirror.splitLines = function(string) { return string.split(/\\r?\\n|\\r/) };\n  CodeMirror.countColumn = countColumn;\n\n  CodeMirror.defaults = { indentUnit: 2 };\n\n  // CodeMirror, copyright (c) by Marijn Haverbeke and others\n  // Distributed under an MIT license: https://codemirror.net/LICENSE\n\n  (function(mod) {\n    if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n      { mod(require(\"../../lib/codemirror\")); }\n    else if (typeof define == \"function\" && define.amd) // AMD\n      { define([\"../../lib/codemirror\"], mod); }\n    else // Plain browser env\n      { mod(CodeMirror); }\n  })(function(CodeMirror) {\n\n  CodeMirror.runMode = function(string, modespec, callback, options) {\n    var mode = CodeMirror.getMode(CodeMirror.defaults, modespec);\n    var tabSize = (options && options.tabSize) || CodeMirror.defaults.tabSize;\n\n    // Create a tokenizing callback function if passed-in callback is a DOM element.\n    if (callback.appendChild) {\n      var ie = /MSIE \\d/.test(navigator.userAgent);\n      var ie_lt9 = ie && (document.documentMode == null || document.documentMode < 9);\n      var node = callback, col = 0;\n      node.innerHTML = \"\";\n      callback = function(text, style) {\n        if (text == \"\\n\") {\n          // Emitting LF or CRLF on IE8 or earlier results in an incorrect display.\n          // Emitting a carriage return makes everything ok.\n          node.appendChild(document.createTextNode(ie_lt9 ? '\\r' : text));\n          col = 0;\n          return;\n        }\n        var content = \"\";\n        // replace tabs\n        for (var pos = 0;;) {\n          var idx = text.indexOf(\"\\t\", pos);\n          if (idx == -1) {\n            content += text.slice(pos);\n            col += text.length - pos;\n            break;\n          } else {\n            col += idx - pos;\n            content += text.slice(pos, idx);\n            var size = tabSize - col % tabSize;\n            col += size;\n            for (var i = 0; i < size; ++i) { content += \" \"; }\n            pos = idx + 1;\n          }\n        }\n        // Create a node with token style and append it to the callback DOM element.\n        if (style) {\n          var sp = node.appendChild(document.createElement(\"span\"));\n          sp.className = \"cm-\" + style.replace(/ +/g, \" cm-\");\n          sp.appendChild(document.createTextNode(content));\n        } else {\n          node.appendChild(document.createTextNode(content));\n        }\n      };\n    }\n\n    var lines = CodeMirror.splitLines(string), state = (options && options.state) || CodeMirror.startState(mode);\n    for (var i = 0, e = lines.length; i < e; ++i) {\n      if (i) { callback(\"\\n\"); }\n      var stream = new CodeMirror.StringStream(lines[i], null, {\n        lookAhead: function(n) { return lines[i + n] },\n        baseToken: function() {}\n      });\n      if (!stream.string && mode.blankLine) { mode.blankLine(state); }\n      while (!stream.eol()) {\n        var style = mode.token(stream, state);\n        callback(stream.current(), style, i, stream.start, state, mode);\n        stream.start = stream.pos;\n      }\n    }\n  };\n\n  });\n\n}());\n", "// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"css\", function(config, parserConfig) {\n  var inline = parserConfig.inline\n  if (!parserConfig.propertyKeywords) parserConfig = CodeMirror.resolveMode(\"text/css\");\n\n  var indentUnit = config.indentUnit,\n      tokenHooks = parserConfig.tokenHooks,\n      documentTypes = parserConfig.documentTypes || {},\n      mediaTypes = parserConfig.mediaTypes || {},\n      mediaFeatures = parserConfig.mediaFeatures || {},\n      mediaValueKeywords = parserConfig.mediaValueKeywords || {},\n      propertyKeywords = parserConfig.propertyKeywords || {},\n      nonStandardPropertyKeywords = parserConfig.nonStandardPropertyKeywords || {},\n      fontProperties = parserConfig.fontProperties || {},\n      counterDescriptors = parserConfig.counterDescriptors || {},\n      colorKeywords = parserConfig.colorKeywords || {},\n      valueKeywords = parserConfig.valueKeywords || {},\n      allowNested = parserConfig.allowNested,\n      lineComment = parserConfig.lineComment,\n      supportsAtComponent = parserConfig.supportsAtComponent === true,\n      highlightNonStandardPropertyKeywords = config.highlightNonStandardPropertyKeywords !== false;\n\n  var type, override;\n  function ret(style, tp) { type = tp; return style; }\n\n  // Tokenizers\n\n  function tokenBase(stream, state) {\n    var ch = stream.next();\n    if (tokenHooks[ch]) {\n      var result = tokenHooks[ch](stream, state);\n      if (result !== false) return result;\n    }\n    if (ch == \"@\") {\n      stream.eatWhile(/[\\w\\\\\\-]/);\n      return ret(\"def\", stream.current());\n    } else if (ch == \"=\" || (ch == \"~\" || ch == \"|\") && stream.eat(\"=\")) {\n      return ret(null, \"compare\");\n    } else if (ch == \"\\\"\" || ch == \"'\") {\n      state.tokenize = tokenString(ch);\n      return state.tokenize(stream, state);\n    } else if (ch == \"#\") {\n      stream.eatWhile(/[\\w\\\\\\-]/);\n      return ret(\"atom\", \"hash\");\n    } else if (ch == \"!\") {\n      stream.match(/^\\s*\\w*/);\n      return ret(\"keyword\", \"important\");\n    } else if (/\\d/.test(ch) || ch == \".\" && stream.eat(/\\d/)) {\n      stream.eatWhile(/[\\w.%]/);\n      return ret(\"number\", \"unit\");\n    } else if (ch === \"-\") {\n      if (/[\\d.]/.test(stream.peek())) {\n        stream.eatWhile(/[\\w.%]/);\n        return ret(\"number\", \"unit\");\n      } else if (stream.match(/^-[\\w\\\\\\-]*/)) {\n        stream.eatWhile(/[\\w\\\\\\-]/);\n        if (stream.match(/^\\s*:/, false))\n          return ret(\"variable-2\", \"variable-definition\");\n        return ret(\"variable-2\", \"variable\");\n      } else if (stream.match(/^\\w+-/)) {\n        return ret(\"meta\", \"meta\");\n      }\n    } else if (/[,+>*\\/]/.test(ch)) {\n      return ret(null, \"select-op\");\n    } else if (ch == \".\" && stream.match(/^-?[_a-z][_a-z0-9-]*/i)) {\n      return ret(\"qualifier\", \"qualifier\");\n    } else if (/[:;{}\\[\\]\\(\\)]/.test(ch)) {\n      return ret(null, ch);\n    } else if (stream.match(/^[\\w-.]+(?=\\()/)) {\n      if (/^(url(-prefix)?|domain|regexp)$/i.test(stream.current())) {\n        state.tokenize = tokenParenthesized;\n      }\n      return ret(\"variable callee\", \"variable\");\n    } else if (/[\\w\\\\\\-]/.test(ch)) {\n      stream.eatWhile(/[\\w\\\\\\-]/);\n      return ret(\"property\", \"word\");\n    } else {\n      return ret(null, null);\n    }\n  }\n\n  function tokenString(quote) {\n    return function(stream, state) {\n      var escaped = false, ch;\n      while ((ch = stream.next()) != null) {\n        if (ch == quote && !escaped) {\n          if (quote == \")\") stream.backUp(1);\n          break;\n        }\n        escaped = !escaped && ch == \"\\\\\";\n      }\n      if (ch == quote || !escaped && quote != \")\") state.tokenize = null;\n      return ret(\"string\", \"string\");\n    };\n  }\n\n  function tokenParenthesized(stream, state) {\n    stream.next(); // Must be '('\n    if (!stream.match(/^\\s*[\\\"\\')]/, false))\n      state.tokenize = tokenString(\")\");\n    else\n      state.tokenize = null;\n    return ret(null, \"(\");\n  }\n\n  // Context management\n\n  function Context(type, indent, prev) {\n    this.type = type;\n    this.indent = indent;\n    this.prev = prev;\n  }\n\n  function pushContext(state, stream, type, indent) {\n    state.context = new Context(type, stream.indentation() + (indent === false ? 0 : indentUnit), state.context);\n    return type;\n  }\n\n  function popContext(state) {\n    if (state.context.prev)\n      state.context = state.context.prev;\n    return state.context.type;\n  }\n\n  function pass(type, stream, state) {\n    return states[state.context.type](type, stream, state);\n  }\n  function popAndPass(type, stream, state, n) {\n    for (var i = n || 1; i > 0; i--)\n      state.context = state.context.prev;\n    return pass(type, stream, state);\n  }\n\n  // Parser\n\n  function wordAsValue(stream) {\n    var word = stream.current().toLowerCase();\n    if (valueKeywords.hasOwnProperty(word))\n      override = \"atom\";\n    else if (colorKeywords.hasOwnProperty(word))\n      override = \"keyword\";\n    else\n      override = \"variable\";\n  }\n\n  var states = {};\n\n  states.top = function(type, stream, state) {\n    if (type == \"{\") {\n      return pushContext(state, stream, \"block\");\n    } else if (type == \"}\" && state.context.prev) {\n      return popContext(state);\n    } else if (supportsAtComponent && /@component/i.test(type)) {\n      return pushContext(state, stream, \"atComponentBlock\");\n    } else if (/^@(-moz-)?document$/i.test(type)) {\n      return pushContext(state, stream, \"documentTypes\");\n    } else if (/^@(media|supports|(-moz-)?document|import)$/i.test(type)) {\n      return pushContext(state, stream, \"atBlock\");\n    } else if (/^@(font-face|counter-style)/i.test(type)) {\n      state.stateArg = type;\n      return \"restricted_atBlock_before\";\n    } else if (/^@(-(moz|ms|o|webkit)-)?keyframes$/i.test(type)) {\n      return \"keyframes\";\n    } else if (type && type.charAt(0) == \"@\") {\n      return pushContext(state, stream, \"at\");\n    } else if (type == \"hash\") {\n      override = \"builtin\";\n    } else if (type == \"word\") {\n      override = \"tag\";\n    } else if (type == \"variable-definition\") {\n      return \"maybeprop\";\n    } else if (type == \"interpolation\") {\n      return pushContext(state, stream, \"interpolation\");\n    } else if (type == \":\") {\n      return \"pseudo\";\n    } else if (allowNested && type == \"(\") {\n      return pushContext(state, stream, \"parens\");\n    }\n    return state.context.type;\n  };\n\n  states.block = function(type, stream, state) {\n    if (type == \"word\") {\n      var word = stream.current().toLowerCase();\n      if (propertyKeywords.hasOwnProperty(word)) {\n        override = \"property\";\n        return \"maybeprop\";\n      } else if (nonStandardPropertyKeywords.hasOwnProperty(word)) {\n        override = highlightNonStandardPropertyKeywords ? \"string-2\" : \"property\";\n        return \"maybeprop\";\n      } else if (allowNested) {\n        override = stream.match(/^\\s*:(?:\\s|$)/, false) ? \"property\" : \"tag\";\n        return \"block\";\n      } else {\n        override += \" error\";\n        return \"maybeprop\";\n      }\n    } else if (type == \"meta\") {\n      return \"block\";\n    } else if (!allowNested && (type == \"hash\" || type == \"qualifier\")) {\n      override = \"error\";\n      return \"block\";\n    } else {\n      return states.top(type, stream, state);\n    }\n  };\n\n  states.maybeprop = function(type, stream, state) {\n    if (type == \":\") return pushContext(state, stream, \"prop\");\n    return pass(type, stream, state);\n  };\n\n  states.prop = function(type, stream, state) {\n    if (type == \";\") return popContext(state);\n    if (type == \"{\" && allowNested) return pushContext(state, stream, \"propBlock\");\n    if (type == \"}\" || type == \"{\") return popAndPass(type, stream, state);\n    if (type == \"(\") return pushContext(state, stream, \"parens\");\n\n    if (type == \"hash\" && !/^#([0-9a-fA-f]{3,4}|[0-9a-fA-f]{6}|[0-9a-fA-f]{8})$/.test(stream.current())) {\n      override += \" error\";\n    } else if (type == \"word\") {\n      wordAsValue(stream);\n    } else if (type == \"interpolation\") {\n      return pushContext(state, stream, \"interpolation\");\n    }\n    return \"prop\";\n  };\n\n  states.propBlock = function(type, _stream, state) {\n    if (type == \"}\") return popContext(state);\n    if (type == \"word\") { override = \"property\"; return \"maybeprop\"; }\n    return state.context.type;\n  };\n\n  states.parens = function(type, stream, state) {\n    if (type == \"{\" || type == \"}\") return popAndPass(type, stream, state);\n    if (type == \")\") return popContext(state);\n    if (type == \"(\") return pushContext(state, stream, \"parens\");\n    if (type == \"interpolation\") return pushContext(state, stream, \"interpolation\");\n    if (type == \"word\") wordAsValue(stream);\n    return \"parens\";\n  };\n\n  states.pseudo = function(type, stream, state) {\n    if (type == \"meta\") return \"pseudo\";\n\n    if (type == \"word\") {\n      override = \"variable-3\";\n      return state.context.type;\n    }\n    return pass(type, stream, state);\n  };\n\n  states.documentTypes = function(type, stream, state) {\n    if (type == \"word\" && documentTypes.hasOwnProperty(stream.current())) {\n      override = \"tag\";\n      return state.context.type;\n    } else {\n      return states.atBlock(type, stream, state);\n    }\n  };\n\n  states.atBlock = function(type, stream, state) {\n    if (type == \"(\") return pushContext(state, stream, \"atBlock_parens\");\n    if (type == \"}\" || type == \";\") return popAndPass(type, stream, state);\n    if (type == \"{\") return popContext(state) && pushContext(state, stream, allowNested ? \"block\" : \"top\");\n\n    if (type == \"interpolation\") return pushContext(state, stream, \"interpolation\");\n\n    if (type == \"word\") {\n      var word = stream.current().toLowerCase();\n      if (word == \"only\" || word == \"not\" || word == \"and\" || word == \"or\")\n        override = \"keyword\";\n      else if (mediaTypes.hasOwnProperty(word))\n        override = \"attribute\";\n      else if (mediaFeatures.hasOwnProperty(word))\n        override = \"property\";\n      else if (mediaValueKeywords.hasOwnProperty(word))\n        override = \"keyword\";\n      else if (propertyKeywords.hasOwnProperty(word))\n        override = \"property\";\n      else if (nonStandardPropertyKeywords.hasOwnProperty(word))\n        override = highlightNonStandardPropertyKeywords ? \"string-2\" : \"property\";\n      else if (valueKeywords.hasOwnProperty(word))\n        override = \"atom\";\n      else if (colorKeywords.hasOwnProperty(word))\n        override = \"keyword\";\n      else\n        override = \"error\";\n    }\n    return state.context.type;\n  };\n\n  states.atComponentBlock = function(type, stream, state) {\n    if (type == \"}\")\n      return popAndPass(type, stream, state);\n    if (type == \"{\")\n      return popContext(state) && pushContext(state, stream, allowNested ? \"block\" : \"top\", false);\n    if (type == \"word\")\n      override = \"error\";\n    return state.context.type;\n  };\n\n  states.atBlock_parens = function(type, stream, state) {\n    if (type == \")\") return popContext(state);\n    if (type == \"{\" || type == \"}\") return popAndPass(type, stream, state, 2);\n    return states.atBlock(type, stream, state);\n  };\n\n  states.restricted_atBlock_before = function(type, stream, state) {\n    if (type == \"{\")\n      return pushContext(state, stream, \"restricted_atBlock\");\n    if (type == \"word\" && state.stateArg == \"@counter-style\") {\n      override = \"variable\";\n      return \"restricted_atBlock_before\";\n    }\n    return pass(type, stream, state);\n  };\n\n  states.restricted_atBlock = function(type, stream, state) {\n    if (type == \"}\") {\n      state.stateArg = null;\n      return popContext(state);\n    }\n    if (type == \"word\") {\n      if ((state.stateArg == \"@font-face\" && !fontProperties.hasOwnProperty(stream.current().toLowerCase())) ||\n          (state.stateArg == \"@counter-style\" && !counterDescriptors.hasOwnProperty(stream.current().toLowerCase())))\n        override = \"error\";\n      else\n        override = \"property\";\n      return \"maybeprop\";\n    }\n    return \"restricted_atBlock\";\n  };\n\n  states.keyframes = function(type, stream, state) {\n    if (type == \"word\") { override = \"variable\"; return \"keyframes\"; }\n    if (type == \"{\") return pushContext(state, stream, \"top\");\n    return pass(type, stream, state);\n  };\n\n  states.at = function(type, stream, state) {\n    if (type == \";\") return popContext(state);\n    if (type == \"{\" || type == \"}\") return popAndPass(type, stream, state);\n    if (type == \"word\") override = \"tag\";\n    else if (type == \"hash\") override = \"builtin\";\n    return \"at\";\n  };\n\n  states.interpolation = function(type, stream, state) {\n    if (type == \"}\") return popContext(state);\n    if (type == \"{\" || type == \";\") return popAndPass(type, stream, state);\n    if (type == \"word\") override = \"variable\";\n    else if (type != \"variable\" && type != \"(\" && type != \")\") override = \"error\";\n    return \"interpolation\";\n  };\n\n  return {\n    startState: function(base) {\n      return {tokenize: null,\n              state: inline ? \"block\" : \"top\",\n              stateArg: null,\n              context: new Context(inline ? \"block\" : \"top\", base || 0, null)};\n    },\n\n    token: function(stream, state) {\n      if (!state.tokenize && stream.eatSpace()) return null;\n      var style = (state.tokenize || tokenBase)(stream, state);\n      if (style && typeof style == \"object\") {\n        type = style[1];\n        style = style[0];\n      }\n      override = style;\n      if (type != \"comment\")\n        state.state = states[state.state](type, stream, state);\n      return override;\n    },\n\n    indent: function(state, textAfter) {\n      var cx = state.context, ch = textAfter && textAfter.charAt(0);\n      var indent = cx.indent;\n      if (cx.type == \"prop\" && (ch == \"}\" || ch == \")\")) cx = cx.prev;\n      if (cx.prev) {\n        if (ch == \"}\" && (cx.type == \"block\" || cx.type == \"top\" ||\n                          cx.type == \"interpolation\" || cx.type == \"restricted_atBlock\")) {\n          // Resume indentation from parent context.\n          cx = cx.prev;\n          indent = cx.indent;\n        } else if (ch == \")\" && (cx.type == \"parens\" || cx.type == \"atBlock_parens\") ||\n            ch == \"{\" && (cx.type == \"at\" || cx.type == \"atBlock\")) {\n          // Dedent relative to current context.\n          indent = Math.max(0, cx.indent - indentUnit);\n        }\n      }\n      return indent;\n    },\n\n    electricChars: \"}\",\n    blockCommentStart: \"/*\",\n    blockCommentEnd: \"*/\",\n    blockCommentContinue: \" * \",\n    lineComment: lineComment,\n    fold: \"brace\"\n  };\n});\n\n  function keySet(array) {\n    var keys = {};\n    for (var i = 0; i < array.length; ++i) {\n      keys[array[i].toLowerCase()] = true;\n    }\n    return keys;\n  }\n\n  var documentTypes_ = [\n    \"domain\", \"regexp\", \"url\", \"url-prefix\"\n  ], documentTypes = keySet(documentTypes_);\n\n  var mediaTypes_ = [\n    \"all\", \"aural\", \"braille\", \"handheld\", \"print\", \"projection\", \"screen\",\n    \"tty\", \"tv\", \"embossed\"\n  ], mediaTypes = keySet(mediaTypes_);\n\n  var mediaFeatures_ = [\n    \"width\", \"min-width\", \"max-width\", \"height\", \"min-height\", \"max-height\",\n    \"device-width\", \"min-device-width\", \"max-device-width\", \"device-height\",\n    \"min-device-height\", \"max-device-height\", \"aspect-ratio\",\n    \"min-aspect-ratio\", \"max-aspect-ratio\", \"device-aspect-ratio\",\n    \"min-device-aspect-ratio\", \"max-device-aspect-ratio\", \"color\", \"min-color\",\n    \"max-color\", \"color-index\", \"min-color-index\", \"max-color-index\",\n    \"monochrome\", \"min-monochrome\", \"max-monochrome\", \"resolution\",\n    \"min-resolution\", \"max-resolution\", \"scan\", \"grid\", \"orientation\",\n    \"device-pixel-ratio\", \"min-device-pixel-ratio\", \"max-device-pixel-ratio\",\n    \"pointer\", \"any-pointer\", \"hover\", \"any-hover\", \"prefers-color-scheme\"\n  ], mediaFeatures = keySet(mediaFeatures_);\n\n  var mediaValueKeywords_ = [\n    \"landscape\", \"portrait\", \"none\", \"coarse\", \"fine\", \"on-demand\", \"hover\",\n    \"interlace\", \"progressive\",\n    \"dark\", \"light\"\n  ], mediaValueKeywords = keySet(mediaValueKeywords_);\n\n  var propertyKeywords_ = [\n    \"align-content\", \"align-items\", \"align-self\", \"alignment-adjust\",\n    \"alignment-baseline\", \"all\", \"anchor-point\", \"animation\", \"animation-delay\",\n    \"animation-direction\", \"animation-duration\", \"animation-fill-mode\",\n    \"animation-iteration-count\", \"animation-name\", \"animation-play-state\",\n    \"animation-timing-function\", \"appearance\", \"azimuth\", \"backdrop-filter\",\n    \"backface-visibility\", \"background\", \"background-attachment\",\n    \"background-blend-mode\", \"background-clip\", \"background-color\",\n    \"background-image\", \"background-origin\", \"background-position\",\n    \"background-position-x\", \"background-position-y\", \"background-repeat\",\n    \"background-size\", \"baseline-shift\", \"binding\", \"bleed\", \"block-size\",\n    \"bookmark-label\", \"bookmark-level\", \"bookmark-state\", \"bookmark-target\",\n    \"border\", \"border-bottom\", \"border-bottom-color\", \"border-bottom-left-radius\",\n    \"border-bottom-right-radius\", \"border-bottom-style\", \"border-bottom-width\",\n    \"border-collapse\", \"border-color\", \"border-image\", \"border-image-outset\",\n    \"border-image-repeat\", \"border-image-slice\", \"border-image-source\",\n    \"border-image-width\", \"border-left\", \"border-left-color\", \"border-left-style\",\n    \"border-left-width\", \"border-radius\", \"border-right\", \"border-right-color\",\n    \"border-right-style\", \"border-right-width\", \"border-spacing\", \"border-style\",\n    \"border-top\", \"border-top-color\", \"border-top-left-radius\",\n    \"border-top-right-radius\", \"border-top-style\", \"border-top-width\",\n    \"border-width\", \"bottom\", \"box-decoration-break\", \"box-shadow\", \"box-sizing\",\n    \"break-after\", \"break-before\", \"break-inside\", \"caption-side\", \"caret-color\",\n    \"clear\", \"clip\", \"color\", \"color-profile\", \"column-count\", \"column-fill\",\n    \"column-gap\", \"column-rule\", \"column-rule-color\", \"column-rule-style\",\n    \"column-rule-width\", \"column-span\", \"column-width\", \"columns\", \"contain\",\n    \"content\", \"counter-increment\", \"counter-reset\", \"crop\", \"cue\", \"cue-after\",\n    \"cue-before\", \"cursor\", \"direction\", \"display\", \"dominant-baseline\",\n    \"drop-initial-after-adjust\", \"drop-initial-after-align\",\n    \"drop-initial-before-adjust\", \"drop-initial-before-align\", \"drop-initial-size\",\n    \"drop-initial-value\", \"elevation\", \"empty-cells\", \"fit\", \"fit-position\",\n    \"flex\", \"flex-basis\", \"flex-direction\", \"flex-flow\", \"flex-grow\",\n    \"flex-shrink\", \"flex-wrap\", \"float\", \"float-offset\", \"flow-from\", \"flow-into\",\n    \"font\", \"font-family\", \"font-feature-settings\", \"font-kerning\",\n    \"font-language-override\", \"font-optical-sizing\", \"font-size\",\n    \"font-size-adjust\", \"font-stretch\", \"font-style\", \"font-synthesis\",\n    \"font-variant\", \"font-variant-alternates\", \"font-variant-caps\",\n    \"font-variant-east-asian\", \"font-variant-ligatures\", \"font-variant-numeric\",\n    \"font-variant-position\", \"font-variation-settings\", \"font-weight\", \"gap\",\n    \"grid\", \"grid-area\", \"grid-auto-columns\", \"grid-auto-flow\", \"grid-auto-rows\",\n    \"grid-column\", \"grid-column-end\", \"grid-column-gap\", \"grid-column-start\",\n    \"grid-gap\", \"grid-row\", \"grid-row-end\", \"grid-row-gap\", \"grid-row-start\",\n    \"grid-template\", \"grid-template-areas\", \"grid-template-columns\",\n    \"grid-template-rows\", \"hanging-punctuation\", \"height\", \"hyphens\", \"icon\",\n    \"image-orientation\", \"image-rendering\", \"image-resolution\", \"inline-box-align\",\n    \"inset\", \"inset-block\", \"inset-block-end\", \"inset-block-start\", \"inset-inline\",\n    \"inset-inline-end\", \"inset-inline-start\", \"isolation\", \"justify-content\",\n    \"justify-items\", \"justify-self\", \"left\", \"letter-spacing\", \"line-break\",\n    \"line-height\", \"line-height-step\", \"line-stacking\", \"line-stacking-ruby\",\n    \"line-stacking-shift\", \"line-stacking-strategy\", \"list-style\",\n    \"list-style-image\", \"list-style-position\", \"list-style-type\", \"margin\",\n    \"margin-bottom\", \"margin-left\", \"margin-right\", \"margin-top\", \"marks\",\n    \"marquee-direction\", \"marquee-loop\", \"marquee-play-count\", \"marquee-speed\",\n    \"marquee-style\", \"mask-clip\", \"mask-composite\", \"mask-image\", \"mask-mode\",\n    \"mask-origin\", \"mask-position\", \"mask-repeat\", \"mask-size\",\"mask-type\",\n    \"max-block-size\", \"max-height\", \"max-inline-size\",\n    \"max-width\", \"min-block-size\", \"min-height\", \"min-inline-size\", \"min-width\",\n    \"mix-blend-mode\", \"move-to\", \"nav-down\", \"nav-index\", \"nav-left\", \"nav-right\",\n    \"nav-up\", \"object-fit\", \"object-position\", \"offset\", \"offset-anchor\",\n    \"offset-distance\", \"offset-path\", \"offset-position\", \"offset-rotate\",\n    \"opacity\", \"order\", \"orphans\", \"outline\", \"outline-color\", \"outline-offset\",\n    \"outline-style\", \"outline-width\", \"overflow\", \"overflow-style\",\n    \"overflow-wrap\", \"overflow-x\", \"overflow-y\", \"padding\", \"padding-bottom\",\n    \"padding-left\", \"padding-right\", \"padding-top\", \"page\", \"page-break-after\",\n    \"page-break-before\", \"page-break-inside\", \"page-policy\", \"pause\",\n    \"pause-after\", \"pause-before\", \"perspective\", \"perspective-origin\", \"pitch\",\n    \"pitch-range\", \"place-content\", \"place-items\", \"place-self\", \"play-during\",\n    \"position\", \"presentation-level\", \"punctuation-trim\", \"quotes\",\n    \"region-break-after\", \"region-break-before\", \"region-break-inside\",\n    \"region-fragment\", \"rendering-intent\", \"resize\", \"rest\", \"rest-after\",\n    \"rest-before\", \"richness\", \"right\", \"rotate\", \"rotation\", \"rotation-point\",\n    \"row-gap\", \"ruby-align\", \"ruby-overhang\", \"ruby-position\", \"ruby-span\",\n    \"scale\", \"scroll-behavior\", \"scroll-margin\", \"scroll-margin-block\",\n    \"scroll-margin-block-end\", \"scroll-margin-block-start\", \"scroll-margin-bottom\",\n    \"scroll-margin-inline\", \"scroll-margin-inline-end\",\n    \"scroll-margin-inline-start\", \"scroll-margin-left\", \"scroll-margin-right\",\n    \"scroll-margin-top\", \"scroll-padding\", \"scroll-padding-block\",\n    \"scroll-padding-block-end\", \"scroll-padding-block-start\",\n    \"scroll-padding-bottom\", \"scroll-padding-inline\", \"scroll-padding-inline-end\",\n    \"scroll-padding-inline-start\", \"scroll-padding-left\", \"scroll-padding-right\",\n    \"scroll-padding-top\", \"scroll-snap-align\", \"scroll-snap-type\",\n    \"shape-image-threshold\", \"shape-inside\", \"shape-margin\", \"shape-outside\",\n    \"size\", \"speak\", \"speak-as\", \"speak-header\", \"speak-numeral\",\n    \"speak-punctuation\", \"speech-rate\", \"stress\", \"string-set\", \"tab-size\",\n    \"table-layout\", \"target\", \"target-name\", \"target-new\", \"target-position\",\n    \"text-align\", \"text-align-last\", \"text-combine-upright\", \"text-decoration\",\n    \"text-decoration-color\", \"text-decoration-line\", \"text-decoration-skip\",\n    \"text-decoration-skip-ink\", \"text-decoration-style\", \"text-emphasis\",\n    \"text-emphasis-color\", \"text-emphasis-position\", \"text-emphasis-style\",\n    \"text-height\", \"text-indent\", \"text-justify\", \"text-orientation\",\n    \"text-outline\", \"text-overflow\", \"text-rendering\", \"text-shadow\",\n    \"text-size-adjust\", \"text-space-collapse\", \"text-transform\",\n    \"text-underline-position\", \"text-wrap\", \"top\", \"touch-action\", \"transform\", \"transform-origin\",\n    \"transform-style\", \"transition\", \"transition-delay\", \"transition-duration\",\n    \"transition-property\", \"transition-timing-function\", \"translate\",\n    \"unicode-bidi\", \"user-select\", \"vertical-align\", \"visibility\", \"voice-balance\",\n    \"voice-duration\", \"voice-family\", \"voice-pitch\", \"voice-range\", \"voice-rate\",\n    \"voice-stress\", \"voice-volume\", \"volume\", \"white-space\", \"widows\", \"width\",\n    \"will-change\", \"word-break\", \"word-spacing\", \"word-wrap\", \"writing-mode\", \"z-index\",\n    // SVG-specific\n    \"clip-path\", \"clip-rule\", \"mask\", \"enable-background\", \"filter\", \"flood-color\",\n    \"flood-opacity\", \"lighting-color\", \"stop-color\", \"stop-opacity\", \"pointer-events\",\n    \"color-interpolation\", \"color-interpolation-filters\",\n    \"color-rendering\", \"fill\", \"fill-opacity\", \"fill-rule\", \"image-rendering\",\n    \"marker\", \"marker-end\", \"marker-mid\", \"marker-start\", \"paint-order\", \"shape-rendering\", \"stroke\",\n    \"stroke-dasharray\", \"stroke-dashoffset\", \"stroke-linecap\", \"stroke-linejoin\",\n    \"stroke-miterlimit\", \"stroke-opacity\", \"stroke-width\", \"text-rendering\",\n    \"baseline-shift\", \"dominant-baseline\", \"glyph-orientation-horizontal\",\n    \"glyph-orientation-vertical\", \"text-anchor\", \"writing-mode\",\n  ], propertyKeywords = keySet(propertyKeywords_);\n\n  var nonStandardPropertyKeywords_ = [\n    \"border-block\", \"border-block-color\", \"border-block-end\",\n    \"border-block-end-color\", \"border-block-end-style\", \"border-block-end-width\",\n    \"border-block-start\", \"border-block-start-color\", \"border-block-start-style\",\n    \"border-block-start-width\", \"border-block-style\", \"border-block-width\",\n    \"border-inline\", \"border-inline-color\", \"border-inline-end\",\n    \"border-inline-end-color\", \"border-inline-end-style\",\n    \"border-inline-end-width\", \"border-inline-start\", \"border-inline-start-color\",\n    \"border-inline-start-style\", \"border-inline-start-width\",\n    \"border-inline-style\", \"border-inline-width\", \"margin-block\",\n    \"margin-block-end\", \"margin-block-start\", \"margin-inline\", \"margin-inline-end\",\n    \"margin-inline-start\", \"padding-block\", \"padding-block-end\",\n    \"padding-block-start\", \"padding-inline\", \"padding-inline-end\",\n    \"padding-inline-start\", \"scroll-snap-stop\", \"scrollbar-3d-light-color\",\n    \"scrollbar-arrow-color\", \"scrollbar-base-color\", \"scrollbar-dark-shadow-color\",\n    \"scrollbar-face-color\", \"scrollbar-highlight-color\", \"scrollbar-shadow-color\",\n    \"scrollbar-track-color\", \"searchfield-cancel-button\", \"searchfield-decoration\",\n    \"searchfield-results-button\", \"searchfield-results-decoration\", \"shape-inside\", \"zoom\"\n  ], nonStandardPropertyKeywords = keySet(nonStandardPropertyKeywords_);\n\n  var fontProperties_ = [\n    \"font-display\", \"font-family\", \"src\", \"unicode-range\", \"font-variant\",\n     \"font-feature-settings\", \"font-stretch\", \"font-weight\", \"font-style\"\n  ], fontProperties = keySet(fontProperties_);\n\n  var counterDescriptors_ = [\n    \"additive-symbols\", \"fallback\", \"negative\", \"pad\", \"prefix\", \"range\",\n    \"speak-as\", \"suffix\", \"symbols\", \"system\"\n  ], counterDescriptors = keySet(counterDescriptors_);\n\n  var colorKeywords_ = [\n    \"aliceblue\", \"antiquewhite\", \"aqua\", \"aquamarine\", \"azure\", \"beige\",\n    \"bisque\", \"black\", \"blanchedalmond\", \"blue\", \"blueviolet\", \"brown\",\n    \"burlywood\", \"cadetblue\", \"chartreuse\", \"chocolate\", \"coral\", \"cornflowerblue\",\n    \"cornsilk\", \"crimson\", \"cyan\", \"darkblue\", \"darkcyan\", \"darkgoldenrod\",\n    \"darkgray\", \"darkgreen\", \"darkkhaki\", \"darkmagenta\", \"darkolivegreen\",\n    \"darkorange\", \"darkorchid\", \"darkred\", \"darksalmon\", \"darkseagreen\",\n    \"darkslateblue\", \"darkslategray\", \"darkturquoise\", \"darkviolet\",\n    \"deeppink\", \"deepskyblue\", \"dimgray\", \"dodgerblue\", \"firebrick\",\n    \"floralwhite\", \"forestgreen\", \"fuchsia\", \"gainsboro\", \"ghostwhite\",\n    \"gold\", \"goldenrod\", \"gray\", \"grey\", \"green\", \"greenyellow\", \"honeydew\",\n    \"hotpink\", \"indianred\", \"indigo\", \"ivory\", \"khaki\", \"lavender\",\n    \"lavenderblush\", \"lawngreen\", \"lemonchiffon\", \"lightblue\", \"lightcoral\",\n    \"lightcyan\", \"lightgoldenrodyellow\", \"lightgray\", \"lightgreen\", \"lightpink\",\n    \"lightsalmon\", \"lightseagreen\", \"lightskyblue\", \"lightslategray\",\n    \"lightsteelblue\", \"lightyellow\", \"lime\", \"limegreen\", \"linen\", \"magenta\",\n    \"maroon\", \"mediumaquamarine\", \"mediumblue\", \"mediumorchid\", \"mediumpurple\",\n    \"mediumseagreen\", \"mediumslateblue\", \"mediumspringgreen\", \"mediumturquoise\",\n    \"mediumvioletred\", \"midnightblue\", \"mintcream\", \"mistyrose\", \"moccasin\",\n    \"navajowhite\", \"navy\", \"oldlace\", \"olive\", \"olivedrab\", \"orange\", \"orangered\",\n    \"orchid\", \"palegoldenrod\", \"palegreen\", \"paleturquoise\", \"palevioletred\",\n    \"papayawhip\", \"peachpuff\", \"peru\", \"pink\", \"plum\", \"powderblue\",\n    \"purple\", \"rebeccapurple\", \"red\", \"rosybrown\", \"royalblue\", \"saddlebrown\",\n    \"salmon\", \"sandybrown\", \"seagreen\", \"seashell\", \"sienna\", \"silver\", \"skyblue\",\n    \"slateblue\", \"slategray\", \"snow\", \"springgreen\", \"steelblue\", \"tan\",\n    \"teal\", \"thistle\", \"tomato\", \"turquoise\", \"violet\", \"wheat\", \"white\",\n    \"whitesmoke\", \"yellow\", \"yellowgreen\"\n  ], colorKeywords = keySet(colorKeywords_);\n\n  var valueKeywords_ = [\n    \"above\", \"absolute\", \"activeborder\", \"additive\", \"activecaption\", \"afar\",\n    \"after-white-space\", \"ahead\", \"alias\", \"all\", \"all-scroll\", \"alphabetic\", \"alternate\",\n    \"always\", \"amharic\", \"amharic-abegede\", \"antialiased\", \"appworkspace\",\n    \"arabic-indic\", \"armenian\", \"asterisks\", \"attr\", \"auto\", \"auto-flow\", \"avoid\", \"avoid-column\", \"avoid-page\",\n    \"avoid-region\", \"axis-pan\", \"background\", \"backwards\", \"baseline\", \"below\", \"bidi-override\", \"binary\",\n    \"bengali\", \"blink\", \"block\", \"block-axis\", \"bold\", \"bolder\", \"border\", \"border-box\",\n    \"both\", \"bottom\", \"break\", \"break-all\", \"break-word\", \"bullets\", \"button\", \"button-bevel\",\n    \"buttonface\", \"buttonhighlight\", \"buttonshadow\", \"buttontext\", \"calc\", \"cambodian\",\n    \"capitalize\", \"caps-lock-indicator\", \"caption\", \"captiontext\", \"caret\",\n    \"cell\", \"center\", \"checkbox\", \"circle\", \"cjk-decimal\", \"cjk-earthly-branch\",\n    \"cjk-heavenly-stem\", \"cjk-ideographic\", \"clear\", \"clip\", \"close-quote\",\n    \"col-resize\", \"collapse\", \"color\", \"color-burn\", \"color-dodge\", \"column\", \"column-reverse\",\n    \"compact\", \"condensed\", \"contain\", \"content\", \"contents\",\n    \"content-box\", \"context-menu\", \"continuous\", \"copy\", \"counter\", \"counters\", \"cover\", \"crop\",\n    \"cross\", \"crosshair\", \"currentcolor\", \"cursive\", \"cyclic\", \"darken\", \"dashed\", \"decimal\",\n    \"decimal-leading-zero\", \"default\", \"default-button\", \"dense\", \"destination-atop\",\n    \"destination-in\", \"destination-out\", \"destination-over\", \"devanagari\", \"difference\",\n    \"disc\", \"discard\", \"disclosure-closed\", \"disclosure-open\", \"document\",\n    \"dot-dash\", \"dot-dot-dash\",\n    \"dotted\", \"double\", \"down\", \"e-resize\", \"ease\", \"ease-in\", \"ease-in-out\", \"ease-out\",\n    \"element\", \"ellipse\", \"ellipsis\", \"embed\", \"end\", \"ethiopic\", \"ethiopic-abegede\",\n    \"ethiopic-abegede-am-et\", \"ethiopic-abegede-gez\", \"ethiopic-abegede-ti-er\",\n    \"ethiopic-abegede-ti-et\", \"ethiopic-halehame-aa-er\",\n    \"ethiopic-halehame-aa-et\", \"ethiopic-halehame-am-et\",\n    \"ethiopic-halehame-gez\", \"ethiopic-halehame-om-et\",\n    \"ethiopic-halehame-sid-et\", \"ethiopic-halehame-so-et\",\n    \"ethiopic-halehame-ti-er\", \"ethiopic-halehame-ti-et\", \"ethiopic-halehame-tig\",\n    \"ethiopic-numeric\", \"ew-resize\", \"exclusion\", \"expanded\", \"extends\", \"extra-condensed\",\n    \"extra-expanded\", \"fantasy\", \"fast\", \"fill\", \"fill-box\", \"fixed\", \"flat\", \"flex\", \"flex-end\", \"flex-start\", \"footnotes\",\n    \"forwards\", \"from\", \"geometricPrecision\", \"georgian\", \"graytext\", \"grid\", \"groove\",\n    \"gujarati\", \"gurmukhi\", \"hand\", \"hangul\", \"hangul-consonant\", \"hard-light\", \"hebrew\",\n    \"help\", \"hidden\", \"hide\", \"higher\", \"highlight\", \"highlighttext\",\n    \"hiragana\", \"hiragana-iroha\", \"horizontal\", \"hsl\", \"hsla\", \"hue\", \"icon\", \"ignore\",\n    \"inactiveborder\", \"inactivecaption\", \"inactivecaptiontext\", \"infinite\",\n    \"infobackground\", \"infotext\", \"inherit\", \"initial\", \"inline\", \"inline-axis\",\n    \"inline-block\", \"inline-flex\", \"inline-grid\", \"inline-table\", \"inset\", \"inside\", \"intrinsic\", \"invert\",\n    \"italic\", \"japanese-formal\", \"japanese-informal\", \"justify\", \"kannada\",\n    \"katakana\", \"katakana-iroha\", \"keep-all\", \"khmer\",\n    \"korean-hangul-formal\", \"korean-hanja-formal\", \"korean-hanja-informal\",\n    \"landscape\", \"lao\", \"large\", \"larger\", \"left\", \"level\", \"lighter\", \"lighten\",\n    \"line-through\", \"linear\", \"linear-gradient\", \"lines\", \"list-item\", \"listbox\", \"listitem\",\n    \"local\", \"logical\", \"loud\", \"lower\", \"lower-alpha\", \"lower-armenian\",\n    \"lower-greek\", \"lower-hexadecimal\", \"lower-latin\", \"lower-norwegian\",\n    \"lower-roman\", \"lowercase\", \"ltr\", \"luminosity\", \"malayalam\", \"manipulation\", \"match\", \"matrix\", \"matrix3d\",\n    \"media-controls-background\", \"media-current-time-display\",\n    \"media-fullscreen-button\", \"media-mute-button\", \"media-play-button\",\n    \"media-return-to-realtime-button\", \"media-rewind-button\",\n    \"media-seek-back-button\", \"media-seek-forward-button\", \"media-slider\",\n    \"media-sliderthumb\", \"media-time-remaining-display\", \"media-volume-slider\",\n    \"media-volume-slider-container\", \"media-volume-sliderthumb\", \"medium\",\n    \"menu\", \"menulist\", \"menulist-button\", \"menulist-text\",\n    \"menulist-textfield\", \"menutext\", \"message-box\", \"middle\", \"min-intrinsic\",\n    \"mix\", \"mongolian\", \"monospace\", \"move\", \"multiple\", \"multiple_mask_images\", \"multiply\", \"myanmar\", \"n-resize\",\n    \"narrower\", \"ne-resize\", \"nesw-resize\", \"no-close-quote\", \"no-drop\",\n    \"no-open-quote\", \"no-repeat\", \"none\", \"normal\", \"not-allowed\", \"nowrap\",\n    \"ns-resize\", \"numbers\", \"numeric\", \"nw-resize\", \"nwse-resize\", \"oblique\", \"octal\", \"opacity\", \"open-quote\",\n    \"optimizeLegibility\", \"optimizeSpeed\", \"oriya\", \"oromo\", \"outset\",\n    \"outside\", \"outside-shape\", \"overlay\", \"overline\", \"padding\", \"padding-box\",\n    \"painted\", \"page\", \"paused\", \"persian\", \"perspective\", \"pinch-zoom\", \"plus-darker\", \"plus-lighter\",\n    \"pointer\", \"polygon\", \"portrait\", \"pre\", \"pre-line\", \"pre-wrap\", \"preserve-3d\",\n    \"progress\", \"push-button\", \"radial-gradient\", \"radio\", \"read-only\",\n    \"read-write\", \"read-write-plaintext-only\", \"rectangle\", \"region\",\n    \"relative\", \"repeat\", \"repeating-linear-gradient\",\n    \"repeating-radial-gradient\", \"repeat-x\", \"repeat-y\", \"reset\", \"reverse\",\n    \"rgb\", \"rgba\", \"ridge\", \"right\", \"rotate\", \"rotate3d\", \"rotateX\", \"rotateY\",\n    \"rotateZ\", \"round\", \"row\", \"row-resize\", \"row-reverse\", \"rtl\", \"run-in\", \"running\",\n    \"s-resize\", \"sans-serif\", \"saturation\", \"scale\", \"scale3d\", \"scaleX\", \"scaleY\", \"scaleZ\", \"screen\",\n    \"scroll\", \"scrollbar\", \"scroll-position\", \"se-resize\", \"searchfield\",\n    \"searchfield-cancel-button\", \"searchfield-decoration\",\n    \"searchfield-results-button\", \"searchfield-results-decoration\", \"self-start\", \"self-end\",\n    \"semi-condensed\", \"semi-expanded\", \"separate\", \"serif\", \"show\", \"sidama\",\n    \"simp-chinese-formal\", \"simp-chinese-informal\", \"single\",\n    \"skew\", \"skewX\", \"skewY\", \"skip-white-space\", \"slide\", \"slider-horizontal\",\n    \"slider-vertical\", \"sliderthumb-horizontal\", \"sliderthumb-vertical\", \"slow\",\n    \"small\", \"small-caps\", \"small-caption\", \"smaller\", \"soft-light\", \"solid\", \"somali\",\n    \"source-atop\", \"source-in\", \"source-out\", \"source-over\", \"space\", \"space-around\", \"space-between\", \"space-evenly\", \"spell-out\", \"square\",\n    \"square-button\", \"start\", \"static\", \"status-bar\", \"stretch\", \"stroke\", \"stroke-box\", \"sub\",\n    \"subpixel-antialiased\", \"svg_masks\", \"super\", \"sw-resize\", \"symbolic\", \"symbols\", \"system-ui\", \"table\",\n    \"table-caption\", \"table-cell\", \"table-column\", \"table-column-group\",\n    \"table-footer-group\", \"table-header-group\", \"table-row\", \"table-row-group\",\n    \"tamil\",\n    \"telugu\", \"text\", \"text-bottom\", \"text-top\", \"textarea\", \"textfield\", \"thai\",\n    \"thick\", \"thin\", \"threeddarkshadow\", \"threedface\", \"threedhighlight\",\n    \"threedlightshadow\", \"threedshadow\", \"tibetan\", \"tigre\", \"tigrinya-er\",\n    \"tigrinya-er-abegede\", \"tigrinya-et\", \"tigrinya-et-abegede\", \"to\", \"top\",\n    \"trad-chinese-formal\", \"trad-chinese-informal\", \"transform\",\n    \"translate\", \"translate3d\", \"translateX\", \"translateY\", \"translateZ\",\n    \"transparent\", \"ultra-condensed\", \"ultra-expanded\", \"underline\", \"unidirectional-pan\", \"unset\", \"up\",\n    \"upper-alpha\", \"upper-armenian\", \"upper-greek\", \"upper-hexadecimal\",\n    \"upper-latin\", \"upper-norwegian\", \"upper-roman\", \"uppercase\", \"urdu\", \"url\",\n    \"var\", \"vertical\", \"vertical-text\", \"view-box\", \"visible\", \"visibleFill\", \"visiblePainted\",\n    \"visibleStroke\", \"visual\", \"w-resize\", \"wait\", \"wave\", \"wider\",\n    \"window\", \"windowframe\", \"windowtext\", \"words\", \"wrap\", \"wrap-reverse\", \"x-large\", \"x-small\", \"xor\",\n    \"xx-large\", \"xx-small\"\n  ], valueKeywords = keySet(valueKeywords_);\n\n  var allWords = documentTypes_.concat(mediaTypes_).concat(mediaFeatures_).concat(mediaValueKeywords_)\n    .concat(propertyKeywords_).concat(nonStandardPropertyKeywords_).concat(colorKeywords_)\n    .concat(valueKeywords_);\n  CodeMirror.registerHelper(\"hintWords\", \"css\", allWords);\n\n  function tokenCComment(stream, state) {\n    var maybeEnd = false, ch;\n    while ((ch = stream.next()) != null) {\n      if (maybeEnd && ch == \"/\") {\n        state.tokenize = null;\n        break;\n      }\n      maybeEnd = (ch == \"*\");\n    }\n    return [\"comment\", \"comment\"];\n  }\n\n  CodeMirror.defineMIME(\"text/css\", {\n    documentTypes: documentTypes,\n    mediaTypes: mediaTypes,\n    mediaFeatures: mediaFeatures,\n    mediaValueKeywords: mediaValueKeywords,\n    propertyKeywords: propertyKeywords,\n    nonStandardPropertyKeywords: nonStandardPropertyKeywords,\n    fontProperties: fontProperties,\n    counterDescriptors: counterDescriptors,\n    colorKeywords: colorKeywords,\n    valueKeywords: valueKeywords,\n    tokenHooks: {\n      \"/\": function(stream, state) {\n        if (!stream.eat(\"*\")) return false;\n        state.tokenize = tokenCComment;\n        return tokenCComment(stream, state);\n      }\n    },\n    name: \"css\"\n  });\n\n  CodeMirror.defineMIME(\"text/x-scss\", {\n    mediaTypes: mediaTypes,\n    mediaFeatures: mediaFeatures,\n    mediaValueKeywords: mediaValueKeywords,\n    propertyKeywords: propertyKeywords,\n    nonStandardPropertyKeywords: nonStandardPropertyKeywords,\n    colorKeywords: colorKeywords,\n    valueKeywords: valueKeywords,\n    fontProperties: fontProperties,\n    allowNested: true,\n    lineComment: \"//\",\n    tokenHooks: {\n      \"/\": function(stream, state) {\n        if (stream.eat(\"/\")) {\n          stream.skipToEnd();\n          return [\"comment\", \"comment\"];\n        } else if (stream.eat(\"*\")) {\n          state.tokenize = tokenCComment;\n          return tokenCComment(stream, state);\n        } else {\n          return [\"operator\", \"operator\"];\n        }\n      },\n      \":\": function(stream) {\n        if (stream.match(/^\\s*\\{/, false))\n          return [null, null]\n        return false;\n      },\n      \"$\": function(stream) {\n        stream.match(/^[\\w-]+/);\n        if (stream.match(/^\\s*:/, false))\n          return [\"variable-2\", \"variable-definition\"];\n        return [\"variable-2\", \"variable\"];\n      },\n      \"#\": function(stream) {\n        if (!stream.eat(\"{\")) return false;\n        return [null, \"interpolation\"];\n      }\n    },\n    name: \"css\",\n    helperType: \"scss\"\n  });\n\n  CodeMirror.defineMIME(\"text/x-less\", {\n    mediaTypes: mediaTypes,\n    mediaFeatures: mediaFeatures,\n    mediaValueKeywords: mediaValueKeywords,\n    propertyKeywords: propertyKeywords,\n    nonStandardPropertyKeywords: nonStandardPropertyKeywords,\n    colorKeywords: colorKeywords,\n    valueKeywords: valueKeywords,\n    fontProperties: fontProperties,\n    allowNested: true,\n    lineComment: \"//\",\n    tokenHooks: {\n      \"/\": function(stream, state) {\n        if (stream.eat(\"/\")) {\n          stream.skipToEnd();\n          return [\"comment\", \"comment\"];\n        } else if (stream.eat(\"*\")) {\n          state.tokenize = tokenCComment;\n          return tokenCComment(stream, state);\n        } else {\n          return [\"operator\", \"operator\"];\n        }\n      },\n      \"@\": function(stream) {\n        if (stream.eat(\"{\")) return [null, \"interpolation\"];\n        if (stream.match(/^(charset|document|font-face|import|(-(moz|ms|o|webkit)-)?keyframes|media|namespace|page|supports)\\b/i, false)) return false;\n        stream.eatWhile(/[\\w\\\\\\-]/);\n        if (stream.match(/^\\s*:/, false))\n          return [\"variable-2\", \"variable-definition\"];\n        return [\"variable-2\", \"variable\"];\n      },\n      \"&\": function() {\n        return [\"atom\", \"atom\"];\n      }\n    },\n    name: \"css\",\n    helperType: \"less\"\n  });\n\n  CodeMirror.defineMIME(\"text/x-gss\", {\n    documentTypes: documentTypes,\n    mediaTypes: mediaTypes,\n    mediaFeatures: mediaFeatures,\n    propertyKeywords: propertyKeywords,\n    nonStandardPropertyKeywords: nonStandardPropertyKeywords,\n    fontProperties: fontProperties,\n    counterDescriptors: counterDescriptors,\n    colorKeywords: colorKeywords,\n    valueKeywords: valueKeywords,\n    supportsAtComponent: true,\n    tokenHooks: {\n      \"/\": function(stream, state) {\n        if (!stream.eat(\"*\")) return false;\n        state.tokenize = tokenCComment;\n        return tokenCComment(stream, state);\n      }\n    },\n    name: \"css\",\n    helperType: \"gss\"\n  });\n\n});\n", "// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nvar htmlConfig = {\n  autoSelfClosers: {'area': true, 'base': true, 'br': true, 'col': true, 'command': true,\n                    'embed': true, 'frame': true, 'hr': true, 'img': true, 'input': true,\n                    'keygen': true, 'link': true, 'meta': true, 'param': true, 'source': true,\n                    'track': true, 'wbr': true, 'menuitem': true},\n  implicitlyClosed: {'dd': true, 'li': true, 'optgroup': true, 'option': true, 'p': true,\n                     'rp': true, 'rt': true, 'tbody': true, 'td': true, 'tfoot': true,\n                     'th': true, 'tr': true},\n  contextGrabbers: {\n    'dd': {'dd': true, 'dt': true},\n    'dt': {'dd': true, 'dt': true},\n    'li': {'li': true},\n    'option': {'option': true, 'optgroup': true},\n    'optgroup': {'optgroup': true},\n    'p': {'address': true, 'article': true, 'aside': true, 'blockquote': true, 'dir': true,\n          'div': true, 'dl': true, 'fieldset': true, 'footer': true, 'form': true,\n          'h1': true, 'h2': true, 'h3': true, 'h4': true, 'h5': true, 'h6': true,\n          'header': true, 'hgroup': true, 'hr': true, 'menu': true, 'nav': true, 'ol': true,\n          'p': true, 'pre': true, 'section': true, 'table': true, 'ul': true},\n    'rp': {'rp': true, 'rt': true},\n    'rt': {'rp': true, 'rt': true},\n    'tbody': {'tbody': true, 'tfoot': true},\n    'td': {'td': true, 'th': true},\n    'tfoot': {'tbody': true},\n    'th': {'td': true, 'th': true},\n    'thead': {'tbody': true, 'tfoot': true},\n    'tr': {'tr': true}\n  },\n  doNotIndent: {\"pre\": true},\n  allowUnquoted: true,\n  allowMissing: true,\n  caseFold: true\n}\n\nvar xmlConfig = {\n  autoSelfClosers: {},\n  implicitlyClosed: {},\n  contextGrabbers: {},\n  doNotIndent: {},\n  allowUnquoted: false,\n  allowMissing: false,\n  allowMissingTagName: false,\n  caseFold: false\n}\n\nCodeMirror.defineMode(\"xml\", function(editorConf, config_) {\n  var indentUnit = editorConf.indentUnit\n  var config = {}\n  var defaults = config_.htmlMode ? htmlConfig : xmlConfig\n  for (var prop in defaults) config[prop] = defaults[prop]\n  for (var prop in config_) config[prop] = config_[prop]\n\n  // Return variables for tokenizers\n  var type, setStyle;\n\n  function inText(stream, state) {\n    function chain(parser) {\n      state.tokenize = parser;\n      return parser(stream, state);\n    }\n\n    var ch = stream.next();\n    if (ch == \"<\") {\n      if (stream.eat(\"!\")) {\n        if (stream.eat(\"[\")) {\n          if (stream.match(\"CDATA[\")) return chain(inBlock(\"atom\", \"]]>\"));\n          else return null;\n        } else if (stream.match(\"--\")) {\n          return chain(inBlock(\"comment\", \"-->\"));\n        } else if (stream.match(\"DOCTYPE\", true, true)) {\n          stream.eatWhile(/[\\w\\._\\-]/);\n          return chain(doctype(1));\n        } else {\n          return null;\n        }\n      } else if (stream.eat(\"?\")) {\n        stream.eatWhile(/[\\w\\._\\-]/);\n        state.tokenize = inBlock(\"meta\", \"?>\");\n        return \"meta\";\n      } else {\n        type = stream.eat(\"/\") ? \"closeTag\" : \"openTag\";\n        state.tokenize = inTag;\n        return \"tag bracket\";\n      }\n    } else if (ch == \"&\") {\n      var ok;\n      if (stream.eat(\"#\")) {\n        if (stream.eat(\"x\")) {\n          ok = stream.eatWhile(/[a-fA-F\\d]/) && stream.eat(\";\");\n        } else {\n          ok = stream.eatWhile(/[\\d]/) && stream.eat(\";\");\n        }\n      } else {\n        ok = stream.eatWhile(/[\\w\\.\\-:]/) && stream.eat(\";\");\n      }\n      return ok ? \"atom\" : \"error\";\n    } else {\n      stream.eatWhile(/[^&<]/);\n      return null;\n    }\n  }\n  inText.isInText = true;\n\n  function inTag(stream, state) {\n    var ch = stream.next();\n    if (ch == \">\" || (ch == \"/\" && stream.eat(\">\"))) {\n      state.tokenize = inText;\n      type = ch == \">\" ? \"endTag\" : \"selfcloseTag\";\n      return \"tag bracket\";\n    } else if (ch == \"=\") {\n      type = \"equals\";\n      return null;\n    } else if (ch == \"<\") {\n      state.tokenize = inText;\n      state.state = baseState;\n      state.tagName = state.tagStart = null;\n      var next = state.tokenize(stream, state);\n      return next ? next + \" tag error\" : \"tag error\";\n    } else if (/[\\'\\\"]/.test(ch)) {\n      state.tokenize = inAttribute(ch);\n      state.stringStartCol = stream.column();\n      return state.tokenize(stream, state);\n    } else {\n      stream.match(/^[^\\s\\u00a0=<>\\\"\\']*[^\\s\\u00a0=<>\\\"\\'\\/]/);\n      return \"word\";\n    }\n  }\n\n  function inAttribute(quote) {\n    var closure = function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.next() == quote) {\n          state.tokenize = inTag;\n          break;\n        }\n      }\n      return \"string\";\n    };\n    closure.isInAttribute = true;\n    return closure;\n  }\n\n  function inBlock(style, terminator) {\n    return function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.match(terminator)) {\n          state.tokenize = inText;\n          break;\n        }\n        stream.next();\n      }\n      return style;\n    }\n  }\n\n  function doctype(depth) {\n    return function(stream, state) {\n      var ch;\n      while ((ch = stream.next()) != null) {\n        if (ch == \"<\") {\n          state.tokenize = doctype(depth + 1);\n          return state.tokenize(stream, state);\n        } else if (ch == \">\") {\n          if (depth == 1) {\n            state.tokenize = inText;\n            break;\n          } else {\n            state.tokenize = doctype(depth - 1);\n            return state.tokenize(stream, state);\n          }\n        }\n      }\n      return \"meta\";\n    };\n  }\n\n  function Context(state, tagName, startOfLine) {\n    this.prev = state.context;\n    this.tagName = tagName || \"\";\n    this.indent = state.indented;\n    this.startOfLine = startOfLine;\n    if (config.doNotIndent.hasOwnProperty(tagName) || (state.context && state.context.noIndent))\n      this.noIndent = true;\n  }\n  function popContext(state) {\n    if (state.context) state.context = state.context.prev;\n  }\n  function maybePopContext(state, nextTagName) {\n    var parentTagName;\n    while (true) {\n      if (!state.context) {\n        return;\n      }\n      parentTagName = state.context.tagName;\n      if (!config.contextGrabbers.hasOwnProperty(parentTagName) ||\n          !config.contextGrabbers[parentTagName].hasOwnProperty(nextTagName)) {\n        return;\n      }\n      popContext(state);\n    }\n  }\n\n  function baseState(type, stream, state) {\n    if (type == \"openTag\") {\n      state.tagStart = stream.column();\n      return tagNameState;\n    } else if (type == \"closeTag\") {\n      return closeTagNameState;\n    } else {\n      return baseState;\n    }\n  }\n  function tagNameState(type, stream, state) {\n    if (type == \"word\") {\n      state.tagName = stream.current();\n      setStyle = \"tag\";\n      return attrState;\n    } else if (config.allowMissingTagName && type == \"endTag\") {\n      setStyle = \"tag bracket\";\n      return attrState(type, stream, state);\n    } else {\n      setStyle = \"error\";\n      return tagNameState;\n    }\n  }\n  function closeTagNameState(type, stream, state) {\n    if (type == \"word\") {\n      var tagName = stream.current();\n      if (state.context && state.context.tagName != tagName &&\n          config.implicitlyClosed.hasOwnProperty(state.context.tagName))\n        popContext(state);\n      if ((state.context && state.context.tagName == tagName) || config.matchClosing === false) {\n        setStyle = \"tag\";\n        return closeState;\n      } else {\n        setStyle = \"tag error\";\n        return closeStateErr;\n      }\n    } else if (config.allowMissingTagName && type == \"endTag\") {\n      setStyle = \"tag bracket\";\n      return closeState(type, stream, state);\n    } else {\n      setStyle = \"error\";\n      return closeStateErr;\n    }\n  }\n\n  function closeState(type, _stream, state) {\n    if (type != \"endTag\") {\n      setStyle = \"error\";\n      return closeState;\n    }\n    popContext(state);\n    return baseState;\n  }\n  function closeStateErr(type, stream, state) {\n    setStyle = \"error\";\n    return closeState(type, stream, state);\n  }\n\n  function attrState(type, _stream, state) {\n    if (type == \"word\") {\n      setStyle = \"attribute\";\n      return attrEqState;\n    } else if (type == \"endTag\" || type == \"selfcloseTag\") {\n      var tagName = state.tagName, tagStart = state.tagStart;\n      state.tagName = state.tagStart = null;\n      if (type == \"selfcloseTag\" ||\n          config.autoSelfClosers.hasOwnProperty(tagName)) {\n        maybePopContext(state, tagName);\n      } else {\n        maybePopContext(state, tagName);\n        state.context = new Context(state, tagName, tagStart == state.indented);\n      }\n      return baseState;\n    }\n    setStyle = \"error\";\n    return attrState;\n  }\n  function attrEqState(type, stream, state) {\n    if (type == \"equals\") return attrValueState;\n    if (!config.allowMissing) setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrValueState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    if (type == \"word\" && config.allowUnquoted) {setStyle = \"string\"; return attrState;}\n    setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrContinuedState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    return attrState(type, stream, state);\n  }\n\n  return {\n    startState: function(baseIndent) {\n      var state = {tokenize: inText,\n                   state: baseState,\n                   indented: baseIndent || 0,\n                   tagName: null, tagStart: null,\n                   context: null}\n      if (baseIndent != null) state.baseIndent = baseIndent\n      return state\n    },\n\n    token: function(stream, state) {\n      if (!state.tagName && stream.sol())\n        state.indented = stream.indentation();\n\n      if (stream.eatSpace()) return null;\n      type = null;\n      var style = state.tokenize(stream, state);\n      if ((style || type) && style != \"comment\") {\n        setStyle = null;\n        state.state = state.state(type || style, stream, state);\n        if (setStyle)\n          style = setStyle == \"error\" ? style + \" error\" : setStyle;\n      }\n      return style;\n    },\n\n    indent: function(state, textAfter, fullLine) {\n      var context = state.context;\n      // Indent multi-line strings (e.g. css).\n      if (state.tokenize.isInAttribute) {\n        if (state.tagStart == state.indented)\n          return state.stringStartCol + 1;\n        else\n          return state.indented + indentUnit;\n      }\n      if (context && context.noIndent) return CodeMirror.Pass;\n      if (state.tokenize != inTag && state.tokenize != inText)\n        return fullLine ? fullLine.match(/^(\\s*)/)[0].length : 0;\n      // Indent the starts of attribute names.\n      if (state.tagName) {\n        if (config.multilineTagIndentPastTag !== false)\n          return state.tagStart + state.tagName.length + 2;\n        else\n          return state.tagStart + indentUnit * (config.multilineTagIndentFactor || 1);\n      }\n      if (config.alignCDATA && /<!\\[CDATA\\[/.test(textAfter)) return 0;\n      var tagAfter = textAfter && /^<(\\/)?([\\w_:\\.-]*)/.exec(textAfter);\n      if (tagAfter && tagAfter[1]) { // Closing tag spotted\n        while (context) {\n          if (context.tagName == tagAfter[2]) {\n            context = context.prev;\n            break;\n          } else if (config.implicitlyClosed.hasOwnProperty(context.tagName)) {\n            context = context.prev;\n          } else {\n            break;\n          }\n        }\n      } else if (tagAfter) { // Opening tag spotted\n        while (context) {\n          var grabbers = config.contextGrabbers[context.tagName];\n          if (grabbers && grabbers.hasOwnProperty(tagAfter[2]))\n            context = context.prev;\n          else\n            break;\n        }\n      }\n      while (context && context.prev && !context.startOfLine)\n        context = context.prev;\n      if (context) return context.indent + indentUnit;\n      else return state.baseIndent || 0;\n    },\n\n    electricInput: /<\\/[\\s\\w:]+>$/,\n    blockCommentStart: \"<!--\",\n    blockCommentEnd: \"-->\",\n\n    configuration: config.htmlMode ? \"html\" : \"xml\",\n    helperType: config.htmlMode ? \"html\" : \"xml\",\n\n    skipAttribute: function(state) {\n      if (state.state == attrValueState)\n        state.state = attrState\n    },\n\n    xmlCurrentTag: function(state) {\n      return state.tagName ? {name: state.tagName, close: state.type == \"closeTag\"} : null\n    },\n\n    xmlCurrentContext: function(state) {\n      var context = []\n      for (var cx = state.context; cx; cx = cx.prev)\n        context.push(cx.tagName)\n      return context.reverse()\n    }\n  };\n});\n\nCodeMirror.defineMIME(\"text/xml\", \"xml\");\nCodeMirror.defineMIME(\"application/xml\", \"xml\");\nif (!CodeMirror.mimeModes.hasOwnProperty(\"text/html\"))\n  CodeMirror.defineMIME(\"text/html\", {name: \"xml\", htmlMode: true});\n\n});\n", "// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"javascript\", function(config, parserConfig) {\n  var indentUnit = config.indentUnit;\n  var statementIndent = parserConfig.statementIndent;\n  var jsonldMode = parserConfig.jsonld;\n  var jsonMode = parserConfig.json || jsonldMode;\n  var trackScope = parserConfig.trackScope !== false\n  var isTS = parserConfig.typescript;\n  var wordRE = parserConfig.wordCharacters || /[\\w$\\xa1-\\uffff]/;\n\n  // Tokenizer\n\n  var keywords = function(){\n    function kw(type) {return {type: type, style: \"keyword\"};}\n    var A = kw(\"keyword a\"), B = kw(\"keyword b\"), C = kw(\"keyword c\"), D = kw(\"keyword d\");\n    var operator = kw(\"operator\"), atom = {type: \"atom\", style: \"atom\"};\n\n    return {\n      \"if\": kw(\"if\"), \"while\": A, \"with\": A, \"else\": B, \"do\": B, \"try\": B, \"finally\": B,\n      \"return\": D, \"break\": D, \"continue\": D, \"new\": kw(\"new\"), \"delete\": C, \"void\": C, \"throw\": C,\n      \"debugger\": kw(\"debugger\"), \"var\": kw(\"var\"), \"const\": kw(\"var\"), \"let\": kw(\"var\"),\n      \"function\": kw(\"function\"), \"catch\": kw(\"catch\"),\n      \"for\": kw(\"for\"), \"switch\": kw(\"switch\"), \"case\": kw(\"case\"), \"default\": kw(\"default\"),\n      \"in\": operator, \"typeof\": operator, \"instanceof\": operator,\n      \"true\": atom, \"false\": atom, \"null\": atom, \"undefined\": atom, \"NaN\": atom, \"Infinity\": atom,\n      \"this\": kw(\"this\"), \"class\": kw(\"class\"), \"super\": kw(\"atom\"),\n      \"yield\": C, \"export\": kw(\"export\"), \"import\": kw(\"import\"), \"extends\": C,\n      \"await\": C\n    };\n  }();\n\n  var isOperatorChar = /[+\\-*&%=<>!?|~^@]/;\n  var isJsonldKeyword = /^@(context|id|value|language|type|container|list|set|reverse|index|base|vocab|graph)\"/;\n\n  function readRegexp(stream) {\n    var escaped = false, next, inSet = false;\n    while ((next = stream.next()) != null) {\n      if (!escaped) {\n        if (next == \"/\" && !inSet) return;\n        if (next == \"[\") inSet = true;\n        else if (inSet && next == \"]\") inSet = false;\n      }\n      escaped = !escaped && next == \"\\\\\";\n    }\n  }\n\n  // Used as scratch variables to communicate multiple values without\n  // consing up tons of objects.\n  var type, content;\n  function ret(tp, style, cont) {\n    type = tp; content = cont;\n    return style;\n  }\n  function tokenBase(stream, state) {\n    var ch = stream.next();\n    if (ch == '\"' || ch == \"'\") {\n      state.tokenize = tokenString(ch);\n      return state.tokenize(stream, state);\n    } else if (ch == \".\" && stream.match(/^\\d[\\d_]*(?:[eE][+\\-]?[\\d_]+)?/)) {\n      return ret(\"number\", \"number\");\n    } else if (ch == \".\" && stream.match(\"..\")) {\n      return ret(\"spread\", \"meta\");\n    } else if (/[\\[\\]{}\\(\\),;\\:\\.]/.test(ch)) {\n      return ret(ch);\n    } else if (ch == \"=\" && stream.eat(\">\")) {\n      return ret(\"=>\", \"operator\");\n    } else if (ch == \"0\" && stream.match(/^(?:x[\\dA-Fa-f_]+|o[0-7_]+|b[01_]+)n?/)) {\n      return ret(\"number\", \"number\");\n    } else if (/\\d/.test(ch)) {\n      stream.match(/^[\\d_]*(?:n|(?:\\.[\\d_]*)?(?:[eE][+\\-]?[\\d_]+)?)?/);\n      return ret(\"number\", \"number\");\n    } else if (ch == \"/\") {\n      if (stream.eat(\"*\")) {\n        state.tokenize = tokenComment;\n        return tokenComment(stream, state);\n      } else if (stream.eat(\"/\")) {\n        stream.skipToEnd();\n        return ret(\"comment\", \"comment\");\n      } else if (expressionAllowed(stream, state, 1)) {\n        readRegexp(stream);\n        stream.match(/^\\b(([gimyus])(?![gimyus]*\\2))+\\b/);\n        return ret(\"regexp\", \"string-2\");\n      } else {\n        stream.eat(\"=\");\n        return ret(\"operator\", \"operator\", stream.current());\n      }\n    } else if (ch == \"`\") {\n      state.tokenize = tokenQuasi;\n      return tokenQuasi(stream, state);\n    } else if (ch == \"#\" && stream.peek() == \"!\") {\n      stream.skipToEnd();\n      return ret(\"meta\", \"meta\");\n    } else if (ch == \"#\" && stream.eatWhile(wordRE)) {\n      return ret(\"variable\", \"property\")\n    } else if (ch == \"<\" && stream.match(\"!--\") ||\n               (ch == \"-\" && stream.match(\"->\") && !/\\S/.test(stream.string.slice(0, stream.start)))) {\n      stream.skipToEnd()\n      return ret(\"comment\", \"comment\")\n    } else if (isOperatorChar.test(ch)) {\n      if (ch != \">\" || !state.lexical || state.lexical.type != \">\") {\n        if (stream.eat(\"=\")) {\n          if (ch == \"!\" || ch == \"=\") stream.eat(\"=\")\n        } else if (/[<>*+\\-|&?]/.test(ch)) {\n          stream.eat(ch)\n          if (ch == \">\") stream.eat(ch)\n        }\n      }\n      if (ch == \"?\" && stream.eat(\".\")) return ret(\".\")\n      return ret(\"operator\", \"operator\", stream.current());\n    } else if (wordRE.test(ch)) {\n      stream.eatWhile(wordRE);\n      var word = stream.current()\n      if (state.lastType != \".\") {\n        if (keywords.propertyIsEnumerable(word)) {\n          var kw = keywords[word]\n          return ret(kw.type, kw.style, word)\n        }\n        if (word == \"async\" && stream.match(/^(\\s|\\/\\*([^*]|\\*(?!\\/))*?\\*\\/)*[\\[\\(\\w]/, false))\n          return ret(\"async\", \"keyword\", word)\n      }\n      return ret(\"variable\", \"variable\", word)\n    }\n  }\n\n  function tokenString(quote) {\n    return function(stream, state) {\n      var escaped = false, next;\n      if (jsonldMode && stream.peek() == \"@\" && stream.match(isJsonldKeyword)){\n        state.tokenize = tokenBase;\n        return ret(\"jsonld-keyword\", \"meta\");\n      }\n      while ((next = stream.next()) != null) {\n        if (next == quote && !escaped) break;\n        escaped = !escaped && next == \"\\\\\";\n      }\n      if (!escaped) state.tokenize = tokenBase;\n      return ret(\"string\", \"string\");\n    };\n  }\n\n  function tokenComment(stream, state) {\n    var maybeEnd = false, ch;\n    while (ch = stream.next()) {\n      if (ch == \"/\" && maybeEnd) {\n        state.tokenize = tokenBase;\n        break;\n      }\n      maybeEnd = (ch == \"*\");\n    }\n    return ret(\"comment\", \"comment\");\n  }\n\n  function tokenQuasi(stream, state) {\n    var escaped = false, next;\n    while ((next = stream.next()) != null) {\n      if (!escaped && (next == \"`\" || next == \"$\" && stream.eat(\"{\"))) {\n        state.tokenize = tokenBase;\n        break;\n      }\n      escaped = !escaped && next == \"\\\\\";\n    }\n    return ret(\"quasi\", \"string-2\", stream.current());\n  }\n\n  var brackets = \"([{}])\";\n  // This is a crude lookahead trick to try and notice that we're\n  // parsing the argument patterns for a fat-arrow function before we\n  // actually hit the arrow token. It only works if the arrow is on\n  // the same line as the arguments and there's no strange noise\n  // (comments) in between. Fallback is to only notice when we hit the\n  // arrow, and not declare the arguments as locals for the arrow\n  // body.\n  function findFatArrow(stream, state) {\n    if (state.fatArrowAt) state.fatArrowAt = null;\n    var arrow = stream.string.indexOf(\"=>\", stream.start);\n    if (arrow < 0) return;\n\n    if (isTS) { // Try to skip TypeScript return type declarations after the arguments\n      var m = /:\\s*(?:\\w+(?:<[^>]*>|\\[\\])?|\\{[^}]*\\})\\s*$/.exec(stream.string.slice(stream.start, arrow))\n      if (m) arrow = m.index\n    }\n\n    var depth = 0, sawSomething = false;\n    for (var pos = arrow - 1; pos >= 0; --pos) {\n      var ch = stream.string.charAt(pos);\n      var bracket = brackets.indexOf(ch);\n      if (bracket >= 0 && bracket < 3) {\n        if (!depth) { ++pos; break; }\n        if (--depth == 0) { if (ch == \"(\") sawSomething = true; break; }\n      } else if (bracket >= 3 && bracket < 6) {\n        ++depth;\n      } else if (wordRE.test(ch)) {\n        sawSomething = true;\n      } else if (/[\"'\\/`]/.test(ch)) {\n        for (;; --pos) {\n          if (pos == 0) return\n          var next = stream.string.charAt(pos - 1)\n          if (next == ch && stream.string.charAt(pos - 2) != \"\\\\\") { pos--; break }\n        }\n      } else if (sawSomething && !depth) {\n        ++pos;\n        break;\n      }\n    }\n    if (sawSomething && !depth) state.fatArrowAt = pos;\n  }\n\n  // Parser\n\n  var atomicTypes = {\"atom\": true, \"number\": true, \"variable\": true, \"string\": true,\n                     \"regexp\": true, \"this\": true, \"import\": true, \"jsonld-keyword\": true};\n\n  function JSLexical(indented, column, type, align, prev, info) {\n    this.indented = indented;\n    this.column = column;\n    this.type = type;\n    this.prev = prev;\n    this.info = info;\n    if (align != null) this.align = align;\n  }\n\n  function inScope(state, varname) {\n    if (!trackScope) return false\n    for (var v = state.localVars; v; v = v.next)\n      if (v.name == varname) return true;\n    for (var cx = state.context; cx; cx = cx.prev) {\n      for (var v = cx.vars; v; v = v.next)\n        if (v.name == varname) return true;\n    }\n  }\n\n  function parseJS(state, style, type, content, stream) {\n    var cc = state.cc;\n    // Communicate our context to the combinators.\n    // (Less wasteful than consing up a hundred closures on every call.)\n    cx.state = state; cx.stream = stream; cx.marked = null, cx.cc = cc; cx.style = style;\n\n    if (!state.lexical.hasOwnProperty(\"align\"))\n      state.lexical.align = true;\n\n    while(true) {\n      var combinator = cc.length ? cc.pop() : jsonMode ? expression : statement;\n      if (combinator(type, content)) {\n        while(cc.length && cc[cc.length - 1].lex)\n          cc.pop()();\n        if (cx.marked) return cx.marked;\n        if (type == \"variable\" && inScope(state, content)) return \"variable-2\";\n        return style;\n      }\n    }\n  }\n\n  // Combinator utils\n\n  var cx = {state: null, column: null, marked: null, cc: null};\n  function pass() {\n    for (var i = arguments.length - 1; i >= 0; i--) cx.cc.push(arguments[i]);\n  }\n  function cont() {\n    pass.apply(null, arguments);\n    return true;\n  }\n  function inList(name, list) {\n    for (var v = list; v; v = v.next) if (v.name == name) return true\n    return false;\n  }\n  function register(varname) {\n    var state = cx.state;\n    cx.marked = \"def\";\n    if (!trackScope) return\n    if (state.context) {\n      if (state.lexical.info == \"var\" && state.context && state.context.block) {\n        // FIXME function decls are also not block scoped\n        var newContext = registerVarScoped(varname, state.context)\n        if (newContext != null) {\n          state.context = newContext\n          return\n        }\n      } else if (!inList(varname, state.localVars)) {\n        state.localVars = new Var(varname, state.localVars)\n        return\n      }\n    }\n    // Fall through means this is global\n    if (parserConfig.globalVars && !inList(varname, state.globalVars))\n      state.globalVars = new Var(varname, state.globalVars)\n  }\n  function registerVarScoped(varname, context) {\n    if (!context) {\n      return null\n    } else if (context.block) {\n      var inner = registerVarScoped(varname, context.prev)\n      if (!inner) return null\n      if (inner == context.prev) return context\n      return new Context(inner, context.vars, true)\n    } else if (inList(varname, context.vars)) {\n      return context\n    } else {\n      return new Context(context.prev, new Var(varname, context.vars), false)\n    }\n  }\n\n  function isModifier(name) {\n    return name == \"public\" || name == \"private\" || name == \"protected\" || name == \"abstract\" || name == \"readonly\"\n  }\n\n  // Combinators\n\n  function Context(prev, vars, block) { this.prev = prev; this.vars = vars; this.block = block }\n  function Var(name, next) { this.name = name; this.next = next }\n\n  var defaultVars = new Var(\"this\", new Var(\"arguments\", null))\n  function pushcontext() {\n    cx.state.context = new Context(cx.state.context, cx.state.localVars, false)\n    cx.state.localVars = defaultVars\n  }\n  function pushblockcontext() {\n    cx.state.context = new Context(cx.state.context, cx.state.localVars, true)\n    cx.state.localVars = null\n  }\n  function popcontext() {\n    cx.state.localVars = cx.state.context.vars\n    cx.state.context = cx.state.context.prev\n  }\n  popcontext.lex = true\n  function pushlex(type, info) {\n    var result = function() {\n      var state = cx.state, indent = state.indented;\n      if (state.lexical.type == \"stat\") indent = state.lexical.indented;\n      else for (var outer = state.lexical; outer && outer.type == \")\" && outer.align; outer = outer.prev)\n        indent = outer.indented;\n      state.lexical = new JSLexical(indent, cx.stream.column(), type, null, state.lexical, info);\n    };\n    result.lex = true;\n    return result;\n  }\n  function poplex() {\n    var state = cx.state;\n    if (state.lexical.prev) {\n      if (state.lexical.type == \")\")\n        state.indented = state.lexical.indented;\n      state.lexical = state.lexical.prev;\n    }\n  }\n  poplex.lex = true;\n\n  function expect(wanted) {\n    function exp(type) {\n      if (type == wanted) return cont();\n      else if (wanted == \";\" || type == \"}\" || type == \")\" || type == \"]\") return pass();\n      else return cont(exp);\n    };\n    return exp;\n  }\n\n  function statement(type, value) {\n    if (type == \"var\") return cont(pushlex(\"vardef\", value), vardef, expect(\";\"), poplex);\n    if (type == \"keyword a\") return cont(pushlex(\"form\"), parenExpr, statement, poplex);\n    if (type == \"keyword b\") return cont(pushlex(\"form\"), statement, poplex);\n    if (type == \"keyword d\") return cx.stream.match(/^\\s*$/, false) ? cont() : cont(pushlex(\"stat\"), maybeexpression, expect(\";\"), poplex);\n    if (type == \"debugger\") return cont(expect(\";\"));\n    if (type == \"{\") return cont(pushlex(\"}\"), pushblockcontext, block, poplex, popcontext);\n    if (type == \";\") return cont();\n    if (type == \"if\") {\n      if (cx.state.lexical.info == \"else\" && cx.state.cc[cx.state.cc.length - 1] == poplex)\n        cx.state.cc.pop()();\n      return cont(pushlex(\"form\"), parenExpr, statement, poplex, maybeelse);\n    }\n    if (type == \"function\") return cont(functiondef);\n    if (type == \"for\") return cont(pushlex(\"form\"), pushblockcontext, forspec, statement, popcontext, poplex);\n    if (type == \"class\" || (isTS && value == \"interface\")) {\n      cx.marked = \"keyword\"\n      return cont(pushlex(\"form\", type == \"class\" ? type : value), className, poplex)\n    }\n    if (type == \"variable\") {\n      if (isTS && value == \"declare\") {\n        cx.marked = \"keyword\"\n        return cont(statement)\n      } else if (isTS && (value == \"module\" || value == \"enum\" || value == \"type\") && cx.stream.match(/^\\s*\\w/, false)) {\n        cx.marked = \"keyword\"\n        if (value == \"enum\") return cont(enumdef);\n        else if (value == \"type\") return cont(typename, expect(\"operator\"), typeexpr, expect(\";\"));\n        else return cont(pushlex(\"form\"), pattern, expect(\"{\"), pushlex(\"}\"), block, poplex, poplex)\n      } else if (isTS && value == \"namespace\") {\n        cx.marked = \"keyword\"\n        return cont(pushlex(\"form\"), expression, statement, poplex)\n      } else if (isTS && value == \"abstract\") {\n        cx.marked = \"keyword\"\n        return cont(statement)\n      } else {\n        return cont(pushlex(\"stat\"), maybelabel);\n      }\n    }\n    if (type == \"switch\") return cont(pushlex(\"form\"), parenExpr, expect(\"{\"), pushlex(\"}\", \"switch\"), pushblockcontext,\n                                      block, poplex, poplex, popcontext);\n    if (type == \"case\") return cont(expression, expect(\":\"));\n    if (type == \"default\") return cont(expect(\":\"));\n    if (type == \"catch\") return cont(pushlex(\"form\"), pushcontext, maybeCatchBinding, statement, poplex, popcontext);\n    if (type == \"export\") return cont(pushlex(\"stat\"), afterExport, poplex);\n    if (type == \"import\") return cont(pushlex(\"stat\"), afterImport, poplex);\n    if (type == \"async\") return cont(statement)\n    if (value == \"@\") return cont(expression, statement)\n    return pass(pushlex(\"stat\"), expression, expect(\";\"), poplex);\n  }\n  function maybeCatchBinding(type) {\n    if (type == \"(\") return cont(funarg, expect(\")\"))\n  }\n  function expression(type, value) {\n    return expressionInner(type, value, false);\n  }\n  function expressionNoComma(type, value) {\n    return expressionInner(type, value, true);\n  }\n  function parenExpr(type) {\n    if (type != \"(\") return pass()\n    return cont(pushlex(\")\"), maybeexpression, expect(\")\"), poplex)\n  }\n  function expressionInner(type, value, noComma) {\n    if (cx.state.fatArrowAt == cx.stream.start) {\n      var body = noComma ? arrowBodyNoComma : arrowBody;\n      if (type == \"(\") return cont(pushcontext, pushlex(\")\"), commasep(funarg, \")\"), poplex, expect(\"=>\"), body, popcontext);\n      else if (type == \"variable\") return pass(pushcontext, pattern, expect(\"=>\"), body, popcontext);\n    }\n\n    var maybeop = noComma ? maybeoperatorNoComma : maybeoperatorComma;\n    if (atomicTypes.hasOwnProperty(type)) return cont(maybeop);\n    if (type == \"function\") return cont(functiondef, maybeop);\n    if (type == \"class\" || (isTS && value == \"interface\")) { cx.marked = \"keyword\"; return cont(pushlex(\"form\"), classExpression, poplex); }\n    if (type == \"keyword c\" || type == \"async\") return cont(noComma ? expressionNoComma : expression);\n    if (type == \"(\") return cont(pushlex(\")\"), maybeexpression, expect(\")\"), poplex, maybeop);\n    if (type == \"operator\" || type == \"spread\") return cont(noComma ? expressionNoComma : expression);\n    if (type == \"[\") return cont(pushlex(\"]\"), arrayLiteral, poplex, maybeop);\n    if (type == \"{\") return contCommasep(objprop, \"}\", null, maybeop);\n    if (type == \"quasi\") return pass(quasi, maybeop);\n    if (type == \"new\") return cont(maybeTarget(noComma));\n    return cont();\n  }\n  function maybeexpression(type) {\n    if (type.match(/[;\\}\\)\\],]/)) return pass();\n    return pass(expression);\n  }\n\n  function maybeoperatorComma(type, value) {\n    if (type == \",\") return cont(maybeexpression);\n    return maybeoperatorNoComma(type, value, false);\n  }\n  function maybeoperatorNoComma(type, value, noComma) {\n    var me = noComma == false ? maybeoperatorComma : maybeoperatorNoComma;\n    var expr = noComma == false ? expression : expressionNoComma;\n    if (type == \"=>\") return cont(pushcontext, noComma ? arrowBodyNoComma : arrowBody, popcontext);\n    if (type == \"operator\") {\n      if (/\\+\\+|--/.test(value) || isTS && value == \"!\") return cont(me);\n      if (isTS && value == \"<\" && cx.stream.match(/^([^<>]|<[^<>]*>)*>\\s*\\(/, false))\n        return cont(pushlex(\">\"), commasep(typeexpr, \">\"), poplex, me);\n      if (value == \"?\") return cont(expression, expect(\":\"), expr);\n      return cont(expr);\n    }\n    if (type == \"quasi\") { return pass(quasi, me); }\n    if (type == \";\") return;\n    if (type == \"(\") return contCommasep(expressionNoComma, \")\", \"call\", me);\n    if (type == \".\") return cont(property, me);\n    if (type == \"[\") return cont(pushlex(\"]\"), maybeexpression, expect(\"]\"), poplex, me);\n    if (isTS && value == \"as\") { cx.marked = \"keyword\"; return cont(typeexpr, me) }\n    if (type == \"regexp\") {\n      cx.state.lastType = cx.marked = \"operator\"\n      cx.stream.backUp(cx.stream.pos - cx.stream.start - 1)\n      return cont(expr)\n    }\n  }\n  function quasi(type, value) {\n    if (type != \"quasi\") return pass();\n    if (value.slice(value.length - 2) != \"${\") return cont(quasi);\n    return cont(expression, continueQuasi);\n  }\n  function continueQuasi(type) {\n    if (type == \"}\") {\n      cx.marked = \"string-2\";\n      cx.state.tokenize = tokenQuasi;\n      return cont(quasi);\n    }\n  }\n  function arrowBody(type) {\n    findFatArrow(cx.stream, cx.state);\n    return pass(type == \"{\" ? statement : expression);\n  }\n  function arrowBodyNoComma(type) {\n    findFatArrow(cx.stream, cx.state);\n    return pass(type == \"{\" ? statement : expressionNoComma);\n  }\n  function maybeTarget(noComma) {\n    return function(type) {\n      if (type == \".\") return cont(noComma ? targetNoComma : target);\n      else if (type == \"variable\" && isTS) return cont(maybeTypeArgs, noComma ? maybeoperatorNoComma : maybeoperatorComma)\n      else return pass(noComma ? expressionNoComma : expression);\n    };\n  }\n  function target(_, value) {\n    if (value == \"target\") { cx.marked = \"keyword\"; return cont(maybeoperatorComma); }\n  }\n  function targetNoComma(_, value) {\n    if (value == \"target\") { cx.marked = \"keyword\"; return cont(maybeoperatorNoComma); }\n  }\n  function maybelabel(type) {\n    if (type == \":\") return cont(poplex, statement);\n    return pass(maybeoperatorComma, expect(\";\"), poplex);\n  }\n  function property(type) {\n    if (type == \"variable\") {cx.marked = \"property\"; return cont();}\n  }\n  function objprop(type, value) {\n    if (type == \"async\") {\n      cx.marked = \"property\";\n      return cont(objprop);\n    } else if (type == \"variable\" || cx.style == \"keyword\") {\n      cx.marked = \"property\";\n      if (value == \"get\" || value == \"set\") return cont(getterSetter);\n      var m // Work around fat-arrow-detection complication for detecting typescript typed arrow params\n      if (isTS && cx.state.fatArrowAt == cx.stream.start && (m = cx.stream.match(/^\\s*:\\s*/, false)))\n        cx.state.fatArrowAt = cx.stream.pos + m[0].length\n      return cont(afterprop);\n    } else if (type == \"number\" || type == \"string\") {\n      cx.marked = jsonldMode ? \"property\" : (cx.style + \" property\");\n      return cont(afterprop);\n    } else if (type == \"jsonld-keyword\") {\n      return cont(afterprop);\n    } else if (isTS && isModifier(value)) {\n      cx.marked = \"keyword\"\n      return cont(objprop)\n    } else if (type == \"[\") {\n      return cont(expression, maybetype, expect(\"]\"), afterprop);\n    } else if (type == \"spread\") {\n      return cont(expressionNoComma, afterprop);\n    } else if (value == \"*\") {\n      cx.marked = \"keyword\";\n      return cont(objprop);\n    } else if (type == \":\") {\n      return pass(afterprop)\n    }\n  }\n  function getterSetter(type) {\n    if (type != \"variable\") return pass(afterprop);\n    cx.marked = \"property\";\n    return cont(functiondef);\n  }\n  function afterprop(type) {\n    if (type == \":\") return cont(expressionNoComma);\n    if (type == \"(\") return pass(functiondef);\n  }\n  function commasep(what, end, sep) {\n    function proceed(type, value) {\n      if (sep ? sep.indexOf(type) > -1 : type == \",\") {\n        var lex = cx.state.lexical;\n        if (lex.info == \"call\") lex.pos = (lex.pos || 0) + 1;\n        return cont(function(type, value) {\n          if (type == end || value == end) return pass()\n          return pass(what)\n        }, proceed);\n      }\n      if (type == end || value == end) return cont();\n      if (sep && sep.indexOf(\";\") > -1) return pass(what)\n      return cont(expect(end));\n    }\n    return function(type, value) {\n      if (type == end || value == end) return cont();\n      return pass(what, proceed);\n    };\n  }\n  function contCommasep(what, end, info) {\n    for (var i = 3; i < arguments.length; i++)\n      cx.cc.push(arguments[i]);\n    return cont(pushlex(end, info), commasep(what, end), poplex);\n  }\n  function block(type) {\n    if (type == \"}\") return cont();\n    return pass(statement, block);\n  }\n  function maybetype(type, value) {\n    if (isTS) {\n      if (type == \":\") return cont(typeexpr);\n      if (value == \"?\") return cont(maybetype);\n    }\n  }\n  function maybetypeOrIn(type, value) {\n    if (isTS && (type == \":\" || value == \"in\")) return cont(typeexpr)\n  }\n  function mayberettype(type) {\n    if (isTS && type == \":\") {\n      if (cx.stream.match(/^\\s*\\w+\\s+is\\b/, false)) return cont(expression, isKW, typeexpr)\n      else return cont(typeexpr)\n    }\n  }\n  function isKW(_, value) {\n    if (value == \"is\") {\n      cx.marked = \"keyword\"\n      return cont()\n    }\n  }\n  function typeexpr(type, value) {\n    if (value == \"keyof\" || value == \"typeof\" || value == \"infer\" || value == \"readonly\") {\n      cx.marked = \"keyword\"\n      return cont(value == \"typeof\" ? expressionNoComma : typeexpr)\n    }\n    if (type == \"variable\" || value == \"void\") {\n      cx.marked = \"type\"\n      return cont(afterType)\n    }\n    if (value == \"|\" || value == \"&\") return cont(typeexpr)\n    if (type == \"string\" || type == \"number\" || type == \"atom\") return cont(afterType);\n    if (type == \"[\") return cont(pushlex(\"]\"), commasep(typeexpr, \"]\", \",\"), poplex, afterType)\n    if (type == \"{\") return cont(pushlex(\"}\"), typeprops, poplex, afterType)\n    if (type == \"(\") return cont(commasep(typearg, \")\"), maybeReturnType, afterType)\n    if (type == \"<\") return cont(commasep(typeexpr, \">\"), typeexpr)\n  }\n  function maybeReturnType(type) {\n    if (type == \"=>\") return cont(typeexpr)\n  }\n  function typeprops(type) {\n    if (type.match(/[\\}\\)\\]]/)) return cont()\n    if (type == \",\" || type == \";\") return cont(typeprops)\n    return pass(typeprop, typeprops)\n  }\n  function typeprop(type, value) {\n    if (type == \"variable\" || cx.style == \"keyword\") {\n      cx.marked = \"property\"\n      return cont(typeprop)\n    } else if (value == \"?\" || type == \"number\" || type == \"string\") {\n      return cont(typeprop)\n    } else if (type == \":\") {\n      return cont(typeexpr)\n    } else if (type == \"[\") {\n      return cont(expect(\"variable\"), maybetypeOrIn, expect(\"]\"), typeprop)\n    } else if (type == \"(\") {\n      return pass(functiondecl, typeprop)\n    } else if (!type.match(/[;\\}\\)\\],]/)) {\n      return cont()\n    }\n  }\n  function typearg(type, value) {\n    if (type == \"variable\" && cx.stream.match(/^\\s*[?:]/, false) || value == \"?\") return cont(typearg)\n    if (type == \":\") return cont(typeexpr)\n    if (type == \"spread\") return cont(typearg)\n    return pass(typeexpr)\n  }\n  function afterType(type, value) {\n    if (value == \"<\") return cont(pushlex(\">\"), commasep(typeexpr, \">\"), poplex, afterType)\n    if (value == \"|\" || type == \".\" || value == \"&\") return cont(typeexpr)\n    if (type == \"[\") return cont(typeexpr, expect(\"]\"), afterType)\n    if (value == \"extends\" || value == \"implements\") { cx.marked = \"keyword\"; return cont(typeexpr) }\n    if (value == \"?\") return cont(typeexpr, expect(\":\"), typeexpr)\n  }\n  function maybeTypeArgs(_, value) {\n    if (value == \"<\") return cont(pushlex(\">\"), commasep(typeexpr, \">\"), poplex, afterType)\n  }\n  function typeparam() {\n    return pass(typeexpr, maybeTypeDefault)\n  }\n  function maybeTypeDefault(_, value) {\n    if (value == \"=\") return cont(typeexpr)\n  }\n  function vardef(_, value) {\n    if (value == \"enum\") {cx.marked = \"keyword\"; return cont(enumdef)}\n    return pass(pattern, maybetype, maybeAssign, vardefCont);\n  }\n  function pattern(type, value) {\n    if (isTS && isModifier(value)) { cx.marked = \"keyword\"; return cont(pattern) }\n    if (type == \"variable\") { register(value); return cont(); }\n    if (type == \"spread\") return cont(pattern);\n    if (type == \"[\") return contCommasep(eltpattern, \"]\");\n    if (type == \"{\") return contCommasep(proppattern, \"}\");\n  }\n  function proppattern(type, value) {\n    if (type == \"variable\" && !cx.stream.match(/^\\s*:/, false)) {\n      register(value);\n      return cont(maybeAssign);\n    }\n    if (type == \"variable\") cx.marked = \"property\";\n    if (type == \"spread\") return cont(pattern);\n    if (type == \"}\") return pass();\n    if (type == \"[\") return cont(expression, expect(']'), expect(':'), proppattern);\n    return cont(expect(\":\"), pattern, maybeAssign);\n  }\n  function eltpattern() {\n    return pass(pattern, maybeAssign)\n  }\n  function maybeAssign(_type, value) {\n    if (value == \"=\") return cont(expressionNoComma);\n  }\n  function vardefCont(type) {\n    if (type == \",\") return cont(vardef);\n  }\n  function maybeelse(type, value) {\n    if (type == \"keyword b\" && value == \"else\") return cont(pushlex(\"form\", \"else\"), statement, poplex);\n  }\n  function forspec(type, value) {\n    if (value == \"await\") return cont(forspec);\n    if (type == \"(\") return cont(pushlex(\")\"), forspec1, poplex);\n  }\n  function forspec1(type) {\n    if (type == \"var\") return cont(vardef, forspec2);\n    if (type == \"variable\") return cont(forspec2);\n    return pass(forspec2)\n  }\n  function forspec2(type, value) {\n    if (type == \")\") return cont()\n    if (type == \";\") return cont(forspec2)\n    if (value == \"in\" || value == \"of\") { cx.marked = \"keyword\"; return cont(expression, forspec2) }\n    return pass(expression, forspec2)\n  }\n  function functiondef(type, value) {\n    if (value == \"*\") {cx.marked = \"keyword\"; return cont(functiondef);}\n    if (type == \"variable\") {register(value); return cont(functiondef);}\n    if (type == \"(\") return cont(pushcontext, pushlex(\")\"), commasep(funarg, \")\"), poplex, mayberettype, statement, popcontext);\n    if (isTS && value == \"<\") return cont(pushlex(\">\"), commasep(typeparam, \">\"), poplex, functiondef)\n  }\n  function functiondecl(type, value) {\n    if (value == \"*\") {cx.marked = \"keyword\"; return cont(functiondecl);}\n    if (type == \"variable\") {register(value); return cont(functiondecl);}\n    if (type == \"(\") return cont(pushcontext, pushlex(\")\"), commasep(funarg, \")\"), poplex, mayberettype, popcontext);\n    if (isTS && value == \"<\") return cont(pushlex(\">\"), commasep(typeparam, \">\"), poplex, functiondecl)\n  }\n  function typename(type, value) {\n    if (type == \"keyword\" || type == \"variable\") {\n      cx.marked = \"type\"\n      return cont(typename)\n    } else if (value == \"<\") {\n      return cont(pushlex(\">\"), commasep(typeparam, \">\"), poplex)\n    }\n  }\n  function funarg(type, value) {\n    if (value == \"@\") cont(expression, funarg)\n    if (type == \"spread\") return cont(funarg);\n    if (isTS && isModifier(value)) { cx.marked = \"keyword\"; return cont(funarg); }\n    if (isTS && type == \"this\") return cont(maybetype, maybeAssign)\n    return pass(pattern, maybetype, maybeAssign);\n  }\n  function classExpression(type, value) {\n    // Class expressions may have an optional name.\n    if (type == \"variable\") return className(type, value);\n    return classNameAfter(type, value);\n  }\n  function className(type, value) {\n    if (type == \"variable\") {register(value); return cont(classNameAfter);}\n  }\n  function classNameAfter(type, value) {\n    if (value == \"<\") return cont(pushlex(\">\"), commasep(typeparam, \">\"), poplex, classNameAfter)\n    if (value == \"extends\" || value == \"implements\" || (isTS && type == \",\")) {\n      if (value == \"implements\") cx.marked = \"keyword\";\n      return cont(isTS ? typeexpr : expression, classNameAfter);\n    }\n    if (type == \"{\") return cont(pushlex(\"}\"), classBody, poplex);\n  }\n  function classBody(type, value) {\n    if (type == \"async\" ||\n        (type == \"variable\" &&\n         (value == \"static\" || value == \"get\" || value == \"set\" || (isTS && isModifier(value))) &&\n         cx.stream.match(/^\\s+[\\w$\\xa1-\\uffff]/, false))) {\n      cx.marked = \"keyword\";\n      return cont(classBody);\n    }\n    if (type == \"variable\" || cx.style == \"keyword\") {\n      cx.marked = \"property\";\n      return cont(classfield, classBody);\n    }\n    if (type == \"number\" || type == \"string\") return cont(classfield, classBody);\n    if (type == \"[\")\n      return cont(expression, maybetype, expect(\"]\"), classfield, classBody)\n    if (value == \"*\") {\n      cx.marked = \"keyword\";\n      return cont(classBody);\n    }\n    if (isTS && type == \"(\") return pass(functiondecl, classBody)\n    if (type == \";\" || type == \",\") return cont(classBody);\n    if (type == \"}\") return cont();\n    if (value == \"@\") return cont(expression, classBody)\n  }\n  function classfield(type, value) {\n    if (value == \"?\") return cont(classfield)\n    if (type == \":\") return cont(typeexpr, maybeAssign)\n    if (value == \"=\") return cont(expressionNoComma)\n    var context = cx.state.lexical.prev, isInterface = context && context.info == \"interface\"\n    return pass(isInterface ? functiondecl : functiondef)\n  }\n  function afterExport(type, value) {\n    if (value == \"*\") { cx.marked = \"keyword\"; return cont(maybeFrom, expect(\";\")); }\n    if (value == \"default\") { cx.marked = \"keyword\"; return cont(expression, expect(\";\")); }\n    if (type == \"{\") return cont(commasep(exportField, \"}\"), maybeFrom, expect(\";\"));\n    return pass(statement);\n  }\n  function exportField(type, value) {\n    if (value == \"as\") { cx.marked = \"keyword\"; return cont(expect(\"variable\")); }\n    if (type == \"variable\") return pass(expressionNoComma, exportField);\n  }\n  function afterImport(type) {\n    if (type == \"string\") return cont();\n    if (type == \"(\") return pass(expression);\n    if (type == \".\") return pass(maybeoperatorComma);\n    return pass(importSpec, maybeMoreImports, maybeFrom);\n  }\n  function importSpec(type, value) {\n    if (type == \"{\") return contCommasep(importSpec, \"}\");\n    if (type == \"variable\") register(value);\n    if (value == \"*\") cx.marked = \"keyword\";\n    return cont(maybeAs);\n  }\n  function maybeMoreImports(type) {\n    if (type == \",\") return cont(importSpec, maybeMoreImports)\n  }\n  function maybeAs(_type, value) {\n    if (value == \"as\") { cx.marked = \"keyword\"; return cont(importSpec); }\n  }\n  function maybeFrom(_type, value) {\n    if (value == \"from\") { cx.marked = \"keyword\"; return cont(expression); }\n  }\n  function arrayLiteral(type) {\n    if (type == \"]\") return cont();\n    return pass(commasep(expressionNoComma, \"]\"));\n  }\n  function enumdef() {\n    return pass(pushlex(\"form\"), pattern, expect(\"{\"), pushlex(\"}\"), commasep(enummember, \"}\"), poplex, poplex)\n  }\n  function enummember() {\n    return pass(pattern, maybeAssign);\n  }\n\n  function isContinuedStatement(state, textAfter) {\n    return state.lastType == \"operator\" || state.lastType == \",\" ||\n      isOperatorChar.test(textAfter.charAt(0)) ||\n      /[,.]/.test(textAfter.charAt(0));\n  }\n\n  function expressionAllowed(stream, state, backUp) {\n    return state.tokenize == tokenBase &&\n      /^(?:operator|sof|keyword [bcd]|case|new|export|default|spread|[\\[{}\\(,;:]|=>)$/.test(state.lastType) ||\n      (state.lastType == \"quasi\" && /\\{\\s*$/.test(stream.string.slice(0, stream.pos - (backUp || 0))))\n  }\n\n  // Interface\n\n  return {\n    startState: function(basecolumn) {\n      var state = {\n        tokenize: tokenBase,\n        lastType: \"sof\",\n        cc: [],\n        lexical: new JSLexical((basecolumn || 0) - indentUnit, 0, \"block\", false),\n        localVars: parserConfig.localVars,\n        context: parserConfig.localVars && new Context(null, null, false),\n        indented: basecolumn || 0\n      };\n      if (parserConfig.globalVars && typeof parserConfig.globalVars == \"object\")\n        state.globalVars = parserConfig.globalVars;\n      return state;\n    },\n\n    token: function(stream, state) {\n      if (stream.sol()) {\n        if (!state.lexical.hasOwnProperty(\"align\"))\n          state.lexical.align = false;\n        state.indented = stream.indentation();\n        findFatArrow(stream, state);\n      }\n      if (state.tokenize != tokenComment && stream.eatSpace()) return null;\n      var style = state.tokenize(stream, state);\n      if (type == \"comment\") return style;\n      state.lastType = type == \"operator\" && (content == \"++\" || content == \"--\") ? \"incdec\" : type;\n      return parseJS(state, style, type, content, stream);\n    },\n\n    indent: function(state, textAfter) {\n      if (state.tokenize == tokenComment || state.tokenize == tokenQuasi) return CodeMirror.Pass;\n      if (state.tokenize != tokenBase) return 0;\n      var firstChar = textAfter && textAfter.charAt(0), lexical = state.lexical, top\n      // Kludge to prevent 'maybelse' from blocking lexical scope pops\n      if (!/^\\s*else\\b/.test(textAfter)) for (var i = state.cc.length - 1; i >= 0; --i) {\n        var c = state.cc[i];\n        if (c == poplex) lexical = lexical.prev;\n        else if (c != maybeelse && c != popcontext) break;\n      }\n      while ((lexical.type == \"stat\" || lexical.type == \"form\") &&\n             (firstChar == \"}\" || ((top = state.cc[state.cc.length - 1]) &&\n                                   (top == maybeoperatorComma || top == maybeoperatorNoComma) &&\n                                   !/^[,\\.=+\\-*:?[\\(]/.test(textAfter))))\n        lexical = lexical.prev;\n      if (statementIndent && lexical.type == \")\" && lexical.prev.type == \"stat\")\n        lexical = lexical.prev;\n      var type = lexical.type, closing = firstChar == type;\n\n      if (type == \"vardef\") return lexical.indented + (state.lastType == \"operator\" || state.lastType == \",\" ? lexical.info.length + 1 : 0);\n      else if (type == \"form\" && firstChar == \"{\") return lexical.indented;\n      else if (type == \"form\") return lexical.indented + indentUnit;\n      else if (type == \"stat\")\n        return lexical.indented + (isContinuedStatement(state, textAfter) ? statementIndent || indentUnit : 0);\n      else if (lexical.info == \"switch\" && !closing && parserConfig.doubleIndentSwitch != false)\n        return lexical.indented + (/^(?:case|default)\\b/.test(textAfter) ? indentUnit : 2 * indentUnit);\n      else if (lexical.align) return lexical.column + (closing ? 0 : 1);\n      else return lexical.indented + (closing ? 0 : indentUnit);\n    },\n\n    electricInput: /^\\s*(?:case .*?:|default:|\\{|\\})$/,\n    blockCommentStart: jsonMode ? null : \"/*\",\n    blockCommentEnd: jsonMode ? null : \"*/\",\n    blockCommentContinue: jsonMode ? null : \" * \",\n    lineComment: jsonMode ? null : \"//\",\n    fold: \"brace\",\n    closeBrackets: \"()[]{}''\\\"\\\"``\",\n\n    helperType: jsonMode ? \"json\" : \"javascript\",\n    jsonldMode: jsonldMode,\n    jsonMode: jsonMode,\n\n    expressionAllowed: expressionAllowed,\n\n    skipExpression: function(state) {\n      var top = state.cc[state.cc.length - 1]\n      if (top == expression || top == expressionNoComma) state.cc.pop()\n    }\n  };\n});\n\nCodeMirror.registerHelper(\"wordChars\", \"javascript\", /[\\w$]/);\n\nCodeMirror.defineMIME(\"text/javascript\", \"javascript\");\nCodeMirror.defineMIME(\"text/ecmascript\", \"javascript\");\nCodeMirror.defineMIME(\"application/javascript\", \"javascript\");\nCodeMirror.defineMIME(\"application/x-javascript\", \"javascript\");\nCodeMirror.defineMIME(\"application/ecmascript\", \"javascript\");\nCodeMirror.defineMIME(\"application/json\", { name: \"javascript\", json: true });\nCodeMirror.defineMIME(\"application/x-json\", { name: \"javascript\", json: true });\nCodeMirror.defineMIME(\"application/manifest+json\", { name: \"javascript\", json: true })\nCodeMirror.defineMIME(\"application/ld+json\", { name: \"javascript\", jsonld: true });\nCodeMirror.defineMIME(\"text/typescript\", { name: \"javascript\", typescript: true });\nCodeMirror.defineMIME(\"application/typescript\", { name: \"javascript\", typescript: true });\n\n});\n", "// Copyright 2013 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Platform from '../../core/platform/platform.js';\n\nimport type {FormattedContentBuilder} from './FormattedContentBuilder.js';\nimport {createTokenizer} from './FormatterWorker.js';\n\nconst cssTrimEnd = (tokenValue: string): string => {\n  // https://drafts.csswg.org/css-syntax/#whitespace\n  const re = /(?:\\r?\\n|[\\t\\f\\r ])+$/g;\n  return tokenValue.replace(re, '');\n};\n\nexport class CSSFormatter {\n  readonly #builder: FormattedContentBuilder;\n  #toOffset!: number;\n  #fromOffset!: number;\n  #lineEndings!: number[];\n  #lastLine: number;\n  #state: {\n    eatWhitespace: (boolean|undefined),\n    seenProperty: (boolean|undefined),\n    inPropertyValue: (boolean|undefined),\n    afterClosingBrace: (boolean|undefined),\n  };\n  constructor(builder: FormattedContentBuilder) {\n    this.#builder = builder;\n    this.#lastLine = -1;\n    this.#state = {\n      eatWhitespace: undefined,\n      seenProperty: undefined,\n      inPropertyValue: undefined,\n      afterClosingBrace: undefined,\n    };\n  }\n\n  format(text: string, lineEndings: number[], fromOffset: number, toOffset: number): void {\n    this.#lineEndings = lineEndings;\n    this.#fromOffset = fromOffset;\n    this.#toOffset = toOffset;\n    this.#state = {\n      eatWhitespace: undefined,\n      seenProperty: undefined,\n      inPropertyValue: undefined,\n      afterClosingBrace: undefined,\n    };\n    this.#lastLine = -1;\n    const tokenize = createTokenizer('text/css');\n    const oldEnforce = this.#builder.setEnforceSpaceBetweenWords(false);\n    tokenize(text.substring(this.#fromOffset, this.#toOffset), this.#tokenCallback.bind(this));\n    this.#builder.setEnforceSpaceBetweenWords(oldEnforce);\n  }\n\n  #tokenCallback(token: string, type: string|null, startPosition: number): void {\n    startPosition += this.#fromOffset;\n    const startLine = Platform.ArrayUtilities.lowerBound(\n        this.#lineEndings, startPosition, Platform.ArrayUtilities.DEFAULT_COMPARATOR);\n    if (startLine !== this.#lastLine) {\n      this.#state.eatWhitespace = true;\n    }\n    if (type && (/^property/.test(type) || /^variable-2/.test(type)) && !this.#state.inPropertyValue) {\n      this.#state.seenProperty = true;\n    }\n    this.#lastLine = startLine;\n    // https://drafts.csswg.org/css-syntax/#whitespace\n    const isWhitespace = /^(?:\\r?\\n|[\\t\\f\\r ])+$/.test(token);\n    if (isWhitespace) {\n      if (!this.#state.eatWhitespace) {\n        this.#builder.addSoftSpace();\n      }\n      return;\n    }\n    this.#state.eatWhitespace = false;\n    if (token === '\\n') {\n      return;\n    }\n\n    if (token !== '}') {\n      if (this.#state.afterClosingBrace) {\n        this.#builder.addNewLine(true);\n      }\n      this.#state.afterClosingBrace = false;\n    }\n    if (token === '}') {\n      if (this.#state.inPropertyValue) {\n        this.#builder.addNewLine();\n      }\n      this.#builder.decreaseNestingLevel();\n      this.#state.afterClosingBrace = true;\n      this.#state.inPropertyValue = false;\n    } else if (token === ':' && !this.#state.inPropertyValue && this.#state.seenProperty) {\n      this.#builder.addToken(token, startPosition);\n      this.#builder.addSoftSpace();\n      this.#state.eatWhitespace = true;\n      this.#state.inPropertyValue = true;\n      this.#state.seenProperty = false;\n      return;\n    } else if (token === '{') {\n      this.#builder.addSoftSpace();\n      this.#builder.addToken(token, startPosition);\n      this.#builder.addNewLine();\n      this.#builder.increaseNestingLevel();\n      return;\n    }\n\n    this.#builder.addToken(cssTrimEnd(token), startPosition);\n\n    if (type === 'comment' && !this.#state.inPropertyValue && !this.#state.seenProperty) {\n      this.#builder.addNewLine();\n    }\n    if (token === ';' && this.#state.inPropertyValue) {\n      this.#state.inPropertyValue = false;\n      this.#builder.addNewLine();\n    } else if (token === '}') {\n      this.#builder.addNewLine();\n    }\n  }\n}\n", "// Copyright 2011 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Platform from '../../core/platform/platform.js';\nimport * as Root from '../../core/root/root.js';\n// This file is required to bring some types into scope, even though it\n// is not used.\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport type * as CodeMirrorModule from '../../third_party/codemirror/codemirror-legacy.js';\n\nimport {CSSFormatter} from './CSSFormatter.js';\nimport {FormattedContentBuilder} from './FormattedContentBuilder.js';\nimport {type FormatResult, FormattableMediaTypes} from './FormatterActions.js';\nimport {HTMLFormatter} from './HTMLFormatter.js';\nimport {IdentityFormatter} from './IdentityFormatter.js';\nimport {JavaScriptFormatter} from './JavaScriptFormatter.js';\nimport {JSONFormatter} from './JSONFormatter.js';\nimport {substituteExpression} from './Substitute.js';\n\nexport interface Chunk {\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  chunk: any[];\n  isLastChunk: boolean;\n}\n\nexport type ChunkCallback = (arg0: Chunk) => void;\n\nexport function createTokenizer(mimeType: string): (\n    arg0: string, arg1: (arg0: string, arg1: string|null, arg2: number, arg3: number) => (Object | undefined | void)) =>\n    void {\n  const mode = CodeMirror.getMode({indentUnit: 2}, mimeType);\n  const state = CodeMirror.startState(mode);\n\n  if (!mode || mode.name === 'null') {\n    throw new Error(`Could not find CodeMirror mode for MimeType: ${mimeType}`);\n  }\n\n  if (!mode.token) {\n    throw new Error(`Could not find CodeMirror mode with token method: ${mimeType}`);\n  }\n\n  return (line: string,\n          callback: (arg0: string, arg1: string|null, arg2: number, arg3: number) => void|Object|undefined) => {\n    const stream = new CodeMirror.StringStream(line);\n    while (!stream.eol()) {\n      const style = mode.token(stream, state);\n      const value = stream.current();\n      if (callback(value, style, stream.start, stream.start + value.length) === AbortTokenization) {\n        return;\n      }\n      stream.start = stream.pos;\n    }\n  };\n}\n\nexport const AbortTokenization = {};\n\nexport function format(mimeType: string, text: string, indentString?: string): FormatResult {\n  // Default to a 4-space indent.\n  indentString = indentString || '    ';\n\n  let result: FormatResult;\n  const builder = new FormattedContentBuilder(indentString);\n  const lineEndings = Platform.StringUtilities.findLineEndingIndexes(text);\n  try {\n    switch (mimeType) {\n      case FormattableMediaTypes.TEXT_HTML: {\n        const formatter = new HTMLFormatter(builder);\n        formatter.format(text, lineEndings);\n        break;\n      }\n      case FormattableMediaTypes.TEXT_CSS: {\n        const formatter = new CSSFormatter(builder);\n        formatter.format(text, lineEndings, 0, text.length);\n        break;\n      }\n      case FormattableMediaTypes.APPLICATION_JAVASCRIPT:\n      case FormattableMediaTypes.TEXT_JAVASCRIPT: {\n        const formatter = new JavaScriptFormatter(builder);\n        formatter.format(text, lineEndings, 0, text.length);\n        break;\n      }\n      case FormattableMediaTypes.APPLICATION_JSON:\n      case FormattableMediaTypes.APPLICATION_MANIFEST_JSON: {\n        const formatter = new JSONFormatter(builder);\n        formatter.format(text, lineEndings, 0, text.length);\n        break;\n      }\n      default: {\n        const formatter = new IdentityFormatter(builder);\n        formatter.format(text, lineEndings, 0, text.length);\n      }\n    }\n    result = {\n      mapping: builder.mapping,\n      content: builder.content(),\n    };\n  } catch (e) {\n    console.error(e);\n    result = {\n      mapping: {original: [0], formatted: [0]},\n      content: text,\n    };\n  }\n  return result;\n}\n\n(function disableLoggingForTest(): void {\n  if (Root.Runtime.Runtime.queryParam('test')) {\n    console.error = () => undefined;\n  }\n})();\n\nexport {substituteExpression};\n", "// Copyright 2016 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nexport class FormattedContentBuilder {\n  #lastOriginalPosition = 0;\n  #formattedContent: string[] = [];\n  #formattedContentLength = 0;\n  #lastFormattedPosition = 0;\n  #nestingLevel = 0;\n  #newLines = 0;\n  #enforceSpaceBetweenWords = true;\n  #softSpace = false;\n  #hardSpaces = 0;\n  #cachedIndents = new Map<number, string>();\n  #canBeIdentifierOrNumber = /[$\\u200C\\u200D\\p{ID_Continue}]/u;\n\n  mapping = {original: [0], formatted: [0]};\n\n  constructor(private indentString: string) {\n  }\n\n  setEnforceSpaceBetweenWords(value: boolean): boolean {\n    const oldValue = this.#enforceSpaceBetweenWords;\n    this.#enforceSpaceBetweenWords = value;\n    return oldValue;\n  }\n\n  addToken(token: string, offset: number): void {\n    // Skip the regex check if `addSoftSpace` will be a no-op.\n    if (this.#enforceSpaceBetweenWords && !this.#hardSpaces && !this.#softSpace) {\n      const lastCharOfLastToken = this.#formattedContent.at(-1)?.at(-1) ?? '';\n      if (this.#canBeIdentifierOrNumber.test(lastCharOfLastToken) && this.#canBeIdentifierOrNumber.test(token)) {\n        this.addSoftSpace();\n      }\n    }\n\n    this.#appendFormatting();\n\n    // Insert token.\n    this.#addMappingIfNeeded(offset);\n    this.#addText(token);\n  }\n\n  addSoftSpace(): void {\n    if (!this.#hardSpaces) {\n      this.#softSpace = true;\n    }\n  }\n\n  addHardSpace(): void {\n    this.#softSpace = false;\n    ++this.#hardSpaces;\n  }\n\n  addNewLine(noSquash?: boolean): void {\n    // Avoid leading newlines.\n    if (!this.#formattedContentLength) {\n      return;\n    }\n    if (noSquash) {\n      ++this.#newLines;\n    } else {\n      this.#newLines = this.#newLines || 1;\n    }\n  }\n\n  increaseNestingLevel(): void {\n    this.#nestingLevel += 1;\n  }\n\n  decreaseNestingLevel(): void {\n    if (this.#nestingLevel > 0) {\n      this.#nestingLevel -= 1;\n    }\n  }\n\n  content(): string {\n    return this.#formattedContent.join('') + (this.#newLines ? '\\n' : '');\n  }\n\n  #appendFormatting(): void {\n    if (this.#newLines) {\n      for (let i = 0; i < this.#newLines; ++i) {\n        this.#addText('\\n');\n      }\n      this.#addText(this.#indent());\n    } else if (this.#softSpace) {\n      this.#addText(' ');\n    }\n    if (this.#hardSpaces) {\n      for (let i = 0; i < this.#hardSpaces; ++i) {\n        this.#addText(' ');\n      }\n    }\n    this.#newLines = 0;\n    this.#softSpace = false;\n    this.#hardSpaces = 0;\n  }\n\n  #indent(): string {\n    const cachedValue = this.#cachedIndents.get(this.#nestingLevel);\n    if (cachedValue) {\n      return cachedValue;\n    }\n\n    let fullIndent = '';\n    for (let i = 0; i < this.#nestingLevel; ++i) {\n      fullIndent += this.indentString;\n    }\n\n    // Cache a maximum of 20 nesting level indents.\n    if (this.#nestingLevel <= 20) {\n      this.#cachedIndents.set(this.#nestingLevel, fullIndent);\n    }\n    return fullIndent;\n  }\n\n  #addText(text: string): void {\n    this.#formattedContent.push(text);\n    this.#formattedContentLength += text.length;\n  }\n\n  #addMappingIfNeeded(originalPosition: number): void {\n    if (originalPosition - this.#lastOriginalPosition === this.#formattedContentLength - this.#lastFormattedPosition) {\n      return;\n    }\n    this.mapping.original.push(originalPosition);\n    this.#lastOriginalPosition = originalPosition;\n    this.mapping.formatted.push(this.#formattedContentLength);\n    this.#lastFormattedPosition = this.#formattedContentLength;\n  }\n}\n", "// Copyright 2016 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Platform from '../../core/platform/platform.js';\n\nimport {CSSFormatter} from './CSSFormatter.js';\nimport type {FormattedContentBuilder} from './FormattedContentBuilder.js';\nimport {AbortTokenization, createTokenizer} from './FormatterWorker.js';\nimport {JavaScriptFormatter} from './JavaScriptFormatter.js';\nimport {JSONFormatter} from './JSONFormatter.js';\n\nexport class HTMLFormatter {\n  readonly #builder: FormattedContentBuilder;\n  readonly #jsFormatter: JavaScriptFormatter;\n  readonly #jsonFormatter: JSONFormatter;\n  readonly #cssFormatter: CSSFormatter;\n  #text?: string;\n  #lineEndings?: number[];\n  #model?: HTMLModel;\n\n  constructor(builder: FormattedContentBuilder) {\n    this.#builder = builder;\n    this.#jsFormatter = new JavaScriptFormatter(builder);\n    this.#jsonFormatter = new JSONFormatter(builder);\n    this.#cssFormatter = new CSSFormatter(builder);\n  }\n\n  format(text: string, lineEndings: number[]): void {\n    this.#text = text;\n    this.#lineEndings = lineEndings;\n    this.#model = new HTMLModel(text);\n    this.#walk(this.#model.document());\n  }\n\n  #formatTokensTill(element: FormatterElement, offset: number): void {\n    if (!this.#model) {\n      return;\n    }\n\n    let nextToken = this.#model.peekToken();\n    while (nextToken && nextToken.startOffset < offset) {\n      const token = (this.#model.nextToken() as Token);\n      this.#formatToken(element, token);\n      nextToken = this.#model.peekToken();\n    }\n  }\n\n  #walk(element: FormatterElement): void {\n    if (!element.openTag || !element.closeTag) {\n      throw new Error('Element is missing open or close tag');\n    }\n\n    if (element.parent) {\n      this.#formatTokensTill(element.parent, element.openTag.startOffset);\n    }\n    this.#beforeOpenTag(element);\n    this.#formatTokensTill(element, element.openTag.endOffset);\n    this.#afterOpenTag(element);\n    for (let i = 0; i < element.children.length; ++i) {\n      this.#walk(element.children[i]);\n    }\n\n    this.#formatTokensTill(element, element.closeTag.startOffset);\n    this.#beforeCloseTag(element);\n    this.#formatTokensTill(element, element.closeTag.endOffset);\n    this.#afterCloseTag(element);\n  }\n\n  #beforeOpenTag(element: FormatterElement): void {\n    if (!this.#model) {\n      return;\n    }\n\n    if (!element.children.length || element === this.#model.document()) {\n      return;\n    }\n    this.#builder.addNewLine();\n  }\n\n  #afterOpenTag(element: FormatterElement): void {\n    if (!this.#model) {\n      return;\n    }\n\n    if (!element.children.length || element === this.#model.document()) {\n      return;\n    }\n    this.#builder.increaseNestingLevel();\n    this.#builder.addNewLine();\n  }\n\n  #beforeCloseTag(element: FormatterElement): void {\n    if (!this.#model) {\n      return;\n    }\n\n    if (!element.children.length || element === this.#model.document()) {\n      return;\n    }\n    this.#builder.decreaseNestingLevel();\n    this.#builder.addNewLine();\n  }\n\n  #afterCloseTag(_element: FormatterElement): void {\n    this.#builder.addNewLine();\n  }\n\n  #formatToken(element: FormatterElement, token: Token): void {\n    if (Platform.StringUtilities.isWhitespace(token.value)) {\n      return;\n    }\n    if (hasTokenInSet(token.type, 'comment') || hasTokenInSet(token.type, 'meta')) {\n      this.#builder.addNewLine();\n      this.#builder.addToken(token.value.trim(), token.startOffset);\n      this.#builder.addNewLine();\n      return;\n    }\n\n    if (!element.openTag || !element.closeTag) {\n      return;\n    }\n\n    const isBodyToken =\n        element.openTag.endOffset <= token.startOffset && token.startOffset < element.closeTag.startOffset;\n    if (isBodyToken && element.name === 'style') {\n      this.#builder.addNewLine();\n      this.#builder.increaseNestingLevel();\n      this.#cssFormatter.format(this.#text || '', this.#lineEndings || [], token.startOffset, token.endOffset);\n      this.#builder.decreaseNestingLevel();\n      return;\n    }\n    if (isBodyToken && element.name === 'script') {\n      this.#builder.addNewLine();\n      this.#builder.increaseNestingLevel();\n      if (scriptTagIsJavaScript(element)) {\n        this.#jsFormatter.format(this.#text || '', this.#lineEndings || [], token.startOffset, token.endOffset);\n      } else if (scriptTagIsJSON(element)) {\n        this.#jsonFormatter.format(this.#text || '', this.#lineEndings || [], token.startOffset, token.endOffset);\n      } else {\n        this.#builder.addToken(token.value, token.startOffset);\n        this.#builder.addNewLine();\n      }\n      this.#builder.decreaseNestingLevel();\n      return;\n    }\n\n    if (!isBodyToken && hasTokenInSet(token.type, 'attribute')) {\n      this.#builder.addSoftSpace();\n    }\n\n    this.#builder.addToken(token.value, token.startOffset);\n  }\n}\n\nfunction scriptTagIsJavaScript(element: FormatterElement): boolean {\n  if (!element.openTag) {\n    return true;\n  }\n\n  if (!element.openTag.attributes.has('type')) {\n    return true;\n  }\n\n  let type = element.openTag.attributes.get('type');\n  if (!type) {\n    return true;\n  }\n\n  type = type.toLowerCase();\n  const isWrappedInQuotes = /^([\"\\'])(.*)\\1$/.exec(type.trim());\n  if (isWrappedInQuotes) {\n    type = isWrappedInQuotes[2];\n  }\n  return [\n    'application/ecmascript',\n    'application/javascript',\n    'application/x-ecmascript',\n    'application/x-javascript',\n    'module',\n    'text/ecmascript',\n    'text/javascript',\n    'text/javascript1.0',\n    'text/javascript1.1',\n    'text/javascript1.2',\n    'text/javascript1.3',\n    'text/javascript1.4',\n    'text/javascript1.5',\n    'text/jscript',\n    'text/livescript',\n    'text/x-ecmascript',\n    'text/x-javascript',\n  ].includes(type.trim());\n}\n\nfunction scriptTagIsJSON(element: FormatterElement): boolean {\n  if (!element.openTag) {\n    return false;\n  }\n\n  let type = element.openTag.attributes.get('type');\n  if (!type) {\n    return false;\n  }\n\n  type = type.toLowerCase();\n  const isWrappedInQuotes = /^([\"\\'])(.*)\\1$/.exec(type.trim());\n  if (isWrappedInQuotes) {\n    type = isWrappedInQuotes[2];\n  }\n  const isSubtype = /^application\\/\\w+\\+json$/.exec(type.trim());\n  if (isSubtype) {\n    type = 'application/json';\n  }\n  return [\n    'application/json',\n    'importmap',\n    'speculationrules',\n  ].includes(type.trim());\n}\n\nfunction hasTokenInSet(tokenTypes: Set<string>, type: string): boolean {\n  // We prefix the CodeMirror HTML tokenizer with the xml- prefix\n  // in a full version. When running in a worker context, this\n  // prefix is not appended, as the global is only overridden\n  // in CodeMirrorTextEditor.js.\n  return tokenTypes.has(type) || tokenTypes.has(`xml-${type}`);\n}\n\nexport class HTMLModel {\n  #state: ParseState = ParseState.INITIAL;\n  readonly #document: FormatterElement;\n  #stack: FormatterElement[];\n  readonly #tokens: Token[] = [];\n  #tokenIndex = 0;\n  #attributes = new Map<string, string>();\n  #attributeName = '';\n  #tagName = '';\n  #isOpenTag = false;\n  #tagStartOffset?: number|null;\n  #tagEndOffset?: number|null;\n\n  constructor(text: string) {\n    this.#document = new FormatterElement('document');\n    this.#document.openTag = new Tag('document', 0, 0, new Map(), true, false);\n    this.#document.closeTag = new Tag('document', text.length, text.length, new Map(), false, false);\n\n    this.#stack = [this.#document];\n\n    this.#build(text);\n  }\n\n  #build(text: string): void {\n    const tokenizer = createTokenizer('text/html');\n    let baseOffset = 0, lastOffset = 0;\n    let pendingToken: Token|null = null;\n\n    const pushToken = (token: Token): Object|undefined => {\n      this.#tokens.push(token);\n      this.#updateDOM(token);\n\n      const element = this.#stack[this.#stack.length - 1];\n      if (element && (element.name === 'script' || element.name === 'style') && element.openTag &&\n          element.openTag.endOffset === lastOffset) {\n        return AbortTokenization;\n      }\n\n      return;\n    };\n\n    const processToken = (\n        tokenValue: string,\n        type: string|null,\n        tokenStart: number,\n        tokenEnd: number,\n        ): Object|undefined => {\n      tokenStart += baseOffset;\n      tokenEnd += baseOffset;\n      lastOffset = tokenEnd;\n\n      const tokenType = type ? new Set<string>(type.split(' ')) : new Set<string>();\n      const token = new Token(tokenValue, tokenType, tokenStart, tokenEnd);\n\n      // This is a pretty horrible work-around for two bugs in the CodeMirror 5 HTML\n      // tokenizer, which aren't easy to fix because it shares this code with the\n      // XML parser[^1], and which is also not actively maintained anymore. The\n      // real fix here is to migrate off of CodeMirror 5 also for formatting and\n      // pretty printing and use CodeMirror 6 instead, but that's a bigger\n      // project.\n      //\n      // For now we ducktape the first problem by merging a '/' token\n      // following a string token in the HTML formatter, which does the trick, and\n      // also merging the error tokens for unescaped ampersands with text tokens\n      // (where `type` is `null`) preceeding and following the error tokens.\n      //\n      // [^1]: https://github.com/codemirror/codemirror5/blob/742627a/mode/xml/xml.js#L137\n      //\n      if (pendingToken) {\n        if (tokenValue === '/' && type === 'attribute' && pendingToken.type.has('string')) {\n          token.startOffset = pendingToken.startOffset;\n          token.value = `${pendingToken.value}${tokenValue}`;\n          token.type = pendingToken.type;\n        } else if (\n            (tokenValue.startsWith('&') && type === 'error' && pendingToken.type.size === 0) ||\n            (type === null && pendingToken.type.has('error'))) {\n          pendingToken.endOffset = token.endOffset;\n          pendingToken.value += tokenValue;\n          pendingToken.type = token.type;\n          return;\n        } else if (pushToken(pendingToken) === AbortTokenization) {\n          return AbortTokenization;\n        }\n        pendingToken = null;\n      }\n      if (type === 'string' || type === null) {\n        pendingToken = token;\n        return;\n      }\n\n      return pushToken(token);\n    };\n\n    while (true) {\n      baseOffset = lastOffset;\n      tokenizer(text.substring(lastOffset), processToken);\n      if (pendingToken) {\n        pushToken(pendingToken);\n        pendingToken = null;\n      }\n      if (lastOffset >= text.length) {\n        break;\n      }\n      const element = this.#stack[this.#stack.length - 1];\n      if (!element) {\n        break;\n      }\n\n      while (true) {\n        lastOffset = text.indexOf('</', lastOffset);\n        if (lastOffset === -1) {\n          lastOffset = text.length;\n          break;\n        }\n        if (text.substring(lastOffset + 2).toLowerCase().startsWith(element.name)) {\n          break;\n        }\n        lastOffset += 2;\n      }\n\n      if (!element.openTag) {\n        break;\n      }\n\n      const tokenStart = element.openTag.endOffset;\n      const tokenEnd = lastOffset;\n      const tokenValue = text.substring(tokenStart, tokenEnd);\n      this.#tokens.push(new Token(tokenValue, new Set(), tokenStart, tokenEnd));\n    }\n\n    while (this.#stack.length > 1) {\n      const element = this.#stack[this.#stack.length - 1];\n      if (!element) {\n        break;\n      }\n\n      this.#popElement(new Tag(element.name, text.length, text.length, new Map(), false, false));\n    }\n  }\n\n  #updateDOM(token: Token): void {\n    const value = token.value;\n    const type = token.type;\n    switch (this.#state) {\n      case ParseState.INITIAL:\n        if (hasTokenInSet(type, 'bracket') && (value === '<' || value === '</')) {\n          this.#onStartTag(token);\n          this.#state = ParseState.TAG;\n        }\n        return;\n      case ParseState.TAG:\n        if (hasTokenInSet(type, 'tag') && !hasTokenInSet(type, 'bracket')) {\n          this.#tagName = value.trim().toLowerCase();\n        } else if (hasTokenInSet(type, 'attribute')) {\n          this.#attributeName = value.trim().toLowerCase();\n          this.#attributes.set(this.#attributeName, '');\n          this.#state = ParseState.ATTRIBUTE_NAME;\n        } else if (hasTokenInSet(type, 'bracket') && (value === '>' || value === '/>')) {\n          this.#onEndTag(token);\n          this.#state = ParseState.INITIAL;\n        }\n        return;\n      case ParseState.ATTRIBUTE_NAME:\n        if (!type.size && value === '=') {\n          this.#state = ParseState.ATTRIBUTE_VALUE;\n        } else if (hasTokenInSet(type, 'bracket') && (value === '>' || value === '/>')) {\n          this.#onEndTag(token);\n          this.#state = ParseState.INITIAL;\n        }\n        return;\n      case ParseState.ATTRIBUTE_VALUE:\n        if (hasTokenInSet(type, 'string')) {\n          this.#attributes.set(this.#attributeName, value);\n          this.#state = ParseState.TAG;\n        } else if (hasTokenInSet(type, 'bracket') && (value === '>' || value === '/>')) {\n          this.#onEndTag(token);\n          this.#state = ParseState.INITIAL;\n        }\n        return;\n    }\n  }\n\n  #onStartTag(token: Token): void {\n    this.#tagName = '';\n    this.#tagStartOffset = token.startOffset;\n    this.#tagEndOffset = null;\n    this.#attributes = new Map();\n    this.#attributeName = '';\n    this.#isOpenTag = token.value === '<';\n  }\n\n  #onEndTag(token: Token): void {\n    this.#tagEndOffset = token.endOffset;\n    const selfClosingTag = token.value === '/>' || SelfClosingTags.has(this.#tagName);\n    const tag = new Tag(\n        this.#tagName, this.#tagStartOffset || 0, this.#tagEndOffset, this.#attributes, this.#isOpenTag,\n        selfClosingTag);\n    this.#onTagComplete(tag);\n  }\n\n  #onTagComplete(tag: Tag): void {\n    if (tag.isOpenTag) {\n      const topElement = this.#stack[this.#stack.length - 1];\n      if (topElement) {\n        const tagSet = AutoClosingTags.get(topElement.name);\n        if (topElement !== this.#document && topElement.openTag?.selfClosingTag) {\n          this.#popElement(autocloseTag(topElement, topElement.openTag.endOffset));\n        } else if (tagSet?.has(tag.name)) {\n          this.#popElement(autocloseTag(topElement, tag.startOffset));\n        }\n        this.#pushElement(tag);\n      }\n      return;\n    }\n\n    let lastTag = this.#stack[this.#stack.length - 1];\n    while (this.#stack.length > 1 && lastTag && lastTag.name !== tag.name) {\n      this.#popElement(autocloseTag(lastTag, tag.startOffset));\n      lastTag = this.#stack[this.#stack.length - 1];\n    }\n    if (this.#stack.length === 1) {\n      return;\n    }\n    this.#popElement(tag);\n\n    function autocloseTag(element: FormatterElement, offset: number): Tag {\n      return new Tag(element.name, offset, offset, new Map(), false, false);\n    }\n  }\n\n  #popElement(closeTag: Tag): void {\n    const element = this.#stack.pop();\n    if (!element) {\n      return;\n    }\n    element.closeTag = closeTag;\n  }\n\n  #pushElement(openTag: Tag): void {\n    const topElement = this.#stack[this.#stack.length - 1];\n    const newElement = new FormatterElement(openTag.name);\n    if (topElement) {\n      newElement.parent = topElement;\n      topElement.children.push(newElement);\n    }\n    newElement.openTag = openTag;\n    this.#stack.push(newElement);\n  }\n\n  peekToken(): Token|null {\n    return this.#tokenIndex < this.#tokens.length ? this.#tokens[this.#tokenIndex] : null;\n  }\n\n  nextToken(): Token|null {\n    return this.#tokens[this.#tokenIndex++];\n  }\n\n  document(): FormatterElement {\n    return this.#document;\n  }\n}\n\nconst SelfClosingTags = new Set<string>([\n  'area',\n  'base',\n  'br',\n  'col',\n  'command',\n  'embed',\n  'hr',\n  'img',\n  'input',\n  'keygen',\n  'link',\n  'meta',\n  'param',\n  'source',\n  'track',\n  'wbr',\n]);\n\n// @see https://www.w3.org/TR/html/syntax.html 8.1.2.4 Optional tags\nconst AutoClosingTags = new Map([\n  ['head', new Set(['body'])],\n  ['li', new Set(['li'])],\n  ['dt', new Set(['dt', 'dd'])],\n  ['dd', new Set(['dt', 'dd'])],\n  [\n    'p',\n    new Set([\n      'address', 'article', 'aside', 'blockquote', 'div', 'dl',      'fieldset', 'footer', 'form',\n      'h1',      'h2',      'h3',    'h4',         'h5',  'h6',      'header',   'hgroup', 'hr',\n      'main',    'nav',     'ol',    'p',          'pre', 'section', 'table',    'ul',\n    ]),\n  ],\n  ['rb', new Set(['rb', 'rt', 'rtc', 'rp'])],\n  ['rt', new Set(['rb', 'rt', 'rtc', 'rp'])],\n  ['rtc', new Set(['rb', 'rtc', 'rp'])],\n  ['rp', new Set(['rb', 'rt', 'rtc', 'rp'])],\n  ['optgroup', new Set(['optgroup'])],\n  ['option', new Set(['option', 'optgroup'])],\n  ['colgroup', new Set(['colgroup'])],\n  ['thead', new Set(['tbody', 'tfoot'])],\n  ['tbody', new Set(['tbody', 'tfoot'])],\n  ['tfoot', new Set(['tbody'])],\n  ['tr', new Set(['tr'])],\n  ['td', new Set(['td', 'th'])],\n  ['th', new Set(['td', 'th'])],\n]);\n\nconst enum ParseState {\n  INITIAL = 'Initial',\n  TAG = 'Tag',\n  ATTRIBUTE_NAME = 'AttributeName',\n  ATTRIBUTE_VALUE = 'AttributeValue',\n}\n\nclass Token {\n  value: string;\n  type: Set<string>;\n  startOffset: number;\n  endOffset: number;\n\n  constructor(value: string, type: Set<string>, startOffset: number, endOffset: number) {\n    this.value = value;\n    this.type = type;\n    this.startOffset = startOffset;\n    this.endOffset = endOffset;\n  }\n}\n\nclass Tag {\n  name: string;\n  startOffset: number;\n  endOffset: number;\n  attributes: Map<string, string>;\n  isOpenTag: boolean;\n  selfClosingTag: boolean;\n\n  constructor(\n      name: string, startOffset: number, endOffset: number, attributes: Map<string, string>, isOpenTag: boolean,\n      selfClosingTag: boolean) {\n    this.name = name;\n    this.startOffset = startOffset;\n    this.endOffset = endOffset;\n    this.attributes = attributes;\n    this.isOpenTag = isOpenTag;\n    this.selfClosingTag = selfClosingTag;\n  }\n}\n\nclass FormatterElement {\n  name: string;\n  children: FormatterElement[] = [];\n  parent: FormatterElement|null = null;\n  openTag: Tag|null = null;\n  closeTag: Tag|null = null;\n\n  constructor(name: string) {\n    this.name = name;\n  }\n}\n", "// Copyright 2011 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Acorn from '../../third_party/acorn/acorn.js';\n\nimport {AcornTokenizer, ECMA_VERSION, type TokenOrComment} from './AcornTokenizer.js';\nimport {ESTreeWalker} from './ESTreeWalker.js';\nimport type {FormattedContentBuilder} from './FormattedContentBuilder.js';\n\nexport class JavaScriptFormatter {\n  readonly #builder: FormattedContentBuilder;\n  #tokenizer!: AcornTokenizer;\n  #content!: string;\n  #fromOffset!: number;\n  #lastLineNumber!: number;\n  #toOffset?: number;\n  constructor(builder: FormattedContentBuilder) {\n    this.#builder = builder;\n  }\n\n  format(text: string, _lineEndings: number[], fromOffset: number, toOffset: number): void {\n    this.#fromOffset = fromOffset;\n    this.#toOffset = toOffset;\n    this.#content = text.substring(this.#fromOffset, this.#toOffset);\n    this.#lastLineNumber = 0;\n    const tokens: Array<Acorn.Token|Acorn.Comment> = [];\n    const ast = Acorn.parse(this.#content, {\n      ranges: false,\n      preserveParens: true,\n      allowAwaitOutsideFunction: true,\n      allowImportExportEverywhere: true,\n      ecmaVersion: ECMA_VERSION,\n      allowHashBang: true,\n      onToken: tokens as Acorn.Token[],\n      onComment: tokens as Acorn.Comment[],\n    });\n    this.#tokenizer = new AcornTokenizer(this.#content, tokens);\n    const walker = new ESTreeWalker(this.#beforeVisit.bind(this), this.#afterVisit.bind(this));\n    // @ts-expect-error Technically, the acorn Node type is a subclass of Acorn.ESTree.Node.\n    // However, the acorn package currently exports its type without specifying\n    // this relationship. So while this is allowed on runtime, we can't properly\n    // typecheck it.\n    walker.walk(ast);\n  }\n\n  #push(token: Acorn.Token|Acorn.Comment|null, format: string): void {\n    for (let i = 0; i < format.length; ++i) {\n      if (format[i] === 's') {\n        this.#builder.addSoftSpace();\n      } else if (format[i] === 'S') {\n        this.#builder.addHardSpace();\n      } else if (format[i] === 'n') {\n        this.#builder.addNewLine();\n      } else if (format[i] === '>') {\n        this.#builder.increaseNestingLevel();\n      } else if (format[i] === '<') {\n        this.#builder.decreaseNestingLevel();\n      } else if (format[i] === 't') {\n        if (this.#tokenizer.tokenLineStart() - this.#lastLineNumber > 1) {\n          this.#builder.addNewLine(true);\n        }\n        this.#lastLineNumber = this.#tokenizer.tokenLineEnd();\n        if (token) {\n          this.#builder.addToken(this.#content.substring(token.start, token.end), this.#fromOffset + token.start);\n        }\n      }\n    }\n  }\n\n  #beforeVisit(node: Acorn.ESTree.Node): undefined {\n    if (!node.parent) {\n      return;\n    }\n    if (node.type === 'TemplateLiteral') {\n      this.#builder.setEnforceSpaceBetweenWords(false);\n    }\n    let token;\n    while ((token = this.#tokenizer.peekToken()) && token.start < node.start) {\n      const token = (this.#tokenizer.nextToken() as TokenOrComment);\n      // @ts-expect-error Same reason as above about Acorn types and ESTree types\n      const format = this.#formatToken(node.parent, token);\n      this.#push(token, format);\n    }\n  }\n\n  #afterVisit(node: Acorn.ESTree.Node): void {\n    // ${expressions} within a template literal need space enforced.\n    const restore = this.#builder.setEnforceSpaceBetweenWords(node.type !== 'TemplateElement');\n    let token;\n    while ((token = this.#tokenizer.peekToken()) && token.start < node.end) {\n      const token = (this.#tokenizer.nextToken() as TokenOrComment);\n      const format = this.#formatToken(node, token);\n      this.#push(token, format);\n    }\n    this.#push(null, this.#finishNode(node));\n    this.#builder.setEnforceSpaceBetweenWords(restore || node.type === 'TemplateLiteral');\n  }\n\n  #inForLoopHeader(node: Acorn.ESTree.Node): boolean {\n    const parent = node.parent;\n    if (!parent) {\n      return false;\n    }\n    if (parent.type === 'ForStatement') {\n      const parentNode = (parent as Acorn.ESTree.ForStatement);\n      return node === parentNode.init || node === parentNode.test || node === parentNode.update;\n    }\n    if (parent.type === 'ForInStatement' || parent.type === 'ForOfStatement') {\n      const parentNode = (parent as Acorn.ESTree.ForInStatement | Acorn.ESTree.ForOfStatement);\n      return node === parentNode.left || node === parentNode.right;\n    }\n    return false;\n  }\n\n  #formatToken(node: Acorn.ESTree.Node, tokenOrComment: TokenOrComment): string {\n    const AT = AcornTokenizer;\n    if (AT.lineComment(tokenOrComment)) {\n      return 'tn';\n    }\n    if (AT.blockComment(tokenOrComment)) {\n      return 'tn';\n    }\n    const token = (tokenOrComment as Acorn.Token);\n    const nodeType = node.type;\n    if (nodeType === 'ContinueStatement' || nodeType === 'BreakStatement') {\n      return node.label && AT.keyword(token) ? 'ts' : 't';\n    }\n    if (nodeType === 'Identifier') {\n      return 't';\n    }\n    if (nodeType === 'PrivateIdentifier') {\n      return 't';\n    }\n    if (nodeType === 'ReturnStatement') {\n      if (AT.punctuator(token, ';')) {\n        return 't';\n      }\n      return node.argument ? 'ts' : 't';\n    }\n    if (nodeType === 'AwaitExpression') {\n      if (AT.punctuator(token, ';')) {\n        return 't';\n      }\n      return node.argument ? 'ts' : 't';\n    }\n    if (nodeType === 'Property') {\n      if (AT.punctuator(token, ':')) {\n        return 'ts';\n      }\n      return 't';\n    }\n    if (nodeType === 'ArrayExpression') {\n      if (AT.punctuator(token, ',')) {\n        return 'ts';\n      }\n      return 't';\n    }\n    if (nodeType === 'LabeledStatement') {\n      if (AT.punctuator(token, ':')) {\n        return 'ts';\n      }\n    } else if (\n        nodeType === 'LogicalExpression' || nodeType === 'AssignmentExpression' || nodeType === 'BinaryExpression') {\n      if (AT.punctuator(token) && !AT.punctuator(token, '()')) {\n        return 'sts';\n      }\n    } else if (nodeType === 'ConditionalExpression') {\n      if (AT.punctuator(token, '?:')) {\n        return 'sts';\n      }\n    } else if (nodeType === 'VariableDeclarator') {\n      if (AT.punctuator(token, '=')) {\n        return 'sts';\n      }\n    } else if (nodeType === 'ObjectPattern') {\n      if (node.parent && node.parent.type === 'VariableDeclarator' && AT.punctuator(token, '{')) {\n        return 'st';\n      }\n      if (AT.punctuator(token, ',')) {\n        return 'ts';\n      }\n    } else if (nodeType === 'FunctionDeclaration') {\n      if (AT.punctuator(token, ',)')) {\n        return 'ts';\n      }\n    } else if (nodeType === 'FunctionExpression') {\n      if (AT.punctuator(token, ',)')) {\n        return 'ts';\n      }\n      if (AT.keyword(token, 'function')) {\n        return node.id ? 'ts' : 't';\n      }\n    } else if (nodeType === 'ArrowFunctionExpression') {\n      if (AT.punctuator(token, ',)')) {\n        return 'ts';\n      }\n      if (AT.punctuator(token, '(')) {\n        return 'st';\n      }\n      if (AT.arrowIdentifier(token, '=>')) {\n        return 'sts';\n      }\n    } else if (nodeType === 'WithStatement') {\n      if (AT.punctuator(token, ')')) {\n        return node.body && node.body.type === 'BlockStatement' ? 'ts' : 'tn>';\n      }\n    } else if (nodeType === 'SwitchStatement') {\n      if (AT.punctuator(token, '{')) {\n        return 'tn>';\n      }\n      if (AT.punctuator(token, '}')) {\n        return 'n<tn';\n      }\n      if (AT.punctuator(token, ')')) {\n        return 'ts';\n      }\n    } else if (nodeType === 'SwitchCase') {\n      if (AT.keyword(token, 'case')) {\n        return 'n<ts';\n      }\n      if (AT.keyword(token, 'default')) {\n        return 'n<t';\n      }\n      if (AT.punctuator(token, ':')) {\n        return 'tn>';\n      }\n    } else if (nodeType === 'VariableDeclaration') {\n      if (AT.punctuator(token, ',')) {\n        let allVariablesInitialized = true;\n        const declarations = (node.declarations as Acorn.ESTree.Node[]);\n        for (let i = 0; i < declarations.length; ++i) {\n          // @ts-expect-error We are doing a subtype check, without properly checking whether\n          // it exists. We can't fix that, unless we use proper typechecking\n          allVariablesInitialized = allVariablesInitialized && Boolean(declarations[i].init);\n        }\n        return !this.#inForLoopHeader(node) && allVariablesInitialized ? 'nSSts' : 'ts';\n      }\n    } else if (nodeType === 'PropertyDefinition') {\n      if (AT.punctuator(token, '=')) {\n        return 'sts';\n      }\n      if (AT.punctuator(token, ';')) {\n        return 'tn';\n      }\n    } else if (nodeType === 'BlockStatement') {\n      if (AT.punctuator(token, '{')) {\n        return node.body.length ? 'tn>' : 't';\n      }\n      if (AT.punctuator(token, '}')) {\n        return node.body.length ? 'n<t' : 't';\n      }\n    } else if (nodeType === 'CatchClause') {\n      if (AT.punctuator(token, ')')) {\n        return 'ts';\n      }\n    } else if (nodeType === 'ObjectExpression') {\n      if (!node.properties.length) {\n        return 't';\n      }\n      if (AT.punctuator(token, '{')) {\n        return 'tn>';\n      }\n      if (AT.punctuator(token, '}')) {\n        return 'n<t';\n      }\n      if (AT.punctuator(token, ',')) {\n        return 'tn';\n      }\n    } else if (nodeType === 'IfStatement') {\n      if (AT.punctuator(token, ')')) {\n        return node.consequent && node.consequent.type === 'BlockStatement' ? 'ts' : 'tn>';\n      }\n\n      if (AT.keyword(token, 'else')) {\n        const preFormat = node.consequent && node.consequent.type === 'BlockStatement' ? 'st' : 'n<t';\n        let postFormat = 'n>';\n        if (node.alternate && (node.alternate.type === 'BlockStatement' || node.alternate.type === 'IfStatement')) {\n          postFormat = 's';\n        }\n        return preFormat + postFormat;\n      }\n    } else if (nodeType === 'CallExpression') {\n      if (AT.punctuator(token, ',')) {\n        return 'ts';\n      }\n    } else if (nodeType === 'SequenceExpression' && AT.punctuator(token, ',')) {\n      return node.parent && node.parent.type === 'SwitchCase' ? 'ts' : 'tn';\n    } else if (nodeType === 'ForStatement' || nodeType === 'ForOfStatement' || nodeType === 'ForInStatement') {\n      if (AT.punctuator(token, ';')) {\n        return 'ts';\n      }\n      if (AT.keyword(token, 'in') || AT.identifier(token, 'of')) {\n        return 'sts';\n      }\n\n      if (AT.punctuator(token, ')')) {\n        return node.body && node.body.type === 'BlockStatement' ? 'ts' : 'tn>';\n      }\n    } else if (nodeType === 'WhileStatement') {\n      if (AT.punctuator(token, ')')) {\n        return node.body && node.body.type === 'BlockStatement' ? 'ts' : 'tn>';\n      }\n    } else if (nodeType === 'DoWhileStatement') {\n      const blockBody = node.body && node.body.type === 'BlockStatement';\n      if (AT.keyword(token, 'do')) {\n        return blockBody ? 'ts' : 'tn>';\n      }\n      if (AT.keyword(token, 'while')) {\n        return blockBody ? 'sts' : 'n<ts';\n      }\n      if (AT.punctuator(token, ';')) {\n        return 'tn';\n      }\n    } else if (nodeType === 'ClassBody') {\n      if (AT.punctuator(token, '{')) {\n        return 'stn>';\n      }\n      if (AT.punctuator(token, '}')) {\n        return '<ntn';\n      }\n      return 't';\n    } else if (nodeType === 'YieldExpression') {\n      return 't';\n    } else if (nodeType === 'Super') {\n      return 't';\n    } else if (nodeType === 'ImportExpression') {\n      return 't';\n    } else if (nodeType === 'ExportAllDeclaration') {\n      if (AT.punctuator(token, '*')) {\n        return 'sts';\n      }\n      return 't';\n    } else if (nodeType === 'ExportNamedDeclaration' || nodeType === 'ImportDeclaration') {\n      if (AT.punctuator(token, '{')) {\n        return 'st';\n      }\n      if (AT.punctuator(token, ',')) {\n        return 'ts';\n      }\n      if (AT.punctuator(token, '}')) {\n        return node.source ? 'ts' : 't';\n      }\n      if (AT.punctuator(token, '*')) {\n        return 'sts';\n      }\n      return 't';\n    } else if (nodeType === 'MemberExpression') {\n      if (node.object.type === 'Literal' && typeof (node.object.value) === 'number') {\n        return 'st';\n      }\n      return 't';\n    }\n    return AT.keyword(token) && !AT.keyword(token, 'this') ? 'ts' : 't';\n  }\n\n  #finishNode(node: Acorn.ESTree.Node): string {\n    const nodeType = node.type;\n    if (nodeType === 'WithStatement') {\n      if (node.body && node.body.type !== 'BlockStatement') {\n        return 'n<';\n      }\n    } else if (nodeType === 'VariableDeclaration') {\n      if (!this.#inForLoopHeader(node)) {\n        return 'n';\n      }\n    } else if (nodeType === 'ForStatement' || nodeType === 'ForOfStatement' || nodeType === 'ForInStatement') {\n      if (node.body && node.body.type !== 'BlockStatement') {\n        return 'n<';\n      }\n    } else if (nodeType === 'BlockStatement') {\n      if (node.parent && node.parent.type === 'IfStatement') {\n        const parentNode = (node.parent as Acorn.ESTree.IfStatement);\n        if (parentNode.alternate && parentNode.consequent === node) {\n          return '';\n        }\n      }\n      if (node.parent && node.parent.type === 'FunctionExpression' && node.parent.parent &&\n          node.parent.parent.type === 'Property') {\n        return '';\n      }\n      if (node.parent && node.parent.type === 'FunctionExpression' && node.parent.parent &&\n          node.parent.parent.type === 'VariableDeclarator') {\n        return '';\n      }\n      if (node.parent && node.parent.type === 'FunctionExpression' && node.parent.parent &&\n          node.parent.parent.type === 'CallExpression') {\n        return '';\n      }\n      if (node.parent && node.parent.type === 'DoWhileStatement') {\n        return '';\n      }\n      if (node.parent && node.parent.type === 'TryStatement') {\n        const parentNode = (node.parent as Acorn.ESTree.TryStatement);\n        if (parentNode.block === node) {\n          return 's';\n        }\n      }\n      if (node.parent && node.parent.type === 'CatchClause') {\n        const parentNode = (node.parent as Acorn.ESTree.CatchClause);\n        // @ts-expect-error We are doing a subtype check, without properly checking whether\n        // it exists. We can't fix that, unless we use proper typechecking\n        if (parentNode.parent?.finalizer) {\n          return 's';\n        }\n      }\n      return 'n';\n    } else if (nodeType === 'WhileStatement') {\n      if (node.body && node.body.type !== 'BlockStatement') {\n        return 'n<';\n      }\n    } else if (nodeType === 'IfStatement') {\n      if (node.alternate) {\n        if (node.alternate.type !== 'BlockStatement' && node.alternate.type !== 'IfStatement') {\n          return '<';\n        }\n      } else if (node.consequent) {\n        if (node.consequent.type !== 'BlockStatement') {\n          return '<';\n        }\n      }\n    } else if (\n        nodeType === 'BreakStatement' || nodeType === 'ContinueStatement' || nodeType === 'ThrowStatement' ||\n        nodeType === 'ReturnStatement' || nodeType === 'ExpressionStatement') {\n      return 'n';\n    } else if (\n        nodeType === 'ImportDeclaration' || nodeType === 'ExportAllDeclaration' ||\n        nodeType === 'ExportDefaultDeclaration' || nodeType === 'ExportNamedDeclaration') {\n      return 'n';\n    }\n    return '';\n  }\n}\n", "// Copyright 2014 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Platform from '../../core/platform/platform.js';\nimport * as TextUtils from '../../models/text_utils/text_utils.js';\nimport * as Acorn from '../../third_party/acorn/acorn.js';\n\nexport type TokenOrComment = Acorn.Token|Acorn.Comment;\n\n/**\n * The tokenizer in Acorn does not allow you to peek into the next token.\n * We use the peekToken method to determine when to stop formatting a\n * particular block of code.\n *\n * To remedy the situation, we implement the peeking of tokens ourselves.\n * To do so, whenever we call `nextToken`, we already retrieve the token\n * after it (in `bufferedToken`), so that `_peekToken` can check if there\n * is more work to do.\n *\n * There are 2 catches:\n *\n * 1. in the constructor we need to start the initialize the buffered token,\n *    such that `peekToken` on the first call is able to retrieve it. However,\n * 2. comments and tokens can arrive intermixed from the tokenizer. This usually\n *    happens when comments are the first comments of a file. In the scenario that\n *    the first comment in a file is a line comment attached to a token, we first\n *    receive the token and after that we receive the comment. However, when tokenizing\n *    we should reverse the order and return the comment, before the token.\n *\n * All that is to say that the `bufferedToken` is only used for *true* tokens.\n * We mimic comments to be tokens to fix the reordering issue, but we store these\n * separately to keep track of them. Any call to `nextTokenInternal` will figure\n * out whether the next token should be the preceding comment or not.\n */\nexport class AcornTokenizer {\n  #textCursor: TextUtils.TextCursor.TextCursor;\n  #tokenLineStart: number;\n  #tokenLineEnd: number;\n  #tokens: Array<Acorn.Comment|Acorn.Token>;\n  #idx = 0;\n\n  constructor(content: string, tokens: Array<Acorn.Comment|Acorn.Token>) {\n    this.#tokens = tokens;\n    const contentLineEndings = Platform.StringUtilities.findLineEndingIndexes(content);\n    this.#textCursor = new TextUtils.TextCursor.TextCursor(contentLineEndings);\n    this.#tokenLineStart = 0;\n    this.#tokenLineEnd = 0;\n  }\n\n  static punctuator(token: Acorn.Token, values?: string): boolean {\n    return token.type !== Acorn.tokTypes.num && token.type !== Acorn.tokTypes.regexp &&\n        token.type !== Acorn.tokTypes.string && token.type !== Acorn.tokTypes.name && !token.type.keyword &&\n        (!values || (token.type.label.length === 1 && values.indexOf(token.type.label) !== -1));\n  }\n\n  static keyword(token: Acorn.Token, keyword?: string): boolean {\n    return Boolean(token.type.keyword) && token.type !== Acorn.tokTypes['_true'] &&\n        token.type !== Acorn.tokTypes['_false'] && token.type !== Acorn.tokTypes['_null'] &&\n        (!keyword || token.type.keyword === keyword);\n  }\n\n  static identifier(token: TokenOrComment, identifier?: string): boolean {\n    return token.type === Acorn.tokTypes.name && (!identifier || token.value === identifier);\n  }\n\n  static arrowIdentifier(token: TokenOrComment, identifier?: string): boolean {\n    return token.type === Acorn.tokTypes.arrow && (!identifier || token.type.label === identifier);\n  }\n\n  static lineComment(token: TokenOrComment): boolean {\n    return token.type === 'Line';\n  }\n\n  static blockComment(token: TokenOrComment): boolean {\n    return token.type === 'Block';\n  }\n\n  nextToken(): TokenOrComment|null {\n    const token = this.#tokens[this.#idx++];\n    if (!token || token.type === Acorn.tokTypes.eof) {\n      return null;\n    }\n\n    this.#textCursor.advance(token.start);\n    this.#tokenLineStart = this.#textCursor.lineNumber();\n\n    this.#textCursor.advance(token.end);\n    this.#tokenLineEnd = this.#textCursor.lineNumber();\n    return token;\n  }\n\n  peekToken(): TokenOrComment|null {\n    const token = this.#tokens[this.#idx];\n    if (!token || token.type === Acorn.tokTypes.eof) {\n      return null;\n    }\n    return token;\n  }\n\n  tokenLineStart(): number {\n    return this.#tokenLineStart;\n  }\n\n  tokenLineEnd(): number {\n    return this.#tokenLineEnd;\n  }\n}\n\nexport const ECMA_VERSION = 2022;\n", "// Copyright 2014 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Acorn from '../../third_party/acorn/acorn.js';\n\nexport class ESTreeWalker {\n  readonly #beforeVisit: (arg0: Acorn.ESTree.Node) => unknown;\n  readonly #afterVisit: (arg0: Acorn.ESTree.Node) => unknown;\n\n  constructor(beforeVisit: (arg0: Acorn.ESTree.Node) => unknown, afterVisit: ((arg0: Acorn.ESTree.Node) => unknown)) {\n    this.#beforeVisit = beforeVisit;\n    this.#afterVisit = afterVisit;\n  }\n\n  walk(ast: Acorn.ESTree.Node): void {\n    this.#innerWalk(ast, null);\n  }\n\n  #innerWalk(node: Acorn.ESTree.Node, parent: Acorn.ESTree.Node|null): void {\n    if (!node) {\n      return;\n    }\n    node.parent = parent;\n\n    this.#beforeVisit.call(null, node);\n\n    const walkOrder = WALK_ORDER[node.type];\n    if (!walkOrder) {\n      console.error('Walk order not defined for ' + node.type);\n      return;\n    }\n\n    if (node.type === 'TemplateLiteral') {\n      const templateLiteral = (node);\n      const expressionsLength = templateLiteral.expressions.length;\n      for (let i = 0; i < expressionsLength; ++i) {\n        this.#innerWalk(templateLiteral.quasis[i], templateLiteral);\n        this.#innerWalk(templateLiteral.expressions[i], templateLiteral);\n      }\n      this.#innerWalk(templateLiteral.quasis[expressionsLength], templateLiteral);\n    } else {\n      for (let i = 0; i < walkOrder.length; ++i) {\n        // @ts-expect-error We are doing type traversal here, but the strings\n        // in _walkOrder are not mapping. Preferably, we would use the\n        // properties as defined in the types, but we can't do that yet.\n        const entity = node[walkOrder[i]];\n        if (Array.isArray(entity)) {\n          this.#walkArray((entity as Acorn.ESTree.Node[]), node);\n        } else {\n          this.#innerWalk((entity as Acorn.ESTree.Node), node);\n        }\n      }\n    }\n\n    this.#afterVisit.call(null, node);\n  }\n\n  #walkArray(nodeArray: Acorn.ESTree.Node[], parentNode: Acorn.ESTree.Node|null): void {\n    for (let i = 0; i < nodeArray.length; ++i) {\n      this.#innerWalk(nodeArray[i], parentNode);\n    }\n  }\n}\n\nconst WALK_ORDER = {\n  AwaitExpression: ['argument'],\n  ArrayExpression: ['elements'],\n  ArrayPattern: ['elements'],\n  ArrowFunctionExpression: ['params', 'body'],\n  AssignmentExpression: ['left', 'right'],\n  AssignmentPattern: ['left', 'right'],\n  BinaryExpression: ['left', 'right'],\n  BlockStatement: ['body'],\n  BreakStatement: ['label'],\n  CallExpression: ['callee', 'arguments'],\n  CatchClause: ['param', 'body'],\n  ClassBody: ['body'],\n  ClassDeclaration: ['id', 'superClass', 'body'],\n  ClassExpression: ['id', 'superClass', 'body'],\n  ChainExpression: ['expression'],\n  ConditionalExpression: ['test', 'consequent', 'alternate'],\n  ContinueStatement: ['label'],\n  DebuggerStatement: [],\n  DoWhileStatement: ['body', 'test'],\n  EmptyStatement: [],\n  ExpressionStatement: ['expression'],\n  ForInStatement: ['left', 'right', 'body'],\n  ForOfStatement: ['left', 'right', 'body'],\n  ForStatement: ['init', 'test', 'update', 'body'],\n  FunctionDeclaration: ['id', 'params', 'body'],\n  FunctionExpression: ['id', 'params', 'body'],\n  Identifier: [],\n  ImportDeclaration: ['specifiers', 'source'],\n  ImportDefaultSpecifier: ['local'],\n  ImportNamespaceSpecifier: ['local'],\n  ImportSpecifier: ['imported', 'local'],\n  ImportExpression: ['source'],\n  ExportAllDeclaration: ['source'],\n  ExportDefaultDeclaration: ['declaration'],\n  ExportNamedDeclaration: ['specifiers', 'source', 'declaration'],\n  ExportSpecifier: ['exported', 'local'],\n  IfStatement: ['test', 'consequent', 'alternate'],\n  LabeledStatement: ['label', 'body'],\n  Literal: [],\n  LogicalExpression: ['left', 'right'],\n  MemberExpression: ['object', 'property'],\n  MetaProperty: ['meta', 'property'],\n  MethodDefinition: ['key', 'value'],\n  NewExpression: ['callee', 'arguments'],\n  ObjectExpression: ['properties'],\n  ObjectPattern: ['properties'],\n  ParenthesizedExpression: ['expression'],\n  PrivateIdentifier: [],\n  PropertyDefinition: ['key', 'value'],\n  Program: ['body'],\n  Property: ['key', 'value'],\n  RestElement: ['argument'],\n  ReturnStatement: ['argument'],\n  SequenceExpression: ['expressions'],\n  SpreadElement: ['argument'],\n  StaticBlock: ['body'],\n  Super: [],\n  SwitchCase: ['test', 'consequent'],\n  SwitchStatement: ['discriminant', 'cases'],\n  TaggedTemplateExpression: ['tag', 'quasi'],\n  TemplateElement: [],\n  TemplateLiteral: ['quasis', 'expressions'],\n  ThisExpression: [],\n  ThrowStatement: ['argument'],\n  TryStatement: ['block', 'handler', 'finalizer'],\n  UnaryExpression: ['argument'],\n  UpdateExpression: ['argument'],\n  VariableDeclaration: ['declarations'],\n  VariableDeclarator: ['id', 'init'],\n  WhileStatement: ['test', 'body'],\n  WithStatement: ['object', 'body'],\n  YieldExpression: ['argument'],\n};\n", "// Copyright 2021 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type {FormattedContentBuilder} from './FormattedContentBuilder.js';\nimport {createTokenizer} from './FormatterWorker.js';\n\nexport class JSONFormatter {\n  builder: FormattedContentBuilder;\n  toOffset!: number;\n  fromOffset!: number;\n  lineEndings!: number[];\n  lastLine: number;\n  text!: string;\n  constructor(builder: FormattedContentBuilder) {\n    this.builder = builder;\n    this.lastLine = -1;\n  }\n\n  format(text: string, lineEndings: number[], fromOffset: number, toOffset: number): void {\n    this.lineEndings = lineEndings;\n    this.fromOffset = fromOffset;\n    this.toOffset = toOffset;\n    this.lastLine = -1;\n    this.text = text;\n    const tokenize = createTokenizer('application/json');\n    tokenize(text.substring(this.fromOffset, this.toOffset), this.tokenCallback.bind(this));\n  }\n\n  tokenCallback(token: string, _type: string|null, startPosition: number): void {\n    switch (token.charAt(0)) {\n      case '{':\n      case '[':\n        if (this.text[startPosition + 1] === '}' || this.text[startPosition + 1] === ']') {\n          this.builder.addToken(token, startPosition);\n        } else {\n          this.builder.addToken(token, startPosition);\n          this.builder.addNewLine();\n          this.builder.increaseNestingLevel();\n        }\n        break;\n      case '}':\n      case ']':\n        if (this.text[startPosition - 1] === '{' || this.text[startPosition - 1] === '[') {\n          this.builder.addToken(token, startPosition);\n        } else {\n          this.builder.decreaseNestingLevel();\n          this.builder.addNewLine();\n          this.builder.addToken(token, startPosition);\n        }\n        break;\n      case ':':\n        this.builder.addToken(token, startPosition);\n        this.builder.addSoftSpace();\n        break;\n      case ',':\n        this.builder.addToken(token, startPosition);\n        this.builder.addNewLine();\n        break;\n      case '':\n      case ' ':\n      case '\\n':\n        break;\n      default:\n        this.builder.addToken(token, startPosition);\n        break;\n    }\n  }\n}\n", "// Copyright 2016 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type {FormattedContentBuilder} from './FormattedContentBuilder.js';\n\nexport class IdentityFormatter {\n  constructor(private builder: FormattedContentBuilder) {\n  }\n\n  format(text: string, _lineEndings: number[], fromOffset: number, toOffset: number): void {\n    const content = text.substring(fromOffset, toOffset);\n    this.builder.addToken(content, fromOffset);\n  }\n}\n", "// Copyright 2022 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Acorn from '../../third_party/acorn/acorn.js';\n\nimport {ECMA_VERSION} from './AcornTokenizer.js';\nimport {DefinitionKind} from './FormatterActions.js';\nimport {ScopeVariableAnalysis} from './ScopeParser.js';\n\nexport function substituteExpression(expression: string, nameMap: Map<string, string|null>): string {\n  const replacements = computeSubstitution(expression, nameMap);\n  return applySubstitution(expression, replacements);\n}\n\ninterface Replacement {\n  from: string;\n  to: string;\n  offset: number;\n  isShorthandAssignmentProperty: boolean;\n}\n\n/**\n * Given an |expression| and a mapping from names to new names, the |computeSubstitution|\n * function returns a list of replacements sorted by the offset. The function throws if\n * it cannot parse the expression or the substitution is impossible to perform (for example\n * if the substitution target is 'this' within a function, it would become bound there).\n **/\nfunction computeSubstitution(expression: string, nameMap: Map<string, string|null>): Replacement[] {\n  // Parse the expression and find variables and scopes.\n  const root = Acorn.parse(expression, {\n    ecmaVersion: ECMA_VERSION,\n    allowAwaitOutsideFunction: true,\n    allowImportExportEverywhere: true,\n    checkPrivateFields: false,\n    ranges: false,\n  } as acorn.Options) as Acorn.ESTree.Node;\n  const scopeVariables = new ScopeVariableAnalysis(root);\n  scopeVariables.run();\n  const freeVariables = scopeVariables.getFreeVariables();\n  const result: Replacement[] = [];\n\n  // Prepare the machinery for generating fresh names (to avoid variable captures).\n  const allNames = scopeVariables.getAllNames();\n  for (const rename of nameMap.values()) {\n    if (rename) {\n      allNames.add(rename);\n    }\n  }\n  function getNewName(base: string): string {\n    let i = 1;\n    while (allNames.has(`${base}_${i}`)) {\n      i++;\n    }\n    const newName = `${base}_${i}`;\n    allNames.add(newName);\n    return newName;\n  }\n\n  // Perform the substitutions.\n  for (const [name, rename] of nameMap.entries()) {\n    const defUse = freeVariables.get(name);\n    if (!defUse) {\n      continue;\n    }\n\n    if (rename === null) {\n      throw new Error(`Cannot substitute '${name}' as the underlying variable '${rename}' is unavailable`);\n    }\n\n    const binders = [];\n    for (const use of defUse) {\n      result.push({\n        from: name,\n        to: rename,\n        offset: use.offset,\n        isShorthandAssignmentProperty: use.isShorthandAssignmentProperty,\n      });\n      binders.push(...use.scope.findBinders(rename));\n    }\n    // If there is a capturing binder, rename the bound variable.\n    for (const binder of binders) {\n      if (binder.definitionKind === DefinitionKind.FIXED) {\n        // If the identifier is bound to a fixed name, such as 'this',\n        // then refuse to do the substitution.\n        throw new Error(`Cannot avoid capture of '${rename}'`);\n      }\n      const newName = getNewName(rename);\n      for (const use of binder.uses) {\n        result.push({\n          from: rename,\n          to: newName,\n          offset: use.offset,\n          isShorthandAssignmentProperty: use.isShorthandAssignmentProperty,\n        });\n      }\n    }\n  }\n  result.sort((l, r) => l.offset - r.offset);\n  return result;\n}\n\nfunction applySubstitution(expression: string, replacements: Replacement[]): string {\n  const accumulator = [];\n  let last = 0;\n  for (const r of replacements) {\n    accumulator.push(expression.slice(last, r.offset));\n    let replacement = r.to;\n    if (r.isShorthandAssignmentProperty) {\n      // Let us expand the shorthand to full assignment.\n      replacement = `${r.from}: ${r.to}`;\n    }\n    accumulator.push(replacement);\n    last = r.offset + r.from.length;\n  }\n  accumulator.push(expression.slice(last));\n  return accumulator.join('');\n}\n", "// Copyright 2022 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Acorn from '../../third_party/acorn/acorn.js';\n\nimport {ECMA_VERSION} from './AcornTokenizer.js';\nimport {DefinitionKind, ScopeKind, type ScopeTreeNode} from './FormatterActions.js';\n\nexport function parseScopes(expression: string, sourceType: 'module'|'script' = 'script'): Scope|null {\n  // Parse the expression and find variables and scopes.\n  let root: Acorn.ESTree.Node|null = null;\n  try {\n    root = Acorn.parse(\n               expression, {ecmaVersion: ECMA_VERSION, allowAwaitOutsideFunction: true, ranges: false, sourceType}) as\n        Acorn.ESTree.Node;\n  } catch {\n    return null;\n  }\n  return new ScopeVariableAnalysis(root).run();\n}\n\nexport interface Use {\n  offset: number;\n  scope: Scope;\n  isShorthandAssignmentProperty: boolean;\n}\n\nexport interface VariableUses {\n  definitionKind: DefinitionKind;\n  uses: Use[];\n}\n\nexport class Scope {\n  readonly variables = new Map<string, VariableUses>();\n  readonly parent: Scope|null;\n  readonly start: number;\n  readonly end: number;\n  readonly kind: ScopeKind;\n  readonly children: Scope[] = [];\n\n  constructor(start: number, end: number, parent: Scope|null, kind: ScopeKind) {\n    this.start = start;\n    this.end = end;\n    this.parent = parent;\n    this.kind = kind;\n    if (parent) {\n      parent.children.push(this);\n    }\n  }\n\n  export(): ScopeTreeNode {\n    const variables = [];\n    for (const variable of this.variables) {\n      const offsets = [];\n      for (const use of variable[1].uses) {\n        offsets.push(use.offset);\n      }\n      variables.push({name: variable[0], kind: variable[1].definitionKind, offsets});\n    }\n    const children = this.children.map(c => c.export());\n    return {\n      start: this.start,\n      end: this.end,\n      variables,\n      kind: this.kind,\n      children,\n    };\n  }\n\n  addVariable(name: string, offset: number, definitionKind: DefinitionKind, isShorthandAssignmentProperty: boolean):\n      void {\n    const variable = this.variables.get(name);\n    const use = {offset, scope: this, isShorthandAssignmentProperty};\n    if (!variable) {\n      this.variables.set(name, {definitionKind, uses: [use]});\n      return;\n    }\n    if (variable.definitionKind === DefinitionKind.NONE) {\n      variable.definitionKind = definitionKind;\n    }\n    variable.uses.push(use);\n  }\n\n  findBinders(name: string): VariableUses[] {\n    const result = [];\n    let scope: Scope|null = this;\n    while (scope !== null) {\n      const defUse = scope.variables.get(name);\n      if (defUse && defUse.definitionKind !== DefinitionKind.NONE) {\n        result.push(defUse);\n      }\n      scope = scope.parent;\n    }\n    return result;\n  }\n\n  #mergeChildDefUses(name: string, defUses: VariableUses): void {\n    const variable = this.variables.get(name);\n    if (!variable) {\n      this.variables.set(name, defUses);\n      return;\n    }\n    variable.uses.push(...defUses.uses);\n    if (defUses.definitionKind === DefinitionKind.VAR) {\n      console.assert(variable.definitionKind !== DefinitionKind.LET);\n      if (variable.definitionKind === DefinitionKind.NONE) {\n        variable.definitionKind = defUses.definitionKind;\n      }\n    } else {\n      console.assert(defUses.definitionKind === DefinitionKind.NONE);\n    }\n  }\n\n  finalizeToParent(isFunctionScope: boolean): void {\n    if (!this.parent) {\n      console.error('Internal error: wrong nesting in scope analysis.');\n      throw new Error('Internal error');\n    }\n\n    // Move all unbound variables to the parent (also move var-bound variables\n    // if the parent is not a function).\n    const keysToRemove = [];\n    for (const [name, defUse] of this.variables.entries()) {\n      if (defUse.definitionKind === DefinitionKind.NONE ||\n          (defUse.definitionKind === DefinitionKind.VAR && !isFunctionScope)) {\n        this.parent.#mergeChildDefUses(name, defUse);\n        keysToRemove.push(name);\n      }\n    }\n    keysToRemove.forEach(k => this.variables.delete(k));\n  }\n}\n\nexport class ScopeVariableAnalysis {\n  readonly #rootScope: Scope;\n  readonly #allNames = new Set<string>();\n  #currentScope: Scope;\n  readonly #rootNode: Acorn.ESTree.Node;\n\n  constructor(node: Acorn.ESTree.Node) {\n    this.#rootNode = node;\n    this.#rootScope = new Scope(node.start, node.end, null, ScopeKind.GLOBAL);\n    this.#currentScope = this.#rootScope;\n  }\n\n  run(): Scope {\n    this.#processNode(this.#rootNode);\n    return this.#rootScope;\n  }\n\n  #processNode(node: Acorn.ESTree.Node|null): void {\n    if (node === null) {\n      return;\n    }\n    switch (node.type) {\n      case 'AwaitExpression':\n        this.#processNode(node.argument);\n        break;\n      case 'ArrayExpression':\n        node.elements.forEach(item => this.#processNode(item));\n        break;\n      case 'ExpressionStatement':\n        this.#processNode(node.expression);\n        break;\n      case 'Program':\n        console.assert(this.#currentScope === this.#rootScope);\n        node.body.forEach(item => this.#processNode(item));\n        console.assert(this.#currentScope === this.#rootScope);\n        break;\n      case 'ArrayPattern':\n        node.elements.forEach(item => this.#processNode(item));\n        break;\n      case 'ArrowFunctionExpression': {\n        this.#pushScope(node.start, node.end, ScopeKind.FUNCTION);\n        node.params.forEach(this.#processNodeAsDefinition.bind(this, DefinitionKind.VAR, false));\n        if (node.body.type === 'BlockStatement') {\n          // Include the body of the arrow function in the same scope as the arguments.\n          node.body.body.forEach(this.#processNode.bind(this));\n        } else {\n          this.#processNode(node.body);\n        }\n        this.#popScope(true);\n        break;\n      }\n      case 'AssignmentExpression':\n      case 'AssignmentPattern':\n      case 'BinaryExpression':\n      case 'LogicalExpression':\n        this.#processNode(node.left);\n        this.#processNode(node.right);\n        break;\n      case 'BlockStatement':\n        this.#pushScope(node.start, node.end, ScopeKind.BLOCK);\n        node.body.forEach(this.#processNode.bind(this));\n        this.#popScope(false);\n        break;\n      case 'CallExpression':\n        this.#processNode(node.callee);\n        node.arguments.forEach(this.#processNode.bind(this));\n        break;\n      case 'VariableDeclaration': {\n        const definitionKind = node.kind === 'var' ? DefinitionKind.VAR : DefinitionKind.LET;\n        node.declarations.forEach(this.#processVariableDeclarator.bind(this, definitionKind));\n        break;\n      }\n      case 'CatchClause':\n        this.#pushScope(node.start, node.end, ScopeKind.BLOCK);\n        this.#processNodeAsDefinition(DefinitionKind.LET, false, node.param);\n        this.#processNode(node.body);\n        this.#popScope(false);\n        break;\n      case 'ClassBody':\n        node.body.forEach(this.#processNode.bind(this));\n        break;\n      case 'ClassDeclaration':\n        this.#processNodeAsDefinition(DefinitionKind.LET, false, node.id);\n        this.#processNode(node.superClass ?? null);\n        this.#processNode(node.body);\n        break;\n      case 'ClassExpression':\n        // Intentionally ignore the id.\n        this.#processNode(node.superClass ?? null);\n        this.#processNode(node.body);\n        break;\n      case 'ChainExpression':\n        this.#processNode(node.expression);\n        break;\n      case 'ConditionalExpression':\n        this.#processNode(node.test);\n        this.#processNode(node.consequent);\n        this.#processNode(node.alternate);\n        break;\n      case 'DoWhileStatement':\n        this.#processNode(node.body);\n        this.#processNode(node.test);\n        break;\n      case 'ForInStatement':\n      case 'ForOfStatement':\n        this.#pushScope(node.start, node.end, ScopeKind.BLOCK);\n        this.#processNode(node.left);\n        this.#processNode(node.right);\n        this.#processNode(node.body);\n        this.#popScope(false);\n        break;\n      case 'ForStatement':\n        this.#pushScope(node.start, node.end, ScopeKind.BLOCK);\n        this.#processNode(node.init ?? null);\n        this.#processNode(node.test ?? null);\n        this.#processNode(node.update ?? null);\n        this.#processNode(node.body);\n        this.#popScope(false);\n        break;\n      case 'FunctionDeclaration':\n        this.#processNodeAsDefinition(DefinitionKind.VAR, false, node.id);\n        this.#pushScope(node.id?.end ?? node.start, node.end, ScopeKind.FUNCTION);\n        this.#addVariable('this', node.start, DefinitionKind.FIXED);\n        this.#addVariable('arguments', node.start, DefinitionKind.FIXED);\n        node.params.forEach(this.#processNodeAsDefinition.bind(this, DefinitionKind.LET, false));\n        // Process the body of the block statement directly to avoid creating new scope.\n        node.body.body.forEach(this.#processNode.bind(this));\n        this.#popScope(true);\n        break;\n      case 'FunctionExpression':\n        this.#pushScope(node.id?.end ?? node.start, node.end, ScopeKind.FUNCTION);\n        this.#addVariable('this', node.start, DefinitionKind.FIXED);\n        this.#addVariable('arguments', node.start, DefinitionKind.FIXED);\n        node.params.forEach(this.#processNodeAsDefinition.bind(this, DefinitionKind.LET, false));\n        // Process the body of the block statement directly to avoid creating new scope.\n        node.body.body.forEach(this.#processNode.bind(this));\n        this.#popScope(true);\n        break;\n      case 'Identifier':\n        this.#addVariable(node.name, node.start);\n        break;\n      case 'IfStatement':\n        this.#processNode(node.test);\n        this.#processNode(node.consequent);\n        this.#processNode(node.alternate ?? null);\n        break;\n      case 'LabeledStatement':\n        this.#processNode(node.body);\n        break;\n      case 'MetaProperty':\n        break;\n      case 'MethodDefinition':\n        if (node.computed) {\n          this.#processNode(node.key);\n        }\n        this.#processNode(node.value);\n        break;\n      case 'NewExpression':\n        this.#processNode(node.callee);\n        node.arguments.forEach(this.#processNode.bind(this));\n        break;\n      case 'MemberExpression':\n        this.#processNode(node.object);\n        if (node.computed) {\n          this.#processNode(node.property);\n        }\n        break;\n      case 'ObjectExpression':\n        node.properties.forEach(this.#processNode.bind(this));\n        break;\n      case 'ObjectPattern':\n        node.properties.forEach(this.#processNode.bind(this));\n        break;\n      case 'PrivateIdentifier':\n        break;\n      case 'PropertyDefinition':\n        if (node.computed) {\n          this.#processNode(node.key);\n        }\n        this.#processNode(node.value ?? null);\n        break;\n      case 'Property':\n        if (node.shorthand) {\n          console.assert(node.value.type === 'Identifier');\n          console.assert(node.key.type === 'Identifier');\n          console.assert((node.value as Acorn.ESTree.Identifier).name === (node.key as Acorn.ESTree.Identifier).name);\n          this.#addVariable((node.value as Acorn.ESTree.Identifier).name, node.value.start, DefinitionKind.NONE, true);\n        } else {\n          if (node.computed) {\n            this.#processNode(node.key);\n          }\n          this.#processNode(node.value);\n        }\n        break;\n      case 'RestElement':\n        this.#processNodeAsDefinition(DefinitionKind.LET, false, node.argument);\n        break;\n      case 'ReturnStatement':\n        this.#processNode(node.argument ?? null);\n        break;\n      case 'SequenceExpression':\n        node.expressions.forEach(this.#processNode.bind(this));\n        break;\n      case 'SpreadElement':\n        this.#processNode(node.argument);\n        break;\n      case 'SwitchCase':\n        this.#processNode(node.test ?? null);\n        node.consequent.forEach(this.#processNode.bind(this));\n        break;\n      case 'SwitchStatement':\n        this.#processNode(node.discriminant);\n        node.cases.forEach(this.#processNode.bind(this));\n        break;\n      case 'TaggedTemplateExpression':\n        this.#processNode(node.tag);\n        this.#processNode(node.quasi);\n        break;\n      case 'TemplateLiteral':\n        node.expressions.forEach(this.#processNode.bind(this));\n        break;\n      case 'ThisExpression':\n        this.#addVariable('this', node.start);\n        break;\n      case 'ThrowStatement':\n        this.#processNode(node.argument);\n        break;\n      case 'TryStatement':\n        this.#processNode(node.block);\n        this.#processNode(node.handler ?? null);\n        this.#processNode(node.finalizer ?? null);\n        break;\n      case 'WithStatement':\n        this.#processNode(node.object);\n        // TODO jarin figure how to treat the with body.\n        this.#processNode(node.body);\n        break;\n      case 'YieldExpression':\n        this.#processNode(node.argument ?? null);\n        break;\n      case 'UnaryExpression':\n      case 'UpdateExpression':\n        this.#processNode(node.argument);\n        break;\n      case 'WhileStatement':\n        this.#processNode(node.test);\n        this.#processNode(node.body);\n        break;\n\n      // Ignore, no expressions involved.\n      case 'BreakStatement':\n      case 'ContinueStatement':\n      case 'DebuggerStatement':\n      case 'EmptyStatement':\n      case 'Literal':\n      case 'Super':\n      case 'TemplateElement':\n        break;\n        // Ignore, cannot be used outside of a module.\n      case 'ImportDeclaration':\n      case 'ImportDefaultSpecifier':\n      case 'ImportNamespaceSpecifier':\n      case 'ImportSpecifier':\n      case 'ImportExpression':\n      case 'ExportAllDeclaration':\n      case 'ExportDefaultDeclaration':\n      case 'ExportNamedDeclaration':\n      case 'ExportSpecifier':\n        break;\n\n      case 'VariableDeclarator':\n        console.error('Should not encounter VariableDeclarator in general traversal.');\n        break;\n    }\n  }\n\n  getFreeVariables(): Map<string, Use[]> {\n    const result = new Map<string, Use[]>();\n    for (const [name, defUse] of this.#rootScope.variables) {\n      if (defUse.definitionKind !== DefinitionKind.NONE) {\n        // Skip bound variables.\n        continue;\n      }\n      result.set(name, defUse.uses);\n    }\n    return result;\n  }\n\n  getAllNames(): Set<string> {\n    return this.#allNames;\n  }\n\n  #pushScope(start: number, end: number, kind: ScopeKind): void {\n    this.#currentScope = new Scope(start, end, this.#currentScope, kind);\n  }\n\n  #popScope(isFunctionContext: boolean): void {\n    if (this.#currentScope.parent === null) {\n      console.error('Internal error: wrong nesting in scope analysis.');\n      throw new Error('Internal error');\n    }\n    this.#currentScope.finalizeToParent(isFunctionContext);\n    this.#currentScope = this.#currentScope.parent;\n  }\n\n  #addVariable(\n      name: string, offset: number, definitionKind: DefinitionKind = DefinitionKind.NONE,\n      isShorthandAssignmentProperty = false): void {\n    this.#allNames.add(name);\n    this.#currentScope.addVariable(name, offset, definitionKind, isShorthandAssignmentProperty);\n  }\n\n  #processNodeAsDefinition(\n      definitionKind: DefinitionKind.LET|DefinitionKind.VAR, isShorthandAssignmentProperty: boolean,\n      node: Acorn.ESTree.Pattern|Acorn.ESTree.AssignmentProperty|null): void {\n    if (node === null) {\n      return;\n    }\n    switch (node.type) {\n      case 'ArrayPattern':\n        node.elements.forEach(this.#processNodeAsDefinition.bind(this, definitionKind, false));\n        break;\n      case 'AssignmentPattern':\n        this.#processNodeAsDefinition(definitionKind, isShorthandAssignmentProperty, node.left);\n        this.#processNode(node.right);\n        break;\n      case 'Identifier':\n        this.#addVariable(node.name, node.start, definitionKind, isShorthandAssignmentProperty);\n        break;\n      case 'MemberExpression':\n        this.#processNode(node.object);\n        if (node.computed) {\n          this.#processNode(node.property);\n        }\n        break;\n      case 'ObjectPattern':\n        node.properties.forEach(this.#processNodeAsDefinition.bind(this, definitionKind, false));\n        break;\n      case 'Property':\n        if (node.computed) {\n          this.#processNode(node.key);\n        }\n        this.#processNodeAsDefinition(definitionKind, node.shorthand, node.value);\n        break;\n      case 'RestElement':\n        this.#processNodeAsDefinition(definitionKind, false, node.argument);\n        break;\n    }\n  }\n\n  #processVariableDeclarator(\n      definitionKind: DefinitionKind.LET|DefinitionKind.VAR, decl: Acorn.ESTree.VariableDeclarator): void {\n    this.#processNodeAsDefinition(definitionKind, false, decl.id);\n    this.#processNode(decl.init ?? null);\n  }\n}\n", "// Copyright 2016 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {createTokenizer, type Chunk, type ChunkCallback} from './FormatterWorker.js';\n\nexport const CSSParserStates = {\n  Initial: 'Initial',\n  Selector: 'Selector',\n  Style: 'Style',\n  PropertyName: 'PropertyName',\n  PropertyValue: 'PropertyValue',\n  AtRule: 'AtRule',\n};\n\n// TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype Rule = any;\n\ninterface Property {\n  name: string;\n  value: string;\n  range: Range;\n  nameRange: Range;\n  valueRange?: Range;\n}\n\ninterface Range {\n  startLine: number;\n  startColumn: number;\n  endLine: number;\n  endColumn: number;\n}\n\nexport function parseCSS(text: string, chunkCallback: ChunkCallback): void {\n  const chunkSize = 100000;  // characters per data chunk\n  const lines = text.split('\\n');\n  let rules: Rule[] = [];\n  let processedChunkCharacters = 0;\n\n  let state: string = CSSParserStates.Initial;\n  let rule: Rule;\n  let property: Property;\n  const UndefTokenType = new Set();\n\n  let disabledRules: Rule[] = [];\n\n  function disabledRulesCallback(chunk: Chunk): void {\n    disabledRules = disabledRules.concat(chunk.chunk);\n  }\n\n  function cssTrim(tokenValue: string): string {\n    // https://drafts.csswg.org/css-syntax/#whitespace\n    const re = /^(?:\\r?\\n|[\\t\\f\\r ])+|(?:\\r?\\n|[\\t\\f\\r ])+$/g;\n    return tokenValue.replace(re, '');\n  }\n\n  function processToken(tokenValue: string, tokenTypes: string|null, column: number, newColumn: number): void {\n    const tokenType = tokenTypes ? new Set(tokenTypes.split(' ')) : UndefTokenType;\n    switch (state) {\n      case CSSParserStates.Initial:\n        if (tokenType.has('qualifier') || tokenType.has('builtin') || tokenType.has('tag')) {\n          rule = {\n            selectorText: tokenValue,\n            lineNumber,\n            columnNumber: column,\n            properties: [],\n          };\n          state = CSSParserStates.Selector;\n        } else if (tokenType.has('def')) {\n          rule = {\n            atRule: tokenValue,\n            lineNumber,\n            columnNumber: column,\n          };\n          state = CSSParserStates.AtRule;\n        }\n        break;\n      case CSSParserStates.Selector:\n        if (tokenValue === '{' && tokenType === UndefTokenType) {\n          rule.selectorText = cssTrim(rule.selectorText);\n          rule.styleRange = createRange(lineNumber, newColumn);\n          state = CSSParserStates.Style;\n        } else {\n          rule.selectorText += tokenValue;\n        }\n        break;\n      case CSSParserStates.AtRule:\n        if ((tokenValue === ';' || tokenValue === '{') && tokenType === UndefTokenType) {\n          rule.atRule = cssTrim(rule.atRule);\n          rules.push(rule);\n          state = CSSParserStates.Initial;\n        } else {\n          rule.atRule += tokenValue;\n        }\n        break;\n      case CSSParserStates.Style:\n        if (tokenType.has('meta') || tokenType.has('property') || tokenType.has('variable-2')) {\n          property = {\n            name: tokenValue,\n            value: '',\n            range: createRange(lineNumber, column),\n            nameRange: createRange(lineNumber, column),\n          };\n          state = CSSParserStates.PropertyName;\n        } else if (tokenValue === '}' && tokenType === UndefTokenType) {\n          rule.styleRange.endLine = lineNumber;\n          rule.styleRange.endColumn = column;\n          rules.push(rule);\n          state = CSSParserStates.Initial;\n        } else if (tokenType.has('comment')) {\n          // The |processToken| is called per-line, so no token spans more than one line.\n          // Support only a one-line comments.\n          if (tokenValue.substring(0, 2) !== '/*' || tokenValue.substring(tokenValue.length - 2) !== '*/') {\n            break;\n          }\n          const uncommentedText = tokenValue.substring(2, tokenValue.length - 2);\n          const fakeRule = 'a{\\n' + uncommentedText + '}';\n          disabledRules = [];\n          parseCSS(fakeRule, disabledRulesCallback);\n          if (disabledRules.length === 1 && disabledRules[0].properties.length === 1) {\n            const disabledProperty = disabledRules[0].properties[0];\n            disabledProperty.disabled = true;\n            disabledProperty.range = createRange(lineNumber, column);\n            disabledProperty.range.endColumn = newColumn;\n            const lineOffset = lineNumber - 1;\n            const columnOffset = column + 2;\n            disabledProperty.nameRange.startLine += lineOffset;\n            disabledProperty.nameRange.startColumn += columnOffset;\n            disabledProperty.nameRange.endLine += lineOffset;\n            disabledProperty.nameRange.endColumn += columnOffset;\n            disabledProperty.valueRange.startLine += lineOffset;\n            disabledProperty.valueRange.startColumn += columnOffset;\n            disabledProperty.valueRange.endLine += lineOffset;\n            disabledProperty.valueRange.endColumn += columnOffset;\n            rule.properties.push(disabledProperty);\n          }\n        }\n        break;\n      case CSSParserStates.PropertyName:\n        if (tokenValue === ':' && tokenType === UndefTokenType) {\n          property.name = property.name;\n          property.nameRange.endLine = lineNumber;\n          property.nameRange.endColumn = column;\n          property.valueRange = createRange(lineNumber, newColumn);\n          state = CSSParserStates.PropertyValue;\n        } else if (tokenType.has('property')) {\n          property.name += tokenValue;\n        }\n        break;\n      case CSSParserStates.PropertyValue:\n        if ((tokenValue === ';' || tokenValue === '}') && tokenType === UndefTokenType) {\n          property.value = property.value;\n          // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n          // @ts-expect-error\n          property.valueRange.endLine = lineNumber;\n          // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n          // @ts-expect-error\n          property.valueRange.endColumn = column;\n          property.range.endLine = lineNumber;\n          property.range.endColumn = tokenValue === ';' ? newColumn : column;\n          rule.properties.push(property);\n          if (tokenValue === '}') {\n            rule.styleRange.endLine = lineNumber;\n            rule.styleRange.endColumn = column;\n            rules.push(rule);\n            state = CSSParserStates.Initial;\n          } else {\n            state = CSSParserStates.Style;\n          }\n        } else if (!tokenType.has('comment')) {\n          property.value += tokenValue;\n        }\n        break;\n      default:\n        console.assert(false, 'Unknown CSS parser state.');\n    }\n    processedChunkCharacters += newColumn - column;\n    if (processedChunkCharacters > chunkSize) {\n      chunkCallback({chunk: rules, isLastChunk: false});\n      rules = [];\n      processedChunkCharacters = 0;\n    }\n  }\n  const tokenizer = createTokenizer('text/css');\n  let lineNumber: number;\n  for (lineNumber = 0; lineNumber < lines.length; ++lineNumber) {\n    const line = lines[lineNumber];\n    tokenizer(line, processToken);\n    processToken('\\n', null, line.length, line.length + 1);\n  }\n  chunkCallback({chunk: rules, isLastChunk: true});\n\n  function createRange(lineNumber: number, columnNumber: number): Range {\n    return {startLine: lineNumber, startColumn: columnNumber, endLine: lineNumber, endColumn: columnNumber};\n  }\n}\n"],
  "mappings": "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",
  "names": ["CodeMirror", "style", "i", "CodeMirror", "documentTypes", "mediaTypes", "mediaFeatures", "mediaValueKeywords", "propertyKeywords", "nonStandardPropertyKeywords", "fontProperties", "counterDescriptors", "colorKeywords", "valueKeywords", "type", "CodeMirror", "type", "CodeMirror", "type", "cont", "cx", "content", "block", "value", "Platform", "Platform", "Platform", "Acorn", "format", "token", "Acorn", "Acorn", "lineNumber"]
}
