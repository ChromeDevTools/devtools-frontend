{"version":3,"file":"FormatterWorkerPool.js","sourceRoot":"","sources":["../../../../../../front_end/models/formatter/FormatterWorkerPool.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2016 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as FormatterActions from '../../entrypoints/formatter_worker/FormatterActions.js';  // eslint-disable-line @devtools/es-modules-import\n\nexport {DefinitionKind, ScopeKind, type ScopeTreeNode} from '../../entrypoints/formatter_worker/FormatterActions.js';\n\nlet formatterWorkerPoolInstance: FormatterWorkerPool|undefined;\n\nexport class FormatterWorkerPool {\n  private taskQueue: Task[];\n  private workerTasks: Map<Common.Worker.WorkerWrapper, Task|null>;\n\n  constructor() {\n    this.taskQueue = [];\n    this.workerTasks = new Map();\n  }\n\n  static instance(): FormatterWorkerPool {\n    if (!formatterWorkerPoolInstance) {\n      formatterWorkerPoolInstance = new FormatterWorkerPool();\n    }\n\n    return formatterWorkerPoolInstance;\n  }\n\n  dispose(): void {\n    for (const task of this.taskQueue) {\n      console.error('rejecting task');\n      task.errorCallback(new Event('Worker terminated'));\n    }\n    for (const [worker, task] of this.workerTasks.entries()) {\n      task?.errorCallback(new Event('Worker terminated'));\n      worker.terminate(/* immediately=*/ true);\n    }\n  }\n\n  static removeInstance(): void {\n    formatterWorkerPoolInstance?.dispose();\n    formatterWorkerPoolInstance = undefined;\n  }\n\n  private createWorker(): Common.Worker.WorkerWrapper {\n    const worker = Common.Worker.WorkerWrapper.fromURL(\n        new URL('../../entrypoints/formatter_worker/formatter_worker-entrypoint.js', import.meta.url));\n    worker.onmessage = this.onWorkerMessage.bind(this, worker);\n    worker.onerror = this.onWorkerError.bind(this, worker);\n    return worker;\n  }\n\n  private processNextTask(): void {\n    const maxWorkers = Math.max(2, navigator.hardwareConcurrency - 1);\n\n    if (!this.taskQueue.length) {\n      return;\n    }\n\n    let freeWorker = [...this.workerTasks.keys()].find(worker => !this.workerTasks.get(worker));\n    if (!freeWorker && this.workerTasks.size < maxWorkers) {\n      freeWorker = this.createWorker();\n    }\n    if (!freeWorker) {\n      return;\n    }\n\n    const task = this.taskQueue.shift();\n    if (task) {\n      this.workerTasks.set(freeWorker, task);\n      freeWorker.postMessage({method: task.method, params: task.params});\n    }\n  }\n\n  private onWorkerMessage(worker: Common.Worker.WorkerWrapper, event: MessageEvent): void {\n    const task = this.workerTasks.get(worker);\n    if (!task) {\n      return;\n    }\n    if (task.isChunked && event.data && !event.data['isLastChunk']) {\n      task.callback(event.data);\n      return;\n    }\n\n    this.workerTasks.set(worker, null);\n    this.processNextTask();\n    task.callback(event.data ? event.data : null);\n  }\n\n  private onWorkerError(worker: Common.Worker.WorkerWrapper, event: Event): void {\n    console.error(event);\n    const task = this.workerTasks.get(worker);\n    worker.terminate();\n    this.workerTasks.delete(worker);\n\n    const newWorker = this.createWorker();\n    this.workerTasks.set(newWorker, null);\n    this.processNextTask();\n    if (task) {\n      task.errorCallback(event);\n    }\n  }\n\n  private runChunkedTask(\n      methodName: string, params: Record<string, string>, callback: (arg0: boolean, arg1: unknown) => void): void {\n    const task = new Task(methodName, params, onData, () => onData(null), true);\n    this.taskQueue.push(task);\n    this.processNextTask();\n\n    function onData(data: Object|null): void {\n      if (!data) {\n        callback(true, null);\n        return;\n      }\n      const isLastChunk = 'isLastChunk' in data && Boolean(data['isLastChunk']);\n      const chunk = 'chunk' in data && data['chunk'];\n      callback(isLastChunk, chunk);\n    }\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private runTask(methodName: FormatterActions.FormatterActions, params: Record<string, unknown>): Promise<any> {\n    return new Promise((resolve, reject) => {\n      const task = new Task(methodName, params, resolve, reject, false);\n      this.taskQueue.push(task);\n      this.processNextTask();\n    });\n  }\n\n  format(mimeType: string, content: string, indentString: string): Promise<FormatterActions.FormatResult> {\n    const parameters = {mimeType, content, indentString};\n    return this.runTask(FormatterActions.FormatterActions.FORMAT, parameters) as Promise<FormatterActions.FormatResult>;\n  }\n\n  javaScriptSubstitute(expression: string, mapping: Map<string, string|null>): Promise<string> {\n    if (mapping.size === 0) {\n      return Promise.resolve(expression);\n    }\n    return this.runTask(FormatterActions.FormatterActions.JAVASCRIPT_SUBSTITUTE, {content: expression, mapping})\n        .then(result => result || '');\n  }\n\n  javaScriptScopeTree(expression: string, sourceType: 'module'|'script' = 'script'):\n      Promise<FormatterActions.ScopeTreeNode|null> {\n    return this.runTask(FormatterActions.FormatterActions.JAVASCRIPT_SCOPE_TREE, {content: expression, sourceType})\n        .then(result => result || null);\n  }\n\n  parseCSS(content: string, callback: (arg0: boolean, arg1: CSSRule[]) => void): void {\n    this.runChunkedTask(FormatterActions.FormatterActions.PARSE_CSS, {content}, onDataChunk);\n\n    // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    function onDataChunk(isLastChunk: boolean, data: any): void {\n      const rules = (data || [] as CSSRule[]);\n      callback(isLastChunk, rules);\n    }\n  }\n}\n\nclass Task {\n  method: string;\n  params: unknown;\n  callback: (arg0: MessageEvent|null) => void;\n  errorCallback: (arg0: Event) => void;\n  isChunked: boolean|undefined;\n  constructor(\n      method: string, params: unknown, callback: (arg0: MessageEvent|null) => void,\n      errorCallback: (arg0: Event) => void, isChunked?: boolean) {\n    this.method = method;\n    this.params = params;\n    this.callback = callback;\n    this.errorCallback = errorCallback;\n    this.isChunked = isChunked;\n  }\n}\n\ninterface CSSProperty {\n  name: string;\n  nameRange: TextRange;\n  value: string;\n  valueRange: TextRange;\n  range: TextRange;\n  disabled?: boolean;\n}\n\nexport function formatterWorkerPool(): FormatterWorkerPool {\n  return FormatterWorkerPool.instance();\n}\n\nexport interface OutlineItem {\n  line: number;\n  column: number;\n  title: string;\n  subtitle?: string;\n}\n\nexport interface CSSStyleRule {\n  selectorText: string;\n  styleRange: TextRange;\n  lineNumber: number;\n  columnNumber: number;\n  properties: CSSProperty[];\n}\n\nexport interface CSSAtRule {\n  atRule: string;\n  lineNumber: number;\n  columnNumber: number;\n}\n\nexport type CSSRule = CSSStyleRule|CSSAtRule;\n\nexport interface TextRange {\n  startLine: number;\n  startColumn: number;\n  endLine: number;\n  endColumn: number;\n}\n"]}