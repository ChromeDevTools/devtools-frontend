{
  "version": 3,
  "sources": ["../../../../../../front_end/models/formatter/FormatterWorkerPool.ts", "../../../../../../front_end/models/formatter/ScriptFormatter.ts"],
  "sourcesContent": ["// Copyright 2016 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as FormatterActions from '../../entrypoints/formatter_worker/FormatterActions.js';  // eslint-disable-line @devtools/es-modules-import\n\nexport {DefinitionKind, ScopeKind, type ScopeTreeNode} from '../../entrypoints/formatter_worker/FormatterActions.js';\n\nlet formatterWorkerPoolInstance: FormatterWorkerPool|undefined;\n\nexport class FormatterWorkerPool {\n  private taskQueue: Task[];\n  private workerTasks: Map<Common.Worker.WorkerWrapper, Task|null>;\n\n  constructor() {\n    this.taskQueue = [];\n    this.workerTasks = new Map();\n  }\n\n  static instance(): FormatterWorkerPool {\n    if (!formatterWorkerPoolInstance) {\n      formatterWorkerPoolInstance = new FormatterWorkerPool();\n    }\n\n    return formatterWorkerPoolInstance;\n  }\n\n  dispose(): void {\n    for (const task of this.taskQueue) {\n      console.error('rejecting task');\n      task.errorCallback(new Event('Worker terminated'));\n    }\n    for (const [worker, task] of this.workerTasks.entries()) {\n      task?.errorCallback(new Event('Worker terminated'));\n      worker.terminate(/* immediately=*/ true);\n    }\n  }\n\n  static removeInstance(): void {\n    formatterWorkerPoolInstance?.dispose();\n    formatterWorkerPoolInstance = undefined;\n  }\n\n  private createWorker(): Common.Worker.WorkerWrapper {\n    const worker = Common.Worker.WorkerWrapper.fromURL(\n        new URL('../../entrypoints/formatter_worker/formatter_worker-entrypoint.js', import.meta.url));\n    worker.onmessage = this.onWorkerMessage.bind(this, worker);\n    worker.onerror = this.onWorkerError.bind(this, worker);\n    return worker;\n  }\n\n  private processNextTask(): void {\n    const maxWorkers = Math.max(2, navigator.hardwareConcurrency - 1);\n\n    if (!this.taskQueue.length) {\n      return;\n    }\n\n    let freeWorker = [...this.workerTasks.keys()].find(worker => !this.workerTasks.get(worker));\n    if (!freeWorker && this.workerTasks.size < maxWorkers) {\n      freeWorker = this.createWorker();\n    }\n    if (!freeWorker) {\n      return;\n    }\n\n    const task = this.taskQueue.shift();\n    if (task) {\n      this.workerTasks.set(freeWorker, task);\n      freeWorker.postMessage({method: task.method, params: task.params});\n    }\n  }\n\n  private onWorkerMessage(worker: Common.Worker.WorkerWrapper, event: MessageEvent): void {\n    const task = this.workerTasks.get(worker);\n    if (!task) {\n      return;\n    }\n    if (task.isChunked && event.data && !event.data['isLastChunk']) {\n      task.callback(event.data);\n      return;\n    }\n\n    this.workerTasks.set(worker, null);\n    this.processNextTask();\n    task.callback(event.data ? event.data : null);\n  }\n\n  private onWorkerError(worker: Common.Worker.WorkerWrapper, event: Event): void {\n    console.error(event);\n    const task = this.workerTasks.get(worker);\n    worker.terminate();\n    this.workerTasks.delete(worker);\n\n    const newWorker = this.createWorker();\n    this.workerTasks.set(newWorker, null);\n    this.processNextTask();\n    if (task) {\n      task.errorCallback(event);\n    }\n  }\n\n  private runChunkedTask(\n      methodName: string, params: Record<string, string>, callback: (arg0: boolean, arg1: unknown) => void): void {\n    const task = new Task(methodName, params, onData, () => onData(null), true);\n    this.taskQueue.push(task);\n    this.processNextTask();\n\n    function onData(data: Object|null): void {\n      if (!data) {\n        callback(true, null);\n        return;\n      }\n      const isLastChunk = 'isLastChunk' in data && Boolean(data['isLastChunk']);\n      const chunk = 'chunk' in data && data['chunk'];\n      callback(isLastChunk, chunk);\n    }\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private runTask(methodName: FormatterActions.FormatterActions, params: Record<string, unknown>): Promise<any> {\n    return new Promise((resolve, reject) => {\n      const task = new Task(methodName, params, resolve, reject, false);\n      this.taskQueue.push(task);\n      this.processNextTask();\n    });\n  }\n\n  format(mimeType: string, content: string, indentString: string): Promise<FormatterActions.FormatResult> {\n    const parameters = {mimeType, content, indentString};\n    return this.runTask(FormatterActions.FormatterActions.FORMAT, parameters) as Promise<FormatterActions.FormatResult>;\n  }\n\n  javaScriptSubstitute(expression: string, mapping: Map<string, string|null>): Promise<string> {\n    if (mapping.size === 0) {\n      return Promise.resolve(expression);\n    }\n    return this.runTask(FormatterActions.FormatterActions.JAVASCRIPT_SUBSTITUTE, {content: expression, mapping})\n        .then(result => result || '');\n  }\n\n  javaScriptScopeTree(expression: string, sourceType: 'module'|'script' = 'script'):\n      Promise<FormatterActions.ScopeTreeNode|null> {\n    return this.runTask(FormatterActions.FormatterActions.JAVASCRIPT_SCOPE_TREE, {content: expression, sourceType})\n        .then(result => result || null);\n  }\n\n  parseCSS(content: string, callback: (arg0: boolean, arg1: CSSRule[]) => void): void {\n    this.runChunkedTask(FormatterActions.FormatterActions.PARSE_CSS, {content}, onDataChunk);\n\n    // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    function onDataChunk(isLastChunk: boolean, data: any): void {\n      const rules = (data || [] as CSSRule[]);\n      callback(isLastChunk, rules);\n    }\n  }\n}\n\nclass Task {\n  method: string;\n  params: unknown;\n  callback: (arg0: MessageEvent|null) => void;\n  errorCallback: (arg0: Event) => void;\n  isChunked: boolean|undefined;\n  constructor(\n      method: string, params: unknown, callback: (arg0: MessageEvent|null) => void,\n      errorCallback: (arg0: Event) => void, isChunked?: boolean) {\n    this.method = method;\n    this.params = params;\n    this.callback = callback;\n    this.errorCallback = errorCallback;\n    this.isChunked = isChunked;\n  }\n}\n\ninterface CSSProperty {\n  name: string;\n  nameRange: TextRange;\n  value: string;\n  valueRange: TextRange;\n  range: TextRange;\n  disabled?: boolean;\n}\n\nexport function formatterWorkerPool(): FormatterWorkerPool {\n  return FormatterWorkerPool.instance();\n}\n\nexport interface OutlineItem {\n  line: number;\n  column: number;\n  title: string;\n  subtitle?: string;\n}\n\nexport interface CSSStyleRule {\n  selectorText: string;\n  styleRange: TextRange;\n  lineNumber: number;\n  columnNumber: number;\n  properties: CSSProperty[];\n}\n\nexport interface CSSAtRule {\n  atRule: string;\n  lineNumber: number;\n  columnNumber: number;\n}\n\nexport type CSSRule = CSSStyleRule|CSSAtRule;\n\nexport interface TextRange {\n  startLine: number;\n  startColumn: number;\n  endLine: number;\n  endColumn: number;\n}\n", "// Copyright 2011 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport type * as FormatterActions from '../../entrypoints/formatter_worker/FormatterActions.js';\n\nimport {formatterWorkerPool} from './FormatterWorkerPool.js';\n\nfunction locationToPosition(lineEndings: number[], lineNumber: number, columnNumber: number): number {\n  const position = lineNumber ? lineEndings[lineNumber - 1] + 1 : 0;\n  return position + columnNumber;\n}\n\nfunction positionToLocation(lineEndings: number[], position: number): number[] {\n  const lineNumber =\n      Platform.ArrayUtilities.upperBound(lineEndings, position - 1, Platform.ArrayUtilities.DEFAULT_COMPARATOR);\n  let columnNumber;\n  if (!lineNumber) {\n    columnNumber = position;\n  } else {\n    columnNumber = position - lineEndings[lineNumber - 1] - 1;\n  }\n  return [lineNumber, columnNumber];\n}\n\nexport interface FormattedContent {\n  formattedContent: string;\n  formattedMapping: FormatterSourceMapping;\n}\n\nexport async function format(\n    contentType: Common.ResourceType.ResourceType, mimeType: string, content: string,\n    indent: string =\n        Common.Settings.Settings.instance().moduleSetting('text-editor-indent').get()): Promise<FormattedContent> {\n  if (contentType.isDocumentOrScriptOrStyleSheet()) {\n    return await formatScriptContent(mimeType, content, indent);\n  }\n\n  return {formattedContent: content, formattedMapping: new IdentityFormatterSourceMapping()};\n}\n\nexport async function formatScriptContent(\n    mimeType: string, content: string,\n    indent: string =\n        Common.Settings.Settings.instance().moduleSetting('text-editor-indent').get()): Promise<FormattedContent> {\n  const originalContent = content.replace(/\\r\\n?|[\\n\\u2028\\u2029]/g, '\\n').replace(/^\\uFEFF/, '');\n\n  const pool = formatterWorkerPool();\n\n  let formatResult: FormatterActions.FormatResult = {content: originalContent, mapping: {original: [], formatted: []}};\n  try {\n    formatResult = await pool.format(mimeType, originalContent, indent);\n  } catch {\n  }\n  const originalContentLineEndings = Platform.StringUtilities.findLineEndingIndexes(originalContent);\n  const formattedContentLineEndings = Platform.StringUtilities.findLineEndingIndexes(formatResult.content);\n\n  const sourceMapping =\n      new FormatterSourceMappingImpl(originalContentLineEndings, formattedContentLineEndings, formatResult.mapping);\n  return {formattedContent: formatResult.content, formattedMapping: sourceMapping};\n}\n\nexport interface FormatterSourceMapping {\n  originalToFormatted(lineNumber: number, columnNumber?: number): number[];\n  formattedToOriginal(lineNumber: number, columnNumber?: number): number[];\n}\n\nclass IdentityFormatterSourceMapping implements FormatterSourceMapping {\n  originalToFormatted(lineNumber: number, columnNumber = 0): number[] {\n    return [lineNumber, columnNumber];\n  }\n\n  formattedToOriginal(lineNumber: number, columnNumber = 0): number[] {\n    return [lineNumber, columnNumber];\n  }\n}\n\nclass FormatterSourceMappingImpl implements FormatterSourceMapping {\n  private readonly originalLineEndings: number[];\n  private readonly formattedLineEndings: number[];\n  private readonly mapping: FormatterActions.FormatMapping;\n\n  constructor(originalLineEndings: number[], formattedLineEndings: number[], mapping: FormatterActions.FormatMapping) {\n    this.originalLineEndings = originalLineEndings;\n    this.formattedLineEndings = formattedLineEndings;\n    this.mapping = mapping;\n  }\n\n  originalToFormatted(lineNumber: number, columnNumber?: number): number[] {\n    const originalPosition = locationToPosition(this.originalLineEndings, lineNumber, columnNumber || 0);\n    const formattedPosition = this.convertPosition(this.mapping.original, this.mapping.formatted, originalPosition);\n    return positionToLocation(this.formattedLineEndings, formattedPosition);\n  }\n\n  formattedToOriginal(lineNumber: number, columnNumber?: number): number[] {\n    const formattedPosition = locationToPosition(this.formattedLineEndings, lineNumber, columnNumber || 0);\n    const originalPosition = this.convertPosition(this.mapping.formatted, this.mapping.original, formattedPosition);\n    return positionToLocation(this.originalLineEndings, originalPosition);\n  }\n\n  private convertPosition(positions1: number[], positions2: number[], position: number): number {\n    const index =\n        Platform.ArrayUtilities.upperBound(positions1, position, Platform.ArrayUtilities.DEFAULT_COMPARATOR) - 1;\n    let convertedPosition: number = positions2[index] + position - positions1[index];\n    if (index < positions2.length - 1 && convertedPosition > positions2[index + 1]) {\n      convertedPosition = positions2[index + 1];\n    }\n    return convertedPosition;\n  }\n}\n"],
  "mappings": "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",
  "names": ["Common"]
}
