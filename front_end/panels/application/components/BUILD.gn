# Copyright 2020 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("../../../../scripts/build/ninja/devtools_entrypoint.gni")
import("../../../../scripts/build/ninja/devtools_module.gni")
import("../../../../scripts/build/ninja/generate_css.gni")
import("../../../../third_party/typescript/typescript.gni")
import("../../visibility.gni")

generate_css("css_files") {
  sources = [
    "backForwardCacheView.css",
    "badge.css",
    "bounceTrackingMitigationsView.css",
    "frameDetailsReportView.css",
    "interestGroupAccessGrid.css",
    "originTrialTokenRows.css",
    "originTrialTreeView.css",
    "permissionsPolicySection.css",
    "protocolHandlersView.css",
    "reportingApiGrid.css",
    "serviceWorkerRouterView.css",
    "sharedStorageAccessGrid.css",
    "sharedStorageMetadataView.css",
    "stackTraceLinkButton.css",
    "stackTraceRow.css",
    "trustTokensView.css",
  ]
}

devtools_module("components") {
  sources = [
    "BackForwardCacheStrings.ts",
    "BackForwardCacheView.ts",
    "BounceTrackingMitigationsView.ts",
    "EndpointsGrid.ts",
    "FrameDetailsView.ts",
    "InterestGroupAccessGrid.ts",
    "OriginTrialTreeView.ts",
    "PermissionsPolicySection.ts",
    "ProtocolHandlersView.ts",
    "ReportsGrid.ts",
    "ServiceWorkerRouterView.ts",
    "SharedStorageAccessGrid.ts",
    "SharedStorageMetadataView.ts",
    "StackTrace.ts",
    "StorageMetadataView.ts",
    "TrustTokensView.ts",
  ]

  deps = [
    "../../../core/common:bundle",
    "../../../core/host:bundle",
    "../../../core/i18n:bundle",
    "../../../core/platform:bundle",
    "../../../core/root:bundle",
    "../../../core/sdk:bundle",
    "../../../models/bindings:bundle",
    "../../../panels/network/forward:bundle",
    "../../../third_party/csp_evaluator:bundle",
    "../../../ui/components/adorners:bundle",
    "../../../ui/components/buttons:bundle",
    "../../../ui/components/chrome_link:bundle",
    "../../../ui/components/data_grid:bundle",
    "../../../ui/components/expandable_list:bundle",
    "../../../ui/components/icon_button:bundle",
    "../../../ui/components/legacy_wrapper:bundle",
    "../../../ui/components/report_view:bundle",
    "../../../ui/components/text_prompt:bundle",
    "../../../ui/components/tree_outline:bundle",
    "../../../ui/legacy:bundle",
    "../../../ui/legacy/components/source_frame:bundle",
    "../../../ui/legacy/components/utils:bundle",
  ]
}

devtools_entrypoint("bundle") {
  entrypoint = "components.ts"

  deps = [
    ":components",
    ":css_files",
  ]

  visibility = [
    ":*",
    "../:*",
    "../../../ui/components/docs/*",
  ]

  visibility += devtools_panels_visibility
}

ts_library("unittests") {
  testonly = true

  sources = [
    "BackForwardCacheView.test.ts",
    "BounceTrackingMitigationsView.test.ts",
    "EndpointsGrid.test.ts",
    "FrameDetailsView.test.ts",
    "InterestGroupAccessGrid.test.ts",
    "OriginTrialTreeView.test.ts",
    "ProtocolHandlersView.test.ts",
    "ReportsGrid.test.ts",
    "ServiceWorkerRouterView.test.ts",
    "SharedStorageAccessGrid.test.ts",
    "SharedStorageMetadataView.test.ts",
    "StackTrace.test.ts",
    "StorageMetadataView.test.ts",
    "TrustTokensView.test.ts",
  ]

  deps = [
    ":bundle",
    "../../../testing",
    "../../../ui/components/data_grid:bundle",
    "../../../ui/components/render_coordinator:bundle",
  ]
}
