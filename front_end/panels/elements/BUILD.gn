# Copyright 2020 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("../../../scripts/build/ninja/devtools_entrypoint.gni")
import("../../../scripts/build/ninja/devtools_module.gni")
import("../../../scripts/build/ninja/generate_css.gni")
import("../../../third_party/typescript/typescript.gni")
import("../visibility.gni")

generate_css("css_files") {
  sources = [
    "accessibilityTreeView.css",
    "classesPaneWidget.css",
    "computedStyleSidebarPane.css",
    "domLinkifier.css",
    "elementStatePaneWidget.css",
    "elementsPanel.css",
    "elementsTreeOutline.css",
    "layersWidget.css",
    "metricsSidebarPane.css",
    "nodeStackTraceWidget.css",
    "platformFontsWidget.css",
    "propertiesWidget.css",
    "stylePropertiesTreeOutline.css",
    "stylesSidebarPane.css",
  ]
}

devtools_module("elements") {
  sources = [
    "AccessibilityTreeUtils.ts",
    "AccessibilityTreeView.ts",
    "CSSRuleValidator.ts",
    "CSSRuleValidatorHelper.ts",
    "ClassesPaneWidget.ts",
    "ColorSwatchPopoverIcon.ts",
    "ComputedStyleModel.ts",
    "ComputedStyleWidget.ts",
    "DOMLinkifier.ts",
    "DOMPath.ts",
    "ElementStatePaneWidget.ts",
    "ElementsPanel.ts",
    "ElementsSidebarPane.ts",
    "ElementsTreeElement.ts",
    "ElementsTreeElementHighlighter.ts",
    "ElementsTreeOutline.ts",
    "EventListenersWidget.ts",
    "ImagePreviewPopover.ts",
    "InspectElementModeController.ts",
    "LayersWidget.ts",
    "MarkerDecorator.ts",
    "MetricsSidebarPane.ts",
    "NodeStackTraceWidget.ts",
    "PlatformFontsWidget.ts",
    "PropertiesWidget.ts",
    "PropertyNameCategories.ts",
    "PropertyParser.ts",
    "StyleEditorWidget.ts",
    "StylePropertiesSection.ts",
    "StylePropertyHighlighter.ts",
    "StylePropertyTreeElement.ts",
    "StylePropertyUtils.ts",
    "StylesSidebarPane.ts",
    "TopLayerContainer.ts",
    "WebCustomData.ts",
  ]

  deps = [
    "../../core/common:bundle",
    "../../core/host:bundle",
    "../../core/i18n:bundle",
    "../../core/platform:bundle",
    "../../core/protocol_client:bundle",
    "../../core/root:bundle",
    "../../core/sdk:bundle",
    "../../generated",
    "../../models/bindings:bundle",
    "../../models/extensions:bundle",
    "../../models/issues_manager:bundle",
    "../../models/workspace:bundle",
    "../../models/workspace_diff:bundle",
    "../../panels/emulation:bundle",
    "../../panels/event_listeners:bundle",
    "../../panels/issues:bundle",
    "../../panels/mobile_throttling:bundle",
    "../../panels/utils:bundle",
    "../../ui/components/adorners:bundle",
    "../../ui/components/code_highlighter:bundle",
    "../../ui/components/highlighting:bundle",
    "../../ui/components/text_editor:bundle",
    "../../ui/components/tree_outline:bundle",
    "../../ui/legacy:bundle",
    "../../ui/legacy/components/color_picker:bundle",
    "../../ui/legacy/components/inline_editor:bundle",
    "../../ui/legacy/components/object_ui:bundle",
    "../../ui/legacy/components/utils:bundle",
    "../../ui/lit-html:bundle",
    "./components:bundle",
  ]

  visibility = [ "../../component_docs/*" ]
}

devtools_entrypoint("bundle") {
  entrypoint = "elements.ts"

  deps = [
    ":css_files",
    ":elements",
  ]

  visibility = [
    ":*",
    "../../entrypoints/*",
    "../../panels/recorder/*",
    "../../ui/components/docs/computed_style_property/*",
    "../../ui/components/docs/computed_style_trace/*",
    "../../ui/components/docs/elements_breadcrumbs/*",
    "../../ui/components/docs/flexbox_editor/*",
    "../../ui/components/docs/layout_pane/*",
    "../network/*",
  ]

  visibility += devtools_panels_visibility
}

devtools_entrypoint("meta") {
  entrypoint = "elements-meta.ts"

  deps = [
    ":bundle",
    "../../core/common:bundle",
    "../../core/i18n:bundle",
    "../../core/root:bundle",
    "../../core/sdk:bundle",
    "../../ui/legacy:bundle",
    "./components:bundle",
  ]

  visibility = [
    "../../entrypoints/*",
    "../../testing/*",
  ]
}

ts_library("unittests") {
  testonly = true

  sources = [
    "AccessibilityTreeView.test.ts",
    "CSSRuleValidator.test.ts",
    "ClassesPaneWidget.test.ts",
    "DOMLinkifier.test.ts",
    "ElementsPanel.test.ts",
    "ElementsTreeElementHighlighter.test.ts",
    "InspectElementModeController.test.ts",
    "PlatformFontsWidget.test.ts",
    "PropertiesWidget.test.ts",
    "PropertyParser.test.ts",
    "StylePropertiesSection.test.ts",
    "StylePropertyHighlighter.test.ts",
    "StylePropertyTreeElement.test.ts",
    "StylePropertyUtils.test.ts",
    "StylesSidebarPane.test.ts",
    "TopLayerContainer.test.ts",
    "WebCustomData.test.ts",
  ]

  deps = [
    ":bundle",
    "../../testing",
    "./components:unittests",
  ]
}
