# Copyright 2020 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("../../../scripts/build/ninja/devtools_entrypoint.gni")
import("../../../scripts/build/ninja/devtools_module.gni")
import("../../../scripts/build/ninja/generate_css.gni")
import("../visibility.gni")

generate_css("css_files") {
  sources = [
    "historyToolbarButton.css",
    "invalidationsTree.css",
    "timelineFlamechartPopover.css",
    "timelineHistoryManager.css",
    "timelineMiniMap.css",
    "timelinePaintProfiler.css",
    "timelinePanel.css",
    "timelineStatusDialog.css",
  ]
}

devtools_module("timeline") {
  sources = [
    "AnimationsTrackAppender.ts",
    "AppenderUtils.ts",
    "CLSLinkifier.ts",
    "CompatibilityTracksAppender.ts",
    "CountersGraph.ts",
    "EventUICategory.ts",
    "EventsTimelineTreeView.ts",
    "GPUTrackAppender.ts",
    "InteractionsTrackAppender.ts",
    "LayoutShiftsTrackAppender.ts",
    "NetworkTrackAppender.ts",
    "PerformanceModel.ts",
    "SaveFileFormatter.ts",
    "SourceMapsResolver.ts",
    "ThreadAppender.ts",
    "TimelineController.ts",
    "TimelineDetailsView.ts",
    "TimelineEventOverview.ts",
    "TimelineFilters.ts",
    "TimelineFlameChartDataProvider.ts",
    "TimelineFlameChartNetworkDataProvider.ts",
    "TimelineFlameChartView.ts",
    "TimelineHistoryManager.ts",
    "TimelineLayersView.ts",
    "TimelineLoader.ts",
    "TimelineMiniMap.ts",
    "TimelinePaintProfilerView.ts",
    "TimelinePanel.ts",
    "TimelineSelection.ts",
    "TimelineTreeView.ts",
    "TimelineUIUtils.ts",
    "TimingsTrackAppender.ts",
    "UIDevtoolsController.ts",
    "UIDevtoolsUtils.ts",
  ]

  deps = [
    "../../core/host:bundle",
    "../../core/i18n:bundle",
    "../../generated:protocol",
    "../../models/cpu_profile:bundle",
    "../../models/extensions:bundle",
    "../../models/source_map_scopes:bundle",
    "../../models/timeline_model:bundle",
    "../../models/trace:bundle",
    "../../panels/coverage:bundle",
    "../../panels/layer_viewer:bundle",
    "../../panels/mobile_throttling:bundle",
    "../../panels/profiler:bundle",
    "../../ui/components/panel_feedback:bundle",
    "../../ui/legacy/components/data_grid:bundle",
    "../../ui/legacy/components/perf_ui:bundle",
    "../../ui/legacy/components/utils:bundle",
    "../../ui/legacy/theme_support:bundle",
    "../../ui/lit-html:bundle",
    "./components:bundle",
  ]

  visibility = [ "../../component_docs/*" ]
}

devtools_entrypoint("bundle") {
  entrypoint = "timeline.ts"

  deps = [
    ":css_files",
    ":timeline",
  ]

  visibility = [
    ":*",
    "../../../test/interactions/panels/performance/timeline/*",
    "../../../test/unittests/front_end/entrypoints/missing_entrypoints/*",
    "../../../test/unittests/front_end/helpers",
    "../../../test/unittests/front_end/models/trace/*",
    "../../../test/unittests/front_end/panels/timeline/*",
    "../../entrypoints/*",
    "../../ui/components/docs/performance_panel/*",
    "../js_profiler/*",
    "../recorder/*",

    # TODO(crbug.com/1202788): Remove invalid dependents
    "../input/*",
    "../lighthouse/*",
  ]

  visibility += devtools_panels_visibility
}

devtools_entrypoint("meta") {
  entrypoint = "timeline-meta.ts"

  deps = [ ":bundle" ]

  visibility = [ "../../entrypoints/*" ]
}
