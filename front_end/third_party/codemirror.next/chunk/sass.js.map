{"version":3,"file":"sass.js","sources":["../node_modules/@lezer/sass/dist/index.js","../node_modules/@codemirror/lang-sass/dist/index.js"],"sourcesContent":["import { ExternalTokenizer, ContextTracker, LRParser } from '@lezer/lr';\nimport { styleTags, tags } from '@lezer/highlight';\n\n// This file was generated by lezer-generator. You probably shouldn't edit it.\nconst indent = 154,\n  dedent = 155,\n  descendantOp = 156,\n  InterpolationEnd = 1,\n  InterpolationContinue = 2,\n  Unit = 3,\n  callee = 157,\n  identifier = 158,\n  VariableName = 4,\n  InterpolationStart = 5,\n  newline = 159,\n  blankLineStart = 160,\n  eof = 161,\n  whitespace = 162,\n  LineComment = 6,\n  Comment = 7,\n  IndentedMixin = 8,\n  IndentedInclude = 9,\n  Dialect_indented = 0;\n\n/* Hand-written tokenizers for CSS tokens that can't be\n   expressed by Lezer's built-in tokenizer. */\n\nconst space = [9, 10, 11, 12, 13, 32, 133, 160, 5760, 8192, 8193, 8194, 8195, 8196, 8197,\n               8198, 8199, 8200, 8201, 8202, 8232, 8233, 8239, 8287, 12288];\nconst colon = 58, parenL = 40, underscore = 95, bracketL = 91, dash = 45, period = 46,\n      hash = 35, percent = 37, braceL = 123, braceR = 125, slash = 47, asterisk = 42,\n      newlineChar = 10, equals = 61, plus = 43, and = 38;\n\nfunction isAlpha(ch) { return ch >= 65 && ch <= 90 || ch >= 97 && ch <= 122 || ch >= 161 }\n\nfunction isDigit(ch) { return ch >= 48 && ch <= 57 }\n\nfunction startOfComment(input) {\n  let next;\n  return input.next == slash && ((next = input.peek(1)) == slash || next == asterisk)\n}\n\nconst spaces = new ExternalTokenizer((input, stack) => {\n  if (stack.dialectEnabled(Dialect_indented)) {\n    let prev;\n    if (input.next < 0 && stack.canShift(eof)) {\n      input.acceptToken(eof);\n    } else if (((prev = input.peek(-1)) == newlineChar || prev < 0) && stack.canShift(blankLineStart)) {\n      let spaces = 0;\n      while (input.next != newlineChar && space.includes(input.next)) { input.advance(); spaces++; }\n      if (input.next == newlineChar || startOfComment(input))\n        input.acceptToken(blankLineStart, -spaces);\n      else if (spaces)\n        input.acceptToken(whitespace);\n    } else if (input.next == newlineChar) {\n      input.acceptToken(newline, 1);\n    } else if (space.includes(input.next)) {\n      input.advance();\n      while (input.next != newlineChar && space.includes(input.next)) input.advance();\n      input.acceptToken(whitespace);\n    }\n  } else {\n    let length = 0;\n    while (space.includes(input.next)) {\n      input.advance();\n      length++;\n    }\n    if (length) input.acceptToken(whitespace);\n  }\n}, {contextual: true});\n\nconst comments = new ExternalTokenizer((input, stack) => {\n  if (!startOfComment(input)) return\n  input.advance();\n  if (stack.dialectEnabled(Dialect_indented)) {\n    let indentedComment = -1;\n    for (let off = 1;; off++) {\n      let prev = input.peek(-off - 1);\n      if (prev == newlineChar || prev < 0) {\n        indentedComment = off + 1;\n        break\n      } else if (!space.includes(prev)) {\n        break\n      }\n    }\n    if (indentedComment > -1) { // Weird indented-style comment\n      let block = input.next == asterisk, end = 0;\n      input.advance();\n      while (input.next >= 0) {\n        if (input.next == newlineChar) {\n          input.advance();\n          let indented = 0;\n          while (input.next != newlineChar && space.includes(input.next)) {\n            indented++;\n            input.advance();\n          }\n          if (indented < indentedComment) {\n            end = -indented - 1;\n            break\n          }\n        } else if (block && input.next == asterisk && input.peek(1) == slash) {\n          end = 2;\n          break\n        } else {\n          input.advance();\n        }\n      }\n      input.acceptToken(block ? Comment : LineComment, end);\n      return\n    }\n  }\n  if (input.next == slash) {\n    while (input.next != newlineChar && input.next >= 0) input.advance();\n    input.acceptToken(LineComment);\n  } else {\n    input.advance();\n    while (input.next >= 0) {\n      let {next} = input;\n      input.advance();\n      if (next == asterisk && input.next == slash) {\n        input.advance();\n        break\n      }\n    }\n    input.acceptToken(Comment);\n  }\n});\n\nconst indentedMixins = new ExternalTokenizer((input, stack) => {\n  if ((input.next == plus || input.next == equals) && stack.dialectEnabled(Dialect_indented))\n    input.acceptToken(input.next == equals ? IndentedMixin : IndentedInclude, 1);\n});\n\nconst indentation = new ExternalTokenizer((input, stack) => {\n  if (!stack.dialectEnabled(Dialect_indented)) return\n  let cDepth = stack.context.depth;\n  if (input.next < 0 && cDepth) {\n    input.acceptToken(dedent);\n    return\n  }\n  let prev = input.peek(-1);\n  if (prev == newlineChar) {\n    let depth = 0;\n    while (input.next != newlineChar && space.includes(input.next)) {\n      input.advance();\n      depth++;\n    }\n    if (depth != cDepth &&\n        input.next != newlineChar && !startOfComment(input)) {\n      if (depth < cDepth) input.acceptToken(dedent, -depth);\n      else input.acceptToken(indent);\n    }\n  }\n});\n\nconst identifiers = new ExternalTokenizer((input, stack) => {\n  for (let inside = false, dashes = 0, i = 0;; i++) {\n    let {next} = input;\n    if (isAlpha(next) || next == dash || next == underscore || (inside && isDigit(next))) {\n      if (!inside && (next != dash || i > 0)) inside = true;\n      if (dashes === i && next == dash) dashes++;\n      input.advance();\n    } else if (next == hash && input.peek(1) == braceL) {\n      input.acceptToken(InterpolationStart, 2);\n      break\n    } else {\n      if (inside)\n        input.acceptToken(next == parenL ? callee : dashes == 2 && stack.canShift(VariableName) ? VariableName : identifier);\n      break\n    }\n  }\n});\n\nconst interpolationEnd = new ExternalTokenizer(input => {\n  if (input.next == braceR) {\n    input.advance();\n    while (isAlpha(input.next) || input.next == dash || input.next == underscore || isDigit(input.next))\n      input.advance();\n    if (input.next == hash && input.peek(1) == braceL)\n      input.acceptToken(InterpolationContinue, 2);\n    else\n      input.acceptToken(InterpolationEnd);\n  }\n});\n\nconst descendant = new ExternalTokenizer(input => {\n  if (space.includes(input.peek(-1))) {\n    let {next} = input;\n    if (isAlpha(next) || next == underscore || next == hash || next == period ||\n        next == bracketL || next == colon || next == dash || next == and)\n      input.acceptToken(descendantOp);\n  }\n});\n\nconst unitToken = new ExternalTokenizer(input => {\n  if (!space.includes(input.peek(-1))) {\n    let {next} = input;\n    if (next == percent) { input.advance(); input.acceptToken(Unit); }\n    if (isAlpha(next)) {\n      do { input.advance(); } while (isAlpha(input.next))\n      input.acceptToken(Unit);\n    }\n  }\n});\n\nfunction IndentLevel(parent, depth) {\n  this.parent = parent;\n  this.depth = depth;\n  this.hash = (parent ? parent.hash + parent.hash << 8 : 0) + depth + (depth << 4);\n}\n\nconst topIndent = new IndentLevel(null, 0);\n\nconst trackIndent = new ContextTracker({\n  start: topIndent,\n  shift(context, term, stack, input) {\n    if (term == indent) return new IndentLevel(context, stack.pos - input.pos)\n    if (term == dedent) return context.parent\n    return context\n  },\n  hash(context) { return context.hash }\n});\n\nconst cssHighlighting = styleTags({\n  \"AtKeyword import charset namespace keyframes media supports include mixin use forward extend at-root\": tags.definitionKeyword,\n  \"Keyword selector\": tags.keyword,\n  \"ControlKeyword\": tags.controlKeyword,\n  NamespaceName: tags.namespace,\n  KeyframeName: tags.labelName,\n  TagName: tags.tagName,\n  \"ClassName Suffix\": tags.className,\n  PseudoClassName: tags.constant(tags.className),\n  IdName: tags.labelName,\n  \"FeatureName PropertyName\": tags.propertyName,\n  AttributeName: tags.attributeName,\n  NumberLiteral: tags.number,\n  KeywordQuery: tags.keyword,\n  UnaryQueryOp: tags.operatorKeyword,\n  \"CallTag ValueName\": tags.atom,\n  VariableName: tags.variableName,\n  SassVariableName: tags.special(tags.variableName),\n  Callee: tags.operatorKeyword,\n  Unit: tags.unit,\n  \"UniversalSelector NestingSelector IndentedMixin IndentedInclude\": tags.definitionOperator,\n  MatchOp: tags.compareOperator,\n  \"ChildOp SiblingOp, LogicOp\": tags.logicOperator,\n  BinOp: tags.arithmeticOperator,\n  \"Important Global Default\": tags.modifier,\n  Comment: tags.blockComment,\n  LineComment: tags.lineComment,\n  ColorLiteral: tags.color,\n  \"ParenthesizedContent StringLiteral\": tags.string,\n  \"InterpolationStart InterpolationContinue InterpolationEnd\": tags.meta,\n  \": \\\"...\\\"\": tags.punctuation,\n  \"PseudoOp #\": tags.derefOperator,\n  \"; ,\": tags.separator,\n  \"( )\": tags.paren,\n  \"[ ]\": tags.squareBracket,\n  \"{ }\": tags.brace\n});\n\n// This file was generated by lezer-generator. You probably shouldn't edit it.\nconst spec_identifier = {__proto__:null,not:62, only:62, using:179, as:189, with:193, without:193, hide:207, show:207, from:230, to:232, if:245, through:251, in:257};\nconst spec_callee = {__proto__:null,url:80, \"url-prefix\":80, domain:80, regexp:80, lang:94, \"nth-child\":94, \"nth-last-child\":94, \"nth-of-type\":94, \"nth-last-of-type\":94, dir:94, \"host-context\":94, selector:172};\nconst spec_AtKeyword = {__proto__:null,\"@import\":156, \"@include\":176, \"@mixin\":182, \"@function\":182, \"@use\":186, \"@extend\":196, \"@at-root\":200, \"@forward\":204, \"@media\":210, \"@charset\":214, \"@namespace\":218, \"@keyframes\":224, \"@supports\":236, \"@if\":240, \"@else\":242, \"@for\":248, \"@each\":254, \"@while\":260, \"@debug\":264, \"@warn\":264, \"@error\":264, \"@return\":264};\nconst parser = LRParser.deserialize({\n  version: 14,\n  states: \"L|Q`Q+tOOO#fQ+tOOP#mOpOOOOQ#U'#Ch'#ChO#rQ(pO'#CjOOQ#U'#Ci'#CiO%_Q)QO'#FxO%rQ.jO'#CnO&jQ#dO'#DWO'aQ(pO'#CgO'hQ)OO'#DYO'sQ#dO'#DaO'xQ#dO'#DeO'}Q#dO'#DnOOQ#U'#Fx'#FxO(SQ(pO'#FxO(ZQ(nO'#DrO%rQ.jO'#DzO%rQ.jO'#EVO%rQ.jO'#EYO%rQ.jO'#E[O(`Q)OO'#EaO)QQ)OO'#EcO%rQ.jO'#EeO)_Q)OO'#EhO%rQ.jO'#EjO)yQ)OO'#ElO*UQ#dO'#EoO*ZQ)OO'#EuO*oQ)OO'#FVOOQ&Z'#Fw'#FwOOQ&Y'#FY'#FYO*yQ(nO'#FYQ`Q+tOOO%rQ.jO'#EwO+UQ(nO'#E{O+ZQ)OO'#FOO%rQ.jO'#FRO%rQ.jO'#FTOOQ&Z'#Fa'#FaO+cQ+uO'#GRO+pQ(oO'#GRQOQ#SOOP,RO#SO'#FvPOOO)CAk)CAkOOQ#U'#Cm'#CmOOQ#U,59W,59WOOQ#i'#Cp'#CpO%rQ.jO'#CsO,aQ.wO'#CuO.|Q.^O,59YO%rQ.jO'#CzOOQ#S'#DO'#DOO/_Q(nO'#DTOOQ#i'#Fz'#FzO/dQ(nO'#C}OOQ#U'#DX'#DXOOQ#U,59r,59rO&jQ#dO,59rO/iQ)OO,59tO'sQ#dO,59{O'xQ#dO,5:PO(`Q)OO,5:TO(`Q)OO,5:VO(`Q)OO,5:WO(`Q)OO'#F`O/tQ(nO,59RO0PQ+tO'#DpO0WQ#TO'#DpOOQ&Z,59R,59ROOQ#U'#D['#D[OOQ#S'#D_'#D_OOQ#U,59t,59tO0]Q(nO,59tO0bQ(nO,59tOOQ#U'#Dc'#DcOOQ#U,59{,59{OOQ#S'#Dg'#DgO0gQ9`O,5:POOQ#U'#Do'#DoOOQ#U,5:Y,5:YO1gQ.jO,5:^O1qQ.jO,5:fO2jQ.jO,5:qO2wQ.YO,5:tO3YQ.jO,5:vOOQ#U'#Cj'#CjO4RQ(pO,5:{O4`Q(pO,5:}OOQ&Z,5:},5:}O4gQ)OO,5:}O4lQ.jO,5;POOQ#S'#D}'#D}O5[Q)OO'#ESO5cQ(nO'#GTO*ZQ)OO'#ERO5wQ(nO'#ETOOQ#S'#GU'#GUO/wQ(nO,5;SO3`Q.YO,5;UOOQ#d'#En'#EnO*yQ(nO,5;WO5|Q)OO,5;WOOQ#S'#Eq'#EqO6UQ(nO,5;ZO6ZQ(nO,5;aO6fQ(nO,5;qOOQ&Z'#GV'#GVOOQ&Y,5;t,5;tOOQ&Y-E9W-E9WO2wQ.YO,5;cO6tQ)OO,5;gO6yQ)OO'#GXO7RQ)OO,5;jO2wQ.YO,5;mO3`Q.YO,5;oOOQ&Z-E9_-E9_O7WQ(oO,5<mOOQ&Z'#GS'#GSO7iQ+uO'#FdO7WQ(oO,5<mPOO#S'#FX'#FXP7|O#SO,5<bPOOO,5<b,5<bO8[Q.YO,59_OOQ#i,59a,59aO%rQ.jO,59cO%rQ.jO,59hO%rQ.jO'#F]O8jQ#WO1G.tOOQ#k1G.t1G.tO8rQ.oO,59fO;[Q! lO,59oO<XQ.jO'#DPOOQ#i,59i,59iOOQ#U1G/^1G/^OOQ#U1G/`1G/`O0]Q(nO1G/`O0bQ(nO1G/`OOQ#U1G/g1G/gO<cQ9`O1G/kO<|Q(pO1G/oO=pQ(pO1G/qO>dQ(pO1G/rO?WQ(pO,5;zOOQ#S-E9^-E9^OOQ&Z1G.m1G.mO?eQ(nO,5:[O?jQ+uO,5:[O?qQ)OO'#D`O?xQ.jO'#D^OOQ#U1G/k1G/kO%rQ.jO1G/kO@tQ.jO'#DtOAOQ.kO1G/xOOQ#T1G/x1G/xO*yQ(nO1G0QOA{Q+uO'#GVOOQ&Z1G0]1G0]O/dQ(nO1G0]OOQ&Z1G0`1G0`OOQ&Z1G0b1G0bO/dQ(nO1G0bODeQ)OO1G0bOOQ&Z1G0g1G0gOOQ&Z1G0i1G0iODmQ)OO1G0iODrQ(nO1G0iODwQ)OO1G0kOOQ&Z1G0k1G0kOEVQ.jO'#FfOEgQ#dO1G0kOElQ(nO'#D}OEwQ(nO,5:jOE|Q(nO,5:nO*ZQ)OO,5:lOFUQ)OO'#FeOFiQ(nO,5<oOFzQ(nO,5:mO(`Q)OO,5:oOOQ&Z1G0n1G0nOOQ&Z1G0p1G0pOOQ&Z1G0r1G0rO*yQ(nO1G0rOGcQ)OO'#ErOOQ&Z1G0u1G0uOOQ&Z1G0{1G0{OOQ&Z1G1]1G1]OGqQ+uO1G0}O%rQ.jO1G1ROJZQ)OO'#FjOJfQ)OO,5<sO%rQ.jO1G1UOOQ&Z1G1X1G1XOOQ&Z1G1Z1G1ZOJnQ(oO1G2XOKPQ+uO,5<OOOQ#T,5<O,5<OOOQ#T-E9b-E9bPOO#S-E9V-E9VPOOO1G1|1G1|OOQ#i1G.y1G.yOKdQ.oO1G.}OOQ#i1G/S1G/SOM|Q.^O,5;wOOQ#W-E9Z-E9ZOOQ#k7+$`7+$`ON_Q(nO1G/ZONdQ.jO'#FZO! nQ.jO'#F}O!#VQ.jO'#FzO!#^Q(nO,59kOOQ#U7+$z7+$zOOQ#U7+%V7+%VO%rQ.jO7+%VOOQ&Z1G/v1G/vO!#cQ#TO1G/vO!#hQ(pO'#GPO!#rQ(nO,59zO!#wQ.jO'#GOO!$RQ(nO,59xO!$WQ.YO7+%VO!$fQ.YO'#FzO!$wQ(nO,5:`OOQ#T,5:`,5:`O!%PQ.kO'#FcO%rQ.jO'#FcO!&pQ.kO7+%dOOQ#T7+%d7+%dOOQ&Z7+%l7+%lO6fQ(nO7+%wO*yQ(nO7+%|OOQ#d'#E_'#E_O!'dQ)OO7+%|O!'rQ(nO7+&TO*ZQ)OO7+&TOOQ#d-E9d-E9dOOQ&Z7+&V7+&VO!'wQ.jO'#GWOOQ#d,5<Q,5<QODhQ(nO7+&VO%rQ.jO1G0UOOQ#S1G0Y1G0YOOQ#S1G0W1G0WO!(cQ(nO,5<POOQ#S-E9c-E9cO!(wQ(pO1G0ZOOQ&Z7+&^7+&^O!)OQ(vO'#CuO/wQ(nO'#FhO!)ZQ)OO,5;^OOQ&Z,5;^,5;^O!)iQ+uO7+&iO!,RQ)OO7+&iO!,^Q.jO7+&mOOQ#d,5<U,5<UOOQ#d-E9h-E9hO2wQ.YO7+&pOOQ#T1G1j1G1jOOQ#i7+$u7+$uOOQ#d-E9X-E9XO!,oQ.jO'#F[O!,|Q(nO,5<iO!,|Q(nO,5<iO%rQ.jO,5<iOOQ#i1G/V1G/VO!-UQ.YO<<HqOOQ&Z7+%b7+%bO!-dQ)OO'#F_O!-nQ(nO,5<kOOQ#U1G/f1G/fO!-vQ.jO'#F^O!.QQ(nO,5<jOOQ#U1G/d1G/dOOQ#U<<Hq<<HqO0oQ.jO,5;|O!.YQ(nO'#FbOOQ#S-E9`-E9`OOQ#T1G/z1G/zO!._Q.kO,5;}OOQ#e-E9a-E9aOOQ#T<<IO<<IOOOQ&Z<<Ic<<IcOOQ&Z<<Ih<<IhO/dQ(nO<<IhO*ZQ)OO<<IoO!0OQ(nO<<IoO!0WQ.jO'#FgO!0kQ)OO,5<rODwQ)OO<<IqO!0|Q.jO7+%pOOQ#S7+%u7+%uOOQ#d,5<S,5<SOOQ#d-E9f-E9fOOQ&Z1G0x1G0xOOQ&Z-E9g-E9gO!,RQ)OO<<JTO%rQ.jO,5<TOOQ&Z<<JT<<JTO%rQ.jO<<JXOOQ&Z<<J[<<J[O!1TQ.jO,5;vO!1bQ.jO,5;vOOQ#S-E9Y-E9YO!1iQ(nO1G2TO!1qQ.jO1G2TOOQ#UAN>]AN>]O!1{Q(pO,5;yOOQ#S-E9]-E9]O!2VQ.jO,5;xOOQ#S-E9[-E9[O!2aQ.YO1G1hO!2uQ(nO1G1hO*yQ(nOAN?SO!3QQ(nOAN?ZO/wQ(nOAN?ZO!3YQ.jO,5<ROOQ#d-E9e-E9eODwQ)OOAN?]OOQ&ZAN?]AN?]OOQ#S<<I[<<I[P!3tQ)OO'#FiOOQ&ZAN?oAN?oO2wQ.YO1G1oO2wQ.YOAN?sOOQ#S1G1b1G1bO%rQ.jO1G1bO!3yQ(nO7+'oOOQ#S7+'S7+'SOOQ&ZG24nG24nO/wQ(nOG24uOOQ&ZG24uG24uOOQ&ZG24wG24wOOQ&Z7+'Z7+'ZOOQ&ZG25_G25_O!4RQ.jO7+&|OOQ&ZLD*aLD*a\",\n  stateData: \"!4c~O$hOSVOSUOS$fQQ~OS`OTVOWcOXbO_UOc`OtYO}YO!UZO!Y[O!omO!paO!zbO!}cO#PdO#UeO#WfO#YgO#]hO#_iO#ajO#dkO#jlO#lrO#psO#stO#vuO#xvO$dSO$mRO$pWO$t]O~O$_$uP~P`O$f{O~Ot^Xt!gXv^X}^X!U^X!Y^X!^^X!a^X!e^X$b^X$e^X$p^X~Ot$lXv$lX}$lX!U$lX!Y$lX!^$lX!a$lX!e$lX$b$lX$e$lX$p$lX~O$d}O!l$lX$g$lXf$lXe$lX~P$jOS!WOTVO_!WOc!WOf!QOh!WOj!WOo!TOx!VO$c!UO$d!PO$o!RO~O$d!YO~Ot!]O}!]O!U!^O!Y!_O!^!`O!a!bO!e!eO$b!aO$e!fO$p![O~Ov!cO~P&oO!P!lO$c!iO$d!hO~O$d!mO~O$d!oO~O$d!qO~Ot!sO~P$jOt!sO~OTVO_UOtYO}YO!UZO!Y[O$d!xO$mRO$pWO$t]O~Of!|O!e!eO$e!fO~P(`OTVOc#TOf#POo#RO!x#SO$d#OO!e$wP$e$wP~Oj#XOx!VO$d#WO~O$d#ZO~OTVOc#TOf#POo#RO!x#SO$d#OO~O!l$wP$g$wP~P)_O!l#_O$e#_O$g#_O~Oc#cO~Oc#dO#t${P~O$_$uX!m$uX$a$uX~P`O!l#jO$e#jO$_$uX!m$uX$a$uX~OU#mOV#mO$e#oO$h#mO~OR#qOPiXQiXliXmiX$piXTiXciXfiXoiX!liX!xiX$diX$eiX$giX!eiX!{iX#QiX#SiX#ZiXeiXSiX_iXhiXjiXviXxiX!iiX!jiX!kiX$ciX$oiX$_iXuiX!WiX#hiX#qiX!miX$aiX~OP#vOQ#tOl#rOm#rO$p#sO~Of#xO~Of#yO~O!P$OO$c!iO$d!hO~Ov!cO!e!eO$e!fO~O!m$uP~P`O$`$YO~Of$ZO~Of$[O~O!W$]O![$^O~OS!WOTVO_!WOc!WOf$_Oh!WOj!WOo!TOx!VO$c!UO$d!PO$o!RO~O!e!eO$e!fO~P0oOl#rOm#rO$p#sO!l$wP$e$wP$g$wP~P*ZOl#rOm#rO!l#_O$g#_O$p#sO~O!e!eO!{$eO$e$cO~P2XOl#rOm#rO!e!eO$e!fO$p#sO~O#Q$iO#S$hO$e#_O~P2XOt!]O}!]O!U!^O!Y!_O!^!`O!a!bO$b!aO$p![O~O!l#_O$e#_O$g#_O~P3gOf$lO~P&oO#S$mO~O#Q$qO#Z$pO$e#_O~P2XOTVOc#TOf#POo#RO!x#SO~O$d$rO~P4yOm$uOv$vO!e$wX$e$wX!l$wX$g$wX~Of$yO~Oj$}Ox!VO~O!e%OO~Om$uO!e!eO$e!fO~O!e!eO!l#_O$e$cO$g#_O~O#g%TO~Ov%UO#t${X~O#t%WO~O!l#jO$e#jO$_$ua!m$ua$a$ua~O!l$WX$_$WX$e$WX!m$WX$a$WX~P`OU#mOV#mO$e%`O$h#mO~Oe%aOl#rOm#rO$p#sO~OP%fOQ#tO~Ol#rOm#rO$p#sOPnaQnaTnacnafnaona!lna!xna$dna$ena$gna!ena!{na#Qna#Sna#ZnaenaSna_nahnajnavnaxna!ina!jna!kna$cna$ona$_nauna!Wna#hna#qna!mna$ana~Oj%gOy%gO~OS!WOTVO_!WOf!QOh!WOj!WOo!TOx!VO$c!UO$d!PO$o!RO~Oc%jOe$qP~P;dO!W%mO![%nO~Ot!]O}!]O!U!^O!Y!_O$p![O~Ov!]i!^!]i!a!]i!e!]i$b!]i$e!]i!l!]i$g!]if!]ie!]i~P<kOv!_i!^!_i!a!_i!e!_i$b!_i$e!_i!l!_i$g!_if!_ie!_i~P<kOv!`i!^!`i!a!`i!e!`i$b!`i$e!`i!l!`i$g!`if!`ie!`i~P<kOv$Sa!e$Sa$e$Sa~P3gO!m%oO~O$a$uP~P`Oe$sP~P(`Oe$rP~P%rOS!WOTVO_!WOc!WOf!QOh!WOo!TOx!VO$c!UO$d!PO$o!RO~Oe%xOj%vO~P@POl#rOm#rOv%zO!i%|O!j%|O!k%|O$p#sO!l!fi$e!fi$g!fi$_!fi!m!fi$a!fi~P%rO$`$YOS$yXT$yXW$yXX$yX_$yXc$yXt$yX}$yX!U$yX!Y$yX!o$yX!p$yX!z$yX!}$yX#P$yX#U$yX#W$yX#Y$yX#]$yX#_$yX#a$yX#d$yX#j$yX#l$yX#p$yX#s$yX#v$yX#x$yX$_$yX$d$yX$m$yX$p$yX$t$yX!m$yX!l$yX$e$yX$a$yX~O$d!PO$m&QO~O#S&SO~Ot&TO~O!l#_O#Z$pO$e#_O$g#_O~O!l$zP#Z$zP$e$zP$g$zP~P%rO$d!PO~Oe!qXm!qXt!sX~Ot&ZO~Oe&[Om$uO~Ov$XX!e$XX$e$XX!l$XX$g$XX~P*ZOv$vO!e$wa$e$wa!l$wa$g$wa~Om$uOv!ua!e!ua$e!ua!l!ua$g!uae!ua~O!m&eO#g&cO#h&cO$o&bO~O#m&gOS#kiT#kiW#kiX#ki_#kic#kit#ki}#ki!U#ki!Y#ki!o#ki!p#ki!z#ki!}#ki#P#ki#U#ki#W#ki#Y#ki#]#ki#_#ki#a#ki#d#ki#j#ki#l#ki#p#ki#s#ki#v#ki#x#ki$_#ki$d#ki$m#ki$p#ki$t#ki!m#ki!l#ki$e#ki$a#ki~Oc&iOv$^X#t$^X~Ov%UO#t${a~O!l#jO$e#jO$_$ui!m$ui$a$ui~O!l$Wa$_$Wa$e$Wa!m$Wa$a$Wa~P`O$p#sOPkiQkilkimkiTkickifkioki!lki!xki$dki$eki$gki!eki!{ki#Qki#Ski#ZkiekiSki_kihkijkivkixki!iki!jki!kki$cki$oki$_kiuki!Wki#hki#qki!mki$aki~Ol#rOm#rO$p#sOP$PaQ$Pa~Oe&mO~Ol#rOm#rO$p#sOS#}XT#}X_#}Xc#}Xe#}Xf#}Xh#}Xj#}Xo#}Xu#}Xv#}Xx#}X$c#}X$d#}X$o#}X~Ou&qOv&oOe$qX~P%rOS$nXT$nX_$nXc$nXe$nXf$nXh$nXj$nXl$nXm$nXo$nXu$nXv$nXx$nX$c$nX$d$nX$o$nX$p$nX~Ot&rO~P! {Oe&sO~O$a&uO~Ov&vOe$sX~P3gOe&xO~Ov&yOe$rX~P%rOe&{O~Ol#rOm#rO!W&|O$p#sO~Ot&}Oe$nXl$nXm$nX$p$nX~Oe'QOj'OO~Ol#rOm#rO$p#sOS$VXT$VX_$VXc$VXf$VXh$VXj$VXo$VXv$VXx$VX!i$VX!j$VX!k$VX!l$VX$c$VX$d$VX$e$VX$g$VX$o$VX$_$VX!m$VX$a$VX~Ov%zO!i'TO!j'TO!k'TO!l!fq$e!fq$g!fq$_!fq!m!fq$a!fq~P%rO!l#_O#S'WO$e#_O$g#_O~Ot'XO~Ol#rOm#rOv'ZO$p#sO!l$zX#Z$zX$e$zX$g$zX~Om$uOv$Xa!e$Xa$e$Xa!l$Xa$g$Xa~Oe'_O~P3gOR#qO!eiX$eiX~O!m'bO#g&cO#h&cO$o&bO~O#m'dOS#kqT#kqW#kqX#kq_#kqc#kqt#kq}#kq!U#kq!Y#kq!o#kq!p#kq!z#kq!}#kq#P#kq#U#kq#W#kq#Y#kq#]#kq#_#kq#a#kq#d#kq#j#kq#l#kq#p#kq#s#kq#v#kq#x#kq$_#kq$d#kq$m#kq$p#kq$t#kq!m#kq!l#kq$e#kq$a#kq~O!e!eO#n'eO$e!fO~Ol#rOm#rO#h'gO#q'gO$p#sO~Oc'jOe$OXv$OX~P;dOv&oOe$qa~Ol#rOm#rO!W'nO$p#sO~Oe$RXv$RX~P(`Ov&vOe$sa~Oe$QXv$QX~P%rOv&yOe$ra~Ot&}O~Ol#rOm#rO$p#sOS$VaT$Va_$Vac$Vaf$Vah$Vaj$Vao$Vav$Vax$Va!i$Va!j$Va!k$Va!l$Va$c$Va$d$Va$e$Va$g$Va$o$Va$_$Va!m$Va$a$Va~Oe'wOm$uO~Ov$ZX!l$ZX#Z$ZX$e$ZX$g$ZX~P%rOv'ZO!l$za#Z$za$e$za$g$za~Oe'|O~P%rOu(ROe$Oav$Oa~P%rOt(SO~P! {Ov&oOe$qi~Ov&oOe$qi~P%rOe$Rav$Ra~P3gOe$Qav$Qa~P%rOl#rOm#rOv(UO$p#sOe$Uij$Ui~Ov(UOe$Uij$Ui~Oe(WOm$uO~Ol#rOm#rO$p#sOv$Za!l$Za#Z$Za$e$Za$g$Za~O#n'eO~Ov&oOe$qq~Oe$Oqv$Oq~P%rO$o$pl!al~\",\n  goto: \"9{$|PPPPPPPPPPP$}%X%X%lP%X&P&SP'tPP(yP)xP(yPP(yP(y(y*{+zPPP,WPP%X-]%XP-cP-i-o-u%XP-{P%XP.RP%XP%X%XP%X.X.[P/m0P0ZPPPPP$}PP'h'h0a'h'h'h'hP$}PP$}P$}PP0dP$}P$}P$}PP$}P$}P$}P0j$}P0m0pPP$}P$}PPP$}PP$}PP$}P$}P$}P0s0y1P1o1}2T2Z2a2g2s2y3P3Z3a3k3q3w3}PPPPPPPPPPP4T4W4dP5ZPP7b7e7hP7k7t7z8T8o9u9xanOPqx!e#k$Y%[s^OPefqx!`!a!b!c!e#k$Y$Z$y%[&vsTOPefqx!`!a!b!c!e#k$Y$Z$y%[&vR!OUb^ef!`!a!b!c$Z$y&v`_OPqx!e#k$Y%[!x!WVabcdgiruv!Q!T!s#r#s#t#y$[$^$_$`$p%T%W%i%n%s%z%{&Z&o&r&y&}'Z'^'e'g'i'm'q(S(]e#Thlm!t#P#R$u$v&T'X!x!WVabcdgiruv!Q!T!s#r#s#t#y$[$^$_$`$p%T%W%i%n%s%z%{&Z&o&r&y&}'Z'^'e'g'i'm'q(S(]Q&R$iR&Y$q!y!WVabcdgiruv!Q!T!s#r#s#t#y$[$^$_$`$p%T%W%i%n%s%z%{&Z&o&r&y&}'Z'^'e'g'i'm'q(S(]!x!WVabcdgiruv!Q!T!s#r#s#t#y$[$^$_$`$p%T%W%i%n%s%z%{&Z&o&r&y&}'Z'^'e'g'i'm'q(S(]T&c%O&d!y!XVabcdgiruv!Q!T!s#r#s#t#y$[$^$_$`$p%T%W%i%n%s%z%{&Z&o&r&y&}'Z'^'e'g'i'm'q(S(]Q#z!XQ&O$eQ&P$hR'u'W!x!WVabcdgiruv!Q!T!s#r#s#t#y$[$^$_$`$p%T%W%i%n%s%z%{&Z&o&r&y&}'Z'^'e'g'i'm'q(S(]Q#XjR$}#YQ!ZWR#{![Q!jYR#|!]Q#|!lR%l$OQ!kYR#}!]Q#|!kR%l#}Q!nZR$P!^Q!p[R$Q!_R!r]Q!gXQ!{fQ$W!dQ$a!sQ$d!uQ$f!vQ$k!zQ$z#UQ%Q#]Q%R#^Q%S#bQ%X#fQ'U&OQ'`&cQ'f&gQ'h&kQ(O'dQ(X'wQ(Z(PQ([(QR(^(WSpOqUyP!e$YQ#ixQ%]#kR&l%[a`OPqx!e#k$Y%[Q$a!sR't&}R$s#PQ&R$iR']&YR#YjR#[kR%P#[Q#n{R%_#nQqOR#aqQ%i#yQ%s$[^&n%i%s'^'i'm'q(]Q'^&ZQ'i&oQ'm&rQ'q&yR(](SQ&p%iU'k&p'l(TQ'l&qR(T'mQ#u!SR%e#uQ&z%sR'r&zQ&w%qR'p&wQ!dXR$V!dUxP!e$YS#hx%[R%[#kQ%w$_R'P%wQ%{$`R'S%{Q#lyQ%Z#iT%^#l%ZQ$w#QR&_$wQ$n!}S&U$n'zR'z']Q'[&WR'y'[Q&d%OR'a&dQ&f%SR'c&fQ%V#dR&j%VR|QSoOq]wPx!e#k$Y%[`XOPqx!e#k$Y%[Q!yeQ!zfQ$R!`Q$S!aQ$T!bQ$U!cQ%q$ZQ&`$yR'o&vQ!SVQ!taQ!ubQ!vcQ!wdQ!}gQ#ViQ#brQ#fuQ#gvS#p!Q$_Q#w!TQ$`!sQ%b#rQ%c#sQ%d#tl%h#y$[%i%s&Z&o&r&y'^'i'm'q(S(]Q%u$^S%y$`%{Q&W$pQ&h%TQ&k%WQ&t%nQ'R%zQ's&}Q'x'ZQ(P'eR(Q'gR%k#yR%t$[R%r$ZQzPQ$X!eR%p$YX#ky#i#l%ZQ#UhQ#^mR$b!tU#Qhm!tQ#]lQ$t#PQ$x#RQ&]$uQ&^$vQ'Y&TR'v'XQ#`pQ$d!uQ$g!wQ$j!yQ$o!}Q${#VQ$|#XQ%R#^Q%Y#gQ%}$bQ&V$nQ&a$}Q'U&OS'V&P&RQ'{']Q(V'uR(Y'zR&X$pR#et\",\n  nodeNames: \"⚠ InterpolationEnd InterpolationContinue Unit VariableName InterpolationStart LineComment Comment IndentedMixin IndentedInclude StyleSheet RuleSet UniversalSelector TagSelector TagName NestingSelector SuffixedSelector Suffix Interpolation SassVariableName ValueName ) ( ParenthesizedValue ColorLiteral NumberLiteral StringLiteral BinaryExpression BinOp LogicOp UnaryExpression LogicOp NamespacedValue CallExpression Callee ArgList : ... , CallLiteral CallTag ParenthesizedContent ClassSelector ClassName PseudoClassSelector :: PseudoClassName PseudoClassName ArgList PseudoClassName ArgList IdSelector # IdName ] AttributeSelector [ AttributeName MatchOp ChildSelector ChildOp DescendantSelector SiblingSelector SiblingOp PlaceholderSelector ClassName Block { Declaration PropertyName Map Important Global Default ; } ImportStatement AtKeyword import KeywordQuery FeatureQuery FeatureName BinaryQuery UnaryQuery ParenthesizedQuery SelectorQuery selector IncludeStatement include Keyword MixinStatement mixin UseStatement use Keyword Star Keyword ExtendStatement extend RootStatement at-root ForwardStatement forward Keyword MediaStatement media CharsetStatement charset NamespaceStatement namespace NamespaceName KeyframesStatement keyframes KeyframeName KeyframeList Keyword Keyword SupportsStatement supports IfStatement ControlKeyword ControlKeyword Keyword ForStatement ControlKeyword Keyword EachStatement ControlKeyword Keyword WhileStatement ControlKeyword OutputStatement ControlKeyword AtRule Styles\",\n  maxTerm: 181,\n  context: trackIndent,\n  nodeProps: [\n    [\"openedBy\", 1,\"InterpolationStart\",5,\"InterpolationEnd\",21,\"(\",75,\"{\"],\n    [\"isolate\", -3,6,7,26,\"\"],\n    [\"closedBy\", 22,\")\",67,\"}\"]\n  ],\n  propSources: [cssHighlighting],\n  skippedNodes: [0,6,7,135],\n  repeatNodeCount: 18,\n  tokenData: \"!!p~RyOq#rqr$jrs0jst2^tu8{uv;hvw;{wx<^xy={yz>^z{>c{|>||}Co}!ODQ!O!PDo!P!QFY!Q![Fk![!]Gf!]!^Hb!^!_Hs!_!`I[!`!aIs!a!b#r!b!cJt!c!}#r!}#OL^#O#P#r#P#QLo#Q#RMQ#R#T#r#T#UMg#U#c#r#c#dNx#d#o#r#o#p! _#p#qMQ#q#r! p#r#s!!R#s;'S#r;'S;=`!!j<%lO#rW#uSOy$Rz;'S$R;'S;=`$d<%lO$RW$WSyWOy$Rz;'S$R;'S;=`$d<%lO$RW$gP;=`<%l$RY$m[Oy$Rz!_$R!_!`%c!`#W$R#W#X%v#X#Z$R#Z#[)Z#[#]$R#]#^,V#^;'S$R;'S;=`$d<%lO$RY%jSyWlQOy$Rz;'S$R;'S;=`$d<%lO$RY%{UyWOy$Rz#X$R#X#Y&_#Y;'S$R;'S;=`$d<%lO$RY&dUyWOy$Rz#Y$R#Y#Z&v#Z;'S$R;'S;=`$d<%lO$RY&{UyWOy$Rz#T$R#T#U'_#U;'S$R;'S;=`$d<%lO$RY'dUyWOy$Rz#i$R#i#j'v#j;'S$R;'S;=`$d<%lO$RY'{UyWOy$Rz#`$R#`#a(_#a;'S$R;'S;=`$d<%lO$RY(dUyWOy$Rz#h$R#h#i(v#i;'S$R;'S;=`$d<%lO$RY(}S!kQyWOy$Rz;'S$R;'S;=`$d<%lO$RY)`UyWOy$Rz#`$R#`#a)r#a;'S$R;'S;=`$d<%lO$RY)wUyWOy$Rz#c$R#c#d*Z#d;'S$R;'S;=`$d<%lO$RY*`UyWOy$Rz#U$R#U#V*r#V;'S$R;'S;=`$d<%lO$RY*wUyWOy$Rz#T$R#T#U+Z#U;'S$R;'S;=`$d<%lO$RY+`UyWOy$Rz#`$R#`#a+r#a;'S$R;'S;=`$d<%lO$RY+yS!jQyWOy$Rz;'S$R;'S;=`$d<%lO$RY,[UyWOy$Rz#a$R#a#b,n#b;'S$R;'S;=`$d<%lO$RY,sUyWOy$Rz#d$R#d#e-V#e;'S$R;'S;=`$d<%lO$RY-[UyWOy$Rz#c$R#c#d-n#d;'S$R;'S;=`$d<%lO$RY-sUyWOy$Rz#f$R#f#g.V#g;'S$R;'S;=`$d<%lO$RY.[UyWOy$Rz#h$R#h#i.n#i;'S$R;'S;=`$d<%lO$RY.sUyWOy$Rz#T$R#T#U/V#U;'S$R;'S;=`$d<%lO$RY/[UyWOy$Rz#b$R#b#c/n#c;'S$R;'S;=`$d<%lO$RY/sUyWOy$Rz#h$R#h#i0V#i;'S$R;'S;=`$d<%lO$RY0^S!iQyWOy$Rz;'S$R;'S;=`$d<%lO$R~0mWOY0jZr0jrs1Vs#O0j#O#P1[#P;'S0j;'S;=`2W<%lO0j~1[Oj~~1_RO;'S0j;'S;=`1h;=`O0j~1kXOY0jZr0jrs1Vs#O0j#O#P1[#P;'S0j;'S;=`2W;=`<%l0j<%lO0j~2ZP;=`<%l0jZ2cY!UPOy$Rz!Q$R!Q![3R![!c$R!c!i3R!i#T$R#T#Z3R#Z;'S$R;'S;=`$d<%lO$RY3WYyWOy$Rz!Q$R!Q![3v![!c$R!c!i3v!i#T$R#T#Z3v#Z;'S$R;'S;=`$d<%lO$RY3{YyWOy$Rz!Q$R!Q![4k![!c$R!c!i4k!i#T$R#T#Z4k#Z;'S$R;'S;=`$d<%lO$RY4rYhQyWOy$Rz!Q$R!Q![5b![!c$R!c!i5b!i#T$R#T#Z5b#Z;'S$R;'S;=`$d<%lO$RY5iYhQyWOy$Rz!Q$R!Q![6X![!c$R!c!i6X!i#T$R#T#Z6X#Z;'S$R;'S;=`$d<%lO$RY6^YyWOy$Rz!Q$R!Q![6|![!c$R!c!i6|!i#T$R#T#Z6|#Z;'S$R;'S;=`$d<%lO$RY7TYhQyWOy$Rz!Q$R!Q![7s![!c$R!c!i7s!i#T$R#T#Z7s#Z;'S$R;'S;=`$d<%lO$RY7xYyWOy$Rz!Q$R!Q![8h![!c$R!c!i8h!i#T$R#T#Z8h#Z;'S$R;'S;=`$d<%lO$RY8oShQyWOy$Rz;'S$R;'S;=`$d<%lO$R_9O`Oy$Rz}$R}!O:Q!O!Q$R!Q![:Q![!_$R!_!`;T!`!c$R!c!}:Q!}#R$R#R#S:Q#S#T$R#T#o:Q#o;'S$R;'S;=`$d<%lO$RZ:X^yWcROy$Rz}$R}!O:Q!O!Q$R!Q![:Q![!c$R!c!}:Q!}#R$R#R#S:Q#S#T$R#T#o:Q#o;'S$R;'S;=`$d<%lO$R[;[S![SyWOy$Rz;'S$R;'S;=`$d<%lO$RZ;oS$tPlQOy$Rz;'S$R;'S;=`$d<%lO$RZ<QS_ROy$Rz;'S$R;'S;=`$d<%lO$R~<aWOY<^Zw<^wx1Vx#O<^#O#P<y#P;'S<^;'S;=`=u<%lO<^~<|RO;'S<^;'S;=`=V;=`O<^~=YXOY<^Zw<^wx1Vx#O<^#O#P<y#P;'S<^;'S;=`=u;=`<%l<^<%lO<^~=xP;=`<%l<^Z>QSfROy$Rz;'S$R;'S;=`$d<%lO$R~>cOe~_>jU$mPlQOy$Rz!_$R!_!`;T!`;'S$R;'S;=`$d<%lO$RZ?TWlQ!aPOy$Rz!O$R!O!P?m!P!Q$R!Q![Br![;'S$R;'S;=`$d<%lO$RZ?rUyWOy$Rz!Q$R!Q![@U![;'S$R;'S;=`$d<%lO$RZ@]YyW$oROy$Rz!Q$R!Q![@U![!g$R!g!h@{!h#X$R#X#Y@{#Y;'S$R;'S;=`$d<%lO$RZAQYyWOy$Rz{$R{|Ap|}$R}!OAp!O!Q$R!Q![BX![;'S$R;'S;=`$d<%lO$RZAuUyWOy$Rz!Q$R!Q![BX![;'S$R;'S;=`$d<%lO$RZB`UyW$oROy$Rz!Q$R!Q![BX![;'S$R;'S;=`$d<%lO$RZBy[yW$oROy$Rz!O$R!O!P@U!P!Q$R!Q![Br![!g$R!g!h@{!h#X$R#X#Y@{#Y;'S$R;'S;=`$d<%lO$RZCtSvROy$Rz;'S$R;'S;=`$d<%lO$RZDVWlQOy$Rz!O$R!O!P?m!P!Q$R!Q![Br![;'S$R;'S;=`$d<%lO$RZDtW$pROy$Rz!O$R!O!PE^!P!Q$R!Q![@U![;'S$R;'S;=`$d<%lO$RYEcUyWOy$Rz!O$R!O!PEu!P;'S$R;'S;=`$d<%lO$RYE|SuQyWOy$Rz;'S$R;'S;=`$d<%lO$RYF_SlQOy$Rz;'S$R;'S;=`$d<%lO$RZFp[$oROy$Rz!O$R!O!P@U!P!Q$R!Q![Br![!g$R!g!h@{!h#X$R#X#Y@{#Y;'S$R;'S;=`$d<%lO$RZGkUtROy$Rz![$R![!]G}!];'S$R;'S;=`$d<%lO$RXHUS}PyWOy$Rz;'S$R;'S;=`$d<%lO$RZHgS!lROy$Rz;'S$R;'S;=`$d<%lO$RYHxUlQOy$Rz!_$R!_!`%c!`;'S$R;'S;=`$d<%lO$R^IaU![SOy$Rz!_$R!_!`%c!`;'S$R;'S;=`$d<%lO$RZIzV!^PlQOy$Rz!_$R!_!`%c!`!aJa!a;'S$R;'S;=`$d<%lO$RXJhS!^PyWOy$Rz;'S$R;'S;=`$d<%lO$RXJwWOy$Rz!c$R!c!}Ka!}#T$R#T#oKa#o;'S$R;'S;=`$d<%lO$RXKh[!oPyWOy$Rz}$R}!OKa!O!Q$R!Q![Ka![!c$R!c!}Ka!}#T$R#T#oKa#o;'S$R;'S;=`$d<%lO$RXLcS!YPOy$Rz;'S$R;'S;=`$d<%lO$R^LtS!WUOy$Rz;'S$R;'S;=`$d<%lO$R[MTUOy$Rz!_$R!_!`;T!`;'S$R;'S;=`$d<%lO$RZMjUOy$Rz#b$R#b#cM|#c;'S$R;'S;=`$d<%lO$RZNRUyWOy$Rz#W$R#W#XNe#X;'S$R;'S;=`$d<%lO$RZNlSmRyWOy$Rz;'S$R;'S;=`$d<%lO$RZN{UOy$Rz#f$R#f#gNe#g;'S$R;'S;=`$d<%lO$RZ! dS!eROy$Rz;'S$R;'S;=`$d<%lO$RZ! uS!mROy$Rz;'S$R;'S;=`$d<%lO$R]!!WU!aPOy$Rz!_$R!_!`;T!`;'S$R;'S;=`$d<%lO$RW!!mP;=`<%l#r\",\n  tokenizers: [indentation, descendant, interpolationEnd, unitToken, identifiers, spaces, comments, indentedMixins, 0, 1, 2, 3],\n  topRules: {\"StyleSheet\":[0,10],\"Styles\":[1,134]},\n  dialects: {indented: 0},\n  specialized: [{term: 158, get: (value) => spec_identifier[value] || -1},{term: 157, get: (value) => spec_callee[value] || -1},{term: 77, get: (value) => spec_AtKeyword[value] || -1}],\n  tokenPrec: 3003\n});\n\nexport { parser };\n","import { parser } from '@lezer/sass';\nimport { LRLanguage, foldNodeProp, foldInside, indentNodeProp, continuedIndent, LanguageSupport } from '@codemirror/language';\nimport { defineCSSCompletionSource } from '@codemirror/lang-css';\n\n/**\nA language provider based on the [Lezer Sass\nparser](https://github.com/lezer-parser/sass), extended with\nhighlighting and indentation information.\n*/\nconst sassLanguage = /*@__PURE__*/LRLanguage.define({\n    name: \"sass\",\n    parser: /*@__PURE__*/parser.configure({\n        props: [\n            /*@__PURE__*/foldNodeProp.add({\n                Block: foldInside,\n                Comment(node, state) {\n                    return { from: node.from + 2, to: state.sliceDoc(node.to - 2, node.to) == \"*/\" ? node.to - 2 : node.to };\n                }\n            }),\n            /*@__PURE__*/indentNodeProp.add({\n                Declaration: /*@__PURE__*/continuedIndent()\n            })\n        ]\n    }),\n    languageData: {\n        commentTokens: { block: { open: \"/*\", close: \"*/\" }, line: \"//\" },\n        indentOnInput: /^\\s*\\}$/,\n        wordChars: \"$-\"\n    }\n});\nconst indentedSassLanguage = /*@__PURE__*/sassLanguage.configure({\n    dialect: \"indented\",\n    props: [\n        /*@__PURE__*/indentNodeProp.add({\n            \"Block RuleSet\": cx => cx.baseIndent + cx.unit\n        }),\n        /*@__PURE__*/foldNodeProp.add({\n            Block: node => ({ from: node.from, to: node.to })\n        })\n    ]\n});\n/**\nProperty, variable, $-variable, and value keyword completion\nsource.\n*/\nconst sassCompletionSource = /*@__PURE__*/defineCSSCompletionSource(node => node.name == \"VariableName\" || node.name == \"SassVariableName\");\n/**\nLanguage support for CSS.\n*/\nfunction sass(config) {\n    return new LanguageSupport((config === null || config === void 0 ? void 0 : config.indented) ? indentedSassLanguage : sassLanguage, sassLanguage.data.of({ autocomplete: sassCompletionSource }));\n}\n\nexport { sass, sassCompletionSource, sassLanguage };\n"],"names":["space","newlineChar","isAlpha","ch","isDigit","startOfComment","input","next","peek","spaces","ExternalTokenizer","stack","dialectEnabled","prev","canShift","acceptToken","includes","advance","length","contextual","comments","indentedComment","off","block","end","indented","indentedMixins","indentation","cDepth","context","depth","identifiers","inside","dashes","i","interpolationEnd","descendant","unitToken","IndentLevel","parent","this","hash","trackIndent","ContextTracker","start","shift","term","pos","cssHighlighting","styleTags","tags","definitionKeyword","keyword","ControlKeyword","controlKeyword","NamespaceName","namespace","KeyframeName","labelName","TagName","tagName","className","PseudoClassName","constant","IdName","propertyName","AttributeName","attributeName","NumberLiteral","number","KeywordQuery","UnaryQueryOp","operatorKeyword","atom","VariableName","variableName","SassVariableName","special","Callee","Unit","unit","definitionOperator","MatchOp","compareOperator","logicOperator","BinOp","arithmeticOperator","modifier","Comment","blockComment","LineComment","lineComment","ColorLiteral","color","string","meta","punctuation","derefOperator","separator","paren","squareBracket","brace","spec_identifier","__proto__","not","only","using","as","with","without","hide","show","from","to","if","through","in","spec_callee","url","domain","regexp","lang","dir","selector","spec_AtKeyword","parser","LRParser","deserialize","version","states","stateData","goto","nodeNames","maxTerm","nodeProps","propSources","skippedNodes","repeatNodeCount","tokenData","tokenizers","topRules","StyleSheet","Styles","dialects","specialized","get","value","tokenPrec","sassLanguage","LRLanguage","define","name","configure","props","foldNodeProp","add","Block","foldInside","node","state","sliceDoc","indentNodeProp","Declaration","continuedIndent","languageData","commentTokens","open","close","line","indentOnInput","wordChars","indentedSassLanguage","dialect","cx","baseIndent","sassCompletionSource","defineCSSCompletionSource","sass","config","LanguageSupport","data","of","autocomplete"],"mappings":"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","x_google_ignoreList":[0,1]}