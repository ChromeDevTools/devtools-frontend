{
  "version": 3,
  "sources": ["package/intl-messageformat.esm.js"],
  "sourcesContent": ["// node_modules/tslib/tslib.es6.js\nvar __assign = function() {\n  __assign = Object.assign || function __assign2(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s)\n        if (Object.prototype.hasOwnProperty.call(s, p))\n          t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\n\n// bazel-out/darwin-fastbuild/bin/packages/icu-messageformat-parser/lib/error.js\nvar ErrorKind;\n(function(ErrorKind2) {\n  ErrorKind2[ErrorKind2[\"EXPECT_ARGUMENT_CLOSING_BRACE\"] = 1] = \"EXPECT_ARGUMENT_CLOSING_BRACE\";\n  ErrorKind2[ErrorKind2[\"EMPTY_ARGUMENT\"] = 2] = \"EMPTY_ARGUMENT\";\n  ErrorKind2[ErrorKind2[\"MALFORMED_ARGUMENT\"] = 3] = \"MALFORMED_ARGUMENT\";\n  ErrorKind2[ErrorKind2[\"EXPECT_ARGUMENT_TYPE\"] = 4] = \"EXPECT_ARGUMENT_TYPE\";\n  ErrorKind2[ErrorKind2[\"INVALID_ARGUMENT_TYPE\"] = 5] = \"INVALID_ARGUMENT_TYPE\";\n  ErrorKind2[ErrorKind2[\"EXPECT_ARGUMENT_STYLE\"] = 6] = \"EXPECT_ARGUMENT_STYLE\";\n  ErrorKind2[ErrorKind2[\"INVALID_NUMBER_SKELETON\"] = 7] = \"INVALID_NUMBER_SKELETON\";\n  ErrorKind2[ErrorKind2[\"INVALID_DATE_TIME_SKELETON\"] = 8] = \"INVALID_DATE_TIME_SKELETON\";\n  ErrorKind2[ErrorKind2[\"EXPECT_NUMBER_SKELETON\"] = 9] = \"EXPECT_NUMBER_SKELETON\";\n  ErrorKind2[ErrorKind2[\"EXPECT_DATE_TIME_SKELETON\"] = 10] = \"EXPECT_DATE_TIME_SKELETON\";\n  ErrorKind2[ErrorKind2[\"UNCLOSED_QUOTE_IN_ARGUMENT_STYLE\"] = 11] = \"UNCLOSED_QUOTE_IN_ARGUMENT_STYLE\";\n  ErrorKind2[ErrorKind2[\"EXPECT_SELECT_ARGUMENT_OPTIONS\"] = 12] = \"EXPECT_SELECT_ARGUMENT_OPTIONS\";\n  ErrorKind2[ErrorKind2[\"EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE\"] = 13] = \"EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE\";\n  ErrorKind2[ErrorKind2[\"INVALID_PLURAL_ARGUMENT_OFFSET_VALUE\"] = 14] = \"INVALID_PLURAL_ARGUMENT_OFFSET_VALUE\";\n  ErrorKind2[ErrorKind2[\"EXPECT_SELECT_ARGUMENT_SELECTOR\"] = 15] = \"EXPECT_SELECT_ARGUMENT_SELECTOR\";\n  ErrorKind2[ErrorKind2[\"EXPECT_PLURAL_ARGUMENT_SELECTOR\"] = 16] = \"EXPECT_PLURAL_ARGUMENT_SELECTOR\";\n  ErrorKind2[ErrorKind2[\"EXPECT_SELECT_ARGUMENT_SELECTOR_FRAGMENT\"] = 17] = \"EXPECT_SELECT_ARGUMENT_SELECTOR_FRAGMENT\";\n  ErrorKind2[ErrorKind2[\"EXPECT_PLURAL_ARGUMENT_SELECTOR_FRAGMENT\"] = 18] = \"EXPECT_PLURAL_ARGUMENT_SELECTOR_FRAGMENT\";\n  ErrorKind2[ErrorKind2[\"INVALID_PLURAL_ARGUMENT_SELECTOR\"] = 19] = \"INVALID_PLURAL_ARGUMENT_SELECTOR\";\n  ErrorKind2[ErrorKind2[\"DUPLICATE_PLURAL_ARGUMENT_SELECTOR\"] = 20] = \"DUPLICATE_PLURAL_ARGUMENT_SELECTOR\";\n  ErrorKind2[ErrorKind2[\"DUPLICATE_SELECT_ARGUMENT_SELECTOR\"] = 21] = \"DUPLICATE_SELECT_ARGUMENT_SELECTOR\";\n  ErrorKind2[ErrorKind2[\"MISSING_OTHER_CLAUSE\"] = 22] = \"MISSING_OTHER_CLAUSE\";\n  ErrorKind2[ErrorKind2[\"INVALID_TAG\"] = 23] = \"INVALID_TAG\";\n  ErrorKind2[ErrorKind2[\"INVALID_TAG_NAME\"] = 25] = \"INVALID_TAG_NAME\";\n  ErrorKind2[ErrorKind2[\"UNMATCHED_CLOSING_TAG\"] = 26] = \"UNMATCHED_CLOSING_TAG\";\n  ErrorKind2[ErrorKind2[\"UNCLOSED_TAG\"] = 27] = \"UNCLOSED_TAG\";\n})(ErrorKind || (ErrorKind = {}));\n\n// bazel-out/darwin-fastbuild/bin/packages/icu-messageformat-parser/lib/types.js\nvar TYPE;\n(function(TYPE2) {\n  TYPE2[TYPE2[\"literal\"] = 0] = \"literal\";\n  TYPE2[TYPE2[\"argument\"] = 1] = \"argument\";\n  TYPE2[TYPE2[\"number\"] = 2] = \"number\";\n  TYPE2[TYPE2[\"date\"] = 3] = \"date\";\n  TYPE2[TYPE2[\"time\"] = 4] = \"time\";\n  TYPE2[TYPE2[\"select\"] = 5] = \"select\";\n  TYPE2[TYPE2[\"plural\"] = 6] = \"plural\";\n  TYPE2[TYPE2[\"pound\"] = 7] = \"pound\";\n  TYPE2[TYPE2[\"tag\"] = 8] = \"tag\";\n})(TYPE || (TYPE = {}));\nvar SKELETON_TYPE;\n(function(SKELETON_TYPE2) {\n  SKELETON_TYPE2[SKELETON_TYPE2[\"number\"] = 0] = \"number\";\n  SKELETON_TYPE2[SKELETON_TYPE2[\"dateTime\"] = 1] = \"dateTime\";\n})(SKELETON_TYPE || (SKELETON_TYPE = {}));\nfunction isLiteralElement(el) {\n  return el.type === TYPE.literal;\n}\nfunction isArgumentElement(el) {\n  return el.type === TYPE.argument;\n}\nfunction isNumberElement(el) {\n  return el.type === TYPE.number;\n}\nfunction isDateElement(el) {\n  return el.type === TYPE.date;\n}\nfunction isTimeElement(el) {\n  return el.type === TYPE.time;\n}\nfunction isSelectElement(el) {\n  return el.type === TYPE.select;\n}\nfunction isPluralElement(el) {\n  return el.type === TYPE.plural;\n}\nfunction isPoundElement(el) {\n  return el.type === TYPE.pound;\n}\nfunction isTagElement(el) {\n  return el.type === TYPE.tag;\n}\nfunction isNumberSkeleton(el) {\n  return !!(el && typeof el === \"object\" && el.type === SKELETON_TYPE.number);\n}\nfunction isDateTimeSkeleton(el) {\n  return !!(el && typeof el === \"object\" && el.type === SKELETON_TYPE.dateTime);\n}\n\n// bazel-out/darwin-fastbuild/bin/packages/icu-messageformat-parser/lib/regex.generated.js\nvar SPACE_SEPARATOR_REGEX = /[ \\xA0\\u1680\\u2000-\\u200A\\u202F\\u205F\\u3000]/;\n\n// bazel-out/darwin-fastbuild/bin/packages/icu-skeleton-parser/lib/date-time.js\nvar DATE_TIME_REGEX = /(?:[Eec]{1,6}|G{1,5}|[Qq]{1,5}|(?:[yYur]+|U{1,5})|[ML]{1,5}|d{1,2}|D{1,3}|F{1}|[abB]{1,5}|[hkHK]{1,2}|w{1,2}|W{1}|m{1,2}|s{1,2}|[zZOvVxX]{1,4})(?=([^']*'[^']*')*[^']*$)/g;\nfunction parseDateTimeSkeleton(skeleton) {\n  var result = {};\n  skeleton.replace(DATE_TIME_REGEX, function(match) {\n    var len = match.length;\n    switch (match[0]) {\n      case \"G\":\n        result.era = len === 4 ? \"long\" : len === 5 ? \"narrow\" : \"short\";\n        break;\n      case \"y\":\n        result.year = len === 2 ? \"2-digit\" : \"numeric\";\n        break;\n      case \"Y\":\n      case \"u\":\n      case \"U\":\n      case \"r\":\n        throw new RangeError(\"`Y/u/U/r` (year) patterns are not supported, use `y` instead\");\n      case \"q\":\n      case \"Q\":\n        throw new RangeError(\"`q/Q` (quarter) patterns are not supported\");\n      case \"M\":\n      case \"L\":\n        result.month = [\"numeric\", \"2-digit\", \"short\", \"long\", \"narrow\"][len - 1];\n        break;\n      case \"w\":\n      case \"W\":\n        throw new RangeError(\"`w/W` (week) patterns are not supported\");\n      case \"d\":\n        result.day = [\"numeric\", \"2-digit\"][len - 1];\n        break;\n      case \"D\":\n      case \"F\":\n      case \"g\":\n        throw new RangeError(\"`D/F/g` (day) patterns are not supported, use `d` instead\");\n      case \"E\":\n        result.weekday = len === 4 ? \"short\" : len === 5 ? \"narrow\" : \"short\";\n        break;\n      case \"e\":\n        if (len < 4) {\n          throw new RangeError(\"`e..eee` (weekday) patterns are not supported\");\n        }\n        result.weekday = [\"short\", \"long\", \"narrow\", \"short\"][len - 4];\n        break;\n      case \"c\":\n        if (len < 4) {\n          throw new RangeError(\"`c..ccc` (weekday) patterns are not supported\");\n        }\n        result.weekday = [\"short\", \"long\", \"narrow\", \"short\"][len - 4];\n        break;\n      case \"a\":\n        result.hour12 = true;\n        break;\n      case \"b\":\n      case \"B\":\n        throw new RangeError(\"`b/B` (period) patterns are not supported, use `a` instead\");\n      case \"h\":\n        result.hourCycle = \"h12\";\n        result.hour = [\"numeric\", \"2-digit\"][len - 1];\n        break;\n      case \"H\":\n        result.hourCycle = \"h23\";\n        result.hour = [\"numeric\", \"2-digit\"][len - 1];\n        break;\n      case \"K\":\n        result.hourCycle = \"h11\";\n        result.hour = [\"numeric\", \"2-digit\"][len - 1];\n        break;\n      case \"k\":\n        result.hourCycle = \"h24\";\n        result.hour = [\"numeric\", \"2-digit\"][len - 1];\n        break;\n      case \"j\":\n      case \"J\":\n      case \"C\":\n        throw new RangeError(\"`j/J/C` (hour) patterns are not supported, use `h/H/K/k` instead\");\n      case \"m\":\n        result.minute = [\"numeric\", \"2-digit\"][len - 1];\n        break;\n      case \"s\":\n        result.second = [\"numeric\", \"2-digit\"][len - 1];\n        break;\n      case \"S\":\n      case \"A\":\n        throw new RangeError(\"`S/A` (second) patterns are not supported, use `s` instead\");\n      case \"z\":\n        result.timeZoneName = len < 4 ? \"short\" : \"long\";\n        break;\n      case \"Z\":\n      case \"O\":\n      case \"v\":\n      case \"V\":\n      case \"X\":\n      case \"x\":\n        throw new RangeError(\"`Z/O/v/V/X/x` (timeZone) patterns are not supported, use `z` instead\");\n    }\n    return \"\";\n  });\n  return result;\n}\n\n// bazel-out/darwin-fastbuild/bin/packages/icu-skeleton-parser/lib/regex.generated.js\nvar WHITE_SPACE_REGEX = /[\\t-\\r \\x85\\u200E\\u200F\\u2028\\u2029]/i;\n\n// bazel-out/darwin-fastbuild/bin/packages/icu-skeleton-parser/lib/number.js\nfunction parseNumberSkeletonFromString(skeleton) {\n  if (skeleton.length === 0) {\n    throw new Error(\"Number skeleton cannot be empty\");\n  }\n  var stringTokens = skeleton.split(WHITE_SPACE_REGEX).filter(function(x) {\n    return x.length > 0;\n  });\n  var tokens = [];\n  for (var _i = 0, stringTokens_1 = stringTokens; _i < stringTokens_1.length; _i++) {\n    var stringToken = stringTokens_1[_i];\n    var stemAndOptions = stringToken.split(\"/\");\n    if (stemAndOptions.length === 0) {\n      throw new Error(\"Invalid number skeleton\");\n    }\n    var stem = stemAndOptions[0], options = stemAndOptions.slice(1);\n    for (var _a2 = 0, options_1 = options; _a2 < options_1.length; _a2++) {\n      var option = options_1[_a2];\n      if (option.length === 0) {\n        throw new Error(\"Invalid number skeleton\");\n      }\n    }\n    tokens.push({stem, options});\n  }\n  return tokens;\n}\nfunction icuUnitToEcma(unit) {\n  return unit.replace(/^(.*?)-/, \"\");\n}\nvar FRACTION_PRECISION_REGEX = /^\\.(?:(0+)(\\*)?|(#+)|(0+)(#+))$/g;\nvar SIGNIFICANT_PRECISION_REGEX = /^(@+)?(\\+|#+)?$/g;\nvar INTEGER_WIDTH_REGEX = /(\\*)(0+)|(#+)(0+)|(0+)/g;\nvar CONCISE_INTEGER_WIDTH_REGEX = /^(0+)$/;\nfunction parseSignificantPrecision(str) {\n  var result = {};\n  str.replace(SIGNIFICANT_PRECISION_REGEX, function(_, g1, g2) {\n    if (typeof g2 !== \"string\") {\n      result.minimumSignificantDigits = g1.length;\n      result.maximumSignificantDigits = g1.length;\n    } else if (g2 === \"+\") {\n      result.minimumSignificantDigits = g1.length;\n    } else if (g1[0] === \"#\") {\n      result.maximumSignificantDigits = g1.length;\n    } else {\n      result.minimumSignificantDigits = g1.length;\n      result.maximumSignificantDigits = g1.length + (typeof g2 === \"string\" ? g2.length : 0);\n    }\n    return \"\";\n  });\n  return result;\n}\nfunction parseSign(str) {\n  switch (str) {\n    case \"sign-auto\":\n      return {\n        signDisplay: \"auto\"\n      };\n    case \"sign-accounting\":\n    case \"()\":\n      return {\n        currencySign: \"accounting\"\n      };\n    case \"sign-always\":\n    case \"+!\":\n      return {\n        signDisplay: \"always\"\n      };\n    case \"sign-accounting-always\":\n    case \"()!\":\n      return {\n        signDisplay: \"always\",\n        currencySign: \"accounting\"\n      };\n    case \"sign-except-zero\":\n    case \"+?\":\n      return {\n        signDisplay: \"exceptZero\"\n      };\n    case \"sign-accounting-except-zero\":\n    case \"()?\":\n      return {\n        signDisplay: \"exceptZero\",\n        currencySign: \"accounting\"\n      };\n    case \"sign-never\":\n    case \"+_\":\n      return {\n        signDisplay: \"never\"\n      };\n  }\n}\nfunction parseConciseScientificAndEngineeringStem(stem) {\n  var result;\n  if (stem[0] === \"E\" && stem[1] === \"E\") {\n    result = {\n      notation: \"engineering\"\n    };\n    stem = stem.slice(2);\n  } else if (stem[0] === \"E\") {\n    result = {\n      notation: \"scientific\"\n    };\n    stem = stem.slice(1);\n  }\n  if (result) {\n    var signDisplay = stem.slice(0, 2);\n    if (signDisplay === \"+!\") {\n      result.signDisplay = \"always\";\n      stem = stem.slice(2);\n    } else if (signDisplay === \"+?\") {\n      result.signDisplay = \"exceptZero\";\n      stem = stem.slice(2);\n    }\n    if (!CONCISE_INTEGER_WIDTH_REGEX.test(stem)) {\n      throw new Error(\"Malformed concise eng/scientific notation\");\n    }\n    result.minimumIntegerDigits = stem.length;\n  }\n  return result;\n}\nfunction parseNotationOptions(opt) {\n  var result = {};\n  var signOpts = parseSign(opt);\n  if (signOpts) {\n    return signOpts;\n  }\n  return result;\n}\nfunction parseNumberSkeleton(tokens) {\n  var result = {};\n  for (var _i = 0, tokens_1 = tokens; _i < tokens_1.length; _i++) {\n    var token = tokens_1[_i];\n    switch (token.stem) {\n      case \"percent\":\n      case \"%\":\n        result.style = \"percent\";\n        continue;\n      case \"%x100\":\n        result.style = \"percent\";\n        result.scale = 100;\n        continue;\n      case \"currency\":\n        result.style = \"currency\";\n        result.currency = token.options[0];\n        continue;\n      case \"group-off\":\n      case \",_\":\n        result.useGrouping = false;\n        continue;\n      case \"precision-integer\":\n      case \".\":\n        result.maximumFractionDigits = 0;\n        continue;\n      case \"measure-unit\":\n      case \"unit\":\n        result.style = \"unit\";\n        result.unit = icuUnitToEcma(token.options[0]);\n        continue;\n      case \"compact-short\":\n      case \"K\":\n        result.notation = \"compact\";\n        result.compactDisplay = \"short\";\n        continue;\n      case \"compact-long\":\n      case \"KK\":\n        result.notation = \"compact\";\n        result.compactDisplay = \"long\";\n        continue;\n      case \"scientific\":\n        result = __assign(__assign(__assign({}, result), {notation: \"scientific\"}), token.options.reduce(function(all, opt) {\n          return __assign(__assign({}, all), parseNotationOptions(opt));\n        }, {}));\n        continue;\n      case \"engineering\":\n        result = __assign(__assign(__assign({}, result), {notation: \"engineering\"}), token.options.reduce(function(all, opt) {\n          return __assign(__assign({}, all), parseNotationOptions(opt));\n        }, {}));\n        continue;\n      case \"notation-simple\":\n        result.notation = \"standard\";\n        continue;\n      case \"unit-width-narrow\":\n        result.currencyDisplay = \"narrowSymbol\";\n        result.unitDisplay = \"narrow\";\n        continue;\n      case \"unit-width-short\":\n        result.currencyDisplay = \"code\";\n        result.unitDisplay = \"short\";\n        continue;\n      case \"unit-width-full-name\":\n        result.currencyDisplay = \"name\";\n        result.unitDisplay = \"long\";\n        continue;\n      case \"unit-width-iso-code\":\n        result.currencyDisplay = \"symbol\";\n        continue;\n      case \"scale\":\n        result.scale = parseFloat(token.options[0]);\n        continue;\n      case \"integer-width\":\n        if (token.options.length > 1) {\n          throw new RangeError(\"integer-width stems only accept a single optional option\");\n        }\n        token.options[0].replace(INTEGER_WIDTH_REGEX, function(_, g1, g2, g3, g4, g5) {\n          if (g1) {\n            result.minimumIntegerDigits = g2.length;\n          } else if (g3 && g4) {\n            throw new Error(\"We currently do not support maximum integer digits\");\n          } else if (g5) {\n            throw new Error(\"We currently do not support exact integer digits\");\n          }\n          return \"\";\n        });\n        continue;\n    }\n    if (CONCISE_INTEGER_WIDTH_REGEX.test(token.stem)) {\n      result.minimumIntegerDigits = token.stem.length;\n      continue;\n    }\n    if (FRACTION_PRECISION_REGEX.test(token.stem)) {\n      if (token.options.length > 1) {\n        throw new RangeError(\"Fraction-precision stems only accept a single optional option\");\n      }\n      token.stem.replace(FRACTION_PRECISION_REGEX, function(_, g1, g2, g3, g4, g5) {\n        if (g2 === \"*\") {\n          result.minimumFractionDigits = g1.length;\n        } else if (g3 && g3[0] === \"#\") {\n          result.maximumFractionDigits = g3.length;\n        } else if (g4 && g5) {\n          result.minimumFractionDigits = g4.length;\n          result.maximumFractionDigits = g4.length + g5.length;\n        } else {\n          result.minimumFractionDigits = g1.length;\n          result.maximumFractionDigits = g1.length;\n        }\n        return \"\";\n      });\n      if (token.options.length) {\n        result = __assign(__assign({}, result), parseSignificantPrecision(token.options[0]));\n      }\n      continue;\n    }\n    if (SIGNIFICANT_PRECISION_REGEX.test(token.stem)) {\n      result = __assign(__assign({}, result), parseSignificantPrecision(token.stem));\n      continue;\n    }\n    var signOpts = parseSign(token.stem);\n    if (signOpts) {\n      result = __assign(__assign({}, result), signOpts);\n    }\n    var conciseScientificAndEngineeringOpts = parseConciseScientificAndEngineeringStem(token.stem);\n    if (conciseScientificAndEngineeringOpts) {\n      result = __assign(__assign({}, result), conciseScientificAndEngineeringOpts);\n    }\n  }\n  return result;\n}\n\n// bazel-out/darwin-fastbuild/bin/packages/icu-messageformat-parser/lib/parser.js\nvar _a;\nvar SPACE_SEPARATOR_START_REGEX = new RegExp(\"^\" + SPACE_SEPARATOR_REGEX.source + \"*\");\nvar SPACE_SEPARATOR_END_REGEX = new RegExp(SPACE_SEPARATOR_REGEX.source + \"*$\");\nfunction createLocation(start, end) {\n  return {start, end};\n}\nvar hasNativeStartsWith = !!String.prototype.startsWith;\nvar hasNativeFromCodePoint = !!String.fromCodePoint;\nvar hasNativeFromEntries = !!Object.fromEntries;\nvar hasNativeCodePointAt = !!String.prototype.codePointAt;\nvar hasTrimStart = !!String.prototype.trimStart;\nvar hasTrimEnd = !!String.prototype.trimEnd;\nvar hasNativeIsSafeInteger = !!Number.isSafeInteger;\nvar isSafeInteger = hasNativeIsSafeInteger ? Number.isSafeInteger : function(n) {\n  return typeof n === \"number\" && isFinite(n) && Math.floor(n) === n && Math.abs(n) <= 9007199254740991;\n};\nvar REGEX_SUPPORTS_U_AND_Y = true;\ntry {\n  re = RE(\"([^\\\\p{White_Space}\\\\p{Pattern_Syntax}]*)\", \"yu\");\n  REGEX_SUPPORTS_U_AND_Y = ((_a = re.exec(\"a\")) === null || _a === void 0 ? void 0 : _a[0]) === \"a\";\n} catch (_) {\n  REGEX_SUPPORTS_U_AND_Y = false;\n}\nvar re;\nvar startsWith = hasNativeStartsWith ? function startsWith2(s, search, position) {\n  return s.startsWith(search, position);\n} : function startsWith3(s, search, position) {\n  return s.slice(position, position + search.length) === search;\n};\nvar fromCodePoint = hasNativeFromCodePoint ? String.fromCodePoint : function fromCodePoint2() {\n  var codePoints = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    codePoints[_i] = arguments[_i];\n  }\n  var elements = \"\";\n  var length = codePoints.length;\n  var i = 0;\n  var code;\n  while (length > i) {\n    code = codePoints[i++];\n    if (code > 1114111)\n      throw RangeError(code + \" is not a valid code point\");\n    elements += code < 65536 ? String.fromCharCode(code) : String.fromCharCode(((code -= 65536) >> 10) + 55296, code % 1024 + 56320);\n  }\n  return elements;\n};\nvar fromEntries = hasNativeFromEntries ? Object.fromEntries : function fromEntries2(entries) {\n  var obj = {};\n  for (var _i = 0, entries_1 = entries; _i < entries_1.length; _i++) {\n    var _a2 = entries_1[_i], k = _a2[0], v = _a2[1];\n    obj[k] = v;\n  }\n  return obj;\n};\nvar codePointAt = hasNativeCodePointAt ? function codePointAt2(s, index) {\n  return s.codePointAt(index);\n} : function codePointAt3(s, index) {\n  var size = s.length;\n  if (index < 0 || index >= size) {\n    return void 0;\n  }\n  var first = s.charCodeAt(index);\n  var second;\n  return first < 55296 || first > 56319 || index + 1 === size || (second = s.charCodeAt(index + 1)) < 56320 || second > 57343 ? first : (first - 55296 << 10) + (second - 56320) + 65536;\n};\nvar trimStart = hasTrimStart ? function trimStart2(s) {\n  return s.trimStart();\n} : function trimStart3(s) {\n  return s.replace(SPACE_SEPARATOR_START_REGEX, \"\");\n};\nvar trimEnd = hasTrimEnd ? function trimEnd2(s) {\n  return s.trimEnd();\n} : function trimEnd3(s) {\n  return s.replace(SPACE_SEPARATOR_END_REGEX, \"\");\n};\nfunction RE(s, flag) {\n  return new RegExp(s, flag);\n}\nvar matchIdentifierAtIndex;\nif (REGEX_SUPPORTS_U_AND_Y) {\n  IDENTIFIER_PREFIX_RE_1 = RE(\"([^\\\\p{White_Space}\\\\p{Pattern_Syntax}]*)\", \"yu\");\n  matchIdentifierAtIndex = function matchIdentifierAtIndex2(s, index) {\n    var _a2;\n    IDENTIFIER_PREFIX_RE_1.lastIndex = index;\n    var match = IDENTIFIER_PREFIX_RE_1.exec(s);\n    return (_a2 = match[1]) !== null && _a2 !== void 0 ? _a2 : \"\";\n  };\n} else {\n  matchIdentifierAtIndex = function matchIdentifierAtIndex2(s, index) {\n    var match = [];\n    while (true) {\n      var c = codePointAt(s, index);\n      if (c === void 0 || _isWhiteSpace(c) || _isPatternSyntax(c)) {\n        break;\n      }\n      match.push(c);\n      index += c >= 65536 ? 2 : 1;\n    }\n    return fromCodePoint.apply(void 0, match);\n  };\n}\nvar IDENTIFIER_PREFIX_RE_1;\nvar Parser = function() {\n  function Parser2(message, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    this.message = message;\n    this.position = {offset: 0, line: 1, column: 1};\n    this.ignoreTag = !!options.ignoreTag;\n    this.requiresOtherClause = !!options.requiresOtherClause;\n    this.shouldParseSkeletons = !!options.shouldParseSkeletons;\n  }\n  Parser2.prototype.parse = function() {\n    if (this.offset() !== 0) {\n      throw Error(\"parser can only be used once\");\n    }\n    return this.parseMessage(0, \"\", false);\n  };\n  Parser2.prototype.parseMessage = function(nestingLevel, parentArgType, expectingCloseTag) {\n    var elements = [];\n    while (!this.isEOF()) {\n      var char = this.char();\n      if (char === 123) {\n        var result = this.parseArgument(nestingLevel, expectingCloseTag);\n        if (result.err) {\n          return result;\n        }\n        elements.push(result.val);\n      } else if (char === 125 && nestingLevel > 0) {\n        break;\n      } else if (char === 35 && (parentArgType === \"plural\" || parentArgType === \"selectordinal\")) {\n        var position = this.clonePosition();\n        this.bump();\n        elements.push({\n          type: TYPE.pound,\n          location: createLocation(position, this.clonePosition())\n        });\n      } else if (char === 60 && !this.ignoreTag && this.peek() === 47) {\n        if (expectingCloseTag) {\n          break;\n        } else {\n          return this.error(ErrorKind.UNMATCHED_CLOSING_TAG, createLocation(this.clonePosition(), this.clonePosition()));\n        }\n      } else if (char === 60 && !this.ignoreTag && _isAlpha(this.peek() || 0)) {\n        var result = this.parseTag(nestingLevel, parentArgType);\n        if (result.err) {\n          return result;\n        }\n        elements.push(result.val);\n      } else {\n        var result = this.parseLiteral(nestingLevel, parentArgType);\n        if (result.err) {\n          return result;\n        }\n        elements.push(result.val);\n      }\n    }\n    return {val: elements, err: null};\n  };\n  Parser2.prototype.parseTag = function(nestingLevel, parentArgType) {\n    var startPosition = this.clonePosition();\n    this.bump();\n    var tagName = this.parseTagName();\n    this.bumpSpace();\n    if (this.bumpIf(\"/>\")) {\n      return {\n        val: {\n          type: TYPE.literal,\n          value: \"<\" + tagName + \"/>\",\n          location: createLocation(startPosition, this.clonePosition())\n        },\n        err: null\n      };\n    } else if (this.bumpIf(\">\")) {\n      var childrenResult = this.parseMessage(nestingLevel + 1, parentArgType, true);\n      if (childrenResult.err) {\n        return childrenResult;\n      }\n      var children = childrenResult.val;\n      var endTagStartPosition = this.clonePosition();\n      if (this.bumpIf(\"</\")) {\n        if (this.isEOF() || !_isAlpha(this.char())) {\n          return this.error(ErrorKind.INVALID_TAG, createLocation(endTagStartPosition, this.clonePosition()));\n        }\n        var closingTagNameStartPosition = this.clonePosition();\n        var closingTagName = this.parseTagName();\n        if (tagName !== closingTagName) {\n          return this.error(ErrorKind.UNMATCHED_CLOSING_TAG, createLocation(closingTagNameStartPosition, this.clonePosition()));\n        }\n        this.bumpSpace();\n        if (!this.bumpIf(\">\")) {\n          return this.error(ErrorKind.INVALID_TAG, createLocation(endTagStartPosition, this.clonePosition()));\n        }\n        return {\n          val: {\n            type: TYPE.tag,\n            value: tagName,\n            children,\n            location: createLocation(startPosition, this.clonePosition())\n          },\n          err: null\n        };\n      } else {\n        return this.error(ErrorKind.UNCLOSED_TAG, createLocation(startPosition, this.clonePosition()));\n      }\n    } else {\n      return this.error(ErrorKind.INVALID_TAG, createLocation(startPosition, this.clonePosition()));\n    }\n  };\n  Parser2.prototype.parseTagName = function() {\n    var startOffset = this.offset();\n    this.bump();\n    while (!this.isEOF() && _isPotentialElementNameChar(this.char())) {\n      this.bump();\n    }\n    return this.message.slice(startOffset, this.offset());\n  };\n  Parser2.prototype.parseLiteral = function(nestingLevel, parentArgType) {\n    var start = this.clonePosition();\n    var value = \"\";\n    while (true) {\n      var parseQuoteResult = this.tryParseQuote(parentArgType);\n      if (parseQuoteResult) {\n        value += parseQuoteResult;\n        continue;\n      }\n      var parseUnquotedResult = this.tryParseUnquoted(nestingLevel, parentArgType);\n      if (parseUnquotedResult) {\n        value += parseUnquotedResult;\n        continue;\n      }\n      var parseLeftAngleResult = this.tryParseLeftAngleBracket();\n      if (parseLeftAngleResult) {\n        value += parseLeftAngleResult;\n        continue;\n      }\n      break;\n    }\n    var location = createLocation(start, this.clonePosition());\n    return {\n      val: {type: TYPE.literal, value, location},\n      err: null\n    };\n  };\n  Parser2.prototype.tryParseLeftAngleBracket = function() {\n    if (!this.isEOF() && this.char() === 60 && (this.ignoreTag || !_isAlphaOrSlash(this.peek() || 0))) {\n      this.bump();\n      return \"<\";\n    }\n    return null;\n  };\n  Parser2.prototype.tryParseQuote = function(parentArgType) {\n    if (this.isEOF() || this.char() !== 39) {\n      return null;\n    }\n    switch (this.peek()) {\n      case 39:\n        this.bump();\n        this.bump();\n        return \"'\";\n      case 123:\n      case 60:\n      case 62:\n      case 125:\n        break;\n      case 35:\n        if (parentArgType === \"plural\" || parentArgType === \"selectordinal\") {\n          break;\n        }\n        return null;\n      default:\n        return null;\n    }\n    this.bump();\n    var codePoints = [this.char()];\n    this.bump();\n    while (!this.isEOF()) {\n      var ch = this.char();\n      if (ch === 39) {\n        if (this.peek() === 39) {\n          codePoints.push(39);\n          this.bump();\n        } else {\n          this.bump();\n          break;\n        }\n      } else {\n        codePoints.push(ch);\n      }\n      this.bump();\n    }\n    return fromCodePoint.apply(void 0, codePoints);\n  };\n  Parser2.prototype.tryParseUnquoted = function(nestingLevel, parentArgType) {\n    if (this.isEOF()) {\n      return null;\n    }\n    var ch = this.char();\n    if (ch === 60 || ch === 123 || ch === 35 && (parentArgType === \"plural\" || parentArgType === \"selectordinal\") || ch === 125 && nestingLevel > 0) {\n      return null;\n    } else {\n      this.bump();\n      return fromCodePoint(ch);\n    }\n  };\n  Parser2.prototype.parseArgument = function(nestingLevel, expectingCloseTag) {\n    var openingBracePosition = this.clonePosition();\n    this.bump();\n    this.bumpSpace();\n    if (this.isEOF()) {\n      return this.error(ErrorKind.EXPECT_ARGUMENT_CLOSING_BRACE, createLocation(openingBracePosition, this.clonePosition()));\n    }\n    if (this.char() === 125) {\n      this.bump();\n      return this.error(ErrorKind.EMPTY_ARGUMENT, createLocation(openingBracePosition, this.clonePosition()));\n    }\n    var value = this.parseIdentifierIfPossible().value;\n    if (!value) {\n      return this.error(ErrorKind.MALFORMED_ARGUMENT, createLocation(openingBracePosition, this.clonePosition()));\n    }\n    this.bumpSpace();\n    if (this.isEOF()) {\n      return this.error(ErrorKind.EXPECT_ARGUMENT_CLOSING_BRACE, createLocation(openingBracePosition, this.clonePosition()));\n    }\n    switch (this.char()) {\n      case 125: {\n        this.bump();\n        return {\n          val: {\n            type: TYPE.argument,\n            value,\n            location: createLocation(openingBracePosition, this.clonePosition())\n          },\n          err: null\n        };\n      }\n      case 44: {\n        this.bump();\n        this.bumpSpace();\n        if (this.isEOF()) {\n          return this.error(ErrorKind.EXPECT_ARGUMENT_CLOSING_BRACE, createLocation(openingBracePosition, this.clonePosition()));\n        }\n        return this.parseArgumentOptions(nestingLevel, expectingCloseTag, value, openingBracePosition);\n      }\n      default:\n        return this.error(ErrorKind.MALFORMED_ARGUMENT, createLocation(openingBracePosition, this.clonePosition()));\n    }\n  };\n  Parser2.prototype.parseIdentifierIfPossible = function() {\n    var startingPosition = this.clonePosition();\n    var startOffset = this.offset();\n    var value = matchIdentifierAtIndex(this.message, startOffset);\n    var endOffset = startOffset + value.length;\n    this.bumpTo(endOffset);\n    var endPosition = this.clonePosition();\n    var location = createLocation(startingPosition, endPosition);\n    return {value, location};\n  };\n  Parser2.prototype.parseArgumentOptions = function(nestingLevel, expectingCloseTag, value, openingBracePosition) {\n    var _a2;\n    var typeStartPosition = this.clonePosition();\n    var argType = this.parseIdentifierIfPossible().value;\n    var typeEndPosition = this.clonePosition();\n    switch (argType) {\n      case \"\":\n        return this.error(ErrorKind.EXPECT_ARGUMENT_TYPE, createLocation(typeStartPosition, typeEndPosition));\n      case \"number\":\n      case \"date\":\n      case \"time\": {\n        this.bumpSpace();\n        var styleAndLocation = null;\n        if (this.bumpIf(\",\")) {\n          this.bumpSpace();\n          var styleStartPosition = this.clonePosition();\n          var result = this.parseSimpleArgStyleIfPossible();\n          if (result.err) {\n            return result;\n          }\n          var style = trimEnd(result.val);\n          if (style.length === 0) {\n            return this.error(ErrorKind.EXPECT_ARGUMENT_STYLE, createLocation(this.clonePosition(), this.clonePosition()));\n          }\n          var styleLocation = createLocation(styleStartPosition, this.clonePosition());\n          styleAndLocation = {style, styleLocation};\n        }\n        var argCloseResult = this.tryParseArgumentClose(openingBracePosition);\n        if (argCloseResult.err) {\n          return argCloseResult;\n        }\n        var location_1 = createLocation(openingBracePosition, this.clonePosition());\n        if (styleAndLocation && startsWith(styleAndLocation === null || styleAndLocation === void 0 ? void 0 : styleAndLocation.style, \"::\", 0)) {\n          var skeleton = trimStart(styleAndLocation.style.slice(2));\n          if (argType === \"number\") {\n            var result = this.parseNumberSkeletonFromString(skeleton, styleAndLocation.styleLocation);\n            if (result.err) {\n              return result;\n            }\n            return {\n              val: {type: TYPE.number, value, location: location_1, style: result.val},\n              err: null\n            };\n          } else {\n            if (skeleton.length === 0) {\n              return this.error(ErrorKind.EXPECT_DATE_TIME_SKELETON, location_1);\n            }\n            var style = {\n              type: SKELETON_TYPE.dateTime,\n              pattern: skeleton,\n              location: styleAndLocation.styleLocation,\n              parsedOptions: this.shouldParseSkeletons ? parseDateTimeSkeleton(skeleton) : {}\n            };\n            var type = argType === \"date\" ? TYPE.date : TYPE.time;\n            return {\n              val: {type, value, location: location_1, style},\n              err: null\n            };\n          }\n        }\n        return {\n          val: {\n            type: argType === \"number\" ? TYPE.number : argType === \"date\" ? TYPE.date : TYPE.time,\n            value,\n            location: location_1,\n            style: (_a2 = styleAndLocation === null || styleAndLocation === void 0 ? void 0 : styleAndLocation.style) !== null && _a2 !== void 0 ? _a2 : null\n          },\n          err: null\n        };\n      }\n      case \"plural\":\n      case \"selectordinal\":\n      case \"select\": {\n        var typeEndPosition_1 = this.clonePosition();\n        this.bumpSpace();\n        if (!this.bumpIf(\",\")) {\n          return this.error(ErrorKind.EXPECT_SELECT_ARGUMENT_OPTIONS, createLocation(typeEndPosition_1, __assign({}, typeEndPosition_1)));\n        }\n        this.bumpSpace();\n        var identifierAndLocation = this.parseIdentifierIfPossible();\n        var pluralOffset = 0;\n        if (argType !== \"select\" && identifierAndLocation.value === \"offset\") {\n          if (!this.bumpIf(\":\")) {\n            return this.error(ErrorKind.EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE, createLocation(this.clonePosition(), this.clonePosition()));\n          }\n          this.bumpSpace();\n          var result = this.tryParseDecimalInteger(ErrorKind.EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE, ErrorKind.INVALID_PLURAL_ARGUMENT_OFFSET_VALUE);\n          if (result.err) {\n            return result;\n          }\n          this.bumpSpace();\n          identifierAndLocation = this.parseIdentifierIfPossible();\n          pluralOffset = result.val;\n        }\n        var optionsResult = this.tryParsePluralOrSelectOptions(nestingLevel, argType, expectingCloseTag, identifierAndLocation);\n        if (optionsResult.err) {\n          return optionsResult;\n        }\n        var argCloseResult = this.tryParseArgumentClose(openingBracePosition);\n        if (argCloseResult.err) {\n          return argCloseResult;\n        }\n        var location_2 = createLocation(openingBracePosition, this.clonePosition());\n        if (argType === \"select\") {\n          return {\n            val: {\n              type: TYPE.select,\n              value,\n              options: fromEntries(optionsResult.val),\n              location: location_2\n            },\n            err: null\n          };\n        } else {\n          return {\n            val: {\n              type: TYPE.plural,\n              value,\n              options: fromEntries(optionsResult.val),\n              offset: pluralOffset,\n              pluralType: argType === \"plural\" ? \"cardinal\" : \"ordinal\",\n              location: location_2\n            },\n            err: null\n          };\n        }\n      }\n      default:\n        return this.error(ErrorKind.INVALID_ARGUMENT_TYPE, createLocation(typeStartPosition, typeEndPosition));\n    }\n  };\n  Parser2.prototype.tryParseArgumentClose = function(openingBracePosition) {\n    if (this.isEOF() || this.char() !== 125) {\n      return this.error(ErrorKind.EXPECT_ARGUMENT_CLOSING_BRACE, createLocation(openingBracePosition, this.clonePosition()));\n    }\n    this.bump();\n    return {val: true, err: null};\n  };\n  Parser2.prototype.parseSimpleArgStyleIfPossible = function() {\n    var nestedBraces = 0;\n    var startPosition = this.clonePosition();\n    while (!this.isEOF()) {\n      var ch = this.char();\n      switch (ch) {\n        case 39: {\n          this.bump();\n          var apostrophePosition = this.clonePosition();\n          if (!this.bumpUntil(\"'\")) {\n            return this.error(ErrorKind.UNCLOSED_QUOTE_IN_ARGUMENT_STYLE, createLocation(apostrophePosition, this.clonePosition()));\n          }\n          this.bump();\n          break;\n        }\n        case 123: {\n          nestedBraces += 1;\n          this.bump();\n          break;\n        }\n        case 125: {\n          if (nestedBraces > 0) {\n            nestedBraces -= 1;\n          } else {\n            return {\n              val: this.message.slice(startPosition.offset, this.offset()),\n              err: null\n            };\n          }\n          break;\n        }\n        default:\n          this.bump();\n          break;\n      }\n    }\n    return {\n      val: this.message.slice(startPosition.offset, this.offset()),\n      err: null\n    };\n  };\n  Parser2.prototype.parseNumberSkeletonFromString = function(skeleton, location) {\n    var tokens = [];\n    try {\n      tokens = parseNumberSkeletonFromString(skeleton);\n    } catch (e) {\n      return this.error(ErrorKind.INVALID_NUMBER_SKELETON, location);\n    }\n    return {\n      val: {\n        type: SKELETON_TYPE.number,\n        tokens,\n        location,\n        parsedOptions: this.shouldParseSkeletons ? parseNumberSkeleton(tokens) : {}\n      },\n      err: null\n    };\n  };\n  Parser2.prototype.tryParsePluralOrSelectOptions = function(nestingLevel, parentArgType, expectCloseTag, parsedFirstIdentifier) {\n    var _a2;\n    var hasOtherClause = false;\n    var options = [];\n    var parsedSelectors = new Set();\n    var selector = parsedFirstIdentifier.value, selectorLocation = parsedFirstIdentifier.location;\n    while (true) {\n      if (selector.length === 0) {\n        var startPosition = this.clonePosition();\n        if (parentArgType !== \"select\" && this.bumpIf(\"=\")) {\n          var result = this.tryParseDecimalInteger(ErrorKind.EXPECT_PLURAL_ARGUMENT_SELECTOR, ErrorKind.INVALID_PLURAL_ARGUMENT_SELECTOR);\n          if (result.err) {\n            return result;\n          }\n          selectorLocation = createLocation(startPosition, this.clonePosition());\n          selector = this.message.slice(startPosition.offset, this.offset());\n        } else {\n          break;\n        }\n      }\n      if (parsedSelectors.has(selector)) {\n        return this.error(parentArgType === \"select\" ? ErrorKind.DUPLICATE_SELECT_ARGUMENT_SELECTOR : ErrorKind.DUPLICATE_PLURAL_ARGUMENT_SELECTOR, selectorLocation);\n      }\n      if (selector === \"other\") {\n        hasOtherClause = true;\n      }\n      this.bumpSpace();\n      var openingBracePosition = this.clonePosition();\n      if (!this.bumpIf(\"{\")) {\n        return this.error(parentArgType === \"select\" ? ErrorKind.EXPECT_SELECT_ARGUMENT_SELECTOR_FRAGMENT : ErrorKind.EXPECT_PLURAL_ARGUMENT_SELECTOR_FRAGMENT, createLocation(this.clonePosition(), this.clonePosition()));\n      }\n      var fragmentResult = this.parseMessage(nestingLevel + 1, parentArgType, expectCloseTag);\n      if (fragmentResult.err) {\n        return fragmentResult;\n      }\n      var argCloseResult = this.tryParseArgumentClose(openingBracePosition);\n      if (argCloseResult.err) {\n        return argCloseResult;\n      }\n      options.push([\n        selector,\n        {\n          value: fragmentResult.val,\n          location: createLocation(openingBracePosition, this.clonePosition())\n        }\n      ]);\n      parsedSelectors.add(selector);\n      this.bumpSpace();\n      _a2 = this.parseIdentifierIfPossible(), selector = _a2.value, selectorLocation = _a2.location;\n    }\n    if (options.length === 0) {\n      return this.error(parentArgType === \"select\" ? ErrorKind.EXPECT_SELECT_ARGUMENT_SELECTOR : ErrorKind.EXPECT_PLURAL_ARGUMENT_SELECTOR, createLocation(this.clonePosition(), this.clonePosition()));\n    }\n    if (this.requiresOtherClause && !hasOtherClause) {\n      return this.error(ErrorKind.MISSING_OTHER_CLAUSE, createLocation(this.clonePosition(), this.clonePosition()));\n    }\n    return {val: options, err: null};\n  };\n  Parser2.prototype.tryParseDecimalInteger = function(expectNumberError, invalidNumberError) {\n    var sign = 1;\n    var startingPosition = this.clonePosition();\n    if (this.bumpIf(\"+\")) {\n    } else if (this.bumpIf(\"-\")) {\n      sign = -1;\n    }\n    var hasDigits = false;\n    var decimal = 0;\n    while (!this.isEOF()) {\n      var ch = this.char();\n      if (ch >= 48 && ch <= 57) {\n        hasDigits = true;\n        decimal = decimal * 10 + (ch - 48);\n        this.bump();\n      } else {\n        break;\n      }\n    }\n    var location = createLocation(startingPosition, this.clonePosition());\n    if (!hasDigits) {\n      return this.error(expectNumberError, location);\n    }\n    decimal *= sign;\n    if (!isSafeInteger(decimal)) {\n      return this.error(invalidNumberError, location);\n    }\n    return {val: decimal, err: null};\n  };\n  Parser2.prototype.offset = function() {\n    return this.position.offset;\n  };\n  Parser2.prototype.isEOF = function() {\n    return this.offset() === this.message.length;\n  };\n  Parser2.prototype.clonePosition = function() {\n    return {\n      offset: this.position.offset,\n      line: this.position.line,\n      column: this.position.column\n    };\n  };\n  Parser2.prototype.char = function() {\n    var offset = this.position.offset;\n    if (offset >= this.message.length) {\n      throw Error(\"out of bound\");\n    }\n    var code = codePointAt(this.message, offset);\n    if (code === void 0) {\n      throw Error(\"Offset \" + offset + \" is at invalid UTF-16 code unit boundary\");\n    }\n    return code;\n  };\n  Parser2.prototype.error = function(kind, location) {\n    return {\n      val: null,\n      err: {\n        kind,\n        message: this.message,\n        location\n      }\n    };\n  };\n  Parser2.prototype.bump = function() {\n    if (this.isEOF()) {\n      return;\n    }\n    var code = this.char();\n    if (code === 10) {\n      this.position.line += 1;\n      this.position.column = 1;\n      this.position.offset += 1;\n    } else {\n      this.position.column += 1;\n      this.position.offset += code < 65536 ? 1 : 2;\n    }\n  };\n  Parser2.prototype.bumpIf = function(prefix) {\n    if (startsWith(this.message, prefix, this.offset())) {\n      for (var i = 0; i < prefix.length; i++) {\n        this.bump();\n      }\n      return true;\n    }\n    return false;\n  };\n  Parser2.prototype.bumpUntil = function(pattern) {\n    var currentOffset = this.offset();\n    var index = this.message.indexOf(pattern, currentOffset);\n    if (index >= 0) {\n      this.bumpTo(index);\n      return true;\n    } else {\n      this.bumpTo(this.message.length);\n      return false;\n    }\n  };\n  Parser2.prototype.bumpTo = function(targetOffset) {\n    if (this.offset() > targetOffset) {\n      throw Error(\"targetOffset \" + targetOffset + \" must be greater than or equal to the current offset \" + this.offset());\n    }\n    targetOffset = Math.min(targetOffset, this.message.length);\n    while (true) {\n      var offset = this.offset();\n      if (offset === targetOffset) {\n        break;\n      }\n      if (offset > targetOffset) {\n        throw Error(\"targetOffset \" + targetOffset + \" is at invalid UTF-16 code unit boundary\");\n      }\n      this.bump();\n      if (this.isEOF()) {\n        break;\n      }\n    }\n  };\n  Parser2.prototype.bumpSpace = function() {\n    while (!this.isEOF() && _isWhiteSpace(this.char())) {\n      this.bump();\n    }\n  };\n  Parser2.prototype.peek = function() {\n    if (this.isEOF()) {\n      return null;\n    }\n    var code = this.char();\n    var offset = this.offset();\n    var nextCode = this.message.charCodeAt(offset + (code >= 65536 ? 2 : 1));\n    return nextCode !== null && nextCode !== void 0 ? nextCode : null;\n  };\n  return Parser2;\n}();\nfunction _isAlpha(codepoint) {\n  return codepoint >= 97 && codepoint <= 122 || codepoint >= 65 && codepoint <= 90;\n}\nfunction _isAlphaOrSlash(codepoint) {\n  return _isAlpha(codepoint) || codepoint === 47;\n}\nfunction _isPotentialElementNameChar(c) {\n  return c === 45 || c === 46 || c >= 48 && c <= 57 || c === 95 || c >= 97 && c <= 122 || c >= 65 && c <= 90 || c == 183 || c >= 192 && c <= 214 || c >= 216 && c <= 246 || c >= 248 && c <= 893 || c >= 895 && c <= 8191 || c >= 8204 && c <= 8205 || c >= 8255 && c <= 8256 || c >= 8304 && c <= 8591 || c >= 11264 && c <= 12271 || c >= 12289 && c <= 55295 || c >= 63744 && c <= 64975 || c >= 65008 && c <= 65533 || c >= 65536 && c <= 983039;\n}\nfunction _isWhiteSpace(c) {\n  return c >= 9 && c <= 13 || c === 32 || c === 133 || c >= 8206 && c <= 8207 || c === 8232 || c === 8233;\n}\nfunction _isPatternSyntax(c) {\n  return c >= 33 && c <= 35 || c === 36 || c >= 37 && c <= 39 || c === 40 || c === 41 || c === 42 || c === 43 || c === 44 || c === 45 || c >= 46 && c <= 47 || c >= 58 && c <= 59 || c >= 60 && c <= 62 || c >= 63 && c <= 64 || c === 91 || c === 92 || c === 93 || c === 94 || c === 96 || c === 123 || c === 124 || c === 125 || c === 126 || c === 161 || c >= 162 && c <= 165 || c === 166 || c === 167 || c === 169 || c === 171 || c === 172 || c === 174 || c === 176 || c === 177 || c === 182 || c === 187 || c === 191 || c === 215 || c === 247 || c >= 8208 && c <= 8213 || c >= 8214 && c <= 8215 || c === 8216 || c === 8217 || c === 8218 || c >= 8219 && c <= 8220 || c === 8221 || c === 8222 || c === 8223 || c >= 8224 && c <= 8231 || c >= 8240 && c <= 8248 || c === 8249 || c === 8250 || c >= 8251 && c <= 8254 || c >= 8257 && c <= 8259 || c === 8260 || c === 8261 || c === 8262 || c >= 8263 && c <= 8273 || c === 8274 || c === 8275 || c >= 8277 && c <= 8286 || c >= 8592 && c <= 8596 || c >= 8597 && c <= 8601 || c >= 8602 && c <= 8603 || c >= 8604 && c <= 8607 || c === 8608 || c >= 8609 && c <= 8610 || c === 8611 || c >= 8612 && c <= 8613 || c === 8614 || c >= 8615 && c <= 8621 || c === 8622 || c >= 8623 && c <= 8653 || c >= 8654 && c <= 8655 || c >= 8656 && c <= 8657 || c === 8658 || c === 8659 || c === 8660 || c >= 8661 && c <= 8691 || c >= 8692 && c <= 8959 || c >= 8960 && c <= 8967 || c === 8968 || c === 8969 || c === 8970 || c === 8971 || c >= 8972 && c <= 8991 || c >= 8992 && c <= 8993 || c >= 8994 && c <= 9e3 || c === 9001 || c === 9002 || c >= 9003 && c <= 9083 || c === 9084 || c >= 9085 && c <= 9114 || c >= 9115 && c <= 9139 || c >= 9140 && c <= 9179 || c >= 9180 && c <= 9185 || c >= 9186 && c <= 9254 || c >= 9255 && c <= 9279 || c >= 9280 && c <= 9290 || c >= 9291 && c <= 9311 || c >= 9472 && c <= 9654 || c === 9655 || c >= 9656 && c <= 9664 || c === 9665 || c >= 9666 && c <= 9719 || c >= 9720 && c <= 9727 || c >= 9728 && c <= 9838 || c === 9839 || c >= 9840 && c <= 10087 || c === 10088 || c === 10089 || c === 10090 || c === 10091 || c === 10092 || c === 10093 || c === 10094 || c === 10095 || c === 10096 || c === 10097 || c === 10098 || c === 10099 || c === 10100 || c === 10101 || c >= 10132 && c <= 10175 || c >= 10176 && c <= 10180 || c === 10181 || c === 10182 || c >= 10183 && c <= 10213 || c === 10214 || c === 10215 || c === 10216 || c === 10217 || c === 10218 || c === 10219 || c === 10220 || c === 10221 || c === 10222 || c === 10223 || c >= 10224 && c <= 10239 || c >= 10240 && c <= 10495 || c >= 10496 && c <= 10626 || c === 10627 || c === 10628 || c === 10629 || c === 10630 || c === 10631 || c === 10632 || c === 10633 || c === 10634 || c === 10635 || c === 10636 || c === 10637 || c === 10638 || c === 10639 || c === 10640 || c === 10641 || c === 10642 || c === 10643 || c === 10644 || c === 10645 || c === 10646 || c === 10647 || c === 10648 || c >= 10649 && c <= 10711 || c === 10712 || c === 10713 || c === 10714 || c === 10715 || c >= 10716 && c <= 10747 || c === 10748 || c === 10749 || c >= 10750 && c <= 11007 || c >= 11008 && c <= 11055 || c >= 11056 && c <= 11076 || c >= 11077 && c <= 11078 || c >= 11079 && c <= 11084 || c >= 11085 && c <= 11123 || c >= 11124 && c <= 11125 || c >= 11126 && c <= 11157 || c === 11158 || c >= 11159 && c <= 11263 || c >= 11776 && c <= 11777 || c === 11778 || c === 11779 || c === 11780 || c === 11781 || c >= 11782 && c <= 11784 || c === 11785 || c === 11786 || c === 11787 || c === 11788 || c === 11789 || c >= 11790 && c <= 11798 || c === 11799 || c >= 11800 && c <= 11801 || c === 11802 || c === 11803 || c === 11804 || c === 11805 || c >= 11806 && c <= 11807 || c === 11808 || c === 11809 || c === 11810 || c === 11811 || c === 11812 || c === 11813 || c === 11814 || c === 11815 || c === 11816 || c === 11817 || c >= 11818 && c <= 11822 || c === 11823 || c >= 11824 && c <= 11833 || c >= 11834 && c <= 11835 || c >= 11836 && c <= 11839 || c === 11840 || c === 11841 || c === 11842 || c >= 11843 && c <= 11855 || c >= 11856 && c <= 11857 || c === 11858 || c >= 11859 && c <= 11903 || c >= 12289 && c <= 12291 || c === 12296 || c === 12297 || c === 12298 || c === 12299 || c === 12300 || c === 12301 || c === 12302 || c === 12303 || c === 12304 || c === 12305 || c >= 12306 && c <= 12307 || c === 12308 || c === 12309 || c === 12310 || c === 12311 || c === 12312 || c === 12313 || c === 12314 || c === 12315 || c === 12316 || c === 12317 || c >= 12318 && c <= 12319 || c === 12320 || c === 12336 || c === 64830 || c === 64831 || c >= 65093 && c <= 65094;\n}\n\n// bazel-out/darwin-fastbuild/bin/packages/icu-messageformat-parser/lib/index.js\nfunction pruneLocation(els) {\n  els.forEach(function(el) {\n    delete el.location;\n    if (isSelectElement(el) || isPluralElement(el)) {\n      for (var k in el.options) {\n        delete el.options[k].location;\n        pruneLocation(el.options[k].value);\n      }\n    } else if (isNumberElement(el) && isNumberSkeleton(el.style)) {\n      delete el.style.location;\n    } else if ((isDateElement(el) || isTimeElement(el)) && isDateTimeSkeleton(el.style)) {\n      delete el.style.location;\n    } else if (isTagElement(el)) {\n      pruneLocation(el.children);\n    }\n  });\n}\nfunction parse(message, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n  opts = __assign({shouldParseSkeletons: true, requiresOtherClause: true}, opts);\n  var result = new Parser(message, opts).parse();\n  if (result.err) {\n    var error = SyntaxError(ErrorKind[result.err.kind]);\n    error.location = result.err.location;\n    error.originalMessage = result.err.message;\n    throw error;\n  }\n  if (!(opts === null || opts === void 0 ? void 0 : opts.captureLocation)) {\n    pruneLocation(result.val);\n  }\n  return result.val;\n}\n\n// bazel-out/darwin-fastbuild/bin/packages/fast-memoize/lib/index.js\nfunction memoize(fn, options) {\n  var cache = options && options.cache ? options.cache : cacheDefault;\n  var serializer = options && options.serializer ? options.serializer : serializerDefault;\n  var strategy = options && options.strategy ? options.strategy : strategyDefault;\n  return strategy(fn, {\n    cache,\n    serializer\n  });\n}\nfunction isPrimitive(value) {\n  return value == null || typeof value === \"number\" || typeof value === \"boolean\";\n}\nfunction monadic(fn, cache, serializer, arg) {\n  var cacheKey = isPrimitive(arg) ? arg : serializer(arg);\n  var computedValue = cache.get(cacheKey);\n  if (typeof computedValue === \"undefined\") {\n    computedValue = fn.call(this, arg);\n    cache.set(cacheKey, computedValue);\n  }\n  return computedValue;\n}\nfunction variadic(fn, cache, serializer) {\n  var args = Array.prototype.slice.call(arguments, 3);\n  var cacheKey = serializer(args);\n  var computedValue = cache.get(cacheKey);\n  if (typeof computedValue === \"undefined\") {\n    computedValue = fn.apply(this, args);\n    cache.set(cacheKey, computedValue);\n  }\n  return computedValue;\n}\nfunction assemble(fn, context, strategy, cache, serialize) {\n  return strategy.bind(context, fn, cache, serialize);\n}\nfunction strategyDefault(fn, options) {\n  var strategy = fn.length === 1 ? monadic : variadic;\n  return assemble(fn, this, strategy, options.cache.create(), options.serializer);\n}\nfunction strategyVariadic(fn, options) {\n  return assemble(fn, this, variadic, options.cache.create(), options.serializer);\n}\nfunction strategyMonadic(fn, options) {\n  return assemble(fn, this, monadic, options.cache.create(), options.serializer);\n}\nvar serializerDefault = function() {\n  return JSON.stringify(arguments);\n};\nfunction ObjectWithoutPrototypeCache() {\n  this.cache = Object.create(null);\n}\nObjectWithoutPrototypeCache.prototype.has = function(key) {\n  return key in this.cache;\n};\nObjectWithoutPrototypeCache.prototype.get = function(key) {\n  return this.cache[key];\n};\nObjectWithoutPrototypeCache.prototype.set = function(key, value) {\n  this.cache[key] = value;\n};\nvar cacheDefault = {\n  create: function create() {\n    return new ObjectWithoutPrototypeCache();\n  }\n};\nvar strategies = {\n  variadic: strategyVariadic,\n  monadic: strategyMonadic\n};\n\n// bazel-out/darwin-fastbuild/bin/packages/intl-messageformat/lib_esnext/src/error.js\nvar ErrorCode;\n(function(ErrorCode2) {\n  ErrorCode2[\"MISSING_VALUE\"] = \"MISSING_VALUE\";\n  ErrorCode2[\"INVALID_VALUE\"] = \"INVALID_VALUE\";\n  ErrorCode2[\"MISSING_INTL_API\"] = \"MISSING_INTL_API\";\n})(ErrorCode || (ErrorCode = {}));\nvar FormatError = class extends Error {\n  constructor(msg, code, originalMessage) {\n    super(msg);\n    this.code = code;\n    this.originalMessage = originalMessage;\n  }\n  toString() {\n    return `[formatjs Error: ${this.code}] ${this.message}`;\n  }\n};\nvar InvalidValueError = class extends FormatError {\n  constructor(variableId, value, options, originalMessage) {\n    super(`Invalid values for \"${variableId}\": \"${value}\". Options are \"${Object.keys(options).join('\", \"')}\"`, ErrorCode.INVALID_VALUE, originalMessage);\n  }\n};\nvar InvalidValueTypeError = class extends FormatError {\n  constructor(value, type, originalMessage) {\n    super(`Value for \"${value}\" must be of type ${type}`, ErrorCode.INVALID_VALUE, originalMessage);\n  }\n};\nvar MissingValueError = class extends FormatError {\n  constructor(variableId, originalMessage) {\n    super(`The intl string context variable \"${variableId}\" was not provided to the string \"${originalMessage}\"`, ErrorCode.MISSING_VALUE, originalMessage);\n  }\n};\n\n// bazel-out/darwin-fastbuild/bin/packages/intl-messageformat/lib_esnext/src/formatters.js\nvar PART_TYPE;\n(function(PART_TYPE2) {\n  PART_TYPE2[PART_TYPE2[\"literal\"] = 0] = \"literal\";\n  PART_TYPE2[PART_TYPE2[\"object\"] = 1] = \"object\";\n})(PART_TYPE || (PART_TYPE = {}));\nfunction mergeLiteral(parts) {\n  if (parts.length < 2) {\n    return parts;\n  }\n  return parts.reduce((all, part) => {\n    const lastPart = all[all.length - 1];\n    if (!lastPart || lastPart.type !== PART_TYPE.literal || part.type !== PART_TYPE.literal) {\n      all.push(part);\n    } else {\n      lastPart.value += part.value;\n    }\n    return all;\n  }, []);\n}\nfunction isFormatXMLElementFn(el) {\n  return typeof el === \"function\";\n}\nfunction formatToParts(els, locales, formatters, formats, values, currentPluralValue, originalMessage) {\n  if (els.length === 1 && isLiteralElement(els[0])) {\n    return [\n      {\n        type: PART_TYPE.literal,\n        value: els[0].value\n      }\n    ];\n  }\n  const result = [];\n  for (const el of els) {\n    if (isLiteralElement(el)) {\n      result.push({\n        type: PART_TYPE.literal,\n        value: el.value\n      });\n      continue;\n    }\n    if (isPoundElement(el)) {\n      if (typeof currentPluralValue === \"number\") {\n        result.push({\n          type: PART_TYPE.literal,\n          value: formatters.getNumberFormat(locales).format(currentPluralValue)\n        });\n      }\n      continue;\n    }\n    const {value: varName} = el;\n    if (!(values && varName in values)) {\n      throw new MissingValueError(varName, originalMessage);\n    }\n    let value = values[varName];\n    if (isArgumentElement(el)) {\n      if (!value || typeof value === \"string\" || typeof value === \"number\") {\n        value = typeof value === \"string\" || typeof value === \"number\" ? String(value) : \"\";\n      }\n      result.push({\n        type: typeof value === \"string\" ? PART_TYPE.literal : PART_TYPE.object,\n        value\n      });\n      continue;\n    }\n    if (isDateElement(el)) {\n      const style = typeof el.style === \"string\" ? formats.date[el.style] : isDateTimeSkeleton(el.style) ? el.style.parsedOptions : void 0;\n      result.push({\n        type: PART_TYPE.literal,\n        value: formatters.getDateTimeFormat(locales, style).format(value)\n      });\n      continue;\n    }\n    if (isTimeElement(el)) {\n      const style = typeof el.style === \"string\" ? formats.time[el.style] : isDateTimeSkeleton(el.style) ? el.style.parsedOptions : void 0;\n      result.push({\n        type: PART_TYPE.literal,\n        value: formatters.getDateTimeFormat(locales, style).format(value)\n      });\n      continue;\n    }\n    if (isNumberElement(el)) {\n      const style = typeof el.style === \"string\" ? formats.number[el.style] : isNumberSkeleton(el.style) ? el.style.parsedOptions : void 0;\n      if (style && style.scale) {\n        value = value * (style.scale || 1);\n      }\n      result.push({\n        type: PART_TYPE.literal,\n        value: formatters.getNumberFormat(locales, style).format(value)\n      });\n      continue;\n    }\n    if (isTagElement(el)) {\n      const {children, value: value2} = el;\n      const formatFn = values[value2];\n      if (!isFormatXMLElementFn(formatFn)) {\n        throw new InvalidValueTypeError(value2, \"function\", originalMessage);\n      }\n      const parts = formatToParts(children, locales, formatters, formats, values, currentPluralValue);\n      let chunks = formatFn(parts.map((p) => p.value));\n      if (!Array.isArray(chunks)) {\n        chunks = [chunks];\n      }\n      result.push(...chunks.map((c) => {\n        return {\n          type: typeof c === \"string\" ? PART_TYPE.literal : PART_TYPE.object,\n          value: c\n        };\n      }));\n    }\n    if (isSelectElement(el)) {\n      const opt = el.options[value] || el.options.other;\n      if (!opt) {\n        throw new InvalidValueError(el.value, value, Object.keys(el.options), originalMessage);\n      }\n      result.push(...formatToParts(opt.value, locales, formatters, formats, values));\n      continue;\n    }\n    if (isPluralElement(el)) {\n      let opt = el.options[`=${value}`];\n      if (!opt) {\n        if (!Intl.PluralRules) {\n          throw new FormatError(`Intl.PluralRules is not available in this environment.\nTry polyfilling it using \"@formatjs/intl-pluralrules\"\n`, ErrorCode.MISSING_INTL_API, originalMessage);\n        }\n        const rule = formatters.getPluralRules(locales, {type: el.pluralType}).select(value - (el.offset || 0));\n        opt = el.options[rule] || el.options.other;\n      }\n      if (!opt) {\n        throw new InvalidValueError(el.value, value, Object.keys(el.options), originalMessage);\n      }\n      result.push(...formatToParts(opt.value, locales, formatters, formats, values, value - (el.offset || 0)));\n      continue;\n    }\n  }\n  return mergeLiteral(result);\n}\n\n// bazel-out/darwin-fastbuild/bin/packages/intl-messageformat/lib_esnext/src/core.js\nfunction mergeConfig(c1, c2) {\n  if (!c2) {\n    return c1;\n  }\n  return {\n    ...c1 || {},\n    ...c2 || {},\n    ...Object.keys(c1).reduce((all, k) => {\n      all[k] = {\n        ...c1[k],\n        ...c2[k] || {}\n      };\n      return all;\n    }, {})\n  };\n}\nfunction mergeConfigs(defaultConfig, configs) {\n  if (!configs) {\n    return defaultConfig;\n  }\n  return Object.keys(defaultConfig).reduce((all, k) => {\n    all[k] = mergeConfig(defaultConfig[k], configs[k]);\n    return all;\n  }, {...defaultConfig});\n}\nfunction createFastMemoizeCache(store) {\n  return {\n    create() {\n      return {\n        has(key) {\n          return key in store;\n        },\n        get(key) {\n          return store[key];\n        },\n        set(key, value) {\n          store[key] = value;\n        }\n      };\n    }\n  };\n}\nfunction createDefaultFormatters(cache = {\n  number: {},\n  dateTime: {},\n  pluralRules: {}\n}) {\n  return {\n    getNumberFormat: memoize((...args) => new Intl.NumberFormat(...args), {\n      cache: createFastMemoizeCache(cache.number),\n      strategy: strategies.variadic\n    }),\n    getDateTimeFormat: memoize((...args) => new Intl.DateTimeFormat(...args), {\n      cache: createFastMemoizeCache(cache.dateTime),\n      strategy: strategies.variadic\n    }),\n    getPluralRules: memoize((...args) => new Intl.PluralRules(...args), {\n      cache: createFastMemoizeCache(cache.pluralRules),\n      strategy: strategies.variadic\n    })\n  };\n}\nvar IntlMessageFormat = class {\n  constructor(message, locales = IntlMessageFormat.defaultLocale, overrideFormats, opts) {\n    this.formatterCache = {\n      number: {},\n      dateTime: {},\n      pluralRules: {}\n    };\n    this.format = (values) => {\n      const parts = this.formatToParts(values);\n      if (parts.length === 1) {\n        return parts[0].value;\n      }\n      const result = parts.reduce((all, part) => {\n        if (!all.length || part.type !== PART_TYPE.literal || typeof all[all.length - 1] !== \"string\") {\n          all.push(part.value);\n        } else {\n          all[all.length - 1] += part.value;\n        }\n        return all;\n      }, []);\n      if (result.length <= 1) {\n        return result[0] || \"\";\n      }\n      return result;\n    };\n    this.formatToParts = (values) => formatToParts(this.ast, this.locales, this.formatters, this.formats, values, void 0, this.message);\n    this.resolvedOptions = () => ({\n      locale: Intl.NumberFormat.supportedLocalesOf(this.locales)[0]\n    });\n    this.getAst = () => this.ast;\n    if (typeof message === \"string\") {\n      this.message = message;\n      if (!IntlMessageFormat.__parse) {\n        throw new TypeError(\"IntlMessageFormat.__parse must be set to process `message` of type `string`\");\n      }\n      this.ast = IntlMessageFormat.__parse(message, {\n        ignoreTag: opts?.ignoreTag\n      });\n    } else {\n      this.ast = message;\n    }\n    if (!Array.isArray(this.ast)) {\n      throw new TypeError(\"A message must be provided as a String or AST.\");\n    }\n    this.formats = mergeConfigs(IntlMessageFormat.formats, overrideFormats);\n    this.locales = locales;\n    this.formatters = opts && opts.formatters || createDefaultFormatters(this.formatterCache);\n  }\n  static get defaultLocale() {\n    if (!IntlMessageFormat.memoizedDefaultLocale) {\n      IntlMessageFormat.memoizedDefaultLocale = new Intl.NumberFormat().resolvedOptions().locale;\n    }\n    return IntlMessageFormat.memoizedDefaultLocale;\n  }\n};\nIntlMessageFormat.memoizedDefaultLocale = null;\nIntlMessageFormat.__parse = parse;\nIntlMessageFormat.formats = {\n  number: {\n    integer: {\n      maximumFractionDigits: 0\n    },\n    currency: {\n      style: \"currency\"\n    },\n    percent: {\n      style: \"percent\"\n    }\n  },\n  date: {\n    short: {\n      month: \"numeric\",\n      day: \"numeric\",\n      year: \"2-digit\"\n    },\n    medium: {\n      month: \"short\",\n      day: \"numeric\",\n      year: \"numeric\"\n    },\n    long: {\n      month: \"long\",\n      day: \"numeric\",\n      year: \"numeric\"\n    },\n    full: {\n      weekday: \"long\",\n      month: \"long\",\n      day: \"numeric\",\n      year: \"numeric\"\n    }\n  },\n  time: {\n    short: {\n      hour: \"numeric\",\n      minute: \"numeric\"\n    },\n    medium: {\n      hour: \"numeric\",\n      minute: \"numeric\",\n      second: \"numeric\"\n    },\n    long: {\n      hour: \"numeric\",\n      minute: \"numeric\",\n      second: \"numeric\",\n      timeZoneName: \"short\"\n    },\n    full: {\n      hour: \"numeric\",\n      minute: \"numeric\",\n      second: \"numeric\",\n      timeZoneName: \"short\"\n    }\n  }\n};\n\n// bazel-out/darwin-fastbuild/bin/packages/intl-messageformat/lib_esnext/index.js\nvar lib_esnext_default = IntlMessageFormat;\nexport {\n  ErrorCode,\n  FormatError,\n  IntlMessageFormat,\n  InvalidValueError,\n  InvalidValueTypeError,\n  MissingValueError,\n  PART_TYPE,\n  lib_esnext_default as default,\n  formatToParts,\n  isFormatXMLElementFn\n};\n/*! *****************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n"],
  "mappings": "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AO,MAAM,OAAO,MAAM,OAAO,KAAK,OAAO,KAAK,OAAO,MAAM,OAAO,MAAM,OAAO,MAAM,OAAO,MAAM,OAAO,MAAM,OAAO,MAAM,OAAO,MAAM,OAAO,MAAM,OAAO,MAAM,OAAO,MAAM,OAAO,MAAM,OAAO,MAAM,OAAO,MAAM,OAAO,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,KAAK,QAAQ,KAAK,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,MAAM,QAAQ,MAAM,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,KAAK,QAAQ,KAAK,QAAQ,MAAM,QAAQ,MAAM,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,MAAM,QAAQ,KAAK,QAAQ,KAAK,QAAQ,MAAM,QAAQ,KAAK,QAAQ,KAAK,QAAQ,MAAM,QAAQ,KAAK,QAAQ,KAAK,QAAQ,MAAM,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,OAAO,MAAM,QAAQ,MAAM,QAAQ,KAAK,QAAQ,KAAK,QAAQ,MAAM,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,MAAM,QAAQ,KAAK,QAAQ,KAAK,QAAQ,MAAM,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,MAAM,QAAQ,KAAK,QAAQ,KAAK,SAAS,MAAM,SAAS,MAAM,SAAS,MAAM,SAAS,MAAM,SAAS,MAAM,SAAS,MAAM,SAAS,MAAM,SAAS,MAAM,SAAS,MAAM,SAAS,MAAM,SAAS,MAAM,SAAS,MAAM,SAAS,MAAM,SAAS,MAAM,SAAS,KAAK,SAAS,KAAK,SAAS,KAAK,SAAS,KAAK,SAAS,MAAM,SAAS,MAAM,SAAS,KAAK,SAAS,KAAK,SAAS,MAAM,SAAS,MAAM,SAAS,MAAM,SAAS,MAAM,SAAS,MAAM,SAAS,MAAM,SAAS,MAAM,SAAS,MAAM,SAAS,MAAM,SAAS,MAAM,SAAS,KAAK,SAAS,KAAK,SAAS,KAAK,SAAS,KAAK,SAAS,KAAK,SAAS,KAAK,SAAS,MAAM,SAAS,MAAM,SAAS,MAAM,SAAS,MAAM,SAAS,MAAM,SAAS,MAAM,SAAS,MAAM,SAAS,MAAM,SAAS,MAAM,SAAS,MAAM,SAAS,MAAM,SAAS,MAAM,SAAS,MAAM,SAAS,MAAM,SAAS,MAAM,SAAS,MAAM,SAAS,MAAM,SAAS,MAAM,SAAS,MAAM,SAAS,MAAM,SAAS,MAAM,SAAS,MAAM,SAAS,KAAK,SAAS,KAAK,SAAS,MAAM,SAAS,MAAM,SAAS,MAAM,SAAS,MAAM,SAAS,KAAK,SAAS,KAAK,SAAS,MAAM,SAAS,MAAM,SAAS,KAAK,SAAS,KAAK,SAAS,KAAK,SAAS,KAAK,SAAS,KAAK,SAAS,KAAK,SAAS,KAAK,SAAS,KAAK,SAAS,KAAK,SAAS,KAAK,SAAS,KAAK,SAAS,KAAK,SAAS,KAAK,SAAS,KAAK,SAAS,KAAK,SAAS,KAAK,SAAS,MAAM,SAAS,KAAK,SAAS,KAAK,SAAS,KAAK,SAAS,KAAK,SAAS,MAAM,SAAS,MAAM,SAAS,MAAM,SAAS,MAAM,SAAS,KAAK,SAAS,KAAK,SAAS,MAAM,SAAS,MAAM,SAAS,MAAM,SAAS,MAAM,SAAS,MAAM,SAAS,KAAK,SAAS,KAAK,SAAS,MAAM,SAAS,KAAK,SAAS,KAAK,SAAS,MAAM,SAAS,MAAM,SAAS,MAAM,SAAS,MAAM,SAAS,KAAK,SAAS,KAAK,SA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",
  "names": []
}
