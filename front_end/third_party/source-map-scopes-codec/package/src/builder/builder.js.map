{"version":3,"file":"builder.js","sourceRoot":"","sources":["../../../../../../../../../front_end/third_party/source-map-scopes-codec/package/src/builder/builder.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type {\n  Binding,\n  GeneratedRange,\n  OriginalPosition,\n  OriginalScope,\n  ScopeInfo,\n} from \"../scopes.d.ts\";\n\n/**\n * Small utility class to build scope and range trees.\n *\n * This class allows construction of scope/range trees that will be rejected by the encoder.\n * Use this class if you guarantee proper nesting yourself and don't want to pay for the\n * checks, otherwise use the `SafeScopeInfoBuilder`.\n *\n * This class will also silently ignore calls that would fail otherwise. E.g. calling\n * `end*` without a matching `start*`.\n */\nexport class ScopeInfoBuilder {\n  #scopes: (OriginalScope | null)[] = [];\n  #ranges: GeneratedRange[] = [];\n\n  #scopeStack: OriginalScope[] = [];\n  #rangeStack: GeneratedRange[] = [];\n\n  #knownScopes = new Set<OriginalScope>();\n  #keyToScope = new Map<ScopeKey, OriginalScope>();\n  #lastScope: OriginalScope | null = null;\n\n  addNullScope(): this {\n    this.#scopes.push(null);\n    return this;\n  }\n\n  startScope(\n    line: number,\n    column: number,\n    options?: {\n      name?: string;\n      kind?: string;\n      isStackFrame?: boolean;\n      variables?: string[];\n      key?: ScopeKey;\n    },\n  ): this {\n    const scope: OriginalScope = {\n      start: { line, column },\n      end: { line, column },\n      variables: options?.variables?.slice(0) ?? [],\n      children: [],\n      isStackFrame: Boolean(options?.isStackFrame),\n    };\n\n    if (options?.name !== undefined) scope.name = options.name;\n    if (options?.kind !== undefined) scope.kind = options.kind;\n\n    if (this.#scopeStack.length > 0) {\n      scope.parent = this.#scopeStack.at(-1);\n    }\n    this.#scopeStack.push(scope);\n    this.#knownScopes.add(scope);\n    if (options?.key !== undefined) this.#keyToScope.set(options.key, scope);\n\n    return this;\n  }\n\n  setScopeName(name: string): this {\n    const scope = this.#scopeStack.at(-1);\n    if (scope) scope.name = name;\n    return this;\n  }\n\n  setScopeKind(kind: string): this {\n    const scope = this.#scopeStack.at(-1);\n    if (scope) scope.kind = kind;\n    return this;\n  }\n\n  setScopeStackFrame(isStackFrame: boolean): this {\n    const scope = this.#scopeStack.at(-1);\n    if (scope) scope.isStackFrame = isStackFrame;\n    return this;\n  }\n\n  setScopeVariables(variables: string[]): this {\n    const scope = this.#scopeStack.at(-1);\n    if (scope) scope.variables = variables.slice(0);\n\n    return this;\n  }\n\n  endScope(line: number, column: number): this {\n    const scope = this.#scopeStack.pop();\n    if (!scope) return this;\n\n    scope.end = { line, column };\n\n    if (this.#scopeStack.length === 0) {\n      this.#scopes.push(scope);\n    } else {\n      this.#scopeStack.at(-1)!.children.push(scope);\n    }\n    this.#lastScope = scope;\n\n    return this;\n  }\n\n  /**\n   * @returns The OriginalScope opened with the most recent `startScope` call, but not yet closed.\n   */\n  currentScope(): OriginalScope | null {\n    return this.#scopeStack.at(-1) ?? null;\n  }\n\n  /**\n   * @returns The most recent OriginalScope closed with `endScope`.\n   */\n  lastScope(): OriginalScope | null {\n    return this.#lastScope;\n  }\n\n  /**\n   * @param option The definition 'scope' of this range can either be the \"OriginalScope\" directly\n   * (produced by this builder) or the scope's key set while building the scope.\n   */\n  startRange(\n    line: number,\n    column: number,\n    options?: {\n      scope?: OriginalScope;\n      scopeKey?: ScopeKey;\n      isStackFrame?: boolean;\n      isHidden?: boolean;\n      values?: Binding[];\n      callSite?: OriginalPosition;\n    },\n  ): this {\n    const range: GeneratedRange = {\n      start: { line, column },\n      end: { line, column },\n      isStackFrame: Boolean(options?.isStackFrame),\n      isHidden: Boolean(options?.isHidden),\n      values: options?.values ?? [],\n      children: [],\n    };\n\n    if (this.#rangeStack.length > 0) {\n      range.parent = this.#rangeStack.at(-1);\n    }\n\n    if (options?.scope !== undefined) {\n      range.originalScope = options.scope;\n    } else if (options?.scopeKey !== undefined) {\n      range.originalScope = this.#keyToScope.get(options.scopeKey);\n    }\n\n    if (options?.callSite) {\n      range.callSite = options.callSite;\n    }\n\n    this.#rangeStack.push(range);\n\n    return this;\n  }\n\n  setRangeDefinitionScope(scope: OriginalScope): this {\n    const range = this.#rangeStack.at(-1);\n    if (range) range.originalScope = scope;\n    return this;\n  }\n\n  setRangeDefinitionScopeKey(scopeKey: ScopeKey): this {\n    const range = this.#rangeStack.at(-1);\n    if (range) range.originalScope = this.#keyToScope.get(scopeKey);\n    return this;\n  }\n\n  setRangeStackFrame(isStackFrame: boolean): this {\n    const range = this.#rangeStack.at(-1);\n    if (range) range.isStackFrame = isStackFrame;\n\n    return this;\n  }\n\n  setRangeHidden(isHidden: boolean): this {\n    const range = this.#rangeStack.at(-1);\n    if (range) range.isHidden = isHidden;\n\n    return this;\n  }\n\n  setRangeValues(values: Binding[]): this {\n    const range = this.#rangeStack.at(-1);\n    if (range) range.values = values;\n\n    return this;\n  }\n\n  setRangeCallSite(callSite: OriginalPosition): this {\n    const range = this.#rangeStack.at(-1);\n    if (range) range.callSite = callSite;\n\n    return this;\n  }\n\n  endRange(line: number, column: number): this {\n    const range = this.#rangeStack.pop();\n    if (!range) return this;\n\n    range.end = { line, column };\n\n    if (this.#rangeStack.length === 0) {\n      this.#ranges.push(range);\n    } else {\n      this.#rangeStack.at(-1)!.children.push(range);\n    }\n\n    return this;\n  }\n\n  build(): ScopeInfo {\n    const info: ScopeInfo = { scopes: this.#scopes, ranges: this.#ranges };\n\n    this.#scopes = [];\n    this.#ranges = [];\n    this.#knownScopes.clear();\n\n    return info;\n  }\n\n  protected get scopeStack(): ReadonlyArray<OriginalScope> {\n    return this.#scopeStack;\n  }\n\n  protected get rangeStack(): ReadonlyArray<GeneratedRange> {\n    return this.#rangeStack;\n  }\n\n  protected isKnownScope(scope: OriginalScope): boolean {\n    return this.#knownScopes.has(scope);\n  }\n\n  protected isValidScopeKey(key: ScopeKey): boolean {\n    return this.#keyToScope.has(key);\n  }\n\n  protected getScopeByValidKey(key: ScopeKey): OriginalScope {\n    return this.#keyToScope.get(key)!;\n  }\n}\n\n/**\n * Users of the {@link ScopeInfoBuilder} can provide their own keys to uniquely identify a scope,\n * and use the key later when building the corresponding range to connect them.\n *\n * The only requirement for ScopeKey is that it can be used as a key in a `Map`.\n */\nexport type ScopeKey = unknown;\n"]}