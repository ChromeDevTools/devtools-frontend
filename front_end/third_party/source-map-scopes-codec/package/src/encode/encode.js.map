{"version":3,"file":"encode.js","sourceRoot":"","sources":["../../../../../../../../../front_end/third_party/source-map-scopes-codec/package/src/encode/encode.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAG7B,OAAO,EAAE,OAAO,EAAE,MAAM,cAAc,CAAC;AAEvC;;;;;GAKG;AACH,MAAM,UAAU,MAAM,CACpB,UAAqB,EACrB,cAA8B;IAE9B,cAAc,KAAK;QACjB,OAAO,EAAE,CAAC;QACV,QAAQ,EAAE,EAAE;QACZ,OAAO,EAAE,IAAI,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;KACxD,CAAC;IACF,cAAc,CAAC,KAAK,KAAK,EAAE,CAAC;IAE5B,IAAI,cAAc,CAAC,OAAO,CAAC,MAAM,KAAK,UAAU,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;QAC/D,MAAM,IAAI,KAAK,CACb,8DAA8D,cAAc,CAAC,OAAO,CAAC,MAAM,OAAO,UAAU,CAAC,MAAM,CAAC,MAAM,EAAE,CAC7H,CAAC;IACJ,CAAC;IAED,cAAc,CAAC,MAAM,GAAG,IAAI,OAAO,CAAC,UAAU,EAAE,cAAc,CAAC,KAAK,CAAC;SAClE,MAAM,EAAE,CAAC;IAEZ,OAAO,cAAc,CAAC;AACxB,CAAC","sourcesContent":["// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type { ScopeInfo, SourceMapJson } from \"../scopes.d.ts\";\nimport { Encoder } from \"./encoder.js\";\n\n/**\n * Encodes the `ScopeInfo` into a source map JSON object.\n *\n * If `inputSourceMap` is provided, `encode` will augment the \"names\" array and\n * overwrite the \"scopes\" field, before returning the provided `inputSourceMap` again.\n */\nexport function encode(\n  scopesInfo: ScopeInfo,\n  inputSourceMap?: SourceMapJson,\n): SourceMapJson {\n  inputSourceMap ||= {\n    version: 3,\n    mappings: \"\",\n    sources: new Array(scopesInfo.scopes.length).fill(null),\n  };\n  inputSourceMap.names ||= [];\n\n  if (inputSourceMap.sources.length !== scopesInfo.scopes.length) {\n    throw new Error(\n      `SourceMapJson.sources.length must match ScopesInfo.scopes! ${inputSourceMap.sources.length} vs ${scopesInfo.scopes.length}`,\n    );\n  }\n\n  inputSourceMap.scopes = new Encoder(scopesInfo, inputSourceMap.names)\n    .encode();\n\n  return inputSourceMap;\n}\n"]}