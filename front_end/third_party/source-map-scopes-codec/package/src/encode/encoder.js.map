{"version":3,"file":"encoder.js","sourceRoot":"","sources":["../../../../../../../../../front_end/third_party/source-map-scopes-codec/package/src/encode/encoder.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2025 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {\n  EncodedTag,\n  GeneratedRangeFlags,\n  OriginalScopeFlags,\n} from \"../codec.js\";\nimport type { GeneratedRange, OriginalScope, ScopeInfo } from \"../scopes.d.ts\";\nimport { encodeSigned, encodeUnsigned } from \"../vlq.js\";\nimport { comparePositions } from \"../util.js\";\n\nconst DEFAULT_SCOPE_STATE = {\n  line: 0,\n  column: 0,\n  name: 0,\n  kind: 0,\n  variable: 0,\n};\n\nconst DEFAULT_RANGE_STATE = {\n  line: 0,\n  column: 0,\n  defScopeIdx: 0,\n};\n\nexport class Encoder {\n  readonly #info: ScopeInfo;\n  readonly #names: string[];\n\n  // Hash map to resolve indices of strings in the \"names\" array. Otherwise we'd have\n  // to use 'indexOf' for every name we want to encode.\n  readonly #namesToIndex = new Map<string, number>();\n\n  readonly #scopeState = { ...DEFAULT_SCOPE_STATE };\n  readonly #rangeState = { ...DEFAULT_RANGE_STATE };\n  #encodedItems: string[] = [];\n  #currentItem: string = \"\";\n\n  #scopeToCount = new Map<OriginalScope, number>();\n  #scopeCounter = 0;\n\n  constructor(info: ScopeInfo, names: string[]) {\n    this.#info = info;\n    this.#names = names;\n\n    for (let i = 0; i < names.length; ++i) {\n      this.#namesToIndex.set(names[i], i);\n    }\n  }\n\n  encode(): string {\n    this.#encodedItems = [];\n    this.#info.scopes.forEach((scope) => {\n      this.#scopeState.line = 0;\n      this.#scopeState.column = 0;\n      this.#encodeOriginalScope(scope);\n    });\n    this.#info.ranges.forEach((range) => {\n      this.#encodeGeneratedRange(range);\n    });\n\n    return this.#encodedItems.join(\",\");\n  }\n\n  #encodeOriginalScope(scope: OriginalScope | null): void {\n    if (scope === null) {\n      this.#encodedItems.push(\"\");\n      return;\n    }\n\n    this.#encodeOriginalScopeStart(scope);\n    this.#encodeOriginalScopeVariables(scope);\n    scope.children.forEach((child) => this.#encodeOriginalScope(child));\n    this.#encodeOriginalScopeEnd(scope);\n  }\n\n  #encodeOriginalScopeStart(scope: OriginalScope) {\n    const { line, column } = scope.start;\n    this.#verifyPositionWithScopeState(line, column);\n\n    let flags = 0;\n    const encodedLine = line - this.#scopeState.line;\n    const encodedColumn = encodedLine === 0\n      ? column - this.#scopeState.column\n      : column;\n    this.#scopeState.line = line;\n    this.#scopeState.column = column;\n\n    let encodedName: number | undefined;\n    if (scope.name !== undefined) {\n      flags |= OriginalScopeFlags.HAS_NAME;\n      const nameIdx = this.#resolveNamesIdx(scope.name);\n      encodedName = nameIdx - this.#scopeState.name;\n      this.#scopeState.name = nameIdx;\n    }\n\n    let encodedKind: number | undefined;\n    if (scope.kind !== undefined) {\n      flags |= OriginalScopeFlags.HAS_KIND;\n      const kindIdx = this.#resolveNamesIdx(scope.kind);\n      encodedKind = kindIdx - this.#scopeState.kind;\n      this.#scopeState.kind = kindIdx;\n    }\n\n    if (scope.isStackFrame) flags |= OriginalScopeFlags.IS_STACK_FRAME;\n\n    this.#encodeTag(EncodedTag.ORIGINAL_SCOPE_START).#encodeUnsigned(flags)\n      .#encodeUnsigned(encodedLine).#encodeUnsigned(encodedColumn);\n    if (encodedName !== undefined) this.#encodeSigned(encodedName);\n    if (encodedKind !== undefined) this.#encodeSigned(encodedKind);\n    this.#finishItem();\n\n    this.#scopeToCount.set(scope, this.#scopeCounter++);\n  }\n\n  #encodeOriginalScopeVariables(scope: OriginalScope) {\n    if (scope.variables.length === 0) return;\n\n    this.#encodeTag(EncodedTag.ORIGINAL_SCOPE_VARIABLES);\n\n    for (const variable of scope.variables) {\n      const idx = this.#resolveNamesIdx(variable);\n      this.#encodeSigned(idx - this.#scopeState.variable);\n      this.#scopeState.variable = idx;\n    }\n\n    this.#finishItem();\n  }\n\n  #encodeOriginalScopeEnd(scope: OriginalScope) {\n    const { line, column } = scope.end;\n    this.#verifyPositionWithScopeState(line, column);\n\n    const encodedLine = line - this.#scopeState.line;\n    const encodedColumn = encodedLine === 0\n      ? column - this.#scopeState.column\n      : column;\n\n    this.#scopeState.line = line;\n    this.#scopeState.column = column;\n\n    this.#encodeTag(EncodedTag.ORIGINAL_SCOPE_END).#encodeUnsigned(encodedLine)\n      .#encodeUnsigned(encodedColumn).#finishItem();\n  }\n\n  #encodeGeneratedRange(range: GeneratedRange): void {\n    this.#encodeGeneratedRangeStart(range);\n    this.#encodeGeneratedRangeBindings(range);\n    this.#encodeGeneratedRangeSubRangeBindings(range);\n    this.#encodeGeneratedRangeCallSite(range);\n    range.children.forEach((child) => this.#encodeGeneratedRange(child));\n    this.#encodeGeneratedRangeEnd(range);\n  }\n\n  #encodeGeneratedRangeStart(range: GeneratedRange) {\n    const { line, column } = range.start;\n    this.#verifyPositionWithRangeState(line, column);\n\n    let flags = 0;\n    const encodedLine = line - this.#rangeState.line;\n    let encodedColumn = column - this.#rangeState.column;\n    if (encodedLine > 0) {\n      flags |= GeneratedRangeFlags.HAS_LINE;\n      encodedColumn = column;\n    }\n\n    this.#rangeState.line = line;\n    this.#rangeState.column = column;\n\n    let encodedDefinition;\n    if (range.originalScope) {\n      const definitionIdx = this.#scopeToCount.get(range.originalScope);\n      if (definitionIdx === undefined) {\n        throw new Error(\"Unknown OriginalScope for definition!\");\n      }\n\n      flags |= GeneratedRangeFlags.HAS_DEFINITION;\n\n      encodedDefinition = definitionIdx - this.#rangeState.defScopeIdx;\n      this.#rangeState.defScopeIdx = definitionIdx;\n    }\n\n    if (range.isStackFrame) flags |= GeneratedRangeFlags.IS_STACK_FRAME;\n    if (range.isHidden) flags |= GeneratedRangeFlags.IS_HIDDEN;\n\n    this.#encodeTag(EncodedTag.GENERATED_RANGE_START).#encodeUnsigned(flags);\n    if (encodedLine > 0) this.#encodeUnsigned(encodedLine);\n    this.#encodeUnsigned(encodedColumn);\n    if (encodedDefinition !== undefined) this.#encodeSigned(encodedDefinition);\n    this.#finishItem();\n  }\n\n  #encodeGeneratedRangeSubRangeBindings(range: GeneratedRange) {\n    if (range.values.length === 0) return;\n\n    for (let i = 0; i < range.values.length; ++i) {\n      const value = range.values[i];\n      if (!Array.isArray(value) || value.length <= 1) {\n        continue;\n      }\n\n      this.#encodeTag(EncodedTag.GENERATED_RANGE_SUBRANGE_BINDING)\n        .#encodeUnsigned(i);\n\n      let lastLine = range.start.line;\n      let lastColumn = range.start.column;\n      for (let j = 1; j < value.length; ++j) {\n        const subRange = value[j];\n        const prevSubRange = value[j - 1];\n\n        if (comparePositions(prevSubRange.to, subRange.from) !== 0) {\n          throw new Error(\"Sub-range bindings must not have gaps\");\n        }\n\n        const encodedLine = subRange.from.line - lastLine;\n        const encodedColumn = encodedLine === 0\n          ? subRange.from.column - lastColumn\n          : subRange.from.column;\n        if (encodedLine < 0 || encodedColumn < 0) {\n          throw new Error(\"Sub-range bindings must be sorted\");\n        }\n\n        lastLine = subRange.from.line;\n        lastColumn = subRange.from.column;\n\n        const binding = subRange.value === undefined\n          ? 0\n          : this.#resolveNamesIdx(subRange.value) + 1;\n        this.#encodeUnsigned(binding).#encodeUnsigned(encodedLine)\n          .#encodeUnsigned(encodedColumn);\n      }\n      this.#finishItem();\n    }\n  }\n\n  #encodeGeneratedRangeBindings(range: GeneratedRange) {\n    if (range.values.length === 0) return;\n\n    if (!range.originalScope) {\n      throw new Error(\"Range has binding expressions but no OriginalScope\");\n    } else if (range.originalScope.variables.length !== range.values.length) {\n      throw new Error(\n        \"Range's binding expressions don't match OriginalScopes' variables\",\n      );\n    }\n\n    this.#encodeTag(EncodedTag.GENERATED_RANGE_BINDINGS);\n    for (const val of range.values) {\n      if (val === null || val === undefined) {\n        this.#encodeUnsigned(0);\n      } else if (typeof val === \"string\") {\n        this.#encodeUnsigned(this.#resolveNamesIdx(val) + 1);\n      } else {\n        const initialValue = val[0];\n        const binding = initialValue.value === undefined\n          ? 0\n          : this.#resolveNamesIdx(initialValue.value) + 1;\n        this.#encodeUnsigned(binding);\n      }\n    }\n    this.#finishItem();\n  }\n\n  #encodeGeneratedRangeCallSite(range: GeneratedRange) {\n    if (!range.callSite) return;\n    const { sourceIndex, line, column } = range.callSite;\n\n    // TODO: Throw if stackFrame flag is set or OriginalScope index is invalid or no generated range is here.\n\n    this.#encodeTag(EncodedTag.GENERATED_RANGE_CALL_SITE).#encodeUnsigned(\n      sourceIndex,\n    ).#encodeUnsigned(line).#encodeUnsigned(column).#finishItem();\n  }\n\n  #encodeGeneratedRangeEnd(range: GeneratedRange) {\n    const { line, column } = range.end;\n    this.#verifyPositionWithRangeState(line, column);\n\n    let flags = 0;\n    const encodedLine = line - this.#rangeState.line;\n    let encodedColumn = column - this.#rangeState.column;\n    if (encodedLine > 0) {\n      flags |= GeneratedRangeFlags.HAS_LINE;\n      encodedColumn = column;\n    }\n\n    this.#rangeState.line = line;\n    this.#rangeState.column = column;\n\n    this.#encodeTag(EncodedTag.GENERATED_RANGE_END);\n    if (encodedLine > 0) this.#encodeUnsigned(encodedLine);\n    this.#encodeUnsigned(encodedColumn).#finishItem();\n  }\n\n  #resolveNamesIdx(name: string): number {\n    const index = this.#namesToIndex.get(name);\n    if (index !== undefined) return index;\n\n    const addedIndex = this.#names.length;\n    this.#names.push(name);\n    this.#namesToIndex.set(name, addedIndex);\n    return addedIndex;\n  }\n\n  #verifyPositionWithScopeState(line: number, column: number) {\n    if (\n      this.#scopeState.line > line ||\n      (this.#scopeState.line === line && this.#scopeState.column > column)\n    ) {\n      throw new Error(\n        `Attempting to encode scope item (${line}, ${column}) that precedes the last encoded scope item (${this.#scopeState.line}, ${this.#scopeState.column})`,\n      );\n    }\n  }\n\n  #verifyPositionWithRangeState(line: number, column: number) {\n    if (\n      this.#rangeState.line > line ||\n      (this.#rangeState.line === line && this.#rangeState.column > column)\n    ) {\n      throw new Error(\n        `Attempting to encode range item that precedes the last encoded range item (${line}, ${column})`,\n      );\n    }\n  }\n\n  #encodeTag(tag: EncodedTag): this {\n    this.#currentItem += tag;\n    return this;\n  }\n\n  #encodeSigned(n: number): this {\n    this.#currentItem += encodeSigned(n);\n    return this;\n  }\n\n  #encodeUnsigned(n: number): this {\n    this.#currentItem += encodeUnsigned(n);\n    return this;\n  }\n\n  #finishItem(): void {\n    this.#encodedItems.push(this.#currentItem);\n    this.#currentItem = \"\";\n  }\n}\n"]}