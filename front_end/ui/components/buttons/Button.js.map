{"version":3,"file":"Button.js","sourceRoot":"","sources":["../../../../../../../front_end/ui/components/buttons/Button.ts"],"names":[],"mappings":"AAAA,sCAAsC;AACtC,yEAAyE;AACzE,6BAA6B;AAC7B,4DAA4D;AAE5D,OAAO,+BAA+B,CAAC;AAEvC,OAAO,KAAK,GAAG,MAAM,kBAAkB,CAAC;AACxC,OAAO,KAAK,aAAa,MAAM,wCAAwC,CAAC;AAExE,OAAO,YAAY,MAAM,iBAAiB,CAAC;AAE3C,MAAM,EAAC,IAAI,EAAE,UAAU,EAAE,EAAC,SAAS,EAAE,GAAG,EAAE,QAAQ,EAAC,EAAC,GAAG,GAAG,CAAC;AAiG3D,MAAM,OAAO,MAAO,SAAQ,WAAW;IACrC,MAAM,CAAC,cAAc,GAAG,IAAI,CAAC;IACpB,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,EAAC,IAAI,EAAE,MAAM,EAAE,cAAc,EAAE,IAAI,EAAC,CAAC,CAAC;IAClE,aAAa,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACzC,MAAM,GAAgB;QAC7B,IAAI,8BAAc;QAClB,OAAO,iCAAiB;QACxB,aAAa,EAAE,IAAI;QACnB,QAAQ,EAAE,KAAK;QACf,MAAM,EAAE,KAAK;QACb,OAAO,EAAE,KAAK;QACd,IAAI,EAAE,QAAQ;QACd,aAAa,EAAE,KAAK;KACrB,CAAC;IACF,UAAU,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;IACpC,QAAQ,GAAG,GAAG,CAAC,UAAU,CAAC,SAAS,EAAE,CAAC;IAEtC;QACE,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,cAAc,CAAC,CAAC;QAC1C,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;IAC3D,CAAC;IAEQ,SAAS,CAAC,IAAc;QAC/B,MAAM,IAAI,GAAG,KAAK,CAAC,SAAS,CAAC,IAAI,CAAW,CAAC;QAC7C,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QACxC,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,OAAO,IAAI,CAAC;IACd,CAAC;IAED;;;OAGG;IACH,IAAI,IAAI,CAAC,IAAgB;QACvB,IAAI,CAAC,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QACnC,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QACrC,IAAI,CAAC,MAAM,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC;QACnD,IAAI,CAAC,MAAM,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,KAAK,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC;QACzF,IAAI,CAAC,MAAM,CAAC,IAAI,+BAAe,CAAC;QAEhC,IAAI,MAAM,IAAI,IAAI,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC;YAChC,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QAC/B,CAAC;QACD,IAAI,IAAI,CAAC,eAAe,EAAE,CAAC;YACzB,IAAI,CAAC,MAAM,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC;QACrD,CAAC;QAED,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC1C,IAAI,CAAC,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC,SAAS,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;QAExE,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,QAAQ,CAAC;QAC5B,IAAI,MAAM,IAAI,IAAI,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC;YAChC,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QAC/B,CAAC;QACD,IAAI,CAAC,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QACnC,IAAI,CAAC,MAAM,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QACzC,IAAI,CAAC,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QACnC,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC9C,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QAC/B,IAAI,CAAC,MAAM,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;QAC7C,IAAI,CAAC,MAAM,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;QAC/C,IAAI,CAAC,MAAM,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC;QACvD,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,IAAI,QAAQ,CAAC,QAA0B;QACrC,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAChC,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,IAAI,eAAe,CAAC,eAAuB;QACzC,IAAI,CAAC,MAAM,CAAC,eAAe,GAAG,eAAe,CAAC;QAC9C,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,IAAI,UAAU,CAAC,UAAsB;QACnC,IAAI,CAAC,MAAM,CAAC,UAAU,GAAG,UAAU,CAAC;QACpC,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,IAAI,OAAO,CAAC,OAAgB;QAC1B,IAAI,CAAC,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC;QAC9B,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,IAAI,IAAI,CAAC,IAAU;QACjB,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,IAAI,eAAe,CAAC,KAAa;QAC/B,IAAI,CAAC,MAAM,CAAC,eAAe,GAAG,KAAK,CAAC;QACpC,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,IAAI,gBAAgB,CAAC,gBAAyB;QAC5C,IAAI,CAAC,MAAM,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;QAChD,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,IAAI,IAAI,CAAC,IAAgB;QACvB,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,IAAa,KAAK,CAAC,KAAa;QAC9B,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;QAC1B,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;IAC9B,CAAC;IAED,IAAI,QAAQ,CAAC,QAAiB;QAC5B,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAC;QACpC,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,IAAI,aAAa,CAAC,aAAsB;QACtC,IAAI,CAAC,MAAM,CAAC,aAAa,GAAG,aAAa,CAAC;QAC1C,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,IAAI,OAAO,CAAC,OAAgB;QAC1B,IAAI,CAAC,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC;QAC9B,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,IAAI,OAAO;QACT,OAAO,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IACtC,CAAC;IAED,IAAI,OAAO,CAAC,OAAgB;QAC1B,IAAI,CAAC,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC;QAC9B,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,IAAI,MAAM,CAAC,MAAe;QACxB,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC;QAC5B,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;IAC5B,CAAC;IAED,IAAI,OAAO,CAAC,OAAgB;QAC1B,IAAI,CAAC,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC;QAC9B,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,IAAI,YAAY;QACd,OAAO,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC;IAClC,CAAC;IAED,IAAI,YAAY,CAAC,YAA8B;QAC7C,IAAI,CAAC,MAAM,CAAC,YAAY,GAAG,YAAY,CAAC;QACxC,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,IAAI,aAAa,CAAC,aAAsB;QACtC,IAAI,CAAC,MAAM,CAAC,aAAa,GAAG,aAAa,CAAC;QAC1C,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,IAAI,iBAAiB,CAAC,iBAA0B;QAC9C,IAAI,CAAC,MAAM,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;QAClD,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,oBAAoB,CAAC,QAAiB;QACpC,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAChC,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,iBAAiB;QACf,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,QAAQ,CAAC,KAAY;QACnB,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;YACzB,KAAK,CAAC,eAAe,EAAE,CAAC;YACxB,KAAK,CAAC,cAAc,EAAE,CAAC;YACvB,OAAO;QACT,CAAC;QACD,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,KAAK,QAAQ,EAAE,CAAC;YAC/C,KAAK,CAAC,cAAc,EAAE,CAAC;YACvB,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,WAAW,CAAC,QAAQ,EAAE;gBAChD,SAAS,EAAE,IAAI;aAChB,CAAC,CAAC,CAAC;QACN,CAAC;QACD,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,KAAK,OAAO,EAAE,CAAC;YAC9C,KAAK,CAAC,cAAc,EAAE,CAAC;YACvB,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;QACpB,CAAC;QACD,IAAI,IAAI,CAAC,MAAM,CAAC,aAAa,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,4CAAwB,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;YACrG,IAAI,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC;QACtC,CAAC;IACH,CAAC;IAED,iBAAiB;QACf,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,oCAAoB,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,oDAA4B,CAAC;IACpG,CAAC;IAED,OAAO;QACL,MAAM,KAAK,GAAI,IAAI,CAAC,QAAQ,CAAC,KAAqC,EAAE,aAAa,EAAE,CAAC;QACpF,MAAM,OAAO,GAAG,CAAC,OAAO,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;QACxC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;YACzB,MAAM,IAAI,KAAK,CAAC,yCAAyC,CAAC,CAAC;QAC7D,CAAC;QACD,IAAI,IAAI,CAAC,iBAAiB,EAAE,EAAE,CAAC;YAC7B,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;gBAC1B,MAAM,IAAI,KAAK,CAAC,iCAAiC,CAAC,CAAC;YACrD,CAAC;YACD,IAAI,CAAC,OAAO,EAAE,CAAC;gBACb,MAAM,IAAI,KAAK,CAAC,yCAAyC,CAAC,CAAC;YAC7D,CAAC;QACH,CAAC;QACD,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,8BAAiB,EAAE,CAAC;YACzC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;gBAC1B,MAAM,IAAI,KAAK,CAAC,8BAA8B,CAAC,CAAC;YAClD,CAAC;YACD,IAAI,CAAC,OAAO,EAAE,CAAC;gBACb,MAAM,IAAI,KAAK,CAAC,sCAAsC,CAAC,CAAC;YAC1D,CAAC;QACH,CAAC;QACD,MAAM,OAAO,GAAG,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QAC9C,MAAM,OAAO,GAAG;YACd,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,OAAO,oCAAoB;YAChD,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,OAAO,gCAAkB;YAC5C,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,OAAO,sCAAqB;YAClD,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,OAAO,8BAAiB;YAC1C,OAAO,EAAE,IAAI,CAAC,iBAAiB,EAAE;YACjC,iBAAiB,EAAE,IAAI,CAAC,MAAM,CAAC,OAAO,oDAA4B;YAClE,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,OAAO,8BAAiB,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,4CAAwB;gBACrF,IAAI,CAAC,MAAM,CAAC,OAAO,8CAAyB;YAChD,gBAAgB,EAAE,IAAI,CAAC,MAAM,CAAC,UAAU,8CAAuB;YAC/D,YAAY,EAAE,IAAI,CAAC,MAAM,CAAC,UAAU,sCAAmB;YACvD,OAAO,EAAE,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC;YACrC,OAAO,EAAE,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC;YACrC,gBAAgB,EAAE,OAAO,IAAI,CAAC,OAAO;YACrC,WAAW,EAAE,OAAO,IAAI,OAAO;YAC/B,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,6BAAe;YACtC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,6BAAe;YACtC,oBAAoB,EAAE,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC;YAC3D,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM;YAC1B,OAAO,EAAE,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC;SAChD,CAAC;QACF,MAAM,cAAc,GAAG;YACrB,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,OAAO,oCAAoB;YAChD,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,OAAO,sCAAqB;YAClD,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ;YAC9B,OAAO,EAAE,IAAI;SACd,CAAC;QACF,MAAM,KAAK,GACP,IAAI,CAAC,MAAM,CAAC,YAAY,IAAI,aAAa,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,EAAC,KAAK,EAAE,IAAI,EAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;QAC9G,mBAAmB;QACnB,GAAG,CAAC,MAAM,CACR,IAAI,CAAA;iBACO,YAAY;wBACL,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;4BACxB,IAAI,CAAC,MAAM,CAAC,QAAQ;wBACxB,QAAQ,CAAC,OAAO,CAAC;+BACV,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC;6BAChC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC;wBAC3C,SAAS,CAAC,KAAK,CAAC;YAC5B,OAAO,CAAC,CAAC,CAAC,IAAI,CAAA;kCACQ,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;6BACxF;YACjB,CAAC,CAAC,EAAE;YACJ,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC,IAAI,CAAA;;+BAEb;YACnB,CAAC,CAAC,EAAE;YACJ,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAA,eAAe,QAAQ,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE;8BAC9D,IAAI,CAAC,OAAO,IAAI,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC;;OAEzD,EAAE,IAAI,CAAC,OAAO,EAAE,EAAC,IAAI,EAAE,IAAI,EAAC,CAAC,CAAC;QACjC,kBAAkB;IACpB,CAAC;IAED,8FAA8F;IAC9F,mDAAmD;IACnD,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;IACjC,CAAC;IACD,IAAI,KAAK,CAAC,KAAa;QACrB,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;IAC5B,CAAC;IAED,iEAAiE;IACjE,qEAAqE;IACrE,qDAAqD;IACrD,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;IAC9B,CAAC;IACD,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;IACnC,CAAC;IACD,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;IAC1B,CAAC;IACD,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC;IAClC,CAAC;IACD,IAAI,iBAAiB;QACnB,OAAO,IAAI,CAAC,UAAU,CAAC,iBAAiB,CAAC;IAC3C,CAAC;IACD,IAAI,YAAY;QACd,OAAO,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC;IACtC,CAAC;IACD,aAAa;QACX,OAAO,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE,CAAC;IACzC,CAAC;IACD,cAAc;QACZ,OAAO,IAAI,CAAC,UAAU,CAAC,cAAc,EAAE,CAAC;IAC1C,CAAC;;AAGH,cAAc,CAAC,MAAM,CAAC,iBAAiB,EAAE,MAAM,CAAC,CAAC","sourcesContent":["// Copyright 2021 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable @devtools/no-lit-render-outside-of-view */\n\nimport '../icon_button/icon_button.js';\n\nimport * as Lit from '../../lit/lit.js';\nimport * as VisualLogging from '../../visual_logging/visual_logging.js';\n\nimport buttonStyles from './button.css.js';\n\nconst {html, Directives: {ifDefined, ref, classMap}} = Lit;\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-button': Button;\n  }\n}\n\nexport const enum Variant {\n  PRIMARY = 'primary',\n  TONAL = 'tonal',\n  OUTLINED = 'outlined',\n  TEXT = 'text',\n  TOOLBAR = 'toolbar',\n  // Just like toolbar but has a style similar to a primary button.\n  PRIMARY_TOOLBAR = 'primary_toolbar',\n  ICON = 'icon',\n  ICON_TOGGLE = 'icon_toggle',\n  ADORNER_ICON = 'adorner_icon',\n}\n\nexport const enum Size {\n  MICRO = 'MICRO',\n  SMALL = 'SMALL',\n  REGULAR = 'REGULAR',\n}\n\nexport const enum ToggleType {\n  PRIMARY = 'primary-toggle',\n  RED = 'red-toggle',\n}\n\ntype ButtonType = 'button'|'submit'|'reset';\n\ninterface ButtonState {\n  variant: Variant;\n  size?: Size;\n  reducedFocusRing?: boolean;\n  disabled: boolean;\n  toggled?: boolean;\n  toggleOnClick?: boolean;\n  checked?: boolean;\n  active: boolean;\n  spinner?: boolean;\n  type: ButtonType;\n  value?: string;\n  title?: string;\n  iconName?: string;\n  toggledIconName?: string;\n  toggleType?: ToggleType;\n  jslogContext?: string;\n  longClickable?: boolean;\n  inverseColorTheme?: boolean;\n  /**\n   * Sets aria-label on the internal <button> element.\n   */\n  accessibleLabel?: string;\n}\n\ninterface CommonButtonData {\n  variant: Variant;\n  iconName?: string;\n  toggledIconName?: string;\n  toggleType?: ToggleType;\n  toggleOnClick?: boolean;\n  size?: Size;\n  reducedFocusRing?: boolean;\n  disabled?: boolean;\n  toggled?: boolean;\n  checked?: boolean;\n  active?: boolean;\n  spinner?: boolean;\n  type?: ButtonType;\n  value?: string;\n  title?: string;\n  jslogContext?: string;\n  longClickable?: boolean;\n  inverseColorTheme?: boolean;\n  /**\n   * Sets aria-label on the internal <button> element.\n   */\n  accessibleLabel?: string;\n}\n\nexport type ButtonData = CommonButtonData&(|{\n  variant: Variant.PRIMARY_TOOLBAR | Variant.TOOLBAR | Variant.ICON,\n  iconName: string,\n}|{\n  variant: Variant.PRIMARY | Variant.OUTLINED | Variant.TONAL | Variant.TEXT | Variant.ADORNER_ICON,\n}|{\n  variant: Variant.ICON_TOGGLE,\n  iconName: string,\n  toggledIconName: string,\n  toggleType: ToggleType,\n  toggled: boolean,\n});\n\nexport class Button extends HTMLElement {\n  static formAssociated = true;\n  readonly #shadow = this.attachShadow({mode: 'open', delegatesFocus: true});\n  readonly #boundOnClick = this.#onClick.bind(this);\n  readonly #props: ButtonState = {\n    size: Size.REGULAR,\n    variant: Variant.PRIMARY,\n    toggleOnClick: true,\n    disabled: false,\n    active: false,\n    spinner: false,\n    type: 'button',\n    longClickable: false,\n  };\n  #internals = this.attachInternals();\n  #slotRef = Lit.Directives.createRef();\n\n  constructor() {\n    super();\n    this.setAttribute('role', 'presentation');\n    this.addEventListener('click', this.#boundOnClick, true);\n  }\n\n  override cloneNode(deep?: boolean): Node {\n    const node = super.cloneNode(deep) as Button;\n    Object.assign(node.#props, this.#props);\n    node.#render();\n    return node;\n  }\n\n  /**\n   * Perfer using the .data= setter instead of setting the individual properties\n   * for increased type-safety.\n   */\n  set data(data: ButtonData) {\n    this.#props.variant = data.variant;\n    this.#props.iconName = data.iconName;\n    this.#props.toggledIconName = data.toggledIconName;\n    this.#props.toggleOnClick = data.toggleOnClick !== undefined ? data.toggleOnClick : true;\n    this.#props.size = Size.REGULAR;\n\n    if ('size' in data && data.size) {\n      this.#props.size = data.size;\n    }\n    if (data.accessibleLabel) {\n      this.#props.accessibleLabel = data.accessibleLabel;\n    }\n\n    this.#props.active = Boolean(data.active);\n    this.#props.spinner = Boolean('spinner' in data ? data.spinner : false);\n\n    this.#props.type = 'button';\n    if ('type' in data && data.type) {\n      this.#props.type = data.type;\n    }\n    this.#props.toggled = data.toggled;\n    this.#props.toggleType = data.toggleType;\n    this.#props.checked = data.checked;\n    this.#props.disabled = Boolean(data.disabled);\n    this.#props.title = data.title;\n    this.#props.jslogContext = data.jslogContext;\n    this.#props.longClickable = data.longClickable;\n    this.#props.inverseColorTheme = data.inverseColorTheme;\n    this.#render();\n  }\n\n  set iconName(iconName: string|undefined) {\n    this.#props.iconName = iconName;\n    this.#render();\n  }\n\n  set toggledIconName(toggledIconName: string) {\n    this.#props.toggledIconName = toggledIconName;\n    this.#render();\n  }\n\n  set toggleType(toggleType: ToggleType) {\n    this.#props.toggleType = toggleType;\n    this.#render();\n  }\n\n  set variant(variant: Variant) {\n    this.#props.variant = variant;\n    this.#render();\n  }\n\n  set size(size: Size) {\n    this.#props.size = size;\n    this.#render();\n  }\n\n  set accessibleLabel(label: string) {\n    this.#props.accessibleLabel = label;\n    this.#render();\n  }\n\n  set reducedFocusRing(reducedFocusRing: boolean) {\n    this.#props.reducedFocusRing = reducedFocusRing;\n    this.#render();\n  }\n\n  set type(type: ButtonType) {\n    this.#props.type = type;\n    this.#render();\n  }\n\n  override set title(title: string) {\n    this.#props.title = title;\n    this.#render();\n  }\n\n  get disabled(): boolean {\n    return this.#props.disabled;\n  }\n\n  set disabled(disabled: boolean) {\n    this.#setDisabledProperty(disabled);\n    this.#render();\n  }\n\n  set toggleOnClick(toggleOnClick: boolean) {\n    this.#props.toggleOnClick = toggleOnClick;\n    this.#render();\n  }\n\n  set toggled(toggled: boolean) {\n    this.#props.toggled = toggled;\n    this.#render();\n  }\n\n  get toggled(): boolean {\n    return Boolean(this.#props.toggled);\n  }\n\n  set checked(checked: boolean) {\n    this.#props.checked = checked;\n    this.#render();\n  }\n\n  set active(active: boolean) {\n    this.#props.active = active;\n    this.#render();\n  }\n\n  get active(): boolean {\n    return this.#props.active;\n  }\n\n  set spinner(spinner: boolean) {\n    this.#props.spinner = spinner;\n    this.#render();\n  }\n\n  get jslogContext(): string|undefined {\n    return this.#props.jslogContext;\n  }\n\n  set jslogContext(jslogContext: string|undefined) {\n    this.#props.jslogContext = jslogContext;\n    this.#render();\n  }\n\n  set longClickable(longClickable: boolean) {\n    this.#props.longClickable = longClickable;\n    this.#render();\n  }\n\n  set inverseColorTheme(inverseColorTheme: boolean) {\n    this.#props.inverseColorTheme = inverseColorTheme;\n    this.#render();\n  }\n\n  #setDisabledProperty(disabled: boolean): void {\n    this.#props.disabled = disabled;\n    this.#render();\n  }\n\n  connectedCallback(): void {\n    this.#render();\n  }\n\n  #onClick(event: Event): void {\n    if (this.#props.disabled) {\n      event.stopPropagation();\n      event.preventDefault();\n      return;\n    }\n    if (this.form && this.#props.type === 'submit') {\n      event.preventDefault();\n      this.form.dispatchEvent(new SubmitEvent('submit', {\n        submitter: this,\n      }));\n    }\n    if (this.form && this.#props.type === 'reset') {\n      event.preventDefault();\n      this.form.reset();\n    }\n    if (this.#props.toggleOnClick && this.#props.variant === Variant.ICON_TOGGLE && this.#props.iconName) {\n      this.toggled = !this.#props.toggled;\n    }\n  }\n\n  #isToolbarVariant(): boolean {\n    return this.#props.variant === Variant.TOOLBAR || this.#props.variant === Variant.PRIMARY_TOOLBAR;\n  }\n\n  #render(): void {\n    const nodes = (this.#slotRef.value as HTMLSlotElement | undefined)?.assignedNodes();\n    const isEmpty = !Boolean(nodes?.length);\n    if (!this.#props.variant) {\n      throw new Error('Button requires a variant to be defined');\n    }\n    if (this.#isToolbarVariant()) {\n      if (!this.#props.iconName) {\n        throw new Error('Toolbar button requires an icon');\n      }\n      if (!isEmpty) {\n        throw new Error('Toolbar button does not accept children');\n      }\n    }\n    if (this.#props.variant === Variant.ICON) {\n      if (!this.#props.iconName) {\n        throw new Error('Icon button requires an icon');\n      }\n      if (!isEmpty) {\n        throw new Error('Icon button does not accept children');\n      }\n    }\n    const hasIcon = Boolean(this.#props.iconName);\n    const classes = {\n      primary: this.#props.variant === Variant.PRIMARY,\n      tonal: this.#props.variant === Variant.TONAL,\n      outlined: this.#props.variant === Variant.OUTLINED,\n      text: this.#props.variant === Variant.TEXT,\n      toolbar: this.#isToolbarVariant(),\n      'primary-toolbar': this.#props.variant === Variant.PRIMARY_TOOLBAR,\n      icon: this.#props.variant === Variant.ICON || this.#props.variant === Variant.ICON_TOGGLE ||\n          this.#props.variant === Variant.ADORNER_ICON,\n      'primary-toggle': this.#props.toggleType === ToggleType.PRIMARY,\n      'red-toggle': this.#props.toggleType === ToggleType.RED,\n      toggled: Boolean(this.#props.toggled),\n      checked: Boolean(this.#props.checked),\n      'text-with-icon': hasIcon && !isEmpty,\n      'only-icon': hasIcon && isEmpty,\n      micro: this.#props.size === Size.MICRO,\n      small: this.#props.size === Size.SMALL,\n      'reduced-focus-ring': Boolean(this.#props.reducedFocusRing),\n      active: this.#props.active,\n      inverse: Boolean(this.#props.inverseColorTheme),\n    };\n    const spinnerClasses = {\n      primary: this.#props.variant === Variant.PRIMARY,\n      outlined: this.#props.variant === Variant.OUTLINED,\n      disabled: this.#props.disabled,\n      spinner: true,\n    };\n    const jslog =\n        this.#props.jslogContext && VisualLogging.action().track({click: true}).context(this.#props.jslogContext);\n    // clang-format off\n    Lit.render(\n      html`\n        <style>${buttonStyles}</style>\n        <button title=${ifDefined(this.#props.title)}\n                ?disabled=${this.#props.disabled}\n                class=${classMap(classes)}\n                aria-pressed=${ifDefined(this.#props.toggled)}\n                aria-label=${ifDefined(this.#props.accessibleLabel)}\n                jslog=${ifDefined(jslog)}>\n          ${hasIcon ? html`\n            <devtools-icon name=${ifDefined(this.#props.toggled ? this.#props.toggledIconName : this.#props.iconName)}>\n            </devtools-icon>`\n            : ''}\n          ${this.#props.longClickable ? html`\n              <devtools-icon name=\"triangle-bottom-right\" class=\"long-click\">\n              </devtools-icon>`\n            : ''}\n          ${this.#props.spinner ? html`<span class=${classMap(spinnerClasses)}></span>` : ''}\n          <slot @slotchange=${this.#render} ${ref(this.#slotRef)}></slot>\n        </button>\n      `, this.#shadow, {host: this});\n    // clang-format on\n  }\n\n  // Based on https://web.dev/more-capable-form-controls/ to make custom elements form-friendly.\n  // Form controls usually expose a \"value\" property.\n  get value(): string {\n    return this.#props.value || '';\n  }\n  set value(value: string) {\n    this.#props.value = value;\n  }\n\n  // The following properties and methods aren't strictly required,\n  // but browser-level form controls provide them. Providing them helps\n  // ensure consistency with browser-provided controls.\n  get form(): HTMLFormElement|null {\n    return this.#internals.form;\n  }\n  get name(): string|null {\n    return this.getAttribute('name');\n  }\n  get type(): ButtonType {\n    return this.#props.type;\n  }\n  get validity(): ValidityState {\n    return this.#internals.validity;\n  }\n  get validationMessage(): string {\n    return this.#internals.validationMessage;\n  }\n  get willValidate(): boolean {\n    return this.#internals.willValidate;\n  }\n  checkValidity(): boolean {\n    return this.#internals.checkValidity();\n  }\n  reportValidity(): boolean {\n    return this.#internals.reportValidity();\n  }\n}\n\ncustomElements.define('devtools-button', Button);\n"]}