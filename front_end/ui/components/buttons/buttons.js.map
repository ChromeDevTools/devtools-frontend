{
  "version": 3,
  "sources": ["../../../../../../../front_end/ui/components/buttons/Button.ts", "button.css.js", "../../../../../../../front_end/ui/components/buttons/FloatingButton.ts", "floatingButton.css.js", "textButton.css.js"],
  "sourcesContent": ["// Copyright 2021 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable @devtools/no-lit-render-outside-of-view */\n\nimport '../icon_button/icon_button.js';\n\nimport * as Lit from '../../lit/lit.js';\nimport * as VisualLogging from '../../visual_logging/visual_logging.js';\n\nimport buttonStyles from './button.css.js';\n\nconst {html, Directives: {ifDefined, ref, classMap}} = Lit;\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-button': Button;\n  }\n}\n\nexport const enum Variant {\n  PRIMARY = 'primary',\n  TONAL = 'tonal',\n  OUTLINED = 'outlined',\n  TEXT = 'text',\n  TOOLBAR = 'toolbar',\n  // Just like toolbar but has a style similar to a primary button.\n  PRIMARY_TOOLBAR = 'primary_toolbar',\n  ICON = 'icon',\n  ICON_TOGGLE = 'icon_toggle',\n  ADORNER_ICON = 'adorner_icon',\n}\n\nexport const enum Size {\n  MICRO = 'MICRO',\n  SMALL = 'SMALL',\n  REGULAR = 'REGULAR',\n}\n\nexport const enum ToggleType {\n  PRIMARY = 'primary-toggle',\n  RED = 'red-toggle',\n}\n\ntype ButtonType = 'button'|'submit'|'reset';\n\ninterface ButtonState {\n  variant: Variant;\n  size?: Size;\n  reducedFocusRing?: boolean;\n  disabled: boolean;\n  toggled?: boolean;\n  toggleOnClick?: boolean;\n  checked?: boolean;\n  active: boolean;\n  spinner?: boolean;\n  type: ButtonType;\n  value?: string;\n  title?: string;\n  iconName?: string;\n  toggledIconName?: string;\n  toggleType?: ToggleType;\n  jslogContext?: string;\n  longClickable?: boolean;\n  inverseColorTheme?: boolean;\n  /**\n   * Sets aria-label on the internal <button> element.\n   */\n  accessibleLabel?: string;\n}\n\ninterface CommonButtonData {\n  variant: Variant;\n  iconName?: string;\n  toggledIconName?: string;\n  toggleType?: ToggleType;\n  toggleOnClick?: boolean;\n  size?: Size;\n  reducedFocusRing?: boolean;\n  disabled?: boolean;\n  toggled?: boolean;\n  checked?: boolean;\n  active?: boolean;\n  spinner?: boolean;\n  type?: ButtonType;\n  value?: string;\n  title?: string;\n  jslogContext?: string;\n  longClickable?: boolean;\n  inverseColorTheme?: boolean;\n  /**\n   * Sets aria-label on the internal <button> element.\n   */\n  accessibleLabel?: string;\n}\n\nexport type ButtonData = CommonButtonData&(|{\n  variant: Variant.PRIMARY_TOOLBAR | Variant.TOOLBAR | Variant.ICON,\n  iconName: string,\n}|{\n  variant: Variant.PRIMARY | Variant.OUTLINED | Variant.TONAL | Variant.TEXT | Variant.ADORNER_ICON,\n}|{\n  variant: Variant.ICON_TOGGLE,\n  iconName: string,\n  toggledIconName: string,\n  toggleType: ToggleType,\n  toggled: boolean,\n});\n\nexport class Button extends HTMLElement {\n  static formAssociated = true;\n  readonly #shadow = this.attachShadow({mode: 'open', delegatesFocus: true});\n  readonly #boundOnClick = this.#onClick.bind(this);\n  readonly #props: ButtonState = {\n    size: Size.REGULAR,\n    variant: Variant.PRIMARY,\n    toggleOnClick: true,\n    disabled: false,\n    active: false,\n    spinner: false,\n    type: 'button',\n    longClickable: false,\n  };\n  #internals = this.attachInternals();\n  #slotRef = Lit.Directives.createRef();\n\n  constructor() {\n    super();\n    this.setAttribute('role', 'presentation');\n    this.addEventListener('click', this.#boundOnClick, true);\n  }\n\n  override cloneNode(deep?: boolean): Node {\n    const node = super.cloneNode(deep) as Button;\n    Object.assign(node.#props, this.#props);\n    node.#render();\n    return node;\n  }\n\n  /**\n   * Perfer using the .data= setter instead of setting the individual properties\n   * for increased type-safety.\n   */\n  set data(data: ButtonData) {\n    this.#props.variant = data.variant;\n    this.#props.iconName = data.iconName;\n    this.#props.toggledIconName = data.toggledIconName;\n    this.#props.toggleOnClick = data.toggleOnClick !== undefined ? data.toggleOnClick : true;\n    this.#props.size = Size.REGULAR;\n\n    if ('size' in data && data.size) {\n      this.#props.size = data.size;\n    }\n    if (data.accessibleLabel) {\n      this.#props.accessibleLabel = data.accessibleLabel;\n    }\n\n    this.#props.active = Boolean(data.active);\n    this.#props.spinner = Boolean('spinner' in data ? data.spinner : false);\n\n    this.#props.type = 'button';\n    if ('type' in data && data.type) {\n      this.#props.type = data.type;\n    }\n    this.#props.toggled = data.toggled;\n    this.#props.toggleType = data.toggleType;\n    this.#props.checked = data.checked;\n    this.#props.disabled = Boolean(data.disabled);\n    this.#props.title = data.title;\n    this.#props.jslogContext = data.jslogContext;\n    this.#props.longClickable = data.longClickable;\n    this.#props.inverseColorTheme = data.inverseColorTheme;\n    this.#render();\n  }\n\n  set iconName(iconName: string|undefined) {\n    this.#props.iconName = iconName;\n    this.#render();\n  }\n\n  set toggledIconName(toggledIconName: string) {\n    this.#props.toggledIconName = toggledIconName;\n    this.#render();\n  }\n\n  set toggleType(toggleType: ToggleType) {\n    this.#props.toggleType = toggleType;\n    this.#render();\n  }\n\n  set variant(variant: Variant) {\n    this.#props.variant = variant;\n    this.#render();\n  }\n\n  set size(size: Size) {\n    this.#props.size = size;\n    this.#render();\n  }\n\n  set accessibleLabel(label: string) {\n    this.#props.accessibleLabel = label;\n    this.#render();\n  }\n\n  set reducedFocusRing(reducedFocusRing: boolean) {\n    this.#props.reducedFocusRing = reducedFocusRing;\n    this.#render();\n  }\n\n  set type(type: ButtonType) {\n    this.#props.type = type;\n    this.#render();\n  }\n\n  override set title(title: string) {\n    this.#props.title = title;\n    this.#render();\n  }\n\n  get disabled(): boolean {\n    return this.#props.disabled;\n  }\n\n  set disabled(disabled: boolean) {\n    this.#setDisabledProperty(disabled);\n    this.#render();\n  }\n\n  set toggleOnClick(toggleOnClick: boolean) {\n    this.#props.toggleOnClick = toggleOnClick;\n    this.#render();\n  }\n\n  set toggled(toggled: boolean) {\n    this.#props.toggled = toggled;\n    this.#render();\n  }\n\n  get toggled(): boolean {\n    return Boolean(this.#props.toggled);\n  }\n\n  set checked(checked: boolean) {\n    this.#props.checked = checked;\n    this.#render();\n  }\n\n  set active(active: boolean) {\n    this.#props.active = active;\n    this.#render();\n  }\n\n  get active(): boolean {\n    return this.#props.active;\n  }\n\n  set spinner(spinner: boolean) {\n    this.#props.spinner = spinner;\n    this.#render();\n  }\n\n  get jslogContext(): string|undefined {\n    return this.#props.jslogContext;\n  }\n\n  set jslogContext(jslogContext: string|undefined) {\n    this.#props.jslogContext = jslogContext;\n    this.#render();\n  }\n\n  set longClickable(longClickable: boolean) {\n    this.#props.longClickable = longClickable;\n    this.#render();\n  }\n\n  set inverseColorTheme(inverseColorTheme: boolean) {\n    this.#props.inverseColorTheme = inverseColorTheme;\n    this.#render();\n  }\n\n  #setDisabledProperty(disabled: boolean): void {\n    this.#props.disabled = disabled;\n    this.#render();\n  }\n\n  connectedCallback(): void {\n    this.#render();\n  }\n\n  #onClick(event: Event): void {\n    if (this.#props.disabled) {\n      event.stopPropagation();\n      event.preventDefault();\n      return;\n    }\n    if (this.form && this.#props.type === 'submit') {\n      event.preventDefault();\n      this.form.dispatchEvent(new SubmitEvent('submit', {\n        submitter: this,\n      }));\n    }\n    if (this.form && this.#props.type === 'reset') {\n      event.preventDefault();\n      this.form.reset();\n    }\n    if (this.#props.toggleOnClick && this.#props.variant === Variant.ICON_TOGGLE && this.#props.iconName) {\n      this.toggled = !this.#props.toggled;\n    }\n  }\n\n  #isToolbarVariant(): boolean {\n    return this.#props.variant === Variant.TOOLBAR || this.#props.variant === Variant.PRIMARY_TOOLBAR;\n  }\n\n  #render(): void {\n    const nodes = (this.#slotRef.value as HTMLSlotElement | undefined)?.assignedNodes();\n    const isEmpty = !Boolean(nodes?.length);\n    if (!this.#props.variant) {\n      throw new Error('Button requires a variant to be defined');\n    }\n    if (this.#isToolbarVariant()) {\n      if (!this.#props.iconName) {\n        throw new Error('Toolbar button requires an icon');\n      }\n      if (!isEmpty) {\n        throw new Error('Toolbar button does not accept children');\n      }\n    }\n    if (this.#props.variant === Variant.ICON) {\n      if (!this.#props.iconName) {\n        throw new Error('Icon button requires an icon');\n      }\n      if (!isEmpty) {\n        throw new Error('Icon button does not accept children');\n      }\n    }\n    const hasIcon = Boolean(this.#props.iconName);\n    const classes = {\n      primary: this.#props.variant === Variant.PRIMARY,\n      tonal: this.#props.variant === Variant.TONAL,\n      outlined: this.#props.variant === Variant.OUTLINED,\n      text: this.#props.variant === Variant.TEXT,\n      toolbar: this.#isToolbarVariant(),\n      'primary-toolbar': this.#props.variant === Variant.PRIMARY_TOOLBAR,\n      icon: this.#props.variant === Variant.ICON || this.#props.variant === Variant.ICON_TOGGLE ||\n          this.#props.variant === Variant.ADORNER_ICON,\n      'primary-toggle': this.#props.toggleType === ToggleType.PRIMARY,\n      'red-toggle': this.#props.toggleType === ToggleType.RED,\n      toggled: Boolean(this.#props.toggled),\n      checked: Boolean(this.#props.checked),\n      'text-with-icon': hasIcon && !isEmpty,\n      'only-icon': hasIcon && isEmpty,\n      micro: this.#props.size === Size.MICRO,\n      small: this.#props.size === Size.SMALL,\n      'reduced-focus-ring': Boolean(this.#props.reducedFocusRing),\n      active: this.#props.active,\n      inverse: Boolean(this.#props.inverseColorTheme),\n    };\n    const spinnerClasses = {\n      primary: this.#props.variant === Variant.PRIMARY,\n      outlined: this.#props.variant === Variant.OUTLINED,\n      disabled: this.#props.disabled,\n      spinner: true,\n    };\n    const jslog =\n        this.#props.jslogContext && VisualLogging.action().track({click: true}).context(this.#props.jslogContext);\n    // clang-format off\n    Lit.render(\n      html`\n        <style>${buttonStyles}</style>\n        <button title=${ifDefined(this.#props.title)}\n                ?disabled=${this.#props.disabled}\n                class=${classMap(classes)}\n                aria-pressed=${ifDefined(this.#props.toggled)}\n                aria-label=${ifDefined(this.#props.accessibleLabel)}\n                jslog=${ifDefined(jslog)}>\n          ${hasIcon ? html`\n            <devtools-icon name=${ifDefined(this.#props.toggled ? this.#props.toggledIconName : this.#props.iconName)}>\n            </devtools-icon>`\n            : ''}\n          ${this.#props.longClickable ? html`\n              <devtools-icon name=\"triangle-bottom-right\" class=\"long-click\">\n              </devtools-icon>`\n            : ''}\n          ${this.#props.spinner ? html`<span class=${classMap(spinnerClasses)}></span>` : ''}\n          <slot @slotchange=${this.#render} ${ref(this.#slotRef)}></slot>\n        </button>\n      `, this.#shadow, {host: this});\n    // clang-format on\n  }\n\n  // Based on https://web.dev/more-capable-form-controls/ to make custom elements form-friendly.\n  // Form controls usually expose a \"value\" property.\n  get value(): string {\n    return this.#props.value || '';\n  }\n  set value(value: string) {\n    this.#props.value = value;\n  }\n\n  // The following properties and methods aren't strictly required,\n  // but browser-level form controls provide them. Providing them helps\n  // ensure consistency with browser-provided controls.\n  get form(): HTMLFormElement|null {\n    return this.#internals.form;\n  }\n  get name(): string|null {\n    return this.getAttribute('name');\n  }\n  get type(): ButtonType {\n    return this.#props.type;\n  }\n  get validity(): ValidityState {\n    return this.#internals.validity;\n  }\n  get validationMessage(): string {\n    return this.#internals.validationMessage;\n  }\n  get willValidate(): boolean {\n    return this.#internals.willValidate;\n  }\n  checkValidity(): boolean {\n    return this.#internals.checkValidity();\n  }\n  reportValidity(): boolean {\n    return this.#internals.reportValidity();\n  }\n}\n\ncustomElements.define('devtools-button', Button);\n", "// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2021 The Chromium Authors\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n/**\n* Design: http://go/cdt-design-button\n*/\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n/**\n* Reset default UA styles for focused elements.\n* The button styles below explicitly implement custom focus styles.\n*/\n*:focus,\n*:focus-visible,\n:host(:focus),\n:host(:focus-visible) {\n  outline: none;\n}\n\n:host {\n  display: inline-flex;\n  flex-direction: row;\n  align-items: center;\n  width: fit-content;\n}\n\nbutton {\n  --hover-layer-color: var(--sys-color-state-hover-on-subtle);\n  --active-layer-color: var(--sys-color-state-ripple-neutral-on-subtle);\n  --button-border-size: 1px;\n  --button-height: var(--sys-size-11);\n  --button-width: fit-content;\n\n  align-items: center;\n  background: transparent;\n  border-radius: var(--sys-shape-corner-full);\n  cursor: inherit;\n  display: inline-flex;\n  position: relative;\n  font-family: var(--default-font-family);\n  font-size: var(--sys-typescale-body4-size);\n  font-weight: var(--ref-typeface-weight-medium);\n  line-height: var(--sys-typescale-body4-line-height);\n  height: var(--button-height);\n  justify-content: center;\n  padding: 0 var(--sys-size-6);\n  white-space: nowrap;\n  width: var(--button-width);\n\n  &.primary-toggle {\n    --toggle-color: var(--sys-color-primary-bright);\n  }\n\n  &.red-toggle {\n    --toggle-color: var(--sys-color-error-bright);\n  }\n\n  &.inverse {\n    --hover-layer-color: var(--sys-color-state-hover-on-prominent);\n    --active-layer-color: var(--sys-color-state-ripple-neutral-on-prominent);\n  }\n\n  devtools-icon {\n    width: var(--icon-size);\n    height: var(--icon-size);\n  }\n\n  &.toolbar,\n  &.icon,\n  &.only-icon {\n    --button-height: 26px;\n    --button-width: 26px;\n    --icon-size: var(--sys-size-9);\n\n    padding: 0;\n    border: none;\n    overflow: hidden;\n\n    &.small {\n      --button-height: var(--sys-size-9);\n      --button-width: var(--sys-size-9);\n      --icon-size: var(--sys-size-8);\n    }\n\n    &.micro {\n      --button-height: var(--sys-size-8);\n      --button-width: var(--sys-size-8);\n      --icon-size: var(--sys-size-8);\n\n      border-radius: var(--sys-shape-corner-extra-small);\n    }\n\n    &.inverse devtools-icon {\n      color:  var(--sys-color-inverse-on-surface);\n    }\n\n    &.toggled devtools-icon {\n      color: var(--toggle-color); /* stylelint-disable-line plugin/use_theme_colors */\n\n      &.long-click {\n        color: var(--icon-default);\n      }\n    }\n\n    &.checked devtools-icon {\n      color: var(--toggle-color); /* stylelint-disable-line plugin/use_theme_colors */\n\n      &::after {\n        content: \"\";\n        width: var(--sys-size-3);\n        height: var(--sys-size-3);\n        border-radius: var(--sys-shape-corner-full);\n        background-color: var(--sys-color-primary-bright);\n        position: absolute;\n        top: var(--dot-toggle-top);\n        left: var(--dot-toggle-left);\n      }\n    }\n\n    devtools-icon.long-click {\n      position: absolute;\n      top: 2px;\n      left: 3px;\n    }\n\n    devtools-icon[name='cross-circle-filled'] {\n      color: var(--icon-default);\n    }\n  }\n\n  &.primary {\n    --hover-layer-color: var(--sys-color-state-hover-on-prominent);\n    --active-layer-color: var(--sys-color-state-ripple-primary);\n\n    border: var(--button-border-size) solid var(--sys-color-primary);\n    background: var(--sys-color-primary);\n    color: var(--sys-color-on-primary);\n\n    devtools-icon {\n      color: var(--sys-color-on-primary);\n    }\n  }\n\n  &.tonal {\n    border: none;\n    background: var(--sys-color-tonal-container);\n    color: var(--sys-color-on-tonal-container);\n\n    devtools-icon {\n      color: var(--sys-color-on-tonal-container);\n    }\n  }\n\n  &.primary-toolbar {\n    devtools-icon {\n      color: var(--icon-primary);\n    }\n  }\n\n  &.text {\n    border: none;\n    color: var(--sys-color-primary);\n\n    &.inverse {\n      color:  var(--sys-color-inverse-primary);\n    }\n\n    devtools-icon {\n      color: var(--icon-primary);\n    }\n  }\n\n  &.text-with-icon {\n    padding-left: var(--sys-size-4);\n\n    devtools-icon {\n      width: var(--sys-size-9);\n      height: var(--sys-size-9);\n      margin-right: var(--sys-size-2);\n    }\n  }\n\n  &.outlined {\n    border: var(--button-border-size) solid var(--sys-color-tonal-outline);\n    background: transparent;\n    color: var(--sys-color-primary);\n\n    &.micro {\n      --button-height: var(--sys-size-8);\n    }\n\n    devtools-icon {\n      color: var(--icon-primary);\n    }\n  }\n\n  &:disabled {\n    pointer-events: none;\n    color: var(--sys-color-state-disabled);\n\n    &.primary {\n      border: var(--button-border-size) solid var(--sys-color-state-disabled-container);\n      background: var(--sys-color-state-disabled-container);\n    }\n\n    &.tonal {\n      border: var(--button-border-size) solid var(--sys-color-state-disabled-container);\n      background: var(--sys-color-state-disabled-container);\n    }\n\n    &.outlined {\n      border: var(--button-border-size) solid var(--sys-color-state-disabled-container);\n    }\n\n    &.toolbar,\n    &.icon {\n      background: transparent;\n    }\n\n    devtools-icon {\n      color: var(--icon-disabled);\n    }\n  }\n\n  &:not(.icon, .toolbar).only-icon {\n    width: 100%;\n    padding: 0;\n\n    &.small {\n      width: var(--button-height);\n    }\n  }\n\n  &:focus-visible {\n    outline: var(--sys-size-2) solid var(--sys-color-state-focus-ring);\n    outline-offset: var(--sys-size-2);\n    z-index: 1;\n\n    &.toolbar,\n    &.icon,\n    &.reduced-focus-ring {\n      outline-offset: calc(-1 * var(--sys-size-2));\n    }\n\n    &.only-icon {\n      outline: none;\n\n      devtools-icon {\n        outline: var(--sys-size-2) solid var(--sys-color-state-focus-ring);\n        outline-offset: var(--sys-size-1);\n        border-radius: inherit;\n      }\n\n      &.micro devtools-icon {\n        outline-offset: calc(-1 * var(--sys-size-2));\n      }\n\n      &.small devtools-icon {\n        outline-offset: 0;\n      }\n    }\n  }\n\n  &:has(.spinner) {\n    padding-left: var(--sys-size-4);\n  }\n\n  &:hover::after {\n    content: \"\";\n    height: 100%;\n    width: 100%;\n    border-radius: inherit;\n    position: absolute;\n    top: 0;\n    left: 0;\n    background-color: var(--hover-layer-color); /* stylelint-disable-line plugin/use_theme_colors */\n\n    &.primary {\n      border: var(--button-border-size) solid color-mix(in srgb, var(--sys-color-primary), var(--sys-color-state-hover-on-prominent) 6%);\n    }\n\n    &.tonal {\n      background: color-mix(in srgb, var(--sys-color-tonal-container), var(--sys-color-state-hover-on-subtle));\n    }\n\n    &.toobar {\n      devtools-icon {\n        color: var(--icon-default-hover);\n      }\n    }\n  }\n\n  &:active::before,\n  &.active::before {\n    content: \"\";\n    height: 100%;\n    width: 100%;\n    border-radius: inherit;\n    position: absolute;\n    top: 0;\n    left: 0;\n    background-color: var(--active-layer-color); /* stylelint-disable-line plugin/use_theme_colors */\n\n    &.primary {\n      border: var(--button-border-size) solid color-mix(in srgb, var(--sys-color-primary), var(--sys-color-state-ripple-primary) 32%);\n    }\n\n    &.tonal {\n      background: color-mix(in srgb, var(--sys-color-tonal-container), var(--sys-color-state-ripple-primary) 50%);\n    }\n\n    &.toolbar {\n      devtools-icon {\n        color: var(--icon-toggled);\n      }\n    }\n  }\n}\n\n.spinner {\n  display: block;\n  width: 12px;\n  height: 12px;\n  border-radius: 6px;\n  border: 2px solid var(--sys-color-cdt-base-container);\n  animation: spinner-animation 1s linear infinite;\n  border-right-color: transparent;\n  margin-right: 4px;\n\n  &.outlined {\n    border: 2px solid var(--sys-color-primary);\n    border-right-color: transparent;\n  }\n\n  &.disabled {\n    border: 2px solid var(--sys-color-state-disabled);\n    border-right-color: transparent;\n  }\n}\n\n@keyframes spinner-animation {\n  from {\n    transform: rotate(0);\n  }\n\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n/*# sourceURL=${import.meta.resolve('./button.css')} */`;", "// Copyright 2024 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable @devtools/no-lit-render-outside-of-view */\nimport '../icon_button/icon_button.js';\n\nimport * as VisualLogging from '../../../ui/visual_logging/visual_logging.js';\nimport * as Lit from '../../lit/lit.js';\n\nimport floatingButtonStyles from './floatingButton.css.js';\n\nconst {html} = Lit;\n\n/**\n * A simple floating button component, primarily used to display the 'Ask AI!'\n * teaser when hovering over specific UI elements.\n *\n * Usage is simple:\n *\n * ```js\n * // Instantiate programmatically via the `create()` helper:\n * const button = Buttons.FloatingButton.create('smart-assistant', 'Ask AI!');\n *\n * // Use within a template:\n * html`\n * <devtools-floating-button icon-name=\"smart-assistant\"\n *                           title=\"Ask AI!\">\n * </devtools-floating-button>\n * `;\n * ```\n *\n * @property iconName - The `\"icon-name\"` attribute is reflected as a property.\n * @property jslogContext - The `\"jslogcontext\"` attribute is reflected as a property.\n * @attribute icon-name - The basename of the icon file (not including the `.svg`\n *                   suffix).\n * @attribute jslogcontext - The context for the `jslog` attribute. A `jslog`\n *                      attribute is generated automatically with the\n *                      provided context.\n */\nexport class FloatingButton extends HTMLElement {\n  static readonly observedAttributes = ['icon-name', 'jslogcontext'];\n\n  readonly #shadow = this.attachShadow({mode: 'open'});\n\n  constructor() {\n    super();\n    this.role = 'presentation';\n    this.#render();\n  }\n\n  /**\n   * Yields the value of the `\"icon-name\"` attribute of this `FloatingButton`\n   * (`null` in case there's no `\"icon-name\"` on this element).\n   */\n  get iconName(): string|null {\n    return this.getAttribute('icon-name');\n  }\n\n  /**\n   * Changes the value of the `\"icon-name\"` attribute of this `FloatingButton`.\n   * If you pass `null`, the `\"icon-name\"` attribute will be removed from this\n   * element.\n   *\n   * @param the new icon name or `null` to unset.\n   */\n  set iconName(iconName: string|null) {\n    if (iconName === null) {\n      this.removeAttribute('icon-name');\n    } else {\n      this.setAttribute('icon-name', iconName);\n    }\n  }\n\n  get jslogContext(): string|null {\n    return this.getAttribute('jslogcontext');\n  }\n\n  set jslogContext(jslogContext: string|null) {\n    if (jslogContext === null) {\n      this.removeAttribute('jslogcontext');\n    } else {\n      this.setAttribute('jslogcontext', jslogContext);\n    }\n  }\n\n  attributeChangedCallback(name: string, oldValue: string|null, newValue: string|null): void {\n    if (oldValue === newValue) {\n      return;\n    }\n    if (name === 'icon-name') {\n      this.#render();\n    }\n    if (name === 'jslogcontext') {\n      this.#updateJslog();\n    }\n  }\n\n  #render(): void {\n    // clang-format off\n    Lit.render(html`\n        <style>${floatingButtonStyles}</style>\n        <button><devtools-icon .name=${this.iconName}></devtools-icon></button>`,\n        this.#shadow, {host: this});\n    // clang-format on\n  }\n\n  #updateJslog(): void {\n    if (this.jslogContext) {\n      this.setAttribute('jslog', `${VisualLogging.action().track({click: true}).context(this.jslogContext)}`);\n    } else {\n      this.removeAttribute('jslog');\n    }\n  }\n}\n\n/**\n * Helper function to programmatically create a `FloatingButton` instance with a\n * given `iconName` and `title`.\n *\n * @param iconName the name of the icon to use\n * @param title the tooltip for the `FloatingButton`\n * @param jslogContext the context string for the `jslog` attribute\n * @returns the newly created `FloatingButton` instance.\n */\nexport const create = (iconName: string, title: string, jslogContext?: string): FloatingButton => {\n  const floatingButton = new FloatingButton();\n  floatingButton.iconName = iconName;\n  floatingButton.title = title;\n  if (jslogContext) {\n    floatingButton.jslogContext = jslogContext;\n  }\n  return floatingButton;\n};\n\ncustomElements.define('devtools-floating-button', FloatingButton);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-floating-button': FloatingButton;\n  }\n}\n", "// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2024 The Chromium Authors\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n:host {\n  width: fit-content;\n  height: fit-content;\n}\n\nbutton {\n  padding: 0;\n  margin: 0;\n  background: 0;\n  border: 0;\n  position: relative;\n  width: var(--sys-size-8);\n  height: var(--sys-size-8);\n  box-shadow: var(--sys-elevation-level2);\n  border-radius: var(--sys-shape-corner-extra-small);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  :host-context(:not(.theme-with-dark-background)) & {\n    background-color: var(--sys-color-tonal-container);\n  }\n\n  :host-context(.theme-with-dark-background) & {\n    background-color: var(--sys-color-primary);\n  }\n\n  & > devtools-icon {\n    width: var(--sys-size-7);\n    height: var(--sys-size-7);\n  }\n\n  :host-context(:not(.theme-with-dark-background)) & > devtools-icon {\n    color: var(--sys-color-on-tonal-container);\n  }\n\n  :host-context(.theme-with-dark-background) & > devtools-icon {\n    color: var(--sys-color-on-primary);\n  }\n\n  &:not(:disabled):hover::after,\n  &:not(:disabled):hover::before {\n    content: \"\";\n    height: 100%;\n    width: 100%;\n    border-radius: inherit;\n    position: absolute;\n    top: 0;\n    left: 0;\n  }\n\n  &:not(:disabled):hover::after {\n    background-color: var(--sys-color-state-hover-on-subtle);\n  }\n\n  &:not(:disabled):active::before {\n    background-color: var(--sys-color-state-ripple-neutral-on-subtle);\n  }\n\n  &:focus-visible {\n    outline: 2px solid var(--sys-color-state-focus-ring);\n    outline-offset: 2px;\n  }\n\n  &:disabled > devtools-icon {\n    color: var(--sys-color-state-disabled);\n  }\n}\n\n/*# sourceURL=${import.meta.resolve('./floatingButton.css')} */`;", "// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2014 The Chromium Authors\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.text-button {\n  margin: 2px;\n  height: 24px;\n  font-size: 12px;\n  font-family: var(--default-font-family);\n  border: 1px solid var(--sys-color-tonal-outline);\n  border-radius: 12px;\n  padding: 0 12px;\n  font-weight: 500;\n  color: var(--sys-color-primary);\n  background-color: var(--sys-color-cdt-base-container);\n  flex: none;\n  white-space: nowrap;\n}\n\n.text-button:disabled {\n  opacity: 38%;\n}\n\n.text-button:not(:disabled):focus,\n.text-button:not(:disabled):hover,\n.text-button:not(:disabled):active {\n  background-color: var(--sys-color-state-hover-on-subtle);\n}\n\n.text-button:not(:disabled, .primary-button):focus-visible {\n  outline: 2px solid var(--sys-color-state-focus-ring);\n  color: var(--sys-color-on-primary);\n  background-color: var(--sys-color-cdt-base-container);\n}\n\n.text-button:not(:disabled, .running):focus,\n.text-button:not(:disabled, .running):hover,\n.text-button:not(:disabled, .running):active {\n  color: var(--sys-color-primary);\n}\n\n.text-button.link-style,\n.text-button.link-style:hover,\n.text-button.link-style:active {\n  background: none;\n  border: none;\n  outline: none;\n  border-radius: 2px;\n  margin: 0;\n  padding: 0 !important; /* stylelint-disable-line declaration-no-important */\n  font: inherit;\n  cursor: pointer;\n  height: unset;\n}\n\n.text-button.primary-button,\n.text-button.primary-button:not(:disabled):focus {\n  background-color: var(--sys-color-primary);\n  border: none;\n  color: var(--sys-color-on-primary);\n}\n\n.text-button.primary-button:not(:disabled):active {\n  background-color: color-mix(in srgb, var(--sys-color-primary), var(--sys-color-state-ripple-primary) 32%);\n  color: var(--sys-color-on-primary);\n}\n\n.text-button.primary-button:not(:disabled):hover {\n  background-color: color-mix(in srgb, var(--sys-color-primary), var(--sys-color-state-hover-on-prominent) 6%);\n  color: var(--sys-color-on-primary);\n}\n\n.text-button.primary-button:not(:disabled):focus-visible {\n  background-color: var(--sys-color-primary);\n  outline-offset: 2px;\n  outline: 2px solid var(--sys-color-state-focus-ring);\n  color: var(--sys-color-on-primary);\n}\n\n@media (forced-colors: active) {\n  .text-button {\n    background-color: ButtonFace;\n    color: ButtonText;\n    border-color: ButtonText;\n  }\n\n  .text-button:disabled {\n    forced-color-adjust: none;\n    opacity: 100%;\n    background: ButtonFace;\n    border-color: GrayText;\n    color: GrayText;\n  }\n\n  .text-button:not(:disabled):focus-visible {\n    forced-color-adjust: none;\n    background-color: ButtonFace;\n    color: Highlight !important; /* stylelint-disable-line declaration-no-important */\n    border-color: Highlight;\n    outline: 2px solid ButtonText;\n    box-shadow: var(--legacy-focus-ring-active-shadow);\n  }\n\n  .text-button:not(:disabled):hover,\n  .text-button:not(:disabled):active {\n    forced-color-adjust: none;\n    background-color: Highlight;\n    color: HighlightText !important; /* stylelint-disable-line declaration-no-important */\n    box-shadow: var(--sys-color-primary);\n  }\n\n  .text-button.primary-button {\n    forced-color-adjust: none;\n    background-color: Highlight;\n    color: HighlightText;\n    border: 1px solid Highlight;\n  }\n\n  .text-button.primary-button:not(:disabled):focus-visible {\n    background-color: Highlight;\n    color: HighlightText !important; /* stylelint-disable-line declaration-no-important */\n    border-color: ButtonText;\n  }\n\n  .text-button.primary-button:not(:disabled):hover,\n  .text-button.primary-button:not(:disabled):active {\n    background-color: HighlightText;\n    color: Highlight !important; /* stylelint-disable-line declaration-no-important */\n    border-color: Highlight;\n  }\n}\n\n/*# sourceURL=${import.meta.resolve('./textButton.css')} */`;"],
  "mappings": "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",
  "names": ["VisualLogging", "Lit", "html", "Lit"]
}
