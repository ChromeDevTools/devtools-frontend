{"version":3,"file":"HighlightElement.js","sourceRoot":"","sources":["../../../../../../../front_end/ui/components/highlighting/HighlightElement.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as TextUtils from '../../../models/text_utils/text_utils.js';\n\nimport {HighlightManager} from './HighlightManager.js';\n\nexport class HighlightElement extends HTMLElement {\n  static readonly observedAttributes = ['ranges', 'current-range'];\n  #ranges: TextUtils.TextRange.SourceRange[] = [];\n  #currentRange: TextUtils.TextRange.SourceRange|undefined;\n\n  attributeChangedCallback(name: string, oldValue: string|null, newValue: string|null): void {\n    if (oldValue === newValue) {\n      return;\n    }\n    switch (name) {\n      case 'ranges':\n        this.#ranges = parseRanges(newValue);\n        break;\n      case 'current-range':\n        this.#currentRange = parseRanges(newValue)[0];\n        break;\n    }\n    HighlightManager.instance().set(this, this.#ranges, this.#currentRange);\n  }\n}\n\nfunction parseRanges(value: string|null): TextUtils.TextRange.SourceRange[] {\n  if (!value) {\n    return [];\n  }\n  const ranges = value.split(' ')\n                     .filter(rangeString => {\n                       const parts = rangeString.split(',');\n                       // A valid range string must have exactly two parts.\n                       if (parts.length !== 2) {\n                         return false;\n                       }\n                       // Both parts must be convertible to valid numbers.\n                       const num1 = Number(parts[0]);\n                       const num2 = Number(parts[1]);\n                       return !isNaN(num1) && !isNaN(num2);\n                     })\n                     .map(rangeString => {\n                       const parts = rangeString.split(',').map(part => Number(part));\n                       return new TextUtils.TextRange.SourceRange(parts[0], parts[1]);\n                     });\n  return sortAndMergeRanges(ranges);\n}\n\nfunction sortAndMergeRanges(ranges: TextUtils.TextRange.SourceRange[]): TextUtils.TextRange.SourceRange[] {\n  // Sort by start position.\n  ranges.sort((a, b) => a.offset - b.offset);\n\n  if (ranges.length === 0) {\n    return [];\n  }\n\n  // Merge overlapping ranges.\n  const merged = [ranges[0]];\n  for (let i = 1; i < ranges.length; i++) {\n    const last = merged[merged.length - 1];\n    const current = ranges[i];\n    if (current.offset <= last.offset + last.length) {\n      const newEnd = Math.max(last.offset + last.length, current.offset + current.length);\n      const newLength = newEnd - last.offset;\n      merged[merged.length - 1] = new TextUtils.TextRange.SourceRange(last.offset, newLength);\n    } else {\n      merged.push(current);\n    }\n  }\n  return merged;\n}\n\ncustomElements.define('devtools-highlight', HighlightElement);\n"]}