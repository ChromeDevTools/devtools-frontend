{"version":3,"file":"HighlightManager.js","sourceRoot":"","sources":["../../../../../../../front_end/ui/components/highlighting/HighlightManager.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2023 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as TextUtils from '../../../models/text_utils/text_utils.js';\n\nexport class RangeWalker {\n  #offset = 0;\n  readonly #treeWalker: TreeWalker;\n  #eof: boolean;\n\n  constructor(readonly root: Node) {\n    const nodeFilter = {\n      acceptNode(node: Node): number {\n        if (['STYLE', 'SCRIPT'].includes(node.parentNode?.nodeName ?? '')) {\n          return NodeFilter.FILTER_REJECT;\n        }\n        return NodeFilter.FILTER_ACCEPT;\n      },\n    };\n    this.#treeWalker = document.createTreeWalker(root, NodeFilter.SHOW_TEXT, nodeFilter);\n    this.#eof = !this.#treeWalker.firstChild();\n  }\n\n  #next(): boolean {\n    this.#offset += this.#treeWalker.currentNode.textContent?.length ?? 0;\n    this.#eof = !this.#treeWalker.nextNode();\n    return !this.#eof;\n  }\n\n  #goToPosition(offset: number): Node|null {\n    if (offset < this.#offset || this.#eof) {\n      return null;\n    }\n    // `>` here implies that, except for the first range, start offsets are left-leaning, i.e., when the offset falls\n    // between two text nodes, the preceding one is returned. This doesn't matter for Range semantics, but isn't\n    // intuitive wrt. the usual understanding of intervals. Making start offsets right-leaning but end offsets\n    // left-leaning would incur an unwarranted amount of complexity.\n    while (offset > this.#offset + (this.#treeWalker.currentNode.textContent?.length ?? 0)) {\n      if (!this.#next()) {\n        return null;\n      }\n    }\n    return this.#treeWalker.currentNode;\n  }\n\n  nextRange(start: number, length: number): Range|null {\n    if (length <= 0 || this.#eof) {\n      return null;\n    }\n\n    const startNode = this.#goToPosition(start);\n    if (!startNode) {\n      return null;\n    }\n    const offsetInStartNode = start - this.#offset;\n    const endNode = this.#goToPosition(start + length);\n    if (!endNode) {\n      return null;\n    }\n    const offsetInEndNode = start + length - this.#offset;\n\n    const range = new Range();\n    range.setStart(startNode, offsetInStartNode);\n    range.setEnd(endNode, offsetInEndNode);\n    return range;\n  }\n\n  goToTextNode(node: Text): void {\n    while (this.#treeWalker.currentNode !== node) {\n      if (!this.#next()) {\n        return;\n      }\n    }\n  }\n\n  get offset(): number {\n    return this.#offset;\n  }\n}\n\nexport const HIGHLIGHT_REGISTRY = 'highlighted-search-result';\nexport const CURRENT_HIGHLIGHT_REGISTRY = 'current-search-result';\n\ninterface HighlightState {\n  activeRanges: Range[];\n  ranges: TextUtils.TextRange.SourceRange[];\n  currentRange: TextUtils.TextRange.SourceRange|undefined;\n}\n\nlet highlightManagerInstance: HighlightManager;\nexport class HighlightManager {\n  #highlights = new Highlight();\n  #currentHighlights = new Highlight();\n  #stateByNode = new WeakMap<Node, HighlightState>();\n\n  constructor() {\n    CSS.highlights.set(HIGHLIGHT_REGISTRY, this.#highlights);\n    CSS.highlights.set(CURRENT_HIGHLIGHT_REGISTRY, this.#currentHighlights);\n  }\n\n  static instance(opts: {\n    forceNew: boolean|null,\n  }|undefined = {forceNew: null}): HighlightManager {\n    const {forceNew} = opts;\n    if (!highlightManagerInstance || forceNew) {\n      highlightManagerInstance = new HighlightManager();\n    }\n\n    return highlightManagerInstance;\n  }\n\n  addHighlights(ranges: Range[]): void {\n    ranges.forEach(this.addHighlight.bind(this));\n  }\n\n  removeHighlights(ranges: Range[]): void {\n    ranges.forEach(this.removeHighlight.bind(this));\n  }\n\n  addCurrentHighlight(range: Range): void {\n    this.#currentHighlights.add(range);\n  }\n\n  addCurrentHighlights(ranges: Range[]): void {\n    ranges.forEach(this.addCurrentHighlight.bind(this));\n  }\n\n  addHighlight(range: Range): void {\n    this.#highlights.add(range);\n  }\n\n  removeHighlight(range: Range): void {\n    this.#highlights.delete(range);\n    this.#currentHighlights.delete(range);\n  }\n\n  highlightOrderedTextRanges(root: Node, sourceRanges: TextUtils.TextRange.SourceRange[], isCurrent = false): Range[] {\n    const rangeWalker = new RangeWalker(root);\n    const ranges = sourceRanges.map(range => rangeWalker.nextRange(range.offset, range.length))\n                       .filter((r): r is Range => r !== null && !r.collapsed);\n    if (isCurrent) {\n      this.addCurrentHighlights(ranges);\n    } else {\n      this.addHighlights(ranges);\n    }\n    return ranges;\n  }\n\n  #getOrCreateState(node: Node): HighlightState {\n    let state = this.#stateByNode.get(node);\n    if (!state) {\n      state = {\n        activeRanges: [],\n        ranges: [],\n        currentRange: undefined,\n      };\n      this.#stateByNode.set(node, state);\n    }\n    return state;\n  }\n\n  apply(node: Node): void {\n    const state = this.#getOrCreateState(node);\n    this.removeHighlights(state.activeRanges);\n    state.activeRanges = this.highlightOrderedTextRanges(node, state.ranges);\n    if (state.currentRange) {\n      state.activeRanges.push(...this.highlightOrderedTextRanges(node, [state.currentRange], /* isCurrent=*/ true));\n    }\n  }\n\n  set(element: Node, ranges: TextUtils.TextRange.SourceRange[],\n      currentRange: TextUtils.TextRange.SourceRange|undefined): void {\n    const state = this.#getOrCreateState(element);\n    state.ranges = ranges;\n    state.currentRange = currentRange;\n    this.apply(element);\n  }\n}\n"]}