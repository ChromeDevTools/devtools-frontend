{"version":3,"file":"FileSourceIcon.js","sourceRoot":"","sources":["../../../../../../../front_end/ui/components/icon_button/FileSourceIcon.ts"],"names":[],"mappings":"AAAA,sCAAsC;AACtC,yEAAyE;AACzE,6BAA6B;AAC7B,4DAA4D;AAE5D,OAAO,iBAAiB,CAAC;AAEzB,OAAO,EAAC,UAAU,EAAE,IAAI,EAAE,MAAM,EAAC,MAAM,kBAAkB,CAAC;AAE1D,OAAO,oBAAoB,MAAM,yBAAyB,CAAC;AAE3D,MAAM,EAAC,QAAQ,EAAC,GAAG,UAAU,CAAC;AAS9B,MAAM,OAAO,cAAe,SAAQ,WAAW;IACpC,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC,CAAC;IAErD,SAAS,CAAU;IACnB,YAAY,CAAU;IACtB,YAAY,CAAW;IACvB,YAAY,CAAW;IAEvB,IAAI,IAAI,CAAC,IAAwB;QAC/B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC;QACrC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC;QACrC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC;QACrC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC/B,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,IAAI,IAAI;QACN,OAAO;YACL,QAAQ,EAAE,IAAI,CAAC,SAAS;YACxB,WAAW,EAAE,IAAI,CAAC,YAAY;YAC9B,WAAW,EAAE,IAAI,CAAC,YAAY;YAC9B,WAAW,EAAE,IAAI,CAAC,YAAY;SAC/B,CAAC;IACJ,CAAC;IAED,iBAAiB;QACf,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,OAAO;QACL,MAAM,WAAW,GAAG,QAAQ,CAAC;YAC3B,GAAG,EAAE,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC;YAC/B,MAAM,EAAE,OAAO,CAAC,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,YAAY,CAAC;YACvD,KAAK,EAAE,OAAO,CAAC,IAAI,CAAC,YAAY,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC;YACvD,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,EAAC,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,IAAI,CAAC,YAAY,EAAC,CAAC,CAAC,CAAC,IAAI,CAAC;SACzE,CAAC,CAAC;QAEH,mBAAmB;QACnB,MAAM,CAAC,IAAI,CAAA;eACA,oBAAoB;6BACN,IAAI,CAAC,SAAS,IAAI,IAAI,UAAU,WAAW,mBAAmB,EACrF,IAAI,CAAC,OAAO,EAAE,EAAC,IAAI,EAAE,IAAI,EAAC,CAAC,CAAC;QAC9B,kBAAkB;IACpB,CAAC;CACF;AAED,cAAc,CAAC,MAAM,CAAC,2BAA2B,EAAE,cAAc,CAAC,CAAC","sourcesContent":["// Copyright 2024 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable @devtools/no-lit-render-outside-of-view */\n\nimport './IconButton.js';\n\nimport {Directives, html, render} from '../../lit/lit.js';\n\nimport fileSourceIconStyles from './fileSourceIcon.css.js';\n\nconst {classMap} = Directives;\n\nexport interface FileSourceIconData {\n  iconType?: string;\n  contentType?: string;\n  hasDotBadge?: boolean;\n  isDotPurple?: boolean;\n}\n\nexport class FileSourceIcon extends HTMLElement {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n\n  #iconType?: string;\n  #contentType?: string;\n  #hasDotBadge?: boolean;\n  #isDotPurple?: boolean;\n\n  set data(data: FileSourceIconData) {\n    this.#contentType = data.contentType;\n    this.#hasDotBadge = data.hasDotBadge;\n    this.#isDotPurple = data.isDotPurple;\n    this.#iconType = data.iconType;\n    this.#render();\n  }\n\n  get data(): FileSourceIconData {\n    return {\n      iconType: this.#iconType,\n      contentType: this.#contentType,\n      hasDotBadge: this.#hasDotBadge,\n      isDotPurple: this.#isDotPurple,\n    };\n  }\n\n  connectedCallback(): void {\n    this.#render();\n  }\n\n  #render(): void {\n    const iconClasses = classMap({\n      dot: Boolean(this.#hasDotBadge),\n      purple: Boolean(this.#hasDotBadge && this.#isDotPurple),\n      green: Boolean(this.#hasDotBadge && !this.#isDotPurple),\n      ...(this.#contentType ? {[this.#contentType]: this.#contentType} : null)\n    });\n\n    // clang-format off\n    render(html`\n      <style>${fileSourceIconStyles}</style>\n      <devtools-icon .name=${this.#iconType ?? null} class=${iconClasses}></devtools-icon>`,\n      this.#shadow, {host: this});\n    // clang-format on\n  }\n}\n\ncustomElements.define('devtools-file-source-icon', FileSourceIcon);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-file-source-icon': FileSourceIcon;\n  }\n}\n"]}