{"version":3,"file":"SettingDeprecationWarning.js","sourceRoot":"","sources":["../../../../../../../front_end/ui/components/settings/SettingDeprecationWarning.ts"],"names":[],"mappings":"AAAA,sCAAsC;AACtC,yEAAyE;AACzE,6BAA6B;AAC7B,4DAA4D;AAE5D,OAAO,+BAA+B,CAAC;AAEvC,OAAO,KAAK,MAAM,MAAM,gCAAgC,CAAC;AACzD,OAAO,KAAK,GAAG,MAAM,kBAAkB,CAAC;AAExC,OAAO,+BAA+B,MAAM,oCAAoC,CAAC;AAEjF,MAAM,EAAC,IAAI,EAAC,GAAG,GAAG,CAAC;AAEnB,MAAM,OAAO,yBAA0B,SAAQ,WAAW;IAC/C,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC,CAAC;IAErD,IAAI,IAAI,CAAC,IAAiC;QACxC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IACrB,CAAC;IAED,OAAO,CAAC,EAAC,QAAQ,EAAE,OAAO,EAAE,UAAU,EAA8B;QAClE,MAAM,OAAO,GAAG,EAAC,SAAS,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,EAAC,CAAC;QACjD,IAAI,OAA+B,CAAC;QACpC,IAAI,QAAQ,IAAI,UAAU,EAAE,CAAC;YAC3B,OAAO,CAAC,SAAS,GAAG,IAAI,CAAC;YACzB,OAAO,GAAG,GAAG,EAAE;gBACb,KAAK,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;YAC1C,CAAC,CAAC;QACJ,CAAC;QAED,GAAG,CAAC,MAAM,CACN,IAAI,CAAA;iBACK,+BAA+B;+BACjB,GAAG,CAAC,UAAU,CAAC,QAAQ,CAAC,OAAO,CAAC,sBAAsB,OAAO,WAChF,OAAO,mBAAmB,EAC9B,IAAI,CAAC,OAAO,EAAE,EAAC,IAAI,EAAE,IAAI,EAAC,CAAC,CAAC;IAClC,CAAC;CACF;AAED,cAAc,CAAC,MAAM,CAAC,sCAAsC,EAAE,yBAAyB,CAAC,CAAC","sourcesContent":["// Copyright 2022 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable @devtools/no-lit-render-outside-of-view */\n\nimport '../icon_button/icon_button.js';\n\nimport * as Common from '../../../core/common/common.js';\nimport * as Lit from '../../lit/lit.js';\n\nimport settingDeprecationWarningStyles from './settingDeprecationWarning.css.js';\n\nconst {html} = Lit;\n\nexport class SettingDeprecationWarning extends HTMLElement {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n\n  set data(data: Common.Settings.Deprecation) {\n    this.#render(data);\n  }\n\n  #render({disabled, warning, experiment}: Common.Settings.Deprecation): void {\n    const classes = {clickable: false, medium: true};\n    let onclick: (() => void)|undefined;\n    if (disabled && experiment) {\n      classes.clickable = true;\n      onclick = () => {\n        void Common.Revealer.reveal(experiment);\n      };\n    }\n\n    Lit.render(\n        html`\n        <style>${settingDeprecationWarningStyles}</style>\n        <devtools-icon class=${Lit.Directives.classMap(classes)} name=\"info\" title=${warning} @click=${\n            onclick}></devtools-icon>`,\n        this.#shadow, {host: this});\n  }\n}\n\ncustomElements.define('devtools-setting-deprecation-warning', SettingDeprecationWarning);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-setting-deprecation-warning': SettingDeprecationWarning;\n  }\n}\n"]}