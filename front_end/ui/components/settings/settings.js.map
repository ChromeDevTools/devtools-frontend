{
  "version": 3,
  "sources": ["../../../../../../../front_end/ui/components/settings/SettingCheckbox.ts", "../../../../../../../front_end/ui/components/settings/SettingDeprecationWarning.ts", "settingDeprecationWarning.css.js", "settingCheckbox.css.js"],
  "sourcesContent": ["// Copyright 2021 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable @devtools/no-lit-render-outside-of-view */\n\nimport './SettingDeprecationWarning.js';\n\nimport type * as Common from '../../../core/common/common.js';\nimport * as Host from '../../../core/host/host.js';\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as Lit from '../../lit/lit.js';\nimport * as VisualLogging from '../../visual_logging/visual_logging.js';\nimport * as Buttons from '../buttons/buttons.js';\nimport * as Input from '../input/input.js';\n\nimport settingCheckboxStyles from './settingCheckbox.css.js';\n\nconst {html, Directives: {ifDefined}} = Lit;\n\nconst UIStrings = {\n  /**\n   * @description Text that is usually a hyperlink to more documentation\n   */\n  learnMore: 'Learn more',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('ui/components/settings/SettingCheckbox.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport interface SettingCheckboxData {\n  setting: Common.Settings.Setting<boolean>;\n  textOverride?: string;\n}\n\n/**\n * A simple checkbox that is backed by a boolean setting.\n */\nexport class SettingCheckbox extends HTMLElement {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n\n  #setting?: Common.Settings.Setting<boolean>;\n  #changeListenerDescriptor?: Common.EventTarget.EventDescriptor;\n  #textOverride?: string;\n\n  set data(data: SettingCheckboxData) {\n    if (this.#changeListenerDescriptor && this.#setting) {\n      this.#setting.removeChangeListener(this.#changeListenerDescriptor.listener);\n    }\n\n    this.#setting = data.setting;\n    this.#textOverride = data.textOverride;\n\n    this.#changeListenerDescriptor = this.#setting.addChangeListener(() => {\n      this.#render();\n    });\n    this.#render();\n  }\n\n  icon(): Lit.TemplateResult|undefined {\n    if (!this.#setting) {\n      return undefined;\n    }\n\n    if (this.#setting.deprecation) {\n      return html`<devtools-setting-deprecation-warning .data=${\n          this.#setting.deprecation}></devtools-setting-deprecation-warning>`;\n    }\n\n    const learnMore = this.#setting.learnMore();\n    if (learnMore?.url) {\n      const url = learnMore.url;\n      const data: Buttons.Button.ButtonData = {\n        iconName: 'help',\n        variant: Buttons.Button.Variant.ICON,\n        size: Buttons.Button.Size.SMALL,\n        jslogContext: `${this.#setting.name}-documentation`,\n        title: i18nString(UIStrings.learnMore),\n      };\n      const handleClick = (event: MouseEvent): void => {\n        Host.InspectorFrontendHost.InspectorFrontendHostInstance.openInNewTab(url);\n        event.consume();\n      };\n      return html`<devtools-button\n                    class=learn-more\n                    @click=${handleClick}\n                    .data=${data}></devtools-button>`;\n    }\n\n    return undefined;\n  }\n\n  get checked(): boolean {\n    if (!this.#setting || this.#setting.disabledReasons().length > 0) {\n      return false;\n    }\n\n    return this.#setting.get();\n  }\n\n  #render(): void {\n    if (!this.#setting) {\n      throw new Error('No \"Setting\" object provided for rendering');\n    }\n\n    const icon = this.icon();\n    const title = `${this.#setting.learnMore() ? this.#setting.learnMore()?.tooltip() : ''}`;\n    const disabledReasons = this.#setting.disabledReasons();\n    const reason = disabledReasons.length ?\n        html`\n      <devtools-button class=\"disabled-reason\" .iconName=${'info'} .variant=${Buttons.Button.Variant.ICON} .size=${\n            Buttons.Button.Size.SMALL} title=${ifDefined(disabledReasons.join('\\n'))} @click=${\n            onclick}></devtools-button>\n    ` :\n        Lit.nothing;\n    Lit.render(\n        html`\n      <style>${Input.checkboxStyles}</style>\n      <style>${settingCheckboxStyles}</style>\n      <p>\n        <label title=${title}>\n          <input\n            type=\"checkbox\"\n            .checked=${this.checked}\n            ?disabled=${this.#setting.disabled()}\n            @change=${this.#checkboxChanged}\n            jslog=${VisualLogging.toggle().track({click: true}).context(this.#setting.name)}\n            aria-label=${this.#setting.title()}\n          />\n          ${this.#textOverride || this.#setting.title()}${reason}\n        </label>\n        ${icon}\n      </p>`,\n        this.#shadow, {host: this});\n  }\n\n  #checkboxChanged(e: Event): void {\n    this.#setting?.set((e.target as HTMLInputElement).checked);\n    this.dispatchEvent(new CustomEvent('change', {\n      bubbles: true,\n      composed: false,\n    }));\n  }\n}\n\ncustomElements.define('setting-checkbox', SettingCheckbox);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'setting-checkbox': SettingCheckbox;\n  }\n}\n", "// Copyright 2022 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable @devtools/no-lit-render-outside-of-view */\n\nimport '../icon_button/icon_button.js';\n\nimport * as Common from '../../../core/common/common.js';\nimport * as Lit from '../../lit/lit.js';\n\nimport settingDeprecationWarningStyles from './settingDeprecationWarning.css.js';\n\nconst {html} = Lit;\n\nexport class SettingDeprecationWarning extends HTMLElement {\n  readonly #shadow = this.attachShadow({mode: 'open'});\n\n  set data(data: Common.Settings.Deprecation) {\n    this.#render(data);\n  }\n\n  #render({disabled, warning, experiment}: Common.Settings.Deprecation): void {\n    const classes = {clickable: false, medium: true};\n    let onclick: (() => void)|undefined;\n    if (disabled && experiment) {\n      classes.clickable = true;\n      onclick = () => {\n        void Common.Revealer.reveal(experiment);\n      };\n    }\n\n    Lit.render(\n        html`\n        <style>${settingDeprecationWarningStyles}</style>\n        <devtools-icon class=${Lit.Directives.classMap(classes)} name=\"info\" title=${warning} @click=${\n            onclick}></devtools-icon>`,\n        this.#shadow, {host: this});\n  }\n}\n\ncustomElements.define('devtools-setting-deprecation-warning', SettingDeprecationWarning);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-setting-deprecation-warning': SettingDeprecationWarning;\n  }\n}\n", "// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2022 The Chromium Authors\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.clickable {\n  cursor: pointer;\n}\n\ndevtools-icon {\n  vertical-align: text-bottom;\n  padding-left: 2px;\n}\n\n/*# sourceURL=${import.meta.resolve('./settingDeprecationWarning.css')} */`;", "// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2021 The Chromium Authors\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n:host {\n  padding: 0;\n  margin: 0;\n}\n\ninput {\n  height: 12px;\n  width: 12px;\n  min-height: 12px;\n  min-width: 12px;\n  margin: 6px;\n}\n\nlabel {\n  display: inline-flex;\n  align-items: center;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\np {\n  margin: 6px 0;\n}\n\n.disabled-reason {\n  box-sizing: border-box;\n  margin-left: var(--sys-size-2);\n  width: var(--sys-size-9);\n  height: var(--sys-size-9);\n}\n\n.learn-more {\n  cursor: pointer;\n  position: relative;\n  margin-left: var(--sys-size-2);\n  top: var(--sys-size-2);\n  width: var(--sys-size-9);\n  height: var(--sys-size-9);\n}\n\n/*# sourceURL=${import.meta.resolve('./settingCheckbox.css')} */`;"],
  "mappings": "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",
  "names": ["onclick", "Lit", "html", "Lit"]
}
