{"version":3,"file":"Spinner.js","sourceRoot":"","sources":["../../../../../../../front_end/ui/components/spinners/Spinner.ts"],"names":[],"mappings":"AAAA,sCAAsC;AACtC,yEAAyE;AACzE,6BAA6B;AAC7B,4DAA4D;AAE5D,OAAO,EAAC,IAAI,EAAE,MAAM,EAAC,MAAM,kBAAkB,CAAC;AAE9C,OAAO,aAAa,MAAM,kBAAkB,CAAC;AAM7C,MAAM,OAAO,OAAQ,SAAQ,WAAW;IACtC,MAAM,CAAU,kBAAkB,GAAG,CAAC,QAAQ,CAAC,CAAC;IACvC,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC,CAAC;IAErD,YAAY,KAAyB;QACnC,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,MAAM,GAAG,KAAK,EAAE,MAAM,IAAI,IAAI,CAAC;IACtC,CAAC;IAED,wBAAwB,CAAC,IAAY,EAAE,QAAqB,EAAE,QAAqB;QACjF,IAAI,QAAQ,KAAK,QAAQ,EAAE,CAAC;YAC1B,OAAO;QACT,CAAC;QACD,IAAI,IAAI,KAAK,QAAQ,EAAE,CAAC;YACtB,IAAI,CAAC,OAAO,EAAE,CAAC;QACjB,CAAC;IACH,CAAC;IAED;;OAEG;IACH,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;IACrC,CAAC;IAED;;OAEG;IACH,IAAI,MAAM,CAAC,MAAe;QACxB,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;IACzC,CAAC;IAED,iBAAiB;QACf,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,OAAO;QACL,qEAAqE;QACrE,yCAAyC;QACzC,6GAA6G;QAC7G,mEAAmE;QACnE,mBAAmB;QACnB,MAAM,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAA;;;;;;;;;;;;;;;KAejC,CAAC,CAAC,CAAC,IAAI,CAAA;;;;;;KAMP,CAAC;QACF,MAAM,CAAC,IAAI,CAAA;;UAEL,aAAa;;QAEf,OAAO;KACV,EAAE,IAAI,CAAC,OAAO,EAAE,EAAC,IAAI,EAAE,IAAI,EAAC,CAAC,CAAC;QAC/B,kBAAkB;IACpB,CAAC;;AAGH,cAAc,CAAC,MAAM,CAAC,kBAAkB,EAAE,OAAO,CAAC,CAAC","sourcesContent":["// Copyright 2024 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable @devtools/no-lit-render-outside-of-view */\n\nimport {html, render} from '../../lit/lit.js';\n\nimport spinnerStyles from './spinner.css.js';\n\nexport interface SpinnerProperties {\n  active: boolean;\n}\n\nexport class Spinner extends HTMLElement {\n  static readonly observedAttributes = ['active'];\n  readonly #shadow = this.attachShadow({mode: 'open'});\n\n  constructor(props?: SpinnerProperties) {\n    super();\n    this.active = props?.active ?? true;\n  }\n\n  attributeChangedCallback(name: string, oldValue: string|null, newValue: string|null): void {\n    if (oldValue === newValue) {\n      return;\n    }\n    if (name === 'active') {\n      this.#render();\n    }\n  }\n\n  /**\n   * Returns whether the spinner is active or not.\n   */\n  get active(): boolean {\n    return this.hasAttribute('active');\n  }\n\n  /**\n   * Sets the `\"active\"` attribute for the spinner.\n   */\n  set active(active: boolean) {\n    this.toggleAttribute('active', active);\n  }\n\n  connectedCallback(): void {\n    this.#render();\n  }\n\n  #render(): void {\n    // The radius of the circles are set to 2.75rem as per implementation\n    // of indeterminate progress indicator in\n    // https://github.com/material-components/material-components-web/tree/master/packages/mdc-circular-progress.\n    // Changing the value of the radius will cause errors in animation.\n    // clang-format off\n    const content = this.active ? html`\n      <div class=\"indeterminate-spinner\">\n        <div class=\"left-circle\">\n          <svg viewBox=\"0 0 100 100\">\n            <circle cx=\"50%\" cy=\"50%\" r=\"2.75rem\"></circle></svg>\n        </div>\n        <div class=\"center-circle\">\n          <svg viewBox=\"0 0 100 100\">\n            <circle cx=\"50%\" cy=\"50%\" r=\"2.75rem\"></circle></svg>\n        </div>\n        <div class=\"right-circle\">\n          <svg viewBox=\"0 0 100 100\">\n            <circle cx=\"50%\" cy=\"50%\" r=\"2.75rem\"></circle></svg>\n        </div>\n      </div>\n    ` : html`\n      <div class=\"inactive-spinner\">\n        <svg viewBox=\"0 0 100 100\">\n          <circle cx=\"50%\" cy=\"50%\" r=\"2.75rem\"></circle>\n        </svg>\n      </div>\n    `;\n    render(html`\n      <style>\n        ${spinnerStyles}\n      </style>\n      ${content}\n    `, this.#shadow, {host: this});\n    // clang-format on\n  }\n}\n\ncustomElements.define('devtools-spinner', Spinner);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-spinner': Spinner;\n  }\n}\n"]}