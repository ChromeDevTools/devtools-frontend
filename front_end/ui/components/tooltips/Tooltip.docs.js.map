{"version":3,"file":"Tooltip.docs.js","sourceRoot":"","sources":["../../../../../../../front_end/ui/components/tooltips/Tooltip.docs.ts"],"names":[],"mappings":"AAAA,sCAAsC;AACtC,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,GAAG,MAAM,kBAAkB,CAAC;AAExC,OAAO,EAAC,OAAO,EAAC,MAAM,cAAc,CAAC;AAErC,MAAM,EAAC,IAAI,EAAC,GAAG,GAAG,CAAC;AAEnB,MAAM,CAAC,KAAK,UAAU,MAAM,CAAC,SAAsB;IACjD,GAAG,CAAC,MAAM,CACN,IAAI,CAAA;;;;;;;;;;;;;;;;;;;;;;iBAsBO,GAAG,EAAE,CAAC,QAAQ,CAAC,cAAc,CAAC,WAAW,CAAC,EAAE,MAAM,EAAE;;;;;;;;GAQlE,EACG,SAAS,CAAC,CAAC;IAEf,MAAM,MAAM,GAAG,SAAS,CAAC,aAAa,CAAC,SAAS,CAAgB,CAAC;IACjE,MAAM,mBAAmB,GAAG,IAAI,OAAO,CAAC,EAAC,EAAE,EAAE,aAAa,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAC,CAAC,CAAC;IACtF,mBAAmB,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;IAC3C,MAAM,CAAC,qBAAqB,CAAC,UAAU,EAAE,mBAAmB,CAAC,CAAC;IAE9D,0FAA0F;IAC1F,SAAS,CAAC,gBAAgB,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,SAAS,CAAC,MAAqB,CAAC,CAAC,CAAC;IAC9F,SAAS,SAAS,CAAC,OAAyB;QAC1C,IAAI,CAAC,OAAO,EAAE,CAAC;YACb,OAAO;QACT,CAAC;QACD,OAAO,CAAC,gBAAgB,CAAC,WAAW,EAAE,KAAK,CAAC,EAAE;YAC5C,MAAM,MAAM,GAAG,KAAK,CAAC,MAAqB,CAAC;YAC3C,MAAM,OAAO,GAAG,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC,qBAAqB,EAAE,CAAC,IAAI,GAAG,SAAS,CAAC,qBAAqB,EAAE,CAAC,IAAI,CAAC;YAC7G,MAAM,OAAO,GAAG,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC,qBAAqB,EAAE,CAAC,GAAG,GAAG,SAAS,CAAC,qBAAqB,EAAE,CAAC,GAAG,CAAC;YAE3G,SAAS,WAAW,CAAC,KAAiB;gBACpC,MAAM,CAAC,KAAK,CAAC,IAAI,GAAG,GAAG,KAAK,CAAC,OAAO,GAAG,OAAO,IAAI,CAAC;gBACnD,MAAM,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,KAAK,CAAC,OAAO,GAAG,OAAO,IAAI,CAAC;YACpD,CAAC;YAED,SAAS,SAAS;gBAChB,QAAQ,CAAC,mBAAmB,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC;gBACvD,QAAQ,CAAC,mBAAmB,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;YACrD,CAAC;YAED,QAAQ,CAAC,gBAAgB,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC;YACpD,QAAQ,CAAC,gBAAgB,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;QAClD,CAAC,CAAC,CAAC;IACL,CAAC;AACH,CAAC","sourcesContent":["// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Lit from '../../lit/lit.js';\n\nimport {Tooltip} from './Tooltip.js';\n\nconst {html} = Lit;\n\nexport async function render(container: HTMLElement) {\n  Lit.render(\n      html`\n    <div style=\"position: relative; z-index: 0;\">\n      <button aria-describedby=\"simple-tooltip\" style=\"position: absolute; left: 16px; top: 16px;\">\n        Simple\n      </button>\n      <devtools-tooltip id=\"simple-tooltip\">Simple content</devtools-tooltip>\n    </div>\n    <div style=\"position: relative; z-index: 0;\">\n      <span\n        aria-details=\"rich-tooltip\"\n        style=\"position: absolute; left: 16px; top: 116px; border: 1px solid black;\"\n      >\n        Non-button click trigger\n      </span>\n      <devtools-tooltip id=\"rich-tooltip\" variant=\"rich\" use-click>\n        <p>Rich tooltip</p>\n        <button>Action</button>\n      </devtools-tooltip>\n    </div>\n    <div style=\"position: relative; z-index: 0;\">\n      <button\n        id=\"removable\"\n        @click=${() => document.getElementById('removable')?.remove()}\n        class=\"anchor\"\n        aria-details=\"programatic\"\n        style=\"position: absolute; left: 16px; top: 216px;\"\n      >\n        Click to remove anchor\n      </button>\n    </div>\n  `,\n      container);\n\n  const anchor = container.querySelector('.anchor') as HTMLElement;\n  const programmaticTooltip = new Tooltip({id: 'programatic', variant: 'rich', anchor});\n  programmaticTooltip.append('Text content');\n  anchor.insertAdjacentElement('afterend', programmaticTooltip);\n\n  // Make the buttons draggable, so that we can experiment with the position of the tooltip.\n  container.querySelectorAll('button,span').forEach(anchor => draggable(anchor as HTMLElement));\n  function draggable(element: HTMLElement|null): void {\n    if (!element) {\n      return;\n    }\n    element.addEventListener('mousedown', event => {\n      const target = event.target as HTMLElement;\n      const offsetX = event.clientX - target.getBoundingClientRect().left + container.getBoundingClientRect().left;\n      const offsetY = event.clientY - target.getBoundingClientRect().top + container.getBoundingClientRect().top;\n\n      function onMouseMove(event: MouseEvent) {\n        target.style.left = `${event.clientX - offsetX}px`;\n        target.style.top = `${event.clientY - offsetY}px`;\n      }\n\n      function onMouseUp() {\n        document.removeEventListener('mousemove', onMouseMove);\n        document.removeEventListener('mouseup', onMouseUp);\n      }\n\n      document.addEventListener('mousemove', onMouseMove);\n      document.addEventListener('mouseup', onMouseUp);\n    });\n  }\n}\n"]}