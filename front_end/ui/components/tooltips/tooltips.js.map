{
  "version": 3,
  "sources": ["../../../../../../../front_end/ui/components/tooltips/Tooltip.ts", "tooltip.css.js"],
  "sourcesContent": ["// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable @devtools/no-lit-render-outside-of-view */\n\nimport * as UI from '../../legacy/legacy.js';\nimport * as Lit from '../../lit/lit.js';\nimport * as VisualLogging from '../../visual_logging/visual_logging.js';\n\nimport tooltipStyles from './tooltip.css.js';\n\nconst {html} = Lit;\n\ninterface ProposedRect {\n  left: number;\n  top: number;\n}\n\ninterface PositioningParams {\n  anchorRect: DOMRect;\n  currentPopoverRect: DOMRect;\n}\n\nenum PositionOption {\n  BOTTOM_SPAN_RIGHT = 'bottom-span-right',\n  BOTTOM_SPAN_LEFT = 'bottom-span-left',\n  TOP_SPAN_RIGHT = 'top-span-right',\n  TOP_SPAN_LEFT = 'top-span-left',\n}\n\nconst positioningUtils = {\n  bottomSpanRight: ({anchorRect}: PositioningParams): ProposedRect => {\n    return {\n      left: anchorRect.left,\n      top: anchorRect.bottom,\n    };\n  },\n  bottomSpanLeft: ({anchorRect, currentPopoverRect}: PositioningParams): ProposedRect => {\n    return {\n      left: anchorRect.right - currentPopoverRect.width,\n      top: anchorRect.bottom,\n    };\n  },\n  bottomCentered: ({anchorRect, currentPopoverRect}: PositioningParams): ProposedRect => {\n    return {\n      left: anchorRect.left + anchorRect.width / 2 - currentPopoverRect.width / 2,\n      top: anchorRect.bottom,\n    };\n  },\n  topCentered: ({anchorRect, currentPopoverRect}: PositioningParams): ProposedRect => {\n    return {\n      left: anchorRect.left + anchorRect.width / 2 - currentPopoverRect.width / 2,\n      top: anchorRect.top - currentPopoverRect.height,\n    };\n  },\n  topSpanRight: ({anchorRect, currentPopoverRect}: PositioningParams): ProposedRect => {\n    return {\n      left: anchorRect.left,\n      top: anchorRect.top - currentPopoverRect.height,\n    };\n  },\n  topSpanLeft: ({anchorRect, currentPopoverRect}: PositioningParams): ProposedRect => {\n    return {\n      left: anchorRect.right - currentPopoverRect.width,\n      top: anchorRect.top - currentPopoverRect.height,\n    };\n  },\n  // Adjusts proposed rect so that the resulting popover is always inside the inspector view bounds.\n  insetAdjustedRect:\n      ({inspectorViewRect, anchorRect, currentPopoverRect, proposedRect}:\n           {inspectorViewRect: DOMRect, anchorRect: DOMRect, currentPopoverRect: DOMRect, proposedRect: ProposedRect}):\n          ProposedRect => {\n            if (inspectorViewRect.left > proposedRect.left) {\n              proposedRect.left = inspectorViewRect.left;\n            }\n\n            if (inspectorViewRect.right < proposedRect.left + currentPopoverRect.width) {\n              proposedRect.left = inspectorViewRect.right - currentPopoverRect.width;\n            }\n\n            if (proposedRect.top + currentPopoverRect.height > inspectorViewRect.bottom) {\n              proposedRect.top = anchorRect.top - currentPopoverRect.height;\n            }\n            return proposedRect;\n          },\n  isInBounds: ({inspectorViewRect, currentPopoverRect, proposedRect}:\n                   {inspectorViewRect: DOMRect, currentPopoverRect: DOMRect, proposedRect: ProposedRect}): boolean => {\n    return inspectorViewRect.left < proposedRect.left &&\n        proposedRect.left + currentPopoverRect.width < inspectorViewRect.right &&\n        inspectorViewRect.top < proposedRect.top &&\n        proposedRect.top + currentPopoverRect.height < inspectorViewRect.bottom;\n  },\n  isSameRect: (rect1: DOMRect|null, rect2: DOMRect|null): boolean => {\n    if (!rect1 || !rect2) {\n      return false;\n    }\n\n    return rect1 && rect1.left === rect2.left && rect1.top === rect2.top && rect1.width === rect2.width &&\n        rect1.height === rect2.height;\n  }\n};\n\nconst proposedRectForRichTooltip = ({inspectorViewRect, anchorRect, currentPopoverRect, preferredPositions}: {\n  inspectorViewRect: DOMRect,\n  anchorRect: DOMRect,\n  currentPopoverRect: DOMRect,\n  preferredPositions: PositionOption[],\n}): ProposedRect => {\n  // The default positioning order is `BOTTOM_SPAN_RIGHT`, `BOTTOM_SPAN_LEFT`, `TOP_SPAN_RIGHT`\n  // and `TOP_SPAN_LEFT`. If `preferredPositions` are given, those are tried first, before\n  // continuing with the remaining options in default order. Duplicate entries are removed.\n  const uniqueOrder = [\n    ...new Set([\n      ...preferredPositions,\n      ...Object.values(PositionOption),\n    ]),\n  ];\n\n  // Tries the positioning options in the order given by `uniqueOrder`.\n  // If none of them work out, we default to showing the tooltip in the bottom right and adjust\n  // its insets so that the tooltip is inside the inspector view bounds.\n  for (const positionOption of uniqueOrder) {\n    let proposedRect;\n    switch (positionOption) {\n      case PositionOption.BOTTOM_SPAN_RIGHT:\n        proposedRect = positioningUtils.bottomSpanRight({anchorRect, currentPopoverRect});\n        break;\n      case PositionOption.BOTTOM_SPAN_LEFT:\n        proposedRect = positioningUtils.bottomSpanLeft({anchorRect, currentPopoverRect});\n        break;\n      case PositionOption.TOP_SPAN_RIGHT:\n        proposedRect = positioningUtils.topSpanRight({anchorRect, currentPopoverRect});\n        break;\n      case PositionOption.TOP_SPAN_LEFT:\n        proposedRect = positioningUtils.topSpanLeft({anchorRect, currentPopoverRect});\n    }\n    if (positioningUtils.isInBounds({inspectorViewRect, currentPopoverRect, proposedRect})) {\n      return proposedRect;\n    }\n  }\n\n  // If none of the options work above, we position to bottom right\n  // and adjust the insets so that it does not go out of bounds.\n  const proposedRect = positioningUtils.bottomSpanRight({anchorRect, currentPopoverRect});\n  return positioningUtils.insetAdjustedRect({anchorRect, currentPopoverRect, inspectorViewRect, proposedRect});\n};\n\nconst proposedRectForSimpleTooltip =\n    ({inspectorViewRect, anchorRect, currentPopoverRect}:\n         {inspectorViewRect: DOMRect, anchorRect: DOMRect, currentPopoverRect: DOMRect}): ProposedRect => {\n      // Default options are bottom centered & top centered.\n      let proposedRect = positioningUtils.bottomCentered({anchorRect, currentPopoverRect});\n      if (positioningUtils.isInBounds({inspectorViewRect, currentPopoverRect, proposedRect})) {\n        return proposedRect;\n      }\n\n      proposedRect = positioningUtils.topCentered({anchorRect, currentPopoverRect});\n      if (positioningUtils.isInBounds({inspectorViewRect, currentPopoverRect, proposedRect})) {\n        return proposedRect;\n      }\n\n      // The default options did not work out, so position it to bottom center\n      // and adjust the insets to make sure that it does not go out of bounds.\n      proposedRect = positioningUtils.bottomCentered({anchorRect, currentPopoverRect});\n      return positioningUtils.insetAdjustedRect({anchorRect, currentPopoverRect, inspectorViewRect, proposedRect});\n    };\n\nexport type TooltipVariant = 'simple'|'rich';\nexport type PaddingMode = 'small'|'large';\nexport type TooltipTrigger = 'hover'|'click'|'both';\n\nexport interface TooltipProperties {\n  id: string;\n  variant?: TooltipVariant;\n  padding?: PaddingMode;\n  anchor?: HTMLElement;\n  jslogContext?: string;\n  trigger?: TooltipTrigger;\n}\n\n/**\n * @property useHotkey - reflects the `\"use-hotkey\"` attribute.\n * @property id - reflects the `\"id\"` attribute.\n * @property hoverDelay - reflects the `\"hover-delay\"` attribute.\n * @property variant - reflects the `\"variant\"` attribute.\n * @property padding - reflects the `\"padding\"` attribute.\n * @property trigger - reflects the `\"trigger\"` attribute.\n * @property verticalDistanceIncrease - reflects the `\"vertical-distance-increase\"` attribute.\n * @property preferSpanLeft - reflects the `\"prefer-span-left\"` attribute.\n * @attribute id - Id of the tooltip. Used for searching an anchor element with aria-describedby.\n * @attribute hover-delay - Hover length in ms before the tooltip is shown and hidden.\n * @attribute variant - Variant of the tooltip, `\"simple\"` for strings only, inverted background,\n *                 `\"rich\"` for interactive content, background according to theme's surface.\n * @attribute padding - Which padding to use, defaults to `\"small\"`. Use `\"large\"` for richer content.\n * @attribute trigger - Specifies which action triggers the tooltip. `\"hover\"` is the default. `\"click\"` means the\n *                 tooltip will be shown on click instead of hover. `\"both\"` means both hover and click trigger the\n *                 tooltip.\n * @attribute vertical-distance-increase - The tooltip is moved vertically this many pixels further away from its anchor.\n * @attribute prefer-span-left - If present, the tooltip's preferred position is `\"span-left\"` (The right\n *                 side of the tooltip and its anchor are aligned. The tooltip expands to the left from\n *                 there.). Applies to rich tooltips only.\n * @attribute use-hotkey - If present, the tooltip will be shown on hover but not when receiving focus.\n *                  Requires a hotkey to open when fosed (Alt-down). When `\"trigger\"` is present\n *                  as well, `\"trigger\"` takes precedence.\n */\nexport class Tooltip extends HTMLElement {\n  static readonly observedAttributes = ['id', 'variant', 'jslogcontext', 'trigger'];\n  static lastOpenedTooltipId: string|null = null;\n\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  #anchor: HTMLElement|null = null;\n  #timeout: number|null = null;\n  #closing = false;\n  #anchorObserver: MutationObserver|null = null;\n  #openedViaHotkey = false;\n  #previousAnchorRect: DOMRect|null = null;\n  #previousPopoverRect: DOMRect|null = null;\n\n  get openedViaHotkey(): boolean {\n    return this.#openedViaHotkey;\n  }\n\n  get open(): boolean {\n    return this.matches(':popover-open');\n  }\n\n  get useHotkey(): boolean {\n    return this.hasAttribute('use-hotkey') ?? false;\n  }\n  set useHotkey(useHotkey: boolean) {\n    if (useHotkey) {\n      this.setAttribute('use-hotkey', '');\n    } else {\n      this.removeAttribute('use-hotkey');\n    }\n  }\n\n  get trigger(): TooltipTrigger {\n    switch (this.getAttribute('trigger')) {\n      case 'click':\n        return 'click';\n      case 'both':\n        return 'both';\n      case 'hover':\n      default:\n        return 'hover';\n    }\n  }\n  set trigger(trigger: TooltipTrigger) {\n    this.setAttribute('trigger', trigger);\n  }\n\n  get hoverDelay(): number {\n    return this.hasAttribute('hover-delay') ? Number(this.getAttribute('hover-delay')) : 300;\n  }\n  set hoverDelay(delay: number) {\n    this.setAttribute('hover-delay', delay.toString());\n  }\n\n  get variant(): TooltipVariant {\n    return this.getAttribute('variant') === 'rich' ? 'rich' : 'simple';\n  }\n  set variant(variant: TooltipVariant) {\n    this.setAttribute('variant', variant);\n  }\n\n  get padding(): PaddingMode {\n    return this.getAttribute('padding') === 'large' ? 'large' : 'small';\n  }\n  set padding(padding: PaddingMode) {\n    this.setAttribute('padding', padding);\n  }\n\n  get jslogContext(): string|null {\n    return this.getAttribute('jslogcontext');\n  }\n  set jslogContext(jslogContext: string) {\n    this.setAttribute('jslogcontext', jslogContext);\n    this.#updateJslog();\n  }\n\n  get verticalDistanceIncrease(): number {\n    return this.hasAttribute('vertical-distance-increase') ? Number(this.getAttribute('vertical-distance-increase')) :\n                                                             0;\n  }\n  set verticalDistanceIncrease(increase: number) {\n    this.setAttribute('vertical-distance-increase', increase.toString());\n  }\n\n  get preferSpanLeft(): boolean {\n    return this.hasAttribute('prefer-span-left');\n  }\n\n  set preferSpanLeft(value: boolean) {\n    if (value) {\n      this.setAttribute('prefer-span-left', '');\n    } else {\n      this.removeAttribute('prefer-span-left');\n    }\n  }\n\n  get anchor(): HTMLElement|null {\n    return this.#anchor;\n  }\n\n  constructor(properties?: TooltipProperties) {\n    super();\n    const {id, variant, padding, jslogContext, anchor, trigger} = properties ?? {};\n    if (id) {\n      this.id = id;\n    }\n    if (variant) {\n      this.variant = variant;\n    }\n    if (padding) {\n      this.padding = padding;\n    }\n    if (jslogContext) {\n      this.jslogContext = jslogContext;\n    }\n    if (anchor) {\n      const ref = anchor.getAttribute('aria-details') ?? anchor.getAttribute('aria-describedby');\n      if (ref !== id) {\n        throw new Error('aria-details or aria-describedby must be set on the anchor');\n      }\n      this.#anchor = anchor;\n    }\n    if (trigger) {\n      this.trigger = trigger;\n    }\n  }\n\n  attributeChangedCallback(name: string, oldValue: string, newValue: string): void {\n    if (!this.isConnected) {\n      // There is no need to do anything before the connectedCallback is called.\n      return;\n    }\n    if (name === 'id') {\n      this.#removeEventListeners();\n      this.#attachToAnchor();\n      if (Tooltip.lastOpenedTooltipId === oldValue) {\n        Tooltip.lastOpenedTooltipId = newValue;\n      }\n    } else if (name === 'jslogcontext') {\n      this.#updateJslog();\n    }\n  }\n\n  connectedCallback(): void {\n    this.#attachToAnchor();\n    this.#registerEventListeners();\n    this.#setAttributes();\n\n    // clang-format off\n    Lit.render(html`\n      <style>${tooltipStyles}</style>\n      <!-- Wrapping it into a container, so that the tooltip doesn't disappear when the mouse moves from the anchor to the tooltip. -->\n      <div class=\"container ${this.padding === 'large' ? 'large-padding' : ''}\">\n        <slot></slot>\n      </div>\n    `, this.#shadow, {host: this});\n    // clang-format on\n\n    if (Tooltip.lastOpenedTooltipId === this.id) {\n      this.showPopover();\n    }\n  }\n\n  disconnectedCallback(): void {\n    this.#removeEventListeners();\n    this.#anchorObserver?.disconnect();\n  }\n\n  showTooltip = (event?: MouseEvent|FocusEvent): void => {\n    // Don't show the tooltip if the mouse is down.\n    if (event && 'buttons' in event && event.buttons) {\n      return;\n    }\n    if (this.#timeout) {\n      window.clearTimeout(this.#timeout);\n    }\n    this.#timeout = window.setTimeout(() => {\n      this.showPopover();\n      Tooltip.lastOpenedTooltipId = this.id;\n    }, this.hoverDelay);\n  };\n\n  #containsNode(target: EventTarget|null): boolean {\n    return target instanceof Node && this.contains(target);\n  }\n\n  hideTooltip = (event?: MouseEvent|FocusEvent): void => {\n    if (this.#timeout) {\n      window.clearTimeout(this.#timeout);\n    }\n    // If the event is a blur event, then:\n    // 1. event.currentTarget = the element that got blurred\n    // 2. event.relatedTarget = the element that gained focus\n    // https://developer.mozilla.org/en-US/docs/Web/API/FocusEvent/relatedTarget\n    // If the blurred element (1) was our anchor or within the tooltip,\n    // and the newly focused element (2) is within the tooltip,\n    // we do not want to hide the tooltip.\n    if (event && this.variant === 'rich' && (event.target === this.#anchor || this.#containsNode(event.target)) &&\n        this.#containsNode(event.relatedTarget)) {\n      return;\n    }\n\n    // Don't hide a rich tooltip when hovering over the tooltip itself.\n    if (event && this.variant === 'rich' &&\n        (event.relatedTarget === this || (event.relatedTarget as Element)?.parentElement === this)) {\n      return;\n    }\n    if (this.open && Tooltip.lastOpenedTooltipId === this.id) {\n      Tooltip.lastOpenedTooltipId = null;\n    }\n    this.hidePopover();\n  };\n\n  toggle = (): void => {\n    // We need this check because clicking on the anchor while the tooltip is open will trigger both\n    // the click event on the anchor and the toggle event from the backdrop of the tooltip.\n    if (!this.#closing) {\n      this.togglePopover();\n    }\n  };\n\n  #positionPopover = (): void => {\n    if (!this.#anchor || !this.open) {\n      this.#previousAnchorRect = null;\n      this.#previousPopoverRect = null;\n      this.style.visibility = 'hidden';\n      return;\n    }\n\n    // If there is no change from the previous anchor rect, we don't need to recompute the position.\n    const anchorRect = this.#anchor.getBoundingClientRect();\n    const currentPopoverRect = this.getBoundingClientRect();\n    if (positioningUtils.isSameRect(this.#previousAnchorRect, anchorRect) &&\n        positioningUtils.isSameRect(this.#previousPopoverRect, currentPopoverRect)) {\n      requestAnimationFrame(this.#positionPopover);\n      return;\n    }\n    this.#previousAnchorRect = anchorRect;\n    this.#previousPopoverRect = currentPopoverRect;\n\n    const inspectorViewRect = UI.UIUtils.getDevToolsBoundingElement().getBoundingClientRect();\n    const preferredPositions =\n        this.preferSpanLeft ? [PositionOption.BOTTOM_SPAN_LEFT, PositionOption.TOP_SPAN_LEFT] : [];\n    const proposedPopoverRect = this.variant === 'rich' ?\n        proposedRectForRichTooltip({inspectorViewRect, anchorRect, currentPopoverRect, preferredPositions}) :\n        proposedRectForSimpleTooltip({inspectorViewRect, anchorRect, currentPopoverRect});\n    this.style.left = `${proposedPopoverRect.left}px`;\n\n    // If the tooltip is above its anchor, we need to decrease the tooltip's\n    // y-coordinate to increase the distance between tooltip and anchor.\n    // If the tooltip is below its anchor, we add to the tooltip's y-coord.\n    const actualVerticalOffset =\n        anchorRect.top < proposedPopoverRect.top ? this.verticalDistanceIncrease : -this.verticalDistanceIncrease;\n    this.style.top = `${proposedPopoverRect.top + actualVerticalOffset}px`;\n    this.style.visibility = 'visible';\n    requestAnimationFrame(this.#positionPopover);\n  };\n\n  #updateJslog(): void {\n    if (this.jslogContext && this.#anchor) {\n      VisualLogging.setMappedParent(this, this.#anchor);\n      this.setAttribute('jslog', VisualLogging.popover(this.jslogContext).parent('mapped').toString());\n    } else {\n      this.removeAttribute('jslog');\n    }\n  }\n\n  #setAttributes(): void {\n    if (!this.hasAttribute('role')) {\n      this.setAttribute('role', 'tooltip');\n    }\n    this.setAttribute('popover', this.trigger === 'hover' ? 'manual' : 'auto');\n    this.#updateJslog();\n  }\n\n  #stopPropagation(event: Event): void {\n    event.stopPropagation();\n  }\n\n  #setClosing = (event: Event): void => {\n    if ((event as ToggleEvent).newState === 'closed') {\n      this.#closing = true;\n      if (this.#timeout) {\n        window.clearTimeout(this.#timeout);\n      }\n    }\n  };\n\n  #resetClosing = (event: Event): void => {\n    if ((event as ToggleEvent).newState === 'closed') {\n      this.#closing = false;\n      this.#openedViaHotkey = false;\n    }\n  };\n\n  #globalKeyDown = (event: KeyboardEvent): void => {\n    if (!this.open || event.key !== 'Escape') {\n      return;\n    }\n\n    const childTooltip = this.querySelector('devtools-tooltip') as Tooltip | null;\n    if (childTooltip?.open) {\n      return;\n    }\n\n    this.#openedViaHotkey = false;\n    this.toggle();\n    event.consume(true);\n  };\n\n  #keyDown = (event: KeyboardEvent): void => {\n    // This supports the scenario where the user uses Alt+ArrowDown in hotkey\n    // mode to toggle the visibility.\n    // Note that the \"Escape to close\" scenario is handled in the global\n    // keydown function so we capture Escape presses even if the tooltip does\n    // not have focus.\n    const shouldToggleVisibility = (this.useHotkey && event.altKey && event.key === 'ArrowDown');\n\n    if (shouldToggleVisibility) {\n      this.#openedViaHotkey = !this.open;\n      this.toggle();\n      event.consume(true);\n    }\n  };\n\n  #registerEventListeners(): void {\n    document.body.addEventListener('keydown', this.#globalKeyDown);\n    if (this.#anchor) {\n      // We bind the keydown listener regardless of if use-hotkey is enabled\n      // as we always want to support ESC to close.\n      this.#anchor.addEventListener('keydown', this.#keyDown);\n\n      if (this.trigger === 'click' || this.trigger === 'both') {\n        this.#anchor.addEventListener('click', this.toggle);\n      }\n      if (this.trigger === 'hover' || this.trigger === 'both') {\n        this.#anchor.addEventListener('mouseenter', this.showTooltip);\n        if (!this.useHotkey) {\n          this.#anchor.addEventListener('focus', this.showTooltip);\n        }\n\n        this.#anchor.addEventListener('blur', this.hideTooltip);\n        this.#anchor.addEventListener('mouseleave', this.hideTooltip);\n        this.addEventListener('mouseleave', this.hideTooltip);\n        this.addEventListener('focusout', this.hideTooltip);\n      }\n    }\n    // Prevent interaction with the parent element.\n    this.addEventListener('click', this.#stopPropagation);\n    this.addEventListener('mouseup', this.#stopPropagation);\n    this.addEventListener('beforetoggle', this.#setClosing);\n    this.addEventListener('toggle', this.#resetClosing);\n    this.addEventListener('toggle', this.#positionPopover);\n  }\n\n  #removeEventListeners(): void {\n    if (this.#timeout) {\n      window.clearTimeout(this.#timeout);\n    }\n\n    // Should always exist when this component is used, but in test\n    // environments on Chromium this isn't always the case, hence the body? check.\n    document.body?.removeEventListener('keydown', this.#globalKeyDown);\n\n    if (this.#anchor) {\n      this.#anchor.removeEventListener('click', this.toggle);\n      this.#anchor.removeEventListener('mouseenter', this.showTooltip);\n      this.#anchor.removeEventListener('focus', this.showTooltip);\n      this.#anchor.removeEventListener('blur', this.hideTooltip);\n      this.#anchor.removeEventListener('keydown', this.#keyDown);\n      this.#anchor.removeEventListener('mouseleave', this.hideTooltip);\n    }\n    this.removeEventListener('mouseleave', this.hideTooltip);\n    this.removeEventListener('click', this.#stopPropagation);\n    this.removeEventListener('mouseup', this.#stopPropagation);\n    this.removeEventListener('beforetoggle', this.#setClosing);\n    this.removeEventListener('toggle', this.#resetClosing);\n    this.removeEventListener('toggle', this.#positionPopover);\n  }\n\n  #attachToAnchor(): void {\n    if (!this.#anchor) {\n      const id = this.getAttribute('id');\n      if (!id) {\n        throw new Error('<devtools-tooltip> must have an id.');\n      }\n      const root = this.getRootNode() as Document | ShadowRoot;\n      if (root.querySelectorAll(`#${id}`)?.length > 1) {\n        throw new Error('Duplicate <devtools-tooltip> ids found.');\n      }\n      const describedbyAnchor = root.querySelector(`[aria-describedby=\"${id}\"]`);\n      const detailsAnchor = root.querySelector(`[aria-details=\"${id}\"]`);\n      const anchor = describedbyAnchor ?? detailsAnchor;\n      if (!anchor) {\n        throw new Error(`No anchor for tooltip with id ${id} found.`);\n      }\n      if (!(anchor instanceof HTMLElement)) {\n        throw new Error('Anchor must be an HTMLElement.');\n      }\n      this.#anchor = anchor;\n      if (this.variant === 'rich' && describedbyAnchor) {\n        console.warn(`The anchor for tooltip ${\n            id} was defined with \"aria-describedby\". For rich tooltips \"aria-details\" is more appropriate.`);\n      }\n    }\n\n    this.#observeAnchorRemoval(this.#anchor);\n    this.#updateJslog();\n  }\n\n  #observeAnchorRemoval(anchor: Element): void {\n    if (anchor.parentElement === null) {\n      return;\n    }\n    if (this.#anchorObserver) {\n      this.#anchorObserver.disconnect();\n    }\n\n    this.#anchorObserver = new MutationObserver(mutations => {\n      for (const mutation of mutations) {\n        if (mutation.type === 'childList' && [...mutation.removedNodes].includes(anchor)) {\n          if (this.#timeout) {\n            window.clearTimeout(this.#timeout);\n          }\n          this.hidePopover();\n        }\n      }\n    });\n    this.#anchorObserver.observe(anchor.parentElement, {childList: true});\n  }\n}\n\ncustomElements.define('devtools-tooltip', Tooltip);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-tooltip': Tooltip;\n  }\n}\n", "// Copyright 2025 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default `/*\n * Copyright 2025 The Chromium Authors\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n:host {\n  --tooltip-viewport-distance: var(--sys-size-5);\n\n  /* Reset the browser's default styles for [popover] elements. */\n  margin: 0;\n  background: none;\n  border: none;\n  padding: 0;\n  overflow: visible;\n  position: absolute;\n  max-width: var(--devtools-window-width);\n  max-height: var(--devtools-window-height);\n  visibility: hidden;\n\n  & .container {\n    width: max-content;\n    max-width: calc(var(--devtools-window-width) - 2 * (\n      /* host margin */ var(--tooltip-viewport-distance) +\n      /* container horizontal padding */ var(--sys-size-8) +\n      /* container margin */ var(--sys-size-3)));\n    margin: var(--sys-size-2);\n    font: var(--sys-typescale-body4-regular);\n    color: var(--sys-color-inverse-on-surface);\n    background-color: var(--sys-color-inverse-surface);\n    box-shadow: var(--sys-elevation-level2);\n    border-radius: var(--sys-shape-corner-extra-small);\n    padding: var(--sys-size-4) var(--sys-size-5);\n  }\n}\n\n:host([variant='rich']) {\n  justify-self: unset;\n  margin: 0 var(--tooltip-viewport-distance) var(--tooltip-viewport-distance) 0;\n  position: absolute;\n\n  & .container {\n    margin-inline: 0;\n    margin-block: var(--sys-size-3);\n    color: var(--sys-color-on-surface);\n    background-color: var(--sys-color-base-container-elevated);\n    border-radius: var(--sys-shape-corner-small);\n    overflow: auto;\n\n    &.large-padding {\n      padding: var(--sys-size-6) var(--sys-size-8);\n    }\n  }\n}\n\n/*# sourceURL=${import.meta.resolve('./tooltip.css')} */`;"],
  "mappings": "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",
  "names": ["PositionOption", "proposedRect"]
}
