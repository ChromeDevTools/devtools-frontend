{"version":3,"file":"ContextMenu.js","sourceRoot":"","sources":["../../../../../../front_end/ui/legacy/ContextMenu.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2009 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as Root from '../../core/root/root.js';\nimport * as Buttons from '../components/buttons/buttons.js';\nimport {html, render} from '../lit/lit.js';\nimport * as VisualLogging from '../visual_logging/visual_logging.js';\n\nimport {ActionRegistry} from './ActionRegistry.js';\nimport type {Key, Modifier} from './KeyboardShortcut.js';\nimport {ShortcutRegistry} from './ShortcutRegistry.js';\nimport {SoftContextMenu, type SoftContextMenuDescriptor} from './SoftContextMenu.js';\nimport {deepElementFromEvent, maybeCreateNewBadge} from './UIUtils.js';\n\n/**\n * Represents a single item in a context menu.\n * @property jslogContext - An optional string identifying the element for visual logging.\n * @property customElement - A custom HTML element to be rendered for this item.\n * @property idInternal - The unique ID of this item. Undefined for separators.\n * @property contextMenu - The parent `ContextMenu` or `null` if this item is not part of a menu (e.g. a SubMenu).\n * @property isDevToolsPerformanceMenuItem - Controls whether the shortcuts will be shown in Mac native menus. Use only in exceptional cases where shortcuts are heavily context dependent and critical for a smooth user interaction.\n * @property disabled - Whether the item should be disabled.\n * @property previewFeature - Whether this item represents an experimental feature. Adds an experiment icon next to the menu item.\n * @property accelerator - Describes a keyboard shortcut for the item. Shortcut will not show in native Menus on Mac.\n * @property label - The text to display for the item. Not used for 'separator' type.\n */\nexport class Item {\n  private readonly typeInternal: string;\n  protected readonly label: string|undefined;\n  protected accelerator?: Host.InspectorFrontendHostAPI.AcceleratorDescriptor;\n  protected featureName?: string;\n  protected readonly previewFeature: boolean;\n  protected disabled: boolean|undefined;\n  private readonly checked: boolean|undefined;\n  protected isDevToolsPerformanceMenuItem: boolean;\n  protected contextMenu: ContextMenu|null;\n  protected idInternal: number|undefined;\n  customElement?: Element;\n  private shortcut?: string;\n  #tooltip: Common.UIString.LocalizedString|undefined;\n  protected jslogContext: string|undefined;\n\n  constructor(\n      contextMenu: ContextMenu|null, type: 'checkbox'|'item'|'separator'|'subMenu', label?: string,\n      isPreviewFeature?: boolean, disabled?: boolean, checked?: boolean,\n      accelerator?: Host.InspectorFrontendHostAPI.AcceleratorDescriptor, tooltip?: Platform.UIString.LocalizedString,\n      jslogContext?: string, featureName?: string) {\n    this.typeInternal = type;\n    this.label = label;\n    this.previewFeature = Boolean(isPreviewFeature);\n    this.accelerator = accelerator;\n    this.disabled = disabled;\n    this.checked = checked;\n    this.isDevToolsPerformanceMenuItem = false;\n    this.contextMenu = contextMenu;\n    this.idInternal = undefined;\n    this.#tooltip = tooltip;\n    if (type === 'item' || type === 'checkbox') {\n      this.idInternal = contextMenu ? contextMenu.nextId() : 0;\n    }\n    this.jslogContext = jslogContext;\n    this.featureName = featureName;\n  }\n\n  /**\n   * Returns the unique ID of this item.\n   * @throws If the item ID was not set (e.g. for a separator).\n   */\n  id(): number {\n    if (this.idInternal === undefined) {\n      throw new Error('Tried to access a ContextMenu Item ID but none was set.');\n    }\n    return this.idInternal;\n  }\n\n  /**\n   * Returns the type of this item (e.g. 'item', 'checkbox').\n   */\n  type(): string {\n    return this.typeInternal;\n  }\n\n  /**\n   * Returns whether this item is marked as a preview feature (experimental).\n   */\n  isPreviewFeature(): boolean {\n    return this.previewFeature;\n  }\n\n  /**\n   * Returns whether this item is enabled.\n   */\n  isEnabled(): boolean {\n    return !this.disabled;\n  }\n\n  /**\n   * Sets the enabled state of this item.\n   * @param enabled True to enable the item, false to disable it.\n   */\n  setEnabled(enabled: boolean): void {\n    this.disabled = !enabled;\n  }\n\n  /**\n   * Builds a descriptor object for this item.\n   * This descriptor is used to create the actual menu item in either\n   * a soft-rendered menu or a native menu.\n   * @returns The descriptor for the item.\n   * @throws If the item type is invalid.\n   */\n  buildDescriptor(): SoftContextMenuDescriptor|Host.InspectorFrontendHostAPI.ContextMenuDescriptor {\n    switch (this.typeInternal) {\n      case 'item': {\n        const result: SoftContextMenuDescriptor = {\n          type: 'item',\n          id: this.idInternal,\n          label: this.label,\n          isExperimentalFeature: this.previewFeature,\n          enabled: !this.disabled,\n          checked: undefined,\n          subItems: undefined,\n          tooltip: this.#tooltip,\n          jslogContext: this.jslogContext,\n          featureName: this.featureName,\n        };\n        if (this.customElement) {\n          result.element = this.customElement;\n        }\n        if (this.shortcut) {\n          result.shortcut = this.shortcut;\n        }\n        if (this.accelerator) {\n          result.accelerator = this.accelerator;\n          if (this.isDevToolsPerformanceMenuItem) {\n            result.isDevToolsPerformanceMenuItem = true;\n          }\n        }\n        return result;\n      }\n      case 'separator': {\n        return {\n          type: 'separator',\n          id: undefined,\n          label: undefined,\n          enabled: undefined,\n          checked: undefined,\n          subItems: undefined,\n        };\n      }\n      case 'checkbox': {\n        const result: SoftContextMenuDescriptor = {\n          type: 'checkbox',\n          id: this.idInternal,\n          label: this.label,\n          checked: Boolean(this.checked),\n          isExperimentalFeature: this.previewFeature,\n          enabled: !this.disabled,\n          subItems: undefined,\n          tooltip: this.#tooltip,\n          jslogContext: this.jslogContext,\n        };\n        if (this.customElement) {\n          result.element = this.customElement;\n        }\n        return result;\n      }\n    }\n    throw new Error('Invalid item type:' + this.typeInternal);\n  }\n\n  /**\n   * Sets a keyboard accelerator for this item.\n   * @param key The key code for the accelerator.\n   * @param modifiers An array of modifiers (e.g. Ctrl, Shift).\n   */\n  setAccelerator(key: Key, modifiers: Modifier[]): void {\n    const modifierSum = modifiers.reduce(\n        (result, modifier) => result + ShortcutRegistry.instance().devToolsToChromeModifier(modifier), 0);\n    this.accelerator = {keyCode: key.code, modifiers: modifierSum};\n  }\n\n  /**\n   * This influences whether accelerators will be shown for native menus on Mac.\n   * Use this ONLY for performance menus and ONLY where accelerators are critical\n   * for a smooth user journey and heavily context dependent.\n   * @param isDevToolsPerformanceMenuItem True if this is a DevTools performance menu item.\n   */\n  setIsDevToolsPerformanceMenuItem(isDevToolsPerformanceMenuItem: boolean): void {\n    this.isDevToolsPerformanceMenuItem = isDevToolsPerformanceMenuItem;\n  }\n\n  /**\n   * Sets a display string for the shortcut associated with this item.\n   * This is typically used when the shortcut is managed by `ActionRegistry`.\n   * @param shortcut The shortcut string to display.\n   */\n  setShortcut(shortcut: string): void {\n    this.shortcut = shortcut;\n  }\n}\n\n/**\n * Represents a section within a `ContextMenu` or `SubMenu`.\n * Sections are used to group related items and are often visually separated.\n * @property items - The list of items in this section.\n * @property contextMenu - The parent `ContextMenu` or `null`.\n */\nexport class Section {\n  readonly contextMenu: ContextMenu|null;\n  readonly items: Item[];\n\n  constructor(contextMenu: ContextMenu|null) {\n    this.contextMenu = contextMenu;\n    this.items = [];\n  }\n\n  /**\n   * Appends a standard clickable item to this section.\n   * @param label The text to display for the item.\n   * @param handler The function to execute when the item is clicked.\n   * @param options Optional settings for the item.\n   * @returns The newly created `Item`.\n   */\n  appendItem(label: string, handler: () => void, options?: {\n    accelerator?: Host.InspectorFrontendHostAPI.AcceleratorDescriptor,\n    isPreviewFeature?: boolean,\n    disabled?: boolean,\n    additionalElement?: Element,\n    tooltip?: Platform.UIString.LocalizedString,\n    jslogContext?: string,\n    featureName?: string,\n  }): Item {\n    const item = new Item(\n        this.contextMenu, 'item', label, options?.isPreviewFeature, options?.disabled, undefined, options?.accelerator,\n        options?.tooltip, options?.jslogContext, options?.featureName);\n    if (options?.additionalElement) {\n      item.customElement = options?.additionalElement;\n    }\n    this.items.push(item);\n    if (this.contextMenu) {\n      this.contextMenu.setHandler(item.id(), handler);\n    }\n    return item;\n  }\n\n  /**\n   * Appends an item that contains a custom HTML element (for non-native menus only).\n   * @param element The custom `Element` to display in the menu item.\n   * @param jslogContext An optional string identifying the element for visual logging.\n   * @returns The newly created `Item`.\n   */\n  appendCustomItem(element: Element, jslogContext?: string): Item {\n    const item = new Item(\n        this.contextMenu, 'item', undefined, undefined, undefined, undefined, undefined, undefined, jslogContext);\n    item.customElement = element;\n    this.items.push(item);\n    return item;\n  }\n\n  /**\n   * Appends a visual separator to this section.\n   * @returns The newly created separator `Item`.\n   */\n  appendSeparator(): Item {\n    const item = new Item(this.contextMenu, 'separator');\n    this.items.push(item);\n    return item;\n  }\n\n  /**\n   * Appends an item that triggers a registered `Action`.\n   * The item's label, handler, enabled state, and shortcut are derived from the action.\n   * @param actionId The ID of the action to append.\n   * @param label Optional label to override the action's title.\n   * @param optional If true and the action is not registered, this method does nothing.\n   */\n  appendAction(actionId: string, label?: string, optional?: boolean, jslogContext?: string, feature?: string): void {\n    if (optional && !ActionRegistry.instance().hasAction(actionId)) {\n      return;\n    }\n    const action = ActionRegistry.instance().getAction(actionId);\n    if (!label) {\n      label = action.title();\n    }\n    const promotionId = action.featurePromotionId();\n    let additionalElement = undefined;\n    if (promotionId) {\n      additionalElement = maybeCreateNewBadge(promotionId);\n    }\n    const result = this.appendItem(\n        label, action.execute.bind(action),\n        {disabled: !action.enabled(), jslogContext: jslogContext ?? actionId, featureName: feature, additionalElement});\n    const shortcut = ShortcutRegistry.instance().shortcutTitleForAction(actionId);\n    const keyAndModifier = ShortcutRegistry.instance().keyAndModifiersForAction(actionId);\n    if (keyAndModifier) {\n      result.setAccelerator(keyAndModifier.key, [keyAndModifier.modifier]);\n    }\n    if (shortcut) {\n      result.setShortcut(shortcut);\n    }\n  }\n\n  /**\n   * Appends an item that, when clicked, opens a sub-menu.\n   * @param label The text to display for the sub-menu item.\n   * @param disabled Whether the sub-menu item should be disabled.\n   * @param jslogContext An optional string identifying the element for visual logging.\n   * @returns The newly created `SubMenu` instance.\n   */\n  appendSubMenuItem(label: string, disabled?: boolean, jslogContext?: string, featureName?: string): SubMenu {\n    const item = new SubMenu(this.contextMenu, label, disabled, jslogContext, featureName);\n    item.init();\n    this.items.push(item);\n    return item;\n  }\n\n  /**\n   * Appends a checkbox item to this section.\n   * @param label The text to display for the checkbox item.\n   * @param handler The function to execute when the checkbox state changes.\n   * @param options Optional settings for the checkbox item.\n   * @returns The newly created checkbox `Item`.\n   */\n  appendCheckboxItem(label: string, handler: () => void, options?: {\n    checked?: boolean,\n    disabled?: boolean,\n    experimental?: boolean,\n    additionalElement?: Element,\n    tooltip?: Platform.UIString.LocalizedString,\n    jslogContext?: string,\n    featureName?: string,\n  }): Item {\n    const item = new Item(\n        this.contextMenu, 'checkbox', label, options?.experimental, options?.disabled, options?.checked, undefined,\n        options?.tooltip, options?.jslogContext, options?.featureName);\n    this.items.push(item);\n    if (this.contextMenu) {\n      this.contextMenu.setHandler(item.id(), handler);\n    }\n    if (options?.additionalElement) {\n      item.customElement = options.additionalElement;\n    }\n    return item;\n  }\n}\n\n/**\n * Represents an `Item` that opens a nested menu (a sub-menu).\n * It extends `Item` and manages its own set of `Section`s.\n * @property sections - A map of section names to `Section` objects.\n */\nexport class SubMenu extends Item {\n  readonly sections: Map<string, Section>;\n  private readonly sectionList: Section[];\n\n  constructor(\n      contextMenu: ContextMenu|null, label?: string, disabled?: boolean, jslogContext?: string, featureName?: string) {\n    super(\n        contextMenu, 'subMenu', label, undefined, disabled, undefined, undefined, undefined, jslogContext, featureName);\n    this.sections = new Map();\n    this.sectionList = [];\n  }\n\n  /**\n   * Initializes the standard sections for this sub-menu based on `ContextMenu.groupWeights`.\n   */\n  init(): void {\n    ContextMenu.groupWeights.forEach(name => this.section(name));\n  }\n\n  /**\n   * Retrieves an existing section by its name or creates a new one if it doesn't exist.\n   *\n   * If a section with the given `name` (or 'default' if `name` is unspecified) is not found,\n   * a new `Section` instance is created, stored internally for future lookups by that name,\n   * and added to the ordered list of sections for this submenu.\n   *\n   * @param name The optional name of the section. Defaults to 'default' if not provided.\n   * @returns The `Section` object, either pre-existing or newly created.\n   */\n  section(name?: string): Section {\n    if (!name) {\n      name = 'default';\n    }\n    let section: Section|(Section | null | undefined) = name ? this.sections.get(name) : null;\n    if (!section) {\n      section = new Section(this.contextMenu);\n      if (name) {\n        this.sections.set(name, section);\n        this.sectionList.push(section);\n      } else {\n        this.sectionList.splice(ContextMenu.groupWeights.indexOf('default'), 0, section);\n      }\n    }\n    return section;\n  }\n\n  /**\n   * Retrieves or creates the 'header' section.\n   * @returns The 'header' `Section` object.\n   */\n  headerSection(): Section {\n    return this.section('header');\n  }\n\n  /**\n   * Retrieves or creates the 'new' section.\n   * @returns The 'new' `Section` object.\n   */\n  newSection(): Section {\n    return this.section('new');\n  }\n\n  /**\n   * Retrieves or creates the 'reveal' section.\n   * @returns The 'reveal' `Section` object.\n   */\n\n  revealSection(): Section {\n    return this.section('reveal');\n  }\n\n  /**\n   * Retrieves or creates the 'clipboard' section.\n   * @returns The 'clipboard' `Section` object.\n   */\n  clipboardSection(): Section {\n    return this.section('clipboard');\n  }\n\n  /**\n   * Retrieves or creates the 'edit' section.\n   * @returns The 'edit' `Section` object.\n   */\n  editSection(): Section {\n    return this.section('edit');\n  }\n\n  /**\n   * Retrieves or creates the 'debug' section.\n   * @returns The 'debug' `Section` object.\n   */\n  debugSection(): Section {\n    return this.section('debug');\n  }\n\n  /**\n   * Retrieves or creates the 'view' section.\n   * @returns The 'view' `Section` object.\n   */\n  viewSection(): Section {\n    return this.section('view');\n  }\n\n  /**\n   * Retrieves or creates the 'default' section.\n   * This is often used for general-purpose menu items.\n   * @returns The 'default' `Section` object.\n   */\n  defaultSection(): Section {\n    return this.section('default');\n  }\n\n  /**\n   * Retrieves or creates the 'override' section.\n   * @returns The 'override' `Section` object.\n   */\n  overrideSection(): Section {\n    return this.section('override');\n  }\n\n  /**\n   * Retrieves or creates the 'save' section.\n   * @returns The 'save' `Section` object.\n   */\n  saveSection(): Section {\n    return this.section('save');\n  }\n\n  /**\n   * Retrieves or creates the 'annotation' section.\n   * @returns The 'annotation' `Section` object.\n   */\n  annotationSection(): Section {\n    return this.section('annotation');\n  }\n\n  /**\n   * Retrieves or creates the 'footer' section.\n   * @returns The 'footer' `Section` object.\n   */\n  footerSection(): Section {\n    return this.section('footer');\n  }\n\n  override buildDescriptor(): SoftContextMenuDescriptor|Host.InspectorFrontendHostAPI.ContextMenuDescriptor {\n    const result: Host.InspectorFrontendHostAPI.ContextMenuDescriptor|SoftContextMenuDescriptor = {\n      type: 'subMenu',\n      label: this.label,\n      accelerator: this.accelerator,\n      isDevToolsPerformanceMenuItem: this.accelerator ? this.isDevToolsPerformanceMenuItem : undefined,\n      isExperimentalFeature: this.previewFeature,\n      enabled: !this.disabled,\n      subItems: [],\n      id: undefined,\n      checked: undefined,\n      jslogContext: this.jslogContext,\n      featureName: this.featureName,\n    };\n\n    const nonEmptySections = this.sectionList.filter(section => Boolean(section.items.length));\n    for (const section of nonEmptySections) {\n      for (const item of section.items) {\n        if (!result.subItems) {\n          result.subItems = [];\n        }\n        result.subItems.push(item.buildDescriptor());\n      }\n      if (section !== nonEmptySections[nonEmptySections.length - 1]) {\n        if (!result.subItems) {\n          result.subItems = [];\n        }\n        result.subItems.push({\n          type: 'separator',\n          id: undefined,\n          subItems: undefined,\n          checked: undefined,\n          enabled: undefined,\n          label: undefined,\n        });\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Appends registered context menu items that are configured to appear under a specific `location` path.\n   * Items are sorted by their `order` property.\n   * Experimental items are only added if their corresponding experiment is enabled.\n   * @param location The base location path (e.g. 'mainMenu'). Items with locations like 'mainMenu/default' will be appended.\n   */\n  appendItemsAtLocation(location: string): void {\n    const items: ContextMenuItemRegistration[] = getRegisteredItems();\n    items.sort((firstItem, secondItem) => {\n      const order1 = firstItem.order || 0;\n      const order2 = secondItem.order || 0;\n      return order1 - order2;\n    });\n    for (const item of items) {\n      if (item.experiment && !Root.Runtime.experiments.isEnabled(item.experiment)) {\n        continue;\n      }\n\n      const itemLocation = item.location;\n      const actionId = item.actionId;\n      if (!itemLocation?.startsWith(location + '/')) {\n        continue;\n      }\n\n      const section = itemLocation.substr(location.length + 1);\n      if (!section || section.includes('/')) {\n        continue;\n      }\n\n      if (actionId) {\n        this.section(section).appendAction(actionId);\n      }\n    }\n  }\n}\n\n/**\n * Options for configuring a `ContextMenu`.\n */\nexport interface ContextMenuOptions {\n  /**\n   * Whether to use the soft (HTML-based) menu implementation.\n   * Defaults to `false` unless globally overridden or in hosted mode.\n   * Set this to true ONLY in exceptional cases where native context menu lacks desired functionality (e.g. keeping menu open after clicking items etc.)\n   */\n  useSoftMenu?: boolean;\n  /** Whether the menu should remain open after an item is clicked. Defaults to `false`. */\n  keepOpen?: boolean;\n  /** A callback function that is invoked when a soft menu is closed. */\n  onSoftMenuClosed?: () => void;\n  /** The x-coordinate for the menu's position. Defaults to the mouse event's x-coordinate. */\n  x?: number;\n  /** The y-coordinate for the menu's position. Defaults to the mouse event's y-coordinate. */\n  y?: number;\n}\n\nconst MENU_ITEM_HEIGHT_FOR_LOGGING = 20;\nconst MENU_ITEM_WIDTH_FOR_LOGGING = 200;\n\n/**\n * Represents the main context menu. It extends `SubMenu` because a `ContextMenu`\n * is essentially a top-level menu that can contain sections and items, similar to a sub-menu.\n * It handles the display of the menu (either soft or native), event handling, and\n * integration with registered context menu providers.\n */\nexport class ContextMenu extends SubMenu {\n  protected override contextMenu: this;\n  private pendingTargets: unknown[];\n  private readonly event: MouseEvent;\n  private readonly useSoftMenu: boolean;\n  private readonly keepOpen: boolean;\n  private x: number;\n  private y: number;\n  private onSoftMenuClosed?: () => void;\n  private readonly handlers: Map<number, () => void>;\n  override idInternal: number;\n  private softMenu?: SoftContextMenu;\n  private contextMenuLabel?: string;\n  private openHostedMenu: Host.InspectorFrontendHostAPI.ContextMenuDescriptor[]|null;\n  private eventTarget: EventTarget|null;\n  private loggableParent: Element|null = null;\n\n  /**\n   * Creates an instance of `ContextMenu`.\n   * @param event The mouse event that triggered the menu.\n   * @param options Optional configuration for the context menu.\n   */\n  constructor(event: Event, options: ContextMenuOptions = {}) {\n    super(null);\n    const mouseEvent = (event as MouseEvent);\n    this.contextMenu = this;\n    super.init();\n    this.pendingTargets = [];\n    this.event = mouseEvent;\n    this.eventTarget = this.event.target;\n    this.useSoftMenu = Boolean(options.useSoftMenu);\n    this.keepOpen = Boolean(options.keepOpen);\n    this.x = options.x === undefined ? mouseEvent.x : options.x;\n    this.y = options.y === undefined ? mouseEvent.y : options.y;\n    this.onSoftMenuClosed = options.onSoftMenuClosed;\n    this.handlers = new Map();\n    this.idInternal = 0;\n    this.openHostedMenu = null;\n\n    let target = (deepElementFromEvent(event) || event.target) as Element | null;\n    if (target) {\n      this.appendApplicableItems((target as Object));\n      while (target instanceof Element && !target.hasAttribute('jslog')) {\n        target = target.parentElementOrShadowHost() ?? null;\n      }\n      if (target instanceof Element) {\n        this.loggableParent = target;\n      }\n    }\n  }\n\n  /**\n   * Initializes global settings for context menus, such as listening for\n   * commands from the host to toggle soft menu usage.\n   */\n  static initialize(): void {\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.events.addEventListener(\n        Host.InspectorFrontendHostAPI.Events.SetUseSoftMenu, setUseSoftMenu);\n    /**\n     * Sets the global preference for using soft menus.\n     * @param event The event containing the new preference.\n     */\n    function setUseSoftMenu(event: Common.EventTarget.EventTargetEvent<boolean>): void {\n      ContextMenu.useSoftMenu = event.data;\n    }\n  }\n\n  /**\n   * Installs a global context menu handler on the provided document's body.\n   * This handler will create and show a `ContextMenu` when a contextmenu event is detected.\n   * @param doc The `Document` to install the handler on.\n   */\n  static installHandler(doc: Document): void {\n    doc.body.addEventListener('contextmenu', handler, false);\n\n    function handler(event: Event): void {\n      const contextMenu = new ContextMenu(event);\n      void contextMenu.show();\n    }\n  }\n\n  /**\n   * Generates the next unique ID for a menu item within this `ContextMenu`.\n   * @returns A unique number for the item ID.\n   */\n  nextId(): number {\n    return this.idInternal++;\n  }\n\n  /**\n   * Checks if a native (hosted) context menu is currently open.\n   * @returns `true` if a native menu is open, `false` otherwise.\n   */\n  isHostedMenuOpen(): boolean {\n    return Boolean(this.openHostedMenu);\n  }\n\n  /**\n   * Retrieves the item descriptors if a soft menu is currently active.\n   * @returns An array of `SoftContextMenuDescriptor`s or an empty array if no soft menu is active.\n   */\n  getItems(): SoftContextMenuDescriptor[] {\n    return this.softMenu?.getItems() || [];\n  }\n\n  /**\n   * Sets the checked state of an item in an active soft menu.\n   * @param item The descriptor of the item to update.\n   * @param checked `true` to check the item, `false` to uncheck it.\n   */\n  setChecked(item: SoftContextMenuDescriptor, checked: boolean): void {\n    this.softMenu?.setChecked(item, checked);\n  }\n\n  /**\n   * Shows the context menu. This involves loading items from registered providers\n   * and then displaying either a soft or native menu.\n   */\n  async show(): Promise<void> {\n    ContextMenu.pendingMenu = this;\n    this.event.consume(true);\n    const loadedProviders = await Promise.all(this.pendingTargets.map(async target => {\n      const providers = await loadApplicableRegisteredProviders(target);\n      return {target, providers};\n    }));\n\n    // After loading all providers, the contextmenu might be hidden again, so bail out.\n    if (ContextMenu.pendingMenu !== this) {\n      return;\n    }\n    ContextMenu.pendingMenu = null;\n\n    for (const {target, providers} of loadedProviders) {\n      for (const provider of providers) {\n        provider.appendApplicableItems(this.event, this, target);\n      }\n    }\n\n    this.pendingTargets = [];\n\n    this.#show();\n  }\n\n  /**\n   * Discards (closes) the soft context menu if it's currently shown.\n   */\n  discard(): void {\n    if (this.softMenu) {\n      this.softMenu.discard();\n    }\n  }\n\n  private registerLoggablesWithin(\n      descriptors: Host.InspectorFrontendHostAPI.ContextMenuDescriptor[],\n      parent?: Host.InspectorFrontendHostAPI.ContextMenuDescriptor): void {\n    for (const descriptor of descriptors) {\n      if (descriptor.jslogContext) {\n        if (descriptor.type === 'checkbox') {\n          VisualLogging.registerLoggable(\n              descriptor, `${VisualLogging.toggle().track({click: true}).context(descriptor.jslogContext)}`,\n              parent || descriptors, new DOMRect(0, 0, MENU_ITEM_WIDTH_FOR_LOGGING, MENU_ITEM_HEIGHT_FOR_LOGGING));\n        } else if (descriptor.type === 'item') {\n          VisualLogging.registerLoggable(\n              descriptor, `${VisualLogging.action().track({click: true}).context(descriptor.jslogContext)}`,\n              parent || descriptors, new DOMRect(0, 0, MENU_ITEM_WIDTH_FOR_LOGGING, MENU_ITEM_HEIGHT_FOR_LOGGING));\n        } else if (descriptor.type === 'subMenu') {\n          VisualLogging.registerLoggable(\n              descriptor, `${VisualLogging.item().context(descriptor.jslogContext)}`, parent || descriptors,\n              new DOMRect(0, 0, MENU_ITEM_WIDTH_FOR_LOGGING, MENU_ITEM_HEIGHT_FOR_LOGGING));\n        }\n        if (descriptor.subItems) {\n          this.registerLoggablesWithin(descriptor.subItems, descriptor);\n        }\n      }\n    }\n  }\n\n  #show(): void {\n    if (!this.eventTarget) {\n      return;\n    }\n\n    const menuObject = this.buildMenuDescriptors();\n    const ownerDocument = (this.eventTarget as HTMLElement).ownerDocument;\n    if (this.useSoftMenu || ContextMenu.useSoftMenu ||\n        Host.InspectorFrontendHost.InspectorFrontendHostInstance.isHostedMode()) {\n      this.softMenu = new SoftContextMenu(\n          (menuObject as SoftContextMenuDescriptor[]), this.itemSelected.bind(this), this.keepOpen, undefined,\n          this.onSoftMenuClosed, this.loggableParent);\n      // let soft context menu focus on the first item when the event is triggered by a non-mouse event\n      // add another check of button value to differentiate mouse event with 'shift + f10' keyboard event\n      const isMouseEvent =\n          (this.event as PointerEvent).pointerType === 'mouse' && (this.event as PointerEvent).button >= 0;\n      this.softMenu.setFocusOnTheFirstItem(!isMouseEvent);\n      this.softMenu.show((ownerDocument), new AnchorBox(this.x, this.y, 0, 0));\n      if (this.contextMenuLabel) {\n        this.softMenu.setContextMenuElementLabel(this.contextMenuLabel);\n      }\n    } else {\n      Host.InspectorFrontendHost.InspectorFrontendHostInstance.showContextMenuAtPoint(\n          this.x, this.y, menuObject, (ownerDocument));\n\n      function listenToEvents(this: ContextMenu): void {\n        Host.InspectorFrontendHost.InspectorFrontendHostInstance.events.addEventListener(\n            Host.InspectorFrontendHostAPI.Events.ContextMenuCleared, this.menuCleared, this);\n        Host.InspectorFrontendHost.InspectorFrontendHostInstance.events.addEventListener(\n            Host.InspectorFrontendHostAPI.Events.ContextMenuItemSelected, this.onItemSelected, this);\n      }\n      VisualLogging.registerLoggable(\n          menuObject, `${VisualLogging.menu()}`, this.loggableParent,\n          new DOMRect(0, 0, MENU_ITEM_WIDTH_FOR_LOGGING, MENU_ITEM_HEIGHT_FOR_LOGGING * menuObject.length));\n      this.registerLoggablesWithin(menuObject);\n      this.openHostedMenu = menuObject;\n      // showContextMenuAtPoint call above synchronously issues a clear event for previous context menu (if any),\n      // so we skip it before subscribing to the clear event.\n      queueMicrotask(listenToEvents.bind(this));\n    }\n  }\n\n  /**\n   * Sets the x-coordinate for the menu's position.\n   * @param x The new x-coordinate.\n   */\n  setX(x: number): void {\n    this.x = x;\n  }\n\n  /**\n   * Sets the y-coordinate for the menu's position.\n   * @param y The new y-coordinate.\n   */\n  setY(y: number): void {\n    this.y = y;\n  }\n\n  /**\n   * Associates a handler function with a menu item ID.\n   * @param id The ID of the menu item.\n   * @param handler The function to execute when the item is selected.\n   */\n  setHandler(id: number, handler: () => void): void {\n    if (handler) {\n      this.handlers.set(id, handler);\n    }\n  }\n\n  /**\n   * Invokes the handler associated with the given menu item ID.\n   * @param id The ID of the selected menu item.\n   */\n  invokeHandler(id: number): void {\n    const handler = this.handlers.get(id);\n    if (handler) {\n      handler.call(this);\n    }\n  }\n\n  private buildMenuDescriptors(): Array<SoftContextMenuDescriptor|Host.InspectorFrontendHostAPI.ContextMenuDescriptor> {\n    return super.buildDescriptor().subItems as\n        Array<SoftContextMenuDescriptor|Host.InspectorFrontendHostAPI.ContextMenuDescriptor>;\n  }\n\n  private onItemSelected(event: Common.EventTarget.EventTargetEvent<number>): void {\n    this.itemSelected(event.data);\n  }\n\n  private itemSelected(id: number): void {\n    this.invokeHandler(id);\n    // Collect all features used along the way when searching for the clicked item.\n    // I.e. a 'feature' on a submenu should be counted as 'used' if its submenu items are clicked.\n    const featuresUsed: string[] = [];\n    if (this.openHostedMenu) {\n      const itemWithId = (items: Host.InspectorFrontendHostAPI.ContextMenuDescriptor[],\n                          id: number): Host.InspectorFrontendHostAPI.ContextMenuDescriptor|null => {\n        for (const item of items) {\n          if (item.id === id) {\n            if (item.featureName) {\n              featuresUsed.push(item.featureName);\n            }\n\n            return item;\n          }\n          const subitem = item.subItems && itemWithId(item.subItems, id);\n          if (subitem) {\n            // Record submenu feature.\n            if (item.featureName) {\n              featuresUsed.push(item.featureName);\n            }\n            return subitem;\n          }\n        }\n        return null;\n      };\n      const item = itemWithId(this.openHostedMenu, id);\n      if (item?.jslogContext) {\n        void VisualLogging.logClick(item, new MouseEvent('click'));\n      }\n      if (item && featuresUsed.length > 0) {\n        featuresUsed.map(\n            feature => Host.InspectorFrontendHost.InspectorFrontendHostInstance.recordNewBadgeUsage(feature));\n      }\n    }\n\n    this.menuCleared();\n  }\n\n  private menuCleared(): void {\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.events.removeEventListener(\n        Host.InspectorFrontendHostAPI.Events.ContextMenuCleared, this.menuCleared, this);\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.events.removeEventListener(\n        Host.InspectorFrontendHostAPI.Events.ContextMenuItemSelected, this.onItemSelected, this);\n    if (this.openHostedMenu) {\n      void VisualLogging.logResize(this.openHostedMenu, new DOMRect(0, 0, 0, 0));\n    }\n    this.openHostedMenu = null;\n    if (!this.keepOpen) {\n      this.onSoftMenuClosed?.();\n    }\n  }\n\n  /**\n   * Appends the `target` to the list of pending targets for which context menu providers\n   * will be loaded when showing the context menu.\n   *\n   * @param target an object for which we can have registered menu item providers.\n   */\n  appendApplicableItems(target: unknown): void {\n    if (this.pendingTargets.includes(target)) {\n      return;\n    }\n    this.pendingTargets.push(target);\n  }\n\n  /**\n   * Marks the soft context menu (if one exists) to visually indicate that its items behave like checkboxes.\n   */\n  markAsMenuItemCheckBox(): void {\n    if (this.softMenu) {\n      this.softMenu.markAsMenuItemCheckBox();\n    }\n  }\n\n  private static pendingMenu: ContextMenu|null = null;\n  private static useSoftMenu = false;\n  static readonly groupWeights = [\n    'header', 'new', 'reveal', 'edit', 'clipboard', 'debug', 'view', 'default', 'override', 'save', 'annotation',\n    'footer'\n  ];\n}\n\n/* eslint-disable @devtools/no-lit-render-outside-of-view */\n/**\n * @property jslogContext - Reflects the `\"jslogContext\"` attribute.\n * @property populateMenuCall - Callback function to populate the menu.\n * @property softMenu - Reflects the `\"soft-menu\"` attribute.\n * @property keepOpen -Reflects the `\"keep-open\"` attribute.\n * @property iconName - Reflects the `\"icon-name\"` attribute.\n * @property disabled - Reflects the `\"disabled\"` attribute.\n * @attribute soft-menu - Whether to use the soft menu implementation.\n * @attribute keep-open - Whether the menu should stay open after an item is clicked.\n * @attribute icon-name - Name of the icon to display on the button.\n * @attribute disabled - Whether the menu button is disabled\n * @attribute jslogContext - The jslog context for the button.\n *\n */\nexport class MenuButton extends HTMLElement {\n  static readonly observedAttributes = ['icon-name', 'disabled'];\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  #triggerTimeoutId?: number;\n  #populateMenuCall?: (arg0: ContextMenu) => void;\n\n  /**\n   * Sets the callback function used to populate the context menu when the button is clicked.\n   * @param populateCall A function that takes a `ContextMenu` instance and adds items to it.\n   */\n  set populateMenuCall(populateCall: (arg0: ContextMenu) => void) {\n    this.#populateMenuCall = populateCall;\n  }\n\n  /**\n   * Reflects the `soft-menu` attribute. If true, uses the `SoftContextMenu` implementation.\n   * @default false\n   */\n  get softMenu(): boolean {\n    return Boolean(this.getAttribute('soft-menu'));\n  }\n\n  set softMenu(softMenu: boolean) {\n    this.toggleAttribute('soft-menu', softMenu);\n  }\n\n  /**\n   * Reflects the `keep-open` attribute. If true, the menu stays open after an item click.\n   * @default false\n   */\n  get keepOpen(): boolean {\n    return Boolean(this.getAttribute('keep-open'));\n  }\n\n  set keepOpen(keepOpen: boolean) {\n    this.toggleAttribute('keep-open', keepOpen);\n  }\n\n  /**\n   * Reflects the `icon-name` attribute. Sets the icon to display on the button.\n   */\n  set iconName(iconName: string) {\n    this.setAttribute('icon-name', iconName);\n  }\n\n  get iconName(): string|null {\n    return this.getAttribute('icon-name');\n  }\n\n  /**\n   * Reflects the `jslogContext` attribute. Sets the visual logging context for the button.\n   */\n  set jslogContext(jslogContext: string) {\n    this.setAttribute('jslog', VisualLogging.dropDown(jslogContext).track({click: true}).toString());\n  }\n\n  get jslogContext(): string|null {\n    return this.getAttribute('jslogContext');\n  }\n\n  /**\n   * Reflects the `disabled` attribute. If true, the button cannot be clicked.\n   * @default false\n   */\n  get disabled(): boolean {\n    return this.hasAttribute('disabled');\n  }\n\n  set disabled(disabled: boolean) {\n    this.toggleAttribute('disabled', disabled);\n  }\n\n  /**\n   * Creates and shows the `ContextMenu`. It calls the `populateMenuCall`\n   * callback to fill the menu with items before displaying it relative to the button.\n   * Manages the `aria-expanded` state.\n   * @param event The event that triggered the menu\n   */\n  #openMenu(event: Event): void {\n    this.#triggerTimeoutId = undefined;\n    if (!this.#populateMenuCall) {\n      return;\n    }\n    const button = this.#shadow.querySelector('devtools-button');\n    const contextMenu = new ContextMenu(event, {\n      useSoftMenu: this.softMenu,\n      keepOpen: this.keepOpen,\n      x: this.getBoundingClientRect().right,\n      y: this.getBoundingClientRect().top + this.offsetHeight,\n      // Without adding a delay, pointer events will be un-ignored too early, and a single click causes\n      // the context menu to be closed and immediately re-opened on Windows (https://crbug.com/339560549).\n      onSoftMenuClosed: () => setTimeout(() => button?.removeAttribute('aria-expanded'), 50),\n    });\n    this.#populateMenuCall(contextMenu);\n    button?.setAttribute('aria-expanded', 'true');\n    void contextMenu.show();\n  }\n\n  /**\n   * Handles the click event on the button. It clears any pending trigger timeout\n   * and immediately calls the `openMenu` method to show the context menu.\n   * @param event The click event.\n   */\n  #triggerContextMenu(event: MouseEvent): void {\n    const triggerTimeout = 50;\n    if (!this.#triggerTimeoutId) {\n      this.#triggerTimeoutId = window.setTimeout(this.#openMenu.bind(this, event), triggerTimeout);\n    }\n  }\n\n  attributeChangedCallback(_: string, oldValue: string, newValue: string): void {\n    if (oldValue !== newValue) {\n      this.#render();\n    }\n  }\n\n  connectedCallback(): void {\n    this.#render();\n  }\n\n  #render(): void {\n    if (!this.iconName) {\n      throw new Error('<devtools-menu-button> expects an icon.');\n    }\n\n    // clang-format off\n    render(html`\n        <devtools-button .disabled=${this.disabled}\n                         .iconName=${this.iconName}\n                         .variant=${Buttons.Button.Variant.ICON}\n                         .title=${this.title}\n                         aria-haspopup='menu'\n                         @click=${this.#triggerContextMenu}>\n        </devtools-button>`,\n        this.#shadow, { host: this });\n    // clang-format on\n  }\n}\ncustomElements.define('devtools-menu-button', MenuButton);\n/* eslint-enable @devtools/no-lit-render-outside-of-view */\n\nexport interface Provider<T> {\n  /**\n   * Appends menu items to the `contextMenu` for the given `target` object.\n   * @param event The event that triggered the context menu.\n   * @param contextMenu The `ContextMenu` to which items should be appended.\n   * @param target The object for which context menu items are being provided.\n   */\n  appendApplicableItems(event: Event, contextMenu: ContextMenu, target: T): void;\n}\n\n/**\n * Stores all registered context menu provider registrations.\n */\nconst registeredProviders: Array<ProviderRegistration<unknown>> = [];\n\n/**\n * Registers a new context menu provider.\n * @template T The type of the object for which the provider supplies context menu items.\n * @param registration The provider registration object, specifying context types and how to load the provider.\n */\nexport function registerProvider<T>(registration: ProviderRegistration<T>): void {\n  registeredProviders.push(registration);\n}\n\n/**\n * Asynchronously loads all registered providers that are applicable to the given `target` object.\n * A provider is applicable if the `target` is an instance of one of its specified `contextTypes`\n * and if its associated experiment (if any) is enabled.\n * @param target The object for which to load applicable providers.\n * @returns A promise that resolves to an array of loaded `Provider` instances.\n */\nasync function loadApplicableRegisteredProviders(target: unknown): Promise<Array<Provider<unknown>>> {\n  const providers: Array<Provider<unknown>> = [];\n  for (const providerRegistration of registeredProviders) {\n    if (!Root.Runtime.Runtime.isDescriptorEnabled(\n            {experiment: providerRegistration.experiment, condition: undefined})) {\n      continue;\n    }\n    if (providerRegistration.contextTypes) {\n      for (const contextType of providerRegistration.contextTypes()) {\n        if (target instanceof contextType) {\n          providers.push(await providerRegistration.loadProvider());\n        }\n      }\n    }\n  }\n  return providers;\n}\n\n/**\n * Stores all registered context menu item registrations.\n */\nconst registeredItemsProviders: ContextMenuItemRegistration[] = [];\n\n/**\n * Registers a new context menu item.\n * These items are typically actions that appear in predefined locations in the menu.\n * @param registration The item registration object, specifying its location, action ID, and optional order/experiment.\n */\nexport function registerItem(registration: ContextMenuItemRegistration): void {\n  registeredItemsProviders.push(registration);\n}\n\n/**\n * Attempts to remove a registered context menu item.\n * The item is identified by its `actionId` and `location`.\n * @param registration The registration details of the item to remove.\n * @returns `true` if the item was found and removed, `false` otherwise.\n */\nexport function maybeRemoveItem(registration: ContextMenuItemRegistration): boolean {\n  const itemIndex = registeredItemsProviders.findIndex(\n      item => item.actionId === registration.actionId && item.location === registration.location);\n  if (itemIndex < 0) {\n    return false;\n  }\n  registeredItemsProviders.splice(itemIndex, 1);\n  return true;\n}\n\n/**\n * Retrieves all currently registered context menu items.\n * @returns An array of `ContextMenuItemRegistration` objects.\n */\nfunction getRegisteredItems(): ContextMenuItemRegistration[] {\n  return registeredItemsProviders;\n}\n\n/**\n * Defines specific locations within the DevTools UI where context menu items can be registered.\n */\nexport const enum ItemLocation {\n  DEVICE_MODE_MENU_SAVE = 'deviceModeMenu/save',\n  MAIN_MENU = 'mainMenu',\n  MAIN_MENU_DEFAULT = 'mainMenu/default',\n  MAIN_MENU_FOOTER = 'mainMenu/footer',\n  MAIN_MENU_HELP_DEFAULT = 'mainMenuHelp/default',\n  NAVIGATOR_MENU_DEFAULT = 'navigatorMenu/default',\n  PROFILER_MENU_DEFAULT = 'profilerMenu/default',\n  TIMELINE_MENU_OPEN = 'timelineMenu/open',\n}\n\nexport interface ProviderRegistration<T> {\n  /** A function that returns an array of constructor functions that this provider applies to. */\n  contextTypes: () => Array<abstract new(...any: any[]) => T>;\n  /** A function that asynchronously loads the provider instance. */\n  loadProvider: () => Promise<Provider<T>>;\n  /** Optional. The experiment that enables this provider. */\n  experiment?: Root.Runtime.ExperimentName;\n}\n\nexport interface ContextMenuItemRegistration {\n  /** The location in the menu where this item should appear. */\n  location: ItemLocation;\n  /** The ID of the action to be triggered by this item. */\n  actionId: string;\n  /** Optional. A number used for sorting items within the same location. Lower numbers appear first. */\n  order?: number;\n  /** Optional. The experiment that enables this item. */\n  experiment?: Root.Runtime.ExperimentName;\n}\n"]}