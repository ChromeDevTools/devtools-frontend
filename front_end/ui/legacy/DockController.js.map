{"version":3,"file":"DockController.js","sourceRoot":"","sources":["../../../../../../front_end/ui/legacy/DockController.ts"],"names":[],"mappings":"AAAA,sCAAsC;AACtC,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,MAAM,MAAM,6BAA6B,CAAC;AACtD,OAAO,KAAK,IAAI,MAAM,yBAAyB,CAAC;AAChD,OAAO,KAAK,IAAI,MAAM,yBAAyB,CAAC;AAChD,OAAO,KAAK,aAAa,MAAM,2CAA2C,CAAC;AAG3E,OAAO,EAAC,aAAa,EAAC,MAAM,gBAAgB,CAAC;AAE7C,OAAO,EAAgB,aAAa,EAAmB,MAAM,cAAc,CAAC;AAE5E,MAAM,SAAS,GAAG;IAChB;;OAEG;IACH,KAAK,EAAE,OAAO;IACd;;OAEG;IACH,gBAAgB,EAAE,sBAAsB;IACxC;;;OAGG;IACH,gBAAgB,EAAE,6BAA6B;CACvC,CAAC;AACX,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,6BAA6B,EAAE,SAAS,CAAC,CAAC;AACnF,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AACtE,IAAI,sBAAsC,CAAC;AAE3C,MAAM,OAAO,cAAe,SAAQ,MAAM,CAAC,aAAa,CAAC,aAAyB;IAChF,QAAQ,CAAU;IACT,WAAW,CAAgB;IACnB,uBAAuB,CAAqC;IAC5D,oBAAoB,CAAqC;IAC1E,SAAS,GAAwB,SAAS,CAAC;IAE3C,YAAY,OAAgB;QAC1B,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;QAExB,IAAI,CAAC,WAAW,GAAG,IAAI,aAAa,CAAC,UAAU,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,OAAO,CAAC,CAAC;QAC3E,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,YAAY,CAAC,OAAO,EAAE,GAAG,aAAa,CAAC,KAAK,EAAE,CAAC,KAAK,CAAC,EAAC,KAAK,EAAE,IAAI,EAAC,CAAC,EAAE,CAAC,CAAC;QAChG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;QACzD,IAAI,CAAC,WAAW,CAAC,gBAAgB,2CAE7B,IAAI,CAAC,qBAAqB,CAAC,6BAA6B,CAAC,WAAW,CAAC,IAAI,CACrE,IAAI,CAAC,qBAAqB,CAAC,6BAA6B,CAAC,CAAC,CAAC;QAEnE,IAAI,CAAC,uBAAuB,GAAG,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC;QACrG,IAAI,CAAC,oBAAoB,GAAG,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,aAAa,CAAC,iBAAiB,kCAAmB,CAAC;QAEnH,IAAI,CAAC,OAAO,EAAE,CAAC;YACb,IAAI,CAAC,SAAS,sCAAqB,CAAC;YACpC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;YACnC,OAAO;QACT,CAAC;QAED,IAAI,CAAC,uBAAuB,CAAC,iBAAiB,CAAC,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;QAC3E,IAAI,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,uBAAuB,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC;YAC9D,IAAI,CAAC,uBAAuB,CAAC,GAAG,+BAAiB,CAAC;QACpD,CAAC;QACD,IAAI,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,oBAAoB,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC;YAC3D,IAAI,CAAC,uBAAuB,CAAC,GAAG,iCAAkB,CAAC;QACrD,CAAC;IACH,CAAC;IAED,MAAM,CAAC,QAAQ,CAAC,OAGZ,EAAC,QAAQ,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAC;QAClC,MAAM,EAAC,QAAQ,EAAE,OAAO,EAAC,GAAG,IAAI,CAAC;QACjC,IAAI,CAAC,sBAAsB,IAAI,QAAQ,EAAE,CAAC;YACxC,sBAAsB,GAAG,IAAI,cAAc,CAAC,OAAO,CAAC,CAAC;QACvD,CAAC;QAED,OAAO,sBAAsB,CAAC;IAChC,CAAC;IAED,UAAU;QACR,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;YACnB,OAAO;QACT,CAAC;QAED,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAEO,eAAe;QACrB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,uBAAuB,CAAC,GAAG,EAAE,CAAC,CAAC;IACvD,CAAC;IAED,QAAQ;QACN,OAAO,IAAI,CAAC,SAAS,CAAC;IACxB,CAAC;IAED;;;;;OAKG;IACH,OAAO;QACL,OAAO,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;IAED,UAAU;QACR,OAAO,IAAI,CAAC,SAAS,kCAAoB,IAAI,IAAI,CAAC,SAAS,gCAAmB,CAAC;IACjF,CAAC;IAED,WAAW,CAAC,QAAmB;QAC7B,IAAI,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC;YACpC,iDAAiD;YACjD,QAAQ,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;QACvB,CAAC;QAED,IAAI,IAAI,CAAC,SAAS,KAAK,QAAQ,EAAE,CAAC;YAChC,OAAO;QACT,CAAC;QAED,IAAI,IAAI,CAAC,SAAS,KAAK,SAAS,EAAE,CAAC;YACjC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACjD,CAAC;QACD,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QAEtC,IAAI,IAAI,CAAC,SAAS,EAAE,CAAC;YACnB,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAChD,CAAC;QAED,MAAM,SAAS,GAAG,EAAC,IAAI,EAAE,IAAI,CAAC,SAAS,EAAE,EAAE,EAAE,QAAQ,EAAC,CAAC;QACvD,IAAI,CAAC,wBAAwB,gEAAkC,SAAS,CAAC,CAAC;QAC1E,OAAO,CAAC,SAAS,CAAC,4BAA4B,CAAC,CAAC;QAChD,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC1B,IAAI,CAAC,uBAAuB,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QAC3C,IAAI,CAAC,qBAAqB,CAAC,6BAA6B,CAAC,WAAW,CAChE,QAAQ,wCAAuB,EAAE,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC,CAAC;QACrF,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,wCAAuB,CAAC,CAAC;QACnE,IAAI,CAAC,wBAAwB,mDAA2B,SAAS,CAAC,CAAC;IACrE,CAAC;IAEO,mBAAmB,CAAC,SAAsB;QAChD,IAAI,CAAC,wBAAwB,8DAAiC,SAAS,CAAC,CAAC;QACzE,IAAI,CAAC,oBAAoB,EAAE,CAAC;IAC9B,CAAC;IAED,cAAc;QACZ,IAAI,IAAI,CAAC,oBAAoB,CAAC,GAAG,EAAE,KAAK,IAAI,CAAC,uBAAuB,CAAC,GAAG,EAAE,EAAE,CAAC;YAC3E,MAAM,KAAK,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,uBAAuB,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC;YACtE,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;QACrE,CAAC;QACD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,oBAAoB,CAAC,GAAG,EAAE,CAAC,CAAC;IACpD,CAAC;IAED,oBAAoB;QAClB,IAAI,IAAI,CAAC,SAAS,wCAAuB,EAAE,CAAC;YAC1C,aAAa,CAAC,KAAK,CAAC,UAAU,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC,CAAC;QAC9D,CAAC;aAAM,CAAC;YACN,aAAa,CAAC,KAAK,CAAC,UAAU,CAAC,SAAS,CAAC,gBAAgB,EAAE,EAAC,GAAG,EAAE,IAAI,CAAC,SAAS,IAAI,EAAE,EAAC,CAAC,CAAC,CAAC;QAC3F,CAAC;IACH,CAAC;CACF;AASD,MAAM,MAAM,GAAG,kIAAuE,CAAC;AAuBvF,MAAM,OAAO,wBAAwB;IACnC,YAAY,CAAC,QAAiB,EAAE,SAAiB;QAC/C,cAAc,CAAC,QAAQ,EAAE,CAAC,cAAc,EAAE,CAAC;QAC3C,OAAO,IAAI,CAAC;IACd,CAAC;CACF;AAED,IAAI,2BAAgD,CAAC;AAErD,MAAM,OAAO,mBAAmB;IAC9B,MAAM,CAAC,QAAQ,CAAC,OAEZ,EAAC,QAAQ,EAAE,IAAI,EAAC;QAClB,MAAM,EAAC,QAAQ,EAAC,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,2BAA2B,IAAI,QAAQ,EAAE,CAAC;YAC7C,2BAA2B,GAAG,IAAI,mBAAmB,EAAE,CAAC;QAC1D,CAAC;QAED,OAAO,2BAA2B,CAAC;IACrC,CAAC;IAED,IAAI;QACF,OAAO,cAAc,CAAC,QAAQ,EAAE,CAAC,WAAW,CAAC;IAC/C,CAAC;CACF","sourcesContent":["// Copyright 2012 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport type {ActionDelegate} from './ActionRegistration.js';\nimport {LiveAnnouncer} from './ARIAUtils.js';\nimport type {Context} from './Context.js';\nimport {type Provider, ToolbarButton, type ToolbarItem} from './Toolbar.js';\n\nconst UIStrings = {\n  /**\n   * @description Text to close something\n   */\n  close: 'Close',\n  /**\n   * @description Text announced when the DevTools are undocked\n   */\n  devtoolsUndocked: 'DevTools is undocked',\n  /**\n   * @description Text announced when the DevTools are docked to the left, right, or bottom of the browser tab\n   * @example {bottom} PH1\n   */\n  devToolsDockedTo: 'DevTools is docked to {PH1}',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('ui/legacy/DockController.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nlet dockControllerInstance: DockController;\n\nexport class DockController extends Common.ObjectWrapper.ObjectWrapper<EventTypes> {\n  #canDock: boolean;\n  readonly closeButton: ToolbarButton;\n  private readonly currentDockStateSetting: Common.Settings.Setting<DockState>;\n  private readonly lastDockStateSetting: Common.Settings.Setting<DockState>;\n  #dockSide: DockState|undefined = undefined;\n\n  constructor(canDock: boolean) {\n    super();\n    this.#canDock = canDock;\n\n    this.closeButton = new ToolbarButton(i18nString(UIStrings.close), 'cross');\n    this.closeButton.element.setAttribute('jslog', `${VisualLogging.close().track({click: true})}`);\n    this.closeButton.element.classList.add('close-devtools');\n    this.closeButton.addEventListener(\n        ToolbarButton.Events.CLICK,\n        Host.InspectorFrontendHost.InspectorFrontendHostInstance.closeWindow.bind(\n            Host.InspectorFrontendHost.InspectorFrontendHostInstance));\n\n    this.currentDockStateSetting = Common.Settings.Settings.instance().moduleSetting('currentDockState');\n    this.lastDockStateSetting = Common.Settings.Settings.instance().createSetting('last-dock-state', DockState.BOTTOM);\n\n    if (!canDock) {\n      this.#dockSide = DockState.UNDOCKED;\n      this.closeButton.setVisible(false);\n      return;\n    }\n\n    this.currentDockStateSetting.addChangeListener(this.dockSideChanged, this);\n    if (states.indexOf(this.currentDockStateSetting.get()) === -1) {\n      this.currentDockStateSetting.set(DockState.RIGHT);\n    }\n    if (states.indexOf(this.lastDockStateSetting.get()) === -1) {\n      this.currentDockStateSetting.set(DockState.BOTTOM);\n    }\n  }\n\n  static instance(opts: {\n    forceNew: boolean|null,\n    canDock: boolean,\n  } = {forceNew: null, canDock: false}): DockController {\n    const {forceNew, canDock} = opts;\n    if (!dockControllerInstance || forceNew) {\n      dockControllerInstance = new DockController(canDock);\n    }\n\n    return dockControllerInstance;\n  }\n\n  initialize(): void {\n    if (!this.#canDock) {\n      return;\n    }\n\n    this.dockSideChanged();\n  }\n\n  private dockSideChanged(): void {\n    this.setDockSide(this.currentDockStateSetting.get());\n  }\n\n  dockSide(): DockState|undefined {\n    return this.#dockSide;\n  }\n\n  /**\n   * Whether the DevTools can be docked, used to determine if we show docking UI.\n   * Set via `Root.Runtime.Runtime.queryParam('can_dock')`. See https://cs.chromium.org/can_dock+f:window\n   *\n   * Shouldn't be used as a heuristic for target connection state.\n   */\n  canDock(): boolean {\n    return this.#canDock;\n  }\n\n  isVertical(): boolean {\n    return this.#dockSide === DockState.RIGHT || this.#dockSide === DockState.LEFT;\n  }\n\n  setDockSide(dockSide: DockState): void {\n    if (states.indexOf(dockSide) === -1) {\n      // If the side is invalid, default to a valid one\n      dockSide = states[0];\n    }\n\n    if (this.#dockSide === dockSide) {\n      return;\n    }\n\n    if (this.#dockSide !== undefined) {\n      document.body.classList.remove(this.#dockSide);\n    }\n    document.body.classList.add(dockSide);\n\n    if (this.#dockSide) {\n      this.lastDockStateSetting.set(this.#dockSide);\n    }\n\n    const eventData = {from: this.#dockSide, to: dockSide};\n    this.dispatchEventToListeners(Events.BEFORE_DOCK_SIDE_CHANGED, eventData);\n    console.timeStamp('DockController.setIsDocked');\n    this.#dockSide = dockSide;\n    this.currentDockStateSetting.set(dockSide);\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.setIsDocked(\n        dockSide !== DockState.UNDOCKED, this.setIsDockedResponse.bind(this, eventData));\n    this.closeButton.setVisible(this.#dockSide !== DockState.UNDOCKED);\n    this.dispatchEventToListeners(Events.DOCK_SIDE_CHANGED, eventData);\n  }\n\n  private setIsDockedResponse(eventData: ChangeEvent): void {\n    this.dispatchEventToListeners(Events.AFTER_DOCK_SIDE_CHANGED, eventData);\n    this.announceDockLocation();\n  }\n\n  toggleDockSide(): void {\n    if (this.lastDockStateSetting.get() === this.currentDockStateSetting.get()) {\n      const index = states.indexOf(this.currentDockStateSetting.get()) || 0;\n      this.lastDockStateSetting.set(states[(index + 1) % states.length]);\n    }\n    this.setDockSide(this.lastDockStateSetting.get());\n  }\n\n  announceDockLocation(): void {\n    if (this.#dockSide === DockState.UNDOCKED) {\n      LiveAnnouncer.alert(i18nString(UIStrings.devtoolsUndocked));\n    } else {\n      LiveAnnouncer.alert(i18nString(UIStrings.devToolsDockedTo, {PH1: this.#dockSide || ''}));\n    }\n  }\n}\n\nexport const enum DockState {\n  BOTTOM = 'bottom',\n  RIGHT = 'right',\n  LEFT = 'left',\n  UNDOCKED = 'undocked',\n}\n\nconst states = [DockState.RIGHT, DockState.BOTTOM, DockState.LEFT, DockState.UNDOCKED];\n\n// Use BeforeDockSideChanged to do something before all the UI bits are updated,\n// DockSideChanged to update UI, and AfterDockSideChanged to perform actions\n// after frontend is docked/undocked in the browser.\n\nexport const enum Events {\n  BEFORE_DOCK_SIDE_CHANGED = 'BeforeDockSideChanged',\n  DOCK_SIDE_CHANGED = 'DockSideChanged',\n  AFTER_DOCK_SIDE_CHANGED = 'AfterDockSideChanged',\n}\n\nexport interface ChangeEvent {\n  from: DockState|undefined;\n  to: DockState;\n}\n\nexport interface EventTypes {\n  [Events.BEFORE_DOCK_SIDE_CHANGED]: ChangeEvent;\n  [Events.DOCK_SIDE_CHANGED]: ChangeEvent;\n  [Events.AFTER_DOCK_SIDE_CHANGED]: ChangeEvent;\n}\n\nexport class ToggleDockActionDelegate implements ActionDelegate {\n  handleAction(_context: Context, _actionId: string): boolean {\n    DockController.instance().toggleDockSide();\n    return true;\n  }\n}\n\nlet closeButtonProviderInstance: CloseButtonProvider;\n\nexport class CloseButtonProvider implements Provider {\n  static instance(opts: {\n    forceNew: boolean|null,\n  } = {forceNew: null}): CloseButtonProvider {\n    const {forceNew} = opts;\n    if (!closeButtonProviderInstance || forceNew) {\n      closeButtonProviderInstance = new CloseButtonProvider();\n    }\n\n    return closeButtonProviderInstance;\n  }\n\n  item(): ToolbarItem|null {\n    return DockController.instance().closeButton;\n  }\n}\n"]}