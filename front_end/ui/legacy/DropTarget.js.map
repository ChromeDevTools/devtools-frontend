{"version":3,"file":"DropTarget.js","sourceRoot":"","sources":["../../../../../../front_end/ui/legacy/DropTarget.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2015 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable @devtools/no-imperative-dom-api */\n\nimport dropTargetStyles from './dropTarget.css.js';\nimport {createShadowRootWithCoreStyles} from './UIUtils.js';\n\nexport class DropTarget {\n  private element: HTMLElement;\n  private readonly transferTypes: Array<{\n    kind: string,\n    type: RegExp,\n  }>;\n  private messageText: string;\n  private readonly handleDrop: (arg0: DataTransfer) => void;\n  private enabled: boolean;\n  private dragMaskElement: HTMLElement|null;\n\n  constructor(\n      element: HTMLElement, transferTypes: Array<{\n        kind: string,\n        type: RegExp,\n      }>,\n      messageText: string, handleDrop: (arg0: DataTransfer) => void) {\n    element.addEventListener('dragenter', this.onDragEnter.bind(this), true);\n    element.addEventListener('dragover', this.onDragOver.bind(this), true);\n    this.element = element;\n    this.transferTypes = transferTypes;\n    this.messageText = messageText;\n    this.handleDrop = handleDrop;\n    this.enabled = true;\n    this.dragMaskElement = null;\n  }\n\n  setEnabled(enabled: boolean): void {\n    this.enabled = enabled;\n  }\n\n  private onDragEnter(event: DragEvent): void {\n    if (this.enabled && this.hasMatchingType(event)) {\n      event.consume(true);\n    }\n  }\n\n  private hasMatchingType(event: DragEvent): boolean {\n    if (!event.dataTransfer) {\n      return false;\n    }\n    for (const transferType of this.transferTypes) {\n      const found = Array.from(event.dataTransfer.items).find(item => {\n        return transferType.kind === item.kind && Boolean(transferType.type.exec(item.type));\n      });\n      if (found) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  private onDragOver(event: DragEvent): void {\n    if (!this.enabled || !this.hasMatchingType(event)) {\n      return;\n    }\n    if (event.dataTransfer) {\n      event.dataTransfer.dropEffect = 'copy';\n    }\n    event.consume(true);\n    if (this.dragMaskElement) {\n      return;\n    }\n    this.dragMaskElement = this.element.createChild('div', '');\n    const shadowRoot = createShadowRootWithCoreStyles(this.dragMaskElement, {cssFile: dropTargetStyles});\n    shadowRoot.createChild('div', 'drop-target-message').textContent = this.messageText;\n    this.dragMaskElement.addEventListener('drop', this.onDrop.bind(this), true);\n    this.dragMaskElement.addEventListener('dragleave', this.onDragLeave.bind(this), true);\n  }\n\n  private onDrop(event: DragEvent): void {\n    event.consume(true);\n    this.removeMask();\n    if (this.enabled && event.dataTransfer) {\n      this.handleDrop(event.dataTransfer);\n    }\n  }\n\n  private onDragLeave(event: Event): void {\n    event.consume(true);\n    this.removeMask();\n  }\n\n  private removeMask(): void {\n    if (this.dragMaskElement) {\n      this.dragMaskElement.remove();\n      this.dragMaskElement = null;\n    }\n  }\n}\n\nexport const Type = {\n  URI: {kind: 'string', type: /text\\/uri-list/},\n  Folder: {kind: 'file', type: /$^/},\n  File: {kind: 'file', type: /.*/},\n  WebFile: {kind: 'file', type: /[\\w]+/},\n  ImageFile: {kind: 'file', type: /image\\/.*/},\n};\n"]}