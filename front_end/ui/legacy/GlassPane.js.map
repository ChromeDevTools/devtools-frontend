{"version":3,"file":"GlassPane.js","sourceRoot":"","sources":["../../../../../../front_end/ui/legacy/GlassPane.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2017 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable @devtools/no-imperative-dom-api */\nimport type {Size} from '../../models/geometry/geometry.js';\n\nimport glassPaneStyles from './glassPane.css.js';\nimport {deepElementFromEvent, measuredScrollbarWidth} from './UIUtils.js';\nimport {Widget} from './Widget.js';\n\nexport class GlassPane {\n  readonly #widget;\n\n  element: typeof Widget.prototype.element;\n  contentElement: typeof Widget.prototype.contentElement;\n  private readonly onMouseDownBound: (event: Event) => void;\n  private onClickOutsideCallback: ((arg0: Event) => void)|null = null;\n  #onHideCallback: (() => void)|null = null;\n  private maxSize: Size|null = null;\n  private positionX: number|null = null;\n  private positionY: number|null = null;\n  private anchorBox: AnchorBox|null = null;\n  private anchorBehavior = AnchorBehavior.PREFER_TOP;\n  private sizeBehavior = SizeBehavior.SET_EXACT_SIZE;\n  private marginBehavior = MarginBehavior.DEFAULT_MARGIN;\n  #ignoreLeftMargin = false;\n\n  constructor(jslog?: string) {\n    this.#widget = new Widget({jslog, useShadowDom: true});\n    this.#widget.markAsRoot();\n    this.#widget.onDetach = this.#onDetach.bind(this);\n    this.element = this.#widget.element;\n    this.contentElement = this.#widget.contentElement;\n\n    this.registerRequiredCSS(glassPaneStyles);\n    this.setPointerEventsBehavior(PointerEventsBehavior.PIERCE_GLASS_PANE);\n\n    this.onMouseDownBound = this.onMouseDown.bind(this);\n  }\n\n  setJsLog(jslog: string): void {\n    this.contentElement.setAttribute('jslog', jslog);\n  }\n\n  isShowing(): boolean {\n    return this.#widget.isShowing();\n  }\n\n  registerRequiredCSS(...cssFiles: Array<string&{_tag: 'CSS-in-JS'}>): void {\n    this.#widget.registerRequiredCSS(...cssFiles);\n  }\n\n  setDefaultFocusedElement(element: Element|null): void {\n    this.#widget.setDefaultFocusedElement(element);\n  }\n\n  setDimmed(dimmed: boolean): void {\n    this.element.classList.toggle('dimmed-pane', dimmed);\n  }\n\n  setPointerEventsBehavior(pointerEventsBehavior: PointerEventsBehavior): void {\n    this.element.classList.toggle(\n        'no-pointer-events', pointerEventsBehavior !== PointerEventsBehavior.BLOCKED_BY_GLASS_PANE);\n    this.contentElement.classList.toggle(\n        'no-pointer-events', pointerEventsBehavior === PointerEventsBehavior.PIERCE_CONTENTS);\n  }\n\n  setOutsideClickCallback(callback: ((arg0: Event) => void)|null): void {\n    this.onClickOutsideCallback = callback;\n  }\n\n  setOnHideCallback(cb: () => void): void {\n    this.#onHideCallback = cb;\n  }\n\n  setMaxContentSize(size: Size|null): void {\n    this.maxSize = size;\n    this.positionContent();\n  }\n\n  setSizeBehavior(sizeBehavior: SizeBehavior): void {\n    this.sizeBehavior = sizeBehavior;\n    this.positionContent();\n  }\n\n  setContentPosition(x: number|null, y: number|null): void {\n    this.positionX = x;\n    this.positionY = y;\n    this.positionContent();\n  }\n\n  setContentAnchorBox(anchorBox: AnchorBox|null): void {\n    this.anchorBox = anchorBox;\n    this.positionContent();\n  }\n\n  setAnchorBehavior(behavior: AnchorBehavior): void {\n    this.anchorBehavior = behavior;\n  }\n\n  setMarginBehavior(behavior: MarginBehavior): void {\n    this.marginBehavior = behavior;\n  }\n\n  setIgnoreLeftMargin(ignore: boolean): void {\n    this.#ignoreLeftMargin = ignore;\n  }\n\n  show(document: Document): void {\n    if (this.isShowing()) {\n      return;\n    }\n    // TODO(crbug.com/1006759): Extract the magic number\n    // Deliberately starts with 3000 to hide other z-indexed elements below.\n    this.element.style.zIndex = `${3000 + 1000 * panes.size}`;\n    this.element.setAttribute('data-devtools-glass-pane', '');\n    document.body.addEventListener('mousedown', this.onMouseDownBound, true);\n    document.body.addEventListener('pointerdown', this.onMouseDownBound, true);\n    this.#widget.show(document.body);\n    panes.add(this);\n    this.positionContent();\n  }\n\n  hide(): void {\n    if (!this.isShowing()) {\n      return;\n    }\n    this.#widget.detach();\n    if (this.#onHideCallback) {\n      this.#onHideCallback();\n    }\n  }\n\n  #onDetach(): void {\n    panes.delete(this);\n    this.element.ownerDocument.body.removeEventListener('mousedown', this.onMouseDownBound, true);\n    this.element.ownerDocument.body.removeEventListener('pointerdown', this.onMouseDownBound, true);\n  }\n\n  private onMouseDown(event: Event): void {\n    if (!this.onClickOutsideCallback) {\n      return;\n    }\n    const node = deepElementFromEvent(event);\n    if (!node || this.contentElement.isSelfOrAncestor(node)) {\n      return;\n    }\n    this.onClickOutsideCallback.call(null, event);\n  }\n\n  positionContent(): void {\n    if (!this.isShowing()) {\n      return;\n    }\n\n    const gutterSize = this.marginBehavior === MarginBehavior.NO_MARGIN ? 0 : 3;\n    const scrollbarSize = measuredScrollbarWidth(this.element.ownerDocument);\n    const offsetSize = 10;\n\n    const container = (containers.get((this.element.ownerDocument))) as HTMLElement;\n    if (this.sizeBehavior === SizeBehavior.MEASURE_CONTENT) {\n      this.contentElement.positionAt(0, 0);\n      this.contentElement.style.width = '';\n      this.contentElement.style.maxWidth = '';\n      this.contentElement.style.height = '';\n      this.contentElement.style.maxHeight = '';\n    }\n\n    const containerWidth = container.offsetWidth;\n    const containerHeight = container.offsetHeight;\n\n    let width = containerWidth - gutterSize * 2;\n    let height = containerHeight - gutterSize * 2;\n    let positionX = gutterSize;\n    let positionY = gutterSize;\n\n    if (this.maxSize) {\n      width = Math.min(width, this.maxSize.width);\n      height = Math.min(height, this.maxSize.height);\n    }\n\n    if (this.sizeBehavior === SizeBehavior.MEASURE_CONTENT) {\n      const measuredRect = this.contentElement.getBoundingClientRect();\n      const widthOverflow = height < measuredRect.height ? scrollbarSize : 0;\n      const heightOverflow = width < measuredRect.width ? scrollbarSize : 0;\n      width = Math.min(width, measuredRect.width + widthOverflow);\n      height = Math.min(height, measuredRect.height + heightOverflow);\n    }\n\n    if (this.anchorBox) {\n      const anchorBox = this.anchorBox.relativeToElement(container);\n      let behavior: AnchorBehavior.PREFER_BOTTOM|AnchorBehavior.PREFER_TOP|AnchorBehavior.PREFER_RIGHT|\n          AnchorBehavior.PREFER_LEFT|AnchorBehavior = this.anchorBehavior;\n\n      if (behavior === AnchorBehavior.PREFER_TOP || behavior === AnchorBehavior.PREFER_BOTTOM) {\n        const top = anchorBox.y - 2 * gutterSize;\n        const bottom = containerHeight - anchorBox.y - anchorBox.height - 2 * gutterSize;\n        if (behavior === AnchorBehavior.PREFER_TOP && top < height && bottom > top) {\n          behavior = AnchorBehavior.PREFER_BOTTOM;\n        }\n        if (behavior === AnchorBehavior.PREFER_BOTTOM && bottom < height && top > bottom) {\n          behavior = AnchorBehavior.PREFER_TOP;\n        }\n\n        let enoughHeight = true;\n        if (behavior === AnchorBehavior.PREFER_TOP) {\n          positionY = Math.max(gutterSize, anchorBox.y - height - gutterSize);\n          const spaceTop = anchorBox.y - positionY - gutterSize;\n          if (this.sizeBehavior === SizeBehavior.MEASURE_CONTENT) {\n            if (height > spaceTop) {\n              enoughHeight = false;\n            }\n          } else {\n            height = Math.min(height, spaceTop);\n          }\n        } else {\n          positionY = anchorBox.y + anchorBox.height + gutterSize;\n          const spaceBottom = containerHeight - positionY - gutterSize;\n          if (this.sizeBehavior === SizeBehavior.MEASURE_CONTENT) {\n            if (height > spaceBottom) {\n              positionY = containerHeight - gutterSize - height;\n              enoughHeight = false;\n            }\n          } else {\n            height = Math.min(height, spaceBottom);\n          }\n        }\n\n        const naturalPositionX = Math.min(anchorBox.x, containerWidth - width - gutterSize);\n        positionX = Math.max(gutterSize, naturalPositionX);\n        if (this.#ignoreLeftMargin && gutterSize > naturalPositionX) {\n          positionX = 0;\n        }\n\n        if (!enoughHeight) {\n          positionX = Math.min(positionX + offsetSize, containerWidth - width - gutterSize);\n        } else if (positionX - offsetSize >= gutterSize) {\n          positionX -= offsetSize;\n        }\n        width = Math.min(width, containerWidth - positionX - gutterSize);\n      } else {\n        const left = anchorBox.x - 2 * gutterSize;\n        const right = containerWidth - anchorBox.x - anchorBox.width - 2 * gutterSize;\n        if (behavior === AnchorBehavior.PREFER_LEFT && left < width && right > left) {\n          behavior = AnchorBehavior.PREFER_RIGHT;\n        }\n        if (behavior === AnchorBehavior.PREFER_RIGHT && right < width && left > right) {\n          behavior = AnchorBehavior.PREFER_LEFT;\n        }\n\n        let enoughWidth = true;\n        if (behavior === AnchorBehavior.PREFER_LEFT) {\n          positionX = Math.max(gutterSize, anchorBox.x - width - gutterSize);\n          const spaceLeft = anchorBox.x - positionX - gutterSize;\n          if (this.sizeBehavior === SizeBehavior.MEASURE_CONTENT) {\n            if (width > spaceLeft) {\n              enoughWidth = false;\n            }\n          } else {\n            width = Math.min(width, spaceLeft);\n          }\n        } else {\n          positionX = anchorBox.x + anchorBox.width + gutterSize;\n          const spaceRight = containerWidth - positionX - gutterSize;\n          if (this.sizeBehavior === SizeBehavior.MEASURE_CONTENT) {\n            if (width > spaceRight) {\n              positionX = containerWidth - gutterSize - width;\n              enoughWidth = false;\n            }\n          } else {\n            width = Math.min(width, spaceRight);\n          }\n        }\n\n        positionY = Math.max(gutterSize, Math.min(anchorBox.y, containerHeight - height - gutterSize));\n        if (!enoughWidth) {\n          positionY = Math.min(positionY + offsetSize, containerHeight - height - gutterSize);\n        } else if (positionY - offsetSize >= gutterSize) {\n          positionY -= offsetSize;\n        }\n        height = Math.min(height, containerHeight - positionY - gutterSize);\n      }\n    } else {\n      positionX = this.positionX !== null ? this.positionX : (containerWidth - width) / 2;\n      positionY = this.positionY !== null ? this.positionY : (containerHeight - height) / 2;\n      width = Math.min(width, containerWidth - positionX - gutterSize);\n      height = Math.min(height, containerHeight - positionY - gutterSize);\n    }\n\n    this.contentElement.style.width = width + 'px';\n    if (this.sizeBehavior === SizeBehavior.SET_EXACT_WIDTH_MAX_HEIGHT) {\n      this.contentElement.style.maxHeight = height + 'px';\n    } else {\n      this.contentElement.style.height = height + 'px';\n    }\n\n    this.contentElement.positionAt(positionX, positionY, container);\n    this.#widget.doResize();\n  }\n\n  widget(): Widget {\n    return this.#widget;\n  }\n\n  static setContainer(element: Element): void {\n    containers.set((element.ownerDocument), element);\n    GlassPane.containerMoved(element);\n  }\n\n  static container(document: Document): Element {\n    return containers.get(document) as Element;\n  }\n\n  static containerMoved(element: Element): void {\n    for (const pane of panes) {\n      if (pane.isShowing() && pane.element.ownerDocument === element.ownerDocument) {\n        pane.positionContent();\n      }\n    }\n  }\n}\n\nexport const enum PointerEventsBehavior {\n  BLOCKED_BY_GLASS_PANE = 'BlockedByGlassPane',\n  PIERCE_GLASS_PANE = 'PierceGlassPane',\n  PIERCE_CONTENTS = 'PierceContents',\n}\n\nexport const enum AnchorBehavior {\n  PREFER_TOP = 'PreferTop',\n  PREFER_BOTTOM = 'PreferBottom',\n  PREFER_LEFT = 'PreferLeft',\n  PREFER_RIGHT = 'PreferRight',\n}\n\nexport const enum SizeBehavior {\n  SET_EXACT_SIZE = 'SetExactSize',\n  SET_EXACT_WIDTH_MAX_HEIGHT = 'SetExactWidthMaxHeight',\n  MEASURE_CONTENT = 'MeasureContent',\n}\n\nexport const enum MarginBehavior {\n  DEFAULT_MARGIN = 'DefaultMargin',\n  NO_MARGIN = 'NoMargin',\n}\n\nconst containers = new Map<Document, Element>();\nconst panes = new Set<GlassPane>();\n\n/** Exported for layout tests. **/\nexport const GlassPanePanes = panes;\n"]}