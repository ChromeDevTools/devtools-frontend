{"version":3,"file":"InplaceEditor.js","sourceRoot":"","sources":["../../../../../../front_end/ui/legacy/InplaceEditor.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2014 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Platform from '../../core/platform/platform.js';\n\nimport * as ARIAUtils from './ARIAUtils.js';\nimport {Keys} from './KeyboardShortcut.js';\nimport {ElementFocusRestorer, markBeingEdited} from './UIUtils.js';\n\nlet inplaceEditorInstance: InplaceEditor<unknown>|null = null;\n\nexport class InplaceEditor<T> {\n  private focusRestorer?: ElementFocusRestorer;\n  static startEditing<T>(element: Element, config: Config<T>): Controller|null {\n    if (!inplaceEditorInstance) {\n      inplaceEditorInstance = new InplaceEditor();\n    }\n    return inplaceEditorInstance.startEditing(element, config as Config<unknown>);\n  }\n\n  editorContent(editingContext: EditingContext<T>): string {\n    const element = editingContext.element;\n    if (element.tagName === 'INPUT' && (element as HTMLInputElement).type === 'text') {\n      return (element as HTMLInputElement).value;\n    }\n\n    return element.textContent || '';\n  }\n\n  setUpEditor(editingContext: EditingContext<T>): void {\n    const element = (editingContext.element as HTMLElement);\n    element.classList.add('editing');\n    element.setAttribute('contenteditable', 'plaintext-only');\n\n    const oldRole = element.getAttribute('role');\n    ARIAUtils.markAsTextBox(element);\n    editingContext.oldRole = oldRole;\n\n    // Using element.getAttribute('tabIndex') instead of element.tabIndex so\n    // that we do not get a default value if the tabIndex attribute is not set.\n    const oldTabIndex = element.getAttribute('tabIndex');\n    if (typeof oldTabIndex !== 'number' || oldTabIndex < 0) {\n      element.tabIndex = 0;\n    }\n    this.focusRestorer = new ElementFocusRestorer(element);\n    editingContext.oldTabIndex = oldTabIndex;\n  }\n\n  closeEditor(editingContext: EditingContext<T>): void {\n    const element = (editingContext.element as HTMLElement);\n    element.classList.remove('editing');\n    element.removeAttribute('contenteditable');\n\n    if (typeof editingContext.oldRole !== 'string') {\n      element.removeAttribute('role');\n    } else {\n      element.setAttribute('role', editingContext.oldRole);\n    }\n\n    if (typeof editingContext.oldTabIndex !== 'number') {\n      element.removeAttribute('tabIndex');\n    } else {\n      element.setAttribute('tabIndex', editingContext.oldTabIndex);\n    }\n    element.scrollTop = 0;\n    element.scrollLeft = 0;\n  }\n\n  cancelEditing(editingContext: EditingContext<T>): void {\n    const element = (editingContext.element as HTMLElement);\n    if (element.tagName === 'INPUT' && (element as HTMLInputElement).type === 'text') {\n      (element as HTMLInputElement).value = editingContext.oldText || '';\n    } else {\n      element.textContent = editingContext.oldText;\n    }\n  }\n\n  startEditing(element: Element, config: Config<T>): Controller|null {\n    if (!markBeingEdited(element, true)) {\n      return null;\n    }\n\n    const editingContext: EditingContext<T> = {element, config, oldRole: null, oldTabIndex: null, oldText: null};\n    const committedCallback = config.commitHandler;\n    const cancelledCallback = config.cancelHandler;\n    const pasteCallback = config.pasteHandler;\n    const context = config.context;\n    let moveDirection = '';\n    const self = this;\n\n    this.setUpEditor(editingContext);\n\n    editingContext.oldText = this.editorContent(editingContext);\n\n    function blurEventListener(e?: Event): void {\n      if (!config.blurHandler(element, e)) {\n        return;\n      }\n      editingCommitted.call(element);\n    }\n\n    function cleanUpAfterEditing(): void {\n      markBeingEdited(element, false);\n\n      element.removeEventListener('blur', blurEventListener, false);\n      element.removeEventListener('keydown', keyDownEventListener, true);\n      if (pasteCallback) {\n        element.removeEventListener('paste', pasteEventListener, true);\n      }\n\n      if (self.focusRestorer) {\n        self.focusRestorer.restore();\n      }\n      self.closeEditor(editingContext);\n    }\n\n    function editingCancelled(this: Element): void {\n      self.cancelEditing(editingContext);\n      cleanUpAfterEditing();\n      cancelledCallback(this, context);\n    }\n\n    function editingCommitted(this: Element): void {\n      cleanUpAfterEditing();\n\n      committedCallback(this, self.editorContent(editingContext), editingContext.oldText, context, moveDirection);\n      element.dispatchEvent(new Event('change'));\n    }\n\n    function defaultFinishHandler(event: KeyboardEvent): string {\n      if (event.key === 'Enter') {\n        return 'commit';\n      }\n      if (event.keyCode === Keys.Esc.code || event.key === Platform.KeyboardUtilities.ESCAPE_KEY) {\n        return 'cancel';\n      }\n      if (event.key === 'Tab') {\n        return 'move-' + (event.shiftKey ? 'backward' : 'forward');\n      }\n      return '';\n    }\n\n    function handleEditingResult(result: string|undefined, event: Event): void {\n      if (result === 'commit') {\n        editingCommitted.call(element);\n        event.consume(true);\n      } else if (result === 'cancel') {\n        editingCancelled.call(element);\n        event.consume(true);\n      } else if (result?.startsWith('move-')) {\n        moveDirection = result.substring(5);\n        if ((event as KeyboardEvent).key === 'Tab') {\n          event.consume(true);\n        }\n        blurEventListener();\n      }\n    }\n\n    function pasteEventListener(event: Event): void {\n      if (!pasteCallback) {\n        return;\n      }\n      const result = pasteCallback(event);\n      handleEditingResult(result, event);\n    }\n\n    function keyDownEventListener(event: Event): void {\n      let result = defaultFinishHandler((event as KeyboardEvent));\n      if (!result && config.postKeydownFinishHandler) {\n        const postKeydownResult = config.postKeydownFinishHandler(event);\n        if (postKeydownResult) {\n          result = postKeydownResult;\n        }\n      }\n      handleEditingResult(result, event);\n    }\n\n    element.addEventListener('blur', blurEventListener, false);\n    element.addEventListener('keydown', keyDownEventListener, true);\n    if (pasteCallback !== undefined) {\n      element.addEventListener('paste', pasteEventListener, true);\n    }\n\n    const handle = {cancel: editingCancelled.bind(element), commit: editingCommitted.bind(element)};\n    return handle;\n  }\n}\n\nexport type CommitHandler<T> =\n    (element: Element, newText: string, oldText: string|null, context: T, moveDirection: string) => void;\nexport type CancelHandler<T> = (element: Element, context: T) => void;\nexport type BlurHandler = (element: Element, event?: Event) => boolean;\n\nexport class Config<T> {\n  commitHandler: CommitHandler<T>;\n  cancelHandler: CancelHandler<T>;\n  context: T;\n  blurHandler: BlurHandler;\n  pasteHandler?: EventHandler;\n  postKeydownFinishHandler?: EventHandler;\n\n  constructor(\n      commitHandler: CommitHandler<T>,\n      cancelHandler: CancelHandler<T>,\n      context: T,\n      blurHandler: BlurHandler = () => true,\n  ) {\n    this.commitHandler = commitHandler;\n    this.cancelHandler = cancelHandler;\n    this.context = context;\n    this.blurHandler = blurHandler;\n  }\n\n  setPostKeydownFinishHandler(postKeydownFinishHandler: EventHandler): void {\n    this.postKeydownFinishHandler = postKeydownFinishHandler;\n  }\n}\n\nexport type EventHandler = (event: Event) => string|undefined;\n\nexport interface Controller {\n  cancel: () => void;\n  commit: () => void;\n}\n\nexport interface EditingContext<T> {\n  element: Element;\n  config: Config<T>;\n  oldRole: string|null;\n  oldText: string|null;\n  oldTabIndex: string|null;\n}\n"]}