{"version":3,"file":"InspectorView.js","sourceRoot":"","sources":["../../../../../../front_end/ui/legacy/InspectorView.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2011 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable @devtools/no-imperative-dom-api */\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Root from '../../core/root/root.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Buttons from '../../ui/components/buttons/buttons.js';\nimport * as IconButton from '../components/icon_button/icon_button.js';\nimport * as VisualLogging from '../visual_logging/visual_logging.js';\n\nimport type {ActionDelegate as ActionDelegateInterface} from './ActionRegistration.js';\nimport {ActionRegistry} from './ActionRegistry.js';\nimport * as ARIAUtils from './ARIAUtils.js';\nimport type {Context} from './Context.js';\nimport type {ContextMenu} from './ContextMenu.js';\nimport {Dialog} from './Dialog.js';\nimport {DockController, DockState, Events as DockControllerEvents} from './DockController.js';\nimport {GlassPane} from './GlassPane.js';\nimport {Infobar, Type as InfobarType} from './Infobar.js';\nimport {KeyboardShortcut} from './KeyboardShortcut.js';\nimport type {Panel} from './Panel.js';\nimport {ShowMode, SplitWidget} from './SplitWidget.js';\nimport {type EventData, Events as TabbedPaneEvents, type TabbedPane, type TabbedPaneTabDelegate} from './TabbedPane.js';\nimport {ToolbarButton} from './Toolbar.js';\nimport {Tooltip} from './Tooltip.js';\nimport type {TabbedViewLocation, View, ViewLocation, ViewLocationResolver} from './View.js';\nimport {ViewManager} from './ViewManager.js';\nimport {VBox, type Widget, WidgetFocusRestorer} from './Widget.js';\n\nconst UIStrings = {\n  /**\n   * @description Title of more tabs button in inspector view\n   */\n  moreTools: 'More Tools',\n  /**\n   * @description Text that appears when hovor over the close button on the drawer view\n   */\n  closeDrawer: 'Close drawer',\n  /**\n   * @description The ARIA label for the main tab bar that contains the DevTools panels\n   */\n  panels: 'Panels',\n  /**\n   * @description Title of an action that reloads the tab currently being debugged by DevTools\n   */\n  reloadDebuggedTab: 'Reload page',\n  /**\n   * @description Title of an action that reloads the DevTools\n   */\n  reloadDevtools: 'Reload DevTools',\n  /**\n   * @description Text for context menu action to move a tab to the main tab bar\n   */\n  moveToMainTabBar: 'Move to main tab bar',\n  /**\n   * @description Text for context menu action to move a tab to the drawer\n   */\n  moveToDrawer: 'Move to drawer',\n  /**\n   * @description Text shown in a prompt to the user when DevTools is started and the\n   * currently selected DevTools locale does not match Chrome's locale.\n   * The placeholder is the current Chrome language.\n   * @example {German} PH1\n   */\n  devToolsLanguageMissmatch: 'DevTools is now available in {PH1}',\n  /**\n   * @description An option the user can select when we notice that DevTools\n   * is configured with a different locale than Chrome. This option means DevTools will\n   * always try and display the DevTools UI in the same language as Chrome.\n   */\n  setToBrowserLanguage: 'Always match Chrome\\'s language',\n  /**\n   * @description An option the user can select when DevTools notices that DevTools\n   * is configured with a different locale than Chrome. This option means DevTools UI\n   * will be switched to the language specified in the placeholder.\n   * @example {German} PH1\n   */\n  setToSpecificLanguage: 'Switch DevTools to {PH1}',\n  /**\n   * @description The aria label for main toolbar\n   */\n  mainToolbar: 'Main toolbar',\n  /**\n   * @description The aria label for the drawer.\n   */\n  drawer: 'Tool drawer',\n  /**\n   * @description The aria label for the drawer shown.\n   */\n  drawerShown: 'Drawer shown',\n  /**\n   * @description The aria label for the drawer hidden.\n   */\n  drawerHidden: 'Drawer hidden',\n  /**\n   * @description Request for the user to select a local file system folder for DevTools\n   * to store local overrides in.\n   */\n  selectOverrideFolder: 'Select a folder to store override files in',\n  /**\n   * @description Label for a button which opens a file picker.\n   */\n  selectFolder: 'Select folder',\n  /**\n   * @description Text that appears when hover the toggle orientation button\n   */\n  toggleDrawerOrientation: 'Toggle drawer orientation',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('ui/legacy/InspectorView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nlet inspectorViewInstance: InspectorView|null = null;\n\nconst MIN_MAIN_PANEL_WIDTH = 240;\nconst MIN_VERTICAL_DRAWER_WIDTH = 200;\n// Inspector need to have space for both main panel and the drawer + some slack for borders\nconst MIN_INSPECTOR_WIDTH_HORIZONTAL_DRAWER = 250;\nconst MIN_INSPECTOR_WIDTH_VERTICAL_DRAWER = 450;\nconst MIN_INSPECTOR_HEIGHT = 72;\n\nexport enum DrawerOrientation {\n  VERTICAL = 'vertical',\n  HORIZONTAL = 'horizontal',\n  UNSET = 'unset',\n}\n\nexport enum DockMode {\n  BOTTOM = 'bottom',\n  SIDE = 'side',  // For LEFT and RIGHT\n  UNDOCKED = 'undocked',\n}\n\nexport interface DrawerOrientationByDockMode {\n  [DockMode.BOTTOM]: DrawerOrientation;\n  [DockMode.SIDE]: DrawerOrientation;\n  [DockMode.UNDOCKED]: DrawerOrientation;\n}\n\nexport class InspectorView extends VBox implements ViewLocationResolver {\n  private readonly drawerOrientationByDockSetting: Common.Settings.Setting<DrawerOrientationByDockMode>;\n  private readonly drawerSplitWidget: SplitWidget;\n  private readonly tabDelegate: InspectorViewTabDelegate;\n  private readonly drawerTabbedLocation: TabbedViewLocation;\n  private drawerTabbedPane: TabbedPane;\n  private infoBarDiv!: HTMLDivElement|null;\n  private readonly tabbedLocation: TabbedViewLocation;\n  readonly tabbedPane: TabbedPane;\n  private readonly keyDownBound: (event: KeyboardEvent) => void;\n  private currentPanelLocked?: boolean;\n  private focusRestorer?: WidgetFocusRestorer|null;\n  private ownerSplitWidget?: SplitWidget;\n  private reloadRequiredInfobar?: Infobar;\n  #selectOverrideFolderInfobar?: Infobar;\n  #resizeObserver: ResizeObserver;\n  #toggleOrientationButton: ToolbarButton;\n\n  constructor() {\n    super();\n    GlassPane.setContainer(this.element);\n    this.setMinimumSize(MIN_INSPECTOR_WIDTH_HORIZONTAL_DRAWER, MIN_INSPECTOR_HEIGHT);\n\n    // DevTools sidebar is a vertical split of main tab bar panels and a drawer.\n    this.drawerOrientationByDockSetting =\n        Common.Settings.Settings.instance().createSetting('inspector.drawer-orientation-by-dock-mode', {\n          [DockMode.BOTTOM]: DrawerOrientation.UNSET,\n          [DockMode.SIDE]: DrawerOrientation.UNSET,\n          [DockMode.UNDOCKED]: DrawerOrientation.UNSET,\n        });\n    const initialOrientation = this.#getOrientationForDockMode();\n    const isVertical = initialOrientation === DrawerOrientation.VERTICAL;\n    this.drawerSplitWidget = new SplitWidget(isVertical, true, 'inspector.drawer-split-view-state', 200, 200);\n    this.drawerSplitWidget.hideSidebar();\n    this.drawerSplitWidget.enableShowModeSaving();\n    this.drawerSplitWidget.show(this.element);\n\n    this.tabDelegate = new InspectorViewTabDelegate();\n\n    // Create drawer tabbed pane.\n    this.drawerTabbedLocation = ViewManager.instance().createTabbedLocation(\n        this.showDrawer.bind(this, {\n          focus: false,\n          hasTargetDrawer: true,\n        }),\n        'drawer-view', true, true);\n    const moreTabsButton = this.drawerTabbedLocation.enableMoreTabsButton();\n    moreTabsButton.setTitle(i18nString(UIStrings.moreTools));\n    this.drawerTabbedPane = this.drawerTabbedLocation.tabbedPane();\n    this.setDrawerRelatedMinimumSizes();\n    this.drawerTabbedPane.element.classList.add('drawer-tabbed-pane');\n    this.drawerTabbedPane.element.setAttribute('jslog', `${VisualLogging.drawer()}`);\n    const closeDrawerButton = new ToolbarButton(i18nString(UIStrings.closeDrawer), 'cross');\n    closeDrawerButton.element.setAttribute('jslog', `${VisualLogging.close().track({click: true})}`);\n    closeDrawerButton.addEventListener(ToolbarButton.Events.CLICK, this.closeDrawer, this);\n    this.#toggleOrientationButton = new ToolbarButton(\n        i18nString(UIStrings.toggleDrawerOrientation),\n        this.drawerSplitWidget.isVertical() ? 'dock-bottom' : 'dock-right');\n    this.#toggleOrientationButton.element.setAttribute(\n        'jslog', `${VisualLogging.toggle('toggle-drawer-orientation').track({click: true})}`);\n    this.#toggleOrientationButton.addEventListener(\n        ToolbarButton.Events.CLICK, () => this.toggleDrawerOrientation(), this);\n    this.drawerTabbedPane.addEventListener(\n        TabbedPaneEvents.TabSelected,\n        (event: Common.EventTarget.EventTargetEvent<EventData>) => this.tabSelected(event.data.tabId), this);\n    const selectedDrawerTab = this.drawerTabbedPane.selectedTabId;\n    if (this.drawerSplitWidget.showMode() !== ShowMode.ONLY_MAIN && selectedDrawerTab) {\n      Host.userMetrics.panelShown(selectedDrawerTab, true);\n    }\n    this.drawerTabbedPane.setTabDelegate(this.tabDelegate);\n\n    const drawerElement = this.drawerTabbedPane.element;\n    ARIAUtils.markAsComplementary(drawerElement);\n    ARIAUtils.setLabel(drawerElement, i18nString(UIStrings.drawer));\n\n    this.drawerSplitWidget.installResizer(this.drawerTabbedPane.headerElement());\n    this.drawerSplitWidget.setSidebarWidget(this.drawerTabbedPane);\n    if (Root.Runtime.hostConfig.devToolsFlexibleLayout?.verticalDrawerEnabled) {\n      this.drawerTabbedPane.rightToolbar().appendToolbarItem(this.#toggleOrientationButton);\n    }\n    this.drawerTabbedPane.rightToolbar().appendToolbarItem(closeDrawerButton);\n    this.drawerTabbedPane.headerElement().setAttribute('jslog', `${VisualLogging.toolbar('drawer').track({\n                                                         drag: true,\n                                                         keydown: 'ArrowUp|ArrowLeft|ArrowDown|ArrowRight|Enter|Space',\n                                                       })}`);\n\n    // Create main area tabbed pane.\n    this.tabbedLocation = ViewManager.instance().createTabbedLocation(\n        Host.InspectorFrontendHost.InspectorFrontendHostInstance.bringToFront.bind(\n            Host.InspectorFrontendHost.InspectorFrontendHostInstance),\n        'panel', true, true, Root.Runtime.Runtime.queryParam('panel'));\n\n    this.tabbedPane = this.tabbedLocation.tabbedPane();\n    this.tabbedPane.setMinimumSize(MIN_MAIN_PANEL_WIDTH, 0);\n    this.tabbedPane.element.classList.add('main-tabbed-pane');\n    // The 'Inspect element' and 'Device mode' buttons in the tabs toolbar takes longer to load than\n    // the tabs themselves, so a space equal to the buttons' total width is preemptively allocated\n    // to prevent to prevent a shift in the tab layout. Note that when DevTools cannot be docked,\n    // the Device mode button is not added and so the allocated space is smaller.\n    const allocatedSpace = Root.Runtime.conditions.canDock() ? '69px' : '41px';\n    this.tabbedPane.leftToolbar().style.minWidth = allocatedSpace;\n    this.tabbedPane.addEventListener(\n        TabbedPaneEvents.TabSelected,\n        (event: Common.EventTarget.EventTargetEvent<EventData>) => this.tabSelected(event.data.tabId), this);\n    const selectedTab = this.tabbedPane.selectedTabId;\n    if (selectedTab) {\n      Host.userMetrics.panelShown(selectedTab, true);\n    }\n    this.tabbedPane.setAccessibleName(i18nString(UIStrings.panels));\n    this.tabbedPane.setTabDelegate(this.tabDelegate);\n\n    const mainHeaderElement = this.tabbedPane.headerElement();\n    ARIAUtils.markAsNavigation(mainHeaderElement);\n    ARIAUtils.setLabel(mainHeaderElement, i18nString(UIStrings.mainToolbar));\n    mainHeaderElement.setAttribute('jslog', `${VisualLogging.toolbar('main').track({\n                                     drag: true,\n                                     keydown: 'ArrowUp|ArrowLeft|ArrowDown|ArrowRight|Enter|Space',\n                                   })}`);\n\n    // Store the initial selected panel for use in launch histograms\n    Host.userMetrics.setLaunchPanel(this.tabbedPane.selectedTabId);\n\n    if (Host.InspectorFrontendHost.isUnderTest()) {\n      this.tabbedPane.setAutoSelectFirstItemOnShow(false);\n    }\n    this.drawerSplitWidget.setMainWidget(this.tabbedPane);\n    this.drawerSplitWidget.setDefaultFocusedChild(this.tabbedPane);\n\n    this.keyDownBound = this.keyDown.bind(this);\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.events.addEventListener(\n        Host.InspectorFrontendHostAPI.Events.ShowPanel, showPanel.bind(this));\n\n    function showPanel(this: InspectorView, {data: panelName}: Common.EventTarget.EventTargetEvent<string>): void {\n      void this.showPanel(panelName);\n    }\n\n    if (shouldShowLocaleInfobar()) {\n      const infobar = createLocaleInfobar();\n      infobar.setParentView(this);\n      this.attachInfobar(infobar);\n    }\n    this.#resizeObserver = new ResizeObserver(this.#observedResize.bind(this));\n  }\n\n  static instance(opts: {\n    forceNew: boolean|null,\n  }|undefined = {forceNew: null}): InspectorView {\n    const {forceNew} = opts;\n    if (!inspectorViewInstance || forceNew) {\n      inspectorViewInstance = new InspectorView();\n    }\n\n    return inspectorViewInstance;\n  }\n\n  static maybeGetInspectorViewInstance(): InspectorView|null {\n    return inspectorViewInstance;\n  }\n\n  static removeInstance(): void {\n    inspectorViewInstance = null;\n  }\n\n  applyDrawerOrientationForDockSideForTest(): void {\n  }\n\n  #applyDrawerOrientationForDockSide(): void {\n    if (!this.drawerVisible()) {\n      this.applyDrawerOrientationForDockSideForTest();\n      return;\n    }\n    const newOrientation = this.#getOrientationForDockMode();\n    this.#applyDrawerOrientation(newOrientation);\n    this.applyDrawerOrientationForDockSideForTest();\n  }\n\n  #getDockMode(): DockMode {\n    const dockSide = DockController.instance().dockSide();\n    if (dockSide === DockState.BOTTOM) {\n      return DockMode.BOTTOM;\n    }\n    if (dockSide === DockState.UNDOCKED) {\n      return DockMode.UNDOCKED;\n    }\n\n    return DockMode.SIDE;\n  }\n\n  #getOrientationForDockMode(): Omit<DrawerOrientation, DrawerOrientation.UNSET> {\n    const dockMode = this.#getDockMode();\n    const orientationSetting = this.drawerOrientationByDockSetting.get();\n\n    let orientation = orientationSetting[dockMode];\n    if (orientation === DrawerOrientation.UNSET) {\n      // Apply defaults: horizontal for side-dock, vertical for bottom-dock.\n      orientation = dockMode === DockMode.BOTTOM ? DrawerOrientation.VERTICAL : DrawerOrientation.HORIZONTAL;\n    }\n    return orientation;\n  }\n\n  #applyDrawerOrientation(orientation: Omit<DrawerOrientation, DrawerOrientation.UNSET>): void {\n    const shouldBeVertical = orientation === DrawerOrientation.VERTICAL;\n    const isVertical = this.drawerSplitWidget.isVertical();\n    if (shouldBeVertical === isVertical) {\n      return;\n    }\n\n    this.#toggleOrientationButton.setGlyph(shouldBeVertical ? 'dock-bottom' : 'dock-right');\n    this.drawerSplitWidget.setVertical(shouldBeVertical);\n    this.setDrawerRelatedMinimumSizes();\n  }\n\n  #observedResize(): void {\n    const rect = this.element.getBoundingClientRect();\n    this.element.style.setProperty('--devtools-window-left', `${rect.left}px`);\n    this.element.style.setProperty('--devtools-window-right', `${window.innerWidth - rect.right}px`);\n    this.element.style.setProperty('--devtools-window-width', `${rect.width}px`);\n    this.element.style.setProperty('--devtools-window-top', `${rect.top}px`);\n    this.element.style.setProperty('--devtools-window-bottom', `${window.innerHeight - rect.bottom}px`);\n    this.element.style.setProperty('--devtools-window-height', `${rect.height}px`);\n  }\n\n  override wasShown(): void {\n    super.wasShown();\n    this.#resizeObserver.observe(this.element);\n    this.#observedResize();\n    this.element.ownerDocument.addEventListener('keydown', this.keyDownBound, false);\n    DockController.instance().addEventListener(\n        DockControllerEvents.DOCK_SIDE_CHANGED, this.#applyDrawerOrientationForDockSide, this);\n    this.#applyDrawerOrientationForDockSide();\n  }\n\n  override willHide(): void {\n    super.willHide();\n    this.#resizeObserver.unobserve(this.element);\n    this.element.ownerDocument.removeEventListener('keydown', this.keyDownBound, false);\n    DockController.instance().removeEventListener(\n        DockControllerEvents.DOCK_SIDE_CHANGED, this.#applyDrawerOrientationForDockSide, this);\n  }\n\n  resolveLocation(locationName: string): ViewLocation|null {\n    if (locationName === 'drawer-view') {\n      return this.drawerTabbedLocation;\n    }\n    if (locationName === 'panel') {\n      return this.tabbedLocation;\n    }\n    return null;\n  }\n\n  async createToolbars(): Promise<void> {\n    await this.tabbedPane.leftToolbar().appendItemsAtLocation('main-toolbar-left');\n    await this.tabbedPane.rightToolbar().appendItemsAtLocation('main-toolbar-right');\n  }\n\n  addPanel(view: View): void {\n    this.tabbedLocation.appendView(view);\n  }\n\n  hasPanel(panelName: string): boolean {\n    return this.tabbedPane.hasTab(panelName);\n  }\n\n  async panel(panelName: string): Promise<Panel> {\n    const view = ViewManager.instance().view(panelName);\n    if (!view) {\n      throw new Error(`Expected view for panel '${panelName}'`);\n    }\n    return await (view.widget() as Promise<Panel>);\n  }\n\n  onSuspendStateChanged(allTargetsSuspended: boolean): void {\n    this.currentPanelLocked = allTargetsSuspended;\n    this.tabbedPane.setCurrentTabLocked(this.currentPanelLocked);\n    this.tabbedPane.leftToolbar().setEnabled(!this.currentPanelLocked);\n    this.tabbedPane.rightToolbar().setEnabled(!this.currentPanelLocked);\n  }\n\n  canSelectPanel(panelName: string): boolean {\n    return !this.currentPanelLocked || this.tabbedPane.selectedTabId === panelName;\n  }\n\n  async showPanel(panelName: string): Promise<void> {\n    await ViewManager.instance().showView(panelName);\n  }\n\n  setPanelWarnings(tabId: string, warnings: string[]): void {\n    // Find the tabbed location where the panel lives\n    const tabbedPane = this.getTabbedPaneForTabId(tabId);\n    if (tabbedPane) {\n      let icon: IconButton.Icon.Icon|null = null;\n      if (warnings.length !== 0) {\n        const warning = warnings.length === 1 ? warnings[0] : '· ' + warnings.join('\\n· ');\n        icon = IconButton.Icon.create('warning-filled', 'small');\n        icon.classList.add('warning');\n        Tooltip.install(icon, warning);\n      }\n      tabbedPane.setTrailingTabIcon(tabId, icon);\n    }\n  }\n\n  private getTabbedPaneForTabId(tabId: string): TabbedPane|null {\n    // Tab exists in the main panel\n    if (this.tabbedPane.hasTab(tabId)) {\n      return this.tabbedPane;\n    }\n\n    // Tab exists in the drawer\n    if (this.drawerTabbedPane.hasTab(tabId)) {\n      return this.drawerTabbedPane;\n    }\n\n    // Tab is not open\n    return null;\n  }\n\n  currentPanelDeprecated(): Widget|null {\n    return (ViewManager.instance().materializedWidget(this.tabbedPane.selectedTabId || ''));\n  }\n\n  showDrawer({focus, hasTargetDrawer}: {focus: boolean, hasTargetDrawer: boolean}): void {\n    if (this.drawerTabbedPane.isShowing()) {\n      return;\n    }\n    // Only auto-select the first drawer (console) when no drawer is chosen specifically.\n    this.drawerTabbedPane.setAutoSelectFirstItemOnShow(!hasTargetDrawer);\n    this.drawerSplitWidget.showBoth();\n    if (focus) {\n      this.focusRestorer = new WidgetFocusRestorer(this.drawerTabbedPane);\n    } else {\n      this.focusRestorer = null;\n    }\n    this.#applyDrawerOrientationForDockSide();\n    ARIAUtils.LiveAnnouncer.alert(i18nString(UIStrings.drawerShown));\n  }\n\n  drawerVisible(): boolean {\n    return this.drawerTabbedPane.isShowing();\n  }\n\n  closeDrawer(): void {\n    if (!this.drawerTabbedPane.isShowing()) {\n      return;\n    }\n    if (this.focusRestorer) {\n      this.focusRestorer.restore();\n    }\n    this.drawerSplitWidget.hideSidebar(true);\n\n    ARIAUtils.LiveAnnouncer.alert(i18nString(UIStrings.drawerHidden));\n  }\n\n  toggleDrawerOrientation({force}: {force?: Omit<DrawerOrientation, DrawerOrientation.UNSET>} = {}): void {\n    if (!this.drawerTabbedPane.isShowing()) {\n      return;\n    }\n\n    const dockMode = this.#getDockMode();\n    const currentSettings = this.drawerOrientationByDockSetting.get();\n\n    let newOrientation: Omit<DrawerOrientation, DrawerOrientation.UNSET>;\n    if (force) {\n      newOrientation = force;\n    } else {\n      const currentOrientation = this.#getOrientationForDockMode();\n      newOrientation =\n          currentOrientation === DrawerOrientation.VERTICAL ? DrawerOrientation.HORIZONTAL : DrawerOrientation.VERTICAL;\n    }\n\n    currentSettings[dockMode] = newOrientation as DrawerOrientation;\n    this.drawerOrientationByDockSetting.set(currentSettings);\n\n    this.#applyDrawerOrientation(newOrientation);\n  }\n\n  isUserExplicitlyUpdatedDrawerOrientation(): boolean {\n    const orientationSetting = this.drawerOrientationByDockSetting.get();\n    const dockMode = this.#getDockMode();\n    return orientationSetting[dockMode] !== DrawerOrientation.UNSET;\n  }\n\n  setDrawerRelatedMinimumSizes(): void {\n    const drawerIsVertical = this.drawerSplitWidget.isVertical();\n    if (drawerIsVertical) {\n      // Set minimum size when the drawer is vertical to ensure the buttons will always be\n      // visible during resizing.\n      this.drawerTabbedPane.setMinimumSize(MIN_VERTICAL_DRAWER_WIDTH, 27);\n      this.setMinimumSize(MIN_INSPECTOR_WIDTH_VERTICAL_DRAWER, MIN_INSPECTOR_HEIGHT);\n    } else {\n      this.drawerTabbedPane.setMinimumSize(0, 27);\n      this.setMinimumSize(MIN_INSPECTOR_WIDTH_HORIZONTAL_DRAWER, MIN_INSPECTOR_HEIGHT);\n    }\n  }\n\n  setDrawerMinimized(minimized: boolean): void {\n    this.drawerSplitWidget.setSidebarMinimized(minimized);\n    this.drawerSplitWidget.setResizable(!minimized);\n  }\n\n  drawerSize(): number {\n    return this.drawerSplitWidget.sidebarSize();\n  }\n\n  setDrawerSize(size: number): void {\n    this.drawerSplitWidget.setSidebarSize(size);\n  }\n\n  totalSize(): number {\n    return this.drawerSplitWidget.totalSize();\n  }\n\n  isDrawerMinimized(): boolean {\n    return this.drawerSplitWidget.isSidebarMinimized();\n  }\n\n  isDrawerOrientationVertical(): boolean {\n    return this.drawerSplitWidget.isVertical();\n  }\n\n  private keyDown(event: KeyboardEvent): void {\n    if (!KeyboardShortcut.eventHasCtrlEquivalentKey(event) || event.altKey || event.shiftKey) {\n      return;\n    }\n\n    // Ctrl/Cmd + 1-9 should show corresponding panel.\n    const panelShortcutEnabled = Common.Settings.moduleSetting('shortcut-panel-switch').get();\n    if (panelShortcutEnabled) {\n      let panelIndex = -1;\n      if (event.keyCode > 0x30 && event.keyCode < 0x3A) {\n        panelIndex = event.keyCode - 0x31;\n      } else if (\n          event.keyCode > 0x60 && event.keyCode < 0x6A && event.location === KeyboardEvent.DOM_KEY_LOCATION_NUMPAD) {\n        panelIndex = event.keyCode - 0x61;\n      }\n      if (panelIndex !== -1) {\n        const panelName = this.tabbedPane.tabIds()[panelIndex];\n        if (panelName) {\n          if (!Dialog.hasInstance() && !this.currentPanelLocked) {\n            void this.showPanel(panelName);\n            void VisualLogging.logKeyDown(null, event, `panel-by-index-${panelName}`);\n          }\n          event.consume(true);\n        }\n      }\n    }\n  }\n\n  override onResize(): void {\n    GlassPane.containerMoved(this.element);\n  }\n\n  topResizerElement(): Element {\n    return this.tabbedPane.headerElement();\n  }\n\n  toolbarItemResized(): void {\n    this.tabbedPane.headerResized();\n  }\n\n  private tabSelected(tabId: string): void {\n    Host.userMetrics.panelShown(tabId);\n  }\n\n  setOwnerSplit(splitWidget: SplitWidget): void {\n    this.ownerSplitWidget = splitWidget;\n  }\n\n  ownerSplit(): SplitWidget|null {\n    return this.ownerSplitWidget || null;\n  }\n\n  minimize(): void {\n    if (this.ownerSplitWidget) {\n      this.ownerSplitWidget.setSidebarMinimized(true);\n    }\n  }\n\n  restore(): void {\n    if (this.ownerSplitWidget) {\n      this.ownerSplitWidget.setSidebarMinimized(false);\n    }\n  }\n\n  displayDebuggedTabReloadRequiredWarning(message: string): void {\n    if (!this.reloadRequiredInfobar) {\n      const infobar = new Infobar(\n          InfobarType.INFO, message,\n          [\n            {\n              text: i18nString(UIStrings.reloadDebuggedTab),\n              delegate: () => {\n                reloadDebuggedTab();\n                this.removeDebuggedTabReloadRequiredWarning();\n              },\n              dismiss: false,\n              buttonVariant: Buttons.Button.Variant.PRIMARY,\n              jslogContext: 'main.debug-reload',\n            },\n          ],\n          undefined, 'reload-required');\n      infobar.setParentView(this);\n      this.attachInfobar(infobar);\n      this.reloadRequiredInfobar = infobar;\n      infobar.setCloseCallback(() => {\n        delete this.reloadRequiredInfobar;\n      });\n\n      SDK.TargetManager.TargetManager.instance().addModelListener(\n          SDK.ResourceTreeModel.ResourceTreeModel, SDK.ResourceTreeModel.Events.PrimaryPageChanged,\n          this.removeDebuggedTabReloadRequiredWarning, this);\n    }\n  }\n\n  removeDebuggedTabReloadRequiredWarning(): void {\n    if (this.reloadRequiredInfobar) {\n      this.reloadRequiredInfobar.dispose();\n      SDK.TargetManager.TargetManager.instance().removeModelListener(\n          SDK.ResourceTreeModel.ResourceTreeModel, SDK.ResourceTreeModel.Events.PrimaryPageChanged,\n          this.removeDebuggedTabReloadRequiredWarning, this);\n    }\n  }\n\n  displayReloadRequiredWarning(message: string): void {\n    if (!this.reloadRequiredInfobar) {\n      const infobar = new Infobar(\n          InfobarType.INFO, message,\n          [\n            {\n              text: i18nString(UIStrings.reloadDevtools),\n              delegate: () => reloadDevTools(),\n              dismiss: false,\n              buttonVariant: Buttons.Button.Variant.PRIMARY,\n              jslogContext: 'main.debug-reload',\n            },\n          ],\n          undefined, 'reload-required');\n      infobar.setParentView(this);\n      this.attachInfobar(infobar);\n      this.reloadRequiredInfobar = infobar;\n      infobar.setCloseCallback(() => {\n        delete this.reloadRequiredInfobar;\n      });\n    }\n  }\n\n  displaySelectOverrideFolderInfobar(callback: () => void): void {\n    if (!this.#selectOverrideFolderInfobar) {\n      const infobar = new Infobar(\n          InfobarType.INFO, i18nString(UIStrings.selectOverrideFolder),\n          [\n            {\n              text: i18nString(UIStrings.selectFolder),\n              delegate: () => callback(),\n              dismiss: true,\n              buttonVariant: Buttons.Button.Variant.TONAL,\n              jslogContext: 'select-folder',\n            },\n          ],\n          undefined, 'select-override-folder');\n      infobar.setParentView(this);\n      this.attachInfobar(infobar);\n      this.#selectOverrideFolderInfobar = infobar;\n      infobar.setCloseCallback(() => {\n        this.#selectOverrideFolderInfobar = undefined;\n      });\n    }\n  }\n\n  private createInfoBarDiv(): void {\n    if (!this.infoBarDiv) {\n      this.infoBarDiv = document.createElement('div');\n      this.infoBarDiv.classList.add('flex-none');\n      this.contentElement.insertBefore(this.infoBarDiv, this.contentElement.firstChild);\n    }\n  }\n\n  private attachInfobar(infobar: Infobar): void {\n    this.createInfoBarDiv();\n    this.infoBarDiv?.appendChild(infobar.element);\n  }\n}\n\nfunction getDisableLocaleInfoBarSetting(): Common.Settings.Setting<boolean> {\n  return Common.Settings.Settings.instance().createSetting('disable-locale-info-bar', false);\n}\n\nfunction shouldShowLocaleInfobar(): boolean {\n  if (getDisableLocaleInfoBarSetting().get()) {\n    return false;\n  }\n\n  // If the language setting is different than 'en-US', the user already\n  // used the setting before, so don't show the toolbar.\n  const languageSettingValue = Common.Settings.Settings.instance().moduleSetting<string>('language').get();\n  if (languageSettingValue !== 'en-US') {\n    return false;\n  }\n\n  // When the selected DevTools locale differs from the locale of the browser UI, we want to notify\n  // users only once, that they have the opportunity to adjust DevTools locale to match Chrome's locale.\n  return !i18n.DevToolsLocale.localeLanguagesMatch(navigator.language, languageSettingValue) &&\n      i18n.DevToolsLocale.DevToolsLocale.instance().languageIsSupportedByDevTools(navigator.language);\n}\n\nfunction createLocaleInfobar(): Infobar {\n  const devtoolsLocale = i18n.DevToolsLocale.DevToolsLocale.instance();\n  const closestSupportedLocale = devtoolsLocale.lookupClosestDevToolsLocale(navigator.language);\n  const locale = new Intl.Locale(closestSupportedLocale);\n  const closestSupportedLanguageInCurrentLocale =\n      new Intl.DisplayNames([devtoolsLocale.locale], {type: 'language'}).of(locale.language || 'en') || 'English';\n\n  const languageSetting = Common.Settings.Settings.instance().moduleSetting<string>('language');\n  return new Infobar(\n      InfobarType.INFO, i18nString(UIStrings.devToolsLanguageMissmatch, {PH1: closestSupportedLanguageInCurrentLocale}),\n      [\n        {\n          text: i18nString(UIStrings.setToBrowserLanguage),\n          delegate: () => {\n            languageSetting.set('browserLanguage');\n            getDisableLocaleInfoBarSetting().set(true);\n            reloadDevTools();\n          },\n          dismiss: true,\n          jslogContext: 'set-to-browser-language',\n        },\n        {\n          text: i18nString(UIStrings.setToSpecificLanguage, {PH1: closestSupportedLanguageInCurrentLocale}),\n          delegate: () => {\n            languageSetting.set(closestSupportedLocale);\n            getDisableLocaleInfoBarSetting().set(true);\n            reloadDevTools();\n          },\n          dismiss: true,\n          jslogContext: 'set-to-specific-language',\n        },\n      ],\n      getDisableLocaleInfoBarSetting(), 'language-mismatch');\n}\n\nfunction reloadDevTools(): void {\n  if (DockController.instance().canDock() && DockController.instance().dockSide() === DockState.UNDOCKED) {\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.setIsDocked(true, function() {});\n  }\n  Host.InspectorFrontendHost.InspectorFrontendHostInstance.reattach(() => window.location.reload());\n}\n\nfunction reloadDebuggedTab(): void {\n  void ActionRegistry.instance().getAction('inspector-main.reload').execute();\n}\n\nexport class ActionDelegate implements ActionDelegateInterface {\n  handleAction(_context: Context, actionId: string): boolean {\n    switch (actionId) {\n      case 'main.toggle-drawer':\n        if (InspectorView.instance().drawerVisible()) {\n          InspectorView.instance().closeDrawer();\n        } else {\n          InspectorView.instance().showDrawer({\n            focus: true,\n            hasTargetDrawer: false,\n          });\n        }\n        return true;\n      case 'main.toggle-drawer-orientation':\n        InspectorView.instance().toggleDrawerOrientation();\n        return true;\n      case 'main.next-tab':\n        InspectorView.instance().tabbedPane.selectNextTab();\n        InspectorView.instance().tabbedPane.focus();\n        return true;\n      case 'main.previous-tab':\n        InspectorView.instance().tabbedPane.selectPrevTab();\n        InspectorView.instance().tabbedPane.focus();\n        return true;\n    }\n    return false;\n  }\n}\n\nexport class InspectorViewTabDelegate implements TabbedPaneTabDelegate {\n  closeTabs(tabbedPane: TabbedPane, ids: string[]): void {\n    tabbedPane.closeTabs(ids, true);\n  }\n\n  moveToDrawer(tabId: string): void {\n    Host.userMetrics.actionTaken(Host.UserMetrics.Action.TabMovedToDrawer);\n    ViewManager.instance().moveView(tabId, 'drawer-view');\n  }\n\n  moveToMainTabBar(tabId: string): void {\n    Host.userMetrics.actionTaken(Host.UserMetrics.Action.TabMovedToMainPanel);\n    ViewManager.instance().moveView(tabId, 'panel');\n  }\n\n  onContextMenu(tabId: string, contextMenu: ContextMenu): void {\n    // Special case for console, we don't show the movable context panel for this two tabs\n    if (tabId === 'console' || tabId === 'console-view') {\n      return;\n    }\n\n    const locationName = ViewManager.instance().locationNameForViewId(tabId);\n    if (locationName === 'drawer-view') {\n      contextMenu.defaultSection().appendItem(\n          i18nString(UIStrings.moveToMainTabBar), this.moveToMainTabBar.bind(this, tabId),\n          {jslogContext: 'move-to-top'});\n    } else {\n      contextMenu.defaultSection().appendItem(\n          i18nString(UIStrings.moveToDrawer), this.moveToDrawer.bind(this, tabId), {jslogContext: 'move-to-bottom'});\n    }\n  }\n}\n"]}