{"version":3,"file":"ProgressIndicator.js","sourceRoot":"","sources":["../../../../../../front_end/ui/legacy/ProgressIndicator.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2012 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Common from '../../core/common/common.js';\n\nimport progressIndicatorStyles from './progressIndicator.css.js';\nimport {createShadowRootWithCoreStyles} from './UIUtils.js';\n\nexport class ProgressIndicator extends HTMLElement implements Common.Progress.Progress {\n  readonly #shadowRoot: ShadowRoot;\n  readonly #contentElement: Element;\n  #labelElement: Element;\n  #progressElement: HTMLProgressElement;\n  #stopButton?: Element;\n  #isCanceled = false;\n  #worked = 0;\n  #isDone = false;\n\n  constructor() {\n    super();\n    this.#shadowRoot = createShadowRootWithCoreStyles(this, {cssFile: progressIndicatorStyles});\n    this.#contentElement = this.#shadowRoot.createChild('div', 'progress-indicator-shadow-container');\n\n    this.#labelElement = this.#contentElement.createChild('div', 'title');\n    this.#progressElement = this.#contentElement.createChild('progress');\n    this.#progressElement.value = 0;\n  }\n\n  connectedCallback(): void {\n    this.classList.add('progress-indicator');\n    // By default we show the stop button, but this can be controlled by\n    // using the 'no-stop-button' attribute on the element.\n    if (!this.hasAttribute('no-stop-button')) {\n      this.#stopButton = this.#contentElement.createChild('button', 'progress-indicator-shadow-stop-button');\n      this.#stopButton.addEventListener('click', () => {\n        this.canceled = true;\n      });\n    }\n  }\n\n  set done(done: boolean) {\n    if (this.#isDone === done) {\n      return;\n    }\n    this.#isDone = done;\n    if (done) {\n      this.remove();\n    }\n  }\n\n  get done(): boolean {\n    return this.#isDone;\n  }\n\n  set canceled(value: boolean) {\n    this.#isCanceled = value;\n  }\n\n  get canceled(): boolean {\n    return this.#isCanceled;\n  }\n\n  override set title(title: string) {\n    this.#labelElement.textContent = title;\n  }\n\n  override get title(): string {\n    return this.#labelElement.textContent ?? '';\n  }\n\n  set totalWork(totalWork: number) {\n    this.#progressElement.max = totalWork;\n  }\n\n  get totalWork(): number {\n    return this.#progressElement.max;\n  }\n\n  set worked(worked: number) {\n    this.#worked = worked;\n    this.#progressElement.value = worked;\n  }\n\n  get worked(): number {\n    return this.#worked;\n  }\n}\n\ncustomElements.define('devtools-progress', ProgressIndicator);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-progress': ProgressIndicator;\n  }\n}\n"]}