{"version":3,"file":"RadioButton.docs.js","sourceRoot":"","sources":["../../../../../../front_end/ui/legacy/RadioButton.docs.ts"],"names":[],"mappings":"AAAA,sCAAsC;AACtC,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,EAAC,OAAO,EAAC,MAAM,aAAa,CAAC;AAEpC,MAAM,CAAC,KAAK,UAAU,MAAM,CAAC,SAAsB;IACjD,MAAM,YAAY,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;IACrD,YAAY,CAAC,WAAW,GAAG,wCAAwC,CAAC;IACpE,SAAS,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;IAEpC,SAAS,YAAY,CAAC,EAAC,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAI9C;QACC,MAAM,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;QACnD,OAAO,CAAC,KAAK,CAAC,SAAS,GAAG,MAAM,CAAC;QACjC,MAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QAChD,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC;QAC1B,MAAM,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAC3C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC;YAC3B,MAAM,EAAC,KAAK,EAAE,KAAK,EAAC,GAAG,OAAO,CAAC,iBAAiB,CAAC,IAAI,EAAE,WAAW,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;YACjF,KAAK,CAAC,QAAQ,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACnC,KAAK,CAAC,QAAQ,GAAG,QAAQ,CAAC;YAC1B,KAAK,CAAC,OAAO,GAAG,CAAC,KAAK,CAAC,CAAC;YACxB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC;QACD,OAAO,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QAC7B,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,QAAQ;IACR,SAAS,CAAC,WAAW,CAAC,YAAY,CAAC,EAAC,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAC,CAAC,CAAC,CAAC;IAEtF,oBAAoB;IACpB,SAAS,CAAC,WAAW,CAAC,YAAY,CAAC,EAAC,IAAI,EAAE,qBAAqB,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAC,CAAC,CAAC,CAAC;IAErG,WAAW;IACX,SAAS,CAAC,WAAW,CAAC,YAAY,CAAC,EAAC,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAC,CAAC,CAAC,CAAC;AAC1F,CAAC","sourcesContent":["// Copyright 2024 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {UIUtils} from './legacy.js';\n\nexport async function render(container: HTMLElement) {\n  const styleElement = document.createElement('style');\n  styleElement.textContent = 'fieldset { label { display: block; } }';\n  container.appendChild(styleElement);\n\n  function radioExample({name, tabbable, disabled}: {\n    name: string,\n    tabbable: boolean,\n    disabled: boolean,\n  }): HTMLElement {\n    const example = document.createElement('fieldset');\n    example.style.marginTop = '20px';\n    const legend = document.createElement('legend');\n    legend.textContent = name;\n    const list = document.createElement('div');\n    for (let i = 0; i < 3; ++i) {\n      const {label, radio} = UIUtils.createRadioButton(name, `Option #${i + 1}`, name);\n      radio.tabIndex = tabbable ? 0 : -1;\n      radio.disabled = disabled;\n      radio.checked = i === 0;\n      list.append(label);\n    }\n    example.append(legend, list);\n    return example;\n  }\n\n  // Basic\n  container.appendChild(radioExample({name: 'basic', tabbable: true, disabled: false}));\n\n  // Not tab reachable\n  container.appendChild(radioExample({name: 'not-table-reachable', tabbable: false, disabled: false}));\n\n  // Disabled\n  container.appendChild(radioExample({name: 'disabled', tabbable: true, disabled: true}));\n}\n"]}