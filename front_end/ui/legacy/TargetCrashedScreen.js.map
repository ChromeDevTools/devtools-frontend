{"version":3,"file":"TargetCrashedScreen.js","sourceRoot":"","sources":["../../../../../../front_end/ui/legacy/TargetCrashedScreen.ts"],"names":[],"mappings":"AAAA,sCAAsC;AACtC,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,IAAI,MAAM,yBAAyB,CAAC;AAChD,OAAO,EAAC,IAAI,EAAE,MAAM,EAAC,MAAM,eAAe,CAAC;AAE3C,OAAO,yBAAyB,MAAM,8BAA8B,CAAC;AACrE,OAAO,EAAC,IAAI,EAAC,MAAM,aAAa,CAAC;AAEjC,MAAM,SAAS,GAAG;IAChB;;OAEG;IACH,8BAA8B,EAAE,0CAA0C;IAC1E;;OAEG;IACH,8BAA8B,EAAE,+DAA+D;CACvF,CAAC;AACX,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,kCAAkC,EAAE,SAAS,CAAC,CAAC;AACxF,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AAItE,MAAM,CAAC,MAAM,YAAY,GAAS,CAAC,KAAK,EAAE,OAAO,EAAE,MAAM,EAAE,EAAE;IAC3D,mBAAmB;IACnB,MAAM,CAAC,IAAI,CAAA;aACA,yBAAyB;2BACX,UAAU,CAAC,SAAS,CAAC,8BAA8B,CAAC;2BACpD,UAAU,CAAC,SAAS,CAAC,8BAA8B,CAAC,QAAQ,EACnF,MAAM,CAAC,CAAC;IACV,kBAAkB;AACpB,CAAC,CAAC;AAEF,MAAM,OAAO,mBAAoB,SAAQ,IAAI;IAC1B,YAAY,CAAa;IAC1C,YAAY,YAAwB,EAAE,IAAI,GAAG,YAAY;QACvD,KAAK,CAAC,EAAC,YAAY,EAAE,IAAI,EAAC,CAAC,CAAC;QAC5B,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;QAClC,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;IACnC,CAAC;IAEQ,QAAQ;QACf,KAAK,CAAC,QAAQ,EAAE,CAAC;QACjB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC/B,CAAC;CACF","sourcesContent":["// Copyright 2018 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport {html, render} from '../lit/lit.js';\n\nimport targetCrashedScreenStyles from './targetCrashedScreen.css.js';\nimport {VBox} from './Widget.js';\n\nconst UIStrings = {\n  /**\n   * @description Text in dialog box when the target page crashed\n   */\n  devtoolsWasDisconnectedFromThe: 'DevTools was disconnected from the page.',\n  /**\n   * @description Text content of content element\n   */\n  oncePageIsReloadedDevtoolsWill: 'Once page is reloaded, DevTools will automatically reconnect.',\n} as const;\nconst str_ = i18n.i18n.registerUIStrings('ui/legacy/TargetCrashedScreen.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\ntype View = (input: object, output: object, target: HTMLElement) => void;\n\nexport const DEFAULT_VIEW: View = (input, _output, target) => {\n  // clang-format off\n  render(html`\n    <style>${targetCrashedScreenStyles}</style>\n    <div class=\"message\">${i18nString(UIStrings.devtoolsWasDisconnectedFromThe)}</div>\n    <div class=\"message\">${i18nString(UIStrings.oncePageIsReloadedDevtoolsWill)}</div>`,\n    target);\n  // clang-format on\n};\n\nexport class TargetCrashedScreen extends VBox {\n  private readonly hideCallback: () => void;\n  constructor(hideCallback: () => void, view = DEFAULT_VIEW) {\n    super({useShadowDom: true});\n    view({}, {}, this.contentElement);\n    this.hideCallback = hideCallback;\n  }\n\n  override willHide(): void {\n    super.willHide();\n    this.hideCallback.call(null);\n  }\n}\n"]}