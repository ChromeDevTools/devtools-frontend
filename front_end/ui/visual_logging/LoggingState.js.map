{"version":3,"file":"LoggingState.js","sourceRoot":"","sources":["../../../../../../front_end/ui/visual_logging/LoggingState.ts"],"names":[],"mappings":"AAIA,OAAO,EAAqB,YAAY,EAAC,MAAM,oBAAoB,CAAC;AAcpE,MAAM,KAAK,GAAG,IAAI,OAAO,EAA0B,CAAC;AAEpD,SAAS,QAAQ;IACf,MAAM,MAAM,GAAG,IAAI,aAAa,CAAC,CAAC,CAAC,CAAC;IACpC,MAAM,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;IAC/B,OAAO,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC;AAC1C,CAAC;AAED,MAAM,UAAU,uBAAuB,CAAC,QAAkB,EAAE,MAAqB,EAAE,MAAiB;IAClG,IAAI,MAAM,CAAC,MAAM,IAAI,eAAe,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,QAAQ,YAAY,OAAO,EAAE,CAAC;QACvF,MAAM,GAAG,eAAe,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC;QACxD,OAAO,MAAM,YAAY,OAAO,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,EAAE,CAAC;YAC1D,MAAM,GAAG,MAAM,CAAC,yBAAyB,EAAE,IAAI,SAAS,CAAC;QAC3D,CAAC;IACH,CAAC;IACD,IAAI,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC;QACxB,MAAM,YAAY,GAAG,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAiB,CAAC;QACzD,IAAI,MAAM,IAAI,YAAY,CAAC,MAAM,KAAK,eAAe,CAAC,MAAM,CAAC,EAAE,CAAC;YAC9D,YAAY,CAAC,MAAM,GAAG,eAAe,CAAC,MAAM,CAAC,CAAC;QAChD,CAAC;QACD,OAAO,YAAY,CAAC;IACtB,CAAC;IAED,MAAM,aAAa,GAAG;QACpB,gBAAgB,EAAE,KAAK;QACvB,SAAS,EAAE,KAAK;QAChB,MAAM;QACN,IAAI,EAAE,QAAQ,EAAE;QAChB,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI;QAC/C,IAAI,EAAE,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;KAC9B,CAAC;IACF,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,aAAa,CAAC,CAAC;IACnC,OAAO,aAAa,CAAC;AACvB,CAAC;AAED,MAAM,UAAU,eAAe,CAAC,QAAkB;IAChD,OAAO,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC;AACrC,CAAC;AAGD,MAAM,eAAe,GAAG,IAAI,GAAG,EAA0B,CAAC;AAE1D,MAAM,UAAU,sBAAsB,CAAC,IAAY,EAAE,QAAwB;IAC3E,IAAI,eAAe,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;QAC9B,MAAM,IAAI,KAAK,CAAC,kCAAkC,IAAI,yBAAyB,CAAC,CAAC;IACnF,CAAC;IACD,eAAe,CAAC,GAAG,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;AACtC,CAAC;AAED,2BAA2B;AAC3B,MAAM,MAAM,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC;AAElC,sBAAsB,CAAC,QAAQ,EAAE,CAAC,CAAoB,EAAE,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;AAEtE,MAAM,UAAU,eAAe,CAAC,OAA0B,EAAE,MAAe;IACzE,OAAO,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC;AAC3B,CAAC","sourcesContent":["// Copyright 2023 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport type {Loggable} from './Loggable.js';\nimport {type LoggingConfig, needsLogging} from './LoggingConfig.js';\n\nexport interface LoggingState {\n  impressionLogged: boolean;\n  processed: boolean;\n  config: LoggingConfig;\n  veid: number;\n  parent: LoggingState|null;\n  processedForDebugging?: boolean;\n  size: DOMRect;\n  selectOpen?: boolean;\n  pendingChangeContext?: string;\n}\n\nconst state = new WeakMap<Loggable, LoggingState>();\n\nfunction nextVeId(): number {\n  const result = new BigInt64Array(1);\n  crypto.getRandomValues(result);\n  return Number(result[0] >> (64n - 53n));\n}\n\nexport function getOrCreateLoggingState(loggable: Loggable, config: LoggingConfig, parent?: Loggable): LoggingState {\n  if (config.parent && parentProviders.has(config.parent) && loggable instanceof Element) {\n    parent = parentProviders.get(config.parent)?.(loggable);\n    while (parent instanceof Element && !needsLogging(parent)) {\n      parent = parent.parentElementOrShadowHost() ?? undefined;\n    }\n  }\n  if (state.has(loggable)) {\n    const currentState = state.get(loggable) as LoggingState;\n    if (parent && currentState.parent !== getLoggingState(parent)) {\n      currentState.parent = getLoggingState(parent);\n    }\n    return currentState;\n  }\n\n  const loggableState = {\n    impressionLogged: false,\n    processed: false,\n    config,\n    veid: nextVeId(),\n    parent: parent ? getLoggingState(parent) : null,\n    size: new DOMRect(0, 0, 0, 0),\n  };\n  state.set(loggable, loggableState);\n  return loggableState;\n}\n\nexport function getLoggingState(loggable: Loggable): LoggingState|null {\n  return state.get(loggable) || null;\n}\n\ntype ParentProvider = (e: Element) => Element|undefined;\nconst parentProviders = new Map<string, ParentProvider>();\n\nexport function registerParentProvider(name: string, provider: ParentProvider): void {\n  if (parentProviders.has(name)) {\n    throw new Error(`Parent provider with the name '${name} is already registered'`);\n  }\n  parentProviders.set(name, provider);\n}\n\n/** MUST NOT BE EXPORTED */\nconst PARENT = Symbol('veParent');\ntype ElementWithParent = Element&{[PARENT]?: Element};\nregisterParentProvider('mapped', (e: ElementWithParent) => e[PARENT]);\n\nexport function setMappedParent(element: ElementWithParent, parent: Element): void {\n  element[PARENT] = parent;\n}\n"]}