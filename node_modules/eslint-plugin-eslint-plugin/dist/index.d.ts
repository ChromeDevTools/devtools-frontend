import { Rule, Linter } from 'eslint';

declare const plugin: {
    meta: {
        name: string;
        version: string;
    };
    rules: {
        'consistent-output': Rule.RuleModule;
        'fixer-return': Rule.RuleModule;
        'meta-property-ordering': Rule.RuleModule;
        'no-deprecated-context-methods': Rule.RuleModule;
        'no-deprecated-report-api': Rule.RuleModule;
        'no-identical-tests': Rule.RuleModule;
        'no-meta-replaced-by': Rule.RuleModule;
        'no-meta-schema-default': Rule.RuleModule;
        'no-missing-message-ids': Rule.RuleModule;
        'no-missing-placeholders': Rule.RuleModule;
        'no-only-tests': Rule.RuleModule;
        'no-property-in-node': Rule.RuleModule;
        'no-unused-message-ids': Rule.RuleModule;
        'no-unused-placeholders': Rule.RuleModule;
        'no-useless-token-range': Rule.RuleModule;
        'prefer-message-ids': Rule.RuleModule;
        'prefer-object-rule': Rule.RuleModule;
        'prefer-output-null': Rule.RuleModule;
        'prefer-placeholders': Rule.RuleModule;
        'prefer-replace-text': Rule.RuleModule;
        'report-message-format': Rule.RuleModule;
        'require-meta-default-options': Rule.RuleModule;
        'require-meta-docs-description': Rule.RuleModule;
        'require-meta-docs-recommended': Rule.RuleModule;
        'require-meta-docs-url': Rule.RuleModule;
        'require-meta-fixable': Rule.RuleModule;
        'require-meta-has-suggestions': Rule.RuleModule;
        'require-meta-schema-description': Rule.RuleModule;
        'require-meta-schema': Rule.RuleModule;
        'require-meta-type': Rule.RuleModule;
        'test-case-property-ordering': Rule.RuleModule;
        'test-case-shorthand-strings': Rule.RuleModule;
    };
    configs: {
        all: Linter.Config<Linter.RulesRecord>;
        'all-type-checked': Linter.Config<Linter.RulesRecord>;
        recommended: Linter.Config<Linter.RulesRecord>;
        rules: Linter.Config<Linter.RulesRecord>;
        tests: Linter.Config<Linter.RulesRecord>;
        'rules-recommended': Linter.Config<Linter.RulesRecord>;
        'tests-recommended': Linter.Config<Linter.RulesRecord>;
    };
};

export { plugin as default };
