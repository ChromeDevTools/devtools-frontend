{"version":3,"file":"multilineBlocks.cjs","names":["_iterateJsdoc","_interopRequireDefault","require","e","__esModule","default","checkForShortTags","jsdoc","utils","requireSingleLineUnderCount","tags","length","lastLineWithTag","isUnderCountLimit","hasMultiDescOrType","tagLines","source","reduce","acc","tokens","delimiter","description","desc","name","postDelimiter","postName","postTag","postType","start","tag","type","idx","fixer","number","seedTokens","trimEnd","end","reportJSDoc","checkForShortDescriptions","lastLineWithDesc","descLines","_default","exports","iterateJsdoc","context","allowMultipleTags","minimumLengthForMultiline","Number","POSITIVE_INFINITY","multilineTags","noFinalLineText","noMultilineBlocks","noSingleLineBlocks","noZeroLineText","singleLineTags","options","sourceLength","isInvalidSingleLine","tagName","includes","slice","makeMultiline","lineChecks","line","emptyTokens","addLine","finalLine","finalLineTokens","trim","prop","hasATag","filterTags","tg","obj","lineEnd","nme","typ","nameOrDescription","iterateAllJsdocs","meta","docs","url","fixable","schema","additionalProperties","properties","anyOf","enum","items","module"],"sources":["../../src/rules/multilineBlocks.js"],"sourcesContent":["import iterateJsdoc from '../iterateJsdoc.js';\n\n/**\n * @param {import('@es-joy/jsdoccomment').JsdocBlockWithInline} jsdoc\n * @param {import('../iterateJsdoc.js').Utils} utils\n * @param {number} requireSingleLineUnderCount\n */\nconst checkForShortTags = (jsdoc, utils, requireSingleLineUnderCount) => {\n  if (!requireSingleLineUnderCount || !jsdoc.tags.length) {\n    return false;\n  }\n\n  let lastLineWithTag = 0;\n  let isUnderCountLimit = false;\n  let hasMultiDescOrType = false;\n  const tagLines = jsdoc.source.reduce((acc, {\n    tokens: {\n      delimiter,\n      description: desc,\n      name,\n      postDelimiter,\n      postName,\n      postTag,\n      postType,\n      start,\n      tag,\n      type,\n    },\n  }, idx) => {\n    if (tag.length) {\n      lastLineWithTag = idx;\n      if (\n        start.length + delimiter.length + postDelimiter.length +\n        type.length + postType.length + name.length + postName.length +\n        tag.length + postTag.length + desc.length <\n          requireSingleLineUnderCount\n      ) {\n        isUnderCountLimit = true;\n      }\n\n      return acc + 1;\n    } else if (desc.length || type.length) {\n      hasMultiDescOrType = true;\n      return acc;\n    }\n\n    return acc;\n  }, 0);\n  // Could be tagLines > 1\n  if (!hasMultiDescOrType && isUnderCountLimit && tagLines === 1) {\n    const fixer = () => {\n      const tokens = jsdoc.source[lastLineWithTag].tokens;\n      jsdoc.source = [\n        {\n          number: 0,\n          source: '',\n          tokens: utils.seedTokens({\n            delimiter: '/**',\n            description: tokens.description.trimEnd() + ' ',\n            end: '*/',\n            name: tokens.name,\n            postDelimiter: ' ',\n            postName: tokens.postName,\n            postTag: tokens.postTag,\n            postType: tokens.postType,\n            start: jsdoc.source[0].tokens.start,\n            tag: tokens.tag,\n            type: tokens.type,\n          }),\n        },\n      ];\n    };\n\n    utils.reportJSDoc(\n      'Description is too short to be multi-line.',\n      null,\n      fixer,\n    );\n    return true;\n  }\n\n  return false;\n};\n\n/**\n * @param {import('@es-joy/jsdoccomment').JsdocBlockWithInline} jsdoc\n * @param {import('../iterateJsdoc.js').Utils} utils\n * @param {number} requireSingleLineUnderCount\n */\nconst checkForShortDescriptions = (jsdoc, utils, requireSingleLineUnderCount) => {\n  if (!requireSingleLineUnderCount || jsdoc.tags.length) {\n    return false;\n  }\n\n  let lastLineWithDesc = 0;\n  let isUnderCountLimit = false;\n  const descLines = jsdoc.source.reduce((acc, {\n    tokens: {\n      delimiter,\n      description: desc,\n      postDelimiter,\n      start,\n    },\n  }, idx) => {\n    if (desc.length) {\n      lastLineWithDesc = idx;\n      if (\n        start.length + delimiter.length + postDelimiter.length + desc.length <\n          requireSingleLineUnderCount\n      ) {\n        isUnderCountLimit = true;\n      }\n\n      return acc + 1;\n    }\n\n    return acc;\n  }, 0);\n  // Could be descLines > 1\n  if (isUnderCountLimit && descLines === 1) {\n    const fixer = () => {\n      const desc = jsdoc.source[lastLineWithDesc].tokens.description;\n      jsdoc.source = [\n        {\n          number: 0,\n          source: '',\n          tokens: utils.seedTokens({\n            delimiter: '/**',\n            description: desc.trimEnd() + ' ',\n            end: '*/',\n            postDelimiter: ' ',\n            start: jsdoc.source[0].tokens.start,\n          }),\n        },\n      ];\n    };\n\n    utils.reportJSDoc(\n      'Description is too short to be multi-line.',\n      null,\n      fixer,\n    );\n    return true;\n  }\n\n  return false;\n};\n\nexport default iterateJsdoc(({\n  context,\n  jsdoc,\n  utils,\n}) => {\n  const {\n    allowMultipleTags = true,\n    minimumLengthForMultiline = Number.POSITIVE_INFINITY,\n    multilineTags = [\n      '*',\n    ],\n    noFinalLineText = true,\n    noMultilineBlocks = false,\n    noSingleLineBlocks = false,\n    noZeroLineText = true,\n    requireSingleLineUnderCount = null,\n    singleLineTags = [\n      'lends', 'type',\n    ],\n  } = context.options[0] || {};\n\n  const {\n    source: [\n      {\n        tokens,\n      },\n    ],\n  } = jsdoc;\n  const {\n    description,\n    tag,\n  } = tokens;\n  const sourceLength = jsdoc.source.length;\n\n  /**\n   * @param {string} tagName\n   * @returns {boolean}\n   */\n  const isInvalidSingleLine = (tagName) => {\n    return noSingleLineBlocks &&\n      (!tagName ||\n      !singleLineTags.includes(tagName) && !singleLineTags.includes('*'));\n  };\n\n  if (sourceLength === 1) {\n    if (!isInvalidSingleLine(tag.slice(1))) {\n      return;\n    }\n\n    const fixer = () => {\n      utils.makeMultiline();\n    };\n\n    utils.reportJSDoc(\n      'Single line blocks are not permitted by your configuration.',\n      null,\n      fixer,\n      true,\n    );\n\n    return;\n  }\n\n  if (checkForShortDescriptions(jsdoc, utils, requireSingleLineUnderCount)\n  ) {\n    return;\n  }\n\n  if (checkForShortTags(jsdoc, utils, requireSingleLineUnderCount)\n  ) {\n    return;\n  }\n\n  const lineChecks = () => {\n    if (\n      noZeroLineText &&\n      (tag || description)\n    ) {\n      const fixer = () => {\n        const line = {\n          ...tokens,\n        };\n        utils.emptyTokens(tokens);\n        const {\n          tokens: {\n            delimiter,\n            start,\n          },\n        } = jsdoc.source[1];\n        utils.addLine(1, {\n          ...line,\n          delimiter,\n          start,\n        });\n      };\n\n      utils.reportJSDoc(\n        'Should have no text on the \"0th\" line (after the `/**`).',\n        null,\n        fixer,\n      );\n\n      return;\n    }\n\n    const finalLine = jsdoc.source[jsdoc.source.length - 1];\n    const finalLineTokens = finalLine.tokens;\n    if (\n      noFinalLineText &&\n      finalLineTokens.description.trim()\n    ) {\n      const fixer = () => {\n        const line = {\n          ...finalLineTokens,\n        };\n        line.description = line.description.trimEnd();\n\n        const {\n          delimiter,\n        } = line;\n\n        for (const prop of [\n          'delimiter',\n          'postDelimiter',\n          'tag',\n          'type',\n          'lineEnd',\n          'postType',\n          'postTag',\n          'name',\n          'postName',\n          'description',\n        ]) {\n          finalLineTokens[\n            /**\n             * @type {\"delimiter\"|\"postDelimiter\"|\"tag\"|\"type\"|\n             *   \"lineEnd\"|\"postType\"|\"postTag\"|\"name\"|\n             *   \"postName\"|\"description\"}\n             */ (\n              prop\n            )\n          ] = '';\n        }\n\n        utils.addLine(jsdoc.source.length - 1, {\n          ...line,\n          delimiter,\n          end: '',\n        });\n      };\n\n      utils.reportJSDoc(\n        'Should have no text on the final line (before the `*/`).',\n        null,\n        fixer,\n      );\n    }\n  };\n\n  if (noMultilineBlocks) {\n    if (\n      jsdoc.tags.length &&\n      (multilineTags.includes('*') || utils.hasATag(multilineTags))\n    ) {\n      lineChecks();\n\n      return;\n    }\n\n    if (jsdoc.description.length >= minimumLengthForMultiline) {\n      lineChecks();\n\n      return;\n    }\n\n    if (\n      noSingleLineBlocks &&\n      (!jsdoc.tags.length ||\n      !utils.filterTags(({\n        tag: tg,\n      }) => {\n        return !isInvalidSingleLine(tg);\n      }).length)\n    ) {\n      utils.reportJSDoc(\n        'Multiline jsdoc blocks are prohibited by ' +\n          'your configuration but fixing would result in a single ' +\n          'line block which you have prohibited with `noSingleLineBlocks`.',\n      );\n\n      return;\n    }\n\n    if (jsdoc.tags.length > 1) {\n      if (!allowMultipleTags) {\n        utils.reportJSDoc(\n          'Multiline jsdoc blocks are prohibited by ' +\n            'your configuration but the block has multiple tags.',\n        );\n\n        return;\n      }\n    } else if (jsdoc.tags.length === 1 && jsdoc.description.trim()) {\n      if (!allowMultipleTags) {\n        utils.reportJSDoc(\n          'Multiline jsdoc blocks are prohibited by ' +\n            'your configuration but the block has a description with a tag.',\n        );\n\n        return;\n      }\n    } else {\n      const fixer = () => {\n        jsdoc.source = [\n          {\n            number: 1,\n            source: '',\n            tokens: jsdoc.source.reduce((obj, {\n              tokens: {\n                description: desc,\n                lineEnd,\n                name: nme,\n                postName,\n                postTag,\n                postType,\n                tag: tg,\n                type: typ,\n              },\n            }) => {\n              if (typ) {\n                obj.type = typ;\n              }\n\n              if (tg && typ && nme) {\n                obj.postType = postType;\n              }\n\n              if (nme) {\n                obj.name += nme;\n              }\n\n              if (nme && desc) {\n                obj.postName = postName;\n              }\n\n              obj.description += desc;\n\n              const nameOrDescription = obj.description || obj.name;\n              if (\n                nameOrDescription && nameOrDescription.slice(-1) !== ' '\n              ) {\n                obj.description += ' ';\n              }\n\n              obj.lineEnd = lineEnd;\n\n              // Already filtered for multiple tags\n              obj.tag += tg;\n              if (tg) {\n                obj.postTag = postTag || ' ';\n              }\n\n              return obj;\n            }, utils.seedTokens({\n              delimiter: '/**',\n              end: '*/',\n              postDelimiter: ' ',\n            })),\n          },\n        ];\n      };\n\n      utils.reportJSDoc(\n        'Multiline jsdoc blocks are prohibited by ' +\n          'your configuration.',\n        null,\n        fixer,\n      );\n\n      return;\n    }\n  }\n\n  lineChecks();\n}, {\n  iterateAllJsdocs: true,\n  meta: {\n    docs: {\n      description: 'Controls how and whether jsdoc blocks can be expressed as single or multiple line blocks.',\n      url: 'https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/multiline-blocks.md#repos-sticky-header',\n    },\n    fixable: 'code',\n    schema: [\n      {\n        additionalProperties: false,\n        properties: {\n          allowMultipleTags: {\n            type: 'boolean',\n          },\n          minimumLengthForMultiline: {\n            type: 'integer',\n          },\n          multilineTags: {\n            anyOf: [\n              {\n                enum: [\n                  '*',\n                ],\n                type: 'string',\n              }, {\n                items: {\n                  type: 'string',\n                },\n                type: 'array',\n              },\n            ],\n          },\n          noFinalLineText: {\n            type: 'boolean',\n          },\n          noMultilineBlocks: {\n            type: 'boolean',\n          },\n          noSingleLineBlocks: {\n            type: 'boolean',\n          },\n          noZeroLineText: {\n            type: 'boolean',\n          },\n          requireSingleLineUnderCount: {\n            type: 'number',\n          },\n          singleLineTags: {\n            items: {\n              type: 'string',\n            },\n            type: 'array',\n          },\n        },\n        type: 'object',\n      },\n    ],\n    type: 'suggestion',\n  },\n});\n"],"mappings":"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","ignoreList":[]}